00:06 - hey everybody welcome to live coding
00:07 - with jesse i'm jesse
00:10 - and today
00:12 - we have a lot to talk about
00:14 - and we have a lot to do
00:16 - we're going to set up
00:20 - custom
00:21 - routing
00:23 - for
00:24 - our
00:25 - react.js app so we use next
00:28 - and next comes built in with its own
00:31 - routing but we need to do a little bit
00:33 - more than that
00:35 - and you'll see what i mean as we go
00:36 - through it
00:39 - but we're going to need to set up our
00:40 - own server.js
00:42 - file
00:43 - and we're going to start out with the
00:46 - markup that they give in
00:48 - the next
00:50 - readme file
00:52 - so you'll be able to follow along if
00:55 - you check out the github repo for next
00:58 - js
00:59 - uh it'll be
01:02 - i don't remember what section it's in
01:04 - but i'll show you all in a minute
01:10 - so first let me tell you i don't know if
01:13 - everyone caught my tweet yesterday but i
01:15 - had a bunch of meetings
01:17 - and one of the meetings the last one of
01:19 - the day was about
01:21 - this project that we're working on
01:25 - so i just want to bring everybody up to
01:27 - speed on what
01:29 - what was decided what was was said uh at
01:32 - the meeting
01:33 - so
01:35 - i am hopefully soon i was hoping i'd get
01:37 - it today but i wasn't really realistic
01:40 - but i will have access
01:43 - uh to the the server where all the
01:47 - content
01:48 - for the the current main site
01:50 - franciscan.edu
01:53 - is so
01:55 - i should have access and then my
01:57 - colleague uh brian sizemore
02:00 - um who recently became our full stack
02:04 - developer
02:05 - uh will
02:08 - uh we'll both have access so we're going
02:10 - to check that out
02:12 - see what's going on because neither one
02:14 - of us really have any idea how things
02:17 - are structured
02:19 - so that should give us a much better
02:20 - idea of what we're dealing with and then
02:22 - we can
02:23 - go forward with the best way
02:26 - to handle that data
02:29 - so that's in the works and we're just
02:31 - waiting on our our accounts
02:35 - we're going to get
02:37 - as i said on
02:40 - the react side of things we're going to
02:42 - get our routing set up
02:44 - and then we'll set up some templates for
02:46 - the different page types that we'll have
02:49 - so they'll only be a few
02:51 - different
02:52 - let's say like templates if you were
02:54 - so uh to templates
02:59 - and
03:00 - it should make
03:02 - it should make things pretty simple if
03:05 - you were to look at the file structure
03:07 - but there's going to be a lot of
03:08 - different you know combinations of
03:10 - content that will be possible so the
03:12 - site
03:13 - to the user is going to look
03:16 - pretty big but we're gonna try to keep
03:18 - it as simple as possible
03:20 - uh in our our file structure for
03:24 - uh our react project the content
03:26 - management system
03:28 - will try to keep it as simple as
03:30 - possible as well but there's no way
03:31 - getting around the fact that there's
03:33 - going to be a ton of content
03:36 - we um
03:39 - oh
03:40 - another big part of this
03:42 - that i'd like us all to be thinking
03:44 - about because it's where i'd like to
03:46 - work on it it's something i've never
03:47 - done before
03:50 - so i was reading the article recently
03:52 - i'll bring it up
03:56 - alright so
03:58 - let me see
04:00 - apollo i can't remember all the the
04:03 - terminology okay so apollo
04:06 - um
04:08 - they're dev blog
04:10 - so apollo uh
04:14 - lets you work with graphql so we worked
04:16 - with it before i think on our last
04:17 - project
04:18 - um
04:20 - they're talking about
04:21 - what they call
04:24 - a uh a gateway
04:28 - uh graphql gateway
04:32 - so
04:33 - it seems like for them this is like a
04:35 - pre-packaged kind of like product
04:37 - right
04:38 - i don't know that we'll actually use
04:40 - this or
04:41 - that it's
04:42 - ready for production yet
04:46 - but
04:47 - i i read the article a while ago so
04:50 - i'm not
04:51 - i'm going a bit from memory here
04:54 - so
04:55 - basically what it will do
04:58 - is
05:00 - it's gonna sit
05:02 - uh between
05:04 - our content management system so imagine
05:08 - i should have like drawn up a sketch of
05:10 - this
05:11 - hopefully you all understand let me know
05:13 - if i'm making no sense here and i need
05:15 - to just show you
05:16 - uh like a diagram but basically
05:19 - we have our content management system
05:21 - our database over here
05:23 - we have
05:24 - our user's way over here right our
05:27 - client right so
05:28 - the data is right now
05:32 - what we've been doing is the data goes
05:34 - from the content management system
05:35 - through graphql api that that's on the
05:39 - content management system right so we've
05:41 - done a wordpress plugin
05:43 - and it goes right to our react
05:47 - site so
05:48 - it goes to our servers we're running you
05:50 - know node on the servers
05:52 - and then it goes directly to
05:55 - the user
05:57 - what i want to do is to have
06:00 - a server in between
06:02 - so which would be this graphql gateway
06:05 - as as it's called in in this article
06:07 - from
06:09 - apollo
06:11 - so the gateway would stitch together
06:14 - different endpoints so like we could
06:16 - have the wordpress api
06:19 - and then we could have data from a bunch
06:21 - of other different places
06:24 - bring them all together
06:25 - and then
06:27 - piece them together on this gateway
06:31 - in whatever format we wanted so that we
06:33 - could make one api call
06:35 - back to the gateway
06:37 - and request resources from multiple
06:40 - sources right
06:42 - but
06:43 - it'll all come together and be sent
06:46 - as if it were
06:48 - just from one source
06:50 - and that gateway won't just stitch them
06:52 - together it will also cache
06:55 - a lot of the the calls as well
06:58 - so that's what i'd like to
07:00 - do i think it could simplify things a
07:03 - lot and really allow us to
07:06 - i mean let's let's say
07:08 - for example we're using one system to
07:11 - manage our events and we want to show
07:13 - the events on our page
07:16 - well
07:17 - we'll grab the data from the events
07:19 - through
07:20 - whatever api that this events thing
07:22 - comes with
07:24 - well what if we switch to a different
07:25 - system
07:27 - potentially
07:29 - we would have to go back and change how
07:31 - we're doing our api calls
07:33 - on our
07:34 - on the react side of things right right
07:36 - from our
07:37 - probably from our server.js file or so
07:40 - depending on how we have it
07:42 - we have to change it there
07:44 - well what if
07:46 - instead we had that gateway we don't
07:49 - have to change anything in our react
07:51 - apps
07:52 - all we have to do
07:54 - is just make sure in the gateway that
07:57 - it's calling to the right place
07:59 - uh i think that would
08:01 - we're adding another piece but i think
08:03 - ultimately it would simplify things and
08:05 - that we would
08:06 - we wouldn't have to touch our
08:09 - our react application which will be
08:12 - um
08:15 - reproduced you know to be copied among
08:17 - multiple servers and we'll be using load
08:19 - balancing so
08:21 - it wouldn't be just changing it on one
08:23 - it would be changing it on all those um
08:27 - you know in all those places
08:29 - i don't know let me know what you all
08:31 - think if you need more info
08:33 - uh i guess i could link
08:36 - let me put the link to the article in
08:38 - the live chat now
08:40 - and um
08:42 - if you're watching this later on and you
08:44 - want the link as well just put something
08:46 - in the comments and then i'll i'll put
08:48 - the link in i'm not going to bother with
08:50 - if nobody's interested but just let me
08:52 - know and um and you you can read a
08:56 - little bit about you know about how i
08:58 - want to do this it's not necessary for
08:59 - the project to work
09:01 - we've done it before
09:03 - you know where it's worked without that
09:06 - but i think it would be nice to have
09:08 - uh so i'm not gonna say it's it's not on
09:11 - the wish list you know wishlist things
09:14 - are like stuff that probably is not
09:15 - gonna happen unless we have a bunch of
09:17 - free time
09:18 - when does that ever happen right
09:20 - um
09:22 - so it's it's not at that level i would
09:24 - say it's a little bit
09:26 - more important to me than than wishlist
09:29 - right now
09:31 - so anyway if anybody's interested in
09:34 - that if you take a look at the uh the
09:36 - article and think like hey i've done
09:38 - that before or
09:40 - uh or you want to learn more about it
09:42 - you know let me know i'd love to uh to
09:44 - talk to you more about it and and see if
09:47 - you all think that that's a good idea or
09:50 - if i'm if i'm crazy and we don't need
09:52 - anything like that
09:54 - all right um
09:57 - i'm talking a lot at the beginning of
09:58 - the session but i haven't streamed for a
10:00 - long time so
10:03 - i need to make sure we we're all caught
10:05 - up a couple of pull requests just fix
10:07 - some bugs and things so um you could
10:09 - check that out i think we remember three
10:11 - pull requests this morning uh all from
10:12 - harshit so uh fix some bugs updated
10:16 - packages and uh updated the readme
10:20 - and our contributing
10:22 - dot md files
10:24 - so
10:26 - uh you can take a look at those if you
10:28 - want just the last three that have been
10:31 - have been been in there i think it's
10:32 - like 25 26 27 something like that for
10:36 - for the pr numbers
10:38 - uh the last thing i want to say is this
10:40 - will be my last stream
10:43 - of the week
10:45 - tomorrow
10:46 - is thanksgiving here in the united
10:48 - states so happy thanksgiving to everyone
10:50 - that will be celebrating that so i won't
10:53 - be streaming
10:54 - tomorrow i also have the next day off
10:56 - which is friday
10:59 - and then on sunday i fly down to
11:01 - nashville
11:03 - and i have the november conference on
11:06 - monday and tuesday
11:08 - wednesday i'll fly back sometime on
11:10 - wednesday so i won't stream wednesday
11:12 - either so i won't be back
11:16 - until
11:17 - thursday
11:18 - so i don't know what the internet's
11:21 - going to be like at the november
11:22 - conference it would be cool if i could
11:24 - do some sort of stream or video from
11:26 - there but i can't guarantee anything
11:29 - and you know until i see what the
11:30 - internet's like
11:32 - uh maybe i might be able to pull off
11:34 - some sort of like instagram live stream
11:36 - video
11:37 - those usually don't take
11:39 - you don't need as good a connection to
11:41 - do something like that it seems like
11:44 - um
11:45 - so i know a lot of you already follow me
11:47 - on instagram but if you're on there and
11:49 - you want to maybe i'll do some like live
11:52 - shots of the uh of the
11:54 - conference
11:56 - um
11:57 - but whatever i mean whatever you all
11:59 - think might be interesting uh for me to
12:02 - show you at the conference let me know
12:04 - and i'll do that
12:07 - also my talk is going to be about my
12:09 - live streams
12:10 - so
12:12 - i mean my talk's pretty much
12:14 - it's set it's done but
12:18 - if i'd like to get
12:21 - if i talk really fast and i get done
12:23 - with my talk early i think it would be
12:25 - cool to have some stories
12:28 - or like examples of cool things that
12:30 - have happened with with the the live
12:32 - coding sessions
12:34 - so i've been going back through some of
12:36 - the live chats and the comments and and
12:38 - trying to remember some of the cool
12:40 - things that have happened
12:41 - and i'm just going to have kind of a
12:43 - list of them ready to go
12:45 - uh so that i can share those with
12:46 - everyone so
12:48 - if you have anything memorable to say
12:51 - about these streams or if there's
12:52 - something especially something you you
12:54 - haven't told me before if they've
12:56 - impacted
12:58 - your life or your coding in in any type
13:01 - of way you know meaningful or trivial
13:04 - please let me know and then
13:07 - they say maybe if i have time
13:09 - uh i'll i'll bring it up in my
13:12 - in my talk
13:14 - and uh
13:15 - yeah so that i thought that that might
13:17 - be kind of cool
13:19 - i thought people might like to hear like
13:21 - some some actual stories of um of from
13:24 - you all
13:26 - from watching the um
13:28 - watching the stream so
13:31 - anyway
13:32 - enough with the talking i could see uh
13:37 - when i talk i usually uh lose viewers so
13:41 - let's get to the coding
13:45 - all right
13:47 - we will
13:50 - this whoops let me switch to the right
13:52 - view here
13:53 - almost started coding without showing
13:55 - the code all right so now you should be
13:58 - able to see the code
14:00 - um let's see okay uh blake is asking if
14:05 - we're using next js or gatsby we have
14:08 - switched to next js so we're using next
14:11 - um as
14:13 - in the for the foreseeable future we're
14:15 - using next
14:16 - uh
14:18 - maybe
14:19 - i mean we have time to switch to
14:21 - something else we got a couple of months
14:22 - for this project we're still early on so
14:24 - i'm not saying it's for sure 100 gonna
14:26 - be next but it's looking like that right
14:28 - now
14:31 - uh below us if i'm feeling better uh i
14:33 - am feeling better i'm not a hundred
14:35 - percent yet but i'm feeling a lot better
14:38 - so um
14:40 - i think maybe another day or two i'll be
14:42 - i'll be 100 back to normal
14:46 - uh which is glad i was not i did really
14:48 - didn't want to fly and have to give a
14:50 - talk at a conference if i was sick
14:53 - so it doesn't look like it's going to
14:54 - happen now
14:56 - that should be good
14:58 - all right so
15:00 - first thing we need to do is make a
15:02 - server.js
15:04 - file
15:05 - and
15:10 - let me uh uh too many folders open here
15:17 - all right this will simplify things
15:22 - all right so we want to add this new
15:25 - file
15:28 - server.js
15:31 - and
15:33 - i'm going to bring over
15:39 - so right now i'm just going to copy and
15:41 - paste
15:46 - what's in the
15:47 - next
15:49 - docs
15:51 - so just their example we'll definitely
15:52 - want to edit this but we can go through
15:55 - this now and see
15:57 - see what's going on
16:01 - so
16:04 - okay make sure syntax is
16:07 - you paddle with carrying the version
16:08 - you're running
16:10 - okay let's get rid of these we don't
16:12 - need these comments anymore
16:15 - um
16:23 - the part that we're really gonna edit a
16:26 - lot
16:28 - is gonna be
16:30 - this part down here
16:33 - it's been a few months since i've done
16:35 - this with next
16:38 - and as always i haven't really done that
16:40 - much with it before the stream so
16:43 - so we're going to be going through this
16:44 - um together this tells the first
16:47 - question
16:49 - all right so
17:04 - this actually looks a little bit
17:06 - different than i remember doing it
17:07 - before but we should still be good
17:09 - uh oh if you do want to follow along in
17:12 - the the next documentation uh the
17:14 - section is called custom server
17:16 - and routing
17:20 - so
17:21 - oh
17:23 - actually
17:28 - i think i found some different
17:31 - boilerplate code that may run better for
17:44 - us all right so we have two
17:58 - all right let me let me bring over this
18:00 - other code so i um
18:05 - we're going to bring in some other code
18:07 - that's basically just going to do some
18:08 - of the other things for us that we want
18:10 - to do it's going to speed things up
18:12 - quite a bit
18:13 - so this is basically the same as we had
18:15 - before
18:16 - but in addition this has our
18:20 - our caching so our server side render
18:22 - caching this should look familiar if you
18:26 - remember how we did this on
18:28 - um
18:31 - project one i think it was project one
18:33 - that we did this right so
18:35 - next does
18:37 - server-side rendering
18:40 - and in this case what we can do then
18:43 - is
18:44 - those pages it'll it'll keep
18:47 - the pages
18:48 - the actual html
18:50 - it'll save them in this case for an hour
18:54 - so that when a request comes in
18:57 - it doesn't have to redo everything right
18:59 - it's not re-rendering everything
19:02 - it just sends it
19:03 - which is really nice uh it's going to be
19:06 - a lot faster
19:07 - right it doesn't have to make all the
19:09 - same api calls again to get the data
19:11 - it's there
19:12 - um
19:13 - so you can see
19:15 - it takes i mean it's just not a lot of
19:17 - code 70 lines total but
19:20 - you know it saves a lot of typing uh
19:23 - that we have that
19:24 - we've gotten that example code here
19:27 - okay and what it also has in here
19:30 - um
19:31 - is we're using a few things that we
19:34 - didn't have before
19:36 - right so express uh this lru cache right
19:40 - so we're gonna need to make sure that
19:44 - let's double check what we need to bring
19:46 - in
19:46 - in terms of packages
19:50 - yeah so i think we will need to bring in
19:52 - express and the lru cache let's double
19:55 - check our package json
20:01 - let's just see what we have
20:06 - yeah and we don't have that so
20:11 - first thing we need to do is bring that
20:13 - in
20:14 - oops there it is
20:16 - so
20:17 - let's go yarn add
20:23 - express and lru
20:27 - cash
20:35 - um so i did on
20:37 - what was it monday i did that kind of
20:39 - like quiet live uh coding session on my
20:42 - own channel
20:44 - because i was still feeling pretty sick
20:46 - uh let me know what you all think about
20:48 - that
20:49 - is that worth it to do those
20:51 - occasionally
20:52 - uh was it really boring was it useful i
20:55 - mean i did try to explain things a
20:56 - little bit so it wasn't completely quiet
20:58 - but
21:00 - um if if you found it helpful
21:04 - you know i could do some stuff like that
21:06 - for some of these other projects that i
21:07 - don't usually stream for this stream
21:10 - um
21:12 - you know let me know
21:14 - so i do work on some other things that i
21:17 - you know they're just not
21:19 - they're not really big projects so
21:21 - uh that might be a better format to um
21:24 - to live stream some of that
21:28 - okay so we have these now
21:32 - so this should work
21:34 - and
21:37 - let's see
21:40 - okay cool uh blake
21:42 - blake and rook liked it said maybe do
21:44 - this in the morning yeah that's what i
21:46 - was thinking maybe in the morning i can
21:48 - do that and um
21:51 - it's not really a lot of extra work for
21:52 - me i don't make thumbnails for those
21:54 - videos i i just
21:57 - um it's a lot less work to try to set it
22:00 - up
22:01 - and i can just kind of start it and
22:04 - and go it's it's pretty easy so
22:07 - um
22:09 - i like to be a little bit more
22:10 - professional for the free code cam
22:12 - channel on my own channel i don't i
22:14 - don't care as much
22:18 - okay
22:19 - all right here we go great i was looking
22:21 - for this part
22:23 - so i mentioned parameterized routing and
22:26 - that's so there were two main things
22:28 - that i wanted
22:29 - it from this custom server that we
22:31 - really needed you know otherwise it's
22:33 - like why bother we already have browning
22:35 - built into next but the two things are
22:37 - the server side caching which we just
22:40 - looked at
22:41 - and
22:42 - i guess we really didn't explain it all
22:44 - but we could go through that in just a
22:46 - minute uh and then also this
22:47 - parameterized routing which basically
22:49 - means we can go here
22:51 - and have if we have a route that says
22:54 - it will be franciscan.edu blog
22:57 - then whatever comes after the blog
23:01 - will be the id and that will actually
23:03 - get passed to
23:05 - our component we'll put
23:08 - we're not going to have a blog in here
23:09 - but let's just pretend like we are so in
23:11 - our in our pages file
23:15 - where that's where normally the routes
23:16 - would go right every page would be its
23:18 - own route it's still going to be like
23:20 - that
23:22 - but if you go to the blog page
23:24 - we'll grab that id
23:27 - and we'll be able to use that id
23:30 - to pull in the right data so think of
23:33 - like
23:34 - how we use the slugs
23:36 - in our last that bulletin project
23:39 - to get the the name of the post that we
23:42 - wanted uh from graphql so we'll be able
23:45 - to pull that data
23:47 - and then
23:49 - fill the page in with that data so the
23:51 - one page the blog page so the blog
23:54 - component
23:55 - will be able to be used
23:58 - for potentially hundreds of pages
24:01 - depending on how much content we have
24:02 - and we only need one component which is
24:04 - awesome
24:07 - uh so that's that's what we want and
24:09 - we'll have we won't just have blogs
24:11 - we'll have you know all different things
24:14 - i've done this before where we've had
24:17 - another page for search
24:19 - and
24:21 - depending on you know what came after
24:23 - that was essentially your search query
24:26 - um
24:29 - so there's a lot of different
24:30 - possibilities of what you could do
24:33 - for now we're going to keep it simple
24:35 - and we're just going to have
24:38 - a test component just to make sure it's
24:40 - working i'll probably change it from
24:42 - blog because we're not going to have a
24:44 - blog so um
24:47 - i'll have to just give it a minute and
24:48 - think about something that we're likely
24:51 - to have
24:53 - maybe
24:57 - maybe departments
24:59 - no not what are they not departments
25:02 - um
25:05 - faculty
25:06 - i for sure i'm pretty sure we're gonna
25:09 - have pages for each faculty member you
25:12 - know with like a picture
25:13 - and a little bit of text
25:15 - uh maybe like links to some videos we
25:18 - have of them or some publications that
25:21 - they've they've written
25:23 - um
25:24 - yeah let's change that now then so we're
25:26 - going to call this
25:29 - faculty
25:33 - you see ulti all right so we're going to
25:35 - have a component called faculty it's
25:37 - going to be super basic for now
25:40 - just to prove our point about what's
25:42 - going on
25:43 - uh so quickly
25:45 - and i totally forgot to start my timer
25:47 - let me do that now
25:49 - uh so quickly let's just go through
25:54 - we've gone through this already so we're
25:55 - fine um but basically what what'll
25:58 - happen is
26:00 - so we're rendering for so for each page
26:05 - so if if we get nothing just the slash
26:08 - right then that's obviously the home
26:09 - page that's still going to render
26:10 - index.js
26:12 - but it's going to render and cache
26:14 - right so let's go through the flow of
26:16 - when a user comes comes in so user goes
26:18 - to the homepage franciscan.edu
26:21 - it calls render and cache which i
26:22 - believe is down here so
26:26 - when it calls render and cache
26:32 - we're going to check to see
26:34 - if that key already exists
26:38 - if we already have the key
26:43 - then
26:44 - let's see if we have key
26:48 - return
26:50 - it's going to lock so we'll be able to
26:51 - see we're logging console logging cache
26:54 - hit right so it's just going to serve
26:56 - from the cache
26:57 - if not
27:00 - then it is actually going to render the
27:01 - page so we're going to render to html
27:03 - we're going to render that page but then
27:06 - we're going going to set the cache key
27:09 - and the html
27:12 - so that the next time we won't re-render
27:17 - so
27:22 - um
27:23 - that's
27:24 - it it's it's actually it's pretty simple
27:26 - you know to to go through it all
27:29 - that's our cash right we're going to
27:30 - have cashing at different levels we're
27:32 - going to run a cdn they'll be caching
27:34 - there we're probably going to do caching
27:37 - on the the cms side of things as well
27:40 - so
27:42 - the goal is to
27:43 - make things as fast as possible for the
27:45 - user
27:46 - and to reduce the load
27:48 - on our servers as much as possible
27:52 - and caching is going to be one way that
27:54 - we do that
27:55 - okay now let's say a user goes to a page
27:58 - that's faculty slash
28:01 - and let's just i'll use my name faculty
28:03 - slash
28:04 - you know jesse weigel
28:07 - they would be directed to
28:09 - um
28:11 - well
28:12 - for the user's perspective they would be
28:13 - directed to that page they'd see my
28:15 - picture and
28:16 - lots of awesome stuff about me
28:20 - but in the background what's happening
28:22 - is
28:24 - these query params are going to be used
28:27 - to grab the right data right
28:31 - from our
28:33 - our apis
28:36 - and then that page will either be
28:40 - rendered if it's not already in the
28:41 - cache or it will just be served
28:44 - right from
28:46 - from the cash
28:48 - so
28:52 - that's about it otherwise if the page is
28:55 - not the home page and it's not the
28:57 - faculty page if it's anything else it's
29:00 - just going to get handled like a normal
29:02 - page so
29:04 - it'll fall back to
29:06 - you know is it a page in here
29:09 - uh if not do we have a an error page set
29:12 - up
29:13 - i don't know if we do or not
29:15 - i'm not sure if we have an error page
29:17 - set up so
29:18 - um
29:19 - basically if it's not a valid route
29:22 - it'll throw
29:24 - it'll just have a you know a four foot
29:26 - error page we'll try to make it look as
29:28 - nice as possible
29:30 - um
29:31 - or it'll just fall back on you know this
29:34 - routing where whatever's in the pages
29:36 - folder will be there uh
29:38 - notice though it does not have the
29:41 - rendering cache set up
29:43 - so
29:46 - i have to see
29:51 - we may end up trying to set this up
29:54 - though
29:57 - i think i did set it up that it would
29:59 - render in cash
30:01 - on all the other routes as well
30:03 - um
30:06 - so i'll have to check on that
30:08 - i'll check back to a previous project
30:10 - and see if we set that up or not
30:13 - okay so that's that's it that's how our
30:15 - server is going to work
30:17 - we'll probably end up adding more to it
30:20 - uh as as things go on
30:23 - anything that should trigger me to
30:25 - change
30:30 - okay
30:32 - so let me show that saved
30:34 - and let's let's make a faculty component
30:37 - so let's grab
30:40 - yeah let's just grab page.js
30:42 - page.js
30:46 - and
30:54 - let's make a new file
30:56 - we'll call this
30:59 - faculty
31:07 - so now we're going to have faculty.js
31:15 - and what we're going to do is
31:20 - let's go with
31:22 - let's just print out um
31:27 - the id so how do we let me see
31:37 - is it this props
31:40 - should i think how we're we're setting
31:42 - these
31:48 - actually let me just save this for now
31:50 - and then i'll just uh use react
31:52 - inspector to figure out i can't remember
31:53 - how we grab the id
31:55 - uh
31:57 - for right now so
31:59 - all right
32:02 - all right so this should should work
32:08 - we don't have crazy errors right now so
32:10 - that's a good sign
32:15 - faculty
32:18 - slash jesse
32:20 - what
32:21 - should work
32:25 - faculty
32:34 - that's weird
32:48 - let's
32:54 - see i may have to go back and check to
32:57 - see what we did in uh project one
33:04 - yeah let me bring up
33:07 - i already have github open on my other
33:09 - screen so
33:10 - let me check on project one for a second
33:22 - i really need to upload an icon for our
33:24 - fus marcom github organization it still
33:28 - just has the default
33:30 - that it came with when i uh when i
33:32 - started it
33:34 - all right so that was the
33:38 - ci
33:39 - react
33:40 - repo
33:41 - so if anybody wants to follow along
33:43 - that's where i'm at
33:44 - so i need to check out the
33:48 - pages and
33:52 - our single event page should work
33:55 - i'll pull this over on on this screen
33:58 - um let me make this bigger
34:03 - how did we bring this in before
34:06 - oh
34:08 - now i remember okay so
34:11 - we were bringing in our um
34:14 - we're bringing it in this way okay
34:17 - uh
34:18 - so we're using get initial props
34:22 - which lets us make api calls
34:25 - and uh server or client side api calls
34:29 - and that's where we brought in our our
34:31 - query
34:33 - query id okay
34:37 - all right that makes a lot more sense
34:45 - okay so let's see
35:04 - let's just
35:14 - bring how am i gonna pull this in
35:18 - otherwise
35:24 - all right let me check my time okay
35:26 - actually did i
35:30 - yeah i'm gonna stick with this timer i
35:32 - know i started a bit late but let me
35:33 - just stick with that
35:34 - um
35:36 - all right let me check the docs
35:40 - for this
35:49 - um
35:50 - just quickly
36:00 - because i don't want to go through all
36:02 - of this
36:03 - with api calls right now
36:17 - so
36:31 - all right
36:46 - all right so i'm checking in the
36:50 - in the next js repo under examples the
36:52 - server side caching example
36:55 - and i'm going to check how they did
36:57 - their blog component
37:03 - okay
37:04 - good the example basically does
37:07 - exactly what i'm trying to do here so
37:10 - what i'm going to do i'm going to copy
37:12 - their example
37:15 - and
37:17 - let's see
37:20 - sticky knife
37:22 - oops no i don't want that
37:24 - where is uh
37:27 - there we go
37:45 - all right let's do this we'll bring in
37:47 - some of the markup
37:49 - and
37:50 - let's change this
37:53 - this div
37:59 - to layout
38:04 - okay this props id
38:06 - all right so here's what we're getting
38:07 - so we're still going to use our get
38:09 - initial props we're just not making any
38:11 - calls we're just going to you know
38:12 - return this
38:14 - so
38:15 - anything that's returned from get
38:17 - initial props goes into the props for
38:20 - that component so we can access it at
38:22 - this props dot id
38:25 - so
38:27 - what will happen i mean
38:29 - i'm just going to leave this text here
38:31 - even though we know it's not a blog post
38:33 - but what will happen then is we should
38:35 - be able to see whatever we type in after
38:37 - faculty should show up here
38:41 - and let's make sure
38:43 - export defaults
38:50 - uh i think i did not grab
38:57 - the rights
39:04 - i didn't grab enough uh semicolons here
39:07 - there we go
39:12 - there we go now i have the right amount
39:14 - um
39:35 - i need to take
39:40 - out this
39:45 - and
39:46 - we're already exporting here
39:48 - [Music]
39:50 - let's go
40:02 - um
40:26 - sorry i've too many windows open i'm
40:28 - trying to find the example code i was
40:30 - using
40:39 - yes
40:55 - all right i think i found it
41:10 - oops
41:22 - all right here's what i'm confused about
41:25 - um
41:26 - how am i going to
41:31 - incorporate this with root
41:35 - into this page
41:45 - let's see
42:07 - yes
42:27 - all right let's
42:28 - it should work um
42:38 - [Music]
42:49 - yeah that should work
42:51 - like that
42:53 - all right we'll give it a shot
42:57 - okay already an improvement here
43:00 - so that's good now let's try out
43:06 - no 404 oh you know what
43:10 - let's restart the server
43:25 - and actually i i'm probably gonna need
43:27 - to change
43:31 - i'm gonna need to change our um
43:35 - how we start this
43:42 - i think i'm forgetting an important part
43:44 - of this
43:45 - so yeah we're still getting the 404
43:50 - uh because we're not
43:54 - um
43:57 - so we're not changing
44:03 - let's see
44:05 - so we need to bring in
44:13 - we need to change a little bit about how
44:15 - we're doing our
44:16 - our um
44:17 - starting everything up so
44:20 - for our dev instead of running
44:25 - next
44:26 - we're going to run
44:29 - node
44:30 - server.js so that's going to start our
44:32 - server then from our server
44:40 - from our server then
44:43 - next is going to
44:46 - start
44:48 - at some point next is gonna do its thing
44:51 - right we'll bring it in up here
44:54 - and
44:57 - there we go
44:59 - so our app is next
45:01 - okay
45:02 - yeah so that's where next is going to
45:04 - come into play so we're not just going
45:05 - to start it automatically uh it's going
45:07 - to start through the um
45:09 - through our server.js
45:11 - oops let's go to our package.json again
45:13 - we also have to change our start command
45:17 - so
45:19 - it's almost the same as our dev command
45:21 - now
45:22 - but
45:24 - what we need is to set the environment
45:28 - to production so we have that node and
45:30 - production and then nodeserver.js
45:34 - so
45:36 - back in our server.js file see it checks
45:40 - to make sure what the environment is
45:42 - right so
45:44 - there's certain things you you don't
45:45 - really want to do in a development
45:47 - environment
45:49 - that you would want to do in production
45:52 - so one of these things is i don't really
45:54 - care about caching in our development
45:56 - environment
45:58 - so
46:00 - i think what i've done before
46:04 - and so if it's not already built into
46:06 - this example
46:08 - uh which i have to double check what
46:10 - we'll do is
46:11 - we can disable the caching
46:15 - if
46:17 - if dev is true
46:23 - okay
46:24 - and i believe that's all we'll need to
46:26 - do for this to work so let me make sure
46:29 - i save this
46:32 - i'm going to save that and then now we
46:34 - will
46:36 - stop this and run yarn dev again
46:39 - and it should look a bit different
46:45 - there we go
46:46 - so
46:47 - [Music]
46:50 - there we go so we can see
46:51 - uh we have a cache hit now
46:55 - so this is my jesse blog post right so
47:04 - my free code can't blog post we can type
47:06 - in anything you want there
47:08 - uh so it works yay
47:14 - all right
47:19 - all right so since we got to that point
47:21 - and it works i'm just gonna start our
47:24 - short break
47:25 - which i can't believe i got it to work
47:27 - that fast
47:30 - i mean to be honest with you i usually
47:31 - expect
47:32 - i expect me to mess up more than i did
47:38 - uh all right so that's cool
47:41 - it did work so let me take my short
47:43 - break now i'll go through the live chat
47:45 - and uh see what you are saying and try
47:48 - to answer any questions you have and
47:49 - then let's decide if we want to do
47:51 - something else
47:53 - if we want to call it a day or or what
48:00 - and i do have a question for you as well
48:01 - let me ask this question i know i asked
48:03 - some questions earlier but
48:06 - um so to reiterate the one question
48:09 - if you have anything cool about this
48:11 - stream some good impact it's had on your
48:14 - coding or your life or anything like
48:16 - that or a good experience you had
48:18 - interacting with people in the stream or
48:20 - with me
48:21 - please let me know and i might
48:23 - incorporate it into my talk at the
48:25 - november conference
48:27 - the second question i have is
48:33 - a
48:35 - so there's a recruiter on linkedin
48:36 - that's trying to get me to
48:39 - for this react
48:40 - contract job so it's like six months
48:43 - uh to do this react project i don't have
48:45 - a lot of details but has anybody ever
48:49 - gotten any recruiting stuff from v dart
48:53 - incorporated
48:55 - i don't know if they're legit or not so
48:57 - let me know if you've ever gotten
48:58 - anything from vdart is it a good deal or
49:00 - what um
49:02 - because i wouldn't mind taking on
49:04 - another project now especially you know
49:06 - it's christmas time it'd be cool to have
49:07 - a little extra money buy some stuff for
49:09 - the kids so
49:10 - if it's legit maybe i'll maybe i'll say
49:13 - yes
49:14 - um i did get
49:18 - um i did get an uh an official rate like
49:22 - offer uh via email so i'm i'm okay with
49:26 - their the hourly rate
49:29 - um
49:33 - anyway so
49:35 - let's see
49:38 - all right so hey everybody there's a lot
49:40 - of people saying hi at the beginning
49:47 - oh cool satya said i actually started
49:50 - learning react after watching your live
49:52 - sessions that's really cool
49:54 - you know i've had a few people that uh
49:57 - that have said that and um
50:00 - i mean reacts already open source but if
50:03 - it wasn't and it was a paid product
50:05 - i would definitely try to get like a
50:07 - commission for everybody that's starting
50:10 - to learn it
50:12 - i officially make no money off of these
50:14 - live streams
50:16 - uh any
50:18 - any endorsements i give or it's my own
50:20 - and i'm not getting paid for it
50:23 - although if someone wants me to endorse
50:24 - their product for money let me know
50:26 - because i might be all right with that
50:30 - [Music]
50:33 - rook says have you used font ligatures
50:36 - and what do you think of them
50:39 - okay font ligatures
50:41 - that sounds familiar to me but i
50:45 - can you explain a little bit more
50:49 - um
50:50 - maybe jog my memory because i like
50:54 - yeah i need a little bit more info
50:56 - my answer is probably going to be i
50:58 - don't know enough about that to even
51:00 - answer that question
51:01 - um but it's possible that i'm just
51:03 - forgetting
51:04 - um
51:06 - so anyway let me know rook
51:13 - um rook also asked does next js get
51:16 - mixed with react router i think you can
51:19 - use react router with
51:20 - next i think i actually looked that up
51:23 - once i can't remember what i found on it
51:26 - um
51:29 - actually no maybe you can't
51:34 - and yeah don't don't take this as for
51:36 - sure but i'm i'm pretty sure when i
51:39 - looked it up the answer was no you don't
51:42 - use next and react react router together
51:44 - but
51:46 - like i said i don't remember for sure
51:48 - what answer i found
51:49 - and
51:50 - you know maybe there's a way but i have
51:52 - never used react router and next
51:54 - together at the same time
51:56 - hey inn is here and it says hey
51:58 - um also asks if i'm okay
52:01 - um yeah i'm okay i'm feeling a lot
52:03 - better i'm not back to
52:05 - back to normal yet
52:07 - but
52:08 - i'm so much better than i was but uh so
52:11 - thank you for asking
52:14 - um
52:16 - ajax
52:18 - says um
52:19 - yo jesse what is the free code cam beta
52:22 - page called so i can get all new
52:25 - practice exercises
52:27 - oh and blake posted the link in there
52:29 - okay so
52:31 - um hopefully that that link worked for
52:33 - you
52:34 - um
52:35 - oh shoot blake reminded me about the
52:37 - ngrok oh no
52:40 - all right let me start up ngrok right
52:42 - now so sorry so sorry i even had it i
52:45 - had it on the screen ready
52:48 - all right let's get this
52:50 - i can't believe i forgot that i was
52:52 - explaining to people in the meeting
52:54 - about this project yesterday what ngrok
52:56 - was and
52:58 - um
53:00 - how how we use it
53:03 - and then i just forgot all right cool
53:05 - the links in the live chat now so sorry
53:08 - about that
53:09 - um
53:11 - really though i mean it would have been
53:12 - weird to run it because
53:14 - we had to restart the servers and
53:15 - everything a few times so
53:19 - we would have only had to restart once
53:20 - if i had known what i was doing and
53:22 - hadn't forgotten
53:24 - to change
53:26 - the startup script
53:31 - okay
53:38 - you know i'm gonna have to check out
53:40 - that beta version of free code i i
53:43 - checked it out a long time ago but i'm
53:45 - sure it's come so far since then and
53:47 - blake even mentions an alpha version of
53:49 - free code camp's lesson
53:52 - so
53:52 - i need to do that i've always wanted to
53:54 - go through and finish my free code camp
53:56 - stuff i just been too busy to do it
54:00 - like skill wise
54:02 - i there's no doubt i could make it
54:04 - through the rest of the
54:06 - the front end
54:08 - portion i mean we do more complicated
54:10 - things here on the stream
54:12 - uh it'd be cool just to get the
54:13 - certificate you know
54:15 - uh and i could probably make it through
54:17 - a lot of the other stuff as well
54:19 - we'd be going into some uncharted
54:21 - territory for me
54:22 - but now i'm thinking
54:25 - should i try or should i just wait and
54:27 - do the new curriculum
54:29 - um
54:30 - so i don't know i think i might i might
54:33 - wait
54:34 - uh we'll see
54:36 - although my wife's doing the free code
54:38 - camp curriculum like the current
54:39 - curriculum right now if she passes me up
54:42 - i might have to start doing it again
54:44 - because i can't have her asking me for
54:47 - help and me not knowing what to do right
54:51 - she's actually going pretty fast through
54:52 - it so
54:54 - she just finished her um
54:56 - well she was working on her weather app
54:58 - so if any of you have done that project
55:01 - uh
55:02 - i get you you'll probably remember
55:06 - let's see
55:07 - i know my timer uh went off but i only
55:09 - have a few more things in the live chat
55:11 - so let me just get through them and then
55:13 - we'll figure out what we're doing next
55:18 - let's see
55:20 - okay rook i see that you're giving me
55:22 - the answer to my issue here with um
55:26 - with our component about setting our you
55:29 - know our export class and everything so
55:32 - sorry i didn't look over there i i asked
55:34 - about it and then didn't didn't look at
55:36 - the live chat so you're entirely right
55:48 - let's see
55:50 - andrew says
55:55 - hey jesse i always see the videos after
55:57 - live streams cool seeing it live awesome
56:00 - i'm glad that you're here live with us
56:02 - feel free to
56:03 - you know say
56:04 - comment or ask questions in in the live
56:07 - chat
56:08 - let's see
56:11 - oh cool rook said also started to learn
56:13 - react after watching your live streams
56:15 - it's great
56:16 - awesome
56:33 - uh let's see in
56:35 - goosemax says afternoon jesse good
56:38 - afternoon thanks for joining us
56:41 - and
56:44 - oh cool blake blake asks how my my wife
56:47 - is rebecca
56:48 - um
56:50 - she's doing all right some of you have
56:52 - if you've been watching a live stream
56:53 - you might know uh she's have been having
56:56 - a lot of health issues over the last
56:58 - year
56:59 - um
57:01 - so she still she she was just at the
57:04 - doctor's
57:05 - yesterday and i got to go pick up some
57:08 - medicine for her after this
57:10 - so i don't know hopefully that the
57:14 - doctors are on the right track and
57:15 - she'll be she'll be back to normal
57:18 - uh but it's been tough it's been a tough
57:21 - it's been a tough year for my wife uh so
57:24 - anyway i appreciate you asking about her
57:26 - but she really is is liking coding
57:29 - and uh she's getting excited about it
57:31 - and oh she actually met with
57:34 - so uh the woman who started and is in
57:37 - charge of um
57:40 - i think like women can code pittsburgh
57:43 - i think that's what it's called
57:46 - uh
57:47 - my wife went up to pittsburgh to meet
57:49 - with her uh today so they had that
57:51 - meeting this morning i haven't talked to
57:52 - her about it but
57:54 - that's cool so i was really happy about
57:56 - that she's getting involved and
57:58 - um you know with coding and with some
58:00 - some local coding groups so
58:03 - anyway i'm i'm happy for i'm i'm really
58:06 - excited
58:07 - and uh
58:09 - yes and i'm i'm hopeful about she's
58:11 - going to be on some new medication
58:13 - um
58:14 - so a couple of
58:16 - the one medication i'm going to pick up
58:18 - today and there's another medication i
58:19 - don't think will be ready until next
58:21 - week and then she has to have some more
58:22 - testing done as well
58:25 - uh so it's a lot but i have good health
58:27 - insurance so i'm really happy for that
58:31 - that's a good the university i work for
58:33 - does provide good health insurance um
58:36 - compared with other universities that
58:38 - are our size it's definitely better than
58:40 - most so anyway
58:42 - um
58:44 - yeah so thank you you know everybody for
58:47 - your concern and uh so i i really
58:50 - appreciate that and
58:53 - who knows you maybe um
58:55 - maybe she'll be doing her own project
58:57 - someday and i can uh
59:00 - i can give you guys a link to her videos
59:06 - oh blake says you retweet her on twitter
59:08 - i think yeah i do i retweet her um yeah
59:11 - so she's not
59:13 - she doesn't really have like uh
59:15 - as many followers on twitter build up so
59:17 - i'm trying to get her
59:19 - her stuff out there and kind of give her
59:22 - some encouragement
59:24 - when she does coding stuff and puts it
59:26 - on twitter so
59:27 - and that's how she met the she's been
59:29 - meeting and talking with a lot of other
59:31 - women who code on on twitter so
59:35 - uh something that's been good for
59:41 - uh let's see happy dave rob says happy
59:44 - day before turkey day yeah
59:48 - um
59:50 - ingo's matt says are you liking next js
59:52 - better than vanilla react slash create
59:54 - react app okay so um
59:59 - yeah that's a really good question
60:01 - so react um
60:04 - i started
60:06 - the first time i ever tried to use react
60:08 - i did use create react app and that was
60:10 - pretty early on
60:12 - um
60:13 - i didn't like it as much then
60:16 - then i built a couple of sites with next
60:18 - js and i love next it was really cool
60:21 - uh there were some issues that i found
60:23 - like somewhat annoying but
60:26 - a lot of them as i worked with it they
60:28 - updated next and took care of those
60:30 - issues so
60:31 - uh that was it was kind of nice that you
60:34 - know they were
60:35 - they updated frequently
60:37 - then i went back and used create react
60:39 - app on some things here on the stream
60:42 - and then as well in my my react
60:45 - nanodegree courses
60:48 - and i really liked it
60:50 - so now going back to next
60:52 - it's a little weird for me
60:55 - i'm having to like get used to the next
60:57 - way of doing things again
61:00 - so i like both but for different things
61:03 - so i'll say if i need server-side
61:05 - rendering i prefer next
61:08 - but if i don't need to worry about
61:09 - server side rendering i prefer create
61:12 - react app
61:13 - i prefer that
61:15 - uh also
61:17 - pairing that with react router and redux
61:20 - if necessary
61:22 - uh i actually like that better
61:25 - so it just depends on the use case
61:29 - uh but
61:30 - they're both really great i think if if
61:32 - you wanted to start out
61:34 - either way would be fine
61:37 - uh they're both pretty easy to use
61:41 - but create react app seems
61:43 - like i said if you don't need server
61:45 - side rendering to me it's it's just a
61:47 - little bit more simple
61:49 - and
61:50 - i like working with react router
61:54 - uh
61:56 - and redux redux was a pain to learn
61:59 - but
62:02 - it's really nice once you kind of get
62:04 - the hang of it and i'm no expert in
62:06 - redux but
62:07 - i know enough to build things that work
62:09 - with it and i really like it
62:15 - although you probably could use redux
62:17 - with neck so i don't want to make it
62:18 - seem like you can't use redux with next
62:20 - i just have never done it
62:24 - okay
62:25 - john hanson says jesse got me going on
62:27 - react uh learning a lot thanks jesse
62:31 - you you're welcome
62:34 - i didn't realize i had so many people uh
62:37 - learning react that's really cool
62:42 - uh rob says sorry to hear about your
62:43 - wife hope she gets well soon thanks rob
62:45 - i appreciate it
62:53 - um
62:54 - dimitar says
62:55 - hi jesse i'm learning node.js i was into
62:59 - java
63:00 - spring boot but now i am working and
63:03 - learning with node.js do you think that
63:06 - i will get on well with that cheers
63:09 - oh i mean i don't
63:12 - i i think node is is pretty easy to to
63:15 - learn it i mean it has been for me and
63:16 - and i'm not
63:18 - i haven't done a lot with node i've you
63:20 - know set up basic servers file upload
63:22 - things um you know handling forms
63:26 - um trying to think
63:28 - you know it's really kind of basic stuff
63:32 - but i don't think it's too hard so i
63:34 - mean i haven't really worked with you or
63:36 - seen your your work but
63:38 - um i think you you ought to do fine if
63:40 - you have experience with you know with
63:42 - other um
63:45 - uh
63:46 - frameworks or
63:48 - um other languages right saying like
63:51 - java spring boot right i think you'll be
63:53 - fine
63:54 - uh with node it's just gonna be concepts
63:58 - should be somewhat similar
64:01 - syntax will be a little bit different
64:04 - but
64:07 - no doubt i think anybody that's learned
64:11 - does some decent learning and any other
64:12 - type of programming would be fine to
64:15 - pick up node and and you know with a
64:17 - little work
64:18 - um you know become good with it
64:23 - let's see
64:31 - englishmen says redux confuses me it
64:34 - confused me so much at first
64:36 - so much
64:38 - um
64:39 - yeah
64:40 - actually i'm gonna do maybe i'll try to
64:42 - do it today i really want to do the uh
64:44 - the video review of the udacity nano
64:48 - react nanodegree
64:49 - um
64:52 - yeah and i want to explain about
64:55 - my experienced learning react in that or
64:58 - learning redux in that course
65:01 - um so
65:03 - i mean just a little preview of it
65:07 - there are three projects you have to do
65:10 - the first one does not involve redux the
65:12 - second one does
65:14 - and the third one redux is optional the
65:17 - second project took so much longer than
65:20 - either of the other projects
65:22 - because i had to learn redux and use it
65:24 - and i ended up using redux in the third
65:27 - project but because i had already
65:28 - learned it
65:30 - it was so easy to implement but
65:32 - i found project 2 to be so much harder
65:35 - than project three project three was
65:37 - with react native
65:39 - so
65:40 - i don't know how they can
65:43 - if they meant it to be like that or if
65:45 - there's some way they can
65:47 - kind of change things up but normally
65:48 - you would expect the last project to be
65:50 - the most difficult but that was not
65:53 - the case for me
65:55 - and i'm not sure if other people had a
65:57 - similar experience but
65:59 - um that was kind of the only
66:02 - surprising thing for me was that the
66:05 - final project just seemed
66:09 - a lot easier
66:11 - uh than than the redux the redux project
66:18 - okay so i've gotten to the bottom of the
66:20 - live chat
66:23 - so at this point
66:24 - let's see there's not a whole lot of
66:26 - viewers still
66:29 - still around we haven't been streaming
66:30 - for that long so i'm open to doing some
66:32 - more
66:36 - um but basically we've done
66:39 - we've completed everything that i wanted
66:41 - to do for this stream
66:43 - um
66:46 - and we've had a decent
66:48 - question and answer period
66:50 - um
66:54 - let me let me commit these uh i'm gonna
66:57 - commit them while we're on the stream
66:58 - all these changes so i don't forget and
67:00 - then if it'll
67:03 - be a nice example of how to commit your
67:05 - changes with get
67:07 - let's do a git status and then i think
67:09 - after that i'm just gonna you know
67:11 - finish up the stream
67:13 - even though it's a bit shorter of a
67:14 - video than normal
67:18 - oops it's
67:20 - status
67:21 - okay so let's see we've added
67:24 - we've modified package json yarn lock
67:27 - which is expected we've added this
67:29 - faculty.js
67:30 - and we've added server.js so this is
67:33 - exactly uh as expected so let's go ahead
67:36 - and do a git add and then a dot for all
67:40 - and then we'll do a git commit
67:45 - and then we'll use an m flag for message
67:48 - commit message
67:49 - and let's say ads
67:54 - add custom server
67:57 - yeah that's that's a good
67:59 - a decent commit message i guess so
68:03 - it's going to run all the tests now
68:06 - hopefully i didn't do things that would
68:07 - break uh my breaking the test
68:10 - link is defined but never used oh okay
68:13 - that's an easy one to fix let's just
68:15 - remove that
68:18 - uh and i am using all the other stuff
68:21 - okay
68:26 - let's try it again
68:30 - i'm a little worried about if it'll pass
68:32 - all the tests with the server
68:34 - set up
68:35 - differently
68:38 - i'm not sure though because harship did
68:40 - all the tests so
68:44 - cool it looks like it works right and we
68:46 - did not write a test for our faculty
68:48 - page so that's something that we will
68:50 - need to do
68:51 - if you notice we only tested index and
68:53 - page two
68:55 - so we'll need a test for that if anybody
68:57 - likes writing tests you know take a shot
68:59 - at it otherwise maybe we'll do it
69:01 - in a future stream
69:04 - and get push
69:07 - origin
69:08 - so we're gonna
69:10 - when we get push uh we've already set up
69:12 - our github repo in a earlier stream so
69:16 - um when we push it's it's going to our
69:20 - repo and that's our franciscan react
69:24 - repo
69:26 - the link to that is in the description
69:28 - if you're interested
69:29 - in checking it out
69:32 - all right
69:34 - uh so i'm gonna check the live chat just
69:36 - one more time see if there's any more
69:38 - questions
69:39 - um
69:42 - vasudev asks
69:44 - hey will there be any project on angular
69:47 - 2 using mongodb
69:49 - um
69:50 - i don't know so there's someone else on
69:53 - the free code cam channel is is
69:55 - currently doing um an angular video so
69:59 - they did one video i don't know how many
70:01 - other videos are going to come out
70:04 - so i don't know what's planned for that
70:06 - so i really i can't answer that
70:09 - um
70:10 - in terms of
70:14 - we are using
70:16 - our last project was it project four
70:20 - i think we're using for that
70:23 - uh is that the one yeah i think that's
70:25 - the one where we're doing some some user
70:28 - and we have some user credentials and
70:30 - things
70:32 - and we may be working more with with
70:36 - uh in the future and future streams as
70:38 - well
70:39 - i i can't say for sure though
70:42 - i'm definitely not working with angular
70:44 - anytime soon
70:45 - not because i don't like angular it's
70:47 - just
70:49 - generally for most the projects here
70:51 - where i work we use we use react
70:54 - it wouldn't really make much sense to
70:56 - throw in an angular project
70:58 - it'd just be a lot more to learn and
71:00 - maintain
71:02 - uh english matches are using
71:04 - mocha
71:05 - um
71:07 - let's see let me let me show the package
71:09 - json here and just so you can see how we
71:11 - have all our tests going so
71:15 - um
71:16 - so yeah so we actually have chai
71:19 - uh and mocha
71:20 - and we're using jest uh so we have um
71:23 - unit tests and we have end-to-end tests
71:26 - so we have a lot
71:27 - going on here uh which is awesome
71:30 - um so here's kind of our dependencies
71:33 - right now and you can check this out in
71:34 - the repo as well yourself
71:37 - and then here's how we have our setting
71:38 - our test set up
71:40 - uh so we have them separated out
71:43 - and then you could also just run test
71:45 - and it'll do both of them
71:48 - and then it's it's mixed into our
71:51 - pre-commit so when you go to commit it
71:53 - runs all the tests as well
71:58 - yeah so if anybody's interested and if
72:01 - you like
72:03 - if you you use mocha or jess you know or
72:07 - whatever we're using and you want to
72:10 - you know contribute i'd really
72:12 - i'd appreciate that
72:14 - uh but i need to get to learn these more
72:16 - myself so
72:18 - uh if i need to write some tests that
72:20 - will probably be good for me as well
72:24 - um okay cool one last thing i think i
72:26 - saw and then we'll wrap things up john
72:28 - hanson says all the best at thanksgiving
72:30 - to you and your family uh thanks john uh
72:33 - to you you too as well um
72:37 - yeah and and um
72:39 - happy thanksgiving to everyone here who
72:40 - will be celebrating
72:42 - and um
72:44 - to those who aren't have a great week
72:46 - uh you probably
72:49 - probably won't hear back from me and
72:52 - probably won't have a live stream
72:54 - you know here uh working on this project
72:57 - till
72:58 - thursday
73:00 - till next thursday
73:03 - assuming that i don't have a million
73:05 - things to do when i get back
73:07 - uh i think i'll be able to stream
73:09 - thursday afternoon so see you then
73:12 - otherwise uh i'll try to put some stuff
73:14 - up maybe on instagram and twitter um
73:17 - from the conference uh from november
73:20 - i don't think my talk's gonna be live
73:22 - streams
73:23 - um
73:25 - i'm hoping that it will be recorded and
73:26 - at least put up on youtube at some point
73:31 - uh but
73:33 - if if not
73:34 - uh then
73:36 - maybe i'll uh i'll do
73:38 - turn it into my own youtube video at
73:40 - some point and then
73:42 - everyone can see it
73:44 - uh
73:45 - in case you you can't come to the
73:46 - conference
73:48 - all right
73:52 - let me
73:54 - i'm always searching for the button to
73:56 - stop streaming it's a big red button you
73:58 - think it'd be easier for me to find
74:00 - anyway have a great week you all thank
74:02 - you so much for all your help
74:05 - and happy thanksgiving