00:00 - const vs. let vs. var
00:02 - These are all ways to 
define variables in Javascript.
00:04 - const and let were 
introduced in ES6
00:06 - but var has been with us
since the beginning.
00:08 - Let's go over 
their differences.
00:10 - const is for values 
that never change.
00:13 - For instance, 
if I have a const Pi
00:17 - and I said 
equal to 3.14...
00:19 - then if I want to 
set Pi again to 1
00:24 - Let me run this. 
If you look over on the side
00:26 - on the console, you'll see 
uncaught type error assignment
00:30 - to constant variable.
00:31 - So I can't assign a constant 
to a constant variable.
00:34 - However if I 
clear my console,
00:35 - and then I changed this 
const to a var
00:38 - and then I run it again
00:40 - no error
00:41 - Just to prove that was running. 
We'll add a console.log
00:48 - And you should see a 1 
show up in the console.
00:51 - Now let's go over let. 
let is for block level variables
00:55 - So for example,
If I have a for loop
00:57 - [typing]
01:05 - and then for loops 
are always in blocks.
01:08 - Blocks are anything
 with these curly braces.
01:12 - let variables, you can see,
I assigned a let variable in the for loop
01:15 - and I am going to
 console.log that...
01:18 - variable that's 
defined with let
01:22 - and as you see 
if I run this
01:25 - It's gonna say 0, 1, 2. 
So it's locking that variable
01:30 - I assigned with the let.
01:32 - Now if I try to console.log 
that variable
01:35 - before the for loop 
and then we try running this...
01:39 - You can see there's 
going to be an error.
01:41 - Same if I take this. 
If I copy this...
01:44 - and then put it 
after the for loop
01:47 - And we would run 
this again.
01:48 - Let me clear the console.
01:49 - I'm going to run this again
01:51 - and you'll see that 
there's another error.
01:54 - When you define something 
with let, it's only available
01:56 - within the block 
that's defined.
01:58 - We are now going to 
go over to var
02:00 - and you'll see 
how it's different.
02:03 - var is for variables 
available to the entire function
02:06 - or if it's not within a function 
to the entire program.
02:08 - I'm just going to copy 
this whole thing
02:10 - and paste it down here.
02:13 - I am doing this 
with a CodePen,
02:15 - but I set the keys to be 
similar to Sublime Text.
02:18 - So if I just 
double click this i
02:21 - and I press Ctrl+D 
and so I'll select each i
02:23 - and then I'm going 
to press [the key] j
02:25 - to switch them 
all to j
02:27 - Now this let,
I'm going to switch to var
02:29 - because we're going to 
define the variable j
02:31 - with var instead of let.
02:33 - Now what I'm going to do 
is I'm going to
02:36 - comment out this 
console.log and let.
02:39 - We're going to 
run this.
02:41 - As you can see,
02:43 - even though this console.log 
is below the for loop,
02:47 - it's still able to log it.
02:49 - Now if I take this 
console.log
02:51 - and put one before
the for loop
02:54 - the other one is 
after the for loop
02:56 - so if I put this one 
before the for loop
02:57 - and run this again, 
you'll see in the console
03:01 - undefined
03:02 - Remember before 
if I assign with let, it said error.
03:06 - Now It's showing 
undefined
03:08 - that means it knows 
the variable exists
03:10 - because when you define 
something with var...
03:12 - it will be available even 
before the time that you assigned it.
03:16 - It knows it exist, 
but it hasn't been assigned yet,
03:19 - so it's showing undefined 
because j does exist,
03:23 - but it just hasn't been defined 
to any number yet.
03:25 - So those are basically 
the differences between
03:28 - const, var, and let. 
And in future videos,
03:31 - I may go into 
even more detail.
03:34 - Thanks for watching!
my name is Beau Carnes.
03:36 - Don't forget to subscribe 
and remember use your code for good.