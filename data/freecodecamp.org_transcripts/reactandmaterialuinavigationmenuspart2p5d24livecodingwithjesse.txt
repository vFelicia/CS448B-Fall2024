00:01 - hey everybody welcome to live coding
00:03 - with jesse
00:05 - i'm jesse and
00:07 - today we're going to continue on with
00:08 - what we were doing yesterday
00:10 - and once we start coding i'll give a
00:12 - little recap of what we did yesterday in
00:14 - case you missed it you can always go
00:16 - back and watch the recording of the
00:18 - stream they're all available on the free
00:20 - code camp youtube channel everything's
00:22 - in the live coding with jesse playlist
00:25 - probably gonna break those out into some
00:27 - some other playlists but we'll always
00:28 - keep keep the one big playlist
00:31 - so it's easy to find everything
00:35 - i just wanna
00:37 - say
00:39 - i wanna explain
00:41 - a little bit about the technical
00:42 - difficulties that have been going on in
00:44 - the last few streams because i think we
00:46 - finally figured it out
00:48 - so harshit
00:50 - and rook both pointed out to me that
00:53 - one of the extensions that i was using
00:55 - in visual studio code was taking up
00:59 - a lot of resources
01:01 - so i hadn't even thought about that i
01:03 - kept looking at all the programs that i
01:05 - had open
01:07 - not even
01:09 - for whatever reason it just didn't cross
01:11 - my mind at all to check out visual
01:13 - studio code but i think that's the
01:14 - problem
01:16 - right now the stream seems to be going
01:18 - fine let me know if it if it's not
01:20 - working for you
01:22 - but i've the plugin is called
01:26 - uh what was it
01:31 - import cost
01:33 - display yeah the plug-in is called
01:35 - import cost
01:37 - so you may have the plug-in and not even
01:39 - realize it uh i know i've recommended in
01:42 - the past
01:43 - to
01:44 - download uh the react
01:46 - food truck extension
01:49 - i'm sorry i keep calling it plugins but
01:51 - in visual studio code they're called
01:52 - extensions
01:54 - so if you have the react food truck
01:56 - extension for visual studio code it may
01:59 - have automatically downloaded the import
02:01 - cost extension as well
02:04 - so if you're having issues
02:06 - with
02:07 - your computer being sluggish
02:10 - and it just started you know recently
02:12 - after you've you know downloaded that
02:14 - check it out
02:16 - you know try disabling it
02:18 - that seemed to be my problem
02:21 - so
02:23 - hopefully we have everything figured out
02:24 - now that was a really cool extension but
02:26 - it wasn't it wasn't necessary
02:29 - i could see maybe turning it on
02:31 - just to check everything once or twice
02:34 - and then turning it back off definitely
02:36 - not something that i need on all the
02:37 - time
02:38 - uh so not really a big deal
02:41 - but i just want to let everybody know
02:43 - since i feel kind of bad because i
02:45 - recommended that and it may be crashing
02:49 - computers out there
02:54 - okay rook mentions in the live chat that
02:57 - rook went searching for
02:59 - uh issues with that plug-in after harsha
03:01 - mentioned it so thanks for giving credit
03:04 - where it is due harshit is the one that
03:06 - first thought of it and then rook helped
03:08 - out by sending me some links to
03:10 - uh some github issues
03:12 - about it so it's it definitely wasn't
03:14 - just just me or just harsh it a lot of
03:17 - other people had to
03:18 - notice the same same issues with that
03:20 - extension
03:23 - all right we're going to get started i'm
03:25 - going to briefly check the live chat see
03:27 - if there's anything that i should
03:28 - address right now
03:30 - once we get started i'm gonna take a
03:32 - little while about
03:33 - 25 minutes to do some coding and then
03:36 - i'll take a break and go back to the
03:37 - live chat and do some coding again after
03:40 - so
03:40 - just be patient if you ask something in
03:42 - the live chat i may not see it right
03:44 - away but i will get to it eventually
03:47 - also i'm i have a cough
03:49 - i'm a little congested and have a cough
03:51 - so if i sound weird and i cough a lot
03:52 - that's that's why i apologize
03:55 - i'll try not to do it too much
03:58 - and i'm a little out of it um i hope i'm
04:01 - not getting sick again i've just been
04:03 - sick way too much
04:04 - lately
04:05 - um but i'm gonna do my best
04:08 - and i'm sure you all keep me on track if
04:11 - i do something weird
04:13 - uh
04:14 - uh we do have one one question that i'd
04:16 - like to address
04:18 - um
04:20 - deboprio says i cloned the project from
04:22 - github into a folder and inside it i
04:25 - open git bash and the and run the npm
04:28 - install command so that it installs the
04:30 - dependencies it's giving me errors i
04:32 - can't npm start it
04:36 - um
04:39 - diproprio
04:40 - how the deboprio sorry i'm trying really
04:44 - hard to get that right i'm not sure if
04:45 - i'm pronouncing it right but
04:47 - uh what version of node are you running
04:51 - um
04:52 - sometimes we run some stuff that
04:54 - requires a later version of node
04:58 - i don't think
04:59 - we are on this project but i'm not 100
05:02 - sure
05:04 - so
05:05 - that could be it
05:08 - if you are running like the latest
05:10 - version of node
05:11 - then that's probably fine maybe uh
05:14 - if you could let me know specifically
05:17 - what some of the errors are i could try
05:18 - to
05:20 - try to figure them out
05:24 - uh let's see
05:34 - all right i'm gonna it looks like
05:36 - there's some other stuff in live chat
05:37 - but
05:38 - i'll get to that after we do some coding
05:40 - so let's get started
05:49 - and let me switch my screens there we
05:51 - are
05:52 - so i i left this sidebar up just to show
05:54 - you again it's the import cost
05:57 - uh plug-in
06:00 - so
06:01 - if you have this
06:03 - and it's causing problems
06:05 - you can just
06:07 - [Music]
06:08 - disable it
06:12 - and you should be alright after that and
06:14 - we'll find out does when i start doing
06:16 - things
06:17 - if the stream gets really laggy and
06:19 - drops frames and stuff then uh
06:21 - the really good news though is i don't
06:23 - think there's anything wrong with my
06:25 - network i was afraid that something
06:27 - happened and i didn't have the same
06:29 - network speed as i did normally and that
06:31 - would have been a disaster because
06:33 - if i'm trying to stream every day like i
06:36 - need a good network so it seems like
06:37 - it's okay i did a network speed test i
06:40 - can actually stream at a much higher
06:42 - resolution than i am now i could
06:43 - probably stream 4k if i wanted to
06:46 - and
06:47 - as long as my machine could handle it so
06:50 - basically my network's amazing
06:52 - i just i'm limited by my computer's
06:54 - capabilities
06:56 - maybe one day i'll try to stream really
06:58 - high quality there's no reason to but it
07:01 - might just be cool to see if it could
07:02 - work
07:03 - i wouldn't experiment like that on the
07:04 - free code cam channel though i'll
07:06 - probably do it on my own that way if i
07:08 - mess it up it's
07:09 - not that many people will be affected by
07:11 - it
07:12 - all right let me start angry
07:17 - so
07:19 - i'm going to about to paste the link
07:21 - into the live chat if you click that
07:23 - link you'll be able to see the project
07:25 - as we're working on it you can inspect
07:27 - it
07:29 - uh in devtools
07:31 - and it'll be a lot easier for you all to
07:33 - really kind of see what's going on uh
07:36 - for yourself
07:39 - and
07:42 - i haven't said this for a while but i do
07:44 - want to thank um the
07:46 - the guy who made ngrok which i can't
07:49 - remember his name right now but his
07:50 - twitter handle is uh at incontrivable so
07:53 - you can see it right there
07:55 - who's um letting us use ngrok for free
07:59 - at a level that
08:01 - you know normally you'd have to pay
08:02 - money for
08:04 - for this many connections at once
08:06 - i don't even know if it's a set plan
08:08 - yeah even to have this many connections
08:10 - so
08:11 - very very generous
08:13 - and
08:15 - so if if you get a chance and you're in
08:16 - a position to use the paid version of
08:18 - ngrok sometime highly recommended um
08:23 - like i said the guy who who works on it
08:25 - who made it is
08:26 - uh
08:27 - seems to be a really good guy from
08:29 - um from the interaction that i've had
08:31 - with him
08:33 - all right let's get
08:35 - our pomodoro timer started
08:39 - and
08:44 - let me bring over i i said i was gonna
08:47 - go over what i did
08:49 - earlier
08:51 - or what we did yesterday so i'll do that
08:52 - so basically yesterday all we did
08:55 - doesn't seem like much but it did take a
08:57 - while
08:58 - um
08:59 - we just made each one of these
09:02 - inboxes
09:06 - i'm really sorry um each one of these
09:10 - menu items
09:11 - that
09:12 - you can open and close the submenu
09:14 - is now
09:16 - a component it's it's an instance of
09:18 - this one component
09:20 - and they each have their own state
09:25 - and
09:28 - that's working fine we stopped there but
09:30 - here's the goal for today
09:33 - what we want to happen is when i click
09:35 - on one of these so let's say i clicked
09:37 - on this about
09:39 - uh menu item
09:41 - i want the side nav the side drawer to
09:44 - open
09:45 - and i would like the corresponding so
09:47 - let's say that this inbox was really
09:49 - about
09:51 - i want it to be opened as well
09:55 - so first step is
09:58 - let's get this side drawer to open when
10:01 - we click on one of these we'll get that
10:03 - working and then we'll tackle the the
10:05 - final piece
10:09 - and i like to break it down in this way
10:11 - because you can take little steps test
10:14 - the steps
10:15 - and you know make commits uh that are
10:18 - kind of like logical little chunks
10:21 - and it just makes it seem less
10:23 - overwhelming in general
10:28 - all right
10:29 - so here's our drawer item that's the
10:32 - component that we made yesterday we're
10:34 - going to leave this alone for now we'll
10:36 - come back to it later hopefully if we
10:38 - have time and i can get this other stuff
10:41 - worked out here's our layout component
10:44 - our layout component is the parent
10:46 - component of
10:48 - our our top nav our app bar and our
10:51 - drawer
10:52 - so if we need
10:54 - to be able to share
10:57 - uh state between these
11:00 - between the drawer and the app bar
11:03 - then we ought to have something living
11:05 - here
11:06 - in the layout.js component
11:12 - all right so let's see we did do some
11:15 - work yesterday
11:18 - so let me
11:19 - try to remember what we did
11:22 - so we can just build on that so we
11:25 - already have state here and that's the
11:27 - drawer
11:29 - so
11:30 - i guess a drawer is if it's false it's
11:33 - not open if it's true it is open
11:36 - we already have this toggle drawer here
11:39 - which is wonderful that's what we want
11:42 - we also have this expand item function
11:45 - here which we're not using yet
11:47 - but eventually we we're going to go back
11:49 - to this
11:51 - so for right now all we're worried about
11:53 - is this toggle drawer
11:55 - and
11:57 - let's see our drawer component and we're
11:59 - passing down
12:01 - this state drawer so open true or false
12:04 - which is great
12:06 - and then we also are passing down this
12:08 - toggle drawer function
12:10 - and now you can see in in the drawer
12:16 - we have
12:19 - we should have a click
12:22 - or is it open on close
12:30 - it's awkward
12:31 - okay so we're calling toggle drawer here
12:34 - we're passing it down as a prop
12:36 - and we also should have
12:38 - [Music]
12:39 - there's the button
12:43 - oh you know what it's in it's in app bar
12:45 - we're passing down toggle drawer into
12:47 - app bar great
12:49 - okay so we're already passing in to app
12:52 - bar what we need
12:55 - so this will be
12:57 - not that hard then let's get app bar out
13:04 - here right it looks like we have some
13:07 - stuff going on here comment it out
13:11 - move to go back to that
13:13 - probably not in today's stream but i
13:15 - have to go back to that and see what
13:17 - what we were doing here
13:20 - all right so these are all just styles
13:23 - we've done the styles as a javascript
13:25 - object that's one way you can do things
13:27 - in react
13:29 - we're not going to mess with styles too
13:30 - much today
13:32 - but we have in some previous streams if
13:34 - you're interested
13:37 - all right so we're bringing in
13:40 - toggle drawer here
13:42 - as uh props so
13:44 - normally you have to do like this props
13:47 - and then whatever you want but we are
13:49 - doing so we're passing props in here
13:52 - uh so we don't need this and then here i
13:55 - believe this is destructuring correct me
13:58 - if i'm wrong this is called object
13:59 - destructuring i think and
14:03 - and we're saying it equals props so now
14:05 - we can just use toggle drawer
14:08 - inside of this function
14:11 - and it'll it'll work just save some
14:14 - space it's not really worth it if you're
14:16 - only using it like once or twice but if
14:18 - you're using it more than that
14:19 - like we're using classes
14:22 - it really cleans things up a lot
14:24 - but it can be confusing if you haven't
14:26 - seen it before
14:28 - so just wanted to point that out
14:32 - all right so we i need to find
14:35 - the menu items
14:38 - this component's pretty cluttered right
14:40 - now uh we're gonna refactor this
14:44 - but there's no sense in refactoring
14:46 - until we really have it built out the
14:48 - way we want we may end up doing some
14:50 - unnecessary refractoring otherwise and
14:53 - we just don't really have time
14:55 - to do all that
14:56 - we have a tight deadline
14:58 - so
14:59 - this this thing needs to be done in a
15:01 - month like ready to go live
15:04 - i'm feeling a little pressure right now
15:06 - because i do have some other sites that
15:08 - i need to work on as well
15:10 - i'm expecting i'm gonna be working late
15:13 - um
15:14 - february is gonna be is gonna be rough
15:18 - let's see
15:23 - typography
15:24 - about
15:25 - there we go all right so this is
15:30 - this is what we want
15:31 - let's put
15:35 - an on click you know what we already put
15:37 - on click handler down here now i
15:38 - remember we we did this
15:41 - [Music]
15:43 - we did this recently
15:45 - so we don't want
15:47 - yeah we don't want this we don't need
15:49 - this open side drawer we need
15:55 - um
15:56 - what did we call it
15:59 - toggle
16:01 - toggle drawer yeah
16:08 - toggle drawer
16:09 - let's make sure
16:11 - all right
16:13 - okay
16:15 - um now
16:16 - i added this in here we don't need
16:19 - obviously we don't need to pass this in
16:21 - right if we go to our
16:23 - our layout where we have toggle drawer
16:25 - we're not we don't need to use anything
16:28 - but i'm going to keep it in for right
16:30 - now because this is one potential way
16:33 - that we may end up
16:34 - doing the next step and expanding that
16:37 - menu item
16:38 - so i'm going to leave it in there for
16:40 - now it shouldn't mess anything up
16:43 - but we'll see
16:46 - and
16:48 - all right so that saves and which one
16:51 - all right so if we click the faith and
16:52 - life link we should open
16:55 - all right
16:57 - awesome that was way easier than i
16:59 - thought we had pretty much had
17:01 - everything already
17:03 - written everything done
17:04 - so i'm clicking on this
17:06 - and it works wonderful
17:10 - now would be a great time i think to
17:12 - refactor a bit and take these out and
17:15 - make them their own component and that
17:17 - should clean up
17:20 - should clean up a decent amount in here
17:23 - and while this is all still fresh in our
17:26 - minds i think it would be good because
17:27 - we can pass down
17:29 - this toggle drawer again another level
17:32 - you can see we're starting to get a
17:33 - little complicated with passing things
17:35 - down
17:37 - maybe i might want to start thinking
17:39 - about using something else to manage
17:41 - state
17:42 - other than just like component state
17:46 - left to think about it i'm not ready to
17:47 - switch quite yet i'm still okay with
17:49 - this
17:51 - uh but i'm right on the edge if we go
17:53 - like another level of having to pass
17:55 - things down
17:58 - i'm i'm not comfortable with that it'll
18:00 - start to get too complicated
18:04 - uh okay
18:05 - so let's make another component
18:08 - and
18:09 - let's just copy and paste a lot of what
18:11 - we did here
18:12 - save some time
18:14 - and
18:15 - we'll remove
18:18 - let's see
18:20 - we don't need
18:22 - reason classes
18:26 - let's grab the whole li
18:29 - yeah we'll grab
18:31 - the whole li
18:37 - let's copy that and then inside of here
18:44 - we'll replace this div
18:47 - with what we have here
18:49 - oops let me save this so we can get our
18:52 - syntax highlighting
18:55 - we're in components and let's call this
19:01 - should we call this
19:06 - menu item
19:10 - yeah that's what it is i i usually like
19:13 - shorter names
19:16 - but that
19:17 - describes things accurately so we'll
19:19 - stay with that
19:20 - let's fix our indentation a bit get rid
19:23 - of all those
19:24 - lines
19:26 - and it's we're not importing typography
19:29 - so i think that's why we're getting this
19:30 - yep but it's not defined so let's make
19:33 - sure we define that
19:35 - and
19:37 - let's see if we can just grab it no
19:41 - i just like to copy and paste when i can
19:44 - here we are
19:46 - so let's import typography
19:50 - and
19:51 - we don't need either one of these i
19:54 - think are we using
19:57 - no no we don't need any of that
20:01 - we don't need
20:05 - collapse
20:06 - or the expand
20:11 - there we are
20:12 - and
20:14 - let's see what styles we do need so
20:18 - we need classes list li and classes ul
20:22 - link
20:25 - so let's find it over here
20:32 - i'm going to leave them in here for now
20:34 - and before i i need to double check to
20:36 - make sure these aren't being used
20:37 - elsewhere in this component
20:39 - before i get rid of them
20:42 - so let's add this in here we can get rid
20:44 - of nested because we're not using that
20:45 - and remember this object is just our
20:47 - styles think about this just like your c
20:50 - your style sheet and we did have all
20:52 - these styles in this component but now
20:54 - since we're moving our markup right if
20:56 - this were just html we're basically
20:58 - moving our html from one html file over
21:02 - to another one
21:04 - so if we want the styles to be applied
21:06 - we have to move the styles over as well
21:11 - and the ul link is the other one that we
21:14 - need
21:17 - so i know these styles look a little
21:19 - different than you're used to if you
21:21 - you're just using css or sass
21:24 - but really it's not that hard just
21:25 - imagine everywhere where you normally
21:27 - put a hyphen instead you camel case
21:29 - things
21:31 - it's basically the same as that for the
21:34 - most part you need to put
21:37 - quotation marks around
21:39 - a lot of your values
21:42 - but
21:43 - other than that
21:45 - it's very very similar to normal css
21:48 - all right so now we should have all the
21:50 - styles that we need we need to change
21:52 - the name here
21:53 - because we're using we don't want it to
21:55 - be drawer item
21:56 - so let's change it now
21:59 - to app
22:00 - bar
22:02 - menu
22:03 - item
22:06 - save that
22:07 - and
22:12 - all right
22:13 - we need to pass down some information
22:19 - right because we don't want all of them
22:21 - to say the same thing and link to the
22:22 - same thing
22:26 - so first let's let's import this
22:31 - so let's import
22:35 - let's see app bar
22:38 - menu
22:41 - item
22:43 - from
22:46 - app bar menu item
22:48 - so now we can use this
22:51 - it's red because we haven't used it yet
22:53 - but now we can use this down here
22:55 - so let's go back to where we had all
22:57 - these
22:58 - and we'll replace each one
23:00 - with our new component and that should
23:02 - shorten things up quite a bit
23:06 - so here we are here's our component so
23:08 - we're gonna make
23:11 - within this ul right remember because we
23:13 - have our lis over here in our new
23:15 - component
23:16 - we're gonna make four of these new
23:18 - components
23:20 - eventually
23:21 - we'll actually store we'll probably
23:23 - store a lot of the data separately pull
23:25 - it in and just map over the data
23:28 - so
23:28 - we can make the markup you know even
23:30 - shorter but for now we only have four
23:33 - it's it's not really a big deal to
23:34 - actually have four components here
23:37 - i see a lot of activity in the live chat
23:38 - as well uh just hang in there if you
23:41 - if you have a question in about 10
23:43 - minutes i'm going to go back to the live
23:45 - chat and answer some questions
23:48 - so let's make our
23:51 - menu item
23:53 - let's use our
23:55 - what was it at bar
23:57 - menu item
23:59 - and
24:01 - we need to pass some things
24:05 - down as props
24:09 - so we definitely need
24:12 - toggle drawer
24:18 - and
24:19 - we're just gonna say
24:21 - toggle drawer
24:25 - and
24:27 - i i think we can do it like that because
24:29 - we've destructed it up here let me
24:31 - double check though
24:32 - yes we have so we can do toggle drawer
24:37 - and
24:39 - let me clarify as well
24:41 - that that's how we've done it here
24:44 - yep
24:45 - all right so we can add
24:47 - we'll add toggle drawer and then we also
24:49 - need to add
24:53 - a title
24:57 - an id
25:00 - and
25:02 - our text here
25:07 - and if we use the id here as well if we
25:10 - just make it the same
25:13 - then i think
25:16 - we could save ourselves from having to
25:18 - pass in two different props for that
25:22 - so let's let's do that
25:31 - all right so here's our first
25:33 - i'm gonna
25:34 - write it like this since we're gonna
25:35 - have a few props here it'll be easier to
25:40 - to see
25:41 - so we'll need an id
25:43 - um
25:44 - let's let's see um
25:48 - we'll do link id
25:50 - i don't want it to be confused i don't
25:52 - want there to be any confusion about
25:55 - you know what we're using here so that's
25:56 - why i'm putting link id instead of just
25:58 - normal id
26:01 - and in this case
26:03 - we're going to put
26:05 - let's go
26:09 - i'm just going to say faith in life
26:12 - and now
26:15 - let's see
26:21 - we can add these here
26:23 - to destructure so we can still
26:26 - use and actually i never double checked
26:28 - to make sure destruction was the right
26:30 - word hopefully i'm using that correctly
26:33 - all right good object destruction good
26:36 - thank you rook for clarifying that for
26:38 - me i just don't want to mess people up
26:40 - and say the wrong thing and
26:42 - um
26:42 - i'd hate to have somebody
26:45 - something happen and they'd mess
26:47 - something up just because i can't
26:48 - remember the right words
26:50 - uh all right so we have link id right so
26:53 - we called it yeah link
26:55 - id
26:57 - and
26:58 - now we'll use
27:00 - title
27:09 - and
27:12 - let's do faith
27:18 - and life
27:23 - act let's let's change that up let's say
27:26 - content
27:30 - faith in life and we can reuse that for
27:32 - the title as well
27:43 - all right now
27:45 - let's change things over here
27:49 - so that we can use this
27:51 - so here we're going to bring in
27:55 - link id
27:56 - and we're also going to use our link id
27:58 - here
28:06 - link id
28:09 - do i have to
28:11 - we'll see if that works let me know
28:13 - though do i need to put link id in here
28:15 - i always forget when i'm using um
28:19 - arrow functions uh in in here
28:22 - let me know we'll find out as soon as i
28:24 - save this and see if i get an error
28:28 - all right the href you know what we we
28:30 - need the eight do we need the ahref
28:34 - no we really don't
28:37 - because we're not actually linking to
28:39 - anything
28:41 - all right we don't need to worry about
28:42 - that we may even be able to take this
28:44 - out completely
28:45 - let's try to take the href out
28:49 - and
28:51 - all right for our title
28:55 - i'm just going to add
28:57 - content
29:00 - and we're also going to use it down here
29:02 - so down here
29:04 - right this is just
29:06 - the interior content of this component
29:09 - and
29:10 - we're going to add our curly brackets
29:13 - that means we can put javascript inside
29:15 - of there so i can just
29:17 - say content oops this has to be inside
29:23 - and that'll pull in whatever value we
29:24 - pass in which in this case is going to
29:26 - be faith and life
29:29 - and this looks good
29:34 - oops
29:35 - we can get rid of this
29:38 - so we don't actually need this
29:41 - and
29:45 - we could uh refactor this to a stateless
29:47 - functional component i'm not going to do
29:49 - it right now so i want to make sure we
29:50 - have time to actually get things working
29:53 - but
29:56 - you can see right now we we really
29:58 - aren't doing much of anything in here
30:00 - so we could shorten this up a bit
30:03 - and make it a functional component
30:09 - all right so i'm going to save that
30:11 - and this component should be ready i
30:13 - don't
30:14 - uh unless i mess something up this
30:16 - should be done
30:17 - now
30:18 - let's copy this
30:22 - and paste it a few times
30:24 - one two three
30:28 - and now we're just going to change
30:32 - the names
30:35 - and this one will be
30:37 - about
30:44 - and
30:45 - i believe the next one is academics
30:55 - whoops lowercase
30:59 - and admissions
31:06 - admissions now let's delete all of these
31:11 - whoa
31:12 - too far
31:18 - there we go
31:22 - all right wonderful so here's our four
31:25 - links what did i mess up here
31:30 - what's this
31:32 - trailing space is not allowed
31:35 - there we are
31:39 - all right let's save that and
31:42 - see what we have
31:44 - all right no errors excellent
31:47 - and since i removed that href you can
31:49 - see i don't automatically have the
31:52 - little cursor pointer that makes it look
31:54 - like it's clickable
31:56 - we can add that in i think i'd rather
31:58 - not have the hr in fact let me remove
32:01 - this uh
32:03 - the little pound sign the hashtag there
32:07 - and let's see
32:08 - great that works
32:10 - that works
32:12 - that works
32:14 - that works wonderful okay they all work
32:16 - so i said the last thing i want to move
32:18 - in is this ul link
32:21 - i want to add
32:23 - cursor
32:28 - pointer so if you ever want something to
32:30 - have that cursor you know normally on a
32:32 - web page when you have an a tag you have
32:34 - a link you hover over it the cursor
32:37 - changes
32:38 - if you want that to happen on some other
32:40 - element you could just add cursor
32:42 - pointer in the css so let's save that
32:46 - and see if it worked and if it did see
32:48 - so now we have that little hand
32:51 - icon
32:53 - wonderful
32:57 - all right so we only have about
33:00 - just over 30 seconds left until the
33:02 - break so i'm just going to go in to the
33:04 - live chat right now
33:07 - and answer a few questions actually you
33:10 - know what it'll be a good idea to commit
33:15 - let's just do a git status
33:18 - so we've added a component here or we've
33:22 - we've modified app bar and then we've
33:23 - actually added this at bar menu item
33:26 - component
33:27 - so let's do a git add
33:29 - right and i could do the little period
33:30 - that adds everything
33:32 - and then we need to do a git commit
33:36 - and with our when we commit i'll do the
33:38 - m flag
33:39 - then i can put my commit message in line
33:43 - create
33:57 - create component for apple or menu items
34:01 - all right that works
34:03 - now it's going to go through all its
34:04 - tests it's going to auto format our code
34:07 - according to the coding standards that
34:09 - we're using
34:10 - and it also
34:12 - links everything so it checks
34:14 - all of our code now it's going to do
34:17 - testing it actually opens up
34:19 - our page some of our pages in a browser
34:22 - make sure that certain elements are
34:24 - there on the page
34:26 - and we've passed all the tests
34:29 - now we can
34:31 - push so we're going to do a get push
34:35 - now i know yesterday we found out uh
34:37 - from rook that you can actually just
34:38 - type in git push but there are some
34:40 - caveats to that it doesn't work in every
34:42 - situation so i'm not gonna do that
34:44 - because i don't wanna confuse anyone
34:45 - who's new with git
34:46 - if they try to do it like that and can't
34:48 - understand why it's it's not working
34:51 - because you know potentially they may
34:52 - not have seen when we did that and i
34:54 - don't want to have to repeat the caveats
34:56 - every time so i'm just going to stick
34:57 - with git push origin
35:00 - and hit enter oh and i need the
35:02 - passphrase
35:08 - so thankfully
35:09 - lastpass is working this time
35:12 - yesterday it didn't work so i can get
35:15 - the
35:16 - password for this much more quickly
35:25 - let's paste that in
35:26 - and then i'm going to do
35:29 - ssh add
35:32 - and paste it again and then that way i
35:33 - won't have to enter it again as long as
35:35 - i don't restart my computer
35:37 - now all this code is in our github repo
35:40 - on the master branch so if you want to
35:42 - check out anything that we've done
35:45 - check it out now if you already have the
35:47 - code everything uh cloned
35:50 - uh then you can do a get pool to get it
35:52 - if you fork the repo
35:54 - first
35:56 - actually i don't there's another step
35:58 - right if you forked it and then
35:59 - downloaded it you need to update your
36:01 - fork
36:02 - correct
36:05 - um but basically the code's all up to
36:07 - date on this repository on the master
36:09 - branch now
36:12 - so let me set the five minute timer
36:15 - and i'm gonna go to the live chat
36:20 - let me scroll up a bit
36:27 - uh blake asks uh how you how's your day
36:29 - been
36:30 - um
36:31 - actually not not too bad i i felt like i
36:34 - said i felt congested at a sore throat
36:36 - when i woke up but i actually i woke up
36:39 - and i got in a little workout which was
36:42 - so this is day four
36:44 - that i've worked out
36:45 - every day for four days which probably
36:48 - sounds like not that impressive but for
36:50 - me it's super impressive because i my
36:52 - workout schedule has been so off
36:55 - i can't even remember the last time i
36:56 - worked out four days in a row
36:58 - so i think that's been contributing to
37:00 - me being sick so much if you watch the
37:02 - streams a lot i think
37:04 - you may have noticed that
37:06 - i've been sick
37:08 - i don't know it seems like way more than
37:10 - a normal person should be sick i think
37:12 - part of it may be because i haven't been
37:14 - exercising so anyway i got in a workout
37:17 - but i still i feel really tired
37:19 - and um i had a meeting this morning
37:22 - which it was hard to stay awake during
37:24 - the meeting
37:26 - but i got through that
37:28 - and uh everything's going all right the
37:29 - only thing that i the only thing i can
37:31 - complain about is
37:33 - somebody like was not very nice to my
37:35 - wife in the comment section of a blog
37:38 - post and that made me upset but
37:42 - my wife responded she can handle herself
37:44 - she's tough
37:45 - uh but
37:46 - other than that
37:47 - i'm okay that kind of made me a little
37:49 - bit angry
37:52 - um
37:54 - and my my bitcoin and litecoin and ether
37:58 - investments are going up today kind of
38:00 - had a little dip yesterday so that makes
38:02 - me happy i don't really have that much
38:03 - money in it i just can't have a little
38:05 - bit to play around in
38:07 - so
38:08 - not sure if you wanted the whole recap
38:10 - of my day but there it is
38:15 - uh rook says that that extension we were
38:17 - talking about earlier should perform
38:19 - better with the latest update so i maybe
38:22 - i'll try that like i said earlier i
38:24 - don't really think that uh what was that
38:27 - plugin called
38:29 - i import cost i don't really think the
38:31 - import cost plug-in is necessary for my
38:34 - work so i probably won't turn it on
38:36 - again for a while like if at all
38:39 - uh but
38:40 - it's good to know that they're working
38:42 - on the
38:43 - performance improvements
38:47 - vivek asked what language we're going to
38:49 - code in uh mostly javascript
38:53 - react
38:54 - style javascript
38:57 - hardship says westboss recently uh
39:00 - released a cool free css grid course
39:04 - that's cool yeah i saw some people on
39:05 - instagram and on twitter where were
39:07 - posting about that so
39:10 - uh yeah check that out if you want an
39:12 - intro to css grid i haven't really done
39:14 - any of the west boss courses but so many
39:17 - other developers say that they're really
39:19 - good so
39:20 - if i get some time one day i'm
39:21 - definitely going to check that out
39:25 - okay harsha's going to do the course
39:27 - today harsh please let me know how it is
39:29 - if it's
39:30 - uh if you think it would be helpful
39:32 - because i definitely need to learn more
39:34 - about css grid
39:36 - uh harshit says the the url is css grid
39:39 - dot io
39:46 - deboprio
39:48 - says he's running 8.9.4 for his node
39:51 - version yeah that should work that
39:53 - should be fine so it's definitely not
39:55 - your version
40:03 - oh harshit you got it all right so um
40:08 - deboprio says running npm start causes
40:11 - errors and harshit says npm start is for
40:15 - production we have to run uh was it run
40:18 - dev is that what we use
40:22 - i get confused with that because
40:26 - uh where's our package json file
40:29 - depending on the project we sometimes
40:32 - have different commands for
40:34 - starting the servers for development
40:38 - in production
40:40 - there it is
40:44 - yeah you want to go with
40:47 - npm
40:48 - dev
40:49 - or yarn dev or npm run dev or whatever
40:51 - you want to do
40:53 - and that that should work let me know if
40:55 - that doesn't work
41:05 - uh peter as says what peripherals do you
41:08 - use with your mac
41:09 - um i use
41:11 - this thing
41:13 - the touchpad whatever they call it the
41:15 - magic something i don't know
41:18 - all this stuff with mac is called magic
41:20 - whatever
41:21 - it's not really magic it's just
41:22 - technology right i don't know but i
41:24 - really love this thing this is the best
41:26 - touch pad that i've ever used
41:27 - it was weird to get used to it at first
41:29 - but mostly all like the hand gestures
41:32 - are my favorite thing
41:34 - so
41:36 - there are some things that it's easier
41:37 - to do with the mouse but
41:39 - i've i've gotten used to this and
41:42 - i kind of like it and then my keyboard
41:44 - is just the normal uh standard mac
41:46 - keyboard
41:49 - so i've thought about getting a
41:50 - different keyboard everybody talks about
41:52 - these mechanical keyboards i might get
41:54 - one one day but
41:57 - um for now this this works fine
42:01 - all right let me
42:03 - get back to the code
42:07 - and
42:15 - all right so i know i didn't get through
42:16 - everything in the live chat uh so sorry
42:19 - if i didn't get to your question or
42:20 - comment yet
42:21 - i
42:22 - would definitely get to it
42:26 - before i end the stream
42:28 - so just hang in there if you can if you
42:30 - have to go
42:31 - that's cool uh you can always check out
42:33 - the stream later on when the recording's
42:36 - available
42:37 - and you can listen in for my answer to
42:39 - your question
42:40 - then
42:42 - all right so let's go to
42:46 - all right next step
42:47 - start our timer
42:49 - here's our next step
42:51 - so now we have this opens when we click
42:54 - it but we want more we want it to not
42:56 - only open but also open this side menu
42:59 - the appropriate one so we're gonna first
43:02 - thing we're gonna do is
43:04 - let's make four sections here and let's
43:06 - name them we'll give them the proper
43:08 - names
43:09 - to match these it'll be easier to just
43:12 - think about it and see if it's working
43:17 - so that'll be an easy first step to get
43:19 - us started
43:21 - pretty sure we can do that and there
43:22 - won't be any issues
43:24 - let's get rid of our package json i
43:26 - don't need that anymore
43:28 - and
43:29 - our drawer item component
43:32 - this is where we need to go
43:35 - so our drawer item component when we
43:37 - made it yesterday we never took the step
43:41 - to
43:42 - pass down props
43:44 - we have values hard coded so we need to
43:47 - do that so we just did it with the app
43:49 - bar menu
43:50 - we're going to do the same thing
43:52 - again so this will be good if you're
43:54 - kind of new to this you may be a little
43:56 - confused by what we're doing with our
43:58 - props
43:59 - we're going to do it again
44:01 - um
44:03 - let's see where we
44:04 - our drawer so let's go to our drawer
44:08 - and we can see here's where we're
44:09 - bringing in this dry item
44:12 - so we have our drawer item here
44:14 - but we need
44:17 - a few more things
44:22 - we need this primary text
44:27 - and
44:33 - what else do we need
44:36 - yeah we're going to need primary text
44:38 - for sure
44:47 - i'm thinking i might want to call it
44:49 - something different but i don't know
44:50 - what so i'll stick with primary text for
44:52 - right now
44:53 - and in this case our primary text is
44:55 - going to be
44:58 - um
45:01 - what was the first one about so it'll be
45:04 - about
45:06 - and
45:08 - let's add
45:16 - this all right that looks good for that
45:19 - level
45:29 - let's add something else
45:31 - this is our
45:36 - sub menu items
45:40 - and what we're going to need to do for
45:42 - sub menu items is have an array of
45:45 - objects
45:49 - so for now i'm just going to do some
45:51 - stuff as a demo
45:53 - we're obviously not going to want to
45:54 - have this all right here where we're
45:56 - going to put in the component
45:58 - this is going to be elsewhere either in
46:00 - this component or preferably in a in a
46:02 - data file
46:03 - and then we'll pull it in
46:05 - and when we get to that part probably
46:07 - not going to get to today but later on
46:10 - uh we'll get to it and if i refactor it
46:13 - you know when i'm not streaming and you
46:16 - want to know how it works you can always
46:18 - check out the code and you could ask me
46:19 - on a stream and i'll kind of walk
46:21 - through it so we put our curly braces
46:24 - here so that that means hey we're going
46:26 - into javascript land so anything we put
46:29 - in here will be javascript and now we
46:31 - have an array and we're going to have an
46:33 - array of objects right so we need more
46:35 - curly
46:36 - braces
46:38 - and we're going to have
46:42 - uh we'll have key value pairs
46:48 - so
46:51 - we'll have
46:53 - a text
46:59 - and
46:59 - in this case
47:01 - you know i'm going to bring up
47:04 - on my other screen i'm going to bring up
47:06 - the current site as it is just to give
47:08 - get a few um you know forget it i'm not
47:11 - going to do that let's just do let's
47:12 - keep it simple
47:16 - link one
47:18 - and
47:20 - text link one and then
47:23 - we we're going to need a
47:25 - um
47:26 - link
47:28 - url
47:31 - which is going to be
47:34 - for now let's just give it a hash
47:38 - all right but you can see how this is
47:39 - going to work out so let me
47:42 - copy this
47:44 - we're going to paste it a few times
47:56 - all right so we'll have three items
47:58 - underneath that's good let me clean this
48:00 - up a bit so it'll be a little easier
48:03 - uh just to see what's going on whoa
48:09 - what is going on here
48:12 - all right i was attempting to
48:15 - format this properly but it's just not
48:18 - it's not working
48:20 - um let's see
48:28 - there we go
48:35 - just wanted you able to see the
48:37 - structure here of what we have of uh key
48:40 - value pairs
48:44 - now for for some of you this is going to
48:46 - be uh you know an easier concept but
48:50 - there's
48:51 - could potentially be confusing
48:56 - if you haven't kind of seen this before
48:57 - so
48:59 - hopefully this is a little bit easier
49:00 - i'll be i can't keep it in this format
49:04 - but
49:05 - it would then these would just be too
49:07 - huge
49:08 - but you can see our sub menu items so
49:10 - we're going to have link one we'll
49:12 - change this to link two
49:14 - and link three and the reason we're
49:17 - doing this as an array
49:19 - of objects
49:25 - is that
49:26 - now when we pass this over we'll be able
49:29 - to use map
49:31 - on these
49:32 - and just go through everything and keep
49:34 - making this
49:36 - collapsible we're not the collapse these
49:39 - list items here we can just go down
49:41 - through and just add in as many list
49:43 - items as we want and we can pass in a
49:46 - different
49:47 - array
49:49 - for each drawer item here
49:51 - so it if it's not all making sense to
49:54 - you now if you're if you worked with
49:56 - react and seen some of our previous
49:57 - projects hopefully you can kind of
49:59 - visualize what's going to happen here if
50:01 - it doesn't make sense now it will make a
50:03 - lot more sense once we get some real
50:04 - data in here
50:06 - uh but
50:08 - now that we have this
50:11 - let's
50:13 - i'm going to copy and paste
50:16 - let me verify that i don't need anything
50:19 - else for this
50:42 - all right
50:43 - not bad
50:45 - if we do want these to be links we're
50:46 - going to have to add something else in
50:48 - here but for right now this this will
50:49 - just work
50:50 - we're not really trying to to
50:52 - demonstrate
50:55 - the links because we don't even have
50:57 - most of these pages built out
51:01 - all right so let's get rid of these
51:06 - we have one
51:07 - two
51:08 - three
51:10 - four
51:11 - great so we'll just change the names up
51:14 - here so about
51:16 - academics
51:21 - admissions
51:25 - and
51:27 - academic admissions
51:32 - faith in life
51:35 - okay
51:37 - let's save it
51:40 - and now
51:46 - we need to bring these in so let's use
51:49 - our our destructuring our object
51:50 - destruction again save us some space
51:53 - save us some typing
51:54 - so we'll have our primary
51:58 - text
52:00 - and we'll also have
52:02 - our sub menu
52:04 - items
52:10 - so menu items
52:11 - great
52:13 - uh
52:14 - where are we
52:16 - at here
52:18 - this is going to be
52:22 - a primary text
52:28 - and then down here
52:31 - this is going to be a little bit more
52:32 - complicated
52:34 - so within our collapse and our list
52:37 - we have all these list items
52:41 - so we want to do here
52:46 - is go into some javascript right
52:50 - and let's say
52:55 - oh yeah what did we call it
52:57 - submenu
53:02 - submenuitems.map
53:06 - what is this
53:07 - function accessory arguments the map
53:09 - method combat cool it gives me a little
53:12 - explanation of this awesome
53:16 - all right so we're going to say
53:18 - item
53:25 - and
53:31 - so
53:33 - what just happened
53:34 - let's let's make this a little bit
53:36 - easier to read
53:39 - some menu items so menu items.map um
53:43 - so each each thing is going to be called
53:45 - item and then within there we want to
53:48 - bring in this list item
53:51 - so let's copy that and paste it in
53:54 - whoa i've got a lot of red right now
54:00 - all trailing spaces what is this missing
54:02 - key prop yeah yeah we'll be fine
54:06 - a lot of this red will go away as we go
54:08 - so
54:09 - it's true we do need a key prop
54:12 - and we will use
54:17 - as uh
54:20 - let's clean this up a bit make it a
54:21 - little easier
54:25 - as a key
54:27 - we're going to use
54:28 - the
54:31 - um
54:34 - let's use no we can't use the url
54:38 - it will be different we'll just use the
54:40 - text for now
54:47 - oops
54:49 - it'll be
54:50 - item
54:52 - dot text right so
54:54 - we're gonna have access to this text and
54:56 - url for each item
54:59 - so think of it like a loop if you're not
55:00 - familiar with map
55:02 - like imagine that we're looping through
55:05 - each one of these objects in this array
55:09 - and
55:11 - so each one of those objects
55:13 - if it would be the same as if we did
55:16 - like item
55:17 - and then
55:18 - in brackets you know zero so it's the
55:21 - first item and the next time it will be
55:22 - item one item two right
55:25 - but we don't have to do that with map so
55:27 - item.txt is our key for now probably
55:30 - won't be the key forever hardship i see
55:32 - you just said use index i'm maybe i
55:35 - don't i usually uh would like to use
55:38 - something else other than index
55:40 - um but not usually as you know it's a
55:43 - string like that
55:44 - for right now this will work
55:48 - key
55:50 - and we need to insert
55:55 - here
55:57 - item
55:59 - dot text
56:02 - and
56:06 - we'll add in
56:07 - just so that we have it here somewhere
56:10 - we're going to add in link
56:13 - url
56:16 - equals
56:18 - link
56:20 - url
56:21 - oops
56:23 - item
56:25 - dot link url
56:27 - okay
56:29 - um now let's see everything indentation
56:32 - indentation
56:34 - i think these are all indentation things
56:36 - which are okay
56:40 - all right
56:41 - not worried about that
56:45 - let's get rid of this
56:50 - and
56:51 - i'm just gonna glance through this
56:53 - again one more time
56:56 - all right looks good
56:59 - looks good
57:01 - all right let's save
57:03 - let's make sure we save this
57:06 - let's go back here
57:08 - no errors excellent
57:10 - let's check over here all right we have
57:13 - about we have link one two three
57:16 - link one two three one two three
57:18 - excellent
57:19 - all right and as we click these right
57:21 - nothing happens
57:24 - which is to be expected right now but we
57:26 - have
57:30 - successfully
57:32 - pulled these out put them in in another
57:34 - component so each one of these is its
57:36 - own component and each one can take an
57:39 - array of objects to make as many links
57:41 - underneath as we want
57:44 - which is great doesn't seem like a big
57:46 - deal now but when we end up wanting to
57:48 - put all these links in it's going to be
57:50 - a really nice feature to be able to just
57:52 - pass in
57:53 - uh in an array
57:57 - all right
58:02 - okay
58:03 - now
58:04 - here's the hard the part that i've been
58:07 - wondering about
58:08 - and i'm still not exactly sure how we're
58:10 - going to do it
58:12 - i should commit this though right now
58:14 - before we do that
58:20 - all right get
58:23 - your item
58:30 - oh you know what
58:32 - we already made it i was just confused
58:33 - because it says we just modified it i
58:36 - forgot that we actually made this
58:38 - component
58:40 - yesterday we just didn't
58:42 - really finish making it
58:44 - to be fully functional
58:47 - all right gets
58:53 - all right so i'm going to do a git
58:54 - commit with the am flag which means i'm
58:56 - adding it and sending the message at the
58:58 - same time as i'm committing
59:02 - and
59:03 - we'll say
59:11 - um
59:14 - it's
59:30 - okay that works
59:36 - we're gonna run through all our tests do
59:38 - our auto formatting uh if you notice
59:40 - here look all of our red lines are
59:42 - already gone it's formatted everything
59:44 - properly for us which is awesome it
59:46 - saves us time for having to go through
59:48 - and
59:49 - try to fix those lines
59:54 - great we passed and now we'll do a git
59:56 - push origin
60:03 - right and now that's up on github
60:08 - all right let's
60:14 - let's think for a second about how we're
60:16 - going to do this let's go back out here
60:18 - so again
60:20 - uh
60:21 - the desired
60:24 - functionality is that we click on
60:26 - about the side nav opens which we've
60:29 - already covered that
60:31 - but i also want this to be expanded
60:35 - so first step is
60:37 - let's figure out what makes this expand
60:40 - or not expand
60:41 - and then we can try to figure out how to
60:43 - influence that
60:45 - so we'll go to our component that's draw
60:47 - item component
60:50 - and let's see
60:51 - here's our component that's the collapse
60:53 - component
61:08 - okay this is probably
61:12 - for our icon so we're not worried about
61:14 - that
61:18 - so what we are worried about is this
61:21 - i believe i believe it's this one this
61:23 - in
61:26 - state open items
61:32 - so if our
61:34 - value for collapse in
61:39 - is true
61:42 - it's open if it's false it's closed
61:46 - i think that's what's going on here
61:48 - correct me if i'm wrong
61:52 - so we need somehow
61:55 - to be able to
61:58 - modify this
62:01 - when a click occurs
62:05 - okay
62:16 - all right and this is where i wish like
62:19 - i wasn't
62:20 - i wasn't kind of sick because i really
62:22 - want my whole brain to be on this one
62:25 - all right
62:28 - all right so my original idea was just
62:30 - to have this state live in layout which
62:33 - is the parent component
62:36 - but
62:37 - the problem became if the state lives in
62:40 - layout then when we click
62:43 - one of these all of them would open or
62:45 - close so that's why we move state here
62:48 - and we move these to a component
62:50 - so it makes sense for this component to
62:52 - be able to control
62:54 - whether it's open or close
62:58 - another thought
63:00 - potentially could be
63:24 - i just keep going back to redux
63:26 - and thinking about oh i would do it like
63:28 - this in redux
63:31 - uh
63:56 - really that is what we need if we were
63:59 - to bring the state up to layout uh what
64:01 - we would need is a separate state
64:05 - for each
64:06 - item in that menu
64:10 - right now we could hard code that and
64:11 - that would be fine
64:13 - but that wouldn't work
64:15 - as well if we were going to have lots of
64:16 - menu items
64:18 - now the
64:19 - realistically we're um
64:23 - we're not going to have a lot of menu
64:24 - items
64:25 - uh it's probably only going to be four
64:27 - that have the expansion we're going to
64:29 - add maybe a few more that won't be
64:31 - expandable
64:33 - harsh it does say that apollo has a link
64:36 - state
64:38 - and
64:41 - because apollo has the um redux
64:44 - replacement all right so harsha did
64:45 - write a blog post on that
64:48 - maybe i'll check that out
64:50 - uh
64:51 - let me
64:57 - let me work through this
65:03 - i tell you what
65:06 - i want to let's try to do this just with
65:09 - component state
65:12 - then harshit i'll read your blog post on
65:14 - that
65:16 - and um maybe we'll go back and refactor
65:19 - it
65:20 - and the only reason i'm even comfortable
65:22 - doing this with component state is
65:23 - because those links will most likely
65:25 - never change those main links they've
65:28 - never changed on the website for years
65:30 - and my boss wants to keep them as is
65:34 - so i guess i'm okay with this normally i
65:37 - wouldn't just
65:39 - normally it would not ever make sense to
65:41 - hard code stuff like that in like the
65:44 - the links
65:45 - but let me show you
65:47 - a way we could possibly do this if you
65:50 - weren't
65:51 - if you didn't want to use redux or
65:53 - apollo's uh
65:56 - redux like thing that's that they have
65:58 - now
66:00 - so in our layout component under state
66:03 - let's go with
66:04 - um
66:10 - see hold on let me see
66:13 - i'll have here
66:19 - under state let's have
66:30 - drawer
66:35 - items
66:40 - let's see if we can do this
66:55 - about
67:00 - false
67:03 - academics
67:06 - false
67:10 - missions
67:14 - um
67:30 - faith in life false
67:33 - all right
67:34 - all right oops i need a comma
67:38 - all right let's save that hopefully
67:40 - y'all can see where i'm going with this
67:43 - um and then we need to pass these values
67:45 - down
67:50 - i'm not exactly sure if i can even do
67:52 - this in here
67:53 - um
68:04 - why did i make this an array
68:09 - you don't need that
68:10 - okay
68:11 - um
68:12 - so drawer items is an object that has
68:15 - key value pairs for each of the kind of
68:18 - drop down things that we want
68:22 - tell you what my timer went off
68:24 - my timer went off let me uh take five
68:27 - minutes here
68:28 - go to the live chat i'm gonna answer
68:30 - some more questions and then we'll come
68:32 - back and finish off this
68:34 - uh my point my my goal is just to get
68:37 - the functionality that we want it may
68:39 - not be the best way to do it but we can
68:42 - always refactor
68:44 - that's generally the way i like to go
68:46 - about things is get it to work first
68:48 - then worry about refactoring
68:52 - then that's especially how i like to do
68:53 - things when something needs to be done
68:55 - quickly because if worse comes to worse
68:58 - we can always use the way that works but
69:00 - it's not ideal
69:01 - and then go back to it you know at some
69:04 - later point
69:07 - let me scroll back up to where i left
69:08 - off
69:17 - all right so andrew says hey jesse
69:19 - congratulations on finishing the
69:20 - nanodegree i really enjoyed your review
69:22 - and thank you again for letting us get a
69:25 - peek into your day-to-day work oh you're
69:27 - welcome and i'm glad glad you liked the
69:29 - video uh sorry about being so late on
69:31 - that i know i had said that i was going
69:33 - to make a video for a long time i
69:35 - finished my nano degree way back at
69:39 - like the end of october or something
69:41 - beginning in november
69:42 - and it took me you know this long till
69:45 - january to get the video made uh so it's
69:48 - finally out there if you haven't seen it
69:50 - yet and you're interested uh there's a
69:52 - link to my youtube channel in the
69:53 - description of this video check it out
69:55 - it's the latest video on there it's it's
69:57 - my
69:58 - review
70:00 - of my experience with the react
70:01 - nanodegree
70:04 - um if you don't have time the video is
70:06 - only a few minutes long but if you don't
70:08 - have time my overall assessment is i
70:10 - think it was a good use of my time and
70:13 - money to do the nanodegree program i
70:15 - learned a lot so if you're in a
70:16 - situation where it makes sense for you
70:19 - i would recommend it
70:26 - peter asks how do you jump back the
70:28 - indentation
70:30 - so
70:31 - yeah uh it's shift tab
70:34 - so if you want to you can highlight
70:36 - within your code editor you can
70:38 - highlight a block of of text and then
70:42 - tab to go forward shift tab to go
70:44 - backward
70:47 - uh let's see john hanson says you can
70:49 - pass down on click events and even reuse
70:51 - on toggle drawer though it can get messy
70:53 - unless you control bubbling and
70:55 - capturing event dot stop propagation
70:57 - fixes many issues
70:59 - okay
71:01 - uh
71:03 - good to know
71:05 - rook says how do you do pseudo selectors
71:08 - or media queries and that inline css
71:11 - support it
71:12 - no inline css does not support media
71:15 - queries so if you want to do media
71:17 - queries you you
71:19 - you can't do it inline as far as i know
71:22 - last time i checked if anything changed
71:24 - then i sorry let me know
71:27 - but yeah you can't do that and pseudo
71:30 - selectors
71:31 - yeah so if you want to do a pseudo
71:32 - selector like before or after
71:35 - uh that doesn't work in line either so
71:37 - you are you can only use a subset of css
71:40 - if you want to go strictly inline
71:47 - rook says when you see a squiggly line
71:49 - and want to see the error you can press
71:51 - f8 or just hover over it okay that's
71:53 - good to know sometimes it's hard to get
71:55 - a hover on it if it's a tiny squiggly
71:57 - line so f8
71:59 - cool
72:00 - i learned so many useful things from you
72:02 - all i really appreciate that
72:08 - peter says all those tests and stuff
72:10 - when you commit to are they default or
72:12 - do you have to add them
72:13 - um
72:15 - it says i'm a total get noob oh don't
72:16 - worry about it
72:18 - we're all noobs at something i'm sure
72:21 - there's just way too much going on and
72:23 - even within uh web development there's
72:26 - way too many things to be an expert at
72:28 - everything so
72:30 - um
72:31 - peter uh we did have to make those tests
72:33 - and by we i mean harshit he made the
72:36 - test
72:37 - um
72:38 - so yeah they don't come by default
72:41 - uh you can you know get take a look at
72:44 - some of the code maybe we'll do a stream
72:46 - where we maybe write some tests that
72:48 - might be
72:48 - that might be a good thing to do
72:50 - i need myself to learn more about tests
72:52 - so maybe we'll try to do that
72:55 - depending on the time though that might
72:57 - be something that we do a stream about
72:59 - after we launch the site because
73:02 - that's not usually a good idea but un
73:05 - unfortunately we just don't have a lot
73:06 - of time to get it launched
73:08 - uh vivek says hello
73:11 - uh hey vivek thanks for joining us evo's
73:14 - here hey evo how's it going
73:18 - um
73:20 - let's see
73:23 - oh horseshit said we have instructions
73:25 - for the fork and the contributing file
73:27 - so i did mention before about cloning
73:29 - and forking the repo
73:32 - so
73:33 - check out our contributing file
73:35 - contributing.md that's in the repository
73:37 - it'll give you a lot more info about
73:39 - that thank you for bringing that up
73:40 - portion
73:42 - um
73:44 - vivek asks what language i use
73:46 - javascript
73:54 - let's see
74:01 - uh
74:04 - excel says git add dot is for add all
74:08 - uh to state like dash a
74:12 - um
74:14 - i guess i didn't i never used dash a for
74:17 - all so yeah the dot the little period
74:19 - after git add
74:21 - uh that means all so you just add
74:23 - everything
74:24 - uh
74:25 - to be ready i think they call it it's
74:27 - staged when you do that so you stage
74:30 - everything to be committed
74:33 - all right
74:36 - i'll come right back to where i left off
74:38 - in the live stream after we finish
74:41 - this this next coding session
74:47 - so
74:48 - here's what i'm going to do we're going
74:49 - to try to make this work in the next
74:51 - session
74:52 - if the next session ends before it works
74:54 - i'm still going to finish
74:56 - and we'll just
74:58 - i'll work on it later
75:00 - hopefully we'll get it done if i can get
75:02 - it done before the session's over then
75:04 - i'll just go straight to the questions
75:07 - so
75:09 - right now i've added in a parent
75:11 - component layout.js i've added this draw
75:14 - items in the state
75:19 - and
75:24 - i have
75:28 - key value pairs for each of our items
75:31 - each of our main uh links that'll have
75:34 - the you know collapsible
75:37 - so now
75:38 - we want to be able
75:41 - to pass this down so the first thing i
75:43 - think we should do is try to pass these
75:45 - down
75:47 - to our
75:51 - to our drawer items
75:53 - and see if we can control them being
75:55 - open or closed just by kind of changing
75:57 - them here in our file
75:59 - so we need to pass it down to the drawer
76:02 - first
76:05 - so in drawer
76:06 - let's go with
76:10 - um
76:13 - drawer items equals this dot drawer
76:20 - the state
76:22 - dot drawer
76:28 - excuse me
76:30 - draw items
76:32 - and that's probably just a space yeah
76:35 - indentation thing
76:39 - all right so we're passing drawer items
76:41 - good we shouldn't have any errors yet
76:43 - excellent
76:45 - now from drawer let's go into our drawer
76:48 - and let's pass down
76:55 - and this is going to be a little bit
76:57 - weird that we're doing it like this
77:00 - for now we wouldn't want to keep it like
77:02 - this but we are
77:04 - just for now
77:05 - um so we're going to say
77:09 - let's see
77:13 - open
77:17 - is open
77:20 - and the is open value we're going to
77:22 - give it
77:25 - is going to be
77:28 - this props
77:33 - drawer
77:35 - item
77:37 - dot about
77:47 - does this make sense
77:50 - oh thank you rick said uh bless you
77:52 - because i sneezed
77:53 - thank you
77:58 - right and
77:59 - normally we wouldn't do this like copy
78:01 - and paste at all we would be mapping
78:03 - over these things just like we did
78:05 - uh in our our draw item component which
78:08 - is what we're going to go to next we
78:09 - would we would
78:10 - do um
78:13 - did we do a map here
78:18 - yeah right here is our map
78:21 - so eventually we'll refactor and do that
78:23 - uh so let's see about
78:31 - academics
78:37 - admissions
78:39 - and then here
78:41 - if you remember i had hyphens
78:44 - so we can't keep the hyphens in there so
78:46 - we're gonna have to use our bracket
78:48 - syntaxes or bracket notation instead of
78:51 - dot notation
78:52 - so that we can do this
78:58 - so i saw um
79:01 - someone said in there it'd be better to
79:03 - use
79:04 - john said it'd be better to use faith in
79:06 - life altogether leave out the hyphens
79:09 - which we could do that it's true
79:11 - um
79:14 - but this is a cool opportunity just to
79:15 - show a different
79:17 - a different way to do it
79:20 - um all right let's save that to verify
79:24 - we don't have errors oh we do
79:25 - cannot reproperty about of undefined
79:28 - okay so we have something that's
79:29 - undefined here
79:31 - let's see what's going on
79:35 - this props drones
79:40 - let's go back to our layout
79:43 - drawer
79:47 - items
79:54 - this state draw items
79:58 - to our items
80:04 - all right
80:06 - let's see
80:12 - this props oops
80:14 - i messed it up i added a um
80:22 - well yeah i really messed that up
80:24 - alright
80:33 - did i get them all
80:37 - i
80:38 - never mind
80:39 - uh
80:42 - let's change this all right so i just
80:45 - totally messed up on
80:49 - spelling so we're going to draw items
80:52 - and capitalization
80:54 - lowercase
80:56 - all right let's see if we get rid of
80:57 - that
80:58 - yay okay we got rid of that let's verify
81:00 - these still work great they still work
81:03 - okay so now that we're passing this down
81:06 - let's go to our drawer item component
81:09 - and we should have access
81:13 - to
81:15 - the drawer item property so is open
81:21 - so open items let's see if this works
81:25 - so open items equals this
81:29 - props
81:32 - is
81:35 - no no we don't want to do it like that
81:38 - we can
81:40 - can we make this a stateless function
81:43 - yeah we're going to be able to
81:44 - eventually make this a stateless
81:45 - functional component so let's remove
81:48 - this for now
81:50 - and
81:51 - we're going to change this in just a
81:52 - minute
81:54 - but for now
81:55 - we can
81:57 - change this part this collapse part
82:00 - it's going to be this props is open
82:07 - okay
82:08 - let's save that hopefully we don't get
82:11 - an error yay
82:12 - so everything should be oops cannot read
82:14 - open items of gnaw where are we using
82:17 - open items at
82:20 - uh open items
82:26 - uh okay i have to change it here as well
82:32 - let's make sure it's not being used
82:34 - elsewhere
82:36 - props
82:37 - is open
82:39 - let's save that
82:43 - all right so we click it now when i
82:45 - click this nothing should happen
82:46 - well actually we we get a an error which
82:49 - is fine that's what should happen
82:51 - because when we try to run this it's not
82:54 - finding open items
82:56 - now this is the test that should tell us
82:58 - whether or not
82:59 - this is going to be able to work
83:02 - here
83:03 - if we change
83:05 - let's change about to be true
83:07 - and save
83:09 - when we go here about should be open
83:12 - yeah it's open
83:14 - awesome
83:15 - now
83:17 - let's close it
83:22 - say false and then let's try to open
83:24 - admissions
83:30 - yay admissions opens all right great so
83:32 - we can now control whether or not these
83:34 - are open and closed by modifying the
83:36 - state of layout the parent component
83:41 - wonderful so step two
83:44 - is now finished we can control the state
83:46 - step three
83:47 - we need to be able to click it right so
83:50 - we need to change
83:54 - this we need to use this expand item
83:57 - modify it a bit to work with our new
83:59 - system here
84:00 - and then pass it down to our component
84:03 - instead of having it right here
84:07 - okay
84:08 - so let's do that now
84:11 - so we need to make this
84:14 - our expand item we can keep the name
84:16 - that's great and we need to make this be
84:18 - open
84:20 - items
84:22 - or a drawer item
84:26 - so this is going to be drawer item
84:28 - but what we're going to do
84:32 - is get the previous state
84:38 - um
84:44 - all right to be open we want it to be
84:48 - true or false
84:52 - draw items oops sorry drawer items
84:59 - and
85:00 - what we want to do
85:08 - all right this would be tough
85:10 - so we're going to send we're going to
85:12 - send up
85:13 - that function
85:14 - [Music]
85:16 - um we're going to send in the name
85:19 - the id
85:25 - and then
85:43 - all right i think i think we got it
85:46 - i think i have it uh let's find let's do
85:49 - this
85:52 - um
85:53 - it's been a little while since i've used
85:55 - this
86:20 - you
86:30 - um
86:32 - this will need to be
86:39 - item id
86:47 - m id
86:57 - animal solutions
87:16 - all right i'm probably messing this up a
87:19 - lot
87:22 - um
87:24 - but here's what i'm trying to do
87:26 - uh i think i'm just getting syntax wrong
87:30 - basically what i'm trying to do is
87:32 - whatever the state of drawer items is i
87:35 - want to keep it the same and only change
87:37 - the item
87:39 - that's just happened for the click so
87:41 - you know some of them are already open i
87:43 - want to keep it like that so let me look
87:45 - up
87:47 - uh
87:49 - what is this
87:56 - object that's this
87:57 - is it the spread spread syntax
88:07 - yeah
88:09 - all right so i'm gonna check ndm
88:12 - mdn for lead objects on objects
88:28 - i know we've done this before
88:52 - your items your updated key value okay
88:54 - so rooks
88:56 - um
88:58 - i just saw leonardo says uh jesse you
89:00 - demand thank you i appreciate that
89:03 - um
89:04 - all right so rex type in some stuff in
89:06 - for me presta drawer items dot your
89:08 - updated key value okay
89:11 - um
89:12 - that's what i was i was missing
89:20 - items
89:23 - and then that syntax
89:27 - expected token
89:43 - do i need that
89:45 - no
89:50 - i think i have too many
89:53 - parentheses
89:55 - no
89:58 - no that was the right amount
90:02 - what am i missing
90:10 - i need another one of these okay
90:12 - no
90:15 - messing something up here
90:17 - all right
90:18 - consistent spacing is that what i'm
90:20 - messing up
90:52 - oh
90:54 - so works all right rick's saying remove
90:56 - that
90:57 - and then
91:06 - then we're going to do
91:12 - item id
91:22 - it's gonna be
91:24 - here we go all right harshit has some
91:26 - stuff here
91:28 - uh try down sure
91:33 - previously
91:35 - all right let's see
91:36 - uh let me copy and paste
91:39 - what harsh it has
91:45 - all right so let's
91:51 - all right
91:55 - it's it's cool um
92:00 - let's see
92:04 - okay
92:06 - so drawer items
92:09 - um
92:10 - all right so previous state for item
92:14 - item id previously for it i might have a
92:16 - minute great okay cool
92:18 - thank you horoshit
92:21 - this was what i was attempting to do as
92:23 - you can see i was kind of stumbling
92:25 - through it so let me see
92:28 - i have something wrong here what is
92:30 - wrong
92:34 - uh do i need all of these
92:38 - i think
92:46 - maybe i don't need that one
93:00 - um
93:09 - oops spelling yeah
93:11 - thank you rook
93:14 - items
93:18 - and what am i doing here unexpected
93:20 - token
93:23 - all right so let me go through these so
93:25 - i need this one to close that one
93:28 - and one two
93:30 - good this is closed here
93:32 - and then
93:35 - this one
93:38 - is closed here
93:40 - all right great
93:44 - it should be fine appreciate what it is
93:53 - what is wrong
94:14 - all right i can't see where
94:16 - this is going wrong
94:20 - i'm missing
94:22 - oh thanks harshit i'm missing a
94:28 - parenthesis
94:31 - there no did i get it wrong
94:33 - requires a space
94:37 - before
94:39 - what the heck
94:46 - oh is this what they want
94:48 - all right
94:50 - all right
94:53 - so
94:55 - now
94:57 - previous state is not defined
95:01 - oh pre-state that's what i had
95:08 - pre-state there we go
95:11 - all right so at this point
95:14 - hey see you rook thanks for watching and
95:16 - thanks for all the help i really
95:18 - appreciate it okay so we're close now
95:22 - so
95:24 - next step is
95:25 - pass this function down through props
95:30 - all the way down to our drawer item so
95:32 - we gotta pass it to drawer and then from
95:34 - drawer to drawer item and then call this
95:36 - function on click
95:39 - so let's find drawer and
95:41 - what are we going to do this is this uh
95:45 - let's call it expand item right
95:50 - expand item equals
95:53 - this
95:54 - dot expand
95:57 - item
95:59 - right
96:04 - harshit says you definitely need format
96:06 - on save i know i thought i said it to
96:08 - format on save but i guess i didn't i
96:11 - have to go back and check check my
96:13 - settings again
96:16 - all right so now we're passing this down
96:18 - to drawer
96:19 - let's do the same here and now i'm
96:21 - really wishing i didn't just copy and
96:23 - paste all these drawer items
96:26 - but let's do
96:31 - expand item
96:32 - equals
96:36 - this props
96:39 - span item
96:42 - and now
96:46 - i'll just do this here
96:50 - actually let me do it like this
96:51 - [Music]
96:58 - a little messy but
96:59 - we're going to change all this anyway so
97:01 - now we're passing it from drawer down to
97:04 - drawer item so it should be available
97:06 - for drawer item we can
97:09 - get rid of this
97:11 - and since we've already called it expand
97:13 - item that'll be one less thing we have
97:15 - to worry about so any place where we
97:16 - have this dot expand item which should
97:18 - be once good just once we can do this
97:21 - dot props
97:23 - dot expand item but we what we want to
97:26 - do is give it more than just this prop
97:29 - so we're going to do
97:35 - a little arrow function
97:38 - and we're going to pass it
97:42 - our id
97:44 - so what do we call that
97:48 - uh primary text oh did we not given an
97:51 - id yet
97:54 - all right we need to give it an id
97:56 - uh
97:57 - so
97:58 - i'm gonna call this
98:00 - uh item id
98:04 - that's uh
98:05 - yeah
98:07 - item id and i'm actually gonna take away
98:09 - this props
98:14 - because we're gonna we're gonna
98:16 - destructure it
98:24 - uh so let's do
98:26 - is open and
98:28 - um what did we call this
98:31 - expand item
98:35 - and then now
98:37 - this would work and then anywhere we're
98:39 - doing this props is open
98:41 - we can change it to
98:45 - just is open
98:48 - wonderful
98:51 - all right so we're going to do this and
98:53 - we're going to pass it item id
98:56 - so let's add item id in here
99:01 - and then let's pass an id into here
99:05 - so
99:09 - we'll go with
99:15 - oh yeah
99:32 - all right
99:33 - we're going to say
99:36 - item id
99:38 - equals
99:40 - and we're just going to give the id of
99:43 - first
99:44 - about
99:46 - so we have about
99:48 - and
99:51 - academics
100:00 - that makes
100:02 - admissions
100:07 - and
100:10 - faith
100:12 - and
100:13 - life
100:14 - wonderful
100:15 - all right so now we're passing down the
100:17 - proper id which will be used
100:22 - to send up on a click
100:24 - great save that and save that
100:27 - and
100:28 - let's see what happens
100:30 - hey no errors always a good sign
100:33 - yay look at that it works it works so
100:37 - when we do this what's really happening
100:40 - is
100:42 - the click
100:44 - is calling this expand item function
100:47 - that's been passed down from layout to
100:50 - drawer to draw item so now it's the
100:53 - click and the data from the click which
100:56 - is our id
100:58 - is being passed up through drawer into
101:01 - layout
101:02 - once it gets to layout
101:04 - the expand item
101:06 - takes that item id
101:08 - and it uses it
101:09 - to change the state
101:12 - and set whatever that id is to the
101:14 - opposite of what it previously was so
101:16 - either true or false
101:20 - once the state changes then that
101:22 - triggers a re-render
101:24 - and then that's why we see the change
101:27 - here
101:29 - so that that's how react works
101:33 - that's cool this was really a cool
101:34 - exercise about state so here's the thing
101:37 - my timer went off
101:38 - but the last step is now going to be
101:41 - pretty easy because all we'll have to do
101:44 - is this app bar menu item
101:47 - is
101:50 - we're gonna pass down that same expand
101:52 - item function
101:55 - we'll pass it
101:57 - all the way down
101:58 - to here
102:00 - and then we'll have an on click
102:03 - our on click that's toggle drawer
102:07 - uh let's see so we need we need more of
102:10 - the toggle we need soggle drawer
102:14 - where are you passing in link id so
102:16 - maybe we don't need that let's go up to
102:19 - drawer
102:23 - let's see if this works
102:25 - where's our toggle drawer
102:30 - it's in layout isn't it
102:43 - all right this is probably not the best
102:44 - way to do it but it's the fastest way to
102:46 - get it working before i end
102:50 - um
102:53 - let's see
102:56 - her should send
102:58 - he would have stuck for a half hour if
103:00 - i'd not written that snippet i don't
103:01 - know about a half hour i gave it five to
103:03 - ten minutes because i already had like
103:05 - half of it typed out
103:08 - um
103:12 - let's see
103:13 - we have our toggle drawer we're gonna
103:15 - pass in
103:17 - item id
103:19 - this stage for our toggle drawer
103:21 - wonderful
103:23 - and then
103:28 - what we also want to do is
103:32 - um
103:38 - id
103:40 - and
103:41 - we want to do
103:58 - this start expand item
104:03 - item id
104:05 - all right so here's what i'm doing
104:07 - um harsha says that's hyperbole
104:12 - well it's not it's
104:14 - it's close enough to being accurate that
104:16 - i don't know that it's really hyper
104:19 - because
104:21 - i mean i'm we've we've all seen me take
104:23 - a really long time to do something
104:27 - um
104:29 - all right let's see
104:31 - okay so here's what i'm trying to do
104:33 - so when toggle drawer is clicked
104:36 - or
104:36 - if there's an item id it's going to
104:39 - expand that item
104:41 - um
104:43 - but
104:44 - if not it's not going to expand it right
104:46 - so but it's still going to toggle the
104:48 - drawer no matter what we got to do it
104:50 - like this because sometimes we're going
104:52 - to toggle the drawer
104:53 - with the the button for toggle and we're
104:56 - not going to want something to expand
104:57 - automatically so let's see if it works
104:59 - the reason i said i don't want to do it
105:01 - like this because
105:02 - it just seems like my components are way
105:04 - too intertwined in different ways right
105:06 - now and it would be a pain to split them
105:07 - apart and reuse them
105:09 - that's why
105:11 - i keep saying something like redux comes
105:13 - in handy because it would let us keep
105:14 - our components way cleaner and more uh
105:18 - like contained and reusable
105:20 - this solution works
105:22 - and it might even work forever for this
105:24 - site
105:26 - but it's it's definitely not ideal it's
105:28 - not the best way but this should work so
105:31 - let's first try this
105:33 - great so we're not getting an error
105:35 - saying like hey you didn't pass an item
105:37 - id wonderful now let's click about
105:40 - yay
105:41 - and now we've clicked about and it's
105:43 - expanded great academics expanded
105:47 - uh
105:48 - probably what we want to do though
105:51 - we wouldn't want to keep everything
105:52 - expanded we would want to close
105:54 - everything else
105:58 - so the only thing i would add to this is
106:01 - maybe something that
106:05 - would if there is an item id it would
106:07 - close everything so it would set
106:09 - everything to false
106:11 - and then run
106:13 - this this function
106:15 - so that's the only difference other than
106:18 - that this works
106:21 - yay so we can open we can close we open
106:24 - it's the right one wonderful let's open
106:27 - it again oh
106:29 - ah here's a bug
106:30 - right
106:31 - if we open it
106:33 - and then close and then try to open
106:34 - again
106:36 - hey it's it's done so what we want to do
106:38 - then is i suppose
106:44 - we don't want that to be a toggle
106:47 - so that's another thing we'll have to
106:48 - work on
106:50 - uh we want it
106:53 - yeah we we want to
106:55 - change how that behaves
106:59 - so
107:00 - my timer is up so i'm not going to work
107:02 - on that now because basically it works
107:04 - there's just
107:05 - one little bug that we've encountered
107:10 - but wow okay so we got the functionality
107:12 - that we wanted let me go back up in the
107:14 - live chat to where we left off
107:17 - and i'm going to answer everything in
107:18 - the live chat and
107:20 - then uh we'll wrap things up
107:26 - let's see what time did i stop
107:38 - also if you need me to go over anything
107:40 - that i just did please let me know in
107:42 - the live chat i'd be happy to go back
107:43 - over
107:45 - it's possible that i skipped through
107:47 - something really fast that wasn't
107:49 - straightforward
107:51 - sometimes i tend to do that if i start
107:52 - to get into it
107:57 - that was actually pretty good i i didn't
107:59 - say i won't say i was in like flow state
108:00 - because it's hard to do when i'm doing a
108:02 - stream but
108:03 - it's pretty close i haven't gotten into
108:05 - that flow state in so long i i need to
108:08 - get i need to get some work done
108:12 - all right
108:20 - evo says quick question what are your
108:21 - opinions on server side react like
108:23 - next.js for example what could be better
108:26 - and what are its strong sides
108:28 - um i really like server side react the
108:30 - server side rendering is nice
108:33 - um
108:35 - i think it's strong the strong side
108:38 - point is um
108:40 - you can
108:42 - your content is available to search
108:43 - engines which is awesome you can do
108:46 - caching of the markup on the server side
108:48 - which lets you serve it up really
108:50 - quickly so i think that's cool i like
108:51 - that
108:56 - as far as what could be better
108:59 - i really like the way next does it it
109:01 - makes it easy
109:04 - um i suppose
109:06 - it does require you to use node
109:10 - on on your server which otherwise you
109:13 - don't necessarily need to use node with
109:15 - react not a really problem for me i i
109:18 - like using node but uh not everybody
109:21 - uh you know might be able to use it
109:24 - um
109:25 - the other downside
109:29 - i don't know
109:30 - i don't know that's kind of for me i'm
109:32 - sure there are other things i just can't
109:34 - think of any right now
109:37 - um
109:38 - vivec says what is react is react like
109:41 - netbeans or something
109:43 - andrew says reacts to javascript library
109:45 - for building user interfaces
109:47 - um yeah yeah that's a really good answer
109:51 - so yeah check it out if
109:54 - vivec check out the react documentation
109:57 - it'll explain a lot more about what
109:59 - react is
110:01 - uh evo says it's a library developed by
110:03 - facebook which allows you to create
110:05 - browser applications in javascript yeah
110:07 - definitely it can actually do even more
110:09 - than that but just for like a simple
110:11 - explanation then keep it like that vvx
110:14 - says oh like google developed angularjs
110:17 - exactly i know
110:19 - um
110:20 - they're not exactly in the same class
110:22 - like angular and
110:24 - react
110:26 - but for the purposes of this question if
110:28 - you kind of think of them and being in a
110:30 - similar category then that's that's
110:32 - right that that's a good way to think of
110:34 - it
110:36 - andrew says i've seen some people refer
110:37 - to react as a framework but i
110:40 - i think since it's only a view library a
110:43 - view libraries more accurate i do see
110:45 - those terms used interchangeably though
110:47 - andrew i think you're right on with that
110:50 - uh it's really easy to use them
110:51 - interchangeably i do it um sometimes
110:55 - accidentally but you're right uh
110:57 - technically i believe react is a library
111:00 - and not a framework and for the very
111:02 - reason that you said it's only the view
111:04 - so your traditional mvc model model view
111:07 - controller or some people say mv star
111:12 - however you want to do it
111:13 - react is really only the v the view part
111:16 - in that model whereas something like
111:18 - angular you could do the entire mvc just
111:20 - with angular
111:24 - evo says
111:26 - um
111:28 - oh okay in regard to it being like
111:30 - angular he says it's not really like
111:32 - anger there are some differences you
111:34 - should look into them and pick one you
111:35 - like yeah
111:36 - yeah there are definitely well kind of
111:38 - we just explained some of the
111:39 - differences there
111:41 - uh it's uh conda says react that's crazy
111:44 - start starting learning this week uh
111:47 - it's hard hoping to understand better
111:49 - big ups uh jesse oh thanks yeah
111:52 - hopefully that this stream helps a bit
111:55 - um and feel free to ask me any questions
111:57 - there are some other videos on this
111:59 - channel that are more like a beginner
112:01 - tutorial on react so check those out if
112:03 - you get a chance
112:05 - evo says jesse a mechanical keyboard is
112:08 - god like i have a cherry mx blue and i
112:11 - love to sit there all day and type
112:13 - random things
112:15 - oh man i really think i might have to
112:17 - get a mechanical keyboard
112:19 - um
112:20 - hey maybe if my uh crypto investments
112:23 - take off then i'll get a mechanical
112:25 - keyboard how about that
112:28 - um
112:30 - yeah but evo you you make it sound so
112:32 - enticing i want to try one now
112:35 - um
112:37 - bilikaya says thank you for doing this
112:39 - with two thumbs up you're welcome i
112:41 - really appreciate it thanks for watching
112:44 - uh peter says i would highly recommend
112:46 - the magic trackpad 2
112:48 - it charges with a lightning cable and
112:50 - has forced touch functionality and it
112:52 - looks slick af if you know what af means
112:56 - then you know otherwise i'm not going to
112:57 - explain it um
112:59 - all right cool i'm going to have to look
113:01 - into that i i may
113:03 - i could probably get
113:05 - my work to pay for that
113:07 - i haven't had any work related expenses
113:10 - for a while so i think it would be it'd
113:12 - be okay
113:14 - i wonder if i get him to pay for a
113:15 - mechanical keyboard
113:18 - i bet i could
113:22 - i'll i'll try
113:24 - um
113:26 - let's see
113:37 - uh jacob was saying i need to wrap the
113:39 - list item with parens in the arrow
113:42 - function i believe that was for the map
113:44 - obviously i guess you don't need the
113:45 - parens yeah let's check that out for a
113:47 - second
113:48 - um
113:49 - where's our in our drawer item for a map
113:53 - uh with an arrow function
113:57 - did we wrap it in parents
114:02 - i guess we ended up doing it in parents
114:04 - didn't we
114:06 - you know what i think it auto formatted
114:07 - to do it in parens but technically you
114:09 - don't need paren so
114:13 - uh
114:14 - yeah i think you don't need parens
114:18 - what is it if it's all on the one can be
114:20 - on one line i forget exactly which
114:22 - situation you need it in which you don't
114:24 - but
114:25 - i don't think it's required although
114:27 - based on our our rules for our
114:30 - javascript style
114:32 - it we do automatically put those in
114:35 - i usually don't do it when i'm actually
114:37 - typing it out but i don't mind if they
114:38 - get added in
114:40 - it can make things a bit more readable
114:43 - uh actually
114:44 - that i should definitely commit this get
114:47 - status
114:48 - double check
114:52 - all right get add
114:55 - our git commit
114:57 - a.m
115:00 - um
115:02 - let's see
115:03 - open
115:10 - new feature
115:11 - open
115:18 - expand
115:39 - um github
115:41 - has a
115:42 - did you get over i think it's udacity
115:44 - has a guide for the way they do commits
115:46 - and this is one of the ways they do it
115:48 - i'm not 100 sure i want to enforce a
115:52 - guide for commit messages just yet
115:54 - but it does come in handy
115:58 - here to categorize things so that's one
115:59 - of the things i'm considering if you all
116:01 - know of another guide for commit
116:03 - messages that you like uh i'm happy to
116:06 - check it out it would be probably a good
116:08 - idea at some point to enforce some type
116:10 - of formatting of commit messages
116:14 - and we'll do
116:16 - get push origin
116:19 - cool now everything we've done is is now
116:21 - available on our repo so you can check
116:23 - that out and
116:25 - you know clone it play with it and um
116:29 - improve it if you'd like and submit a
116:30 - pull request
116:37 - okay so rook has something from the
116:38 - react docs we were talking about what to
116:40 - use as the key earlier
116:42 - when we were mapping through
116:44 - and it says from react docs we don't
116:46 - recommend using indexes for keys
116:48 - if the order of items may change this
116:51 - can negatively impact performance and
116:53 - may cause issues with component state so
116:56 - it works but performance
116:58 - all right cool
116:59 - um so yeah the order doesn't change here
117:02 - so it's probably okay to use
117:04 - i usually never use it unless i really
117:07 - can't think of anything else
117:11 - but so just in general i i don't
117:15 - but i guess it it's acceptable in in
117:18 - circumstances where the order won't
117:19 - change
117:24 - sanjay says
117:27 - how do you handle responsive design with
117:29 - material ui
117:30 - uh does it have grids or do you write
117:32 - custom flexbox uh it comes with its own
117:35 - grid uh components and that handles a
117:38 - lot of that so a lot of it's kind of
117:39 - built in if you use their components
117:41 - properly
117:44 - uh let's see
117:49 - random random says what is the theme
117:52 - variable in the styles method and how do
117:54 - components get access to it
117:57 - all right so
117:58 - to get more info on that check out the
118:00 - material ui documentation for the beta
118:03 - version
118:04 - but essentially uh we have like this
118:07 - with styles um
118:09 - down here
118:10 - we're importing it
118:12 - up here as well
118:14 - and
118:15 - that ties it all together
118:18 - so i don't really
118:21 - i haven't read the documentation on that
118:23 - for a while and i think harshit might
118:25 - have set it up for this one so
118:27 - i don't feel comfortable going into it
118:28 - right now i don't think i could explain
118:30 - it properly
118:31 - but
118:32 - inside the component that's how it is uh
118:35 - if you want to check out how to set that
118:37 - up in the root
118:38 - then i would check out the documentation
118:41 - or check out the repo and see you know
118:43 - kind of what we're doing in the root
118:45 - component
118:51 - let's see
119:09 - let's see
119:16 - rook says capitalization spelling is the
119:19 - main cause of errors for me glad to see
119:20 - i'm not alone
119:22 - yeah for sure that's
119:24 - always a cause of errors
119:30 - rook says things like that changing the
119:31 - false to true makes me really happy for
119:33 - some reason and seeing it work
119:35 - afterwards of course yeah it is
119:37 - satisfying
119:47 - um
120:00 - all right
120:12 - all right should i see what you're
120:14 - saying uh to change the printer es lin
120:16 - integration to true and editor format on
120:18 - safe to true i will do that
120:22 - not right now but i will do that stephen
120:24 - says hey jesse went ahead and applied a
120:26 - couple ui ux entry web development jobs
120:29 - applied too sorry i missed the two to a
120:31 - couple of ui ux entry web development
120:34 - jobs to see what happens i live in
120:36 - austin texas which currently currently
120:38 - has a ton of openings thanks for the
120:40 - support
120:41 - oh yeah no problem and uh
120:43 - congratulations on applying i hope you
120:45 - get some interviews and and get a job
120:48 - uh so yeah that's awesome and um
120:52 - you know applying to as many places as
120:54 - you can definitely helps your odds of
120:56 - getting a job so
120:57 - i would say even apply to places that
121:00 - maybe
121:01 - you think you're a little bit not you
121:02 - know under qualified for
121:05 - uh you never know you know you might you
121:07 - might get a job
121:09 - so you never know what candidates
121:10 - they're gonna get
121:12 - but please let me know how it goes let
121:14 - me know if you get an interview and
121:15 - stuff and
121:16 - you know uh
121:18 - good job good job flying
121:25 - let's see
121:35 - all right harsh it's saying change the
121:37 - previous to true and it will fix the bug
121:40 - uh at the last line
121:43 - well here's the thing though
121:46 - i
121:48 - i don't think it will
121:50 - it'll fix the bug but it'll cause
121:52 - another one right because we're using
121:53 - this same thing
121:55 - for our clicks
121:57 - for this
121:58 - so then what would happen is every time
122:00 - we clicked it would just keep saying
122:02 - true so we could open but we wouldn't be
122:03 - able to close
122:06 - so we needed to do something
122:09 - we need to do something about that
122:11 - so
122:13 - like i said that solution will fix one
122:15 - thing and then uh
122:18 - cause another bug
122:20 - unless i'm misunderstanding the solution
122:23 - uh bruce says hey jesse mind if i ask
122:26 - you a question about a project i'm doing
122:28 - yeah no problem
122:30 - uh ask away
122:32 - uh harshad said without node there is no
122:35 - server-side rendered react
122:37 - yeah as far as i know that is definitely
122:38 - the case
122:40 - evo says a mechanical keyboard is really
122:42 - cool you have four different main types
122:44 - brown black red and blue and you need to
122:46 - research the differences a class a
122:48 - classmate of mine invests in crypto
122:52 - it crashed last week and it was so sad
122:54 - to see
122:56 - also by the way with cherry mx blue i
122:59 - was referring to the switch style
123:00 - usually color coded the brand itself
123:02 - uh is a ducky one good keyboard keycaps
123:06 - could be better
123:08 - all right so
123:09 - yeah i'll definitely i'll do my research
123:10 - on the key keyboards when i'm ready
123:13 - uh to purchase one yeah the crypto thing
123:16 - is um
123:18 - i'm no expert in crypto but i'll just
123:20 - say
123:21 - it's it's funny to me seeing the
123:23 - headlines because
123:26 - like i i get the headlines you know on
123:28 - my phone
123:29 - about things going on in crypto
123:31 - and they're always so behind so like the
123:33 - headlines will say like ah the crypto
123:35 - market crashed
123:37 - but then if you look at the actual
123:39 - prices they already recovered
123:41 - it it moves so fast
123:44 - it's hard for the news to keep up
123:46 - uh
123:47 - that's just it's kind of funny to me the
123:49 - market's crazy like
123:51 - if you invest anything in cryptocurrency
123:53 - right now
123:54 - it better be money that you can afford
123:56 - to just lose
123:58 - because
124:00 - do i think it's going to crash to
124:01 - nothing no
124:03 - but there's really no guarantee it's
124:06 - just really wild right now so it's kind
124:08 - of fun
124:09 - i think i don't think it's a gamble i
124:11 - think it's a little bit better
124:13 - odds than a gamble if you if you do it
124:15 - right but
124:17 - it's not a safe investment at all so i
124:20 - don't want anybody like taking
124:22 - saying that i'm endorsing it or thinking
124:24 - you should put all your money in it
124:25 - right now
124:26 - if you have a little bit of extra money
124:28 - that you wouldn't mind losing
124:31 - then i think crypto is a cool place to
124:33 - put it you might get lucky on that
124:38 - um
124:42 - steven says how do you
124:44 - how do teams accept you when you are
124:46 - under qualified positions i don't want
124:49 - to go to a job to fail kind of worries
124:51 - me are most most teams supportive of
124:53 - teaching
124:54 - i don't really know it would just it
124:55 - would depend on the team to be honest
124:57 - with you
124:58 - i've heard people talk about going into
125:00 - teams and feeling like they don't know
125:02 - what they're doing and they're not being
125:03 - supported
125:05 - sometimes they work through that it's
125:07 - okay sometimes they don't uh it really
125:10 - just depends on the team to be honest
125:12 - with you so you
125:13 - hopefully in your interview process
125:16 - you'd be able to get some sort of feel
125:17 - for that
125:19 - uh but
125:21 - you know some places just kind of expect
125:23 - you to learn on your own
125:24 - some places do a really good job of
125:26 - mentoring
125:28 - it's just hard to know
125:30 - if if you can talk to people that
125:31 - already work at a place that's probably
125:33 - your best way of finding out
125:39 - uh
125:39 - [Music]
125:42 - debo prio
125:44 - says
125:45 - hey jesse when i click on about and open
125:48 - academics then the about section remains
125:52 - open can you make the about section to
125:54 - not remain open similarly for the others
125:56 - yeah for sure
125:57 - yeah i definitely want that to be the
125:59 - case so
126:00 - that's another thing
126:03 - so when
126:05 - when any one of these are clicked
126:08 - we want to automatically shut everything
126:10 - else
126:11 - and only open this
126:14 - oh wait a second
126:16 - that'll fix our bug
126:18 - that'll fix it hold on
126:23 - yeah
126:24 - okay so this this will fix our bug
126:27 - if the first thing that happens is
126:29 - everything gets turned to false and then
126:32 - the one you click on gets open that'll
126:34 - fix the bug because
126:36 - it'll automatically be false and then
126:39 - it'll get open
126:41 - every time you click the only thing that
126:42 - will happen is if you try to open it
126:44 - again this will be open but i think
126:46 - that's fine i think that's actually a
126:47 - good behavior
126:49 - so
126:50 - they they both prio
126:56 - okay so it's pronounced
126:58 - de beauprio
127:02 - they
127:03 - they beau priyo
127:06 - dabo prio all right i'm gonna try my
127:08 - best to remember that thank you for um
127:10 - uh for let me know how to pronounce that
127:15 - all right cool
127:17 - you know what let me
127:19 - let's see
127:39 - okay
127:41 - wait a second is this not gonna work
127:43 - expect your tab or space
127:49 - all right cool i'll put that comment in
127:51 - there
127:52 - and um
127:53 - that way i'll remember to write this
127:57 - basically we'll just have to do
127:59 - something like this
128:00 - um but make set everything to false
128:07 - yeah that'll work
128:11 - cool
128:12 - um
128:15 - evo says i have a rather personal
128:17 - question how did you end up at your
128:18 - current job and how was your first day
128:21 - uh i ended up in my current job so i was
128:24 - freelancing
128:26 - but
128:27 - it was a little bit stressful especially
128:29 - for my wife because we didn't know how
128:31 - much money we make every month i had
128:33 - some clients that i had steady income
128:35 - from but then i had other times would
128:37 - just be you know some months i'd have a
128:38 - lot of work some months i wouldn't
128:40 - so that was really stressful for her not
128:42 - knowing
128:43 - you know would we have money for this or
128:45 - that you know not being able to plan in
128:47 - budget
128:49 - so i decided to start applying for jobs
128:53 - and i'm going to be completely honest
128:54 - with you freelancing i was not making as
128:56 - much money as i i wanted to be making
128:58 - our family was growing
129:01 - and uh the
129:02 - i was trying to get into some other
129:04 - markets because my my local market is
129:07 - economically depressed right now and it
129:09 - has been for for years
129:11 - so there just wasn't a lot there wasn't
129:13 - a lot of high paying jobs it was all
129:15 - really small jobs and uh it just it
129:17 - wasn't worth all the work so i had kind
129:20 - of broken into the market around new
129:22 - york city and i started to get clients
129:24 - and referrals there so things were
129:26 - picking up but i still thought you know
129:28 - what it's going to be it'll be a good
129:29 - idea if i just apply some other places
129:32 - it would definitely make my wife
129:34 - wife happy
129:35 - and we would you know basically have
129:37 - some more security and stability which
129:40 - is definitely a good thing when you have
129:41 - kids
129:43 - at the time i had
129:44 - four no i had three kids at the time
129:48 - uh so
129:50 - i started applying for jobs
129:52 - i actually
129:54 - took a a job
129:57 - and
129:58 - it was a work from home job
130:01 - and i was in like kind of a trial period
130:03 - to see whether or not i like the job or
130:05 - whether or not they wanted to keep me
130:07 - but at the end of that period i was
130:08 - going to get hired full time
130:10 - so i had started doing that and i was
130:12 - doing that for a while and then i heard
130:14 - back about this job which i had applied
130:16 - to
130:18 - months before it took a really long time
130:21 - and
130:26 - so it was kind of a funny thing i
130:28 - applied
130:29 - for a job called academic web
130:31 - coordinator obviously i'm not the
130:33 - academic web coordinator so i didn't get
130:35 - the job it came down between me and one
130:37 - other person
130:38 - who happens to be the guy that works in
130:40 - the office right next to me who's a
130:41 - really nice guy
130:43 - but
130:47 - i went through all the interview process
130:48 - they kept calling me back for more
130:50 - interviews in person and on the phone
130:52 - and i'm like why did they keep asking
130:53 - more questions
130:55 - and finally they called me to come back
130:57 - in in person again
131:00 - and at that point i'm i'm thinking what
131:03 - like what could they possibly ask me i
131:05 - come in there and they hand me a job
131:08 - description and it's for a totally
131:09 - different job
131:11 - and they asked me what i thought about
131:13 - it
131:14 - and i said i read over it and i said
131:16 - this i mean it looks good it looks like
131:18 - a good job
131:19 - and they said good that's what we wanted
131:21 - to hear would you rather do this job or
131:23 - the other job you originally applied for
131:25 - and i said well honestly i'd rather do
131:28 - this job because it seems like it has a
131:30 - much broader scope i get to do more
131:33 - stuff with with the web
131:35 - uh you know web development and so they
131:38 - said great
131:39 - we're going to offer you this job and we
131:41 - already offered the original job to the
131:43 - other guy
131:44 - and uh so
131:47 - that's that's how it worked out so i got
131:50 - hired i started a few weeks later
131:53 - and my first day
131:56 - was just me like meeting everybody and
131:58 - figuring out where things were i didn't
132:00 - have a computer for
132:02 - the first few days because the computer
132:04 - they had ordered me like just took
132:05 - forever to come in
132:07 - and
132:09 - eventually i had uh there they were
132:12 - another employee had switched apartments
132:15 - and they hadn't hired her replacement
132:17 - yet so i took that computer and put it
132:19 - in my office and had something to work
132:21 - with for a while before my actual
132:24 - computer came in
132:26 - um so
132:28 - i don't really remember that much for my
132:29 - first day other than i didn't have a
132:31 - computer and
132:34 - an employee sharon ann who i love sharon
132:36 - and she was like the office mom
132:39 - and she was so sweet she made signs for
132:42 - me so there was a signs at the door
132:44 - little signs on the floor leading up to
132:46 - the office um and just really welcoming
132:51 - so that was that was awesome it was a
132:53 - really cool first day everybody was
132:55 - super nice it was way different than it
132:57 - is now they totally re-uh did the
133:00 - building
133:01 - remodeled everything so i didn't have an
133:03 - office before i had like a cubicle
133:05 - um
133:06 - it was it was weird it was really wild
133:08 - the building was so different but
133:11 - uh that was kind of my first day so
133:14 - sorry that was that was a long story
133:17 - uh but i guess it answers your question
133:19 - i suppose
133:20 - uh so that's how i got here
133:23 - it's nice they have good health
133:25 - insurance benefits so that's great for
133:27 - the kids
133:28 - and um you know steady income
133:31 - sal it's salary work uh retirement plan
133:35 - and
133:38 - my wife and i and my kids can take
133:40 - classes here for free i mean it's gonna
133:42 - be a long time before my kids are old
133:44 - enough to come here who knows if i'll be
133:45 - working here by then but if it does
133:47 - happen it'll end up being worth a lot
133:50 - uh so
133:52 - anyway that's how i got i ended up here
133:55 - my original title was integrated
133:57 - marketing communications coordinator
134:00 - after a year it switched to front-end
134:01 - developer which is way more appropriate
134:03 - for what i actually do
134:06 - but that's that's the story
134:17 - all right
134:27 - oh harsha says that is exactly for my
134:29 - name but you don't pronounce it terribly
134:32 - so i don't pronounce it 100 correctly i
134:35 - really want to
134:36 - let me know how i'm supposed to
134:38 - pronounce it
134:40 - um bruce says hey jesse sorry
134:43 - what i wanted to ask you earlier was
134:46 - would you recommend doing a wordpress
134:47 - theme from scratch or redesigning an
134:49 - existing theme
134:50 - it depends on how comfortable you are
134:52 - with the whole process if this would be
134:54 - your first time doing it then maybe
134:56 - it'll be easier to just take an existing
134:58 - theme and redesigning it
135:00 - i find that to be a lot easier most of
135:03 - the time and faster
135:05 - you end up with a lot of stuff usually
135:07 - that you don't need
135:09 - but it's quick
135:12 - if you were to start from scratch and
135:15 - redesign a theme my advice would be
135:17 - start from scratch and make a basic
135:19 - theme that you can then copy and reuse
135:22 - later on so you don't want to be
135:24 - starting completely from scratch every
135:26 - single time i think that's a waste of
135:28 - time
135:28 - but build if you want to build your own
135:30 - base theme
135:31 - and then just make child themes off of
135:33 - that
135:34 - i think that's the way to go
135:36 - uh because there's a lot of things that
135:38 - will probably stay the same from no
135:40 - matter what you want to do
135:42 - so make that first
135:44 - and and then go off it but as i said it
135:46 - kind of really depends on what you're
135:48 - most comfortable with
135:51 - uh steven says the starting pay for
135:54 - almost all positions here in austin is
135:57 - nuts i just need to get my foot in the
135:58 - door
135:59 - that's cool yeah honestly i
136:02 - when i see the pay for developers
136:04 - sometimes like at bigger companies and
136:06 - things i think
136:08 - wow that would be really nice it's
136:11 - definitely tempting for me
136:13 - um
136:15 - james says what are some good ways to
136:16 - get freelance work for beginners
136:20 - uh if you want to try to go on the
136:22 - freelance site sometimes that works i i
136:24 - didn't have much luck with freelance
136:26 - websites uh but
136:28 - some of them you can go to like like top
136:31 - towel makes you take a test first and
136:34 - they're kind of like the middle man
136:35 - between you and good companies
136:38 - so i i would be more inclined to do
136:40 - something like that as opposed to
136:42 - something like freelancer
136:44 - where it's basically just a bidding war
136:47 - and who could bid the lowest
136:49 - uh if you want to go local
136:52 - i would say
136:53 - just start asking people
136:55 - and find local businesses that maybe you
136:58 - can improve their website if they don't
136:59 - have a website
137:01 - if you really have time you really need
137:03 - work then just make a basic website for
137:05 - a company and then show it to them
137:07 - and say hey here's what i've done for
137:09 - your website
137:10 - you know even if it's just a mock-up or
137:12 - like a redesign of maybe just the home
137:14 - page
137:15 - and say are you interested in my
137:16 - services i could build you out a whole
137:18 - website or i could tell you what i've
137:19 - done
137:21 - you know sometimes it's easier
137:23 - to show people the results
137:26 - to convince them that they really need
137:28 - it
137:28 - you know maybe they don't realize how
137:30 - much better their website could be
137:32 - that takes a lot of work and it's kind
137:33 - of like you put yourself out on a limb
137:35 - because you're doing work without
137:36 - getting paid
137:38 - but what you really do need to do is
137:39 - build up your portfolio and get those
137:42 - referrals you know maybe try to target
137:44 - business people in your area that you
137:46 - know have a lot of connections
137:50 - and that's where you want to get if you
137:52 - can if they're happy with what you do
137:53 - they're way more likely to tell other
137:55 - people
137:56 - so a lot of local networking might be
137:58 - your thing if you want to try to branch
138:00 - out to another area like me my economic
138:03 - area is not great for that then you
138:05 - might want to try to really target ads
138:07 - or different seo at another area a
138:09 - bigger city maybe it's going to be tough
138:12 - but once you get your foot in the door
138:14 - and you do a good job for one company it
138:16 - becomes a lot easier to do things for
138:19 - other companies especially if you get
138:21 - referrals
138:22 - you can try to have referral deals like
138:25 - tell your existing clients
138:27 - you know if you refer me you'll get a
138:29 - gift card or
138:31 - i'll do so much work for free for you
138:34 - that helps i've done that before
138:38 - all right okay so harshit has pasted his
138:42 - name
138:43 - um in hindi
138:45 - so i can check out google translate
138:56 - oh cool harshit's name means joyful
138:59 - excellent that's an awesome name
139:02 - and let me listen to this
139:19 - all right i'm gonna work on that that
139:21 - that it's so subtle like i can tell i'm
139:24 - not saying it exactly right but the
139:26 - difference is so subtle i'm having a
139:27 - hard time like grasping it i need to use
139:30 - um
139:32 - i don't i used to take uh like acting
139:35 - classes and stuff when i was a teenager
139:37 - and we went over accents before and one
139:40 - of the key things to learning another
139:41 - accent is learning where they position
139:43 - their tongue in their mouth when they're
139:45 - talking so maybe i'll have to check out
139:49 - you know that part of the world what's
139:51 - what's the correct way to place your
139:53 - tongue and if you can figure that out it
139:55 - makes it so much easier
139:57 - uh to
139:58 - uh to say words in that language and
140:01 - make it sound correct so maybe maybe i'm
140:03 - missing something like that
140:07 - um
140:08 - bruce says thanks i'm new to developing
140:10 - wordpress themes so it's a new field for
140:12 - me and that's really good advice to make
140:14 - your own basic theme and work from that
140:16 - cool yeah and there are some bare bones
140:17 - themes out there that you could take and
140:19 - work from so
140:23 - uh man i can't it's been so long since
140:26 - i've done wordpress themes i can't
140:28 - remember what like the the basic themes
140:30 - are so really sorry about that i used to
140:32 - know
140:33 - i mean this is like maybe four years ago
140:35 - i used to know a lot about wordpress but
140:38 - i've been i've been out of it for so
140:40 - long
140:42 - i don't even know if the stuff i used to
140:44 - use is even
140:45 - you know still in in use
140:48 - um
140:50 - osas says how important uh to know
140:52 - algorithm and data structures and
140:54 - front-end web development on a scale of
140:57 - 10
140:58 - how close a and d s
141:02 - algorithm data structures is related to
141:04 - front end
141:05 - uh personally in my the day-to-day work
141:07 - as a front-end developer i don't deal
141:09 - with it that much but it may come up in
141:11 - an interview
141:12 - some companies really like to test you
141:14 - on lots of different things
141:16 - so
141:17 - if you're if you want to interview try
141:19 - to do your research and figure out
141:21 - what companies use the kind of questions
141:24 - they use and then you may want to learn
141:26 - more about that but personally i've done
141:28 - very little with that
141:33 - but i don't know i might not be a good
141:35 - example for the average developer i'm
141:37 - not really sure
141:39 - uh let's see stephen says the problem
141:41 - that i have is i'm moving from education
141:43 - 10 years as a teacher i learn html css
141:46 - jquery get sas bootstrap uh on the side
141:49 - for the fun trying to make a move has
141:51 - been the hardest oh cool i used to be a
141:53 - teacher as well i taught for almost four
141:55 - years
141:56 - um
141:57 - and then i moved into freelance uh web
142:00 - development so i understand
142:02 - uh it's tough to make the move
142:05 - um
142:06 - stephen says just hard finding a
142:08 - front-end dev job that doesn't require
142:10 - react angular etc yeah well i mean try
142:13 - to brush up on your react skills there
142:15 - are definitely still a lot of places out
142:17 - there that have jquery
142:18 - based websites
142:20 - so there's definitely a demand for that
142:24 - um it may not be one of the higher
142:25 - paying jobs right now
142:27 - but if you'd like to get a job and you
142:29 - don't quite know enough react yet
142:32 - that might be a better way to go or even
142:34 - freelancing there's probably a lot of
142:36 - freelance work you can pick up that's
142:38 - jquery based
142:41 - um dj says can we use bootstrap in react
142:44 - you can use bootstrap and react i would
142:47 - recommend using a react bootstrap
142:50 - library instead of trying to use like
142:52 - the normal bootstrap i think it'll be a
142:54 - lot easier for you you'll run into less
142:56 - problems like that
143:00 - um
143:15 - oh cool
143:16 - uh her should put my name into hindi
143:19 - and put it in the uh live chat that's
143:21 - awesome
143:23 - uh
143:25 - let's see
143:26 - i should say what did you teach as a
143:29 - teacher i taught latin and um uh
143:33 - religion or like theology
143:35 - uh so i taught at a catholic high school
143:38 - so
143:39 - we have theology classes there which is
143:42 - not really normal uh at least in the
143:43 - united states most high schools don't
143:45 - teach theology
143:47 - uh but we did
143:48 - and uh so i thought i taught sophomores
143:51 - juniors and seniors in high school
143:54 - and um
143:56 - yeah so it was i had a good time
143:58 - teaching i hated the meetings and i
144:00 - hated all the paperwork and handling
144:02 - discipline issues i love being able to
144:04 - help out the students uh being able to
144:07 - just like talk to them about subjects
144:09 - especially
144:10 - um i did a course on like um like
144:14 - theology like history like church
144:15 - history and things it was really cool to
144:18 - just kind of like tell them stories of
144:19 - things that happened in history
144:21 - and um
144:24 - that was just fun it was fun and i i got
144:27 - to you know help out students get
144:29 - through a lot of tough things happening
144:30 - in their lives so
144:32 - i think i really had an impact
144:33 - especially on you know there are a few
144:35 - students i think i really had a big
144:37 - impact on
144:38 - and so
144:39 - it was worth all the stuff that i didn't
144:41 - like just for that
144:43 - but uh it didn't pay very much at all
144:45 - it would have been impossible for me to
144:48 - support my family on what i was making
144:50 - um so
144:52 - and it was tough i taught 150 students
144:55 - every day
144:57 - by the end of the day i had headaches
144:59 - every single day
145:01 - so there were there were things that i
145:03 - did not like about it but
145:05 - i love my students and i still talk to
145:08 - some of them and hear from them and so
145:11 - anyway
145:12 - teaching is cool teaching is a very very
145:14 - tough job
145:16 - i i do not think i'd want to go back to
145:18 - teaching high school
145:27 - uh stephen says i do have nine
145:30 - presentations at tcea next month three
145:33 - at
145:34 - uh south by southwest edu and one at
145:37 - south by southwest interactive so i have
145:39 - that going for me wow that's awesome
145:41 - you got a lot of stuff going on steven
145:43 - if any of those presentations are
145:45 - available online i'd love to check them
145:47 - out so please let me know send me some
145:49 - links
145:51 - if you're on twitter you can just dm me
145:53 - on twitter if you don't want to make
145:55 - them like public
145:58 - um
146:01 - they they
146:02 - they vote for yo
146:04 - they vote prio all right is um
146:07 - trying to pronounce that right but
146:08 - anyway it says i'm in my third year my
146:10 - cs degree computer science degree i want
146:12 - to participate in google summer of code
146:14 - this year what should i start doing now
146:16 - so the process gets easier
146:18 - i'm not that familiar with google summer
146:20 - of code so i don't know how much i could
146:22 - help you in general i would just say
146:24 - like
146:25 - um
146:26 - keep at it like whatever types of
146:28 - languages or projects that they work on
146:30 - i would start working on stuff like that
146:32 - now so you're like in practice for that
146:35 - just a little bit every day or every
146:36 - other day
146:38 - will probably help you
146:42 - um
146:52 - let's see
147:10 - uh let's see
147:16 - vijay says learning photoshop will add
147:18 - any value to web design yeah photoshop
147:21 - can for sure
147:23 - there are some other programs like
147:24 - photoshop
147:25 - sketch adobe xd i think they call it
147:28 - uh those ones
147:30 - are all used i think
147:33 - if you just know one of them you should
147:35 - be fine
147:36 - but for web design
147:39 - you know a lot of the adobe products are
147:41 - usually what people use
147:44 - heart uh
147:47 - harshit says i'm also planning to
147:49 - participate
147:50 - in google summer code this year i've
147:52 - gained uh
147:54 - quite a lot of confidence in my skills
147:56 - last year um
147:59 - says that is not the same here man it is
148:01 - regional
148:03 - let's see
148:09 - specifically
148:16 - that's cool i'm gonna have to look up
148:18 - this google summer of code stuff
148:20 - i want to know what it's all about
148:22 - um
148:25 - vince says uh in regard to using react
148:28 - with bootstrap uh it says there is a
148:31 - specific version of bootstrap that's
148:32 - built specifically for use with react so
148:35 - if you google react bootstrap that'll be
148:37 - there so uh thanks vince that's um
148:40 - that's definitely helpful
148:43 - harshit says but that's ridiculous
148:45 - i don't know what was ridiculous i don't
148:47 - remember what i was talking about there
148:49 - um
148:51 - steven says if you go to my twitter
148:52 - handle uh i have my education website
148:55 - listed okay cool
148:56 - i'll uh
148:58 - let me copy and paste your twitter
148:59 - handle now so i don't forget
149:11 - all right cool i just followed you
149:18 - this is it's the hyperlink with steven
149:20 - isn't it
149:23 - cool i'm on the site right now i'll
149:25 - check that out thanks for sharing that
149:27 - okay
149:29 - i'm really exhausted now i need
149:32 - i need a little break i need some food
149:33 - in me so
149:35 - thank you all so much i had a great time
149:37 - well mainly because
149:39 - number one everything worked number two
149:42 - you are awesome
149:43 - and uh really helpful and supportive and
149:46 - positive so
149:49 - i'll be back tomorrow i'm looking
149:51 - forward to it
149:52 - and until then
149:54 - have a great day