00:00 - all right how's everyone doing today
00:02 - everyone's good good okay my name is Joe
00:06 - Matthews at Joe Matthews on the tech
00:08 - Lahoma slack channels you know you can
00:10 - at Joe Matthews me anytime and I'll come
00:13 - show up mysteriously and on Twitter Joe
00:16 - Matthews okay see and I want to talk
00:20 - today about github pages I love github
00:22 - pages it's a weird obsession and I think
00:25 - Kimberly caught on to that it's like do
00:27 - a talk do it
00:29 - and so github pages is an awesome
00:31 - service allows you to host HTML CSS and
00:35 - JavaScript and a little bit of extra
00:36 - functionality too for free dollars three
00:39 - dollars people and that's pretty amazing
00:42 - and it's pretty rare out on the
00:44 - interwebs to get that without ads or
00:46 - anything like that
00:47 - kind of harkens back the Geo cities days
00:50 - a little bit but much better and the
00:52 - fact that it just works and it works
00:54 - well so I could go on and on about get
00:58 - up pages I thought about doing like you
01:00 - know just a good five minutes of just
01:02 - talking about how much I loved it but
01:04 - instead I have an official github pages
01:06 - video and this is at pages github calm
01:09 - and we'll go through a tutorial from
01:11 - that site as well here in a little bit
01:14 - but let me just go and play this video
01:15 - real quick if you're a software
01:20 - developer github helps you build all
01:22 - sorts of great things things that help
01:25 - people things that could land you a job
01:27 - things that could change the world and
01:30 - some things that might not so how do you
01:34 - tell the world about all the great
01:35 - things you're building billboards Direct
01:38 - Mail these days you build a website and
01:42 - there are lots of options out there but
01:44 - so many of these options can be
01:45 - excessive or overwhelming even for
01:47 - someone who develops software get up
01:51 - pages lets you turn github repositories
01:53 - into elegant websites to showcase your
01:55 - portfolio your projects their
01:57 - documentation or anything else you want
01:59 - to share with the world there are no
02:01 - databases to set up and no servers to
02:03 - configure in many cases you don't even
02:06 - have to know HTML
02:08 - everything just works if you're already
02:11 - using github it's the most direct path
02:13 - to create websites for you and your
02:15 - projects so how does it work well github
02:19 - serves all of your project sites from a
02:21 - personal URL tied to your user name or
02:23 - organization github looks for web
02:26 - content for your projects on a special
02:28 - branch for sites tied to an existing
02:30 - repository this branch is separate from
02:32 - your code but you can also create a site
02:35 - for yourself for your organization by
02:37 - creating a repository with your github
02:39 - pages URL as its name and adding web
02:42 - content to its master branch you can
02:45 - even drag and drop your files straight
02:47 - into your browser to upload now if you
02:49 - want to build something a bit more
02:50 - ambitious like a blog or structure of
02:53 - documentation get up pages gives you a
02:55 - streamlined publishing experience with
02:57 - the help of Jekyll Jekyll is an
03:00 - open-source tool that transforms plain
03:02 - text files into websites but it also
03:05 - supports things like variables templates
03:07 - and drafts which give you more control
03:09 - over the format and presentation of your
03:11 - site now no matter which path you choose
03:14 - github pages lets you treat your
03:15 - website's content with the same level of
03:17 - care as the source code and all of your
03:19 - projects because your website's files
03:22 - are part of a github repository you can
03:24 - maintain them using the same family of
03:26 - tools and workflows you already use on
03:28 - github you can use the github flow to
03:30 - manage changes to your website you can
03:32 - even write tests and have github report
03:34 - the status back to you before merging
03:35 - those changes in when you're ready to
03:38 - publish changes just merge them in
03:40 - github automatically builds and deploys
03:42 - your site for you this frees you up to
03:44 - focus on the content of your site
03:46 - instead of worrying about how you'll get
03:48 - it from your computer to everyone else's
03:50 - browser try out github pages with one of
03:52 - your projects today navigate to the
03:55 - Settings tab of your project and use the
03:57 - automatic page generator to create your
03:59 - first site get up will populate your
04:01 - page with some basic content that you
04:03 - can customize with markdown if your
04:05 - project already has a readme file you
04:07 - can import its content here too
04:09 - when you're finished editing choose one
04:11 - of the pre-built beams and publish your
04:13 - site if you need to make changes to this
04:15 - page you can always rerun the automatic
04:17 - page generator or edit the files
04:19 - directly on github for now if you browse
04:23 - to your site's URL you can see it's up
04:25 - and running with a few clicks you can
04:27 - have something beautiful online but this
04:29 - is only a fraction of what you can do
04:31 - visit pages github.com to learn more
04:34 - about all the possibilities github is
04:36 - the place where you can build great
04:38 - things get up pages gives you a way to
04:41 - share those great things with everyone
04:43 - [Music]
04:47 - thank you get up it's a great video
04:51 - alright so that went through a lot and
04:57 - github pages can do a lot and its
04:59 - essence it's a simply a web server you
05:02 - know you have index dot HTML you have
05:04 - your CSS and JavaScript and it hosts it
05:06 - just like Apache or nginx would that's
05:10 - pretty cool stuff but it also has some
05:12 - integration with Jekyll as it showed and
05:14 - that allows you to do a whole lot more
05:16 - but there's though there's a first step
05:18 - in all that and that's the create a
05:20 - github account so bear MIT bear with me
05:22 - while we go through this and you can do
05:24 - you can join github I going to get hub
05:26 - comm /join alright and so for these
05:30 - examples
05:31 - it's a little hard to see I know but it
05:34 - says show me - gh - pages and that's
05:38 - username I chose for all these examples
05:40 - and I got the email address and another
05:42 - password and so we move on to step two
05:44 - which is to choose your plan let's go
05:46 - with unlimited public repositories for
05:48 - free should be open we should share our
05:50 - software and step three tailor your
05:53 - experience I just go ahead and skip this
05:55 - to get skip this step it's kind of like
05:57 - a social media thing what are you
05:59 - interested in it's also kind of a survey
06:01 - type of thing we move on and you're
06:05 - presented with this lovely screen and so
06:09 - you know you might be asking ok what now
06:12 - how do we get started with github pages
06:14 - alright the command line tutorial so the
06:17 - same place that had the video earlier
06:18 - there is a tutorial on pages github com
06:22 - and this is the command line version
06:26 - alright and so this is what the the page
06:28 - starts off with what it looks like it's
06:30 - very nice site and by the way the
06:32 - documentation for github pages and
06:34 - github documentation general is amazing
06:36 - that's my opinion
06:37 - but it's amazing just just take my word
06:40 - for it so the first step you know head
06:42 - over to github and create a new
06:43 - repository name username github Dino dot
06:46 - IO for our examples that's show me - gh
06:50 - - what was it pages dot github that I oh
06:54 - and you know so we're username put your
06:58 - username alright next step go to the
07:03 - folder where you want to store your
07:04 - project and clone the new repository so
07:07 - I just go ahead and hit get clone or
07:10 - type in git clone and then the address
07:12 - of your repository remember it ends with
07:14 - github io all right then go ahead and
07:18 - change directory to the user named I
07:20 - could have that io that should be the
07:21 - folder name after you clone it and then
07:24 - hit that run the echo program command
07:27 - and go ahead and send that into an
07:30 - index.html and so all that index.html
07:32 - will say is hello world and then we get
07:35 - at all
07:37 - get commit and then the the dash in for
07:40 - message initial commits and then get
07:41 - push and the dash do to indicate that
07:44 - you always want to upload to
07:45 - origin/master
07:47 - alright and then you're all done
07:50 - so you go to your file browser and go to
07:53 - your username github I oh and might you
07:55 - know in our case it's showing me github
07:57 - pages so you see at the top show me -
08:00 - github pages github that I oh and there
08:03 - you go hello world and that is my
08:04 - presentation for today thank you thank
08:07 - you
08:08 - not really so if you're like this guy
08:11 - you know you might say what just
08:13 - happened and so you got get clone CD
08:16 - echo get add git commit git push so
08:19 - these you know there's a lot of Linux
08:20 - tool knowledge here and not everyone's
08:24 - up to speed on that so raise of hands
08:26 - like who has some experience with HTML
08:29 - CSS JavaScript almost everybody awesome
08:33 - who has experience with the Linux
08:35 - command line
08:36 - tools involved with that a lot of people
08:39 - you know those that don't don't worry
08:42 - because for the rest of this tutorial we
08:44 - are not going to focus on Linux tools
08:46 - and we're going to focus instead on
08:47 - going through you know going the the
08:50 - easy button route and adding files to
08:54 - the repository
08:54 - violet via github com the web interface
08:57 - which is pretty cool
08:59 - alright so to get to get started with
09:02 - that go ahead and click on new
09:03 - repository and then you're presented
09:05 - with oh okay yeah we have to verify the
09:07 - email address can never skip that so go
09:11 - ahead click verify email address and
09:12 - your pot back here go ahead and click on
09:14 - new repository again and then go ahead
09:18 - and plug in the same thing it did on the
09:19 - tutorial for you to type in in this case
09:22 - show me da - gh - pages github I owe and
09:28 - then we need to click initialize this
09:30 - repository with re me this is important
09:32 - because if you don't do this it won't
09:33 - give you some of the options going
09:34 - forward and so this kind of populates
09:36 - readme dot MD file that basically just
09:40 - says the name of the repository and
09:41 - that's it that helps us get on to the
09:43 - next steps so the next step so after you
09:46 - you know click great repository you're
09:47 - presented with this beautiful page and
09:50 - the button that we want to focus on
09:52 - right now and as I can see here laser
09:54 - points working so there's a readme and
09:55 - here it shows you the readme right here
09:57 - and that's all that's in our repository
09:59 - so we're going to create a new file so
10:01 - you click that create new file button
10:03 - and then that presents you with some
10:07 - options and so you got to name the file
10:08 - we're going to name it index.html kind
10:11 - of like in the example the command line
10:13 - and instead of just putting in hello
10:15 - world we're gonna you know put a little
10:17 - bit more boilerplate in here you know
10:19 - make Google happy a little bit and so we
10:22 - do the doctype HTML we do the HTML
10:25 - element the body element h1 and then
10:28 - hello world and then we have a paragraph
10:30 - that says I'm hosted with github pages
10:33 - alright and then we go to the bottom and
10:35 - you could see like if you don't type
10:38 - anything at all it's going to give you a
10:40 - message that you can use you know create
10:42 - index dot HTML is very reasonable so if
10:44 - you look at your get history 50 million
10:46 - or get you get ajust a bonus there
10:49 - and so go ahead and commit the new file
10:51 - I click on that green button at the
10:52 - bottom and then you're presented with
10:54 - hello world again but this time you did
10:58 - it without having to know any linux
10:59 - knowledge and for everyone in the room
11:01 - at this point I think you know you feel
11:03 - like fin over here and your mind is just
11:05 - blown you're like what can't I make
11:06 - right now what can I put on the internet
11:08 - right now you know and be responsible of
11:11 - course be responsible and so let's let's
11:15 - talk about some more practical examples
11:17 - so let's talk about Nyan Cat nyan nyan
11:22 - cat all right
11:23 - I had never pronounce it right all right
11:25 - and so we're gonna convert code pin it
11:28 - convert a code pin to github pages and
11:30 - so everyone on you know if you take go
11:34 - to free code camp you know some of the
11:36 - projects on there they have you use code
11:38 - Bend you know kind of demonstrate your
11:39 - work and cope in is an excellent tool
11:42 - and show you a little bit what it looks
11:45 - like I found this one nyan cat follow
11:48 - Mouse a code penned by Bruno Cunha and
11:50 - this is a pretty cool code pin and so
11:54 - your you know your you know I don't the
11:56 - bottom will just would normally show you
11:58 - you know the result of these you know of
12:01 - this code but I'm kind of hiding it no
12:03 - spoilers that sort of thing so we have
12:04 - the HTML the CSS and the JavaScript
12:06 - indicated by the three arrows and so
12:09 - what we're gonna basically do is copy
12:11 - this into github pages and so let's go
12:13 - through that so we're gonna create a new
12:15 - repository this time it's kind of called
12:17 - Nayan and then we also have to
12:20 - initialize a repository with readme that
12:22 - way we can add files right away and so
12:26 - the first files do mange is let's just
12:28 - go ahead and type that in the top copy
12:31 - and paste the JavaScript from the code
12:33 - pin next one is main dot CSS this is for
12:38 - the CSS now and we're just gonna go
12:41 - ahead and copy and paste that in alright
12:43 - this one's important we got to do the
12:44 - index.html so I did some more
12:46 - boilerplate here and so code pin is nice
12:50 - and it does a lot of this for you
12:51 - already
12:53 - you know when we switch it to github
12:55 - pages we're gonna have to take some
12:56 - steps to go ahead and make sure that it
12:59 - can find all the files and so very
13:02 - simply
13:03 - you know say the language is English
13:05 - Google was like okay you're English now
13:07 - then we have utf-8 and utf-16 and those
13:31 - are the files that we just created all
13:34 - right and the result is oh okay so we
13:37 - get a 4-1 for 404 file not found error
13:41 - and that means we have to do a little
13:42 - bit more setup so if you hit click over
13:46 - to settings and then you scroll down so
13:50 - sorry go back a little bit so this is
13:52 - the settings on the repository so you
13:54 - click on that settings and you go down
13:57 - to github pages and it says you know
13:59 - where's the source at by default it's
14:01 - none and so github pages is disabled by
14:05 - default on anything except for pages
14:08 - that start with you know basically your
14:12 - user name github not i/o so if it's
14:15 - anything else like in this case nayoung
14:17 - you go ahead and have to go through the
14:19 - settings and choose master branch all
14:23 - right and then after we save that one
14:26 - minute 37 seconds later we have a it
14:31 - shows after you refreshed hit f5 it'll
14:34 - show you the option where you know it
14:35 - you know your your site is published
14:37 - that's awesome so if we click on to that
14:39 - just to show you the URL there is my
14:41 - github username which is show me dot
14:43 - dash D H dot pages show me get out pages
14:46 - that github dot io and then when we
14:49 - click on that we have the nyan cat
14:51 - follows mouse that's a little bit of
14:53 - credit I put at the top of the HTML and
14:55 - but not a cat's not moving something's
14:58 - wrong here
14:59 - even Simon Cal here is just absolutely
15:01 - bored about this you know it wasn't
15:03 - exciting at all and so I think something
15:07 - thought something is amiss and we go
15:08 - back to the code pin we go to settings
15:10 - and there it is
15:12 - jQuery mange yes everything is jQuery
15:15 - yet
15:15 - so if we go and copy this will paste it
15:19 - up here in the address bar we get a you
15:23 - know a bunch of you know compile
15:25 - minified very hard to read javascript so
15:29 - we do a control a copy everything
15:30 - control C and then create a jQuery
15:35 - Minjae s file go and paste that in there
15:38 - it looks a little different because
15:39 - there's no word wrap and github pages
15:43 - alright so we go back and so you save
15:46 - this and then we need to go back and
15:49 - edit the index file so we go we go back
15:51 - we click on index.html and then right
15:54 - here we have a little pencil looking
15:57 - icon that you click on and that allow us
16:00 - to go back and edit so here we had the
16:03 - main jjs that we did before and we want
16:06 - to go ahead and put this at the top of
16:07 - that so this is jQuery Minjae s paste
16:10 - that in there a few moments later we
16:15 - have an adorable demonstration so let me
16:17 - click on this hopefully this will work
16:18 - and now an eye on cat follows the mouse
16:21 - just like planned and that is amazing
16:23 - simon cowell be very happy about that so
16:25 - let me hole I have to close out this
16:26 - really quick report consumes all my
16:28 - memory all right go back
16:39 - okay so I wanted to go over a react
16:42 - demonstration and so we got some happy
16:45 - Tomatoes up here I think if you're in
16:48 - the know you know this is going to be a
16:50 - Pomodoro timer example and so this
16:54 - demonstration is to show you you know
16:55 - you may be literally reacts and you want
16:57 - to get that react app on the web and you
16:59 - don't want to have to pay for that
17:01 - so this is kind of a demonstration on
17:03 - how to get that done I did not write
17:06 - this timer because you know I work and
17:09 - stuff I kid but uh someone put a lot of
17:13 - time into this this is forked from
17:15 - Alfonzo Paso fir I'm gonna guess that's
17:17 - how the name is pronounced and in his
17:19 - original repository is react Pomodoro
17:22 - and see if I can bump this up a little
17:25 - bit more alright so I fork that forking
17:33 - and github just basically means stealing
17:34 - someone else's code and it's allowed
17:36 - everyone loves it alright and so here we
17:39 - have the code here what you notice
17:41 - though is there's not an index.html
17:43 - anywhere so how is this even working how
17:46 - we're going to be able to display this
17:47 - and that's the it mentioned it in the
17:50 - video and that's the github gh-pages
17:53 - github pages branch and so we can click
17:56 - on the branches here click here and we
17:58 - notice that there's a github pages click
18:01 - on that and that's very different this
18:03 - is the same repository different branch
18:05 - and it's a different world and so this
18:07 - has the index dot HTML you know it has
18:10 - all the CSS right here the images
18:13 - JavaScript even some music which is
18:15 - awesome and so this basically allows
18:20 - github pages to actually render the
18:22 - website for you and so if we go ahead
18:25 - and do the demonstration of it so to
18:27 - quickly talk about how that works so
18:28 - you're working on your react app on the
18:31 - command line this is the nerdy and
18:33 - earlier side of things and you know you
18:36 - serve it up you view it you love it so
18:39 - what you do in that repository is you go
18:41 - ahead and build it and you could build
18:43 - it anywhere but you might have to move
18:45 - the files but if you can choose a place
18:46 - to build a build it in the root
18:47 - directory of the repository and then
18:49 - you're going to have a bunch of files
18:51 - that will show up on
18:52 - get long or get get status so go ahead
18:56 - and create a new branch called github
18:57 - pages gh - pages switch to that and then
19:01 - that you know that repository
19:04 - should be empty don't create it for a
19:05 - master just create a new branch and then
19:08 - go and add those files to the root
19:10 - directory of the repository commit those
19:12 - files push those files and hopefully
19:15 - write a script to do all that for you so
19:16 - only have to do it once and that's how
19:18 - you kind of create a github pages branch
19:20 - in one way one way to do it and so if we
19:24 - show you that so here is this is you
19:26 - know this is live from my github pages
19:31 - website here let me see it's hard to see
19:33 - but that says show show me github pages
19:37 - github that IO which is you know my
19:39 - username for this demonstration slash
19:41 - react Pomodoro and so this is cool if
19:44 - you don't know about Pomodoro it's a
19:45 - great way to stay concentrated
19:47 - throughout the workday and so you have
19:50 - 25 minute intervals once that runs out
19:53 - you go and take a break that's the
19:54 - social click that you have five minutes
19:56 - once that bet goes back to a Pomodoro
19:59 - you do that for time you get for pulling
20:01 - my doors under your bill I think it's
20:02 - four and then you go ahead and do a
20:04 - coffee break which is 15 you do that
20:06 - throughout the day and you have free
20:07 - time but you also have 25 minutes of
20:09 - concentration and you can click down
20:12 - here it's a link that they included and
20:14 - it goes to the Wikipedia or Wikimedia
20:16 - yeah Wikipedia article for Pomodoro
20:19 - Technique so great thing to check out I
20:21 - love Pomodoro retire timers because it's
20:23 - a great project to start off with and
20:24 - this one was done very well it also has
20:26 - if I go back see here it also has you
20:32 - know the option it's very where am I
20:35 - going
20:35 - Maduro so go back to the readme here and
20:39 - so you can also create an icon on your
20:40 - phone and that's the beauty of react and
20:43 - modern JavaScript frameworks once you
20:44 - start learning that it's good stuff and
20:47 - you know Pomodoro timer or any kind of
20:50 - timer like that is a great way to start
20:51 - and they also help you get organized
20:54 - all right oh no oh no
21:00 - there it is okay so we need to talk
21:06 - about Jekyll just a little bit Jekyll is
21:09 - a kind of out of the scope of
21:10 - introduction to get hubpages Jekyll is
21:13 - amazing and so if you go to you know
21:17 - Jekyll are be calm
21:20 - there's tons of documentation is great
21:22 - documentation it's a little technical
21:24 - it requires Ruby on your computer and so
21:28 - you just follow the install instructions
21:30 - for Jekyll and you can get up and
21:32 - running with that the and what Jekyll is
21:35 - is a static site generator and that
21:37 - allows you to do very complex things and
21:40 - compile it to three files you have your
21:42 - index.html you have your job your
21:44 - JavaScript file any of your CSS file and
21:47 - that allows you to do pretty amazing
21:49 - things and so you can create blogs with
21:51 - that you can create very very dynamic
21:54 - looking websites but essentially it's a
21:56 - static site and that has an advantage of
21:58 - being extremely fast and so as opposed
22:02 - to a server-side rendered page static
22:07 - sites will load up quickly no matter
22:10 - where it's hosted at it's very very cool
22:12 - stuff Jekyll is built into github I
22:15 - think the co-founder of github created
22:16 - Jekyll as well and so there's a little
22:19 - preference on that side there's other
22:21 - static site generators but I wanted to
22:23 - show you this page the second link down
22:24 - here is a really long link you know it's
22:28 - helped at github.com articles using
22:30 - Jekyll as the static site generator with
22:32 - github pages they could have made that a
22:33 - little shorter I think but if you click
22:35 - on that you get a github page with
22:37 - amazing documentation that goes over all
22:39 - of this and see you ain't bump this up
22:41 - again okay
22:44 - and yeah so here's the overview about
22:48 - github pages in Jekyll about Jekyll
22:51 - themes on github and so the themes are
22:53 - amazing I'm going to tell you so the
22:55 - relatively responsive and means you can
22:58 - use them on a mobile device and they're
23:01 - great for blogs they're great for sites
23:03 - they're great for demonstrating your
23:04 - code you know or your project you know
23:07 - or your garden if you're you know
23:08 - blogging about your garden anything like
23:10 - that yeah and so it goes over
23:14 - adding themes yeah customizing CSS and
23:19 - HTML and so setting up your github pages
23:23 - site locally with Jekyll it goes over
23:25 - all of it and it's all tuned for use
23:27 - with github pages so close out of that
23:31 - all right and so you can't talk about
23:35 - Jekyll without talking about so here's
23:39 - the Jekyll site by the way so it shows
23:40 - you simple static blog aware and it
23:43 - gives you a little command line example
23:44 - of how to get started with it it can be
23:46 - that easy if you're on a Mac you know or
23:49 - if you're on Ubuntu or another Linux
23:52 - distribution or you're really tech savvy
23:54 - in Windows I got Jekyll working on
23:57 - Windows and it seems to work fine I use
23:59 - Windows subsystem for Linux I haven't
24:02 - tried any other methods but Jekyll is
24:05 - great I've used it a lot
24:06 - and I use it almost primarily because
24:08 - github is just so well integrated with
24:10 - it so what that basically means is that
24:12 - you don't need to do anything on the
24:14 - command line you can use Jekyll without
24:16 - ever installing it if you know what to
24:19 - do it's kind of a catch-22 so if you put
24:21 - the right files in the right places
24:23 - places on github then it will go ahead
24:26 - and compile the site for you using
24:27 - Jekyll and keep it up-to-date it's an
24:29 - amazing system and so you can even have
24:31 - new blog articles I'd like to do maybe
24:35 - another end up talk just about that but
24:37 - it's very in-depth but it's kind of
24:40 - difficult you kind of have to learn
24:41 - Jekyll before you can use it on github
24:43 - pages without having it even installed
24:45 - so that brings up Hugo so Hugo is my
24:50 - favorite static site generator this
24:52 - thing is fast I mean fast and so they
24:55 - give examples a lot of propaganda and we
24:57 - can call everything propaganda so it
24:59 - just describes on their side how you can
25:00 - have thousands of blog articles I barely
25:02 - I think I have one blog blog article
25:04 - I've ever written but I like the fact
25:06 - that if you have thousands of blog
25:07 - articles it can go ahead and compile
25:09 - that all to a HTML CSS and JavaScript
25:11 - within seconds usually less than a
25:14 - second and so this is written on go go
25:17 - the the go language go programming
25:20 - language and go is it's much like C and
25:23 - it is fast and so it's compiled as well
25:26 - and so go go
25:28 - and Hugo can be used almost on any
25:30 - platform and you really don't even have
25:32 - to go through a lot of the difficulty of
25:35 - and of going through some installation
25:37 - procedures with other things like Jekyll
25:39 - you just install it's just the exe on
25:41 - Windows or you know it's a binary in
25:43 - Linux in Omak and a lot of package
25:46 - managers already have Hugo ready to go
25:49 - and it's very similar to Jekyll has a
25:51 - lot of niceties you know they're very
25:53 - complementary to one another Hugo was
25:56 - inspired by Jekyll so Jekyll is the
25:58 - Original Gangster and it's you know
26:01 - arguably still the best in that regard
26:03 - but Hugo is has a lot of features that
26:07 - make it appealing and they even have a
26:09 - site so go Hugo dot IO right here is the
26:13 - as a site to go to to learn more about
26:15 - Hugo in general and then you have a link
26:18 - here go Hugo dot IO hosting and the
26:20 - deployment hosting on github so there's
26:23 - a site dedicated to just using go here
26:27 - to go with github pages and so that's
26:30 - really cool and that is also a use case
26:32 - and this is one of those cases where you
26:35 - might have you your your markdown files
26:38 - you know what you might call your source
26:39 - files in the repository and then you
26:43 - would compile it to the github pages
26:45 - branch just like I talked before about
26:47 - react that's one way to do it to keep
26:49 - the code clean that way when people look
26:51 - at your repository that are not just
26:53 - confused as far as what's going on all
26:56 - right
26:57 - and so here's the go Hugo website
27:00 - self-proclaimed the world's fastest
27:01 - framework for building websites and I'm
27:05 - not gonna argue that how we do it on
27:08 - time good
27:14 - so I wanted to push the limits of you
27:17 - know seeing what's you know github pages
27:20 - can do and so I found this it's playing
27:25 - Wolfenstein 3d in the browser to go a
27:27 - little do it a little story back in
27:29 - middle school is in a typing class I
27:31 - didn't want to be there I can type
27:33 - really fast now and that's thanks to
27:34 - getting done with the lessons I got a
27:37 - play Wolfenstein 3d and you know you
27:39 - gotta understand you know I was I was
27:41 - young you know probably thirteen if that
27:45 - maybe twelve and that's one heck of a
27:48 - reward you know get done with your
27:49 - typing lessons get more time on
27:51 - Wolfenstein 3d so we're playing these on
27:52 - old Mackintosh's you know color monitors
27:56 - were just a brand new thing and this
27:57 - this game was the game back in that day
28:00 - and so click on this and I do believe
28:07 - this is uh was originally created by
28:09 - either Bethesda or it for an anniversary
28:13 - for Wolfenstein 3d I don't know too much
28:15 - about it the the readme files a little
28:17 - cryptic I work this again and so this
28:20 - one this time is from Jacob site Alan
28:24 - and and so this code works and it's a
28:31 - lot to push through a web server well
28:34 - essentially your browser's doing all the
28:36 - work the web server just has to give you
28:37 - the files so it's not it's not that big
28:40 - a deal in that regard but it's pretty
28:41 - amazing what you can do in a browser and
28:43 - I really just wanted to see if it work
28:45 - so just go through see if this will work
28:48 - live oh my god it worked
28:49 - I was having issues in Firefox so Chrome
28:51 - is the way to go with Wolfenstein 3d in
28:53 - the browser sorry Firefox so you go new
28:56 - game I don't know how loud this is gonna
28:57 - be and we gotta go I'm death incarnate
29:01 - was good we're going to the max
29:02 - difficulty go level one just to show you
29:05 - works just fine
29:08 - oh there's baddies I gotta go I gotta go
29:11 - I'm a pacifist
29:13 - I just got to get to the secret spoiler
29:16 - there's a secret here oh that got me I'm
29:26 - pretty awful I don't want to spend too
29:28 - much playing time playing that all right
29:32 - so that's Wolfenstein 3d the browser you
29:34 - can see up here
29:35 - well maybe can't see but it's show me
29:37 - github pages github that I Oh slash
29:39 - wolf3d and and basically I just I forked
29:43 - that repository and it just worked and
29:46 - so this this is another page that uses
29:48 - github pages branch and I think just a
29:51 - little bit of cleanup is done I don't
29:53 - know if anything's changed actually yeah
29:54 - see it's so full 3d to index dot HTML
29:57 - that's about all the changes that were
29:59 - made and that's that and so I think that
30:09 - went a little bit under time we're still
30:12 - doing good on time it's anyone had any
30:14 - questions anybody oh we got a question
30:18 - here limitations so I think you maybe
30:23 - saw a little bit of it when I was doing
30:26 - the the nyan cat example where basically
30:32 - if you try to reach out to a CD in a
30:35 - content delivery network it won't want
30:37 - to pull those those in basically the web
30:42 - server only wants to link to websites
30:45 - within that repository or assets within
30:48 - that repository and so as you saw what I
30:50 - did I kind of pasted that into the
30:52 - browser copy and paste that into its and
30:53 - you own file the repository and that got
30:56 - it up working again you could put that
30:57 - in if you do if you're using node you
31:02 - can probably put that as a part of the
31:03 - build procedure to go and grab those get
31:06 - the freshest and latest if you want to
31:07 - do that and a part of you know you know
31:11 - NPM in general is that you know whenever
31:12 - you build it it's going to do that
31:14 - anyways I think I think you know you
31:15 - have to update but I think that's the
31:18 - biggest limitation
31:20 - I haven't seen any limitation as far as
31:23 - Java syrup goes I haven't dug deep into
31:25 - it I don't think because you know get up
31:28 - pages just giving you giving the user
31:31 - the files it's like here's a JavaScript
31:33 - file an index file in a CSS file and as
31:36 - long as those aren't referencing
31:37 - external sites you get that in and then
31:40 - JavaScript you just just run on the
31:42 - user's computer as is and so you know as
31:46 - far as grabbing assets through
31:47 - JavaScript I think that might be
31:48 - possible linking to another server that
31:51 - might be possible but if you're linking
31:53 - to another server
31:54 - you know why are using github pages in
31:56 - the first place or it could be an API so
31:58 - you get to do a Twitter API through
32:00 - JavaScript possibility possibly there's
32:03 - no way get help can prevent that in
32:05 - essence there are some limitations as
32:07 - far as Jekyll themes go basically what
32:11 - out like so if you wanted to go the
32:13 - route of using the web interface no
32:15 - command line at all and you wanted to do
32:17 - a Jekyll and a blog through github pages
32:19 - you basically be limited to a certain
32:21 - amount of themes I do believe there's
32:25 - ways to overwrite the themes make them
32:26 - better improve on them but if you just
32:28 - want to use it as is there are only a
32:33 - certain amount of themes that github
32:34 - themselves support and in addition to
32:36 - that if you were to do custom theme
32:38 - there's only certain amount of plugins
32:40 - that github will do automatically for
32:42 - you without you having to go to the
32:43 - command line to do it automatically and
32:45 - so I think that's done to protect
32:48 - themselves because that codes being run
32:50 - on their site and so that they're really
32:53 - kind of protective about what Jekyll is
32:55 - doing on their servers and so you have
32:57 - the the Jekyll official official plugins
33:01 - only and besides that I don't think
33:05 - there are any other limitations that I
33:07 - know of do you think of anything in
33:10 - specifically no can that answer your
33:14 - question any anything else you guys down
33:18 - here no yeah
33:26 - I don't know I don't think you can use
33:27 - PHP because B the question was can use
33:29 - PHP and I don't believe so the PHP would
33:35 - have to be run on github servers and I
33:39 - don't think github would like to take
33:42 - that liability because that phq just go
33:43 - do anything it wants
33:46 - in essence basically the Jekyll Ruby is
33:50 - kind of acting as the PHP but only when
33:53 - there's a change so only when you update
33:54 - your repository does the Jekyll kick in
33:56 - and and and start looking for those
33:59 - changes and adding files so no PHP yes
34:11 - yes yeah I got some nods from some
34:15 - JavaScript aficionados
34:17 - it's it'll be in the JavaScript code
34:19 - right guys so you can I there may be
34:24 - ways to salt that that's beyond knowing
34:26 - that we're getting nods now we're
34:28 - getting nods now yeah I think it's a
34:34 - very complicated subject I think I think
34:37 - tokens and keys are best left to the
34:38 - server side and at that point it might
34:40 - be worth looking into getting a virtual
34:43 - private server to host your stuff on
34:45 - which is a whole another whole nother
34:48 - talk so I'd say the quick answer with
34:51 - this based on like the how many these I
34:55 - got I would say no I would not put the
34:58 - tokens in the JavaScript you could
34:59 - wouldn't wouldn't want to do it though
35:05 - oh I didn't know that okay yeah so just
35:16 - repeat that a gig is kind of the limit
35:19 - to the repository so I was thinking
35:21 - about hosting all my roms on there I'm
35:23 - not gonna do that now not gonna do it
35:25 - and what you say the bandwidth limit was
35:27 - one 100 gigs a month that's a lot that's
35:31 - a lot and so if you keep your site
35:35 - simple if you're even video I think
35:37 - you'd be fine unless you just blow up
35:39 - and you're you know you know news
35:40 - channel 9 links to your your your github
35:43 - pages I think you'll be fine but in
35:47 - general if you're especially if you're
35:49 - just doing a blog images and texts are
35:51 - pretty cheap all right
35:55 - did that satiate all your your early
36:00 - yearnings about github pages I think so
36:03 - I think so all right we're good we're
36:06 - offline
36:09 - [Applause]