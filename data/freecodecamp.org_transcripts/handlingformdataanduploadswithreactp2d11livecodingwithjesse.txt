00:07 - hey it's Jesse
00:09 - and today I've been doing a lot of
00:14 - research on how to do file uploads with
00:18 - with node so I'm gonna fill you in on
00:24 - what I've what I've learned what I'm
00:26 - thinking about doing and maybe you'll
00:29 - have some better ideas so on the screen
00:36 - now you can see I've successfully set up
00:40 - a let me take this out really quick
00:45 - because I just added that in there I
00:46 - haven't really done anything with it yet
00:48 - but so I've successfully set up the
00:51 - server j/s file so yesterday I was
00:54 - talking about that and had I think it
01:00 - was Kevin that had mentioned like just
01:03 - put a server J's file in there and it
01:05 - will work and it that's it that's
01:07 - exactly what happened it works so I put
01:11 - this in here and I this is like straight
01:19 - from the documentation on github for
01:23 - create react app so really simple and
01:30 - they worked I started it up and
01:33 - basically so it took I did have to build
01:35 - so I ran yarn build created this build
01:41 - folder and now it's just serving
01:44 - everything from that build folder so
01:47 - really cool everything works so this is
01:51 - then where we're gonna handle our
01:54 - uploads in our server dot JS file so I
02:00 - was thinking about using this package
02:04 - Moltar because I've used it before with
02:10 - react
02:12 - to do file uploads so I thought why not
02:16 - why not try it again but maybe there's
02:20 - something newer and better out there
02:23 - that I don't know about so let me know
02:28 - if any of you have experience with that
02:30 - otherwise I think I'm gonna go ahead
02:32 - with this since I have some experience
02:35 - with it I do it one question alive said
02:42 - I'll just answer it right now so I don't
02:45 - forget since it's the first one there
02:47 - do so and ask this did he already set up
02:49 - some JWT so JSON web token off with
02:55 - Express JWT it said no I haven't set
02:58 - that up yet although I probably won't
03:02 - need to for this project yeah I don't
03:07 - think I'll need to there's another
03:10 - project that I did that I really really
03:12 - want to redo in react and I might need
03:18 - it for that so I'm gonna keep that in
03:21 - mind for the future
03:29 - let's see Oh pool request I've got some
03:33 - really exciting news from the pool
03:35 - requests so check this out let me
03:51 - look at this it's the SAS file so this
03:56 - is SCSS syntax so Patrick submitted a
04:04 - pull request where he set everything up
04:06 - so that we can now use SAS on this
04:09 - project so if you clone this repo you
04:12 - can use SAS too
04:14 - yeah I'm super excited about it so yes I
04:21 - haven't actually written any SAS yet but
04:24 - I'm excited to be able to do it I can
04:28 - have variables and all the other awesome
04:32 - stuff and be able to nest things so
04:34 - really cool I honestly didn't realize
04:37 - how much I missed SAS until I had it
04:39 - back again and now I'm like I'm so happy
04:43 - because I haven't used it for well for
04:46 - this project or for the last project and
04:49 - that our last project was I mean what
04:51 - that was at least a month of working on
04:54 - that I think so yeah and then actually
04:58 - what I was working on before that was
05:01 - like an existing project that I had to
05:04 - work within the constraints of that
05:05 - project and it didn't have SAS so it's
05:07 - been it's been months since I've been
05:09 - able to use as so if you're not familiar
05:13 - with SAS it's a CSS preprocessor so it
05:16 - allows you to do some stuff with CSS
05:18 - that you can't normally do and then when
05:21 - you're ready you have you have it set up
05:23 - so that it converts all of that s CSS or
05:28 - SAS into CSS that browsers can can read
05:32 - so that's what I'm talking about here so
05:34 - it just makes it really nice and as the
05:37 - project continues and we actually write
05:38 - some things in SAS hopefully you'll get
05:41 - to see like some of the advantages of
05:42 - using it and it's it's just so some
05:46 - things are just so much faster to write
05:49 - if if you're using SAS so hopefully
05:55 - we'll get a chance to show sure the
05:57 - advantages had some other pull requests
06:01 - as well
06:02 - I just want to make sure everyone's
06:06 - caught up with with where the project is
06:09 - so let me let me double check yeah so we
06:14 - had two other pull requests so the the
06:18 - SAS one was from Patrick and then Kevin
06:20 - submitted two one was actually it OTO
06:23 - calculates the pixel Heights so if you
06:28 - remember yesterday the last thing that
06:31 - we did in this tutorial was we were
06:36 - vertically aligning it but it was off
06:38 - and it was causing the scrollbar as well
06:40 - because we had set this section at first
06:43 - we had just said it to be this container
06:46 - div that basically is here goes from
06:48 - here to here we had set it to be a
06:51 - hundred percent of the viewport height
06:54 - well then we obviously had three things
06:57 - off and it made us have a scrollbar so
07:01 - we needed to deduct the height of this
07:06 - this NAB at the top well I just
07:09 - hard-coded like 64 pixels because that
07:11 - was pretty much the height it was its
07:13 - axis like a fraction of a pixel smaller
07:17 - than that well Kevin I think even said
07:23 - it during the live stream was like you
07:24 - know which maybe you should Auto
07:25 - calculate that so he went ahead and did
07:28 - it himself so now this gets calculated
07:32 - so even if we end up making this bigger
07:35 - or smaller
07:36 - it doesn't matter it'll always look good
07:39 - so that's really cool so I mean you
07:41 - could check out the code for that I'm
07:44 - not gonna go through any of the pull
07:46 - request code like line by line because I
07:48 - think what we're gonna attempt to do
07:49 - today is a pretty involved project so I
07:53 - want to save as much time as I can for
07:56 - that so that's really cool also he added
08:00 - some more testing and if you check out
08:05 - the closed pull requests in this this
08:08 - repo and the link to the repos in the
08:10 - description you'll see so in the latest
08:13 - pull request for
08:15 - and to end testing says for requests 23
08:18 - Kevin had a really nice description of
08:20 - the different types of testing so the
08:23 - one that we've been doing and then it so
08:26 - other types so check that out if you're
08:29 - if you're new to testing you're not
08:31 - really sure what's going on there it was
08:32 - a really really good description and I
08:34 - got a lot out of it so thanks for that
08:36 - and then not only that but Patrick also
08:39 - explained his pull request from
08:41 - yesterday if you member yesterday I went
08:44 - through and I showed what he had done
08:45 - and for some of the parts I said I
08:47 - honestly don't know a hundred percent
08:49 - what's going on here but I know it works
08:51 - because I tested it so Patrick went
08:53 - through and provided an explanation you
08:57 - know pretty much line by line of
08:58 - everything that that he had done so if
09:01 - you like me we're slightly lost by that
09:05 - that code then check out that that
09:09 - description and that was on pull request
09:12 - let me let me see I have it on the
09:14 - others my other screen here nineteen so
09:19 - pull request nineteen and pull request
09:21 - twenty to have some really good really
09:25 - good comments get information on there
09:27 - so thanks thanks again Kevin and Patrick
09:30 - not only for the pull request but then
09:32 - for taking the time to explain things to
09:33 - me so thoroughly I really appreciate
09:36 - that okay so let's go to our service
09:44 - request forms this is where we have our
09:46 - file upload this is where we're gonna be
09:49 - focusing on not really anything with the
09:51 - the visuals with the UI or anything like
09:53 - that we're basically just we're gonna be
09:56 - setting up this server j/s file so as
10:03 - you can see I brought in so right now
10:07 - like this works I can turn the server on
10:09 - I could go to localhost 9000 and the
10:12 - site it works it looks good just the
10:15 - same as it does you know through an grok
10:18 - oh I forgot to turn in grog on let me do
10:20 - that right now
10:25 - and actually fill for right now I'm
10:28 - going to turn on the port 3000 version
10:34 - of this but if we start with the file
10:37 - upload stuff later on and we start
10:39 - running things through port 9000 honours
10:42 - from our server JS file maybe I'll
10:44 - switch and I'll run that through in grok
10:46 - we'll just see how it goes
10:56 - all right salute yet
11:02 - here's a URL and I'm gonna put that in
11:06 - the live chat oh and there's a lot going
11:09 - on the latch at let me take a look
11:15 - Adrian asked to use meteor with reacts I
11:17 - have not used meteor with reacts is that
11:24 - a thing didn't do people normally use
11:25 - meteor with reacts I'm not I'm not
11:28 - really sure
11:29 - I've seen some demonstrations of stuff
11:32 - built with using meteor and it looked
11:34 - really cool and like super fast so I'm
11:39 - definitely interested in meteor
11:40 - I just don't know a whole lot about it
11:52 - mohamad asks what's the what's the
11:55 - difference between sass and scss the
11:59 - syntax slightly different with sass it's
12:02 - based on indentation so you don't have
12:06 - like your curly braces and things like
12:08 - that and I see John Hanson had answered
12:12 - as well I just thought it might be a
12:14 - good question to repeat out so yeah
12:18 - mainly that's that's pretty much the
12:20 - difference just a little bit different
12:22 - syntax but they can do the same I think
12:25 - all the same things the benefit though
12:30 - to using SCSS is that you could copy and
12:34 - paste normal CSS into an S CSS file and
12:37 - it'll still work if you tried to do that
12:40 - in copy and paste normal CSS into a sass
12:42 - file it would not work so that's why I
12:45 - use s CSS instead of sass if that's
12:49 - that's really the only reason otherwise
12:50 - I think it's actually faster to write
12:53 - sass than s CSS
13:24 - okay I was just double-checking and
13:27 - seeing what's going on in the live chat
13:35 - okay cool so I had some answers about
13:38 - meteor so evidently Adrien is learning
13:42 - meteor and react together so that's
13:45 - awesome Patrick says I think meteor is
13:51 - moving away from defaulting to blaze and
13:54 - is defaulting to react okay that's
13:56 - really cool I'm gonna have to read up
13:57 - more on that because it's been probably
14:01 - over a year since I read or saw anything
14:06 - about meteor so I need to need to catch
14:09 - up okay Kevin says the downside to using
14:16 - the custom servers that I'll lose the
14:18 - hot reloading yeah I don't like that
14:19 - you're basically what I'm thinking is so
14:22 - let me let me fill everybody in on
14:24 - what's gonna happen so like right now I
14:28 - have this running on port 3000 localhost
14:31 - and this is through the the create react
14:33 - app server so it comes with cool stuff
14:35 - like like hot hot reloading and like
14:38 - everything else is hooked into that that
14:41 - start command so now like our our sass
14:45 - compiling and stuff so that's really
14:50 - good and I don't want to lose that what
14:51 - will happen though if we run let me see
14:57 - oh I don't have it running anymore okay
15:00 - so I was going to show you the screen
15:02 - where I have the other server running
15:03 - but I turned it off so when we start
15:05 - running this like we lose all that so
15:09 - what I'm thinking about doing is getting
15:12 - the file upload and the form stuff to
15:14 - work making sure it works with this and
15:17 - then doing the rest of the development
15:19 - like we normally did and basically just
15:22 - kind of ignoring this until we're ready
15:27 - ready to move this into production
15:32 - I don't know maybe there's a better way
15:34 - to do that but I mean I I don't really
15:38 - need the follow-up loads to work all the
15:39 - time I just need them to work once so I
15:41 - can test it and once I'm satisfied that
15:44 - that works then I'm I don't really care
15:47 - about it
16:00 - okay and there's someone in the chat and
16:03 - I can't I'm not sure what their name is
16:06 - because it's not in normal characters
16:08 - that I'm used to but they're asking
16:14 - about like getting started and coding
16:16 - and things so I just want to acknowledge
16:20 - that I I see you're asking you're
16:23 - getting some feedback there in the live
16:24 - chat so yeah like stick around watch
16:28 - what we're doing and you know ask
16:31 - questions if I would say free code camp
16:35 - is a really good place to start if
16:36 - you're just beginning
16:38 - looks like you've studied Python so
16:41 - maybe like you're a little bit more
16:43 - advanced than that so you probably fly
16:45 - through all the beginner free code camp
16:47 - stuff and probably won't slow down until
16:51 - you get to the more advanced JavaScript
16:52 - things because you know if you know
16:55 - Python the concepts will be the same
16:57 - they're just just the syntax you'll have
16:59 - to get used to so all right so I'm gonna
17:05 - get started I'll do one more question
17:09 - since it just popped up and just Andrew
17:12 - asked if I've used redux for any of my
17:14 - projects not yet but I will be probably
17:18 - in the future because I'm gonna take a
17:20 - course I'm taking a course right now
17:22 - Udacity nanodegree I finished the first
17:25 - I think that I think they call each part
17:28 - a course so I guess I finished the first
17:29 - course the second course starts in like
17:33 - a week and I'll go over Redux in that
17:38 - course so after I finished with that I
17:41 - will know at least the basics of Redux
17:43 - and I can start incorporating it into my
17:45 - projects okay cool also as as you all
17:52 - probably know we have a secondary stream
17:54 - going on on Instagram the links in the
17:57 - description for that so if you if you
18:02 - happen to join in on Instagram if you're
18:05 - watching on Instagram and you don't know
18:06 - what's going on I'm coding I'm building
18:09 - stuff and react so tune in to free code
18:13 - camp YouTube
18:14 - to see the code alright so let me pull
18:22 - over so I I have up on my other screen
18:24 - screen just to shake way too many tabs
18:28 - of tutorials for how to do this okay so
18:31 - this is what I happen to be working
18:32 - looking at right now so multiple file
18:37 - upload with nodejs which is exactly what
18:39 - we want right here so I've been checking
18:41 - out different tutorials I haven't seen
18:44 - one that's like perfect one looked
18:46 - really good but they it was in
18:49 - typescript and I thought I don't know
18:51 - anything about site script so I'm just
18:53 - gonna try to find a different tutorial
18:55 - so maybe type strips not that different
18:57 - and like I could have figured it out but
19:00 - I figured there's got to be a lot of
19:03 - tutorials on this so you just move on so
19:07 - like this one is using Ajax which we're
19:09 - not going to use Ajax obviously but it
19:14 - seems like the common thread between a
19:16 - lot of these tutorials is that they are
19:18 - all using Moltar and some of them are
19:21 - using body parser I don't know if we'll
19:23 - need this or not I did use this in my
19:25 - last project but looking at the
19:27 - documentation for Moltar it didn't say
19:29 - that you needed this so I'm maybe this
19:32 - used to be needed and now you don't need
19:35 - it anymore not really sure
19:46 - it looks like yeah this looks like this
19:50 - is not gonna be a lot of code this one
19:55 - seems to be the most straightforward of
19:58 - the tutorials there's not a lot of extra
20:02 - stuff in there that that will be
20:04 - confusing that we we won't need so I'm
20:10 - gonna copy a lot of this I you know what
20:14 - I do want to know about body parts or
20:16 - let me go back to the MultiAir
20:17 - documentation if anybody knows anything
20:19 - about this please you know let me know
20:21 - in the in the live chat definitely open
20:24 - to your suggestions also let me get my
20:29 - Pomodoro timer going if if you're not
20:33 - familiar with the timer so this is a way
20:36 - to kind of organize your workday and
20:39 - track things so I use this normally but
20:42 - for the streams I use this to remind me
20:44 - to stop coding and talking and instead
20:47 - check the live chat so I don't miss too
20:49 - much so yeah let's just I'm probably
20:57 - gonna end up copy and pasting this and
20:59 - just testing and see see how it is I
21:01 - also have somewhere in here in one of
21:04 - these tabs the older project that I had
21:08 - done where I did something similar so I
21:11 - can refer to that as well if I need to
21:13 - because I I know it works and I've done
21:15 - it
21:16 - I just need I'll probably pull led to my
21:18 - other strings I need to make sure I
21:20 - don't have anything since it's a private
21:23 - repo I didn't bother like hiding any of
21:26 - the keys or anything so I don't to make
21:28 - sure I don't have anything in that file
21:30 - that I shouldn't show everyone on
21:33 - YouTube so I might I might not show that
21:36 - I might just copy and paste some stuff
21:37 - out of there
21:38 - and then bring it over but it looks like
21:42 - it's really similar to the tutorial
21:55 - okay here's the multi documentation so
21:58 - let me bring this over to show you so
22:02 - this is this is a package that we're
22:04 - using actually let me before I forget
22:13 - I'm gonna make this bigger cuz I had a
22:15 - comment on one of the videos sometime
22:17 - within the last day of somebody saying
22:20 - that I need to make it make this stuff
22:22 - bigger so I apologize when I'm not
22:27 - streaming I make it smaller so that I
22:29 - could see more of the code and I
22:30 - probably had forgotten to make it bigger
22:32 - so sorry about that this this ought to
22:37 - be big enough I think this seems seems
22:39 - pretty big let me know if it's not okay
22:43 - and then I'll also make this a bit
22:45 - bigger as well probably too big alright
22:51 - so for this like I said they're not
22:55 - using the the body parser at all
23:09 - so I'm not sure I think I may end up
23:12 - just using it because that's how I did
23:15 - it the last time that's how this
23:16 - tutorial does it so it'll probably end
23:18 - up going more smoothly if I use what's
23:22 - the you know exactly what they're using
23:26 - so hey we got somebody in oh cool so
23:31 - it's a new day is is also in the
23:38 - Instagram stream and sorry if I'm
23:40 - mispronouncing that I think it's day but
23:42 - I just want to bring that up because I
23:44 - hope he doesn't mind me saying this but
23:46 - today is ooh today's birthday so happy
23:49 - birthday and that's it's really awesome
23:56 - that you're watching my stream on your
23:58 - birthday you can be doing whatever you
24:00 - want I guess on your birthday so anyway
24:03 - thanks thanks for watching hopefully
24:05 - this will be a good stream and we can do
24:09 - some accomplish some cool stuff here
24:18 - okay cool I got some in the live chat
24:21 - got some info about the bawdy parser
24:24 - package so kevin says bawdy parser
24:28 - parses query parameters passed through
24:30 - the URL and form encoded data or json
24:33 - and the body of the post request I don't
24:36 - think you actually need it okay cool
24:46 - ajaan okay John recommends looking at
24:51 - node formidable that's worth worth
24:55 - checking out since we haven't really
25:01 - done anything yet this is the time to
25:05 - explore alternatives so let's check this
25:08 - out okay
25:14 - always I just like to look when I see
25:16 - initially like how many stars does does
25:18 - it have
25:18 - and once the last time was updated okay
25:21 - so within the last year it's been
25:22 - updated you have four months okay
25:26 - whereas motor was did we have it on the
25:31 - screen still I guess not I guess I
25:38 - pulled it over to the side I'm just
25:43 - comparing okay so in terms of stars
25:45 - they're about the same formidable is a
25:47 - little bit more and it actually looks
25:52 - like formidable is more up-to-date so
25:54 - this looks cool it's definitely worth
25:57 - looking at that's it for me especially
26:00 - follow yeah this looks like
26:22 - cool I like it so far
26:30 - Wow okay it looks like this may already
26:32 - be integrated into Express
27:27 - well it looks like there's a lot more to
27:29 - this documentation as well which I guess
27:31 - is is a good thing see the the moon surd
27:41 - documentation is is pretty short oh I
27:45 - guess there's more to it than I
27:47 - initially thought now that I look at it
27:50 - I guess I just didn't scroll down enough
27:57 - all right what do y'all think I'm kind
28:00 - of split here I'm gonna I'm open to
28:04 - suggestions
28:06 - to see if you all have any opinion
28:07 - should we try to do this with multi or
28:10 - should we try to do it with formidable
28:19 - I really have no idea which one is the
28:22 - more widely used of the two
28:54 - and I'm gonna pull a pull the
28:56 - documentation over and then that way we
28:59 - can have all the code on the screen
29:15 - kevin said maybe branch off and throw a
29:17 - coin yeah so I'm actually working just
29:20 - so you know if you want to check out the
29:21 - repo I don't think I've pushed any of
29:25 - this new code up yet this is a new
29:27 - branch wow that's really small this is a
29:32 - new branch and I named a custom server
29:35 - so everything we do now will be in terms
29:38 - of this will be on the new branch so we
29:40 - don't mess anything up and if we get it
29:43 - to the point where we're confident that
29:44 - it's working and not messing anything up
29:46 - then of course we'll merge it back in
29:49 - but so for now I don't think it's it's
29:53 - actually available but I will before I
29:58 - leave today I'll make sure I'll push
29:59 - whatever we're we did up to to get home
30:04 - and that way you co can see it
30:14 - all right so I'm trying to see if I have
30:19 - a coin in here I mean oh yeah actually I
30:22 - do
30:22 - I have a coin in my backpack so I am
30:26 - actually going to throw a coin so you
30:30 - can you can't see this but you could if
30:34 - you're on the Instagram feed you'll see
30:37 - it so what do you say heads will be
30:41 - formidable and then tails will be multi
30:50 - all right so I'm flipping it now it's
30:56 - heads all right so we're gonna go with
30:58 - formidable
31:05 - okay now Joseph put in the live chat
31:08 - that Google has you can do Google a coin
31:11 - flip so we didn't what am I thinking
31:14 - flipping a real coin you know there's
31:17 - got to be a virtual way to do it that's
31:18 - better
31:19 - all right but anyway flip the coin its
31:22 - formidable so this is like real serious
31:27 - coding here right we're making making
31:31 - big decisions by flipping coins
31:35 - all right cool so let's then remove I
31:40 - think I had already added yeah I added
31:44 - this package I'm gonna remove it and
31:50 - then let's maybe we have to add
31:54 - formidable so I don't know if you caught
31:57 - it at the beginning of the documentation
31:59 - but it seemed like it was saying that
32:00 - it's already included in express so I
32:04 - guess we can find out by just trying to
32:07 - use it and seeing if it works
32:17 - so I'm going to do that let's go to our
32:24 - code let's get rid of this and I'm I
32:29 - guess I'm just gonna try to paste in
32:30 - some of the just really basic example
32:34 - code and they're using their instead of
32:41 - constant the sample code what the heck
32:48 - in case you don't know what I'm talking
32:50 - about by that it's the es6 you can use
32:53 - constant let instead of their to declare
32:56 - your your variables so if if you can if
33:02 - you're if you're using a transpiler then
33:05 - definitely use a Const or let alright so
33:15 - I'm just trying to see what I need to
33:17 - copy and what I don't need to copy
33:19 - [Music]
33:29 - and I just I don't like how they
33:31 - formatted this oh well we'll copy it
33:35 - over I can always change the formatting
33:37 - so definitely want this to be Const and
33:42 - I don't like this
34:01 - okay
34:02 - now that looks better
34:18 - okay so they're doing yeah this is a bit
34:22 - confusing the sorry I'm talking about
34:27 - their example so in formidable github
34:32 - page it's slightly confusing because you
34:36 - know they have it's not set up exactly
34:42 - right so like there's no Express here
34:45 - and things like that so I need an
34:46 - example that uses Express I mean if if
34:52 - there is one that would be nice I guess
34:53 - we can figure it out without that but
34:58 - just want to want to try that out let's
35:02 - see
35:07 - I thought there was a link to something
35:09 - about using it with express there we go
35:20 - okay cool Joseph just said there's
35:25 - there's an express formidable awesome
35:39 - okay so here is Express formidable
35:44 - although it's let's see how this works I
35:47 - mean there's like 30 stars so let's
35:54 - let's see what's going on here maybe we
35:55 - will use this or at least we can get
35:57 - some idea of how to use formidable
36:18 - I mean that that looks really really
36:20 - simple
36:37 - okay so you have some questions so
36:41 - formidable sis's marks asking a question
36:45 - about formidable it's going to help us
36:51 - upload files and store them so we have a
36:56 - file upload input and that we need to do
37:00 - something with the files once we get
37:01 - them okay john hanson
37:11 - recommended looking in the sorry looking
37:20 - at something else on my screen he
37:21 - recommended looking in the examples
37:23 - folder in that repo and I did not
37:25 - so definitely should do that so let me
37:33 - I'm checking it right now my other
37:34 - screen
37:45 - okay
37:47 - it's still looking
37:53 - yeah it's still looking pretty much the
37:55 - same as what was on the homepage in
37:59 - terms of like not having expression both
38:12 - actually it looks like there's a lot of
38:14 - information on using formidable with
38:16 - express it's just I just did a Google
38:19 - search on my other screen and a lot of
38:22 - people trying to do the same thing which
38:27 - is good
38:45 - all right so there is a tutorial so
38:56 - let's check this out I think this was
38:58 - from 2015 so hopefully it's not too
39:02 - outdated but at least this shows this is
39:05 - what I wanted to say something that's
39:09 - starting with Express and then also
39:11 - bringing in formidable
39:22 - okay yeah this looks like definitely
39:25 - looks like something I can use so I'm
39:27 - gonna copy this as a start just to give
39:36 - us something to work with
39:47 - and there we have formidable I guess I
39:52 - don't need these
40:01 - okay so basically
40:20 - okay so this handles uploads we do need
40:23 - to make sure that we can handle the rest
40:25 - of the form as well so I'm assuming that
40:28 - formidable does that I mean it would
40:30 - make sense that it would do that
40:50 - okay yeah I can handle form data
41:05 - okay this is a good place to start I
41:07 - kind of just like really want to test
41:09 - something first before I start
41:12 - second-guessing things and copying other
41:15 - things and so first thing I want to try
41:19 - to do is just see as I was saying before
41:23 - the do I really need to have formidable
41:27 - like the documentation seem to was
41:30 - seemed to say it already came with
41:32 - Express which I'm not really sure that
41:35 - it'll work like that but we'll see so
41:40 - I'm just gonna start I'm just gonna try
41:47 - to start the server let me think what
41:53 - did I use before I came here what I used
41:55 - before
42:06 - their note sir well I couldn't I
42:09 - remember that it's the same every time
42:11 - you use it anyway okay cool
42:15 - so that was easy enough we do need a to
42:18 - add it which makes sense
42:27 - so
42:31 - okay
42:33 - what's yarn add formidable
42:43 - okay so we're now getting that package
42:45 - and installing it and all the
42:47 - dependencies okay cool
42:51 - I saw it John I saw your comment there
42:54 - about formidable does pull in all the
42:57 - form data also Andrew I see Andrew asked
43:03 - how I like the react nanodegree yeah I
43:09 - am I like it so far
43:11 - like I said I'm through there's
43:12 - basically there's an introduction and
43:14 - there's three courses or three sections
43:17 - to the nanodegree and I'm through the
43:19 - first one I like the first one the the
43:23 - biggest benefit that I've seen so far
43:24 - from that program has been being able to
43:27 - submit projects and then get feedback
43:32 - pretty quickly like within 24 hours and
43:35 - for me it was it was always way less
43:38 - than 24 hours and that that was really
43:44 - challenging and good so hey I guess
43:47 - somebody in the Instagram that's been
43:51 - saying hi hey welcome yeah that was
43:56 - really challenging because that's not
43:58 - something that I normally have like
44:00 - trying to teach myself something usually
44:02 - is just me reading through things and
44:05 - trying out out on my own without any
44:06 - feedback from a real person so that was
44:11 - good my my project ended up I had to
44:15 - revise it a lot more than I thought I
44:17 - would you know the first time I turned
44:19 - it in I thought hey this thing works
44:21 - it's done and it wasn't there was like
44:24 - rounds of I don't remember how many but
44:27 - like maybe like five I don't know it was
44:31 - crazy how many times I turned in the
44:34 - same project thinking that I had it
44:36 - completely done and not realizing that
44:39 - there was some little bug or some piece
44:42 - you know one of the user stories that I
44:45 - just was not completing so that was
44:49 - really challenging and it forced me to
44:51 - learn more and to you like refactor
44:54 - a lot of what I had done so that that
44:57 - was cool I really I did like that now I
44:59 - can see the value and paying for those
45:03 - courses that really the value is in real
45:07 - people putting in work going over your
45:10 - code line by line making comments
45:12 - challenging you you know that's that was
45:16 - the best part of it so anyway sorry for
45:19 - the little sidebar there I am my
45:22 - intention was to address that question
45:24 - while this was loading but it's it
45:26 - obviously loaded way faster then I
45:29 - thought oh now we have this and now
45:34 - let's just let's try to start this
45:36 - server okay cool this is this is good it
45:44 - doesn't it doesn't say anything right
45:45 - now when I started so this this means
45:47 - it's probably running and we can check
45:49 - this by going to localhost 9000 awesome
45:56 - it's working okay now we didn't actually
45:58 - do anything to link up this forum so we
46:00 - can't test this yet but at least it
46:03 - shows that like one we have formidable
46:05 - now and also like we don't have any
46:08 - crazy errors in our server ojs file so
46:12 - good step my timer went off so I'm gonna
46:18 - take five minutes try to go through the
46:20 - everything that's in the live chat so
46:21 - far answer any questions and hopefully
46:31 - hopefully I think I may be able to get
46:34 - through most of us in the live chat
46:36 - there's not a whole lot and I kept up
46:37 - with it so after the five minutes is up
46:39 - we'll go back and let's link up that
46:42 - upload and see what happens when we we
46:46 - actually try to upload something
47:10 - what all right so Patrick says
47:14 - extracting 306 million cracked passwords
47:21 - from a 5.4 gig 5.4 gigabyte seven zip
47:29 - file is really taking a long time what
47:32 - are you doing why well how did this all
47:35 - come about
47:47 - okay we did have a question how can
47:50 - JavaScript help you for working how does
47:55 - it help you as a programmer pretty much
47:59 - anything on the web now runs at least
48:01 - some JavaScript so if you're into web
48:04 - development at all then you probably
48:07 - going to end up using javascript
48:09 - especially since like the web has moved
48:12 - away from alternatives so flash is not
48:14 - really a thing anymore like Java applets
48:19 - they don't you don't see those you know
48:23 - anymore so everything is pretty much
48:26 - JavaScript so it can definitely help you
48:30 - with web development you can use
48:32 - javascript in other areas as well
48:34 - although you don't have to so you can do
48:36 - JavaScript on the back end you can you
48:39 - can build apps with JavaScript you can
48:43 - even do BR stuff with JavaScript so now
48:47 - you don't like I said you don't need
48:48 - JavaScript for that but if you knew
48:51 - JavaScript you could do all of that with
48:53 - just JavaScript so I think there's value
48:56 - in its versatility right now
49:07 - the Moose says the atom editor what does
49:11 - its hackable mean I'm new to coding
49:14 - basically it just means that pretty much
49:16 - everything in the editor you can
49:18 - customize so you can actually go into
49:20 - the code and customize what you want
49:24 - it's I think Adam Adams an electron
49:28 - bright I'm pretty sure so if you go into
49:31 - the code for Adam it'll look really
49:34 - familiar because it'll they'll be like
49:36 - CSS that you can edit and things so a
49:40 - lot of I mean probably your basic place
49:43 - to start with that would be editing CSS
49:45 - to change colors but you know you could
49:48 - get deeper into it people make a lot of
49:50 - plugins to make Adam do a lot of
49:54 - different things so that's that's what
49:56 - they mean by hackable it just means
49:57 - customizable
50:06 - okay I see Patrick said there there's a
50:12 - he looked up but and npn compared calm
50:16 - and compared a bunch of the form
50:19 - packages that are used with express in
50:22 - note and said that formidable wins by a
50:25 - lot so awesome
50:27 - so our coin flip picked the right one
50:43 - okay patchy should surprise grepping a
50:46 - 12.7 gigabyte file with 306 million
50:49 - passwords to make sure your passwords
50:51 - aren't in it is very slow okay now I
50:53 - know what you were doing that okay that
50:55 - makes a lot more sense so that's
50:57 - actually really cool so let let's talk
51:02 - about this for a second so you so you
51:07 - have a file with all these crack
51:09 - passwords and you're checking for your
51:11 - passwords where did you get the file
51:23 - varun says hi Jesse greetings from India
51:25 - hey how's it going thanks for for
51:28 - watching for joining us Jacobi says hey
51:33 - what's up folks
51:34 - just just building stuff with react
51:37 - how's it going thanks for watching okay
51:45 - Kevin said the express formidable
51:47 - package is really just a thin wrapper
51:49 - over formidable so that it works as a
51:51 - middleware it's literally 23 lines of
51:53 - code
51:54 - okay cool so probably not really a big
51:58 - deal to go with that then not it's not
52:03 - gonna really add a lot and it might help
52:04 - us out so I'm gonna I'll check that
52:07 - again in a minute
52:16 - okay Rohan asks if I visit if I did
52:20 - visit the doctor and how my my hand is
52:24 - so-so lately my right wrist has been
52:27 - hurting a lot and so I actually did go
52:32 - to the doctor two days ago so yeah so
52:38 - after work two days ago I went basically
52:40 - I have a wrist splint like a brace thing
52:44 - that I wear I actually I can't wear it
52:46 - when I'm working I tried to but like
52:50 - when I try to type on the keyboard part
52:52 - of the brace like hits keys that I don't
52:54 - intend to hit so it's just and it's
52:58 - sometimes it even ends up hurting worse
53:00 - so I basically only wear the brace when
53:03 - I don't need to work and then I just
53:08 - like keep trying to put ice on it they
53:10 - gave me like a pack of like steroid
53:12 - pills that are supposed to take the the
53:14 - inflammation down and other than that I
53:19 - just need to try not to use it which is
53:20 - hard because I'm right-handed so I'm
53:22 - constantly trying to do things with my
53:23 - right hand and I have to stop myself so
53:25 - I'm starting to get used to it now
53:27 - driving with my left hand was a little
53:30 - weird and actually brushing my teeth
53:32 - left-handed really weird eating
53:34 - left-handed there's a lot of things that
53:36 - you don't I just never thought about
53:39 - doing with my my offhand and now they're
53:44 - they're really weird so anyway that's
53:48 - the update on my my wrist so it is
53:50 - slightly better than it was yesterday so
53:53 - I have been making more of an effort to
53:55 - to not use it and actually the ice using
54:00 - ice with it helps a lot so it feels
54:02 - really good after I sit
54:08 - okay I'm Patrick this would be the last
54:11 - thing before I go back to the code here
54:13 - since my time is up but in answer to my
54:16 - questions about the password thing
54:18 - Patrick says I have been poned dot-com
54:21 - slash passwords awesome
54:24 - cool yeah I am I've been on that lift
54:27 - site before I guess I just didn't look
54:28 - around enough I didn't realize you could
54:30 - actually get lists of passwords but
54:33 - that's really cool I'm definitely I'm
54:36 - gonna have to go on there I'm typing it
54:43 - in on my other screen just so I don't
54:44 - forget because I need to be extra
54:47 - careful I think with passwords
55:01 - dang it I can't I have a VIN phone did I
55:03 - type it wrong but anyway I need to I
55:09 - feel like I need to be extra careful
55:11 - because I have access to so many
55:14 - people's websites that I like have an
55:18 - obligation to be more careful than than
55:23 - normal with passwords so I don't know
55:30 - how it is with you all but if specially
55:32 - if you've done any freelancing do you
55:34 - all have access to like a ton of
55:36 - websites because that's how it is with
55:38 - me and it makes me nervous sometimes
55:42 - especially if my kids want to play
55:44 - something on my computer that I I'm like
55:46 - no you can't you could accidentally like
55:50 - break somebody's website yeah so anyway
55:57 - I mean how do you handle that like I'm
55:59 - still I'm still an admin for so many
56:02 - WordPress installations though for a lot
56:07 - of businesses and though they probably
56:10 - never ever login to their WordPress
56:12 - thing so it's never changed
56:14 - they've never like I had I bet you
56:18 - probably 90% of my clients even from
56:22 - like four or five years ago I could
56:24 - probably log into their site right now
56:26 - because they never think to change the
56:29 - password and I would still have admin
56:31 - access I'm pretty sure I still have FTP
56:32 - access to people's sites and they don't
56:34 - even realize it yeah so I mean that's
56:40 - probably a bad thing but otherwise it's
56:44 - sometimes you get clients like I could
56:46 - give them everything they need to access
56:48 - it through FTP and they'd never even
56:50 - know how to do it or want to do it so
56:52 - it's not like you can hand over that
56:53 - information because there's there's no
56:55 - one there that can understand that and
56:58 - use it so anyway sorry for the tangent
57:03 - but it's a little ethical dilemma of
57:05 - like should I just lock myself out
57:08 - of everything and then those clients
57:10 - would probably then be locked out
57:12 - because they really probably shouldn't
57:15 - be admins on it either sometimes their
57:18 - passwords are like really really simple
57:21 - so definitely should not have admin
57:23 - access so it's it's a bit of a dilemma I
57:26 - don't know let me know what you think
57:27 - about that like it does make me a little
57:31 - nervous I mean it doesn't keep me up at
57:33 - night but I am a bit nervous
57:35 - that I have I have so much access to so
57:41 - many sites but I don't really I don't
57:46 - really know a good solution to that okay
57:54 - so anyway in case you had no idea what
57:56 - we were talking about this is the site I
57:58 - have been phoned com put in your email
58:02 - address or username and then it should
58:04 - tell you if anything is any accounts
58:10 - associated with that email or username
58:12 - if those sites have suffered like a data
58:17 - breach and then potentially your
58:19 - password has been exposed and if you use
58:21 - that same password on other accounts
58:23 - then potentially your other accounts
58:25 - could be exposed as well so really
58:28 - useful I'm not gonna search for mine in
58:31 - front of all of you because maybe I am
58:35 - maybe my stuff has been exposed and
58:37 - before I'd have a chance to change it
58:39 - somebody might I don't think one of you
58:42 - would try to get into my stuff but it's
58:45 - possible okay so let's go back to here
58:49 - and let's just see what are we doing
59:02 - okay so what we need to do is post two
59:07 - uploads from our request form
59:22 - so right now I don't really care about
59:24 - the rest of the forum right now I want
59:26 - to test out the file upload first
59:28 - because the rest normal uploads are a
59:32 - lot more simple it's been my experience
59:35 - it's way more simple to handle other
59:37 - form data and it's the file uploads
59:39 - especially multiple file uploads that
59:41 - are always a bit tricky so like I said
59:47 - I've done this and node one other time
59:48 - but using Moltar and instead of
59:52 - formidable and then I've done it in PHP
59:53 - which obviously we're not going to do in
59:55 - PHP for this project
60:00 - so this is a bit new for me
60:12 - okay our idea is upload and I do have I
60:19 - have the code from my other project so
60:27 - the last time I did this I actually did
60:29 - use Ajax so I don't think I'm gonna use
60:36 - Ajax this time obviously
60:58 - so let me so as I said earlier I don't
61:00 - really want to bring over my previous
61:02 - code onto the screen where you all can
61:05 - see just just in case I have some stuff
61:08 - in there that I should not show because
61:12 - it was for a client I have no idea if
61:13 - there would be okay with me showing the
61:16 - code anyway so that's what I'm doing
61:22 - right now I'm just kind of looking at
61:24 - that code alright so I can see okay I
61:29 - did do one thing that I did do before
61:32 - that I'm not doing now and I'm not sure
61:34 - if it's needed or not is I use name
61:42 - upload and then I put this in brackets
61:45 - so and now that I see that I know that
61:50 - at some point I did try this and it was
61:53 - needed I know for sure I needed to do
61:56 - this when I try to do it with PHP not
62:02 - exactly sure that I need it with this
62:07 - we'll see
62:41 - okay it looks like I do have a file that
62:43 - I'm pretty sure I could bring this over
62:45 - and show you also let me show you all
62:47 - what I did just to give you an idea of
62:50 - like what what at least worked not sure
62:57 - if it's the best okay so this takes form
63:03 - data both text inputs and multi-part
63:11 - upload and then it submits it so yeah so
63:20 - this is Jake it's using jQuery so when
63:22 - you click the submit button it goes
63:25 - through and it grabs the values which in
63:28 - our case our values are already stored
63:30 - in state so we won't have to actually go
63:34 - and select the the elements themselves
63:37 - we already have all that so that'll be
63:40 - easy okay I do have a toggle so
63:47 - depending on what's checked this this
63:49 - data gets sent to a different email
63:50 - address okay and here's what I did with
63:55 - the form data so this is what I'm I'm
63:57 - actually most interested in so I created
64:01 - a new form data object and then I
64:06 - appended all the fields
64:13 - and then I loop through the files and I
64:20 - appended that as well and then I use
64:26 - Ajax to do a post request right here to
64:29 - send a post to our upload
64:43 - okay so you can see these are the steps
64:46 - we're not obviously not going to use
64:48 - jQuery to do this but these are the
64:51 - basic steps that we need to follow
65:16 - oh okay I just
65:19 - so John 100 says I've been saying I have
65:23 - been poned but the site is have I been
65:26 - poned that's probably why I kept typing
65:30 - it wrong
65:33 - have I been phone so I was trying to
65:36 - type in I think I was trying time and I
65:38 - have been phone so thank you for that so
65:40 - sorry for the for the mistake so have I
65:44 - been poned that makes more sense
65:48 - alright so I'm gonna pull this over and
65:52 - just as a reference for the steps that I
65:56 - need to take so we need the button and
66:03 - where's our button our submit button
66:05 - here we go so here's our button so we
66:10 - need to have a non clay
66:19 - and
66:31 - hello form data so appears somewhere
66:54 - no probably gonna get yeah I don't know
67:00 - that we need to pass it anything
67:08 - okay so within this
67:34 - okay so from what I understand basically
67:38 - so we're not gonna use the submit button
67:40 - in a normal way so like we didn't wrap
67:42 - this in a form element and the normal
67:47 - thing would be like that you you have a
67:50 - submit button in your form element it
67:52 - just automatically sends the form data
67:55 - but normally the behavior would be that
67:57 - you would have a page refresh so at
68:02 - least one of the ways to handle that
68:04 - when you don't want a page refresh to
68:07 - happen which we don't in this case is
68:10 - that you just create your form data
68:12 - object with JavaScript and that's what
68:15 - happens when you click the button I'm
68:18 - pretty sure there are other ways to go
68:19 - about this and maybe this isn't the best
68:21 - way but it is the way that I have used
68:25 - in the past so it's a good place to at
68:27 - least start from to see if we can get it
68:32 - working and then we can always refactor
68:35 - if we figure out that this is not the
68:37 - best way to do it
68:39 - so let's um
68:42 - [Music]
68:46 - can you check out of state let me I
68:52 - forget how our state ends up looking
69:18 - area
69:32 - there we go okay so you just stayed
69:58 - you should be able to do
70:46 - okay all right so I see Kevin this yet
70:49 - this is exactly what I'm thinking right
70:51 - now Kevin says you can pass a form
70:54 - element to the constructor of form data
70:58 - and it will be populated with the forms
71:01 - current keys and values okay yeah that's
71:04 - what I'm trying to do basically I just
71:05 - want the the keys and values to be in
71:10 - the form data object so what I was what
71:14 - I was thinking of doing was I was just
71:15 - going to map over all those and then
71:17 - append them so is there then a better
71:22 - way to do that
71:53 - okay
72:33 - all right so so I was looking up some
72:37 - things on the other screen so you're
72:41 - saying basically I need to use a
72:43 - constructor oh but you would need a form
72:46 - element you can map over them but you
72:48 - need object dot entries okay so I was
72:57 - reading that out from from the live chat
73:09 - okay
73:31 - okay so basically Kevin is saying in the
73:35 - live chat here that I was trying to use
73:37 - map which is not the right thing to use
73:41 - here because we use map with arrays and
73:45 - state is an object so it should not be
73:50 - zoom at so any just I'm so used to using
73:57 - Matt because normally well at least in
74:00 - our last project we dealt with JSON all
74:05 - the time and use map with it okay I got
74:11 - a link
74:12 - alright so John has sent a link in the
74:19 - live chat for using form data from NBN
74:28 - so that's probably that was probably a
74:31 - decent idea here to look to check out
74:37 - form data before let me pull this over
74:44 - on this screen it okay so basically it
74:49 - so we're all on the same page that the
74:52 - what we're trying to do right now is get
74:55 - all the key value pairs that are in
74:57 - state that's all the information that's
74:59 - it's in the inputs we're trying to move
75:01 - that into our new form data object that
75:05 - we've we've created so we're basically
75:10 - here at this point it's empty right and
75:14 - then what I was going to do was loop
75:16 - over everything and then just append but
75:22 - this is what we want to do
75:41 - well not exactly this so because this is
75:43 - still assuming that we wrapped it in a
75:51 - form I guess we can't we could write
75:57 - there's no reason why we know I don't
76:01 - want to because I'd rather get it from I
76:03 - think I would rather just get everything
76:06 - from the state
76:14 - I'm not sure it is there what do you
76:17 - think is there any value and using kind
76:19 - of the more traditional form elements
76:22 - and then just preventing default on when
76:26 - we click on the submit button and then
76:28 - doing what we want I mean I guess that
76:30 - would give us everything that we needed
76:32 - all the values we needed and technique
76:37 - like those values would all be exactly
76:39 - the same as what's in state because
76:41 - that's where the the values are coming
76:44 - from
76:54 - aha John said I went to the wrong page
76:57 - alright let me go back form data values
77:29 - okay I'm not
77:38 - it looks like values are this would tell
77:45 - me what all the values are from the form
77:47 - data object but I guess what I want to
77:50 - do is get stuff into the object first
77:54 - okay Kevin has put some code in
78:19 - okay I see Kevin Kevin stuff let me copy
78:22 - this over so everybody can see this I'll
78:27 - just add this down here okay so this is
78:32 - what Kevin has pasted or typed in the
78:37 - live chat so basically she's just a
78:57 - okay
79:02 - so we can do this but I'm I guess I'm
79:05 - still now that I I saw that
79:07 - I'm still wondering are we are we trying
79:14 - to do in JavaScript something that the
79:17 - form element already does for us should
79:21 - we just use that is would I mean is
79:26 - there any reason why we shouldn't just
79:28 - use that so you know again like
79:37 - basically you know this and then
79:42 - creating our form data objects with
79:45 - what's already in this this form
80:01 - which is fine I'm fine doing it either
80:03 - way I'm just kind of wondering what the
80:08 - is there a best way in this situation
80:47 - just send me a lot to wrap from yeah
80:51 - okay so John says maybe wrap it in a
80:54 - form seems easier okay and then Kevin
80:58 - adds the the code would just be
81:01 - appending the key value pairs so like
81:11 - that
81:24 - okay so Umberto is saying if you are not
81:30 - going to have a way to handle an actual
81:33 - post with postbag then do not rely on
81:37 - client-side JavaScript to perform
81:39 - prevent default okay so this is a reason
81:43 - against using the form elements to just
81:48 - wrap everything in the form tags okay
81:57 - all right so I mean that's what I was
81:59 - looking for basically is if we could
82:00 - think of any reason why we should not
82:03 - use one or the other so let's let's go
82:11 - with this then
82:17 - okay so within this let's pop this in
82:22 - first
82:26 - all right so Kevin let me look at this
82:30 - so I'm actually not
82:46 - I actually don't really understand this
82:48 - part and what's going on here so I'm
82:51 - assuming that this was necessary to be
82:54 - able to use map on the state because
82:56 - originally you say we can't use map on
83:00 - the state because it's an object so if
83:03 - you if you can if you'd like to please
83:09 - let me know like just a brief
83:12 - explanation of what's going on here and
83:16 - then I'll I can read that out for
83:18 - everybody cuz maybe you all get what's
83:21 - going on here but I'm slightly lost at
83:23 - least this part so I can explain the
83:31 - rest which is basically we're gonna
83:36 - iterate over everything and state which
83:39 - are all our key value pairs for all our
83:41 - form inputs and then we're gonna add it
83:43 - to this form data object and then the
83:46 - form data object is what we're actually
83:48 - going to pass over to our server
83:51 - J s and then it's going to be handled
83:57 - here within this okay so everything in
84:01 - here is where we're gonna actually do
84:03 - what we need to do with that data
84:08 - okay cool so I have an explanation now
84:13 - Rudd rivering Shu says the object dot
84:18 - entries method returns an array of a
84:20 - given object's own innumerable property
84:23 - key value pairs in the same order as
84:26 - that provided by a for in loop okay so
84:33 - basically it's doing we could have done
84:38 - the same thing by using a loop but
84:41 - that's just a much shorter way of doing
84:44 - it am i understanding that correctly
84:56 - Jacobi says it almost seems like you
84:58 - don't have to use the map function yeah
85:01 - that's a good point so yes so if this is
85:07 - already going to go over everything do
85:10 - we do we need the map
85:26 - okay so patrick said it's it's a second
85:29 - array of key value pairs that that line
85:36 - is d structuring those back into key
85:39 - value okay
85:48 - all right I'm starting to get it
85:50 - starting to get it a bit more Patrick's
85:53 - is a two dimensional so
86:04 - okay cool so rude rude rang Xiu is as
86:11 - put the link in the live chat for the
86:14 - NBN article on it so I'm gonna just save
86:20 - that and check it out I'm gonna check it
86:25 - out later on and just you can see so
86:33 - basically if you look up global why is
86:37 - this going off of my screen
86:45 - that's odd anyway global object object
86:51 - entries if you search that on Indiana
86:53 - it'll probably come up okay all right so
87:00 - Patrick is put in let me paste this over
87:04 - so in the live chat Patrick just put in
87:07 - so it ends up being like this okay which
87:11 - this makes more sense now that this
87:14 - basically allows the map to work because
87:16 - now we are dealing with an array
87:39 - okay so John hundred says speaking of
87:42 - since this is a teaching video you might
87:45 - want to edit the soundtrack for the
87:47 - right website so it's a have I been
87:49 - phone maybe we can put out a cliff notes
87:52 - version of all these live chats yeah
87:54 - that's yeah I actually since these are
87:58 - all done live like I never go back in
88:01 - and edit mostly because so like YouTube
88:03 - just automatically post them so you
88:07 - can't edit a YouTube video I'd have to
88:09 - take the video down and then upload an
88:11 - entirely different video so that's why I
88:16 - don't do that it's possible that I could
88:19 - set it so that YouTube wouldn't
88:20 - automatically do it and instead I would
88:22 - record it at the same time that I'm
88:25 - streaming on my local machine then I
88:27 - could make edits and then upload but I
88:29 - don't have the time or the skill to do
88:33 - that so for better or for worse these
88:36 - remain unedited but I'm definitely
88:39 - interested in the idea of a Cliff's
88:42 - Notes version of all these these chats
88:47 - alright so let's let's just try it let's
88:56 - see okay now I want to
89:22 - so we need to send a post Oh actually we
89:25 - need to we need to handle that those
89:27 - uploads so base if you remember in our
89:35 - law to show you in states I believe well
89:46 - actually let me check I was thinking
89:48 - that in state like basically we're just
89:49 - gonna have the names of the files
89:52 - correct
90:01 - I thought that's what how we had it I'm
90:04 - pretty sure that's how we had it so
90:05 - obviously like we need more than just
90:07 - the names to sin
90:39 - trying to find how I handled these
90:44 - uploads before now I can't find it
90:47 - I had the screen up
91:05 - I'm just gonna start closing some
91:08 - windows here because I can't find
91:10 - anything at this way
91:29 - there we go that's what I was looking
91:31 - for just looking on the wrong screen so
91:33 - that's a okay
91:40 - [Music]
91:45 - let's go
91:50 - we need to append the files so if we
91:54 - grab wood I think we just name that
91:56 - upload so is there's got to be is there
92:04 - like a better react way to get the value
92:08 - [Music]
92:11 - of an element other than document dot
92:14 - get element by ID
92:23 - he said upload upload upload okay
92:39 - use ref okay
92:45 - okay so I can use ref I remember trying
92:51 - to use ref at some point within the last
92:54 - six months and not getting it to work so
92:58 - I'm gonna look up in the docs how to use
93:02 - wrath
93:11 - so here's wrath many focused readers
93:23 - okay Kevin says you can use react Tom
93:25 - define node react element
93:46 - so which way is between the two waves
93:49 - between ref and using react don't find
93:51 - note which way is the better one
94:09 - oh man I kept thinking like you know
94:13 - what my timer hasn't gone off for a
94:14 - while and evidently I had never reset it
94:16 - after the break so yeah it's definitely
94:23 - been enough time let me do a short break
94:26 - and go back to the live set I'm sorry I
94:30 - ignored you all for so long and then
94:34 - we'll come back we'll get this to the
94:36 - point where we can at least give it a
94:37 - shot of testing it out and and then
94:41 - we'll then we'll end
94:53 - so this will be definitely keep this
94:56 - short since we're getting towards the
94:57 - end anyway
95:21 - okay so Barack says Jesse thank you for
95:24 - doing this you're welcome
95:26 - I he says I've watched the first four
95:29 - videos and this is the first live
95:31 - session how many days do you expect this
95:32 - project to be actually I got some
95:39 - information today from one of my
95:42 - co-workers that we might be changing
95:45 - more about this than I thought so I'm
95:48 - not really sure I can give a good
95:50 - estimate right now because if there are
95:55 - going to be changes then it might be
95:56 - bigger a bigger project than we thought
95:58 - and then also if they're going to be
96:00 - changes I might have to wait and have
96:02 - things reviewed before I can actually
96:06 - put the changes in so I mean nothing
96:08 - like code wise but just the text that's
96:11 - going to appear on there might have to
96:13 - be reviewed by multiple people before
96:15 - it's approved to be on here so that
96:18 - could lengthen things so I would I would
96:24 - say like I mean what we're on day 11 I
96:28 - mean I kind of think we could have this
96:31 - usable by day like 20 this is probably
96:39 - the biggest thing that we're working on
96:40 - now everything after this is going to be
96:42 - pretty easy we'll have to take some time
96:45 - to set up a server but that shouldn't
96:48 - take too long yeah so I'm gonna guess
96:55 - maybe around 20 days if everything goes
96:58 - well and there's not a lot of changes if
97:00 - there's more changes more than that kind
97:02 - of didn't think this would take that
97:03 - long but I also thought that we would
97:06 - basically be copying over all the stuff
97:08 - and not changing much so we'll see we'll
97:12 - see how it goes I really hope I don't
97:15 - have to like stop and go to a different
97:17 - project and then come back that would
97:19 - just mess up the continuity of the
97:20 - streams but if I'm waiting on things you
97:24 - know texts to get reviewed I can't
97:26 - really do anything about that
97:35 - Alberto says hello I'm from Cuba I'm
97:38 - also learning react and I like your
97:41 - videos a lot I could contribute with
97:43 - your project by adding progressive web
97:45 - app capability let me know if you're
97:47 - interested to coordinate yeah actually
97:50 - that's that sounds really good so yeah
97:55 - Albert so yeah let me know I mean you
98:01 - could I mean certainly it's on github
98:02 - you could do a pull request if you'd
98:04 - like or if you need to like talk talk
98:06 - about things with me to get it to a
98:09 - better place like let me know because
98:11 - I'm definitely interested I'm interested
98:15 - in that I appreciate you offering to
98:18 - help with that
98:38 - huh John asked when I was talking
98:40 - earlier about having passwords to
98:42 - everything I mentioned I don't like my
98:44 - kids on my computer he said you don't
98:46 - have your own desktop login and your
98:47 - kids and other would save you a lot of
98:49 - grief yeah on my um on my macbook my
98:53 - kids don't have a login it's just me and
98:55 - my wife so I I pretty much never want
98:58 - them on the MacBook at all I do have a
99:00 - Chromebook that they I'm surprised at
99:05 - how durable it is like my kids destroy
99:08 - it they spill things on it they drop it
99:09 - they take it like everywhere they take
99:12 - it outside and just lay it on the ground
99:14 - and the grass and stuff it's crazy and
99:16 - it still works so I probably should make
99:21 - an account for them they usually just
99:23 - use my wife's login but that's a good
99:28 - idea I haven't really had to worry about
99:30 - it until now because they haven't really
99:32 - used computers that much until kind of
99:34 - recently so I'm gonna have to think
99:36 - about setting things up in a better way
99:43 - Bryan says use one password and generate
99:45 - unique passwords for each site actually
99:47 - I use I use LastPass so I do have unique
99:51 - passwords for my sites
100:03 - okay all right so I did say this was
100:05 - gonna spin any short break and I am
100:07 - gonna go back to this so I'm gonna be
100:08 - true to my word there and I'll come back
100:11 - and finish with a live chat as soon as
100:12 - we get this working I guess I mean I'd
100:16 - be okay even if it like as long as
100:18 - something happens even if like it it
100:21 - fails I just wanted to do something okay
100:27 - so what were we oh we were doing this
100:30 - okay so the the last thing we were
100:33 - talking about was they're using refs
100:46 - okay so kevin says ref sounds like the
100:49 - way to go on this so we'll go with that
100:52 - also Kevin says since we are not
100:54 - returning anything from map you may want
100:55 - to change it to four each or to a four
100:58 - loop okay
101:03 - [Music]
101:16 - I guess we can change that
101:26 - all right so we're talking about this
101:28 - part here and replacing it with this for
101:34 - loop like this correct
102:12 - alright and for this part we're gonna
102:14 - basically try to do this but using refs
102:17 - because that that seems like the way to
102:19 - go so as I said I have never
102:22 - successfully used refs so I need to take
102:24 - a second here and check out how to use
102:26 - it
102:38 - oh man I totally forgot I've had a fan
102:40 - on the whole time it can you guys hear
102:43 - that or can you all hear that is it
102:46 - annoying the fan
103:31 - okay cool it doesn't seem like anyone is
103:34 - the faith it is on the lowest setting so
103:39 - it was just really hot in here today so
103:43 - normally I don't run run the fan when
103:45 - I'm streaming
104:03 - okay
104:21 - okay
104:23 - so on our on our input
104:51 - okay and then now we can access this
104:55 - this upload input okay
105:14 - okay so this will select that and then
105:20 - within our upload input we need to
105:31 - get the data and append that to our form
105:36 - data objects
105:45 - so we need files
106:38 - oh wait Patrick says refs don't work
106:40 - with functional components this is not
106:44 - yeah this this particular component
106:46 - right is not okay good for a second I'll
106:52 - say all admit we gotta change it again
106:54 - okay but that is good to know so refs do
106:57 - not work with functional components so
107:00 - just FYI okay so we need to get our
107:06 - files and we need to append that
107:30 - so how's the files do you get an array
107:34 - of files or do this give it an object I
107:38 - can't remember what we're gonna get
107:41 - actually let's just I want to see what
107:48 - we're doing
107:57 - I wonder if this will even run hey oh
108:01 - that's not now which one do I want to
108:03 - see for now
108:11 - okay so for now I'm just using it at the
108:14 - local hose 3000 because I don't have to
108:18 - build things over again so let's throw
108:24 - in some files and I just put in some
108:30 - stuff here and then submit
108:38 - [Music]
108:42 - should console oh yes awesome alright so
108:46 - here's what we have so we have in fact
108:50 - successfully selected our upload field
108:56 - or upload input and then we are getting
108:58 - the file so here's a file list so we did
109:03 - up one two three yeah so we uploaded
109:08 - four files we see all four files here
109:11 - awesome awesome
109:15 - [Music]
109:17 - cool so that's what we needed that's
109:20 - what we want to do so we just need to
109:23 - append these
109:37 - so let's see how did I do this before
109:53 - all right so we need to wait actually I
109:56 - wanted to see that these were okay
109:58 - living objects
110:11 - all right so since it's an object we do
110:13 - not want to use map correct
110:27 - so I guess we could do a four of again
111:13 - and we want
111:27 - really we want to pen the whole thing
111:40 - and
112:01 - okay Alberto says how can I get in
112:04 - contact with you if I'm on all like all
112:10 - the different social media things so if
112:12 - you're on Twitter you can direct message
112:13 - me on Twitter or whatever whatever
112:18 - social media that your do you use most
112:21 - often you can just you can find the
112:24 - links to all my social media stuff on my
112:26 - personal YouTube channel and the link to
112:29 - that channel is in the description
112:31 - otherwise you could email me too you
112:41 - could use just Jessie why go at
112:44 - gmail.com I'll type that in the live
112:50 - chat we
112:57 - yeah so whichever ways most comfortable
112:59 - for you
113:16 - okay so uh Kevin I'm seeing Kevin
113:18 - offered some alternatives to this so
113:21 - Kevin just will this then work or if
113:27 - this works I'll probably just keep it
113:29 - like this just for the sake of time at
113:31 - this point but if if you're saying that
113:35 - this won't work and I need to use one of
113:36 - the alternatives then that's cool I'll
113:39 - replace it
113:47 - all right so now that we're a pending
113:49 - that the next thing to do is would be to
113:56 - actually post the data so what I want to
114:03 - do is use fetch
114:19 - so
114:22 - let's show us in the studio with fish
114:27 - [Music]
114:28 - it's a 10-point it's just
114:43 - yeah
114:47 - and then
114:48 - [Music]
115:09 - first
115:14 - my head yesterday
115:22 - to even need headers maybe not trying to
115:26 - look on my other screen I have what I
115:28 - had used for when I was doing this with
115:30 - Ajax so I'm just trying to translate
115:32 - that into my fetch to make sure that I'm
115:37 - doing the same thing okay I don't need
115:40 - that it's it's slightly different how
115:44 - you put things links in with fetch
115:48 - [Music]
116:15 - hello says I give up it so hard no don't
116:19 - give up yet we're almost there
116:25 - alright fool as a body what if I can get
116:33 - away with this and just putting just
116:41 - putting data in the body
116:47 - maybe that's all I need I had a lot more
116:55 - to my Ajax call but I just kind of want
117:00 - to see if this works
117:02 - looks like the minimum that we would
117:04 - need to make this work
117:25 - I don't really want to do anything with
117:27 - the response just yet I guess
117:47 - all right so at least now at this point
117:51 - it would go here now let's make sure
117:54 - we're doing what we need to over here
118:29 - okay the only thing I'm not I'm not sure
118:36 - about this last part why are we I'm not
118:45 - sure what's going on here
118:54 - and I don't know where my documentation
118:57 - is at for formidable
119:29 - I can't remember we got this from from a
119:33 - tutorial didn't we yeah we did
120:11 - yeah I'm not really sure why we're
120:13 - sending this and there's not there's
120:17 - really no explanation given in the in
120:22 - the tutorial
121:05 - so I'm going through the on my other
121:08 - screen I'm just scrolling through the
121:10 - documentation and formidable
121:25 - alright let's just get rid of that for
121:28 - now since I really not sure about it
121:34 - okay so at least this should give us a
121:36 - console.log all right let's try it out
121:44 - like this
121:52 - see
122:01 - um we'll build it let's stop the server
122:08 - let's build it
122:41 - okay
122:50 - all right now
122:54 - it's good
123:24 - we get some errors
123:31 - okay check this we got nothing in here
123:43 - expected to see something
124:22 - all right so we had so nothing have
124:25 - nothing is probably the worst thing that
124:27 - could happen I would have rather had an
124:29 - error message
124:41 - all right let's see
125:39 - okay the good thing is since since I
125:46 - just changed this I don't need to build
125:48 - again I can what did I do with my
125:57 - terminal I put on my other screen okay
126:00 - you should be able to just close this
126:02 - and then reopen it
126:19 - okay actually
126:58 - okay we got an error
127:03 - so here's our error those slip those
127:08 - uploads can I should reset
127:31 - all right cool and we got our message
127:33 - here awesome unless I wanted at least an
127:37 - error message
128:01 - not really sure what to make out of this
128:05 - but at least I got something
128:12 - okay
128:50 - Joseph said no need for the get method
128:52 - also in the server jazz the get method
128:56 - was in here from the this as little as
129:05 - came from the create react app
129:07 - documentation so I think I need this to
129:11 - serve the the site itself
129:42 - I mean we were those you see those areas
129:47 - we were getting
130:11 - all right so I
130:19 - guessing
130:26 - I was trying to figure out where to look
130:28 - first
130:35 - okay these are conflicting
130:44 - all right
130:47 - I'll show this
130:56 - oh this is who we get
131:17 - okay cool got some different error best
131:20 - progress event status
131:30 - I don't have a file uploads okay so
131:35 - we're just expected at project resource
131:37 - center uploads okay
131:52 - alright now let's share it again
132:16 - haha look at that look at that alright
132:23 - take this out can everyone see that the
132:29 - files have been uploaded yes alright
132:36 - so we did it we got files all right I'm
132:41 - not saying that this is completely like
132:43 - a hundred percent the way we want it to
132:45 - be in the final version but like we have
132:48 - no error handling so but basically it's
132:52 - doing what we wanted it to do the files
132:55 - are in there and so basically our errors
133:02 - were our first error was pretty much we
133:07 - were just trying to do two different
133:08 - things that were conflicting here is
133:11 - basically I just copied this over from a
133:13 - tutorial and I'm pretty sure they were
133:15 - trying to do something that I was not
133:17 - trying to do so this was what was better
133:21 - to put in here then we got a second
133:24 - error simply because I was telling it to
133:26 - put the files and the uploads directory
133:29 - and I didn't create an uploads directory
133:32 - so I just had to create that directory
133:33 - so just for future reference if you're
133:36 - trying to do something like that watch
133:38 - out for for those errors probably the
133:40 - first error you might not get but this I
133:42 - can imagine that this might be like a
133:43 - common thing that gets overlooked
133:48 - awesome okay cool
133:54 - I thought I just I knew we were close so
133:57 - this stream has gone on longer than a
134:00 - normal stream but I just we were so
134:02 - close I just didn't want to stop until
134:05 - we got it so really cool so basically we
134:08 - you know we've got the uploads coming in
134:13 - and now they're going into this folder
134:16 - which is great which means so unlike I
134:21 - think I explained in a previous stream
134:24 - the problems I was having with the
134:27 - current uploads in that the files are
134:32 - being uploaded but they're not being
134:34 - stored anywhere instead they're being
134:36 - sent to our project management system
134:39 - and the issue sometimes is that the
134:41 - files don't get sent and I know they're
134:42 - supposed to be files because the file
134:44 - names are sent but the files themselves
134:48 - don't get sent so I'm losing the files I
134:52 - have no backup of those files and what
134:55 - happens if somebody from my department
134:56 - has to call whoever it made that
134:58 - submission and ask them to resend or
135:02 - just email them the files or something
135:03 - that's not really ideal so this what
135:07 - this allows us to do is we have a backup
135:09 - of the files we can choose now to try to
135:13 - send the files to the API through the
135:16 - API directly to our project management
135:18 - system which will probably still do but
135:21 - as a backup we can also send the URL to
135:26 - access these files if we wanted to so
135:29 - I'm not exactly sure how I want to do it
135:31 - but the bottom line is we have a backup
135:32 - now so we should not lose files anymore
135:35 - would never want to leave it like this
135:37 - right now I'm doing no checking to see
135:39 - if somebody's trying to upload a
135:41 - malicious file or anything so definitely
135:44 - don't want to leave it like this but you
135:48 - can see that it works everything else
135:50 - basically is just checking things out
135:53 - before we do this step of actually
135:55 - saving the file so now on to questions
136:05 - [Music]
136:07 - yes I see a couple a couple of good
136:11 - suggestions so Joseph says now get the
136:14 - return from the response and print a
136:15 - message accordingly yeah so we want to
136:18 - do something right to let the user know
136:21 - that it worked right I'm like I'm not
136:24 - gonna do anything else for this stream
136:25 - since I already applaud you all for
136:29 - suffering through all of that until it
136:32 - works so 25 of you it looks like made it
136:36 - all the way through to the end so
136:39 - hopefully getting it to work in the end
136:41 - was satisfying enough that it was worth
136:43 - sticking around it definitely was for me
136:47 - I feel so happy that we get that to work
136:50 - so yeah definitely wanted to have a
136:52 - response Kevin says are you gonna do a
136:56 - thank-you page or show a modal F
136:57 - reformist unsuccessfully yeah I think
136:59 - probably a modal yeah I think currently
137:04 - I show a modal so I'll probably just
137:07 - keep it like that Patrick says you may
137:11 - want to think about making uniquely
137:12 - named folders under the uploads folder
137:14 - to prevent naming collisions yeah that's
137:17 - a good idea
137:19 - I think what I had done previously is
137:24 - when I done something like this before
137:27 - I actually used like I got the date and
137:31 - I appended that to the file name so that
137:34 - every file name was unique and then that
137:39 - made sure because the only thing I'm
137:41 - thinking is can I even make folders
137:44 - because it's not I may have to do
137:47 - something else or maybe get another
137:49 - package to be able to let let me make
137:53 - folders automatically because it it
137:55 - wouldn't let it didn't find the upload
137:59 - folder maybe it's already built in but I
138:00 - just need to do something else to have
138:02 - it make the folder first so either way
138:04 - I'm fine with it either having a folder
138:09 - that's a different name for the folder
138:11 - like let's say each folder has a date on
138:13 - it and then the files go in there or
138:14 - actually changing the file names
138:17 - then as long as I keep track of what I
138:19 - changed the filenames to which shouldn't
138:22 - really be a problem then I can always go
138:24 - back and access those if I need to so
138:27 - yeah but anyway good suggestion okay
138:31 - yeah Kevin said or unique prefix yeah
138:34 - yeah I can um had it and usually like
138:40 - date date is pretty good I mean the odds
138:42 - of somebody like what what are the odds
138:47 - of like files being uploaded
138:48 - simultaneously at exactly the same time
138:50 - like is that is that even possible like
138:53 - I don't know
138:55 - so okay Kevin says FS dot make directory
139:00 - or FS dot make directory sync okay cool
139:04 - so there's definitely a way to do it
139:18 - okay it looks like alright cool Joseph
139:21 - is I said I know I said I wasn't gonna
139:23 - do anything else but says also some
139:28 - response like this so let me paste this
139:30 - in says this correct so what I can I
139:44 - have all these at the same time or these
139:46 - gonna conflict
139:48 - you can tell I'm definitely a noob when
139:50 - it comes to using Express in nodejs so I
139:53 - like I've done it when I had to do it
139:55 - and I was able to get things working
139:56 - that I needed to but not really
139:59 - confident enough to customize it a whole
140:02 - lot it takes a lot of research for me to
140:04 - do anything with this
140:19 - okay I need to remove one remove the
140:21 - first okay cool
140:23 - let's remove the first one okay cool so
140:30 - and then like so I've done if I've done
140:33 - this now on the other end when I get the
140:36 - response I can do something with the
140:41 - response which like I said I'll probably
140:44 - end up having a modal appear so I'm
140:47 - definitely not gonna try to code that
140:48 - right now actually I've never done a
140:51 - modal with material UI before so that'll
140:54 - be cool get to learn how to do modal so
140:55 - maybe that'll be tomorrow we'll finish
140:57 - up and give the user some feedback
141:14 - okay.what bangs shoe says not semicolon
141:18 - it's a chain function okay cool so I'm
141:22 - gonna get rid of do you want to get rid
141:24 - of that semicolon
141:27 - success your status fine
141:29 - okay I'm better just saying we can do it
141:31 - like this lots of options so let's see
141:39 - so I can combine that then and do
141:43 - something like this cool all right cool
141:49 - I'm going to alright at this point I'm
141:54 - just gonna save everything I'm gonna
141:57 - make sure let's um what do you think
142:03 - this is
142:04 - is this working enough that I could
142:06 - actually put this merge this back in the
142:14 - master at this point or should we leave
142:16 - it on a separate branch and want to get
142:18 - it like actually finished maybe I'll
142:21 - just leave it on a separate branch for
142:22 - now cuz it's not like it's really
142:25 - finished finish it's you know it's we've
142:29 - got the first like major step done we've
142:32 - got that to work but we still need to
142:33 - finish it off
142:43 - so let's check it out everything that we
142:46 - have here I do not want the uploads
142:51 - folder actually yeah I don't really want
142:58 - the uploads folder to be synced let's
143:04 - put that in in our get ignored
143:24 - there we go
143:34 - okay just saying I could do a blank
143:36 - upload folder and not the files
143:38 - themselves yeah that's true I kind of
143:42 - want to make it so we were saying
143:45 - earlier that we could automatically make
143:50 - the directory so I think I want to do
143:52 - that so I want to not sink the uploads
143:55 - folder but instead maybe make the floor
144:03 - is there a way that I could check to see
144:06 - if the folder exists and if it doesn't
144:07 - exist then create the folder because I
144:10 - think that would be ideal
144:11 - I don't know we'll see I could always
144:20 - add it in later
144:29 - I guess it would be a big deal right now
144:31 - to get rid of these so don't really want
144:36 - to keep them there anyway let's get rid
144:41 - of those and then I can take this off
144:45 - for now you just comment that out for
144:51 - now might put it back in all right so
144:54 - now I don't know it was already in there
144:59 - and I thought let me do it again
145:03 - okay cool here it is
145:13 - alright I'm gonna save that but like I
145:15 - said I'm not gonna do anything about it
145:16 - right now but so this is what I want to
145:23 - check to see if this if this suggest if
145:28 - not we'll make it so that's what I do
145:30 - want to do at some point but not right
145:33 - now cuz need to get this finished up how
145:37 - about this let me just answer the
145:39 - questions now and then I'll worry about
145:41 - committing this so I think I've gone
145:44 - over enough git commits that most but
145:49 - pretty much most of you if not all of
145:50 - you will have seen see me do a commit so
145:52 - you know I normally do like to do it but
145:59 - in this case it's been a really long
146:02 - stream so I'll just do it after
146:14 - alright I'm definitely gonna have to go
146:15 - back over the chat to get because
146:17 - there's so much good advice here that I
146:21 - want to make sure I don't miss it also
146:24 - after this is over I'll go back through
146:27 - so at this point now I'm gonna do
146:30 - question and answer if you don't really
146:31 - care about question and answer and you
146:34 - know you want to stop watching at this
146:36 - point that's cool thank you so much for
146:38 - watching I'll be back tomorrow 2:00 p.m.
146:42 - Eastern Time
146:44 - otherwise if you have any questions go
146:47 - ahead and throw them in here I'll do my
146:48 - best to get through them all probably I
146:54 - don't want to take too too long so I'm
146:56 - going to try to go through quickly
146:57 - because this is going to end up being a
146:58 - three hour long stream
147:30 - all right so I'm at this point I'm just
147:33 - scrolling through trying to find
147:34 - questions to answer and I'm skipping
147:40 - through most of the discussion and
147:43 - sometimes I do read out everything if I
147:46 - have time but I'm not going to at this
147:50 - point
148:13 - okay all right I found the point where I
148:15 - left off
148:16 - [Music]
148:24 - okay we were talking about I had said
148:30 - before I still have access to a lot of
148:32 - stuff from past clients and it's just
148:35 - like a weird situation so I did get some
148:40 - responses here about things so it seems
148:43 - like seems like at least a few of you
148:49 - also have access to things like that but
148:56 - Rohan had a good suggestion here so I'm
148:58 - gonna really says I probably wouldn't
149:00 - want to access their sites to distance
149:02 - myself if they try to blame me for
149:04 - something that went wrong but on the
149:06 - other hand yeah some people can be dumb
149:08 - yeah so yeah that's just I don't really
149:12 - want to get in and access the sites
149:14 - either I'm just not exactly sure what to
149:19 - do because I mean what do I do at this
149:23 - point you would I you have to contact
149:27 - the client convince them that this is
149:29 - actually something they should care
149:31 - about and then make them an admin have
149:34 - them delete my admin account yeah it
149:39 - just seems like it would be a lot of a
149:41 - lot of time and a lot of steps and
149:44 - probably wouldn't be a big deal I mean
149:48 - most of these sites are talking about
149:49 - are like very simple WordPress sites for
149:51 - small businesses so it's not like it's
149:53 - going to be the end of the world if if
149:57 - something ever happened to them
150:40 - patrick said so patrick was going
150:43 - through a bunch of passwords that that
150:45 - had been stolen looking for see if his
150:48 - were in there i said he searched
150:49 - password and act and did find it in the
150:52 - list so that's crazy i can't believe
150:56 - people we use that okay so i'm actually
151:04 - not seeing a ton of questions it's a lot
151:08 - of a lot of the advice you you all were
151:12 - giving me along the way okay so it looks
151:17 - like nexi asks is he creating a website
151:23 - or what so I'm assuming that that
151:25 - question got answered but just in case
151:28 - yeah it's it's a website so it's the
151:32 - main purpose of the website is to allow
151:36 - people where I work to request services
151:39 - from my department through an online
151:41 - form and there's going to be a few other
151:45 - things they can do as well but that's
151:47 - that's the big the big thing that we're
151:49 - working on the thing is going to take
151:50 - the most effort and time to get working
152:09 - it's funny going through this live chat
152:11 - now I remember like all the things that
152:13 - I messed up along the way because I I
152:16 - can see y'all saying like no don't do it
152:18 - that way or do this
152:32 - oh man John Henson says kids can be
152:34 - surprising my son in the early days of
152:36 - computers had magical powers of how to
152:38 - get around locked shareware games at the
152:40 - age of six Wow
152:42 - yeah I definitely gotta get my computers
152:48 - ready for my kids I have an 8 year old
152:52 - so yeah I need to and like I said they
152:57 - weren't really on the computer too much
153:00 - except for like that we had a Chromebook
153:02 - they just watch shows on it but now my
153:07 - son started playing minecraft so I have
153:09 - them on one of my old Windows computers
153:12 - playing Minecraft so I really need to
153:14 - get that locked down so you can just
153:20 - play Minecraft and not potentially mess
153:22 - and that's with anything else
153:36 - ciao ask anyone used drag-and-drop
153:39 - functionality on react app no I've never
153:42 - used any drag-and-drop stuff
153:45 - Patrick says Dan Abramov wrote react D&D
153:49 - for that the end is react - D and D he
153:55 - thinks that's the name of it so awesome
154:13 - also asks anybody have experience
154:18 - getting values of dynamically created
154:20 - input fields and react and revering xu
154:29 - says put it into an array with indices
154:32 - for the new fields update the state with
154:35 - a new array every time a new field is
154:38 - added cool thanks for that thanks for
154:44 - that answer
154:49 - ok Kevin says in response to that same
154:53 - question in the code that generates them
154:55 - passed them and on change and then you
155:01 - could just do this handle change and use
155:04 - the same code for handle change that I
155:06 - use that in this project so and add them
155:13 - to state when you generate them
155:49 - okay Wow it looks like I've gotten
155:51 - through everything in the live chat so
155:53 - there there's a lot of stuff in there
155:55 - the majority of it was stuff we've
155:57 - already gone through it was just a lot
155:59 - of suggestions of what to do when we
156:03 - were building this I did get something
156:07 - in a language that I cannot read so let
156:12 - me translate this really quick because
156:14 - there is a question mark at the end so
156:16 - it's a question
156:25 - Google Translate is so useful okay I
156:32 - think the question was something about
156:36 - are there any Russians here so yeah so I
156:44 - not me I'm in the United States but yeah
156:48 - occasionally we do have people from
156:49 - Russia in here as well so I don't know
156:51 - if there's anybody in here right now but
156:52 - I think that was the question is or that
156:55 - was what the question was
156:58 - see yeah I think it I think it was
157:02 - basically just hello or they're Russians
157:12 - all right so I'm to the end of the chat
157:16 - I'm actually really like exhausted after
157:21 - all that don't livestreams takes a lot
157:23 - out of you all right so I'm going to
157:33 - push this stuff up to github before I
157:38 - leave today so probably within the next
157:41 - half an hour it'll be on get up and that
157:44 - way if anybody wants to take a look at
157:45 - it you'll have it there I'm probably not
157:48 - gonna do anything else to it I'm just
157:50 - gonna push it as is cuz it's getting
157:54 - pretty late here is about something for
157:56 - me to leave work thank you all so much
158:00 - yours like such a big help I know I say
158:03 - that at every stream but it is true for
158:06 - every stream and especially today this
158:08 - was like this was a big deal this was
158:11 - the one thing in this project that I was
158:13 - thinking like how am I gonna do this and
158:17 - and we did it so so it's awesome so
158:22 - thank you and thanks everybody for
158:24 - watching I will be back place at
158:28 - tomorrow 2 p.m. eastern time yeah and I
158:34 - have have a great day I'll see everybody
158:36 - tomorrow