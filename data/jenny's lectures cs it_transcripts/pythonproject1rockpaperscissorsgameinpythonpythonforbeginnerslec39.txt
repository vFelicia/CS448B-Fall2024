00:00 - so in the series of learning Python
00:02 - programming language in this video we
00:03 - are going to implement our first project
00:05 - what is that project we are going to
00:06 - implement a game rock paper scissor I
00:09 - hope you are aware about the skin the
00:11 - rules and all right if you don't know
00:13 - the rules then you can and if you don't
00:15 - know what is this game how to play this
00:16 - game you can go to the official website
00:18 - and you can check out the rules right
00:20 - so now first of all I'll be telling you
00:23 - the rules the logic some hints how we
00:26 - are going to implement this project
00:28 - right what is the problem statement
00:31 - actual problem statement what I want
00:33 - right then you have to implement it and
00:36 - after that we will discuss I'll show you
00:38 - this thing on my laptop right will be
00:41 - implementing this game right now the
00:44 - rules are C
00:46 - Rock
00:47 - see like this we uh we know that this is
00:50 - what this this thing it's a rock
00:54 - this if the hand is like this then it's
00:56 - paper and if this is the case then this
00:59 - is scissors right so rock wins against
01:03 - scissors scissors win against paper and
01:07 - paper wins against Rock
01:10 - right
01:11 - so suppose me and my friend are playing
01:13 - this game so if I choose if I chose like
01:17 - rock
01:18 - right and my friend chose paper
01:24 - right means paper wins against Rock
01:30 - paper wins against Rock means I am going
01:34 - to lose now right so these are few games
01:37 - now you are going to play this with
01:39 - computer right one thing
01:41 - first of all let's suppose 0 for rogue
01:46 - zero for rock one for paper and two for
01:48 - scissor so first of all what
01:51 - user will enter your choice he'll ask
01:54 - like enter your choice type zero for
01:56 - rock one for paper and two horses right
01:58 - second thing computer will generate a
02:01 - random number computer will choose from
02:03 - rock paper scissor means we can use a
02:05 - random function generate a random number
02:08 - between 0 to 2 0 1 2 like 0 to 2 the
02:12 - range is zero to two computer will
02:14 - generate a number and then we will check
02:17 - we have chosen a number computer have
02:19 - chosen a number then we will compare
02:22 - those numbers we'll check those numbers
02:23 - and we will we are going to tell who is
02:26 - going to win and who will lose right now
02:30 - situation can be like this if
02:33 - nine cases can be their total nine cases
02:36 - this is what users choice
02:40 - and second is
02:42 - computer's choice
02:44 - right so if user enters 0 0 user can
02:49 - choose from 0 1 and 2 and computer can
02:51 - also choose from 0 1 and 2.
02:54 - so suppose user has
02:57 - entered 0 then computer can generate a
02:59 - random number either zero one or two so
03:01 - three cases can be there with zero three
03:04 - cases then one one one again computer
03:07 - can generate either 0 1 and 2. suppose
03:10 - user choice is 2 2 again computer can
03:13 - generate either 0 1 and 2.
03:17 - total nine cases can be there that's it
03:19 - right so now you have to check these
03:22 - nine cases only and based on that you
03:24 - have to put some condition if else if
03:27 - alif statement right now see these cases
03:30 - first this
03:32 - then this and then this
03:34 - if the computer and user choice is same
03:37 - then we simply say it's a draw
03:41 - right one condition is this fine next
03:44 - condition can be there see in this case
03:47 - if user choice is 0 and computer choice
03:50 - is 1 0 means
03:52 - Rock and one means paper
03:56 - means
03:58 - paper is going to win against Rogue so
04:00 - in this case
04:03 - computer wins
04:06 - 0 and 2 if user choice is 0 and computer
04:09 - choice is two in this case 0 means Rock
04:12 - 2 means scissor
04:14 - but Rogue will crash Caesar so Rogue is
04:17 - going to win against scissor so in this
04:20 - case user wins
04:23 - if user Choice has one computer choice
04:26 - is 0 in this case
04:28 - one means paper 0 means Raw
04:31 - so here also user will win
04:35 - right in this case one user choice is
04:38 - one means paper and two means scissor so
04:42 - scissor will win because Caesar will cut
04:45 - the paper so in this case computer will
04:47 - win
04:50 - but if user choice is two and computer
04:53 - choice is 0 0 means Rock and this is
04:56 - Caesar in this case the wins right
05:00 - because rock rock wins against scissor 2
05:04 - 1 2 means scissor and one means what
05:07 - paper so here also two wins like scissor
05:10 - will win so user choice is this so user
05:13 - will win
05:14 - so now I guess based on these rules you
05:18 - can find out who will win now you can
05:19 - put this
05:21 - in the form of a fails right C
05:24 - if
05:25 - this computer choice is one in this case
05:28 - computer will win and in this case also
05:32 - computer will win means
05:35 - one
05:37 - is greater than zero and computer choice
05:40 - is 2 and this is a user choice is one
05:43 - and two is greater than one so means
05:46 - computer the number which computer has
05:49 - generated is greater than
05:52 - the user Choice means computer choice is
05:54 - greater than user choice right so in
05:57 - both the cases computer will win so we
06:00 - can put something like this like if
06:02 - this computer choice
06:05 - greater than
06:06 - user Choice One Condition can be there
06:09 - in this case computer when
06:12 - or rather than computer win we can say
06:14 - you will lose or user will lose that is
06:18 - better so we will say you lose
06:22 - right so these cases we have covered
06:25 - these two cases but now see
06:28 - user choice is one
06:30 - computer choice is zero
06:32 - user choices 2 computer choice is 1
06:35 - means here user choice is greater than
06:38 - computer choice in this both the cases
06:42 - this and this user will win so second
06:45 - condition can be there
06:48 - if like user choice
06:51 - is greater than computer choice
06:54 - then
06:56 - means these two cases this and this user
06:59 - will win means you will win so we can
07:01 - say like you win
07:04 - so this also we have covered this and
07:07 - this and draw also we have covered if
07:10 - computer Choice equal to equal to user
07:11 - Choice it's a true right now remaining
07:14 - are these two
07:16 - one is this one and one is this one
07:21 - so this also you can put like
07:24 - we are not finding any you know like the
07:27 - number which is greater or less so
07:29 - simply two condition you can put if user
07:31 - choice is zero computer choice is two
07:33 - user win or you win
07:35 - if user choice is to computer choice is
07:38 - zero
07:40 - you lose means computer wins means you
07:42 - lose
07:44 - right so these two condition plus these
07:47 - two condition four condition right
07:50 - plus fifth is what for draw five
07:55 - right Plus
07:57 - if accidentally by mistake user has
08:00 - entered less than zero like minus one or
08:03 - greater than two like three four five in
08:05 - that case what will happen
08:07 - you will say you have entered you have
08:09 - entered a wrong number you lose right
08:14 - so total how many condition you have to
08:16 - put six
08:18 - two
08:19 - one for Row three
08:21 - two these five and one invalid number
08:25 - I think six
08:27 - these six if and alif statement you have
08:30 - to put
08:31 - right that's it
08:33 - but here the order in which you are
08:36 - putting these conditions that also
08:39 - matters
08:40 - right maybe you think first you can put
08:43 - these two condition then these two
08:45 - condition and like then draw condition
08:47 - yeah you can put so try this out
08:50 - but this is very important the order
08:54 - also important here in which order you
08:56 - are putting these conditions and I'll
08:59 - explain I'll tell you why the order
09:01 - important ones will be implementing this
09:04 - thing in laptop but I hope the condition
09:06 - the rules how you can implement this
09:09 - this is clear to you guys right now I
09:12 - guess you can stop this video and you
09:15 - can try this out so I hope you have done
09:19 - this you have tried this out now let's
09:20 - create a new file and
09:28 - rock paper scissors underscore
09:31 - project one dot py
09:34 - right
09:35 - okay now
09:37 - the last from the user
09:40 - first thing the choice I'm taking a
09:42 - variable user choice right and using
09:45 - input function will ask enter your
09:47 - choice right
09:49 - okay now type we have told the user like
09:52 - zero for rock one for paper and two for
09:54 - scissors and we know this input would be
09:57 - in the form of strings so better to
09:59 - convert at this time only
10:01 - and this thing into end because whatever
10:04 - we'll take using uh input function that
10:08 - would be string but we want integer with
10:10 - a zero one or two right now next thing
10:14 - just what we can do
10:16 - computer choice
10:22 - Now using random function what we can
10:25 - generate
10:26 - so for that we have two first of all
10:29 - import random modules we'll do that
10:32 - thing random dot will use a function
10:34 - Rand int and the range is from 0 to 2.
10:38 - this thing we have discussed already
10:40 - right uh how to generate random numbers
10:42 - so first we have to import
10:46 - random module right import random okay
10:50 - now if you want you can print like
10:52 - computer
10:54 - what computer has
10:59 - computer choose and we can simply print
11:03 - like this
11:05 - computer choice
11:07 - this variable right what computer has
11:10 - chosen 0102 now we can
11:13 - put some condition like first let's put
11:16 - that condition row condition if this
11:18 - computer Choice equal to equal to
11:21 - user choice
11:26 - and what we can do you don't need to put
11:29 - these brackets here
11:32 - if you want to put you can put that's
11:33 - okay but in Python you can you know Skip
11:37 - these brackets directly put the
11:39 - condition if this is the case then
11:40 - simply we can print
11:42 - Etc but if this but if this is not the
11:46 - case then
11:47 - we can put alif another condition so two
11:51 - conditions we have discussed like
11:53 - computer choice is greater than user
11:55 - Choice means you are going to lose
11:57 - computer will win so let us suppose put
11:59 - that those conditions first
12:02 - if this computer choice is greater than
12:06 - user choice
12:08 - means we simply print in that case
12:12 - you lose means computer will win and you
12:15 - are going to lose right now
12:19 - okay next is else if
12:22 - this user choice is greater than
12:25 - computer choice
12:27 - in that case
12:31 - you win
12:33 - right these cases we have discussed okay
12:37 - these two conditions we have got now
12:39 - three we have put four draw and four
12:42 - greater than choices now we are
12:45 - remaining with two conditions four zero
12:47 - and two right
12:49 - so next is else if
12:54 - like computer choice is equal to equal
12:57 - to
12:59 - 0
13:02 - and
13:04 - simply you can put this operator logical
13:06 - and and
13:09 - user Choice equal to equal to 2.
13:13 - in that case we're going to win 0 means
13:16 - Rock 2 means scissor
13:19 - rock wins against scissors so means
13:21 - computer is going to win means you are
13:23 - going to lose so simply print you lose
13:28 - right
13:31 - else if
13:33 - user choice
13:35 - is zero
13:37 - and
13:40 - computer choices
13:42 - two
13:44 - in this case
13:47 - 0 means Rock and 2 means scissors so
13:49 - means rock wins against scissor means
13:51 - user is going to win so means you win
13:54 - so here you
13:56 - win okay I guess we have put
13:59 - all the
14:01 - one two three four five conditions right
14:04 - one is that for invalid number that also
14:06 - will be discussing
14:08 - now let's run this and check if it is
14:10 - working or not okay let's run this
14:15 - so it is asking enter your choice
14:18 - let me enter zero
14:24 - I have entered 0 and computer chose one
14:26 - means zero means Rock and one means
14:29 - paper so obviously you lose
14:31 - because paper wins against frog
14:34 - okay it's working fine let's check for
14:37 - another thing if I am
14:41 - choosing 0
14:42 - and again computer chose one so you lose
14:46 - fine
14:47 - if I am choosing again
14:50 - zero
14:53 - now see I have chosen 0 0 means Rock and
14:57 - computer chose 2 2 means scissor
15:00 - so who is going to win rock wins against
15:03 - scissor
15:05 - right
15:07 - but means 0 means rock rock means I have
15:09 - chosen Rock So means user should win so
15:11 - it should give the output you win
15:15 - right because
15:17 - see user choice is 0 and computer choice
15:20 - is 2 means it should give output you win
15:23 - but it is telling you you lose means
15:27 - there is something
15:29 - wrong with this code why so it is C
15:33 - first it will check this condition this
15:35 - is not true then it will check this
15:36 - condition the control will move one by
15:38 - one right
15:39 - computer choice is two see this is the
15:42 - number is 2 2 here
15:45 - let me just
15:48 - two
15:49 - and greater than user choice is 0 0 is
15:55 - this condition true 2 greater than 0 yes
15:57 - condition true that is why it will enter
15:59 - into this control statement and it will
16:02 - print you lose but I don't want that e
16:05 - it should enter here
16:08 - I want this condition should be checked
16:10 - 0 and 2.
16:12 - means you have to put this condition
16:15 - before this greater than condition
16:18 - that is what I was telling you the order
16:21 - is order also matters in which order you
16:23 - are putting these conditions right so
16:25 - better to put these two conditions these
16:28 - zero and two conditions
16:30 - before these two conditions these
16:33 - greater than conditions then it will
16:35 - work fine otherwise
16:37 - it will give you wrong output let me
16:41 - just run this for one more input suppose
16:44 - I am
16:46 - giving 2
16:47 - and computer is choosing one okay that
16:50 - is fine 2 means scissor one means paper
16:52 - so you win okay fine
16:55 - let me show again
16:58 - two and two c two and two it's a draw
17:01 - that is also working fine
17:03 - now again to
17:11 - see now in this case I have entered 2 2
17:14 - means scissor and computer chose zero
17:17 - zero means Rock
17:20 - wins against scissor
17:22 - rock wins means it should print like
17:25 - computer is going to win means you lose
17:27 - but it is printing you win why so again
17:30 - same thing
17:31 - see one by one it will check these thing
17:34 - so
17:36 - this condition not true okay fine this
17:40 - condition computer choice is zero and
17:43 - user choice is 2 greater than no this is
17:46 - not true so again next condition is now
17:48 - user choice is
17:50 - in this case user choices I have entered
17:52 - two two greater than computer chose zero
17:56 - is this condition true yes so it will
17:58 - print you win but actually you lose
18:01 - so better to put these two conditions
18:03 - these two conditions
18:06 - before these two conditions
18:08 - here
18:11 - here
18:14 - right
18:15 - and after that put these two conditions
18:17 - now this condition draw condition you
18:19 - can put before or after it doesn't
18:21 - matter right
18:23 - now the order is fine
18:25 - let's run this now see if I enter two
18:29 - computer shows one you win okay fine
18:31 - that is working fine if I enter 0
18:35 - now see if I enter 0 and 0 means Rock 2
18:39 - means scissor rock wins against scissor
18:41 - means I will win means you win user will
18:44 - win so now it is working fine right why
18:47 - so because first it will check
18:51 - this condition
18:54 - is this true is equal to no computer
18:57 - choice is zero
18:59 - now computer choice is two so this is
19:02 - also not working
19:03 - user Choice third condition user Choice
19:06 - zero yes computer Choice 2 yes this
19:10 - condition is true now it will enter here
19:12 - you win yeah you win
19:15 - right so before checking these greater
19:18 - than these conditions it will check
19:19 - these conditions too
19:21 - okay now
19:23 - one thing let's run this again and I'll
19:25 - show you if I have entered four
19:28 - still it is working fine it is
19:31 - uh you know telling you you win but how
19:34 - because 4 is not a valid number so put
19:37 - this condition also
19:39 - where you will put this condition
19:42 - at starting movie after user enter the
19:46 - choice better
19:48 - at first check if the number is valid or
19:51 - not
19:52 - so after entering
19:54 - here only here only put one condition if
19:57 - this user choice is greater than
20:01 - ah
20:03 - 2 or you can say greater than equal to
20:07 - 3 or
20:09 - user choices
20:11 - Less Than Zero
20:15 - you entered an invalid number and you
20:17 - lose right
20:19 - no need to put further thing if this is
20:22 - the case simply exit otherwise
20:25 - if this is the case then then this ends
20:28 - else we can put this coding in else part
20:32 - right else after that computer will
20:34 - generate a random number and we will
20:37 - compare so better to put this code
20:40 - because in else you have to put
20:41 - indentation so better to put all the
20:44 - code
20:45 - with an indentation right like this
20:48 - otherwise it will give error now in else
20:50 - part we will put all our
20:53 - all thing right now let's run this again
20:56 - so at this time if I enter 4
20:59 - say you entered invalid number you lose
21:03 - it will do nothing that's it and that is
21:05 - that's exactly I want but now
21:07 - if I want that it should show the images
21:10 - of rock then paper then scissor that is
21:15 - also fine because I have those images
21:17 - let me just copy paste this thing
21:23 - so we have Rock we have paper for paper
21:26 - this image and for scissor we have
21:29 - this thing this image right now I'm
21:32 - going to show
21:34 - okay
21:36 - if user is choosing 0 means Rock so it
21:39 - will show user chose the image Rock like
21:43 - this
21:44 - have we are going to show this see if
21:48 - user choice is greater than this is the
21:49 - case then invalid in else part simply
21:52 - print
21:55 - if you print here user choice this this
22:00 - variable then it will simply print
22:03 - either 0 1 or 2 but I want images right
22:06 - now
22:08 - let's
22:15 - make a list and there
22:19 - I am putting these images Rock
22:22 - paper and
22:25 - scissors okay now we have a list so in
22:28 - here we can simply access
22:31 - the from the list
22:36 - these images according to the user
22:39 - choice so in bracket simply put user
22:42 - choice if user choice is 0 means here we
22:44 - will put 0 so game image is zero
22:48 - zeroth index we have Rock so we are
22:51 - going to access this image right
22:54 - these are what you can say strings rock
22:57 - paper scissor okay
22:59 - now computer chose here also I want
23:02 - images rather than simply that number so
23:05 - game images and in bracket I can simply
23:08 - put
23:09 - computer choice
23:11 - right
23:17 - now let's run this
23:20 - so
23:23 - if I enter 0
23:27 - now see the output
23:29 - 0 means it will print this image Rock
23:33 - computer chose
23:36 - scissors
23:37 - random number two so it will show like
23:40 - image scissors now rock wins against
23:43 - scissor means you win
23:45 - right
23:47 - so I guess you got this how
23:51 - you can
23:52 - implement this game
23:55 - see one thing if you put this line
24:02 - if you put this line after this like we
24:05 - have chosen and
24:07 - after entering the choice directly I
24:10 - want to print whatever the user has
24:12 - chosen the image of that thing right
24:15 - I don't want to print in this else part
24:19 - right
24:20 - okay this is also not fine let me just
24:23 - run this and show you what output you
24:25 - will get here see if I enter here 4.
24:29 - it will give you an error list index out
24:33 - of range in line number 30 in module
24:35 - this the Sprint game is user Choice list
24:38 - index out of range because now my choice
24:42 - is 4. so
24:45 - here my choice is 4 so user choice is 4
24:48 - it will print 4 here so game image is 4
24:51 - but there is no fourth index 0 1 2 only
24:55 - second in only till second index we can
24:59 - access right that is why it will give
25:01 - you that error so rather than printing
25:04 - this here
25:06 - first check if user choice is invalid
25:09 - then just print you lose you have
25:11 - entered invalid number else you can
25:13 - simply
25:15 - show whatever user has chosen the image
25:19 - right
25:20 - now I guess you got this if you haven't
25:24 - got this thing this is very simple it's
25:26 - fine just write down this thing on a
25:29 - paper dry run this thing
25:31 - again see the rules and all right dry
25:35 - run this
25:36 - then again implement this definitely you
25:38 - will get it it's not that tough
25:41 - so I hope you have done this project
25:42 - successfully now in the next video we'll
25:44 - see what are tuples in Python so now
25:46 - we'll see in the next video till then
25:47 - bye take care