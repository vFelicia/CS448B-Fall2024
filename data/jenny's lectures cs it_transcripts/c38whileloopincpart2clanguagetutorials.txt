00:00 - in the series of learning programming in
00:01 - c in the previous video I have discussed
00:03 - while loop Basics about while loop the
00:05 - general syntax of while loop the working
00:07 - of while loop with the help of flowchart
00:09 - as well as we have seen a program the
00:11 - basics right now we can do many things
00:13 - with while loop it's not like that
00:15 - whatever sentex we have written in the
00:17 - previous video that is the only way to
00:19 - write while loop no in many ways you can
00:21 - write while loop and see this whatever I
00:24 - I'm going to discuss in this video that
00:26 - would be really helpful for you if you
00:27 - want to explore if you want to you know
00:29 - learn in deep about these looping
00:31 - statements about while loop right
00:33 - because from this part whatever I'm
00:35 - going to discuss in this video generally
00:37 - there ask questions in placements in
00:39 - interview and any competitive exam right
00:42 - the those kind of questions in sorry the
00:45 - program would be given a code would be
00:47 - given small code four or five lines and
00:49 - you are asked to tell output of that
00:51 - code so in that thing in that in those
00:54 - questions they'll not write down the you
00:56 - know simple while loop this is a general
00:58 - syntax and just write down while loop
00:59 - and ask you what is the output of this
01:01 - program no they will do some other kind
01:04 - of you know you can say those questions
01:05 - would be tricky they will write why Loop
01:08 - in different different ways and you
01:10 - think that this is not syntax of Y Loop
01:12 - so this must be an error but no that
01:14 - will not give you error that will
01:16 - definitely give you some output maybe
01:19 - not that output uh you want but maybe
01:22 - some abnormal behavior that will show
01:24 - but it will not give you error so those
01:27 - things I will discuss in this video
01:29 - right so now is discuss in how many ways
01:31 - we can write while loop see first of all
01:33 - what was General syntax of while loop we
01:35 - write while this is a keyword here we
01:37 - write some condition termination
01:39 - condition here this is what here I'm
01:41 - going to write some statements or you
01:43 - can say this is body of loop right and
01:46 - here only we write what that modify or
01:49 - update expression you can say that
01:51 - increment or decrement and after that
01:53 - that's it the initialization is before
01:56 - the condition right all the three things
01:58 - which is important for any Loop is in
01:59 - ization condition termination condition
02:01 - and modify and update expression or
02:03 - increment or decrement in for Loop we
02:05 - write all the three things at one place
02:07 - but in y Loop we write different
02:09 - different places here initialization
02:11 - then condition then within the SL body
02:13 - of the loop we write that increment or
02:15 - decrement right this is General syntax
02:17 - of Wu now see if you write something
02:21 - like this I starting from one I less
02:23 - then 10 print F I'm going to print I and
02:27 - then i++ then what output you will get
02:29 - here one from one it is going to start 1
02:31 - 2 3 up to 9 it will print it will not
02:34 - print 10 because condition is I less
02:37 - than 10 not I less than equal to 10 so 1
02:39 - 129 it is going to print right this is
02:41 - what according to the syntax I'm going
02:43 - everything fine here according to the
02:45 - syntax but suppose if I write something
02:47 - like this now condition is I'm putting I
02:49 - equal to equal to 1 so first see I would
02:52 - be initialized as one in the memory that
02:55 - this is I condition is I equal to equal
02:57 - to 1 this is equality condition I'm
03:00 - going to check is I equal to 1 yes
03:02 - condition is true then control will
03:03 - enter here and I value will be printed
03:05 - on output screen you will get one now
03:07 - plus plus I you can write I ++ or Plus+
03:09 - I here in this case both are same means
03:12 - I becomes now two again going to check
03:16 - the condition right I equal to equal to
03:18 - 1 is 2 equal to 1 no condition is false
03:21 - directly control will go out of the loop
03:23 - and what would be printed now end of
03:25 - program that would be on your screen one
03:27 - and end of program right now this is
03:29 - what equality condition but some
03:32 - somewhere it is also written something
03:34 - like this I equal to 1 now what output
03:37 - you will get C at starting I is
03:40 - 1 here I equal to 1 this is what
03:43 - assignment operator you are using this
03:45 - is not any condition assignment operator
03:47 - means the value of the right hand side
03:49 - whatever the value that would be
03:50 - assigned to the variable that is on left
03:52 - hand side now one would be assigned to I
03:55 - right now I becomes one again it is one
03:59 - but again it is assigning the value so
04:00 - it is one now here we have one one means
04:04 - true always if here other than zero you
04:07 - write anything 1 2 3 - uh 11 - 12
04:11 - anything then that would be considered
04:13 - as true if you write zero then only it
04:16 - will be false so now one means true it
04:19 - will print I that is one would be
04:20 - printed now I plus plus I means I
04:22 - becomes two now again check the
04:24 - condition condition is what I equal to 1
04:27 - again assignment operator so in I I'm
04:29 - going to assign again the value one so I
04:31 - value becomes again one right condition
04:34 - is true again it will print one I ++
04:38 - means 2 again check the condition but it
04:40 - is I is equal to 1 again it will become
04:42 - what 1 right so now again it will print
04:47 - one so now what do you think is it going
04:50 - to end no it would be infinite Loop
04:53 - because condition will always be true so
04:56 - it will print infinite time 1111 on your
04:58 - screen right so please take care of this
05:01 - thing double equal to and single equal
05:02 - to if you want to check the equality
05:05 - condition double equal to you have to
05:06 - write here right and if you write here
05:09 - something like this see same if I write
05:12 - here something like this while
05:13 - one you are doing you are you are doing
05:16 - what hard coding the while one you are
05:19 - writing in your program only this
05:21 - condition will always be
05:23 - true right if you write here like 10 or
05:27 - one suppose 10 is here so while one
05:30 - condition is true 10 would be printed on
05:31 - your screen plus plus I it becomes 11
05:35 - right now while one condition is true
05:39 - now 11 would be printed on your screen I
05:42 - ++ 12 while one condition is true you
05:45 - are not giving any termination condition
05:47 - it is not going to end so it will print
05:49 - what 10 11 12 like this it will print so
05:52 - it would be an infinite Loop and see
05:56 - what it will print it's not like that it
05:58 - it will it is going to print till
06:00 - Infinity yeah it will print within a
06:02 - range within which range the range of
06:05 - the integer range of integer is what - 3
06:10 - 276 8 2 3 276 7 so once it will reach
06:17 - till
06:18 - 32767 it is not going to print 32768
06:21 - 32769 then what it will print
06:25 - see this is what circle of s so once
06:29 - becomes
06:30 - 32767 it will print What minus values -
06:33 - 3 2768 - 3 2767 like this -1 then again
06:39 - zero then again this this would be an
06:41 - infinite Loop but values would be
06:43 - printed within this integer range only
06:45 - right you can see the output now uh
06:47 - after running this program but but
06:49 - single difference is what I'm putting
06:51 - here I not one I'm just putting I here
06:56 - now you think that you are not giving
06:58 - any condition here so so it would be an
06:59 - infinite Loop but not it would not be an
07:02 - infinite Loop so now where it is going
07:05 - to end
07:06 - see here I is 10 suppose I is 10 at
07:10 - starting while I I means 10 anything
07:13 - other than zero considered as true 10 is
07:16 - true so 10 would be printed I plus plus
07:19 - I means it becomes 11 now again 11 that
07:22 - is also true 11 would be printed 12
07:25 - again 12 is also true 12 would be
07:27 - printed 13 and this is going to uh no it
07:32 - is going to like this 10 11 12 13 14 but
07:35 - what where it is going to end once the
07:38 - value would be reached till 3276 7 like
07:41 - it is going to print if you want to
07:43 - print vertical then you have to use
07:45 - slash and here otherwise it will print
07:47 - horizontal so now after that some time
07:50 - it will print at one time it will print
07:51 - 3 276
07:53 - 7 after that I ++ means it will become -
07:58 - 3 2768 so - 3 2 7 6 8 it would be
08:01 - printed again - 3 2 7 6 7 until like
08:05 - this - 3 - 2 -1 now at one time value of
08:11 - I becomes minus one plus plus I now it
08:14 - becomes zero so now here the value of I
08:18 - is zero now check while I is z zero
08:21 - means condition is false now it is going
08:23 - to stop means now it will print what end
08:26 - of program till minus one it is going to
08:28 - print right so it is not infinite Loop
08:32 - please take care of this thing still you
08:34 - are not giving any condition here you
08:35 - are not giving any condition but still
08:37 - it is not infinite Loop it is already a
08:39 - condition because at one time definitely
08:41 - I value would become zero and once I
08:43 - value becomes zero it is going to end I
08:45 - hope you are getting these Concepts
08:48 - right next thing what you can do with
08:50 - this is suppose I'm not writing here
08:53 - this plus plus
08:54 - I I'm not writing any modify uh
08:58 - expression here so now what what will
08:59 - happen I is 10 so now first what value
09:02 - would be printed here I'm writing I only
09:05 - so 10 would be printed 10 10 is true 10
09:07 - would be printed no plus plus or minus
09:09 - minus I right again control will go here
09:13 - I is what again 10 10 is true again 10
09:15 - would be printed I is what again 10 10
09:18 - would be printed so now it would be an
09:20 - infinite Loop here also I'm using I only
09:25 - difference is what I'm not incrementing
09:26 - that I if you will not incre that I then
09:30 - definitely I value would be remain same
09:32 - that is 10 10 is always true so now it
09:35 - would be an infinite Loop and it it is
09:37 - going to P 10 10 10 10 infinite number
09:38 - of
09:39 - times right next is what suppose I'm
09:45 - writing here this condition I less than
09:47 - equal to 10 and I'm not initializing
09:49 - this I here I'm I'm doing I ++
09:52 - here right condition I'm writing modify
09:55 - expression I'm writing I'm not
09:56 - initializing this value of I so now I
09:58 - don't know what is value of I right so
10:01 - now what it will
10:02 - print I less than equal to 10 we don't
10:05 - have any I value starting value so it is
10:07 - not going to print anything it will just
10:09 - print end of program now in this case I
10:11 - have some doubt so you run this program
10:13 - and tell me in comment box what output
10:15 - you are getting here if you're writing
10:17 - something like this no initialization I
10:19 - less than equal to 10 condition is given
10:21 - and modify expression is also given
10:23 - right so now here just only you will get
10:25 - end of program right next thing what you
10:28 - can do here suppose you don't you don't
10:30 - write any condition
10:32 - here I is equal to 1 but no condition
10:36 - here but here it will give you error it
10:39 - is not a valid syntax right it it it
10:42 - will give you compile time error right
10:45 - next is what you can do suppose here
10:47 - only I'm writing I
10:49 - ++ and I'm removing this I ++ from here
10:52 - and I is uh I'm writing I
10:56 - zero right now what output put you will
10:59 - get here see at first time I is zero
11:03 - right now you will think I ++ means I
11:06 - becomes one and one is true so it will
11:08 - print one no it is what post increment
11:12 - post increment means what is the funa
11:14 - first the original value of the of that
11:17 - variable would be used in the expression
11:19 - after that value would be modified
11:21 - original value of I is zero zero would
11:23 - be used here for the condition now zero
11:25 - is what false so it is not going to
11:27 - enter into this Loop it is directly exit
11:29 - from the loop and what it will print end
11:31 - of program just end of program right in
11:34 - case I'm writing here uh this this uh
11:37 - plus plus
11:38 - I now now it is what pre-increment
11:42 - pre-increment means first the value of
11:44 - that variable would be incremented after
11:48 - that the incremented or the updated
11:49 - value would be used either it's
11:51 - incremented or decremented whether you
11:53 - are using here plus plus I or minus- I
11:55 - right now I'm using here plus plus I so
11:57 - now value becomes one for first now one
12:00 - would be used for this expression now
12:02 - one is what true so it is going to print
12:06 - one now again here I'm not writing
12:09 - anything so again it will check the
12:10 - condition right plus plus I means it
12:14 - becomes two now two is also true two
12:17 - would be printed again plus plus I means
12:19 - three three is also true three would be
12:22 - printed right now tell me is it infinite
12:25 - Loop or not no because this is I integer
12:29 - variable we have some range of integer
12:31 - in that range we will somewhere sometime
12:34 - at one time we will also definitely
12:35 - going to reach to zero because I'm
12:37 - incrementing I so 1 2 3 up to which will
12:41 - print this then minus values then till -
12:44 - 3 - 2 - one after that plus plus I means
12:47 - it becomes zero it is going to stop till
12:50 - minus one it is going to print so you
12:52 - can see the output after running this
12:54 - program right now next is what um you
12:57 - can also use while loop with care data
12:59 - types if you use character data type
13:01 - here then what output you will get see
13:04 - and see tell me one thing this is your
13:06 - assignment if I write semicolon after
13:08 - this while loop in that case what output
13:11 - you are getting you have to tell me in
13:12 - comment box right now I'm doing this
13:15 - with character I'm using while loop with
13:17 - character I hope you know the range of
13:19 - the character that is fromus 1 to8 to 1
13:22 - to7 right this is the program right now
13:27 - character value that is a first of all
13:29 - the variable name is this one and a is
13:31 - stored not exactly a is stored here the
13:33 - SK Sky value of a is 97 that would be
13:35 - converted into binary form and that
13:37 - would be stored in memory right but here
13:39 - just for the understanding purpose I'm
13:40 - writing a here while ch ch is a a is 97
13:44 - that is true CH would be printed here so
13:47 - means percentage D CH so 97 would be
13:50 - printed here SK value of a is 97 right
13:53 - right uh next is CS ++ means value
13:56 - becomes 98 so now here you can say 98
13:59 - would be stored 98 98 or you can say B
14:04 - that is also true so now percentage D we
14:07 - are using so 98 would be printed then 99
14:10 - something like this but it is not
14:13 - infinite Loop right why so because range
14:17 - of integer is
14:19 - what sorry range of character is what 1
14:23 - 127 then after that 1 - 128 - 127 - 126
14:28 - something like this
14:30 - right this is signed character right I'm
14:33 - not using any uh know signed or unsigned
14:36 - keyword here so that is consider
14:37 - considered as signed character so now
14:40 - value becomes now at one time value
14:42 - becomes 127 okay 127 will be printed
14:45 - after that plus plus means it is not
14:47 - going to be 128 it is going to be what -
14:50 - 128 - 127 - 126 and minus1 till -1 right
14:56 - now after that CS ++ -1 after that value
14:59 - becomes zero so now here zero zero means
15:03 - false and now control is going to exit
15:05 - from the loop and that this is output
15:08 - this is the output you are getting it is
15:09 - not infinite Loop here right but suppose
15:12 - here if you are writing percentage C
15:16 - then tell me what output you will get
15:18 - this is your second assignment you can
15:20 - consider it as an assignment right
15:22 - percentage C and tell me what output you
15:24 - are getting in this case right again if
15:26 - you are doing something like this and it
15:28 - is not always that you have to do plus
15:31 - plus here you can also write minus minus
15:33 - here same case suppose you are storing a
15:36 - here a means 97 97 is true 97 would be
15:40 - printed suppose I'm using here
15:41 - percentage D 97 is printing here CH
15:44 - minus minus 97 now it becomes
15:47 - 96 not
15:49 - 98 96 is also true 96 would be printed
15:53 - here now it becomes 95 95 would be
15:56 - printed here something like this right
15:58 - and and now at one time till one till
16:02 - one it is going to print right now - - 1
16:05 - is 0o so now it will print till 1 97 to
16:10 - 1 in reverse order that's it and here we
16:13 - have an error after get H you have to
16:15 - use semicolon right you have to take
16:17 - care of these things and here also you
16:19 - can write down some some constant
16:21 - positive or negative like- 11 I'm
16:23 - writing 11 I'm writing or simply Z or 1
16:27 - I'm writing or here you can use any
16:28 - condition like relational operator and
16:30 - as well as you can use that logical
16:32 - operator also two conditions you can use
16:34 - right so here I'm writing logical end CH
16:38 - less than 12 127 and I equal to equal to
16:42 - z i is one more variable I'm taking
16:43 - there their iner I right so if both the
16:46 - conditions are true then only it will
16:47 - consider it as a true if I'm writing
16:49 - here I is equal to equal to 1 but I is
16:53 - zero here so this condition will always
16:55 - be false so if this is false then
16:57 - ultimately it is is false and it is not
16:59 - going to enter into this while loop body
17:03 - not even uh one time right because
17:06 - condition is at first time only I the
17:08 - condition is false so it is going to
17:10 - exit from this Loop so here you can use
17:13 - two or more conditions using some
17:14 - connector logical connectors also right
17:17 - relational operator you can use or any
17:18 - variable you can write here simple
17:19 - variable or any constant value you can
17:21 - write here right and you can also do
17:23 - what nesting of while loop one while
17:25 - loop within this we can use another
17:27 - while loop another while loop that that
17:30 - is nesting right or you can use any if
17:32 - else statement within this while loop
17:35 - like here I'm writing some condition
17:36 - while within this while I'm writing some
17:38 - if or else conditions based on the
17:41 - output you want based of based on your
17:43 - requirement right that that thing we can
17:45 - also discuss when we'll discuss some
17:47 - programs when we'll write some programs
17:48 - using while loop or for for Loop right
17:51 - so now this is what I guess that that's
17:53 - it but you can also do some experiments
17:56 - I I cannot tell you everything here this
17:58 - is what I can just give you an give you
18:00 - an overview these kind of things you can
18:02 - also do so try out different different
18:03 - things with while loop and see what
18:05 - output you are getting right and if in
18:07 - any questions you are getting any
18:09 - problem then you can ask me in comment
18:10 - box or you can uh ask me on your my
18:12 - Instagram account you can message me
18:14 - there right so now I'll see you in the
18:16 - next video till then bye-bye take
18:27 - care