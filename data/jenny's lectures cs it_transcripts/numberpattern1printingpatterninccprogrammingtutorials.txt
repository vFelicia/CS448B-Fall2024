00:00 - in the series of learning programming in
00:01 - c we are discussing
00:03 - the programs of printing pattern in c
00:05 - right
00:06 - now in this video we will talk about how
00:08 - to write a program to print this pattern
00:10 - this is what half pyramid of numbers we
00:12 - have discussed a program to print half
00:13 - pyramid of star
00:15 - and inverted half parameter of start
00:17 - please check of those videos
00:18 - first then come to this video right i'll
00:21 - put the disc
00:22 - that link of those videos that playlist
00:24 - name printing pattern and see that
00:26 - playlist link in the description box of
00:27 - this video you can go and check out
00:29 - right now see first of all we'll discuss
00:31 - the logic on this board
00:32 - and then what we used to do i'll show
00:35 - you the output on that
00:36 - ide on bs code right now see
00:40 - here obviously two loops will require
00:43 - one is to print
00:44 - lines number of lines or number of rows
00:46 - and second loop is for
00:48 - number of columns or the actual values
00:51 - we are printing in the columns that
00:54 - thing right
00:55 - so outer for loop is for number of lines
00:57 - how many lines
00:58 - six lines are there so after four loop
01:00 - should run six times
01:01 - right so i'm going to just i'm just
01:04 - going to write the logic here
01:06 - simple not the complete program the
01:07 - complete program i'll show you on
01:09 - my editor on my laptop right we'll run
01:12 - this properly
01:13 - so that it should run up to six
01:17 - i less than equal to six because i want
01:19 - one two three four five six
01:20 - lines right and i plus plus this is what
01:23 - outer loop now
01:24 - actual printing would be done in inner
01:26 - loop now here what you will write
01:28 - see this is what
01:31 - suppose i value is 1 means i value is 2
01:34 - second line then 3 then 4 then 5 then 6
01:37 - when i value 6 the sixth line will be
01:40 - printed now i value is 7
01:42 - no line would be printed that means loop
01:44 - should be ended
01:45 - right now actual printing would be done
01:48 - in inner loop j
01:49 - loop so now when i value is 1 j should
01:52 - be repeated only one time and what
01:54 - it should print the value one not star
01:58 - j would repeat only one time right
02:01 - when i value is two j should repeat one
02:04 - and two two times
02:06 - two columns in this row two columns i
02:08 - want to print and column
02:10 - would be taken care by this j variable
02:13 - so j should run two times but not star
02:17 - it would print some value now i value
02:20 - three j should
02:21 - run 3 times when i value is 4 j should
02:24 - run
02:24 - 4 times 5 times and 6 times
02:28 - right now j value is what it's not
02:32 - that fixed j is what it's changing
02:35 - at first time only one time j should run
02:38 - in first line
02:39 - second time it should run two times and
02:41 - then like this
02:43 - right now j would be
02:47 - what i'm going to start j with one right
02:50 - and how many times j should run j
02:54 - should be less than equal to we cannot
02:56 - write down any fixed value here because
02:57 - j
02:58 - value is changing right but when i 1
03:01 - j would be repeating one time and i is
03:03 - two they should be repeated two times
03:05 - when i is three they should be repeated
03:07 - three times i hope you are going to
03:09 - able to relate this thing right so now j
03:13 - should be less than equal to what
03:15 - i that's it and what
03:19 - j plus plus and within this what you
03:22 - will print now
03:23 - we are going to print star we are going
03:25 - to print value value of what
03:28 - value of j right
03:31 - see percentage d and i am going to print
03:34 - whatever value of j
03:35 - that should be printed right as you can
03:38 - see because
03:39 - one time it should be printed value
03:40 - should be that is
03:42 - one it would repeat two times so
03:45 - first time value would be 1 then 2 it
03:47 - should repeat 3 times
03:49 - then 1 2 3 so that is why i am printing
03:51 - j here
03:52 - right now in outer loop what simply
03:55 - slash n because what how many slash and
03:59 - we require
04:00 - 6 lesson and that's it now please run
04:02 - this program
04:04 - i value is at starting 1 1 is less than
04:06 - equal to 6 condition tree we are going
04:08 - to enter here j value is
04:10 - 1 1 is less than equal to i i value is
04:12 - also 1 condition true 1 is equal to 1
04:14 - right so we are going to enter here now
04:17 - what it will print
04:18 - value of j value of j is what 1 so 1
04:20 - would be printed
04:22 - now j plus plus j becomes 2 is 2 less
04:24 - than equal to i 2 less than equal to 1
04:26 - no condition is not true so we are going
04:28 - to exit from the center loop and slash n
04:30 - so control will go
04:31 - cursor will go in the next line now
04:34 - i plus plus i becomes 2
04:37 - 2 is less than or equal to 6 we are
04:39 - going to enter here now j is again
04:41 - initialized with
04:42 - one j is equal to one is one less than
04:46 - equal to i
04:46 - i value is to yes condition tree we are
04:48 - going to again enter here now j value
04:50 - would be printed j value is
04:51 - one one would be printed here now j plus
04:54 - plus j becomes 2
04:55 - condition true 2 is less than equal to 2
04:57 - yes condition true we are again going to
04:58 - enter here j value print j value is what
05:01 - 2 so now 2 would be printed i hope you
05:04 - are getting my point
05:05 - now j plus plus j is 3 but now condition
05:07 - is not true 3 is not less than equal to
05:09 - i
05:10 - i is 2 right so out from the slope slash
05:13 - n now cursor would go into next
05:15 - line now i plus plus i becomes 3
05:17 - condition is still true
05:19 - again enter here j value would be again
05:21 - initialized with 1
05:23 - right now i hope you can brighten this
05:26 - program now one two three would be
05:28 - printed
05:28 - here and like this five
05:32 - and one two three four five six would be
05:34 - printed now at one time
05:36 - j i value now becomes after that 4
05:39 - then 5 then 6 once i when you become 7 7
05:43 - is not less than equal to 6
05:44 - we are going to exit from the loop that
05:46 - is the output
05:48 - now see this is what hard coding we are
05:50 - going to run this
05:51 - up to six times now suppose one when
05:54 - when user
05:55 - run at one time i want to print this
05:57 - pattern
05:58 - now when user enter user and second time
06:01 - the program now i want to print up to
06:03 - 10 10 lines next time i want to print 15
06:06 - lines
06:07 - so that should not be a case that should
06:09 - not be a hard coding i want what
06:11 - at the run time it should ask from the
06:14 - user
06:15 - enter number of rows you want to print
06:18 - right so for what you can do you can
06:20 - simply take
06:21 - like here i am taking two variable i and
06:23 - j one more variable i can take number of
06:26 - rows
06:28 - right and at runtime you can ask from
06:31 - the user like printf enter number of
06:34 - rows you want to print
06:42 - and how you will take the input using
06:45 - scanf at runtime percentage d address of
06:49 - in which variable i want to store the
06:50 - value rules
06:53 - right now when you run this it will ask
06:55 - and the number of rows you want to print
06:56 - and number of rows
06:57 - suppose you are entering number of rows
06:59 - 10
07:00 - so now up to 10 lines should be printed
07:03 - so we cannot
07:04 - write down here less than equal to 6 10
07:06 - line means less than equal to
07:08 - 10 more obviously but next time it
07:11 - should be 15 so we cannot
07:12 - write down here 10 or 15 that constant
07:15 - what you can write down the variable
07:18 - in which you are taking the value i less
07:19 - than equal to
07:21 - rows that's it and i plus plus n
07:24 - that is it now when you will run this
07:28 - you can print 10 lines 15 lines 20 lines
07:31 - up to you right so now i'll show you
07:34 - this
07:34 - the the output of this program on my
07:37 - laptop now
07:37 - so now let me create a new file here
07:42 - let me name this pattern three dot c
07:45 - right
07:52 - and right now void main
07:57 - and now i'm going to take two variable
08:00 - for two loops so i'm going to use
08:04 - what two loops right i is equal to
08:08 - one i less than equal to 5
08:12 - and i plus plus right
08:18 - and sorry it's i plus plus not just plus
08:22 - plus
08:24 - fine
08:27 - now in this one more for loop that is j
08:30 - j is equal to 1 semicolon j less than
08:33 - equal to
08:35 - i right and j plus plus
08:39 - now within this inner for loop what we
08:41 - are going to do we are going to print
08:43 - what
08:44 - not start now we are going to print what
08:46 - some number that is value of
08:48 - j so percentage d j is integer
08:51 - and j right and in outer for loop what
08:55 - will print
08:56 - slash n right
08:59 - and that's it now let me run this
09:02 - program
09:06 - it is going to take some time now see
09:09 - uh yeah it's running see the output
09:13 - one one two one two three one two three
09:15 - four one two three five right
09:17 - now if you don't want you know this hard
09:19 - coding like i less than equal to five
09:21 - now next time when i want to run i want
09:22 - to print till
09:23 - ten one two three four five six seven
09:25 - eight nine ten ten lines or fifteen line
09:27 - twenty line so i want that user should
09:29 - enter number of lines number of rows
09:31 - so what you can do we can take another
09:35 - variable
09:35 - suppose any variable abc name can be
09:38 - anything i am taking
09:39 - rows and i can ask the value
09:45 - from the user at runtime right and
09:50 - how we used to take input using
09:54 - scanner function percentage d
09:58 - and here we are going to pass what
10:01 - address of the name of the variable is
10:04 - rose right
10:11 - and what i think that's it
10:14 - now here i don't want to say it's 5
10:17 - i want to run this loop till
10:21 - rows i should be less than equal to rows
10:24 - right
10:24 - that's it now let me run this program
10:27 - for you and first of all it will ask for
10:29 - enter number of rows or enter number of
10:30 - lines you want in your program right you
10:33 - want to
10:34 - print right so yeah it's taking some
10:37 - time now
10:38 - see enter number of rows now let me
10:42 - enter suppose
10:43 - 10 rows and see the output it is
10:47 - printing
10:48 - up to 10. now again if you want to run
10:51 - and you want
10:52 - suppose 7 rows or 15 rows 20 rows
10:55 - then easily you can enter because i this
10:57 - time we are taking
10:58 - input at runtime right now it will ask
11:01 - any number of rows
11:03 - see enter number of rows and i am
11:04 - suppose uh entering
11:06 - 10 sorry 15 rows so that is what
11:09 - up to 15 it is going to print
11:12 - right so i hope you got it now next is i
11:15 - think you can print that inverted
11:18 - uh that pyramid now
11:21 - i hope you got the program how to print
11:22 - this type of pattern now
11:24 - for you one assignment is you have to
11:27 - print
11:27 - inverted that half pyramid of these
11:30 - number
11:31 - like this you have to print now these
11:34 - are two assignment for you
11:35 - you have to print first of all this
11:37 - pattern right this is inverted
11:40 - half parameter of number and second one
11:42 - is this one a little bit
11:43 - i have changed i think if you have got
11:45 - how to print this pattern
11:47 - very carefully then you have to change
11:50 - the logic a little bit
11:51 - please think over it and you have to
11:53 - print these thing this is assignment for
11:55 - you and you can send me
11:57 - you can either you can copy paste your
12:00 - code in the comment box or you can send
12:02 - me the message on my instagram account
12:04 - right so now in the next video we are
12:06 - going to discuss you know some more
12:08 - printing pattern programs some
12:09 - complicated
12:10 - ones so now i'll see you in the next
12:11 - video till then bye take care