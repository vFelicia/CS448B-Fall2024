00:00 - in the series of learning programming in
00:01 - c we are discussing arrays some problems
00:03 - on arrays and in the previous video I
00:05 - have discussed a simple program in this
00:07 - video I'll discuss one more program
00:09 - first of all the logic on the Whiteboard
00:10 - then I'll show you the output on my
00:12 - laptop right the program is what you
00:14 - have to write a program to read sum of
00:17 - five students and I'm going to take five
00:18 - only you can take 10 15 or 50 students
00:22 - then calculate sum and average of the
00:25 - marks using arrays right so now first of
00:28 - all we will read marks of five students
00:31 - right I'm not writing the complete
00:34 - program like header file and all I'll
00:35 - show you that thing on my uh laptop I'm
00:38 - just writing from the main function
00:40 - right so now you have to declare array
00:44 - I'm taking what marks name of the array
00:47 - is marks because we are taking marks of
00:48 - how many students sizes
00:51 - five right now we have to calculate sum
00:55 - and average if you calculate sum or
00:57 - average then you have to take two
00:58 - variables also to store these values and
01:00 - then to print if you have to take two
01:03 - variables uh like you have to what
01:05 - declare two variables first is sum now
01:09 - we are going to sum all the you know
01:12 - what five elements of the array the
01:14 - marks of five students so first of all
01:15 - we will see what we will uh initialize
01:19 - the sum with the zero otherwise it will
01:21 - take any garbage value and it is not
01:22 - going to give you the correct plus one
01:26 - another variable is average that it now
01:31 - read how to read five student marks of
01:35 - five
01:35 - students just write down a for Loop and
01:39 - using scanner function I hope you are
01:43 - clear with this syntax now here not you
01:47 - will not write a the the name of the is
01:49 - marks marks of I and that's it now we
01:55 - have to do what
01:57 - sum now suppose this is our array
02:01 - name is what
02:03 - marks five student marks index would be
02:06 - 1 2 3 4 5 address would be something
02:10 - like first of all uh let's take 100 only
02:13 - then 4 then 8 12 and for this element 16
02:18 - and I'm entering marks of five students
02:20 - using this four loop I I I hope no need
02:23 - to explain this logic again because I
02:26 - have already discussed in previous
02:28 - videos so directly I'm entering the
02:30 - marks suppose here marks are 10 20
02:34 - 15 and uh 205 and uh 7 so marks is array
02:42 - name and it is going to store Base
02:44 - address means the first element address
02:46 - that is 100 so it is going to point here
02:49 - this is internal pointer right so now
02:52 - that's it till then we have just
02:55 - completed the working of this this
02:57 - program now how to do some of these
03:00 - elements
03:02 - see obviously to do sum we have to first
03:05 - of all access these elements and uh with
03:08 - that accessing we will do some so for
03:11 - accessing one more for loop from 0 to
03:14 - less than five and
03:16 - i++ and here only we are not going to
03:19 - print these we are just going doing what
03:22 - some of these elements first of all we
03:24 - will exess 10 then 20 then we will do
03:27 - sum that is 30 then 50 15 15 would be
03:30 - added here that is 45 then 25 would be
03:33 - added in this like
03:35 - this right so now what you can do in sum
03:40 - we are going to store what whatever the
03:43 - sum of these arrays so in this we are
03:46 - going to store so sum equal to now what
03:48 - you will write here see just add
03:53 - What In Sum whatever the value in sum
03:58 - there we will add
04:00 - these values one by
04:02 - one right so have you access these
04:07 - values name of the array and index is I
04:11 - and I would be from 1 by one we will
04:13 - exess I would be 0 to 5 so this this
04:15 - this this and this and the value would
04:17 - be added to sum and the final sum would
04:20 - be again in the the the sum variable
04:24 - this is how you will calculate the
04:27 - sum after calculating sum we will do
04:30 - what average so in average variable we
04:35 - are going to store average how to
04:37 - calculate
04:38 - average the the sum means total divide
04:42 - by divide by total number of dat items
04:45 - total number of students are five so Su
04:47 - divide by
04:50 - five right and now you can simply
04:54 - print what you want to print sum or
04:57 - average if you want to print both two
04:59 - print it here I'm going to print average
05:01 - so
05:03 - percentage D better to take what
05:06 - percentage F because average would be
05:09 - always be in what the decimal form it
05:12 - would not be like exact integer if you
05:16 - take take integer average then it will
05:19 - what round off it will print only the
05:22 - integer form of that average so better
05:24 - to take float average and here to print
05:27 - float direct use what percentage F that
05:31 - I'll show you on my laptop here simply
05:32 - I'm using percentage D and what I'm
05:35 - going to print
05:39 - average and that's it now see the
05:41 - working of this form because we have
05:44 - already discussed the working till this
05:46 - right we have entered now this one I
05:49 - would be
05:51 - c i variable first of all value would be
05:55 - zero it is going to take any address
05:57 - like address would be suppose 1,000
06:00 - in memory condition true we will enter
06:02 - here now what is this sum is equal to
06:05 - sum plus Marx I first of all this would
06:07 - be calculated and whatever the value in
06:09 - the right side that would be assigned to
06:10 - the sum so now sum Plus in sum we have
06:14 - zero first of all 0 plus marks of I
06:18 - right marks is a name I is what zero
06:22 - Marx of Zer this is how we are going to
06:25 - access the first element marks of zero
06:27 - means this would be accessed I hope you
06:29 - know how to access like we have
06:31 - discussed in previous video that uh that
06:34 - um formula is what Base address plus I
06:37 - into size of
06:39 - int int why int because I'm taking array
06:42 - of integer type marks of zero 10 would
06:46 - be exist and 0 + 10 that is what 10 now
06:50 - 10 would be assigned to this sum right
06:54 - so when this this compiler will compile
06:57 - this line what a variable in memory
07:00 - would be created sum and first of all
07:02 - the value was Zero now the value of the
07:04 - sum is 10 and what another variable that
07:08 - is average right and it is containing
07:10 - any garbage value right three variables
07:13 - we have declared suppose it is having
07:15 - any address 2,000 it is having address
07:17 - 3,000 any address right so now I ++ now
07:22 - I becomes 1 condition again true again
07:25 - enter here sum plus marks I now sum is
07:28 - what
07:30 - Su value is what now
07:32 - 10 now 10 plus Marx of I I value is 1
07:37 - marks of one now address of this one
07:40 - this element would be calculated using
07:43 - this address using this formula and how
07:45 - to access and now we will access this
07:47 - thing so here we have 20 so now 20 would
07:49 - be added now it becomes 30 and 30 would
07:52 - be assigned to again sum so now the sum
07:55 - this value will be overwritten with what
07:58 - 30 I I hope now you got why I'm taking
08:00 - Su is equal to0 first of all because at
08:02 - first Su plus 0 if you will not
08:05 - initialize it with the zero then it
08:07 - would take any garbage value and that in
08:09 - that garbage value 10 would be added so
08:11 - you'll not get the correct result
08:14 - right uh now sum is 30 two elements 20 +
08:18 - 10 30 yeah fine I ++ now I becomes what
08:23 - 2 condition true again enter sum now sum
08:26 - is what 30 so first of all from this
08:29 - variable data would be F like 30 plus
08:33 - Marx of I I is what what now two Marx of
08:36 - two this 15 would be added now it
08:39 - becomes what 45 now 45 45 would be
08:42 - stored in this
08:44 - sum I hope you got the working now you
08:46 - can do for what IAL 3 IAL 4 and once I
08:51 - becomes five condition is not true we
08:53 - will go out of the loop till then some
08:58 - what what whatever what value would be
09:00 - there here in sum sum of all these
09:02 - elements would be what I think sum would
09:05 - be 77 I think maybe it's wrong now next
09:10 - line is this thing average is equal to
09:12 - sum by 5 sum is equal to what
09:14 - 77 by 5 whatever value would be
09:17 - calculated that would be assigned to
09:19 - this average here in this data that
09:22 - would be in floating point right so now
09:24 - better to take here
09:26 - float and for float we are going to
09:28 - print posi as F so whatever the average
09:31 - here whatever this value in this
09:34 - variable average that would be printed
09:36 - if you want to print sum then also you
09:38 - can print here sum right so this is how
09:41 - I guess you got how to do sum of all the
09:44 - elements of array right a proper example
09:47 - I have done this if a simple program is
09:50 - like how to do some of elements of all
09:53 - the the all the elements of the array
09:55 - then simply you can do that program also
09:57 - right because this is how we are doing
09:59 - some right using arrays like 1D array I
10:03 - hope you got this one now let me show
10:05 - you this thing on my laptop so now let
10:07 - me create one more file for
10:10 - this I'm taking uh name marks to C
10:17 - okay header file first of
10:21 - all then we'll write what main
10:25 - function and here I'm going to take what
10:29 - marks so AR name I'm taking marks and
10:34 - five students you can take 10 or 15 it's
10:37 - up to you right and one more variable I
10:41 - for loops and we are going to calculate
10:44 - sum and average so we'll take sum equal
10:48 - to zero and one variable that is
10:52 - average okay fine now enter the marks of
10:57 - students so we will enter how using a
11:00 - full loop
11:04 - right and uh scanf percentage D so here
11:10 - we'll write address of array name is Max
11:14 - and here we will write I
11:18 - fine now we are going to calculate sum
11:22 - of all the marks right so here what you
11:25 - will
11:27 - write in one more for Loop we will write
11:32 - what I is equal to 0 I less than 5 and
11:37 - i++ because we have to access all the
11:40 - five elements and then we will do
11:42 - sum what we will write sum equal to sum
11:45 - plus how to access elements of this
11:49 - array name of the array and index I
11:54 - right and after calculating the
11:57 - sum this outside of this for Loop now we
12:01 - will calculate
12:02 - what average average equal to what sum
12:07 - what the formula is divide by total
12:10 - number of students that is we have five
12:12 - students and that's it and now I'm going
12:15 - to
12:16 - print uh suppose sum equal to it's float
12:20 - so percentage F format specifier and
12:24 - sum and uh print
12:27 - f slash in for new
12:32 - line average equal to that is also
12:36 - percentage F and the name is AVG right
12:42 - that's it let me save it and let me just
12:45 - run it now I hope it will give you
12:47 - correct
12:48 - output so it is going to ask enter marks
12:51 - of five students we haven't written the
12:55 - line like enter the marks of five
12:57 - students so it is not going to print
12:58 - that line directly you have to enter
12:59 - marks so for Simplicity purpose I'm just
13:02 - entering marks what five five 5 5 5 5 *
13:08 - 5 sum should be 25 and average should be
13:11 - five sum are sum and average these are
13:14 - in
13:14 - float that is why after point point
13:18 - valuable see you can see 25
13:20 - Point till six digit digit it is going
13:23 - to print for float right now uh you can
13:28 - also write here here for better
13:30 - understanding before the for
13:32 - Loop enter marks of
13:37 - five
13:39 - students and now it will ask when you
13:42 - will run it let me save it then it will
13:46 - ask now you will get it better see enter
13:49 - marks of five students so now let me
13:51 - enter marks again uh like 34 56 78 9 1
13:59 - these are five students and marks 178
14:03 - point this and average is this one so I
14:07 - hope you are getting my point if you
14:09 - want to take marks also in floating
14:11 - point you can take what a float type of
14:13 - array here just you have to write down
14:16 - rather than in float marks right and in
14:20 - scanf also what percent is
14:24 - f because it is floating point and and
14:29 - uh any other change no other change so
14:32 - let me just save it and let me run
14:38 - it sorry this I should be see it is
14:41 - giving error this I should be integer so
14:46 - let me declare this I in another line
14:49 - int I because I value is like we are
14:52 - taking from 0 to fight so now let me
14:54 - save it and now let me run
14:57 - it uh what error it is
15:01 - giving okay this float
15:10 - 0.0 so now let me save it and let me
15:14 - just run
15:16 - it see it is asking marks of five
15:18 - students now I'm entering
15:21 - 2345 56
15:24 - 78.9
15:27 - 99.4 okay
15:30 - 56.7 and see sum is this and average is
15:34 - this one so you can take integer or
15:37 - float it's up to you better to take
15:39 - float right so now that's it so now
15:44 - that's it for this video in the next
15:45 - video we'll see like read elements of
15:49 - array like 10 elements of array and in
15:52 - that elements count how many OD numbers
15:55 - and how many even numbers and then print
15:57 - so we'll see this program next video and
15:59 - I'll see you in the next video till then
16:00 - bye-bye take care