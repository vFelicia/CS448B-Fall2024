00:00 - in the stage of learning programming in
00:01 - c we are discussing printing pattern
00:03 - programs in c so in this video i'll talk
00:04 - about how to print this pattern
00:06 - you'll see the logic on this whiteboard
00:08 - then i'll show the output on my laptop
00:09 - see this is the actually same as we have
00:12 - discussed in the previous video but it
00:14 - is reverse of that pattern
00:16 - there we have discussed in the first
00:17 - line a in second line a b
00:19 - then abc then a b c d and a b c d e but
00:22 - here in the first line we are printing a
00:24 - b c d e
00:26 - then a b c d then a b c like this so it
00:28 - is reverse of that you have to change a
00:30 - little bit see all the printing pattern
00:32 - programs means most of the printing
00:33 - pattern programs are
00:35 - same the structure
00:38 - the outer structure the logic is almost
00:40 - same you have to
00:42 - change a little bit in every printing
00:45 - pattern programs
00:46 - so you have to think a little bit and
00:49 - you will get it
00:50 - right so please don't think that there
00:53 - are so many printing pattern programs
00:55 - and these are so difficult
00:56 - no almost all the printing pattern
00:58 - programs are same if you
01:00 - if you got once like for one or two
01:03 - printing
01:04 - pattern programs if you would have to
01:06 - think the logic what should be the outer
01:08 - structure
01:09 - the general structure like two for loop
01:11 - outer loop would be responsible
01:12 - for the these lines and inner loop would
01:14 - be responsible for the columns
01:16 - like this then you can easily handle
01:19 - any printing pattern programs right so
01:22 - now
01:23 - see first thing you have to do you have
01:24 - to analyze this pattern and you have to
01:26 - divide the pattern into number of rows
01:29 - and columns
01:30 - right so in this one we have how many
01:33 - rows five rows so outer loop
01:36 - we generally take what variable i that
01:39 - should run
01:40 - from one to five four five rows for five
01:42 - lines
01:43 - right now simply the outer loop would be
01:45 - from one
01:46 - to five that's it this is very simple
01:50 - now the inner loop would be responsible
01:52 - to print for printing the actual
01:54 - printing
01:55 - one two three four five columns are
01:57 - there and
01:58 - j is responsible i mean we are taking a
02:01 - variable j for inner loop
02:02 - but we cannot directly write j is equal
02:04 - to one to five
02:06 - like we have done in the outer loop why
02:08 - because see in the first line
02:10 - j is executing five times but in second
02:12 - line j is executing only four times
02:14 - in third only three times here only two
02:17 - times and here only one time
02:19 - because here i am printing only a in
02:21 - first column i am printing
02:23 - remaining four columns are what empty
02:26 - empty
02:27 - right so j is
02:30 - changing we cannot directly write j is
02:32 - equal to one j should be from one to
02:34 - five
02:35 - here you have to think a little bit now
02:37 - what should be the stopping condition
02:38 - for j now j is equal to 1 and j
02:41 - less than equal to c
02:44 - so now here c it is always not true that
02:46 - the outer loop should be from 1 to
02:48 - the maximum number that is here we have
02:50 - five lines so one to five
02:52 - maybe you have to change a little bit
02:54 - the outer loop see here in this case you
02:56 - have to analyze the pattern for that
02:57 - thing
02:58 - there can be multiple ways to print this
03:00 - pattern but i am discussing only one way
03:02 - right see when i value is one j is
03:07 - executing five times when i value is two
03:10 - j is executing four times
03:11 - like this but see if we write
03:15 - i in reverse order like this
03:18 - i should run from 4 then 5 4
03:21 - 3 2 1. obviously if you write something
03:24 - like this then also it will print 5
03:26 - lines only
03:26 - only difference is i should run from
03:30 - 5 i should start from 5 to 1 so
03:33 - condition should be i should be greater
03:34 - than equal to
03:35 - 1 and here i minus minus not plus plus
03:40 - same thing right now here
03:44 - to find out this condition we are just
03:46 - writing this
03:47 - right if you write this then it would be
03:49 - easy to find out this j condition the
03:51 - inner loop condition
03:52 - when i value is 5 j is also 5 j is also
03:55 - executing 5 times when i value is 4
03:57 - j is also 4 when i 3 j is also executing
04:00 - 3 times
04:01 - right means how many times j is
04:04 - executing
04:06 - same as the number of i
04:09 - right so here what should be the
04:10 - condition j should be less than equal to
04:13 - i and j plus plus
04:16 - that's it right and here what you will
04:20 - print
04:22 - because you are printing alphabets
04:24 - character
04:25 - so that is why i am writing here
04:27 - percentage c to print a character
04:29 - but see here what is the case
04:32 - what you will write here to print a b c
04:35 - d in the first row and a b c d in the
04:36 - second row like this
04:38 - see if i write something like the 64
04:40 - plus
04:41 - what j
04:45 - right obviously j is what integer we are
04:48 - taking j integer
04:49 - before this we will have to declare you
04:51 - will have to declare the variables in
04:53 - i and j i am not trying writing the
04:55 - complete program here
04:57 - right so integer value is j either 1 2
05:00 - 3 and 64 is also integer we can add this
05:03 - right
05:03 - and if you're writing percentage c then
05:05 - whatever the integer value is here the
05:06 - corresponding
05:07 - character value would be printed right
05:10 - and
05:11 - these characters would be stored using
05:12 - sky character system in computer memory
05:14 - and a is what 65 in sky system
05:19 - b is 66 67 68 69 like this
05:23 - so if we write this in integer form then
05:26 - what would be the case here
05:31 - this is the pattern but we are not
05:32 - printing integer value we are printing
05:34 - corresponding character value of these
05:36 - right so i'm writing that by 64 plus
05:39 - j and in the outer loop i'm writing
05:42 - slash n for the new line
05:45 - now let me try run this program for you
05:49 - see first of all i value would be
05:52 - initialized with 5
05:53 - 5 greater than equal to 1 yes condition
05:55 - 2 will enter here now j would be
05:57 - initialized with 1
05:58 - 1 less than equal to 5 yes condition 3
06:02 - will enter here and what would be
06:04 - printed percentage c 64 plus j
06:06 - j is 1 that is 65 and corresponding to
06:09 - 65 the value is the character is
06:11 - a a would be printed now j becomes 2
06:15 - 2 less than equal to 5 yes condition 2
06:17 - will again enter here now 64 plus
06:20 - 2 that is 66 that is b would be printed
06:24 - right now j plus plus that is
06:28 - 3 how many times this loop would be
06:29 - executed 5 times because condition is
06:32 - less than equal to 5 so that is why here
06:34 - what would be printed a b
06:35 - c d and e right when j value becomes
06:39 - what
06:39 - four then five then six then this
06:41 - condition is not true exit from the loop
06:43 - slash n means new line cursor would be
06:46 - new line
06:47 - right now i minus minus i becomes now
06:50 - 4 4 greater than equal to 1 yes
06:52 - condition 3 will again enter here and
06:54 - again j would be initialized with 1
07:00 - right condition true which is 1 less
07:02 - than equal to
07:03 - now i value is 4 1 less than equal to 4
07:06 - yes condition 2
07:08 - again enter here 64 plus j j is 1
07:12 - then what e would be printed that is 65
07:15 - right now how many times this inner loop
07:18 - would be executed four times so what
07:19 - would be printed a b
07:21 - c d right
07:24 - when j value becomes what then two then
07:27 - three then four
07:28 - once j value becomes five exit from the
07:30 - loop and
07:31 - cursor would be new line right so i hope
07:34 - you are getting
07:35 - we are how we are printing this now i
07:37 - value becomes what
07:38 - three condition true again enter here
07:41 - now three times this loop would be
07:42 - executed so a b c
07:44 - would be printed now
07:47 - i value becomes two two times this loop
07:49 - would be executed so av would be printed
07:51 - and i value becomes one
07:52 - only one time this loop inner loop would
07:54 - be executed and a would be printed once
07:56 - i value comes
07:57 - zero this condition is not true zero
07:59 - greater than equal to one
08:00 - not real exit from the loop and we got
08:02 - this pattern
08:04 - right so i hope you got how we are
08:06 - printing this pattern
08:08 - so you have to change a little bit
08:10 - either in this condition or either in
08:11 - the outer loop or the inner loop
08:13 - condition right if this kind of pattern
08:16 - the reverse type of pattern you are
08:18 - getting
08:19 - simply you have to think like we can we
08:21 - can do it we can reverse the outer loop
08:23 - outer loop should be from five to one
08:27 - i mean the maximum lines are five so
08:28 - five to one if this is the simple loop
08:31 - not reverse
08:32 - i mean simple pattern like a then a b a
08:34 - b c something like this
08:35 - so simply you can run this outer loop
08:37 - one two five the maximum number of lines
08:40 - right once you will practice 10 15
08:44 - printing pattern programs you will
08:46 - automatically get
08:47 - once you see the pattern you will
08:49 - automatically get the loop condition and
08:52 - what what what what you have to write to
08:54 - print that pattern
08:55 - right but you have to practice for that
08:57 - thing you have to practice 10 15 20
09:00 - printing pattern programs right so now
09:03 - here one assignment for you is
09:05 - you you have to print what this pattern
09:09 - you have to print this pattern please
09:10 - don't copy and paste please first of all
09:13 - think how to print this pattern if you
09:14 - are not getting
09:15 - then you can take help from internet
09:18 - right but please don't try to open paste
09:21 - from somewhere
09:22 - right now let me show you the output for
09:25 - this program on my laptop
09:27 - so now let me create another file for
09:29 - the second pattern
09:33 - named alphabet pattern c and this is
09:36 - almost
09:36 - same as the previous one that is what i
09:38 - am copying the previous uh
09:40 - code just to save the time and we have
09:43 - to change a little bit it is just
09:44 - reverse of the previous one
09:45 - right here in the first row we are
09:47 - printing five lines
09:49 - but here i am taking what the user
09:51 - should enter number of rows yours you
09:52 - want to print like 5 10 15 so that is
09:54 - why we are taking here rows
09:56 - so what change we have to do the for
09:58 - loop the outer loop should be
10:00 - what from maximum to one so here i am
10:03 - writing what
10:04 - i should be i first of all initialize
10:08 - with
10:08 - rows and i should run from rows to 1 i
10:12 - should be
10:13 - greater than equal to 1 and here
10:16 - one more change i should be minus minus
10:19 - otherwise this would be an infinite loop
10:21 - right and that's it they should be same
10:24 - i
10:24 - j would be 1 to i and we will same we
10:26 - are printing j plus 64
10:28 - right so now let me just run this
10:31 - program for you
10:35 - and it is asking number of rows let me
10:37 - enter 5 and see
10:39 - it is just reverse of previous one right
10:42 - let me run this again for 20 number of
10:46 - rows
10:47 - and see right let me just run this
10:51 - for 30 number of rows and let's see what
10:55 - it is printing
10:58 - see
11:01 - here it is printing different different
11:04 - characters not abcd right because abcds
11:08 - are only
11:08 - till 26 but i am printing 30 rows
11:12 - so that is why different characters it
11:14 - is printing right
11:16 - means sky value the sky value it is
11:19 - which is computed here
11:20 - corresponding to that what whatever the
11:22 - character is this
11:23 - is printing here i hope you can see this
11:26 - in at the end of these first three or
11:29 - four lines
11:30 - right so now that's it
11:34 - so i hope you would have to print this
11:35 - pattern i'll see in the next video with
11:37 - a new pattern till then bye bye take
11:43 - you