00:00 - so in the series of learning python
00:01 - programming language in the previous
00:03 - video we have seen input function in
00:05 - python we have seen print function and
00:06 - input function
00:08 - and we have also seen some coding
00:09 - exercise on those functions like how to
00:11 - use those functions and all
00:13 - now the next topic is variables what are
00:16 - variables in python how to use variables
00:18 - why we use variables and all this thing
00:20 - we will see in this video okay what is
00:22 - need of variable that is very important
00:24 - so now let's see we will start from this
00:26 - question why we need actually variables
00:28 - see
00:29 - if i write something like this
00:32 - see if i write this input what is your
00:34 - name means i'm asking from the user what
00:36 - is your name
00:37 - so it would be prompted on your screen
00:40 - what is your name and then
00:41 - we will whenever you run this then you
00:43 - will enter a name like suppose i am
00:45 - entering jenny
00:47 - and just hit enter button
00:49 - now that's it
00:52 - so see okay
00:53 - now this this uh jenny this name would
00:56 - be here this line would be replaced by
00:57 - this journey not actually but virtually
01:00 - like behind the scene it is happening
01:01 - but we are not storing this jenny
01:04 - anywhere means further
01:06 - in our program we cannot use this name
01:09 - jenny name
01:10 - because we haven't stored this name
01:12 - anywhere
01:14 - okay
01:15 - suppose uh
01:16 - i have some water
01:19 - okay now i'm pouring that water like
01:21 - this
01:23 - now it is spilled on the floor
01:26 - now if i store that water in another
01:28 - glass then i can use that water again
01:32 - okay so for that i have to take another
01:35 - container
01:37 - suppose from a tap we have opened the
01:39 - tap and water is you know
01:41 - spilling out on the floor
01:43 - if you use a bucket to store that water
01:46 - then we can use that water in future
01:50 - same in a container we are storing that
01:52 - thing same thing here also this jenny
01:56 - means it's nowhere now we cannot use
01:58 - this jenny name
02:00 - anywhere in your program
02:02 - so if i want to store that value i need
02:06 - a containers
02:08 - means in real life we need some
02:09 - container
02:11 - in
02:11 - programming we need variables so
02:13 - variables are nothing but containers to
02:16 - store some values
02:18 - values can be anything here and integer
02:20 - value like one two three numbers or
02:22 - strings or list or much more
02:25 - that also will see one by one but
02:27 - variables are just container to store
02:30 - some values
02:32 - in python
02:34 - okay now there is no need to declare any
02:37 - variable
02:38 - in python before it's used like in cb
02:41 - declare like in cnc plus plus there in
02:43 - the programming language we have to
02:44 - declare like if you want to take an
02:46 - integer variable then in a
02:49 - before using we have to tell the
02:50 - compiler like this is name of the
02:52 - variable this is data type of this
02:53 - variable but here in python
02:56 - we don't need to declare any variable
02:58 - before its use we don't need to tell any
02:59 - data type of the variable nothing we
03:01 - have to
03:03 - tell what you need to do
03:05 - you just
03:07 - write down the name of the variable okay
03:10 - the variable would be created you know
03:12 - at the time the moment you first assign
03:15 - some value to that variable that's it so
03:18 - suppose i want to store this name this
03:20 - jenny this value somewhere in the
03:22 - variable what you need to do
03:24 - before this you just write down the name
03:26 - of any variable any name you can take a
03:28 - b c x y z anything
03:30 - but better to use a meaningful name
03:34 - means i am storing a name so better to
03:36 - use a meaningful name according to that
03:37 - so name of the variable i am taking
03:40 - name name equal to this
03:43 - now at this point of time
03:45 - whenever you
03:46 - enter jenny when you run this program
03:48 - and hit enter button
03:50 - then this name this line would be
03:53 - replaced with jenny and this jenny would
03:54 - be stored in this variable name so now
03:57 - you can simply print this print and you
04:00 - can in print you can simply write down
04:02 - the name of the variable so it will give
04:04 - the result what jenny
04:07 - like you can take example uh in your
04:09 - phone book in your diary you are writing
04:11 - phone numbers you are simply writing
04:12 - phone numbers no you are not writing any
04:15 - name for those four numbers so in future
04:18 - it would be very difficult for you to
04:20 - find out whose phone number is this
04:22 - okay we cannot retrieve that thing
04:25 - you have if you have a list of phone
04:26 - numbers fine
04:28 - same if i write any name we write name
04:31 - associated to a phone number suppose i'm
04:33 - writing
04:34 - in my book i'm writing like jenny
04:36 - and the phone number i'm writing here
04:38 - right something like this
04:42 - now in future we can use this
04:44 - this number this phone number we can
04:46 - call this with the help of this chain we
04:48 - can identify like this is jenny's phone
04:50 - number same if you use this thing in
04:53 - programming we use
04:55 - equal to
04:56 - sorry this assignment operator so this
04:58 - jenny equal to this number so jenny is
05:01 - considered as a variable name in
05:03 - programming
05:04 - jenny equal to i'm assigning a phone
05:06 - number that's it
05:09 - now further if you want to refer this
05:11 - you can simply use you can simply call
05:14 - jenny
05:15 - okay so just a cont the variables are
05:18 - just containers to store some data
05:19 - values
05:21 - nothing else
05:22 - same if i write any variable for example
05:25 - you can take a variable number a is
05:26 - equal to 1
05:28 - you can use b is equal to
05:31 - jenny or b equal to i am writing like uh
05:34 - pile
05:36 - it is a string string you can put in
05:38 - double go to single quote your wish
05:42 - see i'm not telling any data type like
05:44 - it is of integer type it is of string
05:46 - type or float type nothing else
05:48 - okay
05:49 - so no need to tell
05:51 - whenever you
05:53 - you know the variable this variable
05:54 - would be created the moment we assign
05:57 - first assign value to this that's it and
05:59 - now simply you can print print
06:02 - a it will print one if i print
06:04 - print b it will print pile
06:07 - yeah further we'll see
06:08 - how to type cast these things like from
06:11 - end to float or further we'll see more
06:13 - you know thing about these data types
06:15 - and variables but for this video you
06:17 - have to you know
06:19 - know the basics of what is variable how
06:21 - to create variable how to assign values
06:23 - how to use this these variables
06:25 - fine now as a name suggest variables
06:28 - variables means
06:29 - values can vary you can change the
06:32 - values of the variable these are not
06:34 - fixed at one time suppose i have a sign
06:36 - the value name is equal to input what is
06:38 - your name and then name or suppose uh
06:41 - i'm writing here something like this i'm
06:43 - writing i'm taking a variable name name
06:45 - is equal to
06:46 - jenny
06:48 - and then i am printing print
06:50 - name so it will print jenny again i am
06:53 - writing name is equal to
06:57 - jia and again i am printing print
07:00 - name so see i am taking same variable
07:03 - name but this
07:04 - the output would be jenny and
07:07 - jia this time it is printing jenny this
07:09 - time it is printing gr so we can change
07:11 - the values of these variables
07:15 - name is only variables values can vary
07:19 - okay
07:20 - so i hope you got what is variable why
07:22 - we need variables and how to use
07:23 - variables in python programming now one
07:26 - exercise for you is
07:28 - this is the case first it will ask what
07:30 - is your name then you will enter a name
07:32 - and it will print the length of that
07:33 - name suppose i am entering jenny so the
07:35 - length is
07:36 - j e double and y five characters are
07:38 - there so it will print five
07:41 - okay pause the video and do this now
07:43 - hint is how to calculate length of the
07:46 - string we have a uh inbuilt function
07:48 - that is l e n
07:50 - l e n
07:52 - this
07:54 - and whatever name or the string for the
07:56 - for which you want to find out the
07:58 - length you can put that thing here
08:00 - okay we'll see more functions and
08:02 - strings in later videos but for now this
08:04 - is the hint so let's pause the video and
08:06 - try this out so i hope you have done
08:08 - this
08:09 - see
08:10 - we'll ask will i use input function what
08:12 - is your name and whatever you will enter
08:14 - we will store that thing
08:16 - here in the name variable okay now
08:19 - len is a function
08:21 - to find out length of the string
08:24 - so in length
08:25 - i am you have to pass this variable name
08:28 - name you can pass so whatever it will
08:31 - return that also you can store in
08:33 - another variable
08:34 - variable name you can take anything abc
08:36 - xyz anything but better to take
08:37 - meaningful variable name so i am taking
08:39 - length
08:41 - and finally you can print
08:44 - length
08:46 - so what would be the output first when
08:48 - you whenever you run this what would be
08:49 - prompted the message on the screen what
08:51 - is your name
08:52 - what is your name this would be printed
08:54 - and suppose i am entering
08:56 - jenny and hit enter button
08:58 - then
09:00 - what is behind the scene process this
09:02 - jenny is here now so now the jenny would
09:04 - be
09:05 - assigned to this variable name in this
09:07 - name we have jenny
09:09 - so in length i am passing name means
09:10 - jenny i am passing so it will calculate
09:12 - the length that is one two three four
09:14 - five five now this five would be
09:16 - assigned to this variable length and i
09:19 - am printing this length this variable so
09:21 - what would be printed 5
09:23 - so let's create a new file right click
09:26 - on this then new
09:28 - file and
09:34 - variable in
09:37 - python
09:38 - dot py
09:41 - okay
09:43 - now what we will see will take a
09:45 - variable
09:47 - the variable name i am taking name is
09:49 - equal to
09:51 - input
09:54 - what is your name
09:58 - okay
09:59 - and we will print now at this time
10:02 - name
10:03 - fine
10:04 - now let's run this
10:07 - it is asking what is your name
10:08 - and i'm entering here
10:10 - jenny click enter and it will print jen
10:13 - jenny has been stored in this variable
10:15 - name name
10:17 - now see rather than rather than this
10:22 - now i can take again i'm taking name
10:24 - equal to suppose
10:26 - i'm taking here
10:29 - jia
10:32 - and again i am printing print
10:34 - name
10:36 - let's run this again and see
10:39 - so first it will ask what is your name i
10:40 - am entering jenny
10:43 - so first it will print jenny then it
10:44 - will print gr
10:46 - because that first time the value in the
10:48 - name variable is what jenny now we have
10:50 - changed
10:52 - this uh value in this variable that is
10:55 - gr so this point of time in name we have
10:58 - g so it will print g gr
11:00 - okay
11:01 - now how to find out length what you can
11:04 - see
11:06 - we can use
11:08 - a length variable name or any variable
11:10 - name you can take l you can take but l
11:13 - would be not so meaningful by looking at
11:15 - that
11:16 - we cannot get like l is what
11:18 - length is equal to
11:20 - we can use a function lan and in lan we
11:23 - will pass the variable name name and
11:25 - just print
11:28 - length
11:30 - rather than name we will print this time
11:33 - length this variable so let's just
11:36 - comment out these line
11:38 - to comment outline we use hash symbol in
11:40 - python let's run this
11:43 - now it will ask what is your name i am
11:45 - entering jenny
11:47 - and it is printing length five
11:49 - again
11:51 - enter
11:53 - i'm entering pile
11:54 - again five let's take another name
11:58 - having different length jia
12:01 - it is printing four
12:03 - okay so you can check out this thing and
12:06 - one more thing we can do something like
12:08 - this
12:09 - suppose
12:09 - [Music]
12:12 - we have just
12:13 - done this thing
12:16 - hash and here also
12:20 - we have come committed out everything i
12:22 - am taking simple variable a is equal to
12:23 - 1
12:25 - b is equal to i'm here i'm assigning a
12:28 - value like
12:31 - vyansh
12:34 - and i'm printing print a
12:38 - and print
12:40 - b
12:42 - so let's run this
12:43 - what it will print one and we aren't
12:46 - so any variable you variable name you
12:48 - can take no need to tell the data type
12:51 - the a value is one so it will print one
12:52 - b value is vyance in the string so it
12:54 - will print b
12:56 - simple
12:58 - okay but see if you want to concatenate
13:00 - these two thing a and b that could give
13:02 - error suppose i am writing a
13:04 - plus b
13:08 - i want to concatenate
13:10 - but it will give error let's run this
13:13 - and see
13:14 - type error it is a type error
13:16 - unsupported operands for plus one
13:19 - operand is int one operand is
13:22 - string
13:23 - so one is into one is string so we
13:25 - cannot concatenate this is type error
13:28 - type error it is not syntax error
13:30 - because
13:31 - in print syntax is
13:33 - same like in plus we have something on
13:36 - the left hand side something on right
13:37 - hand side syntax is correct but type
13:39 - error is there
13:41 - so
13:42 - it cannot concatenate these things both
13:44 - should be same like what should be
13:45 - string or concatenation plus can be used
13:48 - to concatenate strings only okay
13:52 - and
13:53 - see in this case it it can be a case
13:55 - like name is equal to input what is your
13:57 - name okay
13:59 - now
14:00 - rather than b is equal to vyan so at
14:03 - this point of time i am suppose rather
14:06 - than
14:08 - am taking name name plus b
14:12 - see the difference now let's run this
14:15 - what is your name i'm entering my name
14:17 - is one
14:20 - now at this time concatenation is
14:21 - possible c one and beyonce
14:24 - so name at
14:25 - name we have one plus b is string beyond
14:28 - so it has concatenated but you will say
14:30 - that one is
14:31 - integer now at this time how it is
14:33 - possible i have told you whenever we
14:35 - have discussed input function by default
14:37 - input function returns string
14:41 - so whatever you will enter one two three
14:43 - 4 or anything abc
14:45 - simple a character also a it will
14:47 - consider everything as a string it will
14:49 - return a string so at this point of time
14:51 - this one would be by default this one is
14:53 - a string
14:55 - that is why it will not give any error
14:57 - so one is a string we aren't just a
14:59 - string so it can concatenate these two
15:01 - things
15:02 - okay
15:03 - i hope you got my point