00:00 - so in this series of learning c
00:01 - programming we are discussing functions
00:03 - in c in the previous video what we have
00:04 - discussed how to return a pointer from a
00:06 - function
00:07 - right now in this video i have taken
00:09 - this example one you know question that
00:11 - came in gate 2010 this is what call by
00:15 - reference example this is what call by
00:16 - reference method we are calling the
00:18 - function by passing the address so that
00:20 - is call by reference method and i have
00:22 - posted this question on my community and
00:24 - see these are four options
00:26 - and 48 percent students are saying that
00:28 - answer is 2-1
00:30 - so let's find out you are saying correct
00:31 - or not but before that just want to tell
00:33 - you one thing
00:34 - if you are preparing for gate or will be
00:36 - preparing for gay 2022 exam then an
00:38 - academy is conducting a combat it's like
00:41 - india's largest weekly scholarship test
00:44 - for gate aspirants and it will be
00:46 - conducted on 26th of
00:48 - september in this contest you will get
00:51 - 20 question and time limit would be 60
00:53 - minutes and all the questions would be
00:55 - very challenging and original gate
00:57 - question that has been curated by the
00:59 - best educators at an academy so here you
01:02 - will get a chance to go head to head
01:04 - with thousands of learner from all over
01:06 - india and you will also come to know
01:08 - where you are standing you can analyze
01:09 - your performance you can see how you
01:11 - rank against the others from all over
01:13 - india with a live leaderboard that shows
01:16 - a real-time ranking after every question
01:18 - so better to take it live to compete
01:20 - with the best and if you take it live
01:22 - you can also you know get a chance to
01:24 - win 100 scholarship and some other
01:26 - awards also obviously if your rank is no
01:28 - good so you can find out the detail of
01:31 - this thing on the screen
01:32 - and one more thing after every contest
01:34 - you will get detailed video solutions
01:36 - provided by their experts so that you
01:39 - can identify your weak area and you can
01:40 - improve according to that and you can
01:42 - get it right next time
01:44 - and you can take this test for free you
01:46 - just have to enroll it and the
01:48 - enrollment link i'll put in the
01:49 - description box of this video just go to
01:51 - that link
01:52 - scroll down and pick up the right test
01:54 - for you and just click enroll and use my
01:56 - code jkl10 to unlock the combat so the
01:59 - enrollment link of this combat you will
02:01 - find in the description box of this
02:02 - video you can go and check out so let's
02:04 - discuss now this question see what you
02:07 - have to do while solving this type of
02:08 - question you just have to follow the
02:09 - steps first of all control will go where
02:11 - in the main function right in main
02:13 - function we have what the first line is
02:15 - function calling
02:16 - so it is function calling
02:18 - when when control will go to the main
02:19 - function obviously some memory would be
02:21 - located to main
02:23 - right
02:24 - and now the first line is what function
02:26 - calling
02:27 - so function calling means now the
02:28 - control will go where in the definition
02:30 - of this function so now this function
02:32 - will also get some memory
02:34 - like one stack frame for this main and
02:36 - one stack frame would be held for this
02:39 - f function so here we are having we are
02:41 - passing address of i and address of j
02:44 - but where are this i and j c
02:46 - this thing is very important
02:48 - this is where i am initializing
02:50 - declaring this i and j but this i and j
02:53 - is
02:54 - within this function no within main no
02:58 - they are outside it means these are
03:00 - global
03:01 - global variables
03:02 - and there is some memory for static and
03:04 - global variables because
03:06 - the lifetime of static and global
03:08 - variables are throughout the program you
03:10 - can access these variables in main
03:11 - function also in this function also in
03:13 - any function you can use these variables
03:14 - these are globally declared right so
03:18 - somewhere in memory we have i
03:21 - and
03:22 - j
03:23 - i is 0 and j is 1 these are not within
03:27 - these functions they are globally
03:29 - declared so you can access these
03:31 - variables throughout the program
03:33 - right this thing is very important
03:36 - now
03:37 - we are passing address of i suppose
03:38 - address so 500 and this is 200
03:41 - we are passing 100 and 200 so here we
03:43 - are having some pointer sorry not in
03:45 - main we in f we are having
03:47 - two pointer to accept these addresses p
03:50 - and q in p we are having hundred and in
03:52 - q we are having
03:54 - two hundred so now this p is pointing to
03:56 - here the skew is pointing to
03:58 - here i hope you got this right
04:01 - now within this function what we are
04:03 - doing p is equal to q now whatever the
04:05 - value in q that would be assigned in p
04:07 - so in q we are having 200
04:10 - 200 would be assigned in p so that is
04:12 - here we have 200
04:14 - now this p is also pointing to
04:17 - where
04:18 - here
04:20 - both p and q are pointing to j now
04:23 - there is no pointer which is pointing to
04:25 - i now i hope you are getting my point
04:27 - now next is s trick p is equal to strict
04:30 - p means
04:31 - using a direction operator we are
04:33 - accessing the value
04:34 - the value at
04:36 - whatever addressing p in p we are having
04:38 - address 200 value at 200
04:41 - value at 200 is this one 1
04:45 - so here we are changing the value
04:47 - from 1 to 2 that 2 would be we are
04:50 - assigning at this value so now j becomes
04:53 - 2
04:54 - now control will go here
04:56 - exit from the function
04:58 - and now
04:59 - we will go back to here where we are
05:01 - calling this function
05:03 - right
05:04 - now see after this what we are doing
05:06 - printf percentage d i and j we are
05:08 - printing value of i and j
05:11 - now what value
05:12 - would be printed
05:14 - you tell me
05:15 - i and j
05:17 - these are globally declared we can
05:19 - access this variable here and using
05:21 - pointer we have modified
05:23 - these values we have modified only
05:25 - obviously j value not i value so
05:27 - whatever the value of i value of i is
05:29 - still 0
05:30 - so it will print 0 and
05:33 - 2
05:36 - that's it so what would be the answer
05:39 - this one
05:40 - 0 and 2 and only 20 20 students are
05:43 - saying that answer is zero into only 20
05:45 - students are correct means
05:47 - majority of you are wrong
05:50 - what are you doing
05:52 - you're not able to answer a simple
05:54 - question you have to just you know
05:56 - follow the steps only and you have to
05:58 - read every line of the program very
06:01 - carefully very carefully
06:03 - and if you're a beginner i have told you
06:05 - better to you know draw something like
06:07 - this
06:09 - a visual representation don't just see
06:11 - the question and try to find out the
06:13 - answer in your brain only and your
06:14 - answer is to one
06:16 - no
06:16 - that is why
06:18 - see answer is sorry the question is very
06:20 - simple but tricky one it's simple
06:23 - right
06:24 - but
06:26 - i don't know why you are getting the
06:27 - wrong answer
06:28 - maybe you you just you you are not
06:31 - following the procedure like i you know
06:33 - draw this this thing and this thing and
06:34 - then solve the question
06:36 - that is why i think you know many
06:38 - students think that the gate exam is
06:40 - very tough
06:41 - exam is not tough questions are not very
06:44 - tough of that level
06:45 - questions are little bit tricky you have
06:47 - to just carefully read every line of the
06:50 - code that is given
06:52 - so the correct answer is 0 2
06:55 - so now you can run it and see are you
06:56 - getting
06:57 - 0 2 or not so i'll see in the next video
06:59 - till then bye take care