00:00 - so in the series of learning programming
00:01 - in c we are discussing pointers in C so
00:03 - far we have discussed basics of pointers
00:06 - as well as pointer arithmetic like what
00:08 - kind of arithmetic operations we can
00:09 - perform on pointer addition subtraction
00:11 - and increment and decrement we are left
00:13 - with one operation that is comparison of
00:15 - two pointers that also we discuss but
00:17 - before that in this video I'm going to
00:19 - discuss a technical question this is
00:21 - this type of questions are very
00:22 - important and these are these questions
00:24 - are very tricky also very simple but
00:26 - very tricky if you get see these kind of
00:29 - question questions when you combine this
00:31 - this increment decrement operator as
00:33 - well as this indirection operator so
00:35 - this these type of questions are very
00:36 - tricky generally asked in interviews so
00:39 - these are very simple you have to just
00:41 - concentrate and if you know the working
00:43 - of this increment decrement operator and
00:45 - indirection operator as well as their
00:48 - precedency and associativity that we
00:50 - have discussed in the previous videos so
00:52 - you can check out those videos first
00:53 - right then you will easily get it there
00:56 - is nothing much in this these are not so
00:58 - tough right yeah but but little bit
01:00 - tricky questions these are so first of
01:02 - we'll discuss this question right we'll
01:04 - see what output you are getting and how
01:06 - you are getting that output and after
01:07 - that I'll give you one question for your
01:09 - assignment you have to try that question
01:10 - at your own and also you'll see
01:12 - practical right I'll show you this code
01:14 - on my laptop also on BS coordinator so
01:17 - now let's discuss this problem here we
01:18 - have one array these are the elements in
01:20 - this array two pointers I have p and Q
01:22 - in P I have initialized p is equal to a
01:25 - a is name of array and name of array is
01:26 - containing Base address of aray suppose
01:28 - Base address I'm taking 100
01:30 - so next element would be at 104 108 like
01:33 - this because integer I'm taking that uh
01:36 - will take four bytes right so in a in P
01:39 - we have now 100 so now p is pointing to
01:41 - here the first element right so now at
01:44 - first if you will print print a
01:45 - percentage d s p s p means p is IND
01:48 - Direction operator here here it is not
01:50 - IND Direction operator because here we
01:51 - are declaring
01:53 - pointers but in declaration it is not
01:55 - acting as interaction pointer after that
01:57 - if you will use here like estri and
01:59 - pointer name
02:00 - at at that time it is acting as D
02:03 - referencing operator or IND Direction
02:04 - operator and it means it will give value
02:06 - at this address so in P we have 100
02:09 - value at 100 is 10 so this line this
02:11 - line will give you 10 right so first you
02:15 - will get answer 10 now second line here
02:18 - I'm printing three times this see this
02:20 - is very important so now
02:24 - see here we are having operators like
02:27 - this operator plus plus increment
02:28 - operator as well as IND Direction
02:30 - operator right and these operators are
02:34 - having what associativity right to
02:38 - left so they'll be executed from they'll
02:41 - start executing from this this side
02:44 - right to left so first of all this would
02:45 - be executed right so now see first is
02:50 - estri Plus+ P now first of all this
02:53 - would be executed one we have s++ P so
02:58 - this would be executed this is
03:00 - pre-increment pre-increment mean first
03:02 - of all the value would be modified in P
03:04 - I have 100 increment means now p is
03:08 - pointing to here now in P we have 1 Z 4
03:12 - p is not pointing to this right because
03:15 - it is pre-increment and now
03:17 - estri this one now estri means whatever
03:20 - the value at this address 104 we have
03:22 - what value 11 so it will give you 11 so
03:26 - it will give you
03:28 - 11 now the
03:30 - this one now here we have EST
03:34 - p++ right so now this is what post
03:39 - increment so first the original value it
03:42 - will return the original value whatever
03:44 - the value in P original value in P is
03:46 - now
03:47 - 104 and now it will increment so now p
03:52 - is pointing to here now in P we have
03:55 - 108 right but EST at 104 estri operation
03:59 - would would be applied here means in
04:01 - Direction operator would be applied here
04:02 - so value at 104 is 11 so it will also
04:05 - give you
04:06 - 11 right now p is pointing to here now
04:10 - see yeah this this this thing is very
04:12 - important now EST p is in bracket and
04:15 - now we have
04:17 - Plus+ so now it will brackets are having
04:20 - higher precedence so first of all this
04:22 - would be executed not this increment
04:25 - operator this you need to take care now
04:27 - it will return what estri
04:30 - P first this would be executed now estri
04:33 - p p in P we have
04:35 - 108 whatever value
04:37 - at8 it will return that value 108 we
04:43 - have minus1 so it will return
04:48 - minus1 because it is post increment
04:51 - first of all it will return the value
04:53 - whatever there at p and now it will
04:56 - increment the value not the address
05:00 - this you need to take care at this now
05:03 - we have What minus one we have so now
05:06 - this Plus+ would be applied to this
05:09 - value not this pointer because we are
05:13 - putting this in bracket so now here
05:15 - value becomes
05:16 - zero this thing is very
05:19 - important I hope this is clear to you so
05:22 - now here at the place of minus1 we have
05:24 - zero and it will return
05:26 - minus1 right but now and p is still
05:30 - pointing to here see we haven't we
05:31 - haven't done anything with p with this
05:33 - address because Plus+ is applied to this
05:36 - value now not to the pointer so now if
05:39 - you will after this line if you will
05:41 - print s p so what value it will print in
05:45 - P we have 108 and at one8 we have now
05:47 - zero so it will return zero right we
05:51 - have no more minus one here we have at
05:53 - the place of minus1 we have now
05:55 - zero right minus one is no more here in
05:59 - Array
06:01 - right but here it will give minus one
06:04 - now next is Q is equal to p + 3 now Q is
06:07 - a pointer p + 3 p + 3 means in pointer
06:10 - we are adding three it means P pointer
06:14 - would be you know incremented we will
06:16 - move forward three position so 1 2 3 so
06:20 - in Q whatever the value one 1 0 to what
06:23 - what is the address 120 that would be
06:25 - stored right so now Q is pointing to
06:28 - here
06:30 - now we are printing estri Q minus 3
06:34 - right estri Q minus 3 obviously estri is
06:38 - having higher precedence than this
06:40 - subtraction operation so first of all
06:42 - this would be executed whatever the
06:44 - value at Q 120 what is the value of 5 5
06:47 - - 3 that is 2 so it will give you
06:51 - 2 now next is this
06:53 - one so now next s minus- p + 5
07:00 - now here also rather than plus these are
07:03 - having higher precedence but both are
07:05 - having same precedence so associativity
07:07 - would be right to left so first of all
07:09 - right to left means when we once we move
07:11 - right to left this operator will come
07:12 - first so pre decrement would be executed
07:17 - first now it is pre decrement so now P
07:19 - first of all would be
07:21 - decremented so 108 but now after
07:25 - decrement p is pointing to here so now
07:27 - in P I have 104
07:30 - now whatever the value at 104 s would be
07:33 - this direction operator would be applied
07:35 - y value is
07:36 - 11 and plus 5 now in 11 we are going to
07:40 - plus 5 so it will give you what 16 so it
07:43 - will give you
07:45 - 16 right now this value SRI P plus SRI Q
07:51 - obviously s are having higher precedence
07:53 - Than This plus so you can do it right to
07:56 - left also or left to right because
07:58 - obviously you have to do plus one only
07:59 - so now s q q is pointing to here s q is
08:04 - 5 plus now p is pointing to 104 here 11
08:09 - 11 + 5 is 16 so it will give you 16 so
08:14 - this output you will get or let me show
08:17 - you practically whether you are getting
08:19 - this output or not let let me write down
08:21 - this code on my vs code editor but
08:23 - before that one assignment for you right
08:26 - one question so this is question for you
08:29 - please dry run this program first don't
08:32 - just jump on your laptop and just try to
08:35 - write down this code and see what output
08:36 - you are getting and after that you
08:37 - understand yeah how we are getting that
08:39 - output no that's not correct way if you
08:40 - want to learn if you want to know get
08:42 - clear with this
08:44 - concept A don't touch your laptop first
08:47 - just note down this question on your you
08:50 - know maybe notebook or any on anywhere
08:52 - any paper and dry on this one check what
08:55 - output you will get here
08:57 - right then after getting the output then
09:01 - run it on your laptop and see the output
09:04 - you are getting is same or not or if not
09:06 - then again check why you are not getting
09:08 - that output and if you not still not
09:10 - getting then you can ask me in comment
09:11 - box right so I I guess you you can take
09:15 - the screenshot and you can just note it
09:16 - down right now let me show you practical
09:19 - whatever we have discussed the question
09:21 - we have discussed here in this video
09:23 - right so now see this is the question we
09:25 - have this is the array two pointer we
09:27 - have p and Q in P I have of a and this
09:30 - is you want to print same that we have
09:32 - discussed on the Whiteboard right now
09:35 - let me show you the output let me run it
09:38 - whether you are getting the same output
09:39 - that we have discussed or not
09:44 - C see first print F should give 10
09:48 - obviously a p we are printing in next we
09:50 - are getting minus1 11 11 right and that
09:53 - that's exactly we have discussed right
09:56 - next q is equal to p + 3 and and now
09:59 - star Q - 3 that is giving you 2 5 - 3
10:03 - that is 2 next is giving you 16 and this
10:06 - line is also giving you 16 I hope you
10:08 - are get getting because we have
10:10 - discussed this right and now you're
10:13 - getting the same output whatever we have
10:14 - discussed so now I have given you an
10:16 - assignment also you have to write at
10:18 - your own and then run on your laptop and
10:20 - see you are getting the correct output
10:22 - or not right and see if you have any
10:25 - doubt like if you're not getting see
10:27 - after this line suppose print three
10:29 - times I'm printing this right so if you
10:32 - are confused like after this line where
10:34 - the P would be pointing so after that
10:35 - simply you can
10:37 - print print
10:39 - F percentage D the
10:42 - value like s p what value you are
10:46 - getting in this array and you will get
10:48 - that pointer is pointing to at at that
10:50 - location right now right see here you
10:53 - can check
10:54 - this okay let me try run this sorry let
10:58 - me run this again again see after this
11:01 - line we are getting zero after this line
11:04 - in P we are getting zero but if now you
11:07 - will say that Z we don't have zero in
11:09 - this array so this is not correct why
11:12 - you are getting zero because here here
11:16 - after executing this
11:18 - thing it it is giving you minus one
11:21 - original value but now minus one would
11:23 - become zero that I have told you and now
11:26 - after that if you will print a p p is
11:29 - pointing to here minus one only but
11:30 - there is no minus one in Array now we
11:33 - have zero now at the place of minus one
11:35 - that is why it is printing zero so now p
11:38 - is pointing to at this location but here
11:40 - we have zero so if you have any doubt
11:42 - you can also you can just print the
11:45 - address right at starting you can print
11:48 - the address in uh know that unsign
11:51 - integer form and in anywhere between the
11:54 - program you can just print the address
11:55 - so that you will get where pointer p is
11:58 - you know pointing what address in P we
12:00 - have if you have any doubt right so I
12:03 - guess that's it for this video now so
12:06 - that's it for this video now I'll see
12:07 - you now in the next video till then
12:09 - bye-bye take care