00:00 - hey everyone I hope you are safe and
00:02 - doing good so in the series of learning
00:03 - C++ programming language in the previous
00:05 - video we have seen one coding exercise
00:07 - on recursion right so this is same one
00:09 - more exercise we'll discuss on Rion in
00:11 - this video but before that let me ask
00:12 - you one question I'll give you two
00:14 - option suppose one option is today I'm
00:17 - going to give you 10 CR rupees second
00:19 - option is today I'll give you one rupee
00:21 - only but that one R rupee would be
00:23 - doubled every
00:25 - day whenever you wake up it would be
00:27 - doubled so which option you will choose
00:30 - let me know in comment section So based
00:32 - on this I mean see let's see one coding
00:34 - exercise the exercise is you have to
00:37 - calculate the total amount of money that
00:39 - would be accumulated if you start with 1
00:43 - rupe and double it every day for n
00:47 - number of days this n number of days
00:49 - user will enter how many number of days
00:51 - at first day you have one rupe and that
00:53 - would be doubled for n number of days so
00:55 - after n number of days how much money
00:56 - you will
00:57 - have this is the thing you need to you
01:00 - know calculate with recursion using
01:01 - recursion you have to solve this
01:03 - exercise right like at day one I have 1
01:07 - rupee right then day
01:12 - one then at day two it would be two then
01:15 - at day three it would be doubled that is
01:17 - four at day four we have number of
01:21 - rupees I mean the amount is eight then
01:23 - fifth amount is 16 something like this
01:26 - and if number of days are suppose 10 so
01:29 - after 10 10 days how much money you will
01:31 - have or after 30 days how much money you
01:32 - will have this you need to calculate
01:35 - right using recursion so pause this
01:37 - video if you got the problem and try
01:38 - this out and if you didn't get this let
01:41 - me just give you one simple hint those
01:43 - who didn't get it so suppose after 10
01:47 - days after 10
01:50 - days you want to find out so if you have
01:54 - the
01:55 - money which
01:57 - is on day nine
02:00 - if you have that money you can
02:02 - simply multiply this by two right to
02:06 - find out what money you will have at day
02:09 - nine if you have if you know the
02:12 - money that you will have on Eighth Day
02:14 - after Eighth Day if you have that thing
02:16 - you can simply double it and you will
02:18 - get whatever the money at Day N right so
02:21 - try to think something like this so see
02:25 - this is obviously what reent here is one
02:28 - function again same function function
02:30 - I'm calling and into two see the
02:32 - function Day N the same function I'm
02:35 - calling and into two so this is kind
02:37 - ofion right and when to stop at day
02:42 - one at day one because I have only money
02:45 - is what one
02:47 - rupee so if
02:49 - if n is equal to is equal to 1 I mean n
02:52 - is here indicate number of days so
02:54 - number of days is one so n is equal toal
02:56 - to one simply
02:58 - return one this is the base condition
03:01 - otherwise this this is the base case
03:02 - this is the recursive case try this out
03:05 - now pause the video and try this out so
03:07 - I hope you have done this right int Main
03:11 - and U I'm just calling like
03:16 - or so let's take a variable in total
03:18 - money and we are calling a function
03:20 - suppose we have a function name let's
03:22 - take money double or double money
03:25 - something like this any function name
03:26 - you can take and here we are passing
03:27 - what number of days obviously we pass
03:30 - number of days because the money because
03:32 - here is at starting we have only one
03:34 - rupe that is why no need to pass the
03:36 - money if suppose I say at uh day one you
03:39 - have 10 Rupees and for 15 days you have
03:41 - to double like 10 Rupees at day two it
03:43 - will become 20 right in that case you
03:45 - have to pass in this function the money
03:47 - you have at one day I mean first day but
03:50 - here we have only one rupee so no need
03:52 - to pass that thing so money double here
03:54 - simply we are passing int n int N means
03:56 - number of days right so let's please uh
04:00 - you know ask from the user to enter
04:01 - number of
04:10 - days number of days and simply pass
04:12 - number of days here in money double in
04:16 - this return zero and whatever it will
04:19 - return obviously we will store that in a
04:22 - variable total money and we will simply
04:24 - print that total money and the name is
04:29 - money
04:31 - double and we will simply print whatever
04:34 - the total money
04:38 - is that's it but obviously you have to
04:40 - Define that function first
04:45 - right so what you are going to return in
04:49 - this
04:50 - function return just two into whatever
04:55 - the money you will have on the previous
04:58 - day so number of days are X so on X - 1
05:01 - day so let's call this function money
05:03 - double for X - 1 that's
05:08 - it I hope you got this but obviously
05:10 - base case that is crucial if this uh xal
05:14 - to equal to
05:17 - one simply return one because one I mean
05:21 - Day first we have only one rupe right so
05:24 - it on one
05:28 - only okay there is an error you have to
05:30 - First
05:32 - Take This variable as well now int n
05:35 - before using it okay here see theor
05:40 - what's silly mistake I'm doing now while
05:42 - calling obviously you will not write
05:44 - down that data type of uh the argument
05:47 - you're are passing simply the argument
05:48 - will pass
05:50 - right so silly mistakes let's run this
05:55 - and see enter number of days suppose I'm
05:57 - entering number of days five
06:00 - so after five uh after fifth day I'll
06:03 - have 16 rupees and that's correct if I
06:06 - run this again suppose if I run this now
06:10 - see you see here after 15 days you will
06:14 - have this much
06:15 - money after 30 days see after 15 days
06:19 - you have only 16,000 rupees only let's
06:22 - see after 30 days what you think how
06:25 - much money you will have see this is
06:28 - around 5 cor I guess no it's actually 53
06:32 - CR now which option you will choose
06:34 - first or second so I this is you know
06:37 - power of
06:39 - compounding those who are in stock
06:40 - market I mean uh those who knows this
06:43 - what is compounding and
06:45 - all so I I hope you got this logic right
06:48 - you can dry run this just write down
06:51 - this on a piece of paper and dry run
06:52 - this program right see try to dry don't
06:55 - just underestimate the power of dry in
06:57 - the program if you are beginner in the
06:59 - this case because this would really help
07:02 - you to you know build the logic to help
07:05 - you understand what is actually
07:06 - happening how this program is working
07:09 - not just you get the output and that's
07:11 - it no dry in every program if you are a
07:14 - beginner especially right so I guess
07:17 - that's it for this video if you have any
07:19 - more doubt you can ask me in comment
07:21 - section or if you want to upload more
07:22 - such kind of videos like on recurs and
07:24 - more coding exercises you can just let
07:26 - me know in comment section otherwise
07:28 - from the next video we are going to
07:29 - start pointers and reference and after
07:31 - that we will be starting oops Concept in
07:33 - C++ right so that's it for this video
07:36 - now I'll see you in the next video bye
07:37 - take care