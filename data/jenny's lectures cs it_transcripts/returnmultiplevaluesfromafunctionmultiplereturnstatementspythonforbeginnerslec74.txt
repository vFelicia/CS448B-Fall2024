00:00 - hey everyone I hope you all are safe and
00:02 - doing good so in the series of learning
00:03 - Python programming language in the
00:05 - previous video we have seen functions
00:06 - without on value means what is the
00:08 - return statement how to write a return
00:10 - statement with a function how a function
00:11 - is going to return a value but single
00:14 - value right in the previous video we
00:16 - have to take an example in that case the
00:18 - function was returning a single value
00:20 - right now if you want to return multiple
00:24 - values then within the same a single
00:27 - return statement we can return the
00:30 - function can return multiple values as
00:32 - well
00:33 - and there are multiple methods for that
00:35 - like using Tuple we can return using
00:37 - object using list using different
00:39 - different variables so all these methods
00:42 - will be discussing in this video right
00:43 - let's take a simple example
00:46 - we are going to uh you know find out
00:48 - mean mode and median right so let me
00:52 - just take this example so at first let's
00:55 - let's create a new file here multiple
00:59 - return values Dot py
01:01 - right so I am taking a function
01:05 - name I'm taking like mean
01:09 - median underscore mode right or any name
01:12 - you can take and in this case I am
01:15 - passing a list
01:17 - the data in the form of a list so see
01:20 - you can pass a list as well
01:22 - so suppose I am passing like something
01:24 - like this this less time passing and I
01:26 - want to calculate mean median as well as
01:29 - more from this list right so this is our
01:31 - function now we are going to Define this
01:34 - function define Def and
01:37 - same name
01:39 - we are going to take
01:40 - mean median and mode
01:43 - so let's take a variable list one
01:47 - right now here
01:49 - we have a statistics module here rather
01:52 - than just writing then all the formula
01:54 - and all for mean median and more just
01:56 - import that statistic module from Python
01:58 - language and there we have built-in
02:00 - function for main median and mode so
02:05 - I'm going to
02:07 - import
02:09 - this Statistics module because our motto
02:12 - is 2
02:13 - you know get you familiar with multiple
02:16 - return values rather than finding out
02:18 - how to find out mean median and more
02:20 - rather than the formulas right so we are
02:22 - not going to write down any formula we
02:23 - will just
02:25 - and simple in simple return statement
02:27 - what simply we will write
02:30 - return
02:32 - module name first statistics dot the
02:36 - function name see as you can see we have
02:38 - mode mean and median right so let's call
02:41 - Main first and pass
02:44 - the data data in is in list one
02:48 - now comma then same statistics Dot
02:53 - next is median and just pass
02:56 - list one then again comma
02:59 - statistics Dot
03:01 - mode
03:03 - and same list one
03:09 - right
03:12 - see in a single return statement we are
03:14 - returning three values
03:17 - we are writing
03:18 - these so this mean median mode are
03:21 - built-in functions okay
03:24 - now
03:27 - while returning now whatever the mean
03:29 - median and more three values this this
03:32 - function will return to the caller
03:33 - caller is this function mean median mode
03:35 - the function name is mean median mode or
03:37 - you can take any function name right and
03:40 - we are passing a list here so if if you
03:43 - simply
03:44 - print
03:47 - here
03:49 - then
03:51 - this this data will be assigned to a
03:55 - tuple here three values would be
03:58 - returned to the caller and that would be
03:59 - assigned in a tuple right in the form of
04:02 - Tuple we can fetch multiple values
04:06 - multiple return values okay let's run
04:08 - this
04:09 - C
04:11 - this is mean this is median this is mode
04:13 - and see as you can see in the form of
04:15 - Tuple we are getting multiple values so
04:17 - one way is this in the form of list also
04:20 - we can fetch multiple values so here you
04:24 - just have to change return and
04:27 - list the data we are writing in
04:31 - square brackets
04:32 - so just
04:36 - square bracket here
04:37 - now if you print this then let's run
04:39 - this see now if you are getting this
04:42 - multiple values in the form of a list or
04:45 - see rather than just printing if suppose
04:47 - if you think that I will take only
04:53 - one variable result is equal to this so
04:55 - is it possible that only one variable we
04:58 - can fetch all the three values yes it is
05:00 - possible because here in return We Are
05:03 - writing these square brackets so in the
05:05 - form of list it it will return okay now
05:07 - it is not printing anything because we
05:09 - are not printing this
05:12 - result
05:17 - let's run this
05:19 - C
05:21 - in the form of list we are getting three
05:22 - values all right one more method is what
05:25 - rather than one variable we can take
05:27 - three variables here like maybe I am
05:29 - taking a comma B comma c three variables
05:33 - so first is first it will return mean
05:37 - okay and rather than list let's just
05:40 - take simple
05:41 - nothing we are putting no no square
05:44 - brackets or nothing else so first it
05:46 - will return mean so mean would be
05:47 - assigned to a then median would be
05:49 - assigned to variable B and mode would be
05:50 - assigned to variable C so here what we
05:53 - can print like suppose using F string I
05:56 - am printing
05:57 - first is
05:58 - like mean is and mean is in variable a
06:03 - then
06:06 - median is
06:08 - using formatted string we can
06:16 - crash to the values so mean is a b and c
06:21 - okay let's run this
06:23 - c mean is this median is 3 mode is 3.
06:27 - and if you want to print this in
06:28 - different different line then you can
06:29 - write down here you can put a slash in
06:32 - here right slash n
06:35 - and here also
06:37 - slashing
06:40 - see
06:42 - okay
06:43 - so like this within a single return
06:45 - statement the function can return
06:48 - multiple values it's not like that a
06:51 - single statement can return only one
06:52 - value okay now one point the return
06:54 - statement is like its end of execution
06:58 - of this ah function so after this return
07:01 - if you write any statement suppose after
07:04 - this return I want to print
07:13 - end of function
07:15 - so what do you think this line would be
07:18 - printed or not let's run this
07:21 - C only mean median and mode this line
07:23 - would not be printed because once the
07:25 - control will encounter this return
07:27 - statement means
07:28 - end of the function whatever you will
07:31 - write after this return within the
07:33 - function those statements would be
07:35 - ignored and not to be executed okay now
07:38 - one more thing within a single function
07:40 - we can use multiple return statement
07:42 - here we are writing only one return
07:44 - statement but we can use multiple return
07:46 - statement as well okay let's take one
07:49 - more example
07:52 - suppose uh same I am taking that example
07:55 - that name first name and last name
07:58 - formatted name or you can take simple
08:00 - addition also that example
08:02 - So Def and we are defining a function
08:05 - add and here
08:07 - two arguments right
08:10 - so I want to ask from the user enter two
08:14 - variables A and B if user enter both the
08:17 - variables 0 then I want to return
08:20 - none
08:21 - because 0 means no sum
08:23 - this is an example so with the help of
08:26 - if else we can use multiple return
08:28 - statement one way is this so if I am
08:31 - putting a condition a is equal to is
08:33 - equal to 0 and
08:34 - b equal to equal to 0 both are 0 then
08:38 - simply
08:40 - return nothing else
08:46 - return
08:47 - a plus b
08:49 - okay
08:51 - now let's first of all
08:54 - ask from the user so in variable one
08:58 - using input function we will ask from
09:00 - the user so with input function whatever
09:02 - we will enter that would be string so
09:04 - first convert
09:07 - that into
09:08 - type cast into
09:10 - int here only
09:15 - now just call the function add and pass
09:18 - variable 1 comma
09:22 - variable
09:23 - 2.
09:25 - and whatever it will return
09:28 - suppose I am storing that into result
09:31 - and we are just printing
09:34 - result
09:35 - let's run this
09:37 - see enter first variable I'm entering 0
09:40 - second is again 0.
09:43 - see now return it is returning none
09:45 - because
09:46 - if both variables are 0 and 0 means it
09:49 - will enter into this if block and here I
09:51 - am writing only return
09:53 - no return value it means it will return
09:56 - none or if you want to print here
09:58 - something that also fine like uh
10:04 - some message also if you want to print
10:07 - you can write down here so let's run the
10:09 - C again and first variable 0 0. now you
10:13 - have entered 0 for both variables
10:15 - right so one return statement and second
10:18 - return statement let's run this again
10:20 - and if I enter one is one variable is 16
10:24 - and another variable is
10:26 - suppose 0. now it will return the sum
10:29 - 16.
10:31 - because if both variables are 0 then
10:33 - only it will enter here because we are
10:36 - putting a condition logical and and
10:38 - means to enter here both the condition
10:41 - should be true but here only 1 is 0
10:43 - other is 16 so it will run 16 plus 0 16.
10:48 - so this is one more simple example just
10:51 - to get you familiar with like we can use
10:53 - multiple return statements as well
10:55 - within a single function
10:57 - and using a single return statement we
11:00 - can return multiple values these two are
11:02 - different different concepts so I hope
11:04 - you got this thing is also possible and
11:06 - how to use this thing right
11:08 - now one exercise for you is in the
11:10 - previous video we have seen one example
11:11 - that formatting your name just to
11:14 - convert your first name and last name in
11:16 - title Haze right so there you have to
11:19 - put a condition in defining that
11:21 - function if
11:22 - the both the name first name and last
11:25 - name is none you are providing an empty
11:27 - string right nothing you are providing
11:30 - for first name and second name then it
11:32 - should return nothing or it should print
11:34 - some message like please enter valid
11:36 - input or if you are entering first name
11:39 - and last name like Jenny last name is
11:41 - khatri then it will return the expected
11:44 - output like Jennifer in title case so
11:47 - this is for your exercise you can write
11:48 - down this thing the logic in the comment
11:50 - section right now that's it for this
11:52 - video and I will see the next video till
11:54 - then bye take care