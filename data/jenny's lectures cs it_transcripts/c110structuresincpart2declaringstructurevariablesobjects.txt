00:00 - so in the series of learning c
00:02 - programming we are discussing structures
00:03 - in the previous video i have discussed
00:05 - like what is a structure how to declare
00:07 - a structure right and why we need
00:08 - structure that is like introduction part
00:11 - of structure right in this video we'll
00:13 - discuss how to declare variables see
00:16 - structure is what i have told you its a
00:18 - user defined data type
00:21 - if it is a data type then obviously we
00:23 - can declare our variables of that data
00:25 - type like integer data type so if you
00:27 - want to declare a variable if you want
00:29 - to take a variable of type integer then
00:31 - how you will declare
00:32 - just find out the
00:34 - write down in and name of the variable
00:36 - that's it
00:37 - so structure is also a variable like
00:39 - float so float name of the variable
00:42 - character care name of the variable this
00:44 - is how we can declare variables of these
00:45 - data types so structure is also a data
00:48 - type but it is user defined so obviously
00:50 - we can take variables
00:52 - of that data type of structure data type
00:54 - but how you will declare those
00:56 - variables right that will discuss in
00:59 - this video
01:00 - with proper example right and those
01:02 - variables are also known as objects of
01:04 - structure but before proceeding just i
01:07 - just want to write down some example of
01:10 - structures like we have what we have
01:12 - discussed in previous video and you are
01:14 - supposed to tell me these are valid or
01:16 - invalid you can write down the answer in
01:17 - the comment box right if you have
01:19 - watched the previous video then you can
01:21 - easily tell
01:22 - like these structures are valid or
01:24 - invalid
01:28 - these are four examples like one the
01:31 - second third and fourth so you are
01:33 - supposed to tell me this declaration of
01:35 - structure
01:36 - is valid or invalid and if invalid then
01:39 - why it is invalid right
01:41 - now i will discuss how to
01:43 - declare the variables of structure so
01:45 - see here i am going to take the previous
01:47 - one that we have discussed in previous
01:48 - video like struct struct student
01:51 - see struct is keyword student is what
01:54 - tag
01:55 - structure tag and this is like you know
01:58 - optional i'll tell you in detail in this
02:00 - video i have taken three members these
02:02 - are members of the structure problem by
02:05 - marks and name after we are supposed to
02:07 - write down semicolon right
02:09 - now
02:11 - till now no memory has been allocated to
02:13 - this structure because this is just a
02:15 - data type this struct student this
02:17 - completed just a data type so see if i
02:20 - write in
02:21 - main function
02:24 - if you want to take a variable of type
02:26 - integer how you will write
02:27 - in
02:28 - a how much memory would be located four
02:30 - bytes in some compiler two bytes right
02:33 - if you want to you know check out in
02:34 - your compiling your machine how much
02:36 - memory then you can just write on printf
02:38 - in main you can write down printf size
02:40 - of like size of operator
02:42 - sizeof and in bracket
02:44 - int
02:46 - it will give the size of in data type in
02:48 - your
02:49 - system right
02:50 - now if i want to declare a variable of
02:53 - this data type then how you will write
02:55 - first of all data type the name of that
02:58 - variable so the data type here is what
03:00 - struct student this complete is data
03:02 - type
03:03 - it's not like
03:05 - many students do this mistake they
03:06 - simply write struct and they think that
03:08 - this is data type
03:09 - so they only write struct and the name
03:12 - of the variable like suppose i'm
03:13 - thinking s this is wrong
03:15 - this complete is data type stuck student
03:20 - now name of the variable suppose i am
03:21 - taking name of the variable s
03:24 - this is how you can declare the
03:25 - variables of structure or this s is also
03:28 - known as object of this structure using
03:30 - this object only we can access these
03:32 - members how we will access that also
03:34 - discuss in the next video with a proper
03:36 - example proper program right so now
03:39 - at this time the memory has been
03:40 - allocated
03:42 - how much memory to this s to this object
03:44 - to the say how much memory
03:46 - four bytes to this a s how much memory
03:49 - because the data type of this is struct
03:52 - student now stock student is user
03:54 - defined at a time so how much memory you
03:56 - just have to
03:58 - calculate the memory required for these
04:01 - structure members for roll number four
04:04 - bytes because it is integer for marks it
04:06 - is float four bytes for this
04:08 - 20 bytes so how much memory would be
04:10 - allocated 28 bytes
04:14 - to this s if you want to check out
04:16 - simply write down printf size of this
04:18 - structure is what percentage d
04:20 - size of in the bracket you can write
04:22 - down s
04:23 - or you can write down size of
04:25 - struct student the complete word stuck
04:28 - student
04:29 - it will give
04:31 - whatever the size has been allocated how
04:33 - many bytes right
04:34 - so this is how declaration of variable
04:36 - this is one method
04:38 - second method is what what in main you
04:40 - can write down this thing if you don't
04:42 - want to write down this thing
04:45 - then while declaring this structure only
04:49 - while defining this this data type
04:51 - here only you can write down the name of
04:53 - the variable like i am taking one
04:55 - variable s
04:58 - so no need to write down here in the
05:00 - main
05:01 - means this s is what variable of data
05:03 - type struct student or you can say this
05:05 - is object of the structure
05:07 - this is second way but we generally
05:10 - recommend like we generally write down
05:12 - this method stop student and s
05:15 - we define we take the variables in main
05:17 - function
05:18 - by writing this thing rather than
05:20 - writing here
05:21 - right
05:23 - so now if you want to take two or three
05:25 - variables of this type here only you can
05:27 - write down s1 s2 suppose two variables i
05:29 - want to take s1 s2
05:31 - 3 s1 s2 s3
05:34 - that's it
05:35 - if you want to take 60 students like
05:37 - information of 60 students i want to
05:39 - store it's not like that you will take s
05:40 - 1 s 2 s 3 up to s 60 60 variables no
05:43 - that is not a good idea so i will take
05:45 - array
05:47 - array of these structure variable
05:49 - that is also possible so that also will
05:51 - discuss this concept also we will
05:52 - discuss
05:53 - for this video i guess it is clearly you
05:55 - to clear to you like how to declare
05:57 - variables of this structure
05:59 - and this student one more point is what
06:01 - very important point is what this
06:03 - student this structure the tag of the
06:05 - structure or the name of the structure
06:06 - is structure is optional so you can just
06:10 - remove this thing
06:14 - and this is also fine
06:17 - here also now if you write down this we
06:19 - have
06:20 - declared two object of structure s1 and
06:22 - s2 right
06:24 - so you can omit this thing but the
06:26 - drawback of this point is what
06:29 - i hope
06:30 - in
06:31 - some students got it
06:33 - here because at some point of time in
06:35 - our program i want to take more
06:37 - variables
06:38 - right
06:39 - anywhere so now it is not possible to
06:42 - take to declare variables of this data
06:44 - type
06:45 - in the main function anywhere in the
06:46 - program why because we don't have that
06:49 - tag
06:51 - while writing we write
06:53 - struct keyword then the
06:56 - tag structure tag and then the object
06:59 - name or the variable name but here we
07:02 - haven't written any structure tag or the
07:04 - name of the structure so that is why it
07:06 - is not possible
07:08 - to declare variable by this method
07:11 - if you write down this thing if you
07:13 - declare if you define the structure data
07:16 - type
07:16 - by writing this thing if you omit this
07:19 - structure tag
07:21 - right so that is a drawback
07:23 - fine that is why we write here stuck
07:26 - like
07:26 - name of that structure like as you can
07:28 - see tag of the structure
07:31 - and now you can write down here like
07:32 - struct student
07:35 - and i want to take a variable more s3
07:38 - that is fine
07:39 - s1 is 2 here ok s3 three objects are we
07:42 - have created three variables we have
07:44 - created
07:45 - right now
07:46 - see
07:48 - if this is the case uh suppose i am
07:50 - taking here only like
07:55 - s1 comma
07:57 - s2
07:59 - so now for this s1 object separate
08:03 - this memory would be allocated for s2
08:05 - separate memory would be located for s1
08:08 - how much memory
08:09 - for roll number 4 bytes 4 marks four
08:11 - bytes four name 20 bytes
08:14 - same for s2
08:15 - 4 bytes 4 bytes
08:17 - 20 bytes 28 byte for s1 28 by 4 s2
08:21 - this is the case
08:23 - right even more variable then three
08:26 - for three variables separate
08:28 - memory would be located for s1 thus for
08:29 - s2 same for s3 28 bytes
08:33 - right
08:34 - so i guess the different different
08:35 - methods of declaring the variables are
08:37 - clear to you now so that's it for this
08:39 - video now in the next video we will see
08:42 - how we are going to initialize
08:44 - these objects how we are going to
08:46 - rationalize this structure see if you
08:47 - want to initialize this
08:49 - variable a what you will write
08:51 - is equal to any value integer value like
08:53 - 5 this is what compile time
08:54 - initialization if you want to initialize
08:56 - that runtime then just write take those
08:58 - printf and scanner but how you will
09:00 - initialize this s1 and s2 these are also
09:02 - variables of this struct student data
09:04 - type
09:05 - so how you will initialize these
09:07 - variables right
09:09 - and in that video also you will get how
09:10 - to access the members of the structure
09:14 - right how we are going to access if you
09:16 - want to store
09:18 - some value for s1 student like roll
09:20 - number one i want to store so if you
09:22 - write down here one that is incorrect
09:24 - because at this point of time no memory
09:26 - has been allocated to this data type so
09:28 - we cannot store any value if memory has
09:30 - not been allocated how you can store any
09:32 - value in this variable
09:34 - right so this would be wrong so now how
09:36 - you can
09:38 - store the values here and how you can
09:40 - access that information
09:42 - right that will see in the next video so
09:44 - now i'll see in the next video till then
09:46 - bye bye take care
09:53 - you