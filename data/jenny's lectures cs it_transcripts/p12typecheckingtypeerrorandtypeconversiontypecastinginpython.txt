00:00 - so in the series of learning python
00:02 - programming language in previous video
00:03 - we have seen what are some primitive
00:05 - data types in python like in float uh
00:09 - boolean and strings although there are
00:11 - many more data types like list range
00:13 - dictionaries
00:14 - and set many more types are there those
00:17 - also will be discussing one by one but
00:19 - basics generally we you know use these
00:20 - kind of data types more and more so
00:23 - these things these data types we have
00:24 - discussed in previous video okay how to
00:26 - use them and all
00:28 - now
00:29 - next thing is if you want to change one
00:32 - data type into another type one type to
00:35 - another type then can you do this thing
00:37 - in python yes we can do and this is
00:38 - known as type casting or type conversion
00:41 - as in c and c plus plus also we can do
00:43 - this thing right
00:45 - if there is an integer we can convert
00:47 - that to float we can convert that to
00:49 - string and vice versa and these kind of
00:51 - things we can do in python also that is
00:53 - known as type conversion or typecasting
00:54 - so this thing will see in this video
00:56 - okay
00:58 - type checking like how to check the type
01:00 - although we have discussed in previous
01:02 - video also like using type function we
01:04 - can do that thing
01:05 - but you will also see this thing and
01:07 - we'll see what is type conversion how to
01:09 - do type conversion type casting and all
01:11 - fine
01:12 - so here i'm uh adding a new file i'm
01:15 - creating a new file new file and just
01:19 - type
01:21 - casting type underscore casting dot p
01:24 - y
01:26 - let's see i
01:28 - have to calculate length of a string we
01:30 - have a len function like len and if i
01:33 - pass here
01:36 - uh jenny catherine
01:39 - so it will find out the length of this
01:42 - genica 3 and i am simply printing that
01:46 - length so just put this function into
01:48 - print function
01:50 - let's run this and see what output just
01:52 - right click on this and run type casting
01:54 - and it will give how many characters are
01:56 - there in this zenika 3 with a space 5 6
01:59 - 7 8 9 10 11 12. so it will give 12 see
02:01 - the length is 12
02:03 - okay it's an integer
02:06 - now suppose
02:07 - in length
02:10 - i am doing what
02:12 - i am passing
02:14 - this thing one two three four five
02:16 - what it will give what do you think
02:18 - let's run this and see it will be five
02:20 - ok fine
02:22 - if i write something like this just a
02:25 - number 1 2 3
02:26 - without these
02:28 - quotes
02:29 - at this time what it will give c it is a
02:32 - type error
02:34 - it is a type error
02:36 - object of type int has no len
02:40 - one two three four five it is an int
02:43 - okay obviously it is a class so it is a
02:45 - variable or you can see it's an object
02:47 - of type hint
02:48 - which is having no lend function lend
02:50 - function is used to calculate length of
02:51 - the strings only so if you pass out the
02:54 - wrong input
02:55 - it will be giving an error but it's a
02:57 - type error not any syntax error okay
02:59 - syntax is correct
03:01 - syntax of line function is correct len
03:03 - and simply in bracket whatever you know
03:05 - for the string you want to find out the
03:06 - length you can just put that thing here
03:08 - but here you are putting in so this is a
03:10 - type error okay
03:13 - same like if we have something like this
03:15 - if we have a
03:17 - you can say coffee machine
03:19 - so you can put here that coffee powder
03:22 - and
03:23 - whatever you want to put like milk and
03:25 - water and all
03:27 - so it will give you coffee but if you
03:30 - uh you know put any you can say curd
03:34 - and you wanna make lassi from that curd
03:36 - and butter
03:38 - so that that machine cannot do that will
03:40 - not work
03:41 - so that coffee machine is like a
03:42 - function
03:43 - so please
03:44 - give proper input
03:46 - the coffee powder and milk and water and
03:48 - all
03:49 - so for this land function also you have
03:51 - to give proper input input is string if
03:54 - you give wrong out wrong input in
03:57 - integer or anything else or a float
03:58 - number
03:59 - it is going to give error but that is
04:02 - type error
04:03 - fine
04:04 - now let's see okay i am giving proper
04:06 - input
04:08 - you can just put in these codes for
04:10 - single quotes that would be considered
04:11 - as string
04:13 - so let's take here i am writing my name
04:16 - jenny khatri
04:18 - and whatever this length
04:20 - that i'm not
04:22 - directly i'm not going to print
04:24 - i'm storing it into a length function
04:27 - sorry ln length variable
04:29 - and i am printing
04:33 - length
04:34 - it's okay it will give 12 fine but now i
04:37 - want to print this line complete line
04:39 - you your name
04:40 - has
04:42 - uh
04:43 - how many character
04:45 - 12 characters
04:46 - this thing
04:47 - so okay we know how to concatenate
04:49 - string we can concatenate your name has
04:52 - and then characters with a plus sign
04:54 - okay fine how you will do
04:57 - i will do like your
05:00 - name
05:00 - has
05:02 - this is a string
05:03 - then plus
05:05 - and then
05:06 - whatever length i'm just putting this
05:09 - then plus
05:10 - and
05:13 - characters
05:15 - what do you think will it work or not
05:18 - let's see
05:20 - let's run this and what it will give
05:23 - see
05:24 - i guess uh
05:26 - you know if you know the data types then
05:30 - here also
05:31 - it will give a type error can only
05:33 - concatenate str not into str
05:38 - so your name has this is a string
05:40 - characters
05:42 - in double quote this is a string but
05:44 - length
05:45 - this is what int
05:48 - length jenny ca3 will give 12 that is an
05:50 - integer so this length will have the
05:52 - number 12 that is an integer we cannot
05:54 - concatenate into a string
05:56 - so it is a type error
05:58 - so now how to solve this problem can we
06:01 - convert this length this integer value
06:03 - to string
06:05 - yes we can do
06:06 - how you can do
06:08 - just
06:08 - write down str
06:11 - in bracket you have to put
06:13 - length
06:14 - now this length it will take
06:16 - integer value but it will convert this
06:18 - function str length will convert it into
06:20 - string now it will work fine let's run
06:23 - this and see
06:24 - now see your name has 12 characters now
06:28 - you are able to concatenate
06:31 - so i hope you got this this is what type
06:32 - casting or type conversion
06:35 - how to check that i have already told
06:37 - you like you can check
06:41 - print
06:42 - and we have a function type
06:44 - and i want to print now i want to check
06:47 - the data type of this length variable so
06:50 - just do this thing now let's run this
06:52 - and now at this point of time this
06:54 - length is having of
06:56 - class
06:57 - int
06:58 - but if you do something like this i am
07:00 - writing like new underscore
07:04 - length equal to str
07:08 - length
07:09 - and after this i am
07:12 - finding out
07:17 - this data type of new length now let's
07:20 - run this and now at this point type it
07:22 - will give you str
07:24 - okay
07:25 - because you have converted okay this
07:27 - length to sdr for this for this line
07:30 - only we are not storing that value in
07:31 - any variable
07:33 - so for this thing it has been converted
07:35 - but after that if you just simply write
07:38 - print
07:40 - and if you want to want to check type l
07:42 - e and gts length
07:46 - then let's run this and what it will
07:47 - give c
07:48 - new length this for this print it is
07:51 - giving class str but for type length it
07:53 - is giving class hint
07:56 - for this line only it has converted but
07:57 - you haven't stored that converted string
08:00 - length into another thing still
08:02 - length variable is of pin type i hope
08:04 - you would have to convert
08:06 - so same we have something like this
08:09 - we have
08:11 - more functions also like
08:16 - int
08:19 - we have
08:20 - load
08:22 - we have
08:24 - str that we have seen see these triple
08:26 - quotes these are multiple line commands
08:28 - so these lines are comments now into
08:31 - this will convert something into int
08:33 - float will convert into float strv will
08:35 - convert into str
08:37 - okay now i hope you know how to check
08:40 - how to convert how to do type conversion
08:42 - how to check the type of you know these
08:45 - variables
08:47 - now i am suppose i am printing print
08:52 - 10 sorry print 10 plus 10
08:57 - what it will give
08:58 - these are integer whole basically you
09:00 - know simply will do addition and it will
09:02 - print
09:03 - 20.
09:06 - see
09:07 - but if i do print
09:10 - this thing
09:11 - i'm going to put these 10 and 10 in
09:14 - double quotes so at this time you will
09:16 - get 10 10 concatenation okay fine
09:19 - if i do something like this just convert
09:22 - this
09:23 - string 10 into integer how to convert
09:26 - write down this end function before this
09:29 - and in bracket
09:30 - this string
09:33 - then int
09:34 - and this thing now you have converted
09:37 - this both the 10 into integer at this
09:40 - point of time you will get 20. see now
09:42 - you are getting 20 because you have
09:43 - converted this string
09:46 - into int okay
09:49 - if i write something like this a is
09:51 - equal to
09:52 - or suppose i am writing
09:56 - print
09:58 - 10
09:59 - i'm writing 10
10:00 - plus
10:04 - this 10 it will give it because this is
10:06 - what integer this is what string
10:09 - so we can convert this into first of all
10:11 - into a float suppose you want to convert
10:13 - it into float so float
10:15 - 10
10:16 - and that's it now it will run and it
10:19 - will give you 20.0 although we haven't
10:22 - done any we haven't write any decimal
10:24 - point but you are converting it into
10:26 - float so automatically it will put a
10:29 - decimal sign and dot 0
10:32 - so 20 dot 0 so this is how you can
10:34 - convert these things
10:36 - but
10:37 - it is not correct see
10:39 - if i write name equal to
10:43 - jen
10:44 - and you want to do print
10:48 - 10
10:50 - 10 plus
10:52 - suppose you want to convert this
10:56 - name
10:57 - let's convert you think let's convert
10:58 - this name into end and then
11:00 - add 10 so both are in int so it will
11:04 - add these thing but this point of time
11:06 - you will get an error although you are
11:08 - getting for this 20 for this
11:10 - uh 20.0 but
11:12 - in line number 18 see this is line
11:15 - number 18
11:17 - it is giving an error value error this
11:19 - time value error
11:21 - invalid literal for ind
11:24 - for ind with base 10
11:27 - so this in this end
11:29 - this name you are giving this is invalid
11:31 - you cannot pass
11:33 - this thing
11:35 - it is not having base 10 see
11:38 - if i write name is equal to 1 2 3
11:41 - and then
11:43 - i do this thing yeah that will work fine
11:46 - it will give you 133
11:48 - this print will give you
11:51 - 133 let's just comment these
11:54 - line out
11:56 - and now let's run this
11:59 - now you can see it is giving you 133
12:01 - because now this
12:03 - name is having base 10 one two three oh
12:06 - it is decimal number so base 10
12:08 - but jenny was not having base 10 that is
12:10 - why it has given you value error okay
12:15 - so i guess now you know how what is type
12:17 - error when you get type error how to
12:19 - check type
12:21 - of the variable just to use type
12:23 - function and how to do type conversion
12:25 - or type casting in float and with the
12:27 - help of in float and str functions
12:30 - right
12:31 - now one assignment for you is one
12:33 - exercise for you is
12:34 - you have to take
12:36 - input from the user
12:38 - okay
12:39 - like two numbers you can take input from
12:41 - the user what is first number what is
12:43 - second number and then you have to add
12:46 - those two numbers
12:47 - okay this is for your assignment
12:49 - assignment so let's pause the video and
12:51 - do it right now
12:52 - okay so how many of you have written
12:55 - this kind of thing like we are taking
12:56 - two variables obviously i am taking
12:58 - first underscore number is equal to
12:59 - input function input enter first number
13:01 - then second number you can take variable
13:03 - m abc xyz also i'm just taking
13:06 - meaningful meaningful name second
13:07 - underscore number is input enter second
13:10 - number and just two sum is equal to
13:11 - first number plus second number and just
13:12 - print sum
13:14 - how many of you have done this thing
13:16 - let's see the answer in the first number
13:19 - suppose i'm entering 1 second number 2
13:22 - but it is
13:23 - the output is 1 2
13:25 - it's not 3
13:27 - so where is there
13:29 - see
13:30 - if you have remembered this input
13:32 - function whatever you will enter you you
13:35 - will take input from this input function
13:37 - that would be considered as
13:39 - string actually
13:40 - so this one is considered as string this
13:42 - two is also string and this plus is just
13:44 - concatenating these two strings one two
13:48 - so okay this is the problem how to
13:51 - you know you have to convert these
13:52 - numbers these things these strings now
13:55 - into integer
13:57 - so you can do this because you know how
13:59 - to convert this thing
14:01 - just convert this
14:03 - like int
14:05 - first number
14:07 - can break it right on first number int
14:10 - and here write down in bracket
14:13 - second number
14:14 - that's it now let's run this and this
14:17 - time see the output
14:19 - now it will ask you same first and first
14:23 - number and second number center first
14:24 - number one two
14:27 - at this time it is printing three
14:29 - because now you have converted i casted
14:31 - the numbers
14:33 - okay so this is the case i hope you got
14:35 - the solution of this exercise also okay
14:38 - so now in this video and the next video
14:40 - will also see one coding exercise for
14:42 - you guys that is little bit difficult
14:45 - there also you have to you know
14:47 - use all the things you have learned
14:50 - by far you know till this video you have
14:53 - learned
14:54 - okay so now in the next video till then
14:55 - bye take care