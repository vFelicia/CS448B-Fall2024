00:00 - so in the series of learning programming
00:01 - in CV have discussed theory about
00:03 - strings like what is string how to read
00:06 - a string scan if how to use scan a
00:08 - function get his function print F and
00:10 - put his function right in this video
00:11 - we'll see a simple program like how to
00:13 - read a string and how to print a string
00:16 - we'll see practically not on this
00:17 - whiteboard because we have discussed the
00:19 - synex of you know how to read a string
00:22 - how to print a string that we have
00:23 - discussed in previous video so in this
00:25 - video I'll show you the program on my
00:26 - laptop right you'll use both scanf and
00:29 - gets function printf and puts function
00:31 - and I'll show you everything like how
00:33 - you can use those function in different
00:34 - different ways so now let me create a
00:37 - file
00:40 - string first dot C
00:49 - right then we use header
00:52 - file okay main
00:57 - function
00:58 - sorry
01:01 - and here first of all we declare a
01:04 - string suppose I'm taking string as um
01:09 - name and here I'm taking 30
01:12 - characters
01:14 - right so first thing here you can
01:18 - initialize uh the string like I'm
01:20 - writing here
01:22 - gen that's it and I want to print using
01:27 - print F the format specifier is
01:29 - percentage s and you just have to
01:32 - provide here name of the string that is
01:35 - name and I guess that's it now we can
01:38 - run it and let's see what
01:41 - happens it should print genu on
01:44 - screen right see it is printing
01:47 - joury right and if here I'm writing here
01:54 - katri so let me just run this
01:57 - again see it is printing Jen katri
01:59 - because we are initializing here right
02:01 - so that is one way or you can initialize
02:03 - character by character right that is
02:05 - another way something like
02:07 - this like this but here we will provide
02:10 - explicitly what null character because
02:12 - string would always be ended with a null
02:15 - character and let me just save it and
02:18 - run
02:19 - it see it is printing joury right so I
02:23 - guess that is fine now we will
02:24 - initialize the string at run time I'm
02:26 - not initializing here I'm just using
02:29 - print a fun sorry scan a function
02:32 - right so at first it should ask
02:37 - enter
02:38 - name right and now I'm using
02:45 - scanner format specifier and here we
02:48 - don't need to put any for Loop and
02:49 - address of operators directly you can
02:51 - write down the name of the string it is
02:52 - pointer to the first um uh character of
02:56 - the string so I'm just using scan if and
03:00 - then I'm printing whatever I'll enter
03:01 - I'm just printing that thing so I guess
03:04 - that's it now let me just run it
03:11 - again see it is asking enter name and
03:15 - I'm entering j e n y and see it is
03:18 - printing Jenny right let me just run
03:22 - this
03:23 - again and here I want to print j e n y
03:27 - space kri now what output you will get
03:31 - only Jenny see it is not taking kri it
03:34 - is only printing Jenny because scanner
03:36 - will not consider this white space in
03:37 - string that we have discussed right if
03:39 - you want to take input both like this a
03:42 - complete line or you can say then we use
03:44 - what get or second way is what you can
03:47 - use here what two percentage s like if
03:50 - I'm using
03:51 - here percentage
03:54 - s
03:57 - name suppose I'm F name I'm taking two
04:00 - string obviously you have to take and
04:03 - last name right so here also we use what
04:06 - car name f name
04:10 - and L name that is also suppose
04:14 - 30 right and here I'm
04:18 - printing F
04:21 - name and last
04:25 - name so here also what percentage s
04:31 - so I think that's
04:33 - it let me run
04:35 - this see it is asking enter name and I
04:38 - am entering Jenny space katri now it is
04:42 - printing Jenny katri but with no white
04:44 - space why because in this print F
04:48 - percentage s percentage s so here you
04:50 - can if you write space if in print F you
04:53 - will you know just uh write or press
04:57 - space here then it will print
05:00 - something like this will print with
05:02 - space right obviously we don't want this
05:04 - thing so that is why we use what
05:07 - gets I'm just
05:10 - know taking what back to this program 30
05:14 - enter name and rather than scanf I'm
05:17 - just com commenting this out both print
05:20 - F and scanf right and here now rather
05:25 - than scan if I'm using get S and what is
05:28 - the syntax directly you pass the name of
05:31 - the string get name right and print F
05:36 - percentages
05:38 - comma name directly you can print
05:40 - something like this right so now let me
05:43 - run
05:46 - this here I'm entering suppose
05:50 - here
05:53 - Jenny's
05:55 - lectures is
05:58 - best Channel
06:01 - for CS
06:04 - it printing the complete line Jenny's
06:06 - lectures is the best channel for csit
06:09 - right because we are using gets so when
06:12 - when you press enter or the new line
06:14 - then only it will stop reading but here
06:18 - I have shown you the problem the the
06:21 - that buffer overflow problem we have
06:23 - discussed with both scanf and Gus see
06:26 - care name the size is only 30 30
06:29 - character I mean we should enter 29
06:31 - character and one null character at last
06:33 - that would be appended automatically
06:35 - right but here characters are obviously
06:37 - more than 30 here so but but still it is
06:40 - printing this thing still it is going to
06:42 - read the complete string it is not
06:43 - giving any error any warning or anything
06:46 - so I think we should not use this kind
06:48 - of thing we should not do this kind of
06:49 - thing that is why gets is very risky to
06:52 - use because it is going to allocate
06:54 - memory it is going to store this
06:56 - complete line beyond the allocated
06:58 - memory and and maybe it can override
07:00 - some critical program that is very
07:03 - helpful for your PC right so that is a
07:07 - buffer overflow problem I guess you got
07:09 - it both with scanf also will do this
07:11 - thing if you write here
07:13 - scanf right and without space if you
07:16 - write complete line Journeys lectures
07:18 - the best for csit like this without any
07:22 - space obviously the if you know press
07:24 - any space then it will not read but
07:27 - without space if you write and till you
07:30 - you know press enter till then it will
07:32 - try it will try to read the complete
07:35 - line so that is buffer uh overflow
07:39 - problem here so now see we will uh see
07:43 - now what print F and put s now here I'm
07:47 - using put and what's the syntax here
07:50 - just have to pass the name to put s I'm
07:55 - using then you will get the difference
07:59 - okay so output should be three names it
08:02 - should print one is print F then two put
08:04 - is I'm using so now let me save it and
08:07 - run
08:08 - it see it is asking enter name so I am
08:12 - entering
08:13 - here jti kri right with
08:18 - space and because we are using gets so
08:22 - let me
08:24 - just press enter here and see three
08:28 - times first jti katri then second and
08:31 - then third is in next line why so
08:33 - because first jti katri is output
08:36 - because of the Sprint F next output
08:38 - because of this pest in the same line
08:41 - and pest is what pest will automatically
08:43 - add a new line at the end of the string
08:46 - while you are printing right means after
08:48 - printing the entire string the cursor
08:50 - would be in next line so the output of
08:53 - next pest would be would be next line I
08:56 - hope you got this point also right now
08:58 - next thing is if if you do something
09:00 - like this like I'm printing
09:05 - here
09:07 - Point uh
09:09 - five only five means I want only five
09:14 - characters first five characters of my
09:16 - name and next I'm
09:19 - printing print
09:23 - F
09:27 - 10.5 right s field width also I'm
09:30 - specifying here and that is name but I
09:35 - think better to use here what
09:38 - slashing and here also slashing then you
09:41 - will get it better all right now let me
09:45 - just run
09:47 - this and here I'm
09:54 - entering see first is j a YN only five
09:57 - character because of the Sprint f
09:59 - second print f 10 field width and only
10:03 - five character that is why that is and
10:05 - that's what it right uh you know
10:07 - Justified so this output and this is
10:09 - because of the pce so I hope you got
10:12 - this also right and if you want to take
10:17 - input using
10:18 - scanf one thing you can do with scanf
10:21 - something like
10:23 - this like if I'm writing here
10:26 - percentage five
10:31 - s right and here I'm passing
10:35 - name so now what output you will get
10:40 - see I'm
10:42 - entering
10:45 - jti and without space katri right or
10:49 - maybe jti
10:51 - only seven characters we have right and
10:55 - I'm pressing enter but still it is
10:56 - printing J YN only five
11:00 - and see obviously this will print only
11:02 - five because we are using five in in
11:04 - both the printer but put should print J
11:07 - but it is also printing j y and why so
11:09 - because we have specified in scan F
11:12 - percentage 5S means it will read only
11:14 - five characters whatever you will enter
11:16 - after five characters it will not read
11:18 - so that limit you can set here in scanf
11:21 - this thing also you can do right one
11:24 - more thing what you can do in print f
11:27 - one more print F I'm using here
11:31 - and percentage s and here I'm specifying
11:34 - address
11:37 - of from index second name
11:41 - two means what output you should get
11:45 - here in this case see I just want to run
11:51 - this and I'm writing here one
11:56 - slashing I'm just commenting out this
11:59 - put s and puts I hope you got the
12:00 - working of this and this print F also
12:03 - and this print F also and in scan F or
12:07 - not
12:09 - scanf I'll use gets rather than scanf
12:14 - right only one output I want here so now
12:17 - let me just run this and it should
12:23 - ask name that is jti katri enter see
12:27 - what it is printing it is going to to
12:29 - start printing from why because of we
12:32 - are providing address of name of two
12:35 - address of second index 012 right so it
12:39 - is not printing whatever in at zeroth
12:41 - index that is J at one index that is a
12:44 - at second index it is y so address we
12:46 - are providing from y so uh from y it is
12:50 - going to print and till what till it
12:53 - finds null character that is till K I
12:58 - hope you got everything about gets SC F
12:59 - and print F and put s right so that's it
13:03 - for this video now