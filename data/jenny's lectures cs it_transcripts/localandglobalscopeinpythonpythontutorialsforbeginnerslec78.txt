00:06 - that was our sixth project in the series
00:09 - right now we are discussing in this
00:12 - video a very simple topic but it's
00:15 - crucial one that is what is local scope
00:17 - and Global scope
00:19 - right I hope if you have you know you
00:22 - have done many other programming
00:24 - languages you have heard these things
00:26 - local scope Global scope blog scope
00:28 - namespaces and all right so mainly in
00:30 - this video we'll be discussing local
00:32 - versus global scope as well as block
00:34 - scope write three things
00:37 - fine now before moving to this concept
00:40 - let me just tell you one story okay
00:43 - so during my schooling days we used to
00:45 - you know go out to play and there was a
00:48 - house or you can see house plus Garden
00:50 - so so in that Garden like there were two
00:55 - rooms one or two rooms and
00:58 - they are in this area they were having
01:00 - multiple trees so one tree is of like
01:05 - those fruits I don't know what you call
01:07 - them but we used to call them bear small
01:09 - fruits the right one is are red one and
01:13 - sweet taste and the green one as unripe
01:16 - green one are unripe brand with sore
01:18 - taste so one tree was inside
01:23 - this boundary I mean inside their house
01:26 - and no one was allowed to enter and you
01:29 - can say pluck fruits from this tree
01:32 - right those beer
01:34 - and one only the family members can
01:38 - you know eat those fruits from this tree
01:41 - and one the same tree was at this
01:45 - boundary
01:46 - so we used to go to this tree like and
01:49 - pluck those fruits from this tree either
01:52 - using some stick or throw stones and
01:54 - something like this
01:56 - and so see
01:58 - from this tree anyone was allowed to
02:01 - pluck those fruits
02:03 - right pick fruits from this tree but no
02:07 - one was no Outsider was allowed to enter
02:10 - in this house and
02:12 - you can say like pick fruits from this
02:15 - tree from this one yeah we used to do
02:17 - this thing like uh we were checking like
02:19 - if there is nobody in the house then
02:22 - quickly we enter in the house and
02:23 - whatever roots are falling from the tree
02:26 - on the ground we used to pick and to be
02:29 - uh run but that was a different story
02:32 - legally no one was allowed to enter and
02:35 - pick fruits from that tree right so see
02:38 - why I am
02:39 - telling you this story so what we can
02:42 - see in terms of programming this tree is
02:46 - having
02:46 - local scope
02:48 - this is local too
02:50 - these members like the only family
02:53 - members are allowed to pick fruits from
02:55 - this tree and this tree was having
02:58 - global scope so this is global anyone
03:01 - was allowed to pick fruits from this
03:03 - tree
03:04 - same in programming also we are having
03:06 - this thing
03:07 - right
03:08 - so in programming we use we used to
03:11 - declare some variables with some names
03:12 - and we use to declare functions where we
03:15 - will have classes and many other things
03:18 - right
03:19 - so in functions variables classes are
03:22 - having their own name
03:24 - right
03:25 - so now you understand the scope of the
03:28 - name or the variable in your code
03:30 - depends on where depends on what depends
03:34 - on the place where you create that
03:37 - variable
03:38 - so means see the scope of this tree is
03:40 - local
03:41 - and scope of this tree is global
03:44 - why so because only the difference is
03:46 - trees same fruits are also same the
03:48 - place where the
03:51 - trees are you can see harvested
03:54 - something like this
03:55 - right
03:56 - so scope is simply that thing the area
04:00 - in which you can use those variables or
04:03 - you can say those names or functions or
04:06 - those classes
04:08 - right let me just do this thing with the
04:10 - help of a program let's take one example
04:13 - I hope general idea you got what is
04:15 - local scope what is global scope with
04:17 - help of this example so let's define a
04:19 - function suppose I am defining a
04:21 - function simply display
04:24 - and within this display function I'm
04:26 - having a variable a is equal to 10. and
04:29 - I'm just printing this a
04:31 - and we are calling this this one
04:35 - so see this you can say this is boundary
04:38 - so this is you can say home for this a
04:42 - only the members
04:44 - for the family members of this function
04:46 - only can use this variable a means this
04:50 - a is having local scope within this
04:53 - function only you can use this a if you
04:55 - want to print this a outside
04:58 - outside of this house then it will throw
05:01 - an error
05:03 - right because this a is having local
05:05 - scope if outside of any function in the
05:08 - main body of the Python code if you are
05:11 - declaring a variable a is equal to 10.
05:14 - now this variable is having global scope
05:17 - this is block variable so now this will
05:20 - print 10 and this will print also 10.
05:23 - suppose let's differentiate it it is 15.
05:26 - so this will print 15 and this will
05:28 - print 10.
05:30 - right I hope in programming in terms of
05:33 - programming also you got the difference
05:34 - between local and Global scope right
05:36 - okay it will be more more clear to you
05:39 - guys when we take one example so let's
05:41 - do practical
05:42 - okay so let's create a new file here
05:46 - scope of variable load p y
05:49 - now we take first of all
05:52 - a global variable right so this variable
05:55 - the variable you define in this scope
05:57 - the global scope is available in all
05:59 - your code throughout your code right and
06:02 - this variable is created outside of any
06:05 - function or anything in the main body of
06:08 - the python python code so this is having
06:10 - global scope now we are defining a
06:13 - function suppose this the function name
06:15 - is display we are not passing anything
06:16 - yet within this also I am having
06:20 - the same variable name a but the value
06:23 - is 15. so I'm going to print a here
06:27 - right
06:28 - and let's call this display
06:31 - so let's run this which which value
06:35 - would be printed for this a this a is
06:38 - within this function because this is
06:40 - indented the intent indented block this
06:43 - is what
06:45 - a function block so this a is having
06:48 - this variable is having we can say
06:51 - local soap and this is outside of any
06:54 - function then this is having
06:57 - Global spoke now let's run this and see
07:00 - what output you will get here it's 15.
07:03 - right so this a first of all it will
07:06 - search
07:07 - if there is any local variable a yes so
07:10 - it will print 15 but if suppose
07:14 - we are not having this C I'm just
07:16 - printing a here so is it possible for
07:19 - this function to access the global
07:21 - variable yes it is possible let's run
07:23 - this C 10. so a global variable the
07:27 - global variable or the variable which is
07:29 - having global scope that can be accessed
07:31 - from within the function as well now if
07:35 - we comment out this e and we are having
07:38 - this say only right
07:40 - and I want to print a outside also
07:45 - right
07:47 - so I'm not having this a I'm on a I'm
07:51 - having a only within this function so
07:53 - this is having local spoke let's run
07:54 - this
07:56 - C
07:57 - first of all our name error name a is
07:59 - not defined in line number six in line
08:01 - number six this a is not defined
08:04 - because
08:07 - this a is outside of this function we
08:10 - are accessing this outside of this
08:12 - function so it cannot access the local
08:14 - variable
08:15 - the variable which is having local scope
08:17 - it will search for a variable a having
08:20 - global scope or there is no variable so
08:22 - it will your name error but this a would
08:25 - be printed 15.
08:27 - as python is an interpreted language so
08:29 - line by line it will be executed right
08:31 - so first display
08:33 - right then obviously it will print this
08:36 - is same but the the error is in this
08:39 - line only so in this line it will print
08:41 - error and 15 would be displayed I hope
08:43 - now you go to what is difference between
08:45 - Global and local scope right so
08:48 - but the thing is if within this one more
08:52 - thing if we are having a nested function
08:53 - suppose I am having one more function
08:56 - show but this within this display
08:59 - function
09:00 - right
09:01 - and
09:03 - here I am printing this
09:09 - print K and I'm calling display so what
09:12 - do you think it will give an error or
09:14 - because within this function I'm not you
09:18 - can say declaring any variable a outside
09:21 - of this function I am having a variable
09:23 - a
09:24 - right so what it will access this a or
09:27 - this a
09:28 - let's see
09:31 - okay so it is printing only 10 I mean
09:33 - this print is executed because this
09:35 - print is not been executed because we
09:36 - are not calling this show function we
09:38 - are calling only display
09:40 - right
09:41 - so to make this happen to print this say
09:43 - you have to call this function
09:45 - show right okay let's update this thing
09:49 - so
09:51 - within this display function only within
09:54 - this display only you have to call this
09:56 - show function because this show is local
09:59 - to this display
10:01 - right let's run this now let's comment
10:03 - out
10:04 - this line
10:07 - see it is printing
10:08 - 15 because this a will access first of
10:12 - all it will see within this function
10:14 - there is is there any locally no then
10:17 - next
10:19 - this function is within this function so
10:21 - it will search is there any a within
10:23 - this function yes a is 15 so it will
10:26 - print this if you comment out this line
10:28 - then it will search if there is any
10:31 - Global a so it will print 10.
10:34 - right and directly you cannot call this
10:37 - show here right
10:40 - outside of this display we cannot call
10:43 - this show I am calling this outside of
10:45 - this display this this uh block let's
10:49 - run this it will give you error see the
10:52 - name show is not defined
10:54 - so you can call this show function
10:56 - within this display only because this is
10:58 - local to this this display right so
11:02 - whatever you will Define within this
11:04 - display function whether it's a class or
11:07 - a function or a variable you can use
11:09 - that thing within this display only
11:11 - right like this a this a within this
11:14 - display or with this show function
11:16 - within this display only so the show is
11:19 - also having local scope like
11:21 - now one more thing we have a block scope
11:25 - but in Python there is no such scope in
11:27 - other languages like C C plus plus if if
11:30 - we write down something like this if we
11:32 - write down any if or 4 or while loop
11:35 - then those are also having their scope
11:37 - that is known as block scope whatever
11:39 - you will write within that for Loop any
11:41 - variable then that variables are having
11:44 - block slope
11:45 - right or within any if else if statement
11:49 - also you define declare any variable
11:52 - that also having block slope but in
11:54 - Python there is no such slope only local
11:56 - and Global let me just clear this thing
11:58 - with help of an example
12:02 - suppose uh
12:04 - any simple example we can take I am
12:06 - having two variable five and six
12:08 - so the condition I am putting like if a
12:11 - less than b
12:14 - then C is equal to a plus b
12:18 - right and outside of this if I am
12:22 - printing the C C this A and B these
12:25 - variables are having global scope it's
12:26 - okay we can use these variables in
12:28 - throughout our code right but the C is
12:32 - within this if
12:34 - so maybe you are thinking the C is
12:36 - having block scope as this is having
12:37 - like in other languages
12:39 - so the C we can use only within this if
12:42 - block not outside of the zip so the
12:44 - Sprint will give error but no let's run
12:46 - this
12:47 - it will print 11.
12:50 - right so there is no block scope
12:51 - whatever you will write like within this
12:54 - F or for Loop while loop those variables
12:57 - are if you are using this if while or
13:01 - for Loop within a function then
13:03 - obviously those variables are local to
13:06 - that function local scope but if you are
13:09 - using if something like this
13:10 - not within any function
13:13 - simply in your program so the C is
13:16 - having a this variable is having global
13:18 - scope you can use this throughout the
13:20 - code so there is no block scoping python
13:24 - is it clear
13:26 - but see if you
13:28 - use something like this if I say
13:31 - this this if a this is within this
13:35 - display function
13:36 - and now you want to print this C here
13:39 - now let's see it will give error this
13:42 - name c is not defined because now the C
13:45 - is local to this function now the C is
13:48 - having local scope right so it depends
13:51 - in which you are using this F4 or Y Loop
13:54 - if within a function then obviously
13:55 - those variables are harming
13:57 - local scope to that function if not
14:00 - inside the function then they are having
14:01 - global scope so I hope
14:04 - the basics or you can say it's clear to
14:05 - you guys local scope Global scope and
14:07 - block scope right
14:10 - and why basically the this concept the
14:13 - scope concept or you can say basically
14:15 - this is what name spaces
14:17 - right so that thing
14:20 - will be discussing in a Separated video
14:22 - what is a namespace different types of
14:23 - namespace why you need namespace
14:27 - right so maybe next video will be
14:29 - discussing this thing so now we'll see
14:31 - the next video till then bye take care