00:02 - planning Python programming language
00:04 - this video is part two of the previous
00:06 - video because we are now working on a
00:08 - project we are making a silent auction
00:10 - program or we can say a secret auction
00:12 - program so what is this project what
00:14 - output you will get when you run this
00:15 - program and the flowchart of this
00:17 - project we have discussed in the
00:18 - previous video right now in this video
00:20 - we'll see the solution the complete code
00:22 - one by one step by step so if you
00:24 - haven't tried this out yet please pause
00:26 - the video watch out the previous video
00:28 - and try this out yourself this is a
00:31 - simple project it's for beginners and
00:33 - then
00:34 - we'll see the solution together
00:36 - right I hope now you have watched the
00:38 - previous video and you have tried this
00:40 - out now let's see the solution together
00:44 - so let's create a new file here and
00:48 - Silent option Dot py
00:51 - right
00:52 - now very first step you will Implement
00:55 - you just keep your flowchart of this
00:57 - project that what we have discussed in
00:59 - previous video with you on a paper right
01:01 - I have mine see this one right so one by
01:05 - one we'll see the we'll implement the
01:08 - step so first is
01:09 - you have to input name and the bid price
01:12 - so obviously we have our input function
01:14 - we know how to use input function
01:17 - so first is you will ask what is your
01:19 - name then next input is price bid price
01:24 - what is your bid but see one thing you
01:26 - need to take care using input if you
01:28 - will take the bid it would be maybe 10
01:31 - 000 rupees 5000 rupees and that is
01:32 - integer but using input you will take
01:34 - that would be considered as string so
01:36 - better at this point only type cast this
01:41 - right otherwise it will give error so we
01:44 - are going to write past this thing
01:46 - okay now next step is you have to add
01:48 - this name and bid into a dictionary why
01:51 - in a dictionary we are storing the data
01:53 - because
01:54 - we are storing obviously we want like
01:56 - first the name of the person then bid
01:59 - price this type of thing we want like if
02:01 - you write on a piece of paper then how
02:03 - you will write these prices name like
02:06 - Jenny then bid price then maybe name Ram
02:09 - with price like this
02:11 - so this type of data arrangement we can
02:14 - also do or you can say imitate in
02:17 - programming with help of dictionary we
02:19 - have a data structure like dictionary so
02:23 - that's why we are using a dictionary
02:25 - here because it is uh you can say you
02:27 - know dictionary is a great way to store
02:29 - this type of data structured information
02:32 - right
02:34 - okay now let's take our dictionary name
02:37 - so first we'll take suppose an empty
02:40 - dictionary so better
02:43 - data
02:45 - that's an empty dictionary right
02:49 - or better to take this before asking the
02:52 - name and price okay
02:56 - you will get it why I am taking for at
02:59 - first
03:00 - this empty dictionary
03:03 - better data and this is with an empty
03:06 - dictionary
03:11 - right
03:13 - now how to add say this name would be
03:17 - key and price would be value in a
03:20 - dictionary right so how to add data and
03:24 - dictionary we have discussed this thing
03:25 - previous so the name of the dictionary
03:27 - then here the key value key is the name
03:31 - whatever in the name we will provide so
03:33 - name and equal to value value is in
03:35 - which variable price
03:39 - fine
03:40 - okay now this will ask only
03:44 - for one time name and price but we want
03:48 - it will ask first the question are there
03:51 - are there any other better more better
03:54 - if you press yes then it will ask again
03:56 - name and price again if it will you will
03:59 - you will enter yes again it will ask
04:01 - name and price so this asking of this
04:04 - name and price this should be in a loop
04:07 - but how many time we don't know
04:10 - as many times as you enter yes yes yes
04:14 - it will ask
04:15 - once you press no it will exit so we
04:18 - don't know the number of iteration so
04:20 - which is the best Loop in this case
04:22 - while loop right so we'll put this thing
04:26 - in a while U right
04:29 - how I'll show you first ah let me just
04:32 - ask the question
04:36 - are there more better you have to type
04:38 - yes or no
04:40 - suppose I am taking this yes or no ins
04:43 - like I I consider they should be in
04:46 - small right so let's just use a function
04:51 - here
04:53 - it will convert whatever you will type
04:55 - if you will type capital y e s it will
04:57 - convert into lower
05:00 - so whatever you will enter that we are
05:03 - going to store in a variable
05:05 - and the variable is suppose we are
05:09 - taking this name uh this name more
05:12 - bidders right
05:15 - okay now we will check if this variable
05:18 - morbidder is equal to equal to
05:21 - if it is a no
05:23 - then
05:24 - if it is a no check the flowchart then
05:27 - you have to find out the highest bid in
05:29 - the dictionary
05:31 - so for that suppose rather than writing
05:33 - the complete code in this if just Define
05:36 - a function separate function and we will
05:38 - call the function if morbidders are no
05:40 - suppose function name I am taking
05:45 - find
05:47 - winner
05:48 - and there what you have to pass the
05:51 - dictionary the complete data the
05:52 - information of all the bidders right so
05:55 - that we are having in this dictionary
05:57 - bidder data that simply you need to pass
06:01 - right
06:03 - and obviously now if more there are no
06:07 - more videos then you have to exit so how
06:09 - to exit at the point of time you have to
06:12 - put a condition to exit from the loop so
06:15 - first write down a while loop here
06:19 - while
06:22 - okay if if we don't know the definite
06:25 - number of iteration we use while loop
06:26 - but what condition you will put here
06:29 - generally in this case is we use a flag
06:31 - variable right
06:33 - flag variable is true
06:35 - right at first flag variable we'll set
06:38 - flag variable if also true
06:40 - it depends which type of logic you are
06:43 - going to implement and then we are going
06:45 - to flip that flag variable within this
06:47 - while loop if certain exit condition is
06:49 - occurred right so we are taking first a
06:52 - variable
06:55 - end of bidding
06:57 - and obviously it's not end of bidding so
07:00 - at first it is false so while
07:03 - not and of bidding
07:05 - this is the condition
07:07 - at first it is false not false is true
07:10 - so while true means we are going to
07:11 - enter into this value but these
07:13 - everything within this while loop should
07:15 - be indented right now if morbidders are
07:19 - known so now it's time to flip the
07:22 - variable because now it's time to exit
07:24 - from this while loop so now we are going
07:26 - to flip the variable end of bidding is
07:28 - equal to
07:29 - two because if it is true then again in
07:32 - next iteration while not true means not
07:34 - true means false while false means
07:36 - condition
07:38 - uh is not true false means exit from the
07:41 - lukina right and then simply call this
07:44 - function right
07:46 - okay now let's define this function
07:49 - first obviously you have to define the
07:50 - function before calling so how to define
07:52 - a function def same name you need to
07:55 - take what find
07:58 - winner
07:59 - and we are passing a dictionary
08:02 - so only one argument you are passing so
08:05 - one parameter name you need to take and
08:06 - that I am taking suppose
08:08 - bitter
08:11 - details
08:13 - right
08:15 - okay now we have better details suppose
08:18 - in a dictionary we are having two values
08:22 - Jenny with price Ram with some big price
08:25 - right
08:26 - okay
08:27 - now you have to look through through
08:29 - this dictionary because
08:32 - how to access the price the values using
08:35 - keys we can access
08:37 - right so we have to access the first
08:40 - price first we have to access Jenny then
08:42 - the price then second ram then price and
08:45 - compare those prices which is the
08:47 - highest if three then also we will
08:50 - access the third one and we'll compare
08:52 - right you have to find out the highest
08:55 - so if you know the logic to find highest
08:58 - from given numbers from three numbers or
09:01 - four numbers then it would be definitely
09:03 - easy for you guys to write down this
09:04 - logic right
09:06 - okay
09:08 - now
09:10 - a for Loop for bidder in
09:13 - with the details and if we write down
09:16 - this kind of for Loop then this this
09:18 - will Loop through all the keys this
09:21 - thing we have discussed especially this
09:22 - for Loop when we're discussing the
09:24 - introduction to dictionaries right for
09:27 - better in better details
09:30 - suppose in better details I am having
09:32 - like this Jenny
09:37 - 10 000 and next
09:40 - Ram
09:43 - 30 000.
09:45 - or suppose three
09:47 - one more
09:55 - sham
09:57 - fifty thousand
10:02 - suppose this is my dictionary right
10:04 - now for better in better detail so first
10:07 - time it will Loop through the keys so
10:09 - first time in bidder Jenny would be
10:11 - assigned Jenny now according to the
10:15 - journey we have to
10:17 - we have to fetch the bid price how to
10:20 - fetch we know
10:22 - first take a variable name in which
10:24 - whatever price is there we are going to
10:26 - fetch that we are going to store in that
10:28 - variable
10:29 - so suppose we are taking a variable and
10:31 - bidding price and
10:33 - how to fetch this name of the dictionary
10:36 - and in subscript just pass the key the
10:39 - key is in this variable bidder now Jenny
10:41 - will be passed and 10 000 would be
10:43 - fetched and that would be now in bidding
10:45 - price
10:46 - so now in bidding price we are having
10:49 - 10 000.
10:51 - right
10:52 - now one by one we are going to compare
10:55 - so if you know the logic how to find out
10:57 - maximum from three numbers there are
10:59 - multiple logic but one is simply we
11:02 - suppose before this for Loop simply
11:04 - first we set
11:11 - we are going to take a variable highest
11:13 - bit equal to zero right now we will
11:17 - compare
11:18 - now we have one bidding price ten
11:20 - thousand so we compare if
11:22 - this bidding price
11:24 - is greater than
11:26 - the highest bid this bid definitely it
11:29 - is greater because first at first it is
11:30 - zero
11:32 - so what you will do
11:33 - we will change this highest bit highest
11:36 - bid now becomes whatever the
11:39 - bidding price
11:41 - right now highest bit is zero bidding
11:43 - price now at this point of time 10 000
11:45 - so yeah this condition is true now in
11:47 - highest bit equal to bidding price so 10
11:50 - 000 would be assigned to
11:53 - this highest bid it's not zero now it's
11:56 - ten thousand right okay
11:59 - now same again next time in next
12:02 - iteration in bidder Ram would be
12:04 - assigned so we'll fetch the ram detail
12:07 - of ram in bidding price this time we are
12:09 - having thirty thousand we are having
12:12 - thirty thousand so check if bidding
12:14 - price greater than highest bid highest
12:15 - bid now is ten thousand bidding price is
12:17 - thirty thousand condition true yes enter
12:20 - and highest bid becomes bidding price so
12:22 - highest become highest bid becomes now
12:24 - what is the bidding price right now
12:26 - thirty thousand so it becomes thirty
12:27 - thousand right and suppose sham for sham
12:30 - it's only five thousand
12:34 - next time sham would be assigned in
12:36 - bidder
12:37 - so bidding price is 5000 now check
12:39 - bidding price five thousand greater than
12:41 - highest bid is thirty thousand is is it
12:43 - condition true
12:44 - this condition true no so will not enter
12:47 - into this if block so this highest bid
12:50 - would not be changed and this would be
12:52 - 30 000 only right
12:54 - now okay if suppose you are having only
12:56 - three data so that's it after that what
13:00 - now you have to
13:02 - print winner is Ram with a bit of thirty
13:07 - thousand
13:08 - right so suppose we are again here
13:12 - taking a
13:13 - empty string right
13:16 - so at this point of time
13:19 - whenever whenever equal to
13:22 - whatever the bidder is
13:24 - within this for Loop only we will assign
13:27 - winner equal to bidder right
13:29 - okay now
13:33 - outside of this for Loop we will print
13:37 - using F string like the
13:42 - winner is
13:43 - and that value we have in this sorry
13:46 - this variable
13:50 - winner
13:52 - with
13:54 - a bid price
13:58 - of
14:01 - and that value we are having in this
14:03 - variable highest bid
14:05 - right
14:07 - I know it will work or not let's run
14:08 - this and see
14:10 - let's run this and what it will ask what
14:12 - is your name
14:14 - Jenny
14:15 - bid
14:17 - 10 000
14:19 - yes
14:21 - but see one problem is here if you are
14:24 - you enter yes it should clear the
14:26 - previous bidder price and name but it is
14:28 - not clearing so that one thing you have
14:31 - to include still in your program
14:33 - what is your name
14:35 - Ram
14:36 - price
14:39 - fifty thousand more better yes
14:43 - sham
14:46 - price
14:48 - only five thousand no
14:51 - the winner is Ram with a bid of fifty
14:54 - thousand
14:55 - yeah this program is working only one
14:57 - thing you need to add if you press if
14:59 - you enter yes the previous name and the
15:02 - bid price should be cleared because no
15:03 - other person can see the other person
15:05 - bid so that we need to implement now
15:08 - here we are having we are not having
15:10 - like in C and the C plus we are in clear
15:12 - screen method
15:14 - so here what you have to
15:17 - import a module OS
15:22 - so there are okay multiple methods also
15:26 - to clear this screen right one way I'm
15:29 - just telling you
15:30 - in OS module
15:32 - we have a function system and you have
15:35 - to call that function you have to just
15:37 - pass one parameter clf if you are
15:40 - working on Windows and if you are
15:41 - working on Linux then you have to pass
15:44 - what
15:45 - uh clear C and eer so I am working on
15:48 - windows so just import this
15:50 - first OS and when I want to clear the
15:54 - screen when
15:56 - at that point only you need to
15:59 - call the system function with CLS
16:02 - parameter so if morbidder know then true
16:05 - and then find better but
16:07 - if
16:10 - else if
16:12 - more bidders equal to equal to
16:16 - yes at this point of time we need to
16:19 - clear the screen so one more condition
16:21 - you need to put LF more better equal to
16:23 - yes then just call the function from OS
16:25 - module OS Dot
16:28 - system function and what command you
16:30 - need to give CLS
16:33 - in bracket parameter into pass CLS
16:36 - if you are working in Windows
16:38 - okay
16:40 - now one more thing
16:42 - you have to run this in Python console
16:45 - right so first thing if I directly run
16:48 - this in Python console right click here
16:52 - and if I run run file in Python console
16:55 - it will not run see
16:58 - error running this silent auction there
17:00 - is some error
17:01 - so what you need to do first you need to
17:04 - change some condition something right
17:07 - click on this file right then you have
17:10 - to modify the Run configuration what if
17:12 - I run configuration and here
17:15 - this on execution we have a option
17:19 - emulate terminal in output console
17:24 - right just take this thing and apply
17:27 - okay
17:28 - now right click here run file in Python
17:31 - console and see what's your name
17:36 - bid 10 000 more better yes now see
17:40 - previous screen is cleared yes
17:43 - Ram bid
17:46 - like this more better yes
17:50 - sham
17:52 - bid
17:53 - only 1000
17:56 - enter morbidder no
17:59 - so the winner is Jenny with the bid
18:01 - price ten thousand and if you want to
18:03 - display
18:04 - at the last if you want to display all
18:06 - the information like all the person all
18:09 - the bidders and with bidder
18:11 - price so simply I think you can modify
18:14 - this thing
18:15 - I want to display the information of all
18:17 - the bidder At Last At Last when you
18:19 - press no
18:20 - how you'll do that pause the video in
18:22 - this try this out
18:29 - so I hope you have done this now before
18:31 - printing the winner here
18:35 - outside of this for Loop after this for
18:39 - Loop in this definition of this function
18:40 - before printing the winner simply you
18:43 - can print and you can just uh
18:47 - sorry
18:51 - print the better detail because in this
18:53 - dictionary we are having the detail of
18:55 - every everyone or whatever you want to
18:57 - line right like if you want to write
18:58 - down here is the detail of all the
19:01 - bidders that here is the list of all the
19:03 - bidders and
19:05 - okay let's run this but you have to run
19:07 - like this run file in Python console
19:09 - after right clicking this name
19:12 - Jenny and suppose
19:14 - one lakh more better yes
19:17 - Ram
19:19 - with some bit price yes
19:23 - sham
19:25 - what is your bed some bed price
19:29 - no now say I'm entering no
19:32 - so first it will show here is the list
19:33 - of all the bidders Jenny Ram sham with
19:36 - the detail and winner is Jenny with a
19:39 - bid price of 10 000.
19:44 - one lakh so I guess
19:47 - now you got how to do this project if
19:50 - you're not getting this thing it's okay
19:51 - just write down this com the detail or
19:54 - you can see the code of this project on
19:55 - a piece of paper and same method you
19:58 - have to apply right on this
20:00 - take the values
20:01 - like one by one step by step this first
20:04 - this thing then second this this this
20:06 - like this right
20:08 - and yeah we have to add one more line
20:10 - like this that at first it should print
20:14 - you just simply print welcome to the
20:16 - silent auction program so whenever you
20:18 - run this at first you will print this
20:19 - line I guess
20:21 - so you just you can just write down this
20:24 - thing the code on a piece of paper and
20:25 - write in this with the help of
20:27 - you know some information you need to
20:28 - pass one by one
20:30 - first the step then this step and this
20:32 - step right
20:34 - so I guess that's it for this video if
20:36 - you are having any more issues here then
20:39 - you can ask me in comment section right
20:41 - so now in the next video we'll see more
20:44 - about functions
20:46 - so now it's in the next tutorial then
20:47 - bye bye take care