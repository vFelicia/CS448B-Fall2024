00:00 - so in the series of running c
00:01 - programming we are discussing dynamic
00:02 - memory allocation c in the previous
00:04 - video we have discussed how to use
00:05 - malloc function to dynamically locate
00:07 - memory in this video we'll see
00:09 - how to allocate memory dynamically using
00:11 - catalog function so in this video we'll
00:12 - see all the points about catalog
00:14 - function like what is gallop function
00:15 - the syntax how to use it we will see a
00:17 - program also right i will show you that
00:19 - program on my laptop practically also i
00:21 - will see and will also see the
00:22 - difference between malloc function and
00:24 - calc function
00:25 - right all the points all the detail
00:27 - about calor function will discuss in
00:28 - this video but before there just won't
00:30 - tell you one thing an academy is going
00:32 - to conduct a combat on 13th of march at
00:34 - 11 am it is a scholarship test to
00:38 - maximize your gate and esc preparation
00:41 - it is live test and you can take this
00:43 - test for free here you will get a chance
00:45 - to compete with thousands of learners
00:46 - from all over india and stand a chance
00:49 - to win up to 100 percent scholarship 20
00:51 - questions you will get and time unit
00:52 - would be 60 minutes and these questions
00:54 - has been created by their best gate and
00:56 - esc educators and after every
00:58 - competition video solution will be given
01:00 - to you by their expert so that you can
01:02 - identify your weak areas and you can
01:03 - improve according to that you can get it
01:04 - right next time and for gate aspirants
01:07 - they also started few batches from 9th
01:09 - of march in this course their top
01:10 - educator will be covering all the
01:12 - subjects of cs and id and in this course
01:14 - you will get preparation strategy tips
01:15 - and tricks practice questions numericals
01:17 - along with the detailed explanation of
01:19 - all the concepts and you can get your
01:21 - doubt cleared in a separate doubt
01:22 - clearing sessions but this course is
01:25 - paid you can use my code jkl10 to get 10
01:28 - discount on your paid subscriptions and
01:29 - an academy is also offering you a great
01:31 - offer in which if you take 24 months of
01:34 - date and esc preparation then you will
01:35 - get extra four months and if you will
01:37 - take 12 month of gate and esc plus
01:39 - subscription you will get extra three
01:41 - months free on it just to help you in
01:43 - your gate and ac preparation and if you
01:45 - use micro jkl 10 you will get extra 10
01:47 - discount on the reduced prices so you
01:48 - the price detail you can see on my
01:50 - screen and an academy also conducting
01:52 - all india scholarship test for all the
01:54 - gay 2023 and 2024 aspirants
01:58 - on 20th of march at 11 am and you can
02:01 - take this test for free and the syllabus
02:03 - for this test is general aptitude and
02:06 - engineering mathematics and here also
02:08 - you will get a chance to win up to 100
02:10 - scholarship and they also started an
02:12 - academy lite test series for gate and
02:14 - esc the first test would be on 13th of
02:17 - march but subscription of this test
02:20 - series would be paid the price detail
02:22 - and all the other detail of this test
02:24 - series you can see on my screen so the
02:26 - relevant links and detail i'll put in
02:28 - this in the description box of this
02:29 - video if you are interested you can go
02:30 - and check out now let's see what is
02:32 - called function first thing
02:34 - it is used to allocate memory
02:36 - dynamically and the full form of this is
02:38 - contiguous allocations
02:45 - it is a built-in function
02:47 - right
02:50 - which is declared in which ah
02:52 - heterophile std lib
02:55 - don't edge
02:56 - mellow create look all these functions
02:58 - uh which are used for dynamically
03:00 - allocated memory and delocate memory
03:01 - these are declared in this stdlib these
03:03 - are built in function the full form of
03:05 - this is contiguous location full form
03:07 - for mellow function was memory
03:08 - allocation right and
03:10 - it is used to allocate
03:12 - memory dynamically
03:14 - but it allocates memory in multiple
03:17 - blocks
03:18 - and every block is of same size let me
03:21 - just write down this thing
03:22 - so
03:23 - what does this mean dynamically allocate
03:25 - multiple blocks of memory and each block
03:27 - is of same size
03:29 - what kalo sorry malloc does
03:32 - it allocates
03:34 - single block of memory right and it
03:36 - locates it it allocates multiple blocks
03:38 - and each block is of same size right now
03:41 - how this is different from malloc the
03:43 - syntax is it except
03:45 - two argument and malloc takes only one
03:48 - argument right so
03:50 - two argument callo and one argument is
03:55 - this one and second one is
03:58 - size
03:59 - malloc only take this argument the size
04:01 - but it takes two arguments n means
04:04 - size t means uh nothing but its unsigned
04:07 - end means it will take either value
04:10 - either zero or positive no negative
04:11 - value right so n means number of blocks
04:15 - or number of elements you want to store
04:17 - number of blocks you want to
04:19 - you know you want that it should
04:20 - allocate in the from which memory from
04:22 - heap right dynamically from which memory
04:25 - uh section the memory would be located
04:27 - from heap section n means number of
04:29 - blocks second one means size of each
04:31 - block
04:35 - so suppose i want to allocate
04:37 - five blocks
04:39 - right five blocks and i want to store
04:41 - five in teaser so five blocks
04:44 - and and see the return type of this is
04:48 - void pointer same as mallow right why so
04:51 - why word pointer that we have discussed
04:53 - clearly in the previous video when we
04:55 - were discussing malloc function you can
04:56 - watch out that video first right
04:58 - so this is the syntax right
05:01 - suppose i am writing here
05:03 - yellow
05:04 - 5
05:05 - comma
05:07 - size of
05:09 - int
05:10 - right and in last week a semicolon right
05:13 - means we need five blocks
05:16 - and of integer type so each block size
05:19 - is four bytes
05:21 - or maybe in some compiler it's in some
05:22 - machine it take two byte intake two byte
05:24 - and in some it takes four bytes right so
05:27 - i am taking here four bytes so it will
05:29 - allocate means from the heap section it
05:30 - will allocate
05:32 - one two three four five five blocks and
05:35 - each block is of size
05:37 - four bytes this is also four four four
05:40 - four means you can store here five
05:42 - integer
05:43 - right
05:44 - and it
05:45 - it will return what if successfully it
05:47 - has a located memory
05:49 - it will return
05:51 - base address of this block or you can
05:52 - say the address of the first byte or the
05:54 - first block means base address
05:59 - suppose base address is 1 0 4 2
06:03 - so it will return this address the
06:06 - address of the first byte
06:08 - of this
06:09 - these blocks
06:11 - right
06:12 - so it will return the base address but
06:15 - it will return an address in the form of
06:16 - void pointer
06:18 - right so according to our needs
06:21 - which type of value we will store here
06:23 - either its integer or
06:25 - float or character or anything according
06:28 - to that you are supposed to type cast
06:30 - that pointer suppose here i want to
06:32 - store into value so just type cast it
06:35 - into
06:37 - int pointer
06:38 - and the address whatever it will return
06:40 - just store it into obviously we need a
06:42 - pointer to store the address so suppose
06:44 - i am taking a pointer hint star ptr
06:48 - so in ptr i am going to store that
06:50 - address that's it
06:52 - so this is how dynamically you can look
06:53 - at my using kellogg and this is c this
06:56 - is what install ptr this is not dynamic
06:58 - memory allocation this is what static
07:00 - memory allocation right
07:04 - i hope you got this because we have
07:05 - discussed this when you are discussing
07:07 - the basics of dma
07:09 - the very first video of dynamic memory
07:11 - allocation right so this is what
07:14 - static memory allocation but this is how
07:15 - we are allocating memory dynamically
07:17 - using yellow right in same
07:20 - if you want to use mallocs you will use
07:22 - hair mallow
07:24 - and five and into size of it
07:28 - right same will type cast this and we
07:31 - can store this in ptr so it will
07:34 - allocate same it will allocate what one
07:36 - block of 10 bytes
07:39 - and it will allocate five
07:42 - block of each of size four by four by
07:44 - four by sorry five into four twenty
07:47 - bytes
07:49 - twenty bytes right and same you you will
07:52 - you can store five in these are here
07:53 - also right
07:55 - so the only difference is
07:58 - uh
07:58 - the full form of malloc is memory
08:00 - allocation configuration location second
08:02 - thing is it will allocate multiple
08:04 - blocks of memory each block is of same
08:06 - size it will allocate a single block
08:08 - third difference is what now
08:11 - it will whatever the memory it has
08:14 - allocated the memory would be
08:16 - initialized with zero by default zero
08:20 - all the blocks would be initialized with
08:21 - zero
08:23 - and in this case
08:25 - it will initialize the these blocks with
08:27 - any garbage value
08:29 - so this is another difference right
08:32 - so this is you can say it's a you know
08:34 - extra thing calloc will do
08:36 - initialization with a zero
08:38 - extra overhead you can say
08:40 - obviously
08:41 - initialization uh process also will take
08:44 - some fraction of seconds
08:46 - obviously it will take so it's extra
08:49 - overhead so if you want that the memory
08:51 - should be initialized with the zero
08:54 - then only use catalog function
08:57 - to dynamically locate memory right
09:00 - because this is this is extra overhead
09:02 - right and it will definitely
09:04 - to some point
09:05 - it will affect the program efficiency
09:08 - right to some point only and this
09:10 - allocation this initialization doesn't
09:12 - matter to you
09:13 - right if you don't want to initialize
09:15 - this with a zero if garbage values are
09:18 - fine with you then you can use mellow
09:20 - only right to dynamically allocate
09:22 - memory
09:23 - so
09:24 - this is i guess these are the points
09:26 - about catalog so i hope the difference
09:27 - is also clear to you between carlock and
09:29 - malloc function right now let's just
09:31 - write down a simple program
09:33 - with callout function
09:35 - over here also i'll take the same
09:36 - example that we have discussed in
09:37 - previous video when we were discussing
09:39 - uh what about
09:40 - malloc function so rather than writing
09:42 - this example here because that would be
09:44 - same let me just show you directly the
09:46 - practical of
09:47 - uh to you know how to use this cat up
09:49 - function right on my laptop see this was
09:52 - a program for malloc function so let me
09:55 - just
09:56 - copy this and create a new file
10:00 - kellogg.c right and let me just paste it
10:04 - so here we are taking in pointer n and i
10:07 - rather than mellow we'll use callout to
10:10 - allocate the memory so the syntax is
10:13 - n
10:14 - this number of blocks you want your
10:16 - number of elements you want to store
10:17 - comma the size of the block which type
10:20 - of block you want which type of value
10:22 - you want to store here i am taking int i
10:24 - want to store integer right so you take
10:27 - size of intel your float you can take
10:28 - character you can take it's up to you
10:30 - right now we will ask from the user for
10:34 - entering the value using a for loop and
10:36 - after that we will print the values
10:37 - right
10:38 - i hope now this is clear to you because
10:40 - we have discussed this program very
10:42 - clearly in the last video so now let me
10:44 - just run this and
10:46 - show you what output you will get and
10:48 - how memory would be allocated right and
10:50 - if you will not initialize you will not
10:52 - enter the values then it will print 0
10:54 - for all the blocks right now it is
10:56 - asking inter total total values so 3
10:59 - value i want to store enter the values
11:01 - four three
11:02 - five so the entered values are four
11:04 - three five
11:05 - next time if you want to store five
11:07 - values you can just enter five values
11:08 - and according to five values the memory
11:10 - would be located according to ten values
11:12 - the memory would be located this is the
11:14 - advantage of you can say dynamic memory
11:16 - allocation now
11:18 - let's just do one thing
11:20 - i don't want to take the value from the
11:22 - user
11:24 - right without
11:26 - initializing by default the located
11:29 - memory block would be initialized with
11:31 - zero i have told you using calor so let
11:34 - me just show you practical of this thing
11:36 - see now it will ask the number of blocks
11:39 - you want to enter
11:41 - so here see i have just commented out
11:43 - these points the one for loop in which
11:45 - you are entering the value right
11:48 - and we have only one for loop for
11:51 - printing the entered values
11:53 - right this we have only
11:57 - so it is asking enter total number of
11:58 - values so 3
12:00 - enter
12:01 - so we haven't initialized anything so
12:03 - the entered values are 0 0 0
12:07 - if the same thing you will do with
12:09 - malloc then there is value it will print
12:11 - any garbage value see i'll show you
12:14 - rather than hair cal okay look i'm using
12:17 - mellow so
12:19 - and into
12:20 - size of wind
12:22 - right and we are not going to initialize
12:24 - we will just print this is the only
12:26 - difference right
12:28 - now let's just run this again and show
12:30 - you what
12:31 - value you will get either garbage value
12:33 - or any other thing see enter number
12:35 - values 3 and see you are getting any
12:38 - garbage three values
12:41 - right
12:42 - so i hope now the difference between
12:44 - caloric and malloc is clear to you and
12:46 - you can use
12:47 - catalog function to you know allocate
12:50 - some memory or allocate memory
12:51 - dynamically in your program right
12:54 - now one more assignment for you is first
12:57 - of all you need to store five values
12:59 - right integer value
13:01 - right using callout function then you
13:04 - are supposed to free that memory
13:06 - again
13:07 - you are supposed to enter five float
13:09 - values or you can say 10 float values so
13:11 - again
13:12 - you will use now
13:14 - at this time you will use malloc
13:16 - function right and again at last you
13:19 - will free the memory
13:20 - right two time first time five number
13:23 - integer number using hello then free the
13:25 - memory you have to free the memory then
13:27 - ten float values using mellow and then
13:30 - you are supposed to free the memory
13:31 - right this is the program you have to
13:33 - write this is assignment for you right
13:35 - so i hope now that's it for this video
13:36 - so i hope now callout function is clear
13:38 - to you now the assignment for you is
13:40 - you're supposed to write down the
13:40 - difference between catalog and malloc
13:42 - function right so in the next video we
13:44 - will see about real functions soon i'll
13:46 - see in the next video till then bye take