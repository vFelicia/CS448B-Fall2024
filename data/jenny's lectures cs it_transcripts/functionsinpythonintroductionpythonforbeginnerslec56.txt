00:00 - so in the series of learning Python
00:02 - programming language in the previous
00:03 - video we have seen a project we have
00:05 - created a project Hangman game right so
00:07 - from this video I'm going to start a new
00:09 - topic that is functions in Python right
00:12 - and this will in this video we'll be
00:14 - discussing basic about function what is
00:15 - a function why basically we need a
00:17 - function this answer of this question is
00:19 - very important y functions what are the
00:21 - benefits of using function how to define
00:23 - a function what are different types of
00:24 - function
00:25 - right with the help of real life example
00:28 - I'll tell you what is function and with
00:30 - the help of program also practical also
00:32 - I will show you and I will introduce you
00:34 - with a new tool also in this video
00:37 - after using that tool you will be you
00:39 - know you know uh very friendly you can
00:43 - say with functions
00:44 - right it would be very easy for you guys
00:46 - maybe someone of you are aware about
00:48 - functions they have learned other
00:50 - languages CC Plus for Java but let's
00:54 - start this with a real life example
00:56 - suppose I know I know a recipe I know
00:58 - how to make idli one of my favorite from
01:00 - South Indian food actually
01:02 - and suppose one Sunday my friend came to
01:05 - me came to visit me and I made idli for
01:08 - them
01:09 - and she was like oh wow Italy like they
01:12 - they are so delicious and amazing so
01:15 - she asked me the recipe for that idli
01:18 - and I told her like like this
01:22 - even to be very Frank I don't know what
01:25 - is the recipe but let's take let's
01:27 - assume I know so Suppose there are these
01:31 - five or six or seven steps one two three
01:33 - four five six seven steps
01:36 - in the recipe so I told her these seven
01:39 - steps right maybe uh on next day or on
01:43 - another friend came to me and
01:47 - She also asked me for the same recipe
01:49 - because I made idli again
01:51 - because in this I am expert you can say
01:53 - so I told her the same recipe like this
01:58 - maybe every Sunday or every after two to
02:01 - three days someone is coming to me and I
02:03 - am telling them the recipe I am
02:05 - repeating these seven steps again and
02:07 - again I'm telling them the recipe right
02:09 - so
02:10 - what I can do rather than this what I
02:13 - can do now I'm feeling very frustrated
02:15 - after telling the recipe again again and
02:17 - again so what I can do I can just write
02:19 - down this recipe on a paper right
02:23 - and like r e c i p e
02:27 - recipe
02:28 - of idli you can say making idli right
02:31 - and whenever anyone comes to me and asks
02:33 - for the recipe I just hand over this
02:35 - piece of paper too
02:37 - damn right
02:38 - so yeah it is going to say what what is
02:41 - the benefit my energy and my time
02:44 - right I have just
02:46 - grouped these steps
02:50 - in US
02:51 - you can say an entity this is an entity
02:53 - on a paper and I'll just hand over that
02:55 - paper too
02:57 - whoever is going to ask me the recipe
02:59 - about the recipe
03:00 - right so yeah this is beneficial for me
03:02 - right same
03:06 - we have some function like uh in
03:09 - programming also we have to do something
03:11 - like some task again and again
03:13 - right suppose let's take one example
03:17 - and see if you take one more example
03:19 - like we human being also we are
03:21 - performing different different
03:22 - functionality we are multitasker like
03:24 - let's take a female as a mother as a
03:27 - wife as a daughter as a working woman
03:29 - and many functionalities are there
03:31 - right so different different
03:32 - functionalities are there for the same
03:34 - entity for the same person right means
03:38 - like if you are in front of your student
03:40 - you are working you are you know uh you
03:43 - know your responsibilities work you know
03:45 - acting as a teacher right if you are in
03:48 - front of your
03:49 - children then your responsibility means
03:51 - your functionality is your working as a
03:53 - mother something like this
03:56 - so whatever is in front of you according
03:58 - to that you have to perform your task
04:01 - right for different different inputs you
04:04 - are performing your specific task
04:06 - right so like this example also you can
04:10 - relate with the functions let's take uh
04:13 - this example if in programming also like
04:17 - two lines there are two lines simplest
04:19 - example I am taking like print hi and
04:23 - like Jenny
04:26 - and good morning
04:29 - like this
04:30 - I want to print these two lines again
04:32 - and again in my program like perform
04:34 - some specific task then execute these
04:37 - line then perform some specific task
04:39 - then again I want to
04:41 - before I want to you know greet like I
04:45 - want to uh print hi Jenny good morning
04:47 - then again perform some specific task in
04:49 - the same program again I want to perform
04:51 - these two lines perform some specific
04:53 - tasks again I want to greet like hi
04:55 - Jenny good morning right in program
04:57 - maybe 50 times so 50 times you need to
05:00 - write down these two lines so rather
05:02 - than this what we can do rather than
05:03 - repeating the two lines again and again
05:05 - what we can do the same thing
05:09 - just wrap up this thing
05:12 - here
05:14 - like print these two lines print
05:17 - then Jenny and
05:20 - good morning these two lines here
05:22 - right and just call it what I'm calling
05:25 - this a recipe right so it's like once
05:28 - you're functioning so let's call this
05:30 - thing what a function name greet
05:35 - and whenever you want to execute the
05:37 - these two lines then just call this
05:40 - function greet greet greet so rather
05:42 - than writing these two lines again and
05:45 - again just have to write down simple
05:47 - function name greet that's it
05:49 - right now I'll tell you how to define a
05:52 - function how to call the function there
05:53 - are two major steps basically first of
05:56 - all you have to define a function then
05:57 - you have to call the function right
06:00 - so now I hope you got it what is
06:02 - basically a function function is just
06:04 - what a block of statements or block of
06:08 - code this is just a block of code this
06:10 - is just a block of code or statement
06:12 - these are statements
06:13 - right
06:15 - which perform some specific task
06:18 - when it is cold it is going to perform
06:22 - those tasks only when you are going to
06:24 - call that function these lines are very
06:26 - important so when it is code so function
06:30 - is a group of
06:32 - you can say it's or you can say block of
06:34 - statements or block of code which is
06:36 - going to perform a specific task which
06:37 - perform a specific task when it is
06:40 - called that is function definition very
06:42 - simple right now how to define a
06:46 - function let me tell you two steps I
06:48 - have told you first Define a function
06:49 - then call the function right so how to
06:52 - define a function simple what is the
06:55 - syntax you will write down this def
06:57 - keyword def then
07:00 - here you will write down your function
07:02 - name any name you can take like add
07:04 - subtract grid any function name display
07:06 - anything
07:07 - these parenthesis then colon or in these
07:12 - parenthesis
07:14 - if you want to pass you can pass
07:17 - parameters right then here we have
07:23 - here we have function body or let me
07:25 - just write down this thing here we have
07:26 - function body
07:28 - and after that we have like return
07:32 - return statement
07:35 - return keyword and then some expression
07:38 - or whatever you want to return so this
07:39 - is what the complete one
07:42 - it is not necessary to pass parameter
07:44 - every time it is not necessary that
07:46 - every function is going to return
07:47 - something so this line is optional this
07:50 - one these parameters are optional but
07:52 - the mandatory part is to define a
07:54 - function def keyword function name these
07:57 - parenthesis maybe these are empty this
08:00 - colon and then function body
08:02 - right these are important these are you
08:05 - can say mandatory part if you are going
08:07 - to define a function parameters return
08:09 - expression these are optional part right
08:11 - and this this this should be indented
08:16 - right see I have there are some space
08:20 - at the beginning of these two lines so
08:22 - they should be indented otherwise it
08:23 - will give error
08:25 - right so this is you are going to define
08:27 - a function how to call the function then
08:28 - just write down the function name
08:31 - whatever the function name and
08:34 - these parenthesis if if you have passed
08:39 - some parameter if you use some parameter
08:41 - when you are defining a function then
08:43 - you have to pass those parameters here
08:45 - One Two Three or how many parameters you
08:48 - have
08:48 - there are no parameters just function
08:50 - name and these parenthesis this is what
08:52 - you are going to call the function
08:53 - right
08:55 - now
08:56 - and function will only work when you are
08:58 - going to call that function only
09:00 - definition of this function this is not
09:02 - going to work
09:03 - you have to call that function
09:06 - right like me as a teacher
09:09 - so whenever I am in front of my student
09:11 - right in front of my class
09:14 - then only I lacked as a teacher means at
09:18 - that time students are calling me you
09:19 - can say they are calling me so at that
09:22 - time only I'll work as a teacher right
09:25 - so you have to call that function
09:27 - right now there are two types of
09:28 - function built-in function plus user
09:30 - defined function so built-in functions
09:33 - are so built-in functions are already
09:36 - defined in Python already pre-coded or
09:38 - already defined right you don't need to
09:40 - write down any code to define those you
09:42 - can only use the you can directly use
09:44 - those function like simplest one is
09:47 - print in every program we use this
09:49 - function
09:50 - this is already defined in Python so you
09:53 - just have to use that function just
09:55 - print in these parenthesis whatever you
09:58 - want to print that you can pass here we
10:00 - pass that parameter the argument right
10:04 - built in like print we have Len function
10:06 - we have used this is also built in Max
10:09 - Min and type also we have used
10:13 - right
10:14 - so many functions are there you can also
10:17 - write down few built-in function in
10:19 - comment section
10:20 - now next a user defined a function user
10:22 - defined means you have to Define user
10:24 - will define those functions as per our
10:26 - need
10:27 - like whatever you want like I want to
10:29 - define a function of addition of two
10:31 - number
10:31 - so according to my head I'll Define a
10:33 - function the statement the code I'll
10:35 - write according to myself right and how
10:37 - to define that I have told you how to
10:39 - call that I have told you
10:41 - right
10:42 - now let's see this thing with the help
10:44 - of example and I will introduce you with
10:46 - a new tool also then you will get it
10:47 - better what function is and why we use
10:50 - it and now the the benefits or advantage
10:53 - of using function is what
10:55 - I guess now you got it what can be the
10:57 - benefits of using the function
11:00 - definitely your
11:03 - code becomes
11:05 - more reusable rather than writing these
11:07 - two lines again and again in the program
11:09 - just call the function so it means we
11:12 - are reusing these two lines so code
11:14 - reusability will increase
11:16 - the code would be more readable right
11:19 - because obviously if you call a function
11:22 - if you use functions then the number of
11:25 - lines in your code will also is going to
11:27 - decrease will be less and if less line
11:30 - of lines of code then your code would be
11:32 - more you can say readable
11:35 - right
11:36 - so these are few you can say and it will
11:40 - be time saving also right just Define
11:42 - one time and use reuse those thing again
11:45 - and again so it would be
11:46 - time saving for you right let me just
11:50 - show you this thing with the help of
11:52 - practical we'll see a program on
11:54 - functions okay so let's create a new
11:57 - file here for functions and
12:02 - functions like intro Dot py
12:06 - right
12:08 - and
12:10 - let's define a function depth how to
12:13 - define depth let's take a function
12:15 - suppose grid
12:17 - right colon and here it should be
12:20 - indented and there I just want to print
12:23 - high in one line and suppose here I want
12:27 - to print only gen
12:29 - these two lines
12:30 - so now
12:32 - this is definition of the function we
12:34 - are not passing any parameter because
12:35 - these are optional we are not returning
12:37 - anything here right so
12:40 - now here what we can do how to execute
12:43 - this function if I run this code see
12:45 - suppose we have defined a function
12:47 - and let's let's run this code
12:49 - see it is not printing anything the
12:52 - screen is blank right why so because
12:56 - to execute the function
12:59 - I have told you in the definition the
13:01 - function is a statement or block of
13:03 - statement block of code which performs
13:05 - some specific task when it is called so
13:08 - you have to call the function have to
13:09 - call the function just
13:11 - name of the function grid that's it this
13:14 - is calling of function now let's run
13:15 - this and this time it will print hygiene
13:18 - so if you want to print this multiple
13:20 - times
13:21 - so again I want to call grid again like
13:25 - read three times so these two lines will
13:27 - be printed three times in your program
13:30 - in the output see hi Jenny hi Jenny hi
13:33 - Jenny right
13:36 - so this is how the function will work
13:39 - now let me just introduce you with a new
13:42 - ah like tool we have Reeboks World our
13:45 - website is there okay for that you can
13:48 - directly search for like python coding
13:50 - free box world so
13:53 - first we'll take this example the second
13:55 - link alone World info python blocky this
13:58 - keep editor visible right let's run this
14:01 - and this is going to load
14:04 - right so here this type of thing would
14:07 - be opened here the project name is C
14:09 - along right
14:12 - okay now see the python code here we can
14:14 - write down python code so see here we
14:16 - have some functions like when you click
14:20 - on this Rebox keyboard then you will get
14:22 - some function like you can say command
14:24 - move turn left take put these kind of
14:27 - commands you can give these commands to
14:29 - this robot and it will perform according
14:31 - to your given command so here I have
14:33 - written one command like move here we
14:35 - have one command move movements it will
14:37 - move further One Step only so how to run
14:39 - this there's a play button right here
14:42 - just click on that and see
14:45 - it has moved one step ahead so last
14:47 - instruction completed so if you want to
14:49 - move this three steps or two steps then
14:51 - just use this function again move
14:56 - or maybe three times move
14:59 - and now if you want to go back here just
15:02 - click on this just go back this one and
15:06 - just click on the play so see it has
15:09 - moved three steps the robot so last
15:11 - instruction completed right so here we
15:13 - can write down our python codes we
15:15 - haven't written till now we are still
15:17 - you we are using those uh you know
15:19 - inbuilt function only we have we haven't
15:22 - defined our own function till now but we
15:24 - are going to Define right
15:26 - if one by one if you want to execute the
15:28 - instruction suppose first instruction
15:30 - instruction first and second and third
15:31 - so you have to click on this one step
15:34 - through button step
15:36 - click one then
15:38 - see it is going to show this one line
15:40 - would be executed move
15:43 - see like this
15:45 - again move again click move
15:48 - three line would be executed and that's
15:51 - it last instruction completed so let's
15:54 - back here
15:56 - and okay
15:58 - turn left there is one function use this
16:01 - turn left just click on that and it
16:03 - would be here turn left
16:05 - or rather than first turn left first we
16:09 - move this robot like three times and
16:11 - then we use the function
16:14 - turn left
16:17 - not at the starting
16:21 - so if I run this code here so three step
16:24 - then turn left
16:26 - see turn left the robot has turned left
16:30 - this weight is going then turn left this
16:32 - side
16:33 - and again
16:35 - if I
16:39 - after turn left if I use the move
16:41 - function again three times and if I run
16:43 - this again
16:47 - see now this would be executed move
16:50 - first three times turn left and move
16:52 - again
16:53 - three times right but there is no see
16:57 - there is no turn around or turn right
17:00 - function here
17:01 - right only turn left is there now if you
17:04 - want to
17:06 - here
17:07 - command the robot to turn right then how
17:10 - you leave that thing
17:12 - so Define your own function turn right
17:15 - function at this point of time if I want
17:17 - to give the command to this robot turn
17:18 - right
17:19 - then how will you now you have to Define
17:22 - your own function now pause the video
17:23 - and Define your own function
17:30 - okay how we are going to Define
17:32 - def keyword function name I am taking
17:35 - turn right
17:37 - parenthesis colon and now the definition
17:39 - it should be indented right
17:43 - now turn right means simply at this
17:46 - point of time if this robot we give this
17:49 - robot three times turn left command then
17:52 - it would be
17:54 - automatically at the last
17:56 - ultimately turn right command would be
17:58 - executed so three times turn left so now
18:01 - this is a turn right function now now if
18:04 - I call that this function here
18:09 - turn right
18:12 - and suppose again
18:14 - move
18:15 - One Step move and if I run this let me
18:19 - just stop this just click on this
18:22 - reload button and play
18:29 - like this
18:30 - right turn right and then one move but
18:34 - we have defined our own function suppose
18:37 - if you want to
18:39 - execute this if you want to command
18:41 - command this uh you know uh
18:43 - robot something like this okay the same
18:46 - thing then
18:48 - it has to move downward three step
18:52 - right again and then
18:55 - simply
18:56 - the face would be in this in this
18:59 - Direction only this direction forward
19:01 - Direction only right so how we are going
19:04 - to give this this this command see now
19:08 - at this point of time also
19:10 - for going downward you have to give the
19:13 - command obviously turn right like this
19:16 - we are facing then at this point of time
19:18 - means turn right right and if suppose
19:21 - you haven't defined this function
19:24 - then for turn right you have to write
19:26 - down this turn left three times
19:29 - so here rather than turn right you have
19:32 - to write down these
19:38 - three times
19:40 - then again move then again turn right so
19:45 - again write down these three commands
19:47 - turn left command here like three times
19:52 - here there should be no indentation
19:54 - right
19:58 - now three times move
20:01 - right and then finally
20:05 - turn left
20:08 - right
20:10 - this would be the case if we are not
20:12 - using the function turn right we haven't
20:15 - defined the function so let's stop this
20:17 - and now let's run this
20:31 - so now you are repeating these turn left
20:34 - and turn left these three lines again
20:37 - and again whenever you want to give the
20:39 - command to the robot turn right then
20:40 - three times you have to write down turn
20:42 - left again and again
20:44 - so better to define a function so that's
20:46 - exactly we have done just Define a
20:47 - function turn right and rather than
20:49 - these three lines
20:51 - just use one line turn
20:54 - right that's it rather than these three
20:58 - lines
21:00 - turn
21:01 - right
21:03 - just one line
21:05 - so yeah this is going to reduce the
21:08 - number of lines in your code when you
21:09 - are using function code reusability will
21:12 - increase and as well as code readability
21:14 - will also increase right this is also
21:17 - going to perform the same task
21:19 - one by one we are going to run this now
21:21 - this step through option
21:23 - let's run this once click then again
21:26 - click
21:27 - then this move command would be executed
21:30 - then second move again run again
21:33 - turn left again again again click on
21:37 - that now see cursor is a
21:40 - here at this function turn right now
21:44 - click on the step function now person
21:46 - would be here
21:49 - in the definition of this function so
21:51 - first turn left
21:52 - again second turn left again third turn
21:55 - left would be performed now that's it
21:58 - now we are we are turning we have turned
22:01 - right this robot then move then again
22:04 - turn right then again function would be
22:06 - cold see the cursor is again the control
22:08 - is again here within the function
22:11 - then three times turn left and then move
22:15 - then this move then this then again turn
22:18 - left and that's it
22:20 - right
22:22 - so this is beauty of function you can
22:25 - say now one exercise for you is
22:28 - turn around
22:30 - there is no function turn around here so
22:32 - you have to Define your own function how
22:34 - to turn around
22:35 - let's suppose move this robot three
22:38 - times here
22:40 - three times forward then turn around
22:43 - then three times backward the same
22:45 - position how you will Define your
22:47 - turnaround function pause the video and
22:49 - try this out
22:56 - okay I hope you have done this how to
22:58 - define turn
23:01 - I think this is very simple if you have
23:02 - done this turn left turn around is very
23:04 - simple
23:05 - just two times turn left and that's it
23:08 - this should be turn around two time turn
23:11 - left only right so let's
23:16 - here we will do that thing after turning
23:19 - left at the final time then we will call
23:23 - turn
23:25 - around function
23:28 - and then again
23:30 - move
23:33 - right let's run this and see what output
23:36 - you will get
23:44 - C
23:46 - turn around and then back one step
23:49 - so this is what we can Define our own
23:52 - function turn around turn right function
23:54 - so I hope you got the basics of
23:56 - functions why we need functions use of
23:59 - function benefit of function and all now
24:02 - in the actually we'll see one more
24:03 - coding exercise on function now this is