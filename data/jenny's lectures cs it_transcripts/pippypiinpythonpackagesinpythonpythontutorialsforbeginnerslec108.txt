00:00 - hey everyone I hope you are safe and
00:01 - doing good so in the series of learning
00:03 - Python programming language we have
00:04 - discussed oops Concept in Python and
00:07 - before that we we have discussed one
00:09 - concept that was modules in Python right
00:11 - so the next topic is packages in Python
00:13 - because modules and packages these are
00:15 - related but before uh discussing
00:18 - packages in detail we will be discussing
00:21 - two small topics that is what is the
00:23 - spip command and what is
00:25 - pypi because that is also important one
00:28 - and sometimes you get confused like like
00:30 - these both are same or different okay so
00:33 - this thing we'll be discussing in this
00:34 - video with the help of practical program
00:36 - I'll show you the role of these two
00:38 - things those commands and then in detail
00:40 - in uh next video we'll see packages
00:42 - right so in simple term if I say then
00:44 - the spip is what it's just a package
00:46 - installer or package manager for python
00:50 - so first we'll be discussing what is
00:54 - package then we'll come to this
00:56 - definition like what is package
00:57 - installer or package manager but first
00:59 - you need to clear one thing like what is
01:01 - a package right in Python so for this
01:04 - let's take a real life example suppose
01:05 - you are going to shift your home and
01:07 - your mom ask you to pack your stuff
01:09 - everything your clothes your books your
01:11 - electronic gadgets and your footwares
01:13 - and everything you have okay now you
01:16 - have to pack that thing so okay now one
01:19 - way is what we can say you have that
01:22 - truck or maybe that one vehicle whatever
01:25 - you have maybe you have hold one truck
01:28 - because you have lots of stuff
01:30 - right and you just put all your all your
01:32 - stuff in that truck directly but
01:35 - obviously that is not a good idea right
01:39 - to shift all your stuff because that
01:42 - definitely it's going to damage and yeah
01:45 - we will not refer that thing okay so
01:49 - that is a case when we write a program
01:51 - then we write everything in that program
01:54 - it in one file only
01:57 - right but the thing is if you have
02:01 - limited stuff then it's okay like if you
02:04 - have small program then it's okay in one
02:06 - file you can write everything any
02:07 - function you have or anything you have
02:09 - you can write down but if you are
02:11 - suppose working on a large project or
02:13 - you are developing a large application
02:15 - right and you have thousands number of
02:17 - lines of code then obviously it's not a
02:19 - good idea to write down everything in
02:21 - one file
02:23 - okay that is why we come to that modular
02:26 - programming approach we divide our
02:28 - program in modules right like like we
02:30 - have discussed in uh previous video And
02:32 - discussing it when we're discussing
02:33 - modules in Python in that case we have
02:35 - taken one example of that project quiz
02:37 - game as you can see here right rather
02:40 - than writing all the things you know
02:43 - under one file a main file py we have
02:47 - divided that project into different
02:49 - different files like we have one
02:51 - database. py file or maybe main py file
02:53 - or you can have three or four files and
02:57 - you can just in your one M Main file you
03:00 - can just
03:01 - import whatever you need from other
03:03 - files so module is just a py file okay
03:08 - it's just a program or py file that
03:11 - you're going to
03:12 - import in other programs or maybe
03:14 - interactively you are going to import
03:16 - some buil-in modules also we have like
03:18 - random module so in the same program we
03:20 - are writing here just import math or
03:22 - import random and whatever the functions
03:25 - in that module we can use those function
03:26 - in our program right so those are
03:28 - different things those are buil-in
03:30 - modules and these modules we have
03:32 - defined ourself right for our this
03:35 - project so if you have divided your
03:37 - project a large project in three or four
03:40 - different different files then it's easy
03:42 - to manage that project right I hope you
03:45 - are agree with this thing same comes
03:49 - come you know to that real life example
03:52 - what you will do rather than just
03:53 - putting all your stuff directly to into
03:55 - that truck what we'll do we'll pack our
03:58 - stuff
04:00 - right like we have cartons to pack of
04:03 - stuff so maybe you have like
04:06 - shirts and I have like jeans and like I
04:10 - have night suits and for foot waar like
04:13 - obviously I have like maybe shoes
04:16 - heels and uh uh boots
04:21 - flats and I have my
04:24 - books different different books or I
04:26 - have my toys or all the things I'm going
04:29 - to pack suppose in different different
04:32 - cartons right like
04:38 - this and same maybe for your brother for
04:42 - your sister your mother your father
04:43 - everyone is having their own cartons so
04:46 - obviously there would be many cartons so
04:49 - it's like you can consider these thing
04:50 - as
04:54 - modules like in we have py file right
04:57 - database py Main py quiz game. py quiz
05:01 - brain. py or many py files you are
05:03 - having so these are different different
05:04 - files these are considered as simply
05:06 - nothing but module so you can import
05:07 - these files into one another into
05:09 - different files like into other files
05:11 - right so there are many modules
05:15 - now this is also a case like if there
05:19 - are many many many modules then also
05:21 - it's not possible to handle to keep
05:23 - track of those modules if your
05:26 - application size is going to increase
05:29 - then OB number of modules going to
05:30 - increase and it's not possible to track
05:32 - all the modules right at some point of
05:34 - time after some point of time right so
05:37 - one better idea is what what we can do
05:41 - like we can take
05:45 - one carton right large carton and there
05:49 - in one carton I can just put all these
05:53 - small cartons like shirt jeans stall
05:56 - night suit now clothes is one carton and
06:00 - there the big one and there I'm putting
06:02 - these four cartons right so I'm just
06:06 - grouping similar kind of things in one
06:09 - carton I'm not putting like is it a good
06:12 - idea to put like shirts shoes books in
06:16 - one carton obviously
06:18 - not when we are going to group things
06:21 - then we think about grouping similar
06:24 - kind of items together right so we
06:28 - generally group similar kind of items so
06:31 - we rather than grouping shirt shoes
06:33 - books we put shirt jeans stalles night
06:35 - suit night suit in one carton that's a
06:39 - good idea so it's grouping of modules
06:41 - these are different different modules
06:42 - and we are grouping these modules so
06:44 - this is what a
06:47 - package this is nothing but a package I
06:50 - hope you got now package so packages
06:54 - just a collection of
06:56 - modules the modules which are having
06:58 - similar kind ofun functionalities we
07:00 - group those modules together and that is
07:02 - known as a package so it's nothing just
07:04 - but just a directory or you can say a
07:07 - folder as we see in your laptop also you
07:10 - have folder like if you have many
07:11 - pictures many pics so we just uh you
07:16 - know arrange these
07:17 - pictures in folders like one folder of
07:20 - having pictures then within those
07:23 - folders this is fix So within this I am
07:27 - having like like 2018 P 2019 pic like
07:32 - this till 2023 pic different different
07:35 - folders within this folder also I'm
07:37 - having like one more folder like uh my
07:40 - farewell pick here one more folder like
07:43 - maybe road
07:45 - trip here maybe one more folder and uh
07:49 - like maybe jao trip or any other
07:53 - thing and within this we are having
07:55 - actual picks right so we are arranging
07:59 - these things these picture in a
08:02 - structured way so that we can access
08:03 - these thing easily right that's why we
08:07 - use these kind of structure folder
08:09 - folder folder then actual item the files
08:13 - we can say so same
08:15 - here packages are just like this a
08:18 - directory or you can say it's a
08:20 - folder to structure the modules or the
08:24 - files in a better way so that we can
08:27 - access easily access these files
08:30 - right so now and there is one more
08:34 - module like this all the like shoes
08:37 - heels boots flats we can just take a big
08:40 - carton and there I can like
08:44 - Footwear I can just try down on that
08:46 - carton Footwear and there I can put
08:48 - these boxes like this and maybe one for
08:51 - books one for toys like this different
08:54 - different right so like this this is a
08:56 - module maybe module toys is a module
09:00 - simply right or within books also
09:03 - suppose books is a package and there I
09:06 - have two
09:07 - modules maybe your fiction books
09:10 - non-fiction books and these kind of
09:11 - things right or maybe your subject-wise
09:14 - books you can arrange like this so I
09:16 - hope you got a general idea of what is a
09:18 - package package is just a collection of
09:20 - modules or not just collection of
09:21 - modules collection of modules as as well
09:24 - as sub packages
09:26 - so I have something like this two
09:29 - packages let's take this example only
09:31 - small example only two things Footwear
09:34 - and clothes so these two are packages
09:37 - and
09:40 - here I'm having one more package maybe
09:44 - like
09:47 - uh shifting items and maybe my name
09:52 - Jen so I have one more carton there I'm
09:55 - putting these two things and Within
09:57 - These I'm having these things so these
09:59 - are what see the hierarchy modules this
10:02 - is what now a sub
10:03 - package and this is what a
10:06 - package so package a collection of
10:09 - modules like this or maybe it's a
10:10 - collection of like this package is a
10:12 - collection of sub packages so collection
10:14 - of modules as well as we can say
10:15 - collection of sub packag and modules
10:17 - like this right I hope you got what is a
10:19 - package and what is need of package
10:22 - right and see generally a package is a
10:25 - collection of like modules let's take
10:27 - this package clothes collection modules
10:29 - so we can say this means um these this
10:33 - package modules are bound together by
10:37 - your name package name and we can
10:39 - reference these module by this package
10:41 - name like clothes do shorts so like if
10:46 - you write short do
10:48 - py like in terms of programming so this
10:52 - the these files are modules this is a
10:54 - package right so it's a directory or
10:56 - just a folder okay and the the package
10:59 - can contain sub packages to an arbitrary
11:01 - depth fine pack this is a package sub
11:05 - package within this also we can have a
11:07 - package within that also we can have a
11:08 - package package package like this this
11:11 - this is possible so I hope you got what
11:13 - is a package now in Python we have many
11:18 - packages inbuilt packages and as well as
11:20 - we can Define your own packages okay so
11:24 - how to install those in built packages
11:27 - like pandas like or when these packages
11:30 - are published basically that is known as
11:34 - we can say it's a
11:35 - library okay and many users like write
11:41 - packages and they publish so there is a
11:43 - repository that is this pypi python
11:47 - package index there they're going to
11:50 - it's just a
11:52 - repository okay so you can write your
11:55 - package you can submit you can publish
11:57 - your package in this Repository and from
11:59 - this repository anyone can install or
12:01 - access the package okay so rather than
12:06 - writing the code from scratch if anyone
12:09 - any other has done that thing any other
12:12 - has written the code for that thing so
12:14 - we can directly use that code we can
12:16 - directly import that package we can
12:18 - directly install that package and we can
12:20 - directly use that so it is going to make
12:22 - a programmers developers life easy
12:25 - definitely right so this is that
12:27 - repository and using p command we can
12:30 - install that package so it's a package
12:33 - installer or package manager for python
12:36 - right by default it searches this
12:38 - repository first and it and more than
12:42 - two lakhs packages are there in this
12:44 - repository main main like you I hope you
12:47 - have heard these name nay pandas request
12:50 - right and um kinder so these packages we
12:54 - will work these packages also and I I'm
12:56 - going to show you how to install these
12:57 - packages right so
12:59 - PP just like
13:01 - um like you your mother ask you to like
13:06 - uh to go to supermarket and bring some
13:08 - maybe bread then eggs then maybe fruits
13:12 - you go to
13:14 - supermarket you just bring that eggs and
13:16 - you put that those eggs in refrigerator
13:18 - you bring that bread sometime you put
13:21 - you bring vegetables you bring fruits
13:24 - like this right so you
13:26 - are like a package in installer or
13:29 - package manager for your home you will
13:32 - go and search where you will find that
13:35 - item wherever you will find that item
13:36 - you will purchase and you
13:38 - will install or you will you know bring
13:41 - that item to your home like this also
13:43 - pip is also that thing pip is going to
13:48 - install going to search first that
13:50 - package you want to install in this
13:52 - repository by default search there and
13:55 - just bring that or just install that
13:57 - package to your laptop to your
14:00 - laptop right I hope you got what is PIP
14:02 - now what is this package installer means
14:04 - or package manager means fine so these
14:07 - are external packages right we are going
14:10 - to install those packages let me show
14:12 - you practically these things we are
14:13 - going to work in command prompt to you
14:16 - know see the use of this pip command and
14:17 - all you can just open your command
14:20 - prompt like I have written here search
14:22 - bar like command prompt and just click
14:24 - on command prompt right now this is the
14:27 - thing here okay now how how to install
14:29 - external packages right you know the
14:32 - name of that package like like pandas
14:34 - numai whatever package you want to
14:36 - install you know the name right so now
14:38 - I'm I'm going to install that those
14:40 - packages so first you need to make sure
14:42 - that that pip command is
14:44 - working on your this uh know python
14:47 - interpreter so let's check that thing if
14:51 - you want to check first the python
14:53 - version then just write out the
14:54 - python and hyphen hyphen like Dash these
14:59 - two dashes and version so I have
15:02 - 3.10 uh 3.1.8 right now make sure p is
15:06 - working so how to make sure let's write
15:09 - down this thing Python and hyphen M this
15:13 - is the syntax hyphen M pip let's run
15:16 - this yeah see it's working see you you
15:19 - got the uh you know description of this
15:21 - pip the command what commands you can
15:24 - use with this pip install download
15:27 - uninstall freeze right if you want to
15:29 - install something install packages then
15:31 - you have to use this command install
15:34 - right download download packages
15:36 - uninstall you can uninstall list list
15:39 - install packages so these are some
15:40 - commands right and these are some
15:42 - options with Pip if you are getting any
15:44 - error then it means you have to install
15:47 - first the splp right if you have
15:49 - downloaded python from python.org then
15:52 - it is automatically
15:53 - installed on your laptop right like in
15:57 - my laptop I have installed python from
16:00 - python.org so it's being already
16:02 - automatically installed in my python so
16:05 - I haven't installed this pip
16:07 - separately so if you are facing any
16:10 - difficulty you can let me know in
16:10 - comment section and we can make a
16:12 - different you know video to install that
16:15 - pip on your laptop and what kind of ha
16:18 - you are getting you can let let me know
16:19 - in comment section so now now you have
16:23 - to install packages so for that thing
16:25 - you have to do you have to write down
16:26 - pip and then install and then the
16:30 - package name suppose I want to install
16:33 - uh pandas so this Library pandas so
16:38 - let's run this and actually see it is
16:42 - showing requirement already satisfied
16:44 - because I have already installed pandas
16:47 - on my laptop I have this package this
16:50 - Library if you're not having then
16:52 - definitely it is going to take some time
16:54 - 1 minute around and it will install
16:56 - everything you can run this command and
16:58 - it it will run fine if you have Pip
17:00 - installed correctly right so if I show
17:04 - you let me just uninstall this thing or
17:07 - let me just show you the list of
17:09 - packages I have so pip list and see I
17:13 - have numai pandas setup tools and these
17:17 - things I have already right if I want to
17:19 - uninstall then
17:22 - pip
17:24 - uninstall
17:26 - pandas so see
17:30 - uninstalling pandas and uh proceed
17:35 - yes sucessfully
17:37 - uninstalled now if I
17:41 - install
17:44 - again this pandas so see as you can see
17:49 - it is installing my collected packages
17:51 - pandas so it is running so what you need
17:54 - to do you just have to write down pip
17:58 - install and the package name right and
18:02 - these packages are there in
18:05 - Python uh package index
18:08 - pypi it is a repository you can just
18:12 - maybe search Pi pypi packages and see
18:16 - the first one you can go for this pypi
18:19 - dog and there you can you can browse
18:22 - project or you can search like based on
18:24 - this classifier you can just based on
18:26 - topic you can just maybe
18:28 - uh you can apply some filters and based
18:32 - on that you will get these libraries
18:34 - right so if any on anyone you will get
18:37 - see this is the command you install you
18:39 - can install this thing right and this
18:42 - project description is also there what
18:44 - it is going to do fine now if I want to
18:48 - use pandas then just start your python
18:52 - interpretor just write by writing down
18:54 - this python see the version here and now
18:57 - three
18:58 - these symbols are there now means I am
19:01 - in my python interpreter and I can just
19:03 - import pandas now it will not give any
19:06 - error because I have now installed
19:08 - pandas right so it is not going to give
19:10 - any error and see you're not getting any
19:12 - error so anything you're like I want to
19:14 - print high something like
19:17 - this maybe so it will print high
19:20 - right and you can import the packages
19:24 - same you are in the same way you are
19:26 - importing modules like import and
19:27 - package name
19:28 - simple right so I hope you got now idea
19:32 - about a little bit idea about what is a
19:34 - package and what is pip and what is this
19:35 - pypi right now in the next video we'll
19:38 - see in this video we have seen those
19:40 - external packages someone has already
19:42 - built those packages and we are going to
19:44 - install that and use those packages now
19:47 - we can Define your own packages right so
19:49 - that thing we'll see in next video how
19:51 - to create your own package so now I'll
19:53 - see you in the next Tut bye-bye take
19:55 - care