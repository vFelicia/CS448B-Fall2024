00:00 - in the seas of learning programming in
00:01 - cv have covered all type of operators in
00:03 - cn in the previous video i have
00:04 - discussed operator precedence and
00:06 - associativity but in this video i'm
00:08 - going to discuss some common mistakes
00:10 - beginners do when they start writing
00:12 - programs because nowadays i'm getting
00:13 - many mails and many messages on my
00:15 - instagram account
00:16 - like students send me a program or you
00:18 - can say your screenshot of that program
00:20 - and
00:21 - they say that we are not able to run
00:22 - this program and we are not getting the
00:23 - exact output what is error in this
00:25 - program and
00:26 - they are committing silly mistakes like
00:27 - missing a semicolon or some
00:29 - you know spelling mistakes but they are
00:31 - not able to find out
00:32 - so i thought it's better to list down
00:35 - all the mistakes in a video
00:37 - and all the common mistakes beginners do
00:39 - when they start
00:40 - writing programs it would be better
00:42 - right so that's exactly
00:44 - i will i'll be talking about in this
00:45 - video all the common mistakes you do and
00:48 - when you commit these type of mistakes
00:49 - what error message you will get or maybe
00:51 - some warning message you will get
00:52 - or you will get a syntax error or a
00:54 - logical error what kind of error you
00:56 - will
00:56 - you will get everything will be
00:58 - discussing in this video right
01:00 - this video is brought to you by an
01:01 - academy on an academy there is a combat
01:03 - going on for gate and esc aspirants it's
01:06 - the most competitive and gamified
01:08 - gate battle you will get a chance to
01:10 - compete with thousands of
01:12 - learners in this india's biggest
01:14 - fortnightly competition for gate and
01:16 - you'll get a chance to attempt
01:17 - challenging questions by the best
01:19 - educators you will get live ranking
01:21 - and if you're a good ranker then you can
01:24 - win exciting prizes you can see the
01:25 - prices details here for rank one
01:27 - holder three months gate and ac plus
01:29 - subscription for uh rank two and three
01:31 - one month
01:32 - gate and esc plus subscription free and
01:34 - for rank four and
01:35 - four to hundred rankers uh rupees 500
01:39 - amazon vouchers you will get
01:40 - and next compact will be live on 26th of
01:43 - uh january
01:44 - what is the benefit of this thing you
01:46 - will come to know where you are standing
01:47 - in the competition how well you have
01:49 - prepared for your gate exam you can
01:50 - assess your
01:51 - preparation for gate examination and
01:53 - after that if you have any uh
01:55 - weak areas then you can identify your
01:57 - weak weak areas and you can improve
01:59 - because after this compact is over then
02:00 - you will get a detailed video solutions
02:02 - of
02:03 - those questions where you will get a
02:04 - chance to attempt challenging questions
02:06 - the original gate questions that was
02:07 - curated by
02:08 - the best educators on academy and you
02:10 - can register freely for this
02:12 - to unlock this combat you can you use
02:14 - the code jkl10 everything the detail is
02:16 - over here
02:16 - and if you are interested then you can
02:18 - go for it the details and the link the
02:20 - registration link
02:21 - as well as the code jkl10 i'll put in
02:23 - the description box of this video you
02:25 - can go and check out
02:26 - now let us discuss the common mistakes
02:28 - beginners do when they start writing
02:29 - programs
02:30 - very first mistakes what they do is when
02:32 - they write down those header files then
02:34 - rather than writing
02:36 - what s t d i o what they write
02:39 - s t u d i u studio dot h this is the
02:41 - most common error you do
02:43 - you have to take care of this thing
02:45 - second thing is what
02:46 - what you write when you write main
02:48 - function then after that you write
02:50 - semicolon
02:51 - no it is not allowed you don't have to
02:53 - write semicolon after this it will
02:54 - give an error message like that the
02:57 - declaration terminated incorrectly
02:59 - after main function you cannot that you
03:02 - cannot
03:02 - put semicolon right next is let us take
03:05 - this example and through this
03:07 - i i'll try to cover all the common
03:09 - mistakes you can
03:10 - do one is this you can write studio load
03:13 - edge here
03:14 - and when you write studio rotate what
03:16 - error you will get unable to open this
03:18 - file
03:18 - because there is no studio file there
03:20 - there is file file is what sdi dot h
03:22 - when you write semicolon here whatever
03:24 - you will get declaration
03:26 - terminated incorrectly in this line the
03:28 - cursor would be in this line
03:29 - after this line right right next is what
03:32 - you can do
03:33 - see after these statements you forgot
03:36 - to write semicolon so you have to take
03:39 - care of this thing after every
03:40 - statements you need to write
03:42 - you need to put semicolon yeah some some
03:44 - lines are there where you don't need to
03:46 - put semicolon but
03:47 - when you write up when you write
03:49 - programs when you will get habitual of
03:51 - writing programs then automatically you
03:52 - will
03:53 - come to know it it will be in your
03:55 - practice you don't have to
03:56 - memorize these things right you can
03:58 - understand where you have to put
04:00 - semicolon and where you need not to put
04:02 - semicolon
04:02 - sometimes you can do what a spelling
04:04 - mistake of this clear screen also you
04:06 - have to take care of this thing
04:08 - and sometimes what you do you have
04:11 - written what printf into two numbers i
04:13 - am asking from the user to enter two
04:15 - numbers right i am not initializing the
04:17 - data here
04:18 - i am just declaring the variables a b
04:20 - and sum
04:21 - now in scanner function what you do
04:24 - percentage d percentage
04:25 - d this is for what format specifier for
04:28 - integer because
04:28 - i am going to take two integers that is
04:30 - why i am writing two times
04:32 - two times percentage d so sometimes you
04:34 - write
04:35 - semicolon here this will give you
04:37 - logical error not syntax error it will
04:39 - accept only one value and then it will
04:41 - take some garbage value right next is
04:44 - you don't have to put like same
04:46 - this this here you forgot to put coma
04:48 - here
04:49 - this will give you syntax error compile
04:50 - time error you will get
04:52 - right so you have to put coma after this
04:55 - uh closing of this mutation mark like
04:57 - sometimes you forgot to
04:58 - write put to put coma here that will
05:01 - also give compile time error you
05:02 - like the illegal use of pointer right
05:05 - here
05:06 - so you have to put comma sometimes you
05:07 - do what you do
05:09 - what the the closing of these quotation
05:11 - mark after this line
05:14 - this will what this will give what that
05:16 - logical error
05:17 - now next what you can do in printf in
05:20 - this when you
05:21 - print the output on the screen then what
05:23 - you can do sum is and you forgot to put
05:25 - here percentage d
05:27 - because in in this printf i'm not
05:29 - putting any percentage d
05:31 - this is what i'm just writing i'm just
05:34 - i just want that on the screen the
05:36 - message should be displayed like enter
05:38 - two numbers
05:39 - right that's it so no need to write down
05:41 - any percentage during any format
05:43 - specifier but here
05:44 - you want to print print output so output
05:47 - should be fast from the memory which
05:49 - kind of output according to that you
05:51 - need to put format specifier
05:52 - the output is in the form of the data
05:54 - type is integer so that is why we are
05:56 - using percentage
05:58 - d so if you forgot to use percentage d
06:01 - here then what error message you will
06:02 - get
06:03 - so you will not get any error message at
06:05 - compile time
06:06 - what you will get at runtime you will
06:08 - not get any output
06:09 - it will ask you the output would be
06:11 - enter two numbers you will enter two
06:13 - numbers like two or three
06:16 - when you put when you press that enter
06:18 - key then what would should be printed
06:19 - sum is
06:20 - that's it equal to no sum would be
06:23 - printed like numbers is 2 and 3 so
06:25 - sum is equal to 5 that should be printed
06:27 - but it will print only some
06:30 - is equal to no 5 because
06:33 - it is not able to fetch any data from
06:35 - memory you have to use format specifier
06:37 - for that
06:38 - sometimes you forgot to place a comma
06:40 - that will give you an error message
06:42 - and which kind of error message function
06:43 - call missing that cursor would be here
06:45 - in this line and here the
06:47 - function called missing so you have to
06:49 - put coma higher
06:50 - sometimes students do what they write
06:53 - that's the scanf you write what address
06:55 - of operator ampersand
06:56 - they write 10 percent here but you don't
06:58 - need to write m percent here
07:00 - illegal use of pointer right when you
07:02 - printing the output means no need to use
07:04 - these address of operators in printf we
07:06 - use address of operators in scanf
07:08 - scanf is used what to get input from the
07:11 - user
07:12 - so that is why if we take input like 2
07:15 - and 3 2
07:16 - and 3 for this a and b then obviously
07:19 - we have to store these inputs in memory
07:22 - some address some memory
07:23 - address has been assigned to variables a
07:25 - and b
07:26 - so which memory address though that
07:29 - address this
07:30 - address of operator will fetch that this
07:32 - address of operator will tell address of
07:34 - a and then 2 would be stored here this
07:38 - will
07:38 - tell address of b where the variable b
07:41 - is and then value would be stored here
07:42 - that is why we are using here
07:44 - address of operator right and sometimes
07:47 - you forget to
07:48 - close this these braces this is a simple
07:50 - program but when we
07:52 - will discuss the more advanced concept
07:53 - like control statements loops and c
07:56 - and arrays pointers everything then
07:58 - program should be lengthy and
07:59 - in that program we'll be writing these
08:01 - braces multiple times so for every
08:03 - opening braces there should be a closing
08:04 - braces you need to take care of these
08:06 - braces also
08:07 - right so these are i think these silly
08:09 - mistakes or common mistakes
08:11 - uh generally students for beginners do
08:13 - when they start writing
08:15 - programs but if you think that there can
08:17 - be some more mistakes and or or
08:19 - as a beginner you have committed some
08:20 - mistakes so you can write down those
08:22 - mistakes in the comment box so that
08:24 - other students can get help they can
08:25 - avoid they can you know
08:27 - take precautions like these kind of
08:29 - mistakes can be uh you know you we can
08:31 - commit so that's it for this video now
08:33 - i'll see you in the next video till then
08:34 - bye bye