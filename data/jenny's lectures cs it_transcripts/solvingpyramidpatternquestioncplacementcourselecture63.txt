00:00 - hey everyone I hope you are safe and
00:02 - doing good so in the series of learning
00:04 - C++ programming language we are
00:05 - discussing strings in C++ in the
00:07 - previous video we have seen one coding
00:08 - exercise based on strings that is we
00:11 - have created our substitution Cipher
00:14 - right I hope you have done that exercise
00:15 - in this video so we will see one uh
00:17 - question that is we're going to create a
00:19 - pattern and which is a pyramid
00:23 - pattern right so what you have to do you
00:25 - have to write a program that will create
00:27 - a letter pyramid pattern from a user
00:30 - given string means user will provide a
00:33 - string and using that string the
00:35 - characters of that string you will
00:36 - create a pyramid like this if a user has
00:40 - given this a b c this string right then
00:45 - the pattern would be something like this
00:47 - a then a b a then a b c b a right if
00:53 - user has given 1 2 3
00:55 - 4 in string format as a string so the
00:59 - output should be something like this if
01:01 - user has given this A B C D E then
01:03 - output should be something like this
01:05 - right so you have to do this thing now
01:08 - you know we have done uh strings you
01:11 - know how to use Loops you know how to
01:13 - use like nested Loops as well right so
01:16 - these things you have to do only nested
01:17 - Loops or maybe not nested Loop you can
01:20 - use some Loops also or you have to use
01:23 - strings and there are multiple ways to
01:26 - solve this problem this kind of problem
01:28 - right we'll see one way right in this
01:31 - video right so what you have to do just
01:33 - pause the video and try this out let me
01:35 - just give you a hint first
01:38 - C first of all in these pattern printing
01:42 - uh program you have to decide like
01:43 - number of rows and number of columns
01:46 - right so from these example number of
01:50 - rows are how many number of rows are
01:52 - there if you see closely then you have
01:55 - given three characters like in a string
01:58 - which is having three character or the
02:00 - length of the string is three so there
02:02 - are three rows only here the string is
02:05 - having four character means length is
02:07 - four so four rows Here length is five so
02:11 - here we have five rows so this is final
02:15 - number of rows are equal to length of
02:17 - the string right so you have to find out
02:20 - yeah length of the string you have
02:22 - length function size function based on
02:24 - that you can find out length right then
02:27 - before actual printing there are some
02:28 - space like here we have 1 2 3 4 here we
02:33 - have 1 2 3 here we have 1 2 here we have
02:36 - one space so this triangle first you
02:40 - have to print here also same like space
02:44 - we have one and two one so this triangle
02:47 - this space triangle first you have to
02:49 - print right then this
02:54 - thing this
02:57 - triangle right and then this this
03:00 - one so three or four thing you have to
03:03 - do here right how many spaces are there
03:08 - spaces are number of see number of rows
03:11 - 1 2
03:13 - 3 uh sorry 1 2 3 4 5 or if
03:18 - you uh take the index I mean index is 0
03:23 - 1 2 3
03:25 - 4 so here space are four here spaces are
03:28 - three here we have two here we have one
03:30 - here we have
03:31 - zero right length is five so maybe
03:35 - spaces are five
03:40 - minus whatever the index +
03:44 - one index of first row is 0 so 5 - 0 + 1
03:51 - here we have four so here we have four
03:53 - spaces this formula we can take this
03:56 - kind of logic we can take to print
03:58 - spaces right
04:00 - so first four then three then two then
04:03 - one then zero then we can print this
04:05 - thing
04:07 - right so let's take like this character
04:09 - first in first line we will print a then
04:12 - for next character
04:14 - B before printing B here in the center
04:18 - before B we will print whatever is there
04:20 - whatever the characters are there before
04:22 - B and after B we will print whatever the
04:25 - character before B in reverse order
04:28 - suppose here we have like like here we
04:30 - have
04:30 - C so C would be printed here in the 1
04:34 - 23d row having index two in center but
04:38 - before printing this C we will print
04:39 - whatever is there before the C AB so AB
04:42 - first space then ab and then print the
04:46 - character actual character in the string
04:48 - then after this character we will print
04:50 - whatever the characters are there before
04:52 - this C in reverse order ba like
04:57 - this so I hope you got this is not so
04:59 - much tough yeah it's little bit tricky
05:01 - but not so much Stu so pause the video
05:04 - and try this out so I hope you have done
05:07 - this let's now create a string
05:12 - variable
05:14 - letters and from user we'll take input
05:17 - let's take this using let's take the
05:19 - input using get line
05:22 - function okay now we have taken input
05:26 - till now
05:28 - right so now we will take a function
05:32 - sorry a variable length and there let's
05:36 - just find out the length of the
05:40 - string length or size any function you
05:42 - can use right let's take one more
05:45 - position one more uh variable position
05:48 - and position is at first zero right so
05:53 - now let's use that range based for Loop
05:56 - for each character from the string let
05:59 - letters we are going to repeat the
06:01 - process right
06:03 - first space that space triangle will
06:06 - print space okay now first okay uh
06:13 - let's count how many spaces you have to
06:15 - print space is equal to whatever the
06:19 - length of that
06:21 - string minus whatever the position you
06:25 - have but here not length minus position
06:28 - because if at first length is three and
06:32 - position is 0 so 3 - 0 means three so at
06:34 - first three space would be printed in
06:36 - first line three then two then one
06:40 - because but actually we want at first
06:42 - only two space then one space then in
06:46 - last line no space if the input is ABC
06:49 - right this is also fine if you want to
06:52 - print one space in last line that is
06:55 - also fine but I don't want to print any
06:57 - space so let's do position +
07:02 - one so at first length is 3 3 minus
07:06 - position is 0 + 1 1 so 3 - 1 is 2 so two
07:09 - space would be printed then one space
07:11 - then zero space
07:13 - right now that while loop while the SPAC
07:17 - is greater than zero till then we will
07:20 - just print space and then we'll do minus
07:25 - minus
07:27 - spaces so this is for to print the
07:30 - space after printing
07:33 - spaces now before printing the actual
07:36 - character the current
07:38 - character before that character whatever
07:41 - the letters in that string those letter
07:43 - we will print in order right so for Loop
07:48 - same from zero till till the actual
07:52 - position till the current uh character
07:54 - we will print whatever is there in in
07:57 - that particular order so for in I is
08:00 - equal to 0 and I less
08:03 - than position not less than equal to
08:05 - less than
08:07 - position because at position we have
08:09 - current character but right now this
08:12 - Loop is to print before the current
08:15 - character whatever the characters those
08:17 - will print only so it is less than
08:19 - position right I
08:24 - ++ sorry
08:30 - now we will just
08:32 - print from these letters this string
08:35 - letters do add
08:38 - I we'll just print this thing
08:43 - right and after printing this you will
08:46 - print the current character whatever is
08:49 - there in this
08:51 - C because at first if there
08:55 - is if the input is ABC then at first
08:59 - first in C we have a right so in C now
09:04 - we have a so a would be printed see at
09:07 - first position is zero so length is
09:10 - three so here spaces are two so only
09:13 - this while Lo would be executed two
09:16 - times so two space would be printed and
09:18 - after that see this Loop is at first I
09:22 - is zero a variable we have I that is
09:23 - zero and I less than position position
09:25 - is 0 so 0 less than 0 no so this Loop
09:28 - would not be executed
09:30 - simply after that this line will be
09:31 - executed means we'll print a directly
09:34 - right because right now in C we have a
09:38 - right now next for Loop is to print the
09:40 - remaining character in reverse order
09:43 - because the pattern is something like
09:45 - this see if the pattern if the given
09:48 - input is a b c d then a then a b then a
09:54 - a b c then b a so if the current
09:58 - character is like C if right now the
10:00 - position is 0 1 to 2 and the current
10:03 - character is C so after printing the C
10:07 - whatever the remaining character before
10:09 - the scene that string that would be
10:10 - printed in Reverse holder right ba a CBA
10:16 - here we have only okay before B we have
10:18 - only one character a so this a would be
10:19 - printed right but a in first line only a
10:23 - would be printed right so in first line
10:26 - only a would be printed the next Loop is
10:29 - also Al having no significance for first
10:31 - line because the next Loop is to print
10:33 - whatever the remaining character in a
10:35 - reverse order right like b a CB a like
10:39 - this so
10:41 - for we'll take one variable I equal to Z
10:44 - and other variable also you can take i j
10:46 - k anything sorry I equal to the position
10:50 - whatever the position minus
10:54 - one why so because position means at
10:57 - position we have the current
11:00 - character right so if the current
11:03 - character is
11:05 - C we have printed a in next first line
11:09 - then a b a next line and now we have
11:11 - current character C right here C has
11:15 - been assigned with this range based for
11:17 - loop from letters to in this variable C
11:20 - right so the current character is
11:22 - C so after printing C after that we'll
11:26 - print b a so the position is is C
11:30 - current character the position is C that
11:33 - is why we are initializing this position
11:35 - minus one because we are we are going to
11:37 - print after C ba a so before the C so
11:41 - position minus one and
11:45 - then this should be I greater than equal
11:48 - to 0 till zero we are moving in backward
11:51 - Direction now right because in reverse
11:53 - order you have to print and IUS minus
11:59 - so same just excess from
12:02 - that string that is letters do at and I
12:08 - simple but this time it will print
12:10 - reverse order because this Loop is in
12:11 - reverse order and this Loop is in
12:13 - forward Direction so it will print in
12:15 - forward Direction like a b c but the
12:17 - slope print like C B A like
12:21 - this so remaining character we have
12:24 - printed in reverse order after that new
12:26 - line we will move to the new line so for
12:28 - new line we have
12:29 - andle or you can just write down here
12:33 - slashing right after that we will do
12:35 - position
12:39 - Plus+ right and that's
12:43 - it okay here we have two semicolon let's
12:46 - run this and I'll show you the
12:48 - output first we have a b c
12:52 - d so see this is the pattern right if I
12:57 - run this again and and this time I'm
13:00 - going to give 1 2 3 4 5 6 so this is the
13:04 - pattern right first Loop is to print
13:07 - this space only second Loop is to print
13:11 - whatever the current
13:14 - character before that whatever the
13:16 - character in that string those it will
13:19 - print like 1 1 2 3 1 2 3 4 right and
13:23 - after that after the current character
13:26 - we will print the remaining character in
13:28 - reverse order so the third Loop is for
13:30 - that
13:32 - right suppose I give uh this kind of
13:38 - thing journy so see it will print
13:41 - something like this whatever string you
13:43 - will give it will print a you know
13:46 - pyramid according to that string right
13:50 - so I hope you got this but if you're not
13:52 - getting this you can just pause the
13:53 - video you can just write down this thing
13:56 - on a piece of paper and dry in this
13:58 - right if you get this it's okay you can
14:00 - just stop watching this video but if you
14:02 - haven't got this now I'm going to dry
14:04 - run this for you on whiteboard right
14:08 - we'll just write down this complete code
14:09 - on whiteboard and I will dry on this
14:11 - line by line for you guys right so if
14:14 - you are still confused you can just
14:15 - continue watching this video okay now
14:18 - let me dry this for you suppose we have
14:20 - given letters only a b c the string is
14:23 - ABC right so length of the string is
14:27 - right now we have length is three 1 2 3
14:30 - this will give three so in Len we have
14:33 - in Len as a variable we have three
14:36 - position is also a variable we have
14:38 - taken the value is zero now for each
14:43 - character in this string for first
14:45 - character a for each character we will
14:47 - do this thing right so first we'll take
14:51 - character a so from letters this is
14:53 - range based for loop at first in C now
14:56 - we have a because letters are a b c so
14:59 - first a would be assigned to this C now
15:02 - C is a so we have a variable C character
15:06 - type of and here we have a right now
15:09 - first create spaces count space length
15:13 - minus position + one length is 3 3 minus
15:16 - position is 0 + 1 so spaces
15:20 - are in spaces now we
15:25 - have
15:26 - two right now while space greater than
15:30 - zero just print space at first space
15:34 - value is two condition true so first
15:36 - space would be printed here suppose this
15:38 - space would be printed then minus minus
15:40 - space now space becomes one still
15:44 - condition true one more space would be
15:45 - printed space minus minus now space
15:47 - becomes zero condition two no so we are
15:50 - out of this y Loop and next is this four
15:52 - Loop so two space has been printed now
15:54 - you have to print what is the actual
15:57 - character
15:59 - right
16:00 - at First Position like at zeroth
16:03 - position right okay now the next this
16:07 - Loop is this Loop is see here we are
16:11 - printing the actual character whatever
16:13 - is there in this C so at first we have
16:16 - in C A so a would be printed but before
16:20 - a what here we have like a a b a and a b
16:26 - c b a so before the ual character
16:29 - whatever are there before in that
16:32 - character in that string that we are
16:34 - going to print so this is this Loop is
16:37 - for that you have to display in order up
16:39 - to the current character so current Char
16:42 - character right now is a and before
16:45 - there is nothing so obviously this Loop
16:46 - would print nothing let's see now we
16:49 - have a variable I in I we have zero at
16:53 - first I less than position position is
16:56 - zero is this condition true 0 less than
16:59 - zero because position is zero no so we
17:02 - are out from this Loop now see out C so
17:05 - first a would be printed because in C we
17:08 - right now we have a right now this for
17:11 - Loop is to print whatever are there
17:17 - after this current letter like current
17:20 - letter in reverse order after that we
17:25 - will print whatever is there like
17:27 - suppose current character is C so before
17:30 - c we have AB so we'll print a in reverse
17:33 - order ba so this Loop is for
17:36 - that to print the remaining character in
17:39 - reverse order right so reverse order
17:42 - means suppose current character is
17:44 - C
17:46 - so B A from here we are going to start
17:50 - until zero we will move
17:54 - backward so Loop would be something like
17:56 - minus minus not plus plus so
17:59 - here we have I a variable which is
18:03 - position minus
18:05 - one because actual character is at
18:08 - position so suppose position is C so
18:11 - from position minus one we are going to
18:13 - start printing but at first now position
18:15 - is 0 0 - 1 is min - one is this
18:18 - condition true no so nothing would be
18:19 - printed from this Loop now see out andle
18:22 - so after a andle means we are in new
18:24 - line here and now position Plus+ so
18:27 - position becomes here
18:30 - one
18:32 - right now from a b c now next character
18:35 - B would be assigned to this C so now
18:38 - here we have B the current character is
18:41 - B now right and we are in second line
18:44 - same space would be counted right so
18:48 - length minus now at this time position
18:51 - is one so 1 + 1 is 2 length is 3 3 - 2
18:54 - is 1 so space is right now 1 for the
18:58 - second is iteration spaces are one so
19:01 - how many spaces would be printed only
19:03 - one space after that out from the S Loop
19:06 - now we are in this Loop right so here
19:09 - should be this kind of output a b c
19:11 - sorry A B
19:13 - A right so same i0 I less than position
19:17 - position is right now one so 0 less than
19:20 - one yes condition true so we'll enter
19:22 - here and whatever is there at this I
19:25 - from letters we will print I is zero so
19:28 - let us do at zero at zero we have a so
19:33 - first a would be printed right now I ++
19:37 - now I becomes one so one less than one
19:40 - condition is not true out from this Loop
19:42 - right now current character in C is B
19:44 - current character in C is B so current
19:46 - character would be
19:47 - printed and after this current character
19:50 - whatever the remaining that would be
19:51 - printed in reverse order right so now I
19:54 - is equal to position minus one position
19:56 - is one position is right now one so 1 -
19:59 - 1 is 0 so I is
20:01 - 0 condition 0 less than so 0 greater
20:04 - than equal to 0 yes condition true so
20:07 - we'll enter here and whatever is there
20:09 - at I that will be printed so I is right
20:12 - now zero so at zero we have a so again a
20:15 - would be printed now iusus I becomes
20:18 - minus one this condition true no so out
20:19 - from this whole Loop andle andle means
20:22 - you are in next line here and position
20:24 - plus plus now position becomes
20:26 - two now two means
20:29 - we are here now so current character is
20:32 - right right now C right and now from
20:36 - letters right again in this character C
20:40 - next C would be assigned C would be
20:42 - assigned so here we have
20:47 - C okay for C also same would be repeated
20:51 - same steps in C see now position is 2 2
20:55 - + 1 is 3 3 - 3 is 0 so no space would be
20:58 - printed here we are out from this right
21:01 - now this one position is two so
21:06 - i0 0 for 0
21:11 - 1 two times this Loop would be executed
21:13 - because position is two right so letters
21:16 - at zero letter at one would be printed
21:18 - letter at Zer is a then B would be
21:21 - printed now current letter is in C we
21:24 - have C so C would be printed now in
21:26 - reverse order now I is position minus
21:27 - one position is two 2 - 1 is 1 so I is
21:30 - right now
21:31 - 1 1 greater than equal to Z yes enter
21:35 - here whatever is there at one from this
21:37 - letter that would be printed so 0 1 2 at
21:39 - one we have B so B would be printed i -
21:42 - - 0 at zero we have a so a would be
21:46 - printed then minus one this condition is
21:49 - not true out from this Loop Andel means
21:50 - we in next line position plus plus
21:52 - position is three right but now let us
21:55 - after C there is nothing so nothing
21:57 - would be uh initialized into this
22:00 - character C this is range based for Loop
22:02 - right so one two three like three times
22:06 - this Loop would be repeated the
22:08 - iteration but after C there is nothing
22:10 - so nothing would be assigned to C now
22:11 - end of the loop end of the range based
22:13 - for Loop and we are out and this is the
22:15 - pattern that will be printed right if
22:18 - you give input ABC and that's exactly we
22:20 - want
22:23 - right so again you can just write down
22:26 - this on a piece of paper if you're not
22:28 - getting this and dry run this with a
22:29 - different example I hope you got this
22:33 - right now in the next video we'll see uh
22:36 - functions in C from the next video we'll
22:37 - start functions in uh C++ right so now
22:41 - I'll see you in the next video till then
22:42 - bye-bye take care