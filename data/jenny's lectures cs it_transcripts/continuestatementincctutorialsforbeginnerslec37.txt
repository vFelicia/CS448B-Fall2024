00:00 - hey everyone I hope you are safe and
00:02 - doing good so in the series of learning
00:04 - C++ programming language in the previous
00:06 - video we have seen what is break
00:07 - statement how to use that and why we use
00:10 - break statement right now the next thing
00:12 - is continue statement so this thing
00:14 - we'll see in this video what is continue
00:16 - statement and how to use this why we use
00:18 - this and with help of program I'll show
00:20 - you right everything how to use
00:22 - continuous statement practically also
00:23 - we'll see right first we'll see we'll
00:25 - discuss what is continue statement and
00:27 - why we use this when we use this right
00:30 - so same as brake statement it is also a
00:33 - control statement or you can say a jump
00:35 - statement right and used uh it is used
00:39 - with loops only within Loops only right
00:44 - now see whenever you uh in the last
00:47 - video I have told you whenever you get
00:50 - the brake statement whenever the control
00:52 - and counter the brake statement means
00:54 - the control will be exit from the loop
00:57 - will be jump out of the loop right but
00:59 - in this this case it is not the
01:01 - condition right I mean it is not the
01:03 - case
01:04 - actually what uh is the thing here in
01:08 - continue statement let me just discuss
01:09 - this with the help of real life example
01:11 - first see if you have organized a party
01:15 - right and there are many person standing
01:18 - and so you are going to greet them
01:20 - you're going to welcome them and you're
01:21 - are going to like maybe shake your hand
01:24 - with those
01:25 - person so Suppose there are many persons
01:28 - standing right
01:30 - and you come you like Shake hand with
01:33 - this person with this person greet with
01:35 - this person something like this but this
01:38 - person you hate this person I mean you
01:40 - don't like this person right so
01:44 - generally we do is uh we don't greet
01:46 - that person or just ignore that person
01:48 - right so you ignore that person and you
01:51 - shake hand with the next person right so
01:54 - you just skip shaking hand with this
01:56 - person and then the next person next
01:58 - person something like this
02:00 - so here shaking hand is like in a loop
02:03 - you're going to shake hand with every
02:04 - person so it's a loop same thing you are
02:06 - repeating but a particular for a
02:09 - particular person you hate that person
02:12 - you are going to skip that thing you're
02:14 - not going to shake hand with with him or
02:18 - her right you're going to skip this
02:21 - thing it's not like that whenever this
02:24 - person comes you just stop shaking hand
02:27 - and you just went to your room or
02:29 - something like this no you just ignore
02:31 - or you just skip that person and start
02:33 - shaking hand with the next person
02:36 - simple so this kind of phenomena also we
02:39 - can Implement like in you know uh in
02:42 - programming right so if you want to skip
02:45 - something if you want to skip some
02:47 - statements whenever a particular
02:49 - condition met right then we use continue
02:53 - statement but if you want to exit from
02:56 - the loop if you want to break if you
02:59 - want to jump jump out of the loop then
03:00 - we use breake statement but if you want
03:02 - to skip some statement within that Loop
03:05 - just use breake statement just put some
03:08 - condition and use sorry continue
03:09 - statement not break
03:11 - statement just use continue statement
03:14 - right so so we can say when a continuous
03:18 - statement is encountered within a loop
03:21 - then control automatically goes to the
03:25 - beginning of the loop for the next
03:27 - iteration and it skips the current
03:31 - iteration right or we can say it skips
03:33 - the execution of the statements inside
03:35 - the body for that current
03:38 - iteration right if you are not getting
03:40 - the theory part it's okay you will get
03:42 - it whenever we will do practical right
03:44 - so we can use this also within with all
03:47 - the loops for while while range W for
03:50 - Loop right something like this if the
03:53 - snx of four Loop is four we have here
03:56 - initialization here we have condition
03:59 - and and then we have
04:02 - update right and suppose here we have
04:06 - some code some statements and within
04:09 - this we have some condition to check and
04:13 - if this condition is true then we are
04:15 - using continue and here also after that
04:18 - we are having some code some statement
04:21 - right so whenever this condition is true
04:24 - then continue continue means these next
04:27 - statements these this code within this
04:30 - Loop would be skipped would not be
04:33 - executed right and control will directly
04:36 - go to for the next iteration go to
04:39 - update then condition would be checked
04:40 - and then something like
04:42 - this
04:43 - right I hope you got this same within
04:46 - while loop also we can use in while loop
04:48 - we have like we put generally condition
04:51 - here right and he have we have here some
04:55 - code some statements and then if same we
04:58 - have some condition
05:00 - and if this condition is true then
05:04 - continue and here also we have some
05:07 - code so if this condition is true then
05:10 - continue continue means these statements
05:12 - would not be executed would be skipped
05:14 - and directly control will go to here is
05:17 - to the beginning of the loop for the
05:19 - next iteration something like this we
05:21 - will not go out of the loop here also we
05:23 - will not go out of the loop we will go
05:25 - for the next iteration this is continue
05:28 - statement right
05:30 - so if you want to skip few statements
05:33 - for whenever some particular condition
05:35 - is met then use continue statement
05:37 - whenever you want to you know be out
05:40 - completely from the loop whenever a
05:42 - particular condition is met use break
05:43 - statement right so let's see this with
05:45 - the help of practical okay so let's
05:48 - create a new
05:49 - file continue tutorial. CPP right so
05:53 - first we will use those header that is
05:56 - iio stream which is responsible for
05:59 - input output and
06:01 - then that name space
06:05 - STD
06:07 - right and then main function so same uh
06:11 - example we'll take the previous video we
06:12 - have seen like we want to
06:15 - print from 1 to 10 but whenever the the
06:18 - number becomes seven just break just
06:20 - print 1 to six that's it but here
06:22 - something different whenever the number
06:24 - becomes seven just skip that seven like
06:28 - first print 1 to six
06:30 - then skip that seven and print 8 9 10
06:33 - this thing you need to do like 1 2 6
06:35 - then 7 should not be printed then 8 9 10
06:38 - should be printed
06:40 - right so let's take because we know the
06:43 - number of iteration exactly because you
06:45 - want to print only uh 1 to 10 so 10
06:47 - number of iterations so better to use
06:49 - what four Loop right and I ++ so before
06:54 - using this I you have to initialize you
06:56 - have to declare it so here also I'm
06:58 - going to declare entire is equal to 1
07:00 - and then something like this
07:02 - right okay now if you say let's print
07:07 - first this I right and for the next line
07:12 - you can use andl or slash and and just
07:16 - if if you want to skip some statement
07:19 - then we use continue okay so maybe you
07:22 - think like this if I is equal to equal
07:24 - to 7 that I have told you to skip some
07:29 - statement sub itation just use sorry
07:32 - continue right so you are using continue
07:34 - statement
07:35 - here what do you
07:37 - think it is right or wrong just pause
07:41 - the video dry onun this program and then
07:43 - see what you are getting we want 1 2 3 4
07:47 - 5 6 8 9 10 this should be printed so do
07:50 - you think this program will print this
07:53 - thing I don't think so let's see let's
07:57 - run this and see 1 2 3 4 5 6 7 8 9 10
08:02 - even if you are used continue but it is
08:04 - not skipping anything why so
08:06 - because after continue whatever you will
08:10 - write within this for Loop those
08:12 - statement would be skipped but you are
08:14 - printing this I before using this
08:15 - continue so if you want to skip this
08:18 - thing you have to write down this
08:21 - printing of this I after continue so it
08:26 - will print first 1 2 3 4 5 6 as soon as
08:28 - the become seven so this condition true
08:31 - Yes means continue continue means
08:35 - whatever statement you will write down
08:36 - after continue within this Loop would be
08:38 - skipped so no C out would be entertained
08:42 - and then control will directly go to i++
08:44 - now I becomes 8 right so this time it
08:48 - will work
08:49 - fine okay we have a problem here let's
08:55 - run this and see 1 2 3 4 5 6 8 9 10 7
09:01 - has been skipped right so this is the
09:04 - use of continu statement same in while
09:06 - loop if you want
09:08 - to uh use then also you can use like uh
09:13 - same example take with a little twist it
09:16 - will ask from the user enter number
09:18 - right in the previous video we have seen
09:20 - enter a number and it is going to add
09:23 - those numbers and whenever you enter
09:24 - negative number it will just stop adding
09:28 - I mean it will be out of the loop and it
09:29 - will just print the sum but now at this
09:32 - time I want to repeat like enter a
09:36 - number enter number 10 times right but
09:40 - whenever a user enter negative number it
09:43 - will Skip and it will ask for the next
09:45 - number
09:47 - right and this termination condition is
09:51 - this should be repeated 10 times right
09:54 - it's not like that whenever you will
09:55 - enter negative number just exit from the
09:57 - loop no this is not the
09:59 - you say the exit condition
10:01 - no you if you have entered five numbers
10:04 - like enter number one enter number two
10:07 - three and now you have entered minus
10:09 - one so I want 10 times it should ask
10:12 - from the user so 1 2 3 4 still six
10:16 - time it has to ask so it will skip this
10:19 - minus one and again it will ask like
10:22 - four one something like this and while
10:25 - doing addition of these numbers it is
10:27 - not going to add these negative number
10:29 - to the
10:30 - sum right so this thing you need to
10:33 - implement so either you can use this uh
10:36 - while loop here or you can use for Loop
10:38 - because we know the exact number of
10:40 - iteration 10 times I want to execute the
10:42 - loop so if you want to uh run this with
10:46 - the Y Loop then just so first let's take
10:50 - a variable num one I variable for Loop
10:55 - and one is we have total total we are
10:57 - going to initialize with zero right now
11:01 - let's put a y Loop while I less than
11:04 - equal to because 10 time I want to
11:06 - iterate this Loop 10 time I want to ask
11:08 - from the user right so less than equal
11:11 - to 10 and initialize this I is equal to
11:14 - first one
11:16 - better so that it will not take any
11:18 - garbage value so now 1 to 10 it will it
11:22 - it is going to repeat 10 times right and
11:25 - obviously you have to update this I
11:27 - variable within this while loop
11:29 - otherwise it will be infinite Lo right
11:32 - but first obviously we will ask from the
11:34 - user what enter a
11:38 - number
11:46 - and in Num variable we are going to
11:48 - store that but if this
11:52 - num num is less than zero means negative
11:58 - then we not going to exit just
12:03 - continue just continue and continue
12:06 - means whatever you will write after this
12:08 - continue within this while loop that
12:09 - would be skipped so here we are going to
12:11 - do total because we don't want to add
12:13 - that negative number to the total right
12:15 - that is why after continue statement we
12:17 - are updating our total right don't do
12:21 - this don't write this line before uh
12:23 - this continue statement right so this
12:28 - and as well as don't forget to update
12:29 - this I
12:30 - variable because first I is one
12:33 - condition true this would be executed
12:35 - then I ++ I becomes two next time I is
12:37 - to less than 10 yes and now 10 time this
12:41 - would be iterated right okay now after
12:45 - this after this let's just print
12:48 - whatever the total
12:50 - is I hope it will work fine let's run
12:53 - this so enter a number I'm entering one
12:57 - again it is asking I'm entering 2 now
12:59 - I'm entering minus one see it is asking
13:02 - enter a number I'm entering 1 now - 9
13:07 - enter a number one enter a number again
13:10 - I miss again one any number you can
13:12 - enter
13:13 - 0o -
13:15 - 7 2 okay now see the total is you can 2
13:21 - 3 4 5 6 7 8 9 10 11 11 but we want that
13:27 - this should ask only 10 times from the
13:29 - user enter number but it is asking I
13:31 - think 13 time
13:33 - because 1 2 3 three times you have
13:36 - entered minus number so it is not
13:38 - incrementing that I while you are
13:40 - entering
13:42 - minus negative number because I ++ we
13:46 - are doing after continue so whenever you
13:49 - will enter a negative number these both
13:52 - these two statements would be skipped
13:53 - and directly control will go to the
13:55 - beginning of the loop right so what we
13:59 - can do we can use we can do this uh
14:04 - i++ before continue so that whenever you
14:08 - will enter the negative number it should
14:10 - not be skipped right this also we can do
14:14 - and now you can run this and now this
14:15 - time exactly it will ask 10 times
14:17 - including negative
14:27 - number see only 10 times it is asking
14:30 - including negative number and the sum is
14:33 - five right so I hope you got this you
14:36 - can I think this is assignment for you
14:38 - guys you just draw the flowchart of this
14:40 - continue statement I think it's very
14:42 - easy if you have understood the working
14:44 - of this continue you can easily draw the
14:46 - flowchart right so it's up to you now
14:49 - you have to draw this thing so I hope
14:51 - now the use of break and continue
14:53 - statement is clear to you guys now in
14:54 - the next video we'll see one coding
14:56 - exercise based on break and a new
14:59 - statement right so now I'll see you in
15:00 - the next video till bye-bye take
15:06 - care