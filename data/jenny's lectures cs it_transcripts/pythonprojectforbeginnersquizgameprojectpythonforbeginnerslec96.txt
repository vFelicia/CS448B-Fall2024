00:00 - hey everyone I hope you are safe and
00:02 - doing good so in the series of learning
00:03 - Python programming language in the
00:05 - previous video we have seen file
00:06 - handling in Python so I guess we are
00:09 - done with the basics of python right now
00:11 - I will be discussing the some Advanced
00:14 - Topic in Python right some libraries and
00:17 - some Advanced topics right but before
00:19 - that in this video we will be discussing
00:21 - one project so before starting some
00:23 - Advanced topics we'll be discussing two
00:25 - or three or maybe five projects simple
00:28 - projects for beginners because now we
00:31 - have we have done project with the help
00:33 - of functions we have you know learned
00:36 - Hoops concept and all
00:38 - so with the mix of these concept we'll
00:41 - be working on three or four or five
00:43 - projects and then we will see some
00:45 - Advanced Topic in Python right so now in
00:47 - this video we will see a quiz game
00:49 - project
00:51 - right so let me just show you whenever
00:54 - you run this what kind of output you
00:56 - should uh you know okay so this is the
00:59 - output whenever you run your project
01:00 - then please show like welcome to my quiz
01:02 - game and the question first question see
01:05 - the ability of one class to acquire
01:06 - method and attribute from another class
01:09 - is called and then it will show you the
01:11 - option multiple choice question ABCD and
01:14 - then you have to it will ask enter your
01:16 - answer and let me suppose I'll just
01:19 - enter Because I know the answer is a
01:21 - inheritance
01:23 - so its correct answer so it will show
01:25 - correct answer your current score is one
01:27 - out of one and then it will show next
01:30 - question so which of the following is a
01:32 - type of inheritance so next question
01:34 - same suppose a but
01:38 - this time it is incorrect answer and the
01:40 - correct answer is D and your current
01:43 - score is 1 out of two right then
01:46 - question number third
01:49 - like this
01:50 - so again incorrect answer and like this
01:53 - it will show till the you can say end of
01:56 - the answer
01:58 - obviously I have entered s so that is
02:00 - definitely incorrect so incorrect answer
02:02 - correct answer is C and I have only five
02:05 - question here so now I have given
02:07 - correct answer your current score is two
02:09 - out of five you have given two correct
02:11 - answer and at last it will show your
02:12 - score is 40 percent
02:13 - right
02:15 - so this is how it should look like you
02:18 - are you know your
02:19 - that game quiz game
02:21 - so I have only five question right now
02:24 - in my game so you can have as many
02:26 - question as you want okay so now I think
02:30 - with the help of first we will see this
02:33 - project with the help of procedural
02:35 - approach function functions with elbow
02:37 - functions right and after that we'll see
02:40 - this with the heck of a second approach
02:41 - that is using object-oriented
02:43 - programming that we'll see in next video
02:44 - right okay I think now you can pause the
02:47 - video I can you try this out like this
02:50 - is not so much tough because if you have
02:52 - followed my python playlist then this
02:54 - type of project we have seen two or
02:56 - three this type of project right
02:59 - so that is that that was like maybe
03:01 - guess the number game higher lower game
03:03 - and that is similar like this game and
03:06 - if you are not following this playlist
03:07 - then definitely you're missing something
03:08 - great
03:09 - so pause the video and try this out okay
03:12 - so this time let's create a new project
03:16 - so I'm creating a new project and the
03:18 - project name I'm giving like uh
03:21 - quiz game
03:24 - right
03:25 - and see The Interpreter is this okay
03:28 - fine and let's just
03:30 - click on create
03:32 - where you want to create in this window
03:33 - or a new window or you have to you want
03:35 - to attach this project into because we
03:38 - have one project python project so I
03:40 - want to attach here only
03:42 - okay now see
03:48 - we have a quiz game project this one
03:51 - right now in quiz game project right
03:53 - click on the send let's create a new
03:54 - file and that let's say I'm just giving
03:58 - the name to this file main.py and here
04:01 - I'm going to write my code so first
04:03 - thing just the decoration type of thing
04:05 - so let's just print first
04:08 - welcome to my quiz game so first
04:11 - obviously you need
04:12 - question and answer
04:15 - if I want to give quiz to you then I'll
04:17 - prepare the quiz means I have a question
04:19 - bank or I have many questions as well as
04:22 - I know the answer of those questions so
04:24 - I'll give you that quiz whenever you
04:26 - submit the answer then I'll check
04:29 - whatever the answer I have the answer
04:30 - sheet and your answer sheet I'll check
04:32 - if you have given the correct answer or
04:34 - not right so you should have a database
04:37 - of questions and answers
04:39 - definitely so so let's have a you can
04:43 - say a question Bank
04:46 - or question data okay and in this this I
04:50 - am having a list and in this list
04:54 - I am having
04:56 - dictionary and in this dictionary what
04:59 - I'll have
05:00 - key and value pair so key is what
05:04 - I'm having like text
05:07 - and here the question
05:10 - like this is the question the ability of
05:12 - one class to acquire methods and
05:14 - attribute
05:16 - from another class is called this is my
05:19 - question right as well as the next key
05:21 - value pair in this dictionary I am
05:23 - having is
05:24 - answer
05:26 - so answer of this multiple
05:30 - choice questions are there so either
05:33 - it's a b c d so suppose answer is a
05:37 - like this I hope you heard this
05:40 - see this is one dictionary and this is
05:43 - having one question with answer of that
05:45 - question like this you can have multiple
05:47 - dictionaries each dictionary is having
05:49 - one question and answer of that question
05:52 - like this I am having here five question
05:54 - with their answers so this is my
05:57 - question Bank I'm having I'm having only
05:59 - five question with there answer
06:03 - right answer of each question
06:05 - okay now one thing obviously now you
06:08 - should have like how many options are
06:10 - there like for this question I'll be
06:12 - having four options a b c d but here I'm
06:16 - just having the question and answer of
06:18 - that question that is so where are those
06:21 - options four options so for that suppose
06:24 - I am taking a
06:26 - list named options so there can be see
06:29 - multiple ways to solve this problem or
06:31 - to create this project this is only one
06:34 - way the simplest one one I'm I guess I'm
06:37 - going to discuss here so you it's not
06:40 - like that you can solve this problem or
06:42 - you can make this project with the help
06:43 - of you know with this method only there
06:45 - are multiple ways
06:47 - so in option there is a list and
06:51 - I am having a sub list
06:55 - so in this list for first question for
06:59 - first question I am having all the
07:01 - options like
07:04 - a
07:08 - inheritance because answer of this
07:10 - question I have given it's a option so
07:12 - in a the correct answer that is
07:14 - inheritance right and then
07:18 - like this for B suppose
07:22 - abstraction
07:24 - and for C like this you can have four
07:27 - four options
07:29 - okay
07:30 - so see
07:32 - this first list is having
07:35 - all the four option for first question
07:38 - like this
07:40 - comma and I am having second list second
07:43 - list is having
07:44 - options for second question like third
07:46 - list fourth list and fifth list like
07:48 - this okay
07:49 - so these are my list of this is for
07:52 - first question ABCD these options four
07:55 - are for second question third question
07:56 - these are for fourth question this this
07:59 - list is for fifth question
08:01 - right
08:03 - okay so now I have database question as
08:06 - well as answer plus options for those
08:08 - questions now the main thing you need to
08:10 - write down the logic so
08:13 - first obviously it will print first of
08:16 - all the question first question okay so
08:20 - we have to access from this list
08:23 - the
08:25 - text the value of this key from this
08:29 - dictionary
08:30 - so
08:32 - like this obviously
08:34 - for Loop we need to take four
08:36 - and any variable name I can take like
08:38 - four question in
08:41 - question Bank
08:43 - right
08:45 - and here
08:47 - what I need to print you need to print
08:49 - question
08:51 - so this is a list because question bank
08:54 - is a list so with the in list I can
08:56 - access the data with the help of the
08:59 - First Data is at zeroth index
09:01 - the second dictionary is at one Index
09:04 - this third dictionary is at second index
09:06 - like this then third index and fourth
09:08 - index so at zero index
09:11 - this dictionary but from zero index I
09:13 - don't want to access the complete zero
09:15 - index if you write something like this
09:19 - a print
09:22 - question Bank
09:24 - and then break it
09:28 - if suppose you think like just print in
09:31 - subscribe just give question so let's
09:33 - run this
09:35 - see it will give an error in line number
09:38 - 21 where you are writing this then list
09:40 - indices must be integer slices not a
09:43 - date because this question is a
09:46 - dictionary
09:48 - in question bank is a list so if you
09:51 - write something like this so now at
09:52 - first in question it will assign the
09:55 - first
09:56 - whatever there at the zeroth index so at
09:59 - zeroth index I have a dictionary so this
10:01 - dictionary is assigned in question so I
10:03 - cannot write down like in subscript I
10:05 - cannot give a dictionary it should be
10:07 - integer
10:08 - something like this
10:09 - so like 0 1 2 3 4.
10:13 - so okay we have a range function we can
10:17 - do something like this
10:18 - for question
10:20 - number
10:24 - in
10:28 - range
10:30 - and range should be till length of
10:36 - length of this question Bank length of
10:38 - this list length of this list would be
10:40 - one two three four five so here range
10:44 - and 5 if range 5 then it will generate
10:47 - range 0 1 2 3 4 like this and that's
10:51 - exactly we want first of all at zeroth
10:54 - index I want to access what is at zeroth
10:56 - index then second then third and fourth
10:58 - and like this
10:59 - so now print question bank and now
11:02 - question number
11:04 - at first in question number I have zero
11:06 - so it would be zero question Bank zero
11:09 - but that is not also correct because it
11:12 - will give you at zeroth index I have a
11:14 - complete dictionary
11:16 - with the answer it will give then at
11:18 - second in the first Index this
11:19 - dictionary third like this but I want to
11:21 - access only the question
11:24 - means the value of this key text Key
11:28 - right so again you need to give here
11:33 - that what we say because now I have
11:36 - question Bank
11:37 - and question number this is what see
11:50 - this is what now this complete
11:53 - dictionary now from this dictionary I
11:55 - want to access the value of this key
11:58 - text key so just provide the key here as
12:02 - it is
12:03 - and key is
12:07 - right now let's run this
12:10 - C now we are getting questions only
12:12 - questions
12:14 - okay
12:16 - but questions as well as after question
12:19 - I want to show the options a b c d
12:23 - after every question
12:25 - okay now you have to do that thing
12:27 - and let's see before printing this
12:29 - question again I want to separate out
12:32 - some decorator something like this
12:37 - so you have to access from this list
12:41 - the first list
12:43 - then the second list then third and
12:45 - fourth and fifth according to the
12:46 - question number
12:47 - if question is this first
12:50 - then first list will access
12:52 - all right
12:54 - sorry
12:57 - so one more for Loop
13:02 - for I in
13:05 - suppose options
13:08 - listening okay
13:11 - now what
13:13 - I will access
13:15 - first for first question C this
13:18 - question at first 0 will be assigned to
13:22 - question number so it will print first
13:24 - this one the ability of one class this
13:27 - first question so now I want to access
13:29 - this first list
13:31 - right according to the question number
13:34 - right
13:36 - so how you can access
13:38 - the list name
13:40 - and
13:42 - in bracket we will write down
13:44 - if you think like just write down I here
13:48 - so let's run this
13:52 - see this I it should be integer not a
13:55 - list because this I first is is a list
13:59 - so it is not correct
14:02 - so in for I in option here just provide
14:06 - the question number
14:09 - so at first question number is 0 so
14:12 - option 0 so at zeroth index we have
14:17 - this list
14:18 - right now from this list
14:21 - in I what would be assigned first of all
14:25 - this the first thing a inheritance right
14:30 - then B then C then d
14:34 - let's run this now
14:36 - okay still you're getting so rather than
14:39 - options I here we simply print obviously
14:41 - I
14:43 - right
14:44 - because
14:45 - for I in options question number
14:47 - question number is zero so zero options
14:50 - 0 means it is now having this list
14:54 - first list right so at first in I this
14:58 - first value would be assigned a
15:01 - inheritance
15:06 - so simply just print I next time B
15:10 - abstraction this item would be assigned
15:12 - to I so simply just print I and I is B
15:16 - abstraction then I is C polymorphism
15:18 - then I is the next item that is D object
15:22 - so simply print I that's it let's run
15:24 - this and see
15:27 - you got this okay all the questions
15:30 - and then there
15:32 - options
15:34 - fine
15:36 - but now next is now you have to ask
15:41 - uh answer from the user so
15:45 - he'll just take input
15:48 - enter your answer either a b c d so in
15:50 - capital I am assuming so if someone
15:52 - enter by default small ABCD so let's
15:55 - just use the upper function that will
15:58 - convert into upper here only okay
16:01 - now you have to check the answer okay so
16:04 - suppose I am having a check function
16:06 - sorry check
16:08 - answer function and there what you need
16:11 - to pass what the user has entered like
16:14 - the guess
16:16 - or next thing the correct answer now the
16:19 - correct answer is here in this list in
16:23 - this question Bank
16:26 - and with in the first dictionary I am
16:28 - having a key value pair answer a like
16:31 - answer D so from here you want you have
16:33 - to access the correct answer
16:35 - now how you can access and how you can
16:37 - pass this thing
16:40 - so the question Bank the name of the
16:42 - list is question bank and then according
16:45 - to the question for first question
16:48 - I need to access first
16:50 - the right answer
16:52 - for first question I need to pass first
16:54 - right so how to
16:57 - pass first
16:58 - the question number because at first
17:00 - question number is 0 here 0 right so
17:04 - question Bank zero would means this
17:06 - completed dictionary
17:08 - and then from this dictionary this key
17:11 - value pair
17:12 - again give
17:15 - the key name as it is answer
17:18 - it will fetch the correct answer and it
17:21 - will pass the correct answer so let's
17:23 - just Define
17:26 - the same functional name that is
17:30 - check answer
17:31 - and it will accept
17:34 - two argument so one parameter name I'm
17:38 - taking user guess and next I am taking
17:41 - correct answer
17:43 - okay
17:45 - let's just check out
17:50 - if user guess is equal to is equal to
17:54 - the correct answer then let's suppose
17:57 - return
18:02 - and
18:06 - will return false
18:07 - okay this is our check answer this
18:11 - you can see function
18:12 - so whatever it will return I am going to
18:14 - accept that thing in a obviously a
18:17 - variable so
18:20 - this taking a variable is correct
18:22 - so if is correct would be whether true
18:27 - or false either true or false okay
18:30 - now if
18:32 - is correct
18:34 - means if is correct if true if true
18:38 - would be returned true so if true means
18:40 - yes if true then
18:43 - we will obviously we will uh you know
18:45 - keep our score variable and that score
18:48 - would be
18:50 - plus equal to
18:51 - 1 would be increased by one so first of
18:54 - all you need to have a score variable
18:57 - that is 0 at first right before it we
19:01 - can simply print
19:04 - correct answer score would be increased
19:07 - right else
19:09 - [Music]
19:11 - we will print
19:13 - incorrect answer
19:15 - right okay let's see
19:18 - what's happening
19:20 - welcome to my quiz game okay the first
19:22 - answer suppose a
19:24 - that is correct answer then next
19:27 - question again a
19:29 - that is incorrect answer it is showing
19:32 - me incorrect answer right then again a
19:34 - that is also incorrect answer then in
19:37 - case I am having C that is correct
19:40 - answer I am giving B
19:42 - correct answer okay but it should give
19:45 - you like finally what is the score and
19:48 - if you uh if you give the incorrect
19:50 - answer then it should show you the the
19:52 - correct answer is this right okay
19:56 - now after this
19:59 - your final score is and from the score
20:01 - variable we will take this right but if
20:04 - this is incorrect answer then obviously
20:06 - it should show at that time the correct
20:08 - answer
20:14 - so from where you can fetch the correct
20:16 - answer
20:18 - obviously from
20:19 - this list question bank I am having here
20:22 - correct answer of each question right so
20:26 - the correct answer is
20:28 - this is how you can fetch
20:30 - this we have already done so the correct
20:32 - answer is like question bank then
20:35 - question num because question num this
20:38 - is the variable at first it is zero so
20:41 - zero means first dictionary would be
20:43 - fast and from the stat dictionary just
20:46 - fetch the answer
20:48 - if outside of this you are using in
20:51 - closing and closing closing and you know
20:53 - opening bracket double quotes then here
20:55 - you should use
20:57 - single quote
21:00 - right
21:04 - let's run this and see
21:07 - if right now I am
21:09 - C okay it is incorrect answer and it is
21:12 - showing me the correct answer is a
21:16 - again incorrect answer the correct
21:17 - answer is d
21:21 - now correct answer right and at last it
21:25 - should show me the score so your final
21:28 - score is one only
21:30 - as well as now it should show the
21:32 - percentage
21:33 - the score
21:35 - so how you can calculate that thing
21:37 - your score is
21:40 - from the score variable
21:42 - then divide by how many question you
21:44 - have in that question Bank how you can
21:46 - calculate with the help of length
21:49 - function
21:51 - to that question Bank just put this
21:54 - complete thing into bracket and then
21:56 - divide by
21:59 - sorry you're not divided by it's uh
22:02 - into 100
22:05 - this will give you the percentage
22:08 - and then just write down here
22:11 - after that
22:13 - sorry percentage
22:15 - the symbol right and rather than your
22:18 - final score is this you can just
22:20 - write down here like U
22:24 - have
22:25 - given
22:27 - this much of
22:31 - correct correct answer
22:37 - right
22:39 - and if you want to show like
22:42 - [Music]
22:44 - after every answer you want to show the
22:47 - score like one out of one one out of two
22:49 - or two out of two like this so here also
22:51 - I can print something like this
22:54 - okay within this for Loop only see these
22:57 - two print statements are outside of for
22:58 - Loop but this should be within this for
23:00 - Loop
23:01 - After Effects so F and
23:04 - your
23:07 - current score
23:09 - is
23:12 - score and then slash one out of one two
23:16 - out of two like this if you have like 50
23:19 - out of 100 so that's slash it's not
23:21 - divide it's slash slash and obviously
23:25 - whatever the question number but plus
23:28 - one because question number is starting
23:29 - from here because from 0 because
23:33 - in the range it will assign 0 first and
23:35 - one two three four but in reality
23:36 - question number should be one two three
23:38 - four five like this so just add in this
23:41 - variable Plus 1.
23:42 - right
23:43 - let's run this
23:45 - and see a
23:48 - correct answer your score is one out of
23:50 - one
23:51 - fine
23:51 - now again a
23:54 - incorrect answer the correct answer is D
23:56 - your score is one out of two because you
23:59 - have two question has been asked but you
24:01 - have given one correct answer again a
24:03 - again incorrect answer your score is one
24:06 - out of three let's give correct answer
24:08 - this time now it's two out of four again
24:11 - correct answer B so your score is now
24:14 - three out of five you have given three
24:15 - correct answers and your score is sixty
24:17 - percent
24:18 - so like this
24:21 - I hope now you can play around with this
24:24 - game and you can if you want to you know
24:26 - modify this or see only five question I
24:29 - have taken you can just make this
24:32 - a separate
24:34 - uh like you can say what you can say
24:36 - separate file in that file you can just
24:39 - take 1050 or how many question you want
24:42 - as many questions as you want you can
24:43 - take
24:44 - and options also in that file only and
24:47 - you can import that file into this main
24:49 - file rather than writing everything in
24:51 - this one file
24:53 - okay here I'm just showing you because I
24:56 - have just taken five questions so there
24:59 - are not so much you know tough to show
25:01 - this thing but if you have 50 question
25:03 - then obviously it is not a good idea to
25:05 - take all the question and options in one
25:08 - file and the code also in that file only
25:11 - okay that is not a good programming
25:13 - practice we can say
25:15 - just divide this and make another module
25:18 - or another file for this question bank
25:20 - and options right like this
25:23 - if
25:25 - delete that these from here and
25:29 - in this project quiz game Let's create a
25:31 - new file and just have
25:34 - database
25:40 - quiz underscore database
25:42 - Dot py
25:45 - and there
25:46 - just paste this thing
25:48 - so in our main file if you want to use
25:51 - these things we will
25:54 - import we will import what
25:58 - database right and now it will be better
26:02 - if you run this we can see
26:06 - here question bank is not defined here
26:08 - you are using question bank but that is
26:10 - not defined question bank is
26:12 - variable in this file in this file
26:15 - in this module so this is what a concept
26:17 - of modularity as well we have divided
26:19 - our program into two things one is
26:22 - database this module and one is our main
26:24 - program so I'm just importing this
26:26 - module in my program
26:28 - so this is what modularity so it is
26:31 - going to make things simple
26:33 - right
26:35 - so rather than this one more way to
26:37 - import is what like I can do something
26:39 - like this
26:41 - from
26:42 - quiz database
26:45 - import
26:47 - ant
26:49 - as well as from
26:52 - quiz database
26:56 - import
26:58 - options
27:00 - now it will not give any error see
27:04 - right it is it will work fine now
27:07 - and if you simply write import question
27:09 - bank then
27:12 - here wherever you write question bank
27:14 - then first you need to write down the
27:16 - module name first means modul name is
27:18 - quiz database here
27:20 - which database dot question Bank
27:23 - same here quiz database don't question
27:25 - Bank
27:27 - in case of options as well as here also
27:31 - the quiz database name of the module dot
27:34 - options right so here we are having two
27:37 - variable question bank and options so if
27:39 - you want to access these two variables
27:40 - in our main wherever you use these
27:44 - variable name you have to first of all
27:46 - write down the module name that is the
27:48 - name of that file quiz database then dot
27:52 - option or dot question but if you
27:55 - specifically import question bank and
27:58 - options like this using from keyword
28:00 - like from this import question Bank
28:02 - import option then we need to write down
28:04 - the module name and Dot so I hope you
28:07 - got this thing but you can make this
28:08 - thing a little little bit complex as
28:10 - well maybe after every question
28:13 - it will show you do you want to play
28:16 - again that also that functionality also
28:18 - you can add if yes then only show the
28:20 - next question
28:21 - or if press next this one then only show
28:24 - the next question right or you can add
28:27 - some option to exit from the game
28:29 - right so that kind of thing also you can
28:32 - add this kind of thing we have already
28:34 - you know discussed in our previous
28:36 - projects so if you have done those
28:39 - projects in my from my playlist then
28:40 - easily you can Implement that
28:43 - functionality in this also like do you
28:45 - want to play do you want to continue
28:47 - like this
28:48 - right
28:50 - so I hope you got this project now just
28:53 - try out this thing this is what
28:55 - procedural approach
28:57 - programming using function we have done
28:59 - the same right next we can do this same
29:02 - project with the help of object-oriented
29:04 - programming approach
29:06 - oops because that's also we have
29:08 - discussed now that thing we will see
29:10 - next video till then you can try out to
29:13 - make this project with the help of
29:15 - object oriented programming
29:17 - approach right so now it's in the next
29:20 - routine bye take care