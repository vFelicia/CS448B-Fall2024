00:00 - so in the series of learning Python
00:01 - programming language we have discussed
00:03 - one coding exercise in the last video
00:05 - programming to find out like average
00:07 - height from the list of heights right
00:09 - so we'll be seeing one more exercise in
00:11 - this video this is the you know this is
00:13 - a similar type of exercise that we have
00:16 - discussed in the last video so I
00:18 - recommend to watch out that video first
00:19 - then definitely without you know looking
00:23 - at the solution of this video you can
00:25 - easily solve this problem you can you
00:27 - can easily write down this problem sorry
00:29 - this program now what is this program
00:31 - you have to write down a program to find
00:32 - out maximum number from a list of
00:34 - numbers no that's very simple I hope you
00:36 - know the logic to find our maximum
00:37 - number from
00:39 - store from array something like this you
00:42 - must have I think you must have done
00:45 - this thing in another in another
00:47 - language right
00:49 - so I guess you know the logic to find
00:51 - out maximum number right
00:53 - logic is same only the syntax is
00:55 - different
00:56 - how to write down full loop how to write
00:58 - down if statement but that is you know
01:01 - after I run for Loop and if statement so
01:03 - that is all you need to know for solving
01:04 - this problem
01:06 - okay anyway let me just give you some
01:08 - hint also first note down some points
01:11 - first thing you will take input using
01:13 - input function
01:14 - from the user right second thing what
01:18 - you need to do you cannot use max
01:21 - inbuilt function is there there is
01:23 - inbuilt function mix and whenever you
01:25 - pass list here it will automatically
01:27 - give you the maximum but no
01:30 - you cannot use this inbuilt function you
01:32 - have to replicate its functionality
01:33 - using for Loop okay
01:36 - now some hint is here also you can use
01:39 - that split you need to use split
01:41 - function and
01:42 - no need to use I think no you will have
01:45 - to use range function also right so
01:48 - split and range
01:50 - so these two functions we have seen in
01:53 - the last video also how to use these
01:55 - functions and what is the functionality
01:57 - of these functions it will split
01:59 - basically your strength into a list
02:01 - and
02:02 - separate out each element
02:05 - into that list right and put those
02:08 - element into that let's separate out
02:09 - each element from the string
02:11 - it depends what uses to you know you are
02:15 - using a separator as a space or a comma
02:17 - whatever you want to use you can use
02:19 - range is what it simply produce or
02:21 - generate a series of numbers by default
02:24 - it will start from zero and ending point
02:26 - you have to give suppose you are going
02:28 - to Range Five so it will be one two
02:30 - three four five five numbers not till
02:32 - five five numbers from zero to start by
02:34 - default but if you want to start from
02:36 - anywhere else you can specify start
02:38 - point and end point that's it right
02:41 - so I guess now that is all you need to
02:43 - know to solve this problem right
02:45 - so now you can pause the video and try
02:47 - this out so I hope you have done this
02:49 - exercise if not it's okay we'll see the
02:52 - solution right now we'll creating a new
02:56 - file and I'm going to name this coding
02:58 - exercise
03:00 - 15 DOT py with 15 right
03:04 - so first of all what we will do
03:07 - obviously we'll take input from the
03:08 - users so suppose I'm taking numbers is
03:11 - equal to using input function
03:14 - okay now we have list of numbers suppose
03:16 - we have list of numbers something like
03:18 - this 34 45 12 minus 89 67 something like
03:24 - this right so this is now using input
03:27 - function we have taken so this is a
03:28 - string you have to split this out
03:30 - convert into a list and each this 34 45
03:34 - this should be element of list
03:36 - so using split function we can do this
03:39 - like
03:40 - numbers dot split because in numbers we
03:43 - have this
03:47 - these all numbers so numbers don't split
03:50 - and what is the separator here
03:52 - simple space so will not pass anything
03:55 - as argument right
03:57 - okay
03:58 - so this the name of the list I am giving
04:01 - numbers
04:03 - underscore list
04:05 - okay
04:06 - I'll be storing the list now I have a
04:08 - list of numbers this but the problem is
04:12 - still every element is what
04:14 - a string and we want obviously
04:17 - integer right
04:20 - if you want to check out you can print
04:21 - this numbers list and I'll show you the
04:24 - output let me run run this for you and
04:28 - I'll be entering the number or something
04:29 - like this
04:33 - okay
04:34 - now let's run this see it will give you
04:38 - it has converted this into list separate
04:40 - separate items but these items are still
04:42 - a string but you won't we want integer
04:44 - so you have to convert each and every
04:46 - item into
04:47 - integer right
04:49 - so obviously we will have to access the
04:51 - less suppose this is our list so you
04:53 - have to Traverse this list from zero
04:54 - from 34 to 60 70 from starting to end
04:58 - and how we can access element of list
04:59 - using index index would be started from
05:02 - 0 0 1 2 3 4 5. so if we need range of
05:08 - you know you can say a sequence of
05:10 - numbers from 0 to whatever element it is
05:13 - on
05:14 - okay
05:16 - so that we can do first of all obviously
05:19 - you have to find out length
05:21 - so
05:22 - you how you can find you will find out
05:24 - the list because to Traverse these
05:27 - element you have to put suppose I am
05:28 - traversing these elements so for any
05:31 - variable name from like I
05:34 - in
05:35 - numbers list if you write down this
05:38 - thing
05:39 - like this I am taking numbers list
05:43 - and X is 34 45 12 but how to access
05:49 - maybe you are thinking directly we can
05:51 - write what numbers list and in bracket
05:54 - we will lie down I because in I first of
05:56 - all we have 34 then 45 then 12 right
05:59 - yeah you are right
06:00 - but let's see what happens and convert
06:02 - it into
06:03 - lick and what it is
06:07 - so we'll access numbers list I convert
06:10 - into int and then again we'll assign to
06:12 - the same list right
06:15 - okay let's run this and after that we
06:18 - will suppose you want to print the list
06:21 - after converting so this printing would
06:24 - be definitely from out of the store Loop
06:26 - only one line is indented so let's run
06:30 - this and see what output you will get
06:33 - 134 and something like oh sorry
06:42 - enter here
06:47 - see you will get an error type error
06:50 - list indices must be integer or slice
06:52 - note integer in line number six in line
06:54 - number six
06:56 - list indices this index should be
06:58 - integer not string because this I in
07:02 - first at first in I we have 34 and 34 is
07:05 - still a string so this index cannot be a
07:09 - string it should be integer
07:11 - and that is what exactly you want to
07:13 - convert each and every element into
07:15 - integer so we cannot do this thing
07:18 - what we can do
07:20 - we can simply like rather than obviously
07:22 - numbers less we will not I don't want 34
07:25 - I want 0 to
07:27 - tell the length of the list minus 1.
07:30 - so we have a range function you can use
07:32 - the range function from 0 to
07:34 - have to find out length of this
07:38 - using for Loop we can find out right
07:41 - so first
07:42 - obviously we cannot use length function
07:44 - okay
07:45 - so we'll not using length function if
07:48 - you can use length function so simply
07:49 - you can write down Len and numbers test
07:53 - it will give the length of this so here
07:57 - it will give one two three four five six
08:00 - six zero to six so it will print 0 to it
08:03 - will generate the numbers 0 to
08:07 - like 0 1 2 3 4 5. if suppose we are
08:12 - taking example of this list
08:14 - so it will generate till
08:17 - 6 element length is 6 so till length
08:20 - minus 1 till 5. and that's exactly you
08:22 - want at first time in I
08:25 - we will be having because at the time of
08:28 - at the place of this range is 0 to this
08:30 - now we have this thing so first ni 0
08:34 - would be assigned so in numbers list 0
08:36 - and 0th index we have 34 so 34 will be
08:39 - converted into int and then again 34
08:41 - will be assigned to here I is now first
08:43 - time zero
08:44 - in the same list so 34 is now integer
08:46 - not string right
08:48 - if you don't want to use length function
08:50 - using for Loop also we can find out the
08:52 - length how we can find out let's see
08:55 - let's take a variable count
08:57 - any variable you can take right
09:00 - and with for Loop suppose I am taking a
09:02 - variable any variable you can take I
09:04 - also same variable in all the loops
09:07 - right or different also it's up to you
09:09 - so here I am suppose same variable I am
09:12 - taking suppose I or let's take a other
09:14 - variable name any meaningful like
09:18 - number in
09:20 - numbers list
09:22 - right
09:24 - so for each number I'll be increasing
09:27 - the count count plus equal to
09:29 - 1 or count is equal to count plus one
09:32 - right here one
09:35 - now simply let's print
09:38 - here the length of the list
09:41 - okay let's uh just use here F string
09:46 - so we'll be writing like
09:50 - count
09:52 - I hope you know just you remember still
09:54 - the syntax of F string and Y F string is
09:57 - to be used if not you can check out the
09:59 - playlist we have discussed this thing
10:01 - so the length of the list is this and
10:02 - rather than here using length function
10:05 - we can simply write down
10:07 - count
10:09 - or no need to specify 0 because by
10:11 - default range will print number from 0
10:13 - to
10:14 - whatever you will give here count minus
10:17 - one right okay let's run this
10:22 - okay one twenty three any number I am
10:24 - taking like here
10:27 - these numbers see now the length of the
10:30 - list is six one two three four five six
10:32 - and now see the list is because we have
10:35 - printed the list
10:36 - but these are entities are not string
10:38 - because they are not into these chords
10:41 - single quote or double quote okay now
10:43 - that's fine we are now having a list of
10:45 - integer now you can easily write down
10:48 - the syntax of the logic of finding
10:51 - maximum number right
10:53 - okay rather than printing
10:55 - the number list here let's remove this
11:00 - and
11:01 - okay
11:03 - how to find out maximum
11:05 - let us suppose we have a variable
11:08 - do not take Max because Max is what C
11:11 - Max is what a function here inbuilt
11:12 - function so
11:14 - maximum
11:17 - suppose maximum underscore
11:19 - number
11:21 - equal to
11:22 - either you can take 0 here or you can
11:25 - take suppose I am whatever list I will
11:27 - be taking suppose this example so I am
11:29 - assuming the first
11:31 - number from the list is maximum number
11:34 - so I'm assuming from this list numbers
11:37 - list
11:39 - first
11:41 - zeroth index whatever is at zeroth index
11:43 - that is maximum number now I'll compare
11:45 - this with every element
11:48 - right
11:49 - so
11:50 - and if any element is greater than this
11:52 - this 34 then we will
11:55 - set that number maximum number so how
11:58 - you can do you have to Traverse for that
12:00 - the complete list whatever saying we
12:01 - have Olu so for any variable you can
12:04 - take like suppose number again I am
12:07 - taking phone number in
12:09 - numbers list
12:11 - right now you have to check if if
12:16 - this number is greater than whatever
12:19 - maximum number we have set at starting
12:23 - greater than this maximum number
12:26 - then
12:28 - if this is the case then
12:30 - we will do
12:33 - maximum number is equal to
12:36 - number that's it
12:40 - and at last after ah you know out of
12:44 - this for Loop will simply print maximum
12:47 - number
12:49 - using a string will printing right so in
12:53 - which we have maximum number which
12:54 - variable
12:55 - the variable is maximum number
13:00 - I hope this is not confusing this is
13:02 - very simple the logic of finding this
13:04 - this logic finding maximum number
13:06 - at first it
13:08 - because still here I got
13:11 - I think you have got everything have to
13:13 - convert this one
13:14 - now see maximum number is a variable and
13:17 - numbers list so in maximum number now we
13:20 - have in maximum number now we have
13:22 - 34. right now numbers list here numbers
13:28 - listed suppose this complete list I am
13:30 - taking this example right
13:33 - so numbers list will be this will be
13:36 - replaced by this list so at first in
13:39 - number we have 34. so let's check 34 in
13:42 - number list yes this is 2 so enter here
13:44 - if number number is now 34 34 greater
13:47 - than maximum number in maximum number in
13:49 - maximum number we have 34.
13:52 - no not greater than because these are
13:53 - equal right so will not enter here check
13:56 - for next iteration now 45 would be
13:58 - assigned to this number right now 45 in
14:02 - numbers list
14:04 - yes it is there so true you will enter
14:07 - here at this point of time in number we
14:10 - have at this point of time we have
14:12 - the number we have 45 so 45 greater than
14:16 - and in maximum number in maximum number
14:19 - this variable we still have 34.
14:22 - 34 is this condition true yes this
14:25 - condition is true
14:27 - so enter in this if block statement and
14:30 - now maximum number becomes number
14:32 - because whatever number whatever is on
14:35 - the right hand side in this uh this
14:37 - assignment operator that would be
14:38 - assigned to left hand side variable so
14:41 - in number at this point of time we have
14:42 - 45 so 45 could be assigned in maximum
14:45 - number so maximum number now becomes
14:48 - 45
14:50 - right so this is how it will be treated
14:53 - now for third thing
14:56 - 12 because we haven't released till the
14:58 - last element of the list as well 12. so
15:00 - 12 you will be assigned to this number
15:02 - 12 greater than now at this time we have
15:05 - here 12 12 greater than
15:07 - now maximum number is
15:09 - 45 because in this variable we have now
15:13 - 45 so greater than 45 is this condition
15:16 - true no okay skip this this statement
15:20 - enter here minus 8
15:23 - now in number we have minus 8 minus 8 in
15:25 - this number list yes minus 8 greater
15:27 - than maximum number no skip this then 89
15:30 - in number 89 like this it would be
15:32 - treated
15:33 - right
15:35 - so finally from this list 89 would be
15:37 - printed
15:39 - okay
15:41 - so let's run this
15:44 - for this same example
15:47 - okay
15:48 - enter list of numbers
15:51 - the length of the list is 6 and the
15:53 - maximum number is 89. I hope you got
15:56 - this this was very simple
15:58 - so the main idea was just to get you
16:01 - familiar with for Loop
16:03 - rather than using the inbuilt functions
16:05 - right how to use a split how to use like
16:09 - this range obviously in the range we
16:11 - will be discussing in next video in
16:12 - detail
16:13 - this is just basic
16:15 - so I guess you have done this exercise
16:16 - successfully because the similar type of
16:18 - thing we have done in previous exercise
16:20 - also right so if you have watched my
16:22 - previous video
16:23 - then it's very easy for you okay now the
16:27 - next video we'll see about range
16:29 - function in detail right so now once in
16:31 - the next video till never bye take care