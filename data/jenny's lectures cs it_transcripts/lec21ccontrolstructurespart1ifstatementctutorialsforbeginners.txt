00:00 - so in the series of learning c plus plus
00:01 - programming language in the previous
00:03 - video we have discussed operator
00:04 - precedence and associativity we have
00:05 - discussed all the type of operators and
00:06 - then operator precedence and
00:08 - associativity with two or three examples
00:10 - with the help of program i have shown
00:12 - you everything about residence and
00:13 - associativity right how to apply
00:15 - precedence and responsibility and when
00:17 - to use these things
00:18 - we have discussed this thing now in this
00:20 - video from this video i'm going to start
00:22 - control structures in c plus
00:26 - first the basic what is control
00:27 - structure why we use it different types
00:30 - of control structure
00:32 - and then in detail we will discuss one
00:33 - by one right so basically there are
00:36 - three basic type of control structure
00:39 - sequential selection and iteration right
00:43 - sequential means as the name suggests
00:46 - whatever statements you have written in
00:48 - you have written in the program the
00:50 - statement would be executed one line by
00:52 - line
00:54 - right in a sequence
00:55 - whenever they appear they execute like
00:58 - the control will start you know
00:59 - execution from the main
01:01 - if suppose i write a program to uh
01:04 - print sum of two numbers right so simply
01:07 - in main we take two numbers like in
01:10 - a b then c out
01:17 - this is simple program to calculate sum
01:19 - of two numbers obviously you can write
01:20 - down that header file using name space
01:22 - std program will start executing from
01:25 - the main function then this line will be
01:26 - executed in a and b then c out enter
01:28 - value of a and b then c and then some
01:30 - would be calculated then some would be
01:32 - printed and return 0 this is a simple
01:34 - sequence so simply we will you can say
01:37 - with the flowchart how you can show
01:39 - enter into the program
01:41 - entry point is main function
01:44 - one by one statement would be executed
01:46 - statement one statement two statement
01:48 - three statement four how many statements
01:50 - are there in a sequence all the
01:51 - statements would be executed line by
01:53 - line and at last
01:55 - exit
01:56 - from the program
01:58 - this is by default
02:00 - control structure of a program by
02:02 - default
02:03 - right
02:04 - next comes to selection control
02:06 - structures now
02:09 - selection means you have to select
02:11 - something based on some condition you
02:13 - have to decide something
02:15 - right you have two choices you have
02:17 - choices right suppose you have choice
02:21 - you have two things kofi or tea now you
02:23 - have choice which one you want to drink
02:25 - coffee or tea
02:27 - if only tea is available you don't have
02:29 - any choice and you will drink tea
02:31 - right you will have tea
02:33 - now you have choice like you have kofi
02:35 - you have tea you have juice different
02:37 - type of juice now you have choices now
02:39 - you have to select
02:41 - right which one you want to have so this
02:44 - is what selection process so you have to
02:45 - decide
02:47 - right same in program also we have
02:50 - choices
02:51 - right how you can implement these kind
02:53 - of choices with help of a program using
02:56 - selection statement so you can say
02:58 - decision making statements
03:00 - right
03:02 - so some statements or a block of
03:05 - statements would be executed
03:08 - based on some condition whether the
03:10 - condition is true or false based on that
03:12 - thing the statements will be executed
03:14 - right
03:15 - and that condition can be any expression
03:18 - or any constant value but
03:20 - the condition should should be evaluated
03:22 - at last either true or false it should
03:25 - be evaluated in a boolean value
03:28 - right
03:29 - so selection uh in selection uh you know
03:33 - control structure we have some you can
03:36 - say some statements
03:38 - or those decision making statements you
03:40 - can say or the selection statement we
03:42 - have
03:43 - if
03:44 - if else
03:46 - and when we have lc flatter
03:50 - ah then we have nested if
03:54 - then we have switch
03:57 - right
03:58 - these are
03:59 - selection statements right so these
04:02 - comes under those selection control
04:04 - statements you consider selection
04:05 - control structure
04:07 - right
04:08 - third comes to
04:10 - iteration
04:12 - iteration
04:13 - right iteration means repeatedly we are
04:16 - executing something based on a condition
04:20 - right
04:20 - again and again we are doing same thing
04:23 - right if you are eating something then
04:25 - we
04:26 - take one bite of the chapati right then
04:28 - we take second bite the condition is
04:31 - till our
04:32 - tummy is full we will eat
04:34 - right then one bite then second bite
04:36 - third bite same task we are repeating
04:38 - again and again we are taking bite like
04:40 - chapati with subject
04:42 - whenever you are full your term is full
04:44 - you will stop and that is the exact
04:46 - condition
04:47 - so means iterative means repeating the
04:50 - same steps again and again right based
04:52 - on some condition
04:54 - right like suppose if you want to print
04:56 - ah value from 1 to 10
04:59 - right
05:00 - then that would be we do that thing with
05:03 - the help of iterative statements and
05:04 - iterative statements are
05:07 - for loop while loop do while loops
05:11 - simply you can say loops those comes
05:13 - under iterative statements so iterative
05:15 - control structure so basically three
05:17 - types of control statement sequential
05:19 - that is by default
05:21 - till now whatever program we have run i
05:23 - think that is based on that sequential
05:25 - uh
05:27 - execution of the statements right second
05:29 - one is selection
05:30 - that we will execute that we will
05:32 - implement in a program with the help of
05:34 - these statements
05:35 - right
05:36 - next is iterative means loops
05:39 - four while and do one
05:41 - right one by one we'll discuss
05:43 - everything
05:44 - so in this video basically we will
05:45 - discuss about
05:46 - if statement it's not like that f is
05:49 - simple right if write down some
05:52 - condition and then some statement no we
05:54 - can do some tricky things with this if
05:57 - now whatever things whatever tricky
05:59 - questions can be asked based on this if
06:02 - simple if maybe it seems like it is
06:04 - simple one just skip the video but we'll
06:07 - be discussing some tricky questions with
06:09 - help of this if statement that generally
06:11 - they ask in competitive exams or
06:13 - interview or viva
06:15 - and at that time you'll be shocked like
06:17 - i haven't tried this thing with if is it
06:19 - really possible with if or definitely
06:22 - you will give wrong answer so those
06:24 - things those questions those tricky
06:25 - things will be discussing in this video
06:27 - so this video is going to be really
06:28 - important for you guys
06:30 - right so in this video simply will
06:32 - discuss if statement if this is a making
06:36 - statement
06:37 - right with the help of some programs
06:40 - or you can say some examples three or
06:43 - four examples right now see
06:46 - let's take one example
06:49 - you wanna go
06:50 - for a coffee maybe with your girlfriend
06:52 - or boyfriend
06:54 - let's take a simple example right you
06:57 - wanna go for a coffee
06:59 - so
07:00 - the condition is obviously you will see
07:03 - how much money you have saving
07:06 - right
07:07 - so if you have
07:09 - you are two people so if you have
07:12 - more than thousand rupees you can go
07:15 - in starbucks
07:16 - coffee in starbucks obviously that is
07:19 - expensive maybe with coffee you can take
07:22 - some more item also so at least you
07:25 - should have 100 rupees you will see your
07:27 - budget
07:28 - if you don't have thousand rupees
07:31 - then
07:32 - simply what you say let's go home
07:34 - that's it
07:36 - right
07:37 - so how you can
07:39 - implement this thing
07:41 - like i'm taking in main
07:43 - i'm just writing i hope you can write
07:45 - down this header file hash include
07:46 - iostream using namespace std these two
07:48 - things by default
07:50 - right now
07:52 - in
07:53 - money
07:56 - then simply we will enter
08:00 - or you can say how much you have
08:07 - right then c in
08:09 - this is what input output how to take
08:11 - input using c in how to print output
08:13 - using c out right
08:15 - then
08:16 - money
08:17 - now will check condition you check your
08:20 - pocket how much money you have
08:23 - if
08:24 - money greater than thousand
08:29 - then simply see out
08:31 - i am simply printing
08:33 - coffee in starbucks
08:40 - after that i am printing c out
08:44 - let's go home
08:49 - and
08:50 - return 0
08:52 - right
08:53 - so first of all before explaining this
08:55 - let me just explain this you know
08:58 - general flowchart of general working of
09:01 - if statement right the general syntax is
09:04 - simply you will write if
09:07 - then some condition
09:10 - and then here you will write statements
09:15 - you can write single statements you can
09:16 - write multiple statements if you write
09:18 - single statement simply you can write
09:20 - this thing if you are going to write
09:21 - multiple statements like two statements
09:24 - then you have to put
09:26 - this curly break braces multiple
09:28 - statements you can
09:31 - you have to put these curly brackets
09:32 - this is where you can say block of
09:33 - statements if single statement you are
09:35 - writing this in this if block no need to
09:37 - put this curly bracket
09:39 - right by default this one statement only
09:42 - would be considered as a part of if
09:44 - block right the statement would be after
09:47 - if statement you can say so simply the
09:50 - flowchart can be something like this
09:52 - this is just you can say the entry
09:54 - then
09:55 - we have some condition
09:57 - if condition
09:58 - right
10:00 - if condition is true
10:02 - then we have
10:04 - if statements
10:07 - if you can say if block statement
10:10 - right
10:11 - if condition is false
10:14 - then simply
10:16 - condition is false then whatever
10:18 - after this if lock whatever statements
10:20 - are there those would be executed so
10:22 - that you can say
10:24 - after
10:25 - if block statement
10:34 - right
10:38 - right now this and after that you can
10:40 - say
10:42 - exit
10:44 - so in this case let's see this is the
10:46 - flowchart
10:47 - this is the entry main then me money
10:50 - that money variable would be
10:53 - located located some space in the memory
10:56 - four bytes right then see out it will be
10:58 - printed on the output screen how much
11:00 - you have then seen money suppose you
11:03 - have 500 rupees
11:06 - 500 would be there
11:08 - now check the question money greater
11:10 - than 1000 is this true
11:13 - no you have 500 rupees money is less
11:15 - than 1000
11:17 - so will not enter into this if block
11:20 - will because the condition is false then
11:22 - after if block condition after if block
11:25 - this is the statement see out let's go
11:27 - home so this would be printed let's go
11:28 - home
11:29 - right if you have you are entering money
11:33 - suppose
11:34 - 1200 rupees you have so the condition is
11:36 - what true now
11:38 - so
11:39 - we'll enter into this if block and what
11:41 - would be printed coffee in starbucks
11:44 - now you can take coke in starbucks you
11:46 - can have
11:47 - right
11:48 - if true the condition is true then if
11:50 - statement block would be executed means
11:52 - this should be printed coffee in
11:53 - starbucks
11:54 - after executing this whatever is written
11:56 - after if look that would also be
11:58 - executed
11:59 - this is the flow then after if law now
12:02 - in this case output output would be kofi
12:04 - in starbucks let's go home these two
12:07 - statements would be printed on the
12:09 - screen right
12:10 - so this is the working of the simple if
12:13 - block now
12:14 - up i'm just writing 100
12:17 - sorry thousand
12:18 - so if you want to
12:20 - you know
12:21 - change the condition like money is
12:22 - greater than and equal to 1000 then also
12:26 - you can have coffee
12:28 - so that's also you can take this is the
12:30 - condition this condition can be an
12:31 - expression or any constant value but
12:33 - this should be evaluated at last finally
12:36 - in a boolean value either true or false
12:40 - that's it
12:42 - right
12:43 - now okay i hope the simple working is
12:47 - you have understood the simple working
12:49 - of this if blow now let's do some tricky
12:51 - things with this tip
12:53 - sometimes if i put like
12:56 - semicolon here
12:58 - now maybe you think sometimes they have
13:00 - this type of questions after if they put
13:02 - semicolon
13:04 - now maybe you will think this is an
13:05 - error because we cannot put semicolon
13:07 - after this if you will say it is an
13:09 - error no it will not give any error
13:12 - simply program would run through what
13:14 - output you will get c
13:16 - this is what you can say termination of
13:18 - this if block means there is no use of
13:21 - checking the condition now you have just
13:23 - terminated this if
13:25 - condition here
13:26 - so in this case
13:28 - whether the condition is true or false
13:31 - this would be executed the if block as
13:33 - well as the after if block would be
13:35 - executed so if i am
13:37 - here just i am writing i have 500 rupees
13:41 - maybe you think that
13:42 - the condition is not true but still
13:44 - because you are terminating here there
13:46 - is no use of checking the condition
13:49 - still it will print coffee in starbucks
13:51 - let's go home if i write 5 1500 rupees
13:54 - still it will print coffin starbucks
13:56 - let's go home so it is just terminating
13:58 - of the sec block
13:59 - right
14:00 - if
14:01 - i want to check
14:02 - equality condition if money is equal to
14:04 - 1000
14:06 - then only we will have coffee in
14:08 - starbucks means
14:09 - money is equal to
14:11 - right so sometimes maybe you write money
14:14 - equal to 1000 rupees no
14:17 - in programming language this is what
14:19 - assignment operator if you want to check
14:21 - the equality the equality operator is
14:24 - double equal to
14:26 - now it is fine
14:28 - if money is
14:30 - now thousand money is equal to is equal
14:32 - to thousand obviously condition is true
14:34 - enter into this coffin starbucks let's
14:35 - go home if money is
14:38 - 1200
14:39 - money equal to equal to thousand no
14:41 - condition is not true
14:42 - so not enter into this block simply
14:45 - print let's go home
14:47 - right
14:48 - if
14:49 - you write this thing money equal to
14:51 - thousand
14:52 - sometimes they ask this type of question
14:53 - also so it is simply assignment operator
14:57 - suppose money i'm entering 12 000 means
14:59 - you are means you
15:00 - you know you will think that this
15:02 - condition is not true because money is
15:04 - 12 000
15:05 - so simply print let's go home no
15:08 - it is not equality check condition
15:10 - simply it will assign thousand to this
15:12 - money
15:13 - assignment operator is assigned right
15:15 - hand side value to left hand side so now
15:17 - the money becomes here thousand
15:20 - so this is what money is thousand so
15:23 - simply other than zero whatever you
15:25 - write whatever is there in this
15:28 - within this bracket of this if that
15:30 - would be considered as true so this is
15:32 - true it will print kofi in starbucks
15:34 - let's go home
15:36 - so please
15:38 - be careful while you use equal to n
15:40 - double equal to this is assignment
15:41 - operator this is equality check right i
15:43 - hope you got this thing
15:46 - now
15:46 - if i want to print here
15:48 - in if block c out
15:52 - coffin starbucks and it was good
15:57 - these two lines
15:59 - i want that this two lines should be a
16:02 - part of this if block money is greater
16:04 - than equal to thousand
16:07 - so
16:09 - if you don't put
16:11 - these curly bracket then what will
16:13 - happen
16:14 - i am not putting suppose i am putting
16:15 - curly bracket first these two lines in
16:18 - these curly brackets
16:20 - so now money is thousand condition to
16:22 - you we will enter into this if block
16:24 - what would be printed coffee in
16:25 - starbucks it was good let's go home
16:28 - right
16:29 - if i have 100 rupees the condition is
16:32 - not true will not enter this control
16:34 - will not enter into the safe block and
16:35 - what would be printed whatever is there
16:37 - after the block let's go home would be
16:39 - printed only right
16:42 - if you don't put this
16:43 - these brackets
16:45 - right
16:46 - now what would happen
16:47 - if 100
16:48 - money is 100 condition is not true
16:51 - means you think that output output will
16:53 - be will be let's go home but no what
16:56 - would be the output it was good let's go
16:58 - home why so because we are not putting
17:01 - any
17:02 - curly bracket here so by default only
17:05 - after this if only one statement would
17:07 - be considered as a part of this if block
17:11 - only one statement
17:13 - after this one statement whatever
17:16 - statements are there one two three four
17:17 - that would be considered as part of
17:19 - after if blow
17:21 - that is why condition is not true
17:23 - control will not enter those into this
17:25 - if block means coffin starbucks would
17:27 - not be printed
17:28 - after if block these two would be now
17:31 - the part of after if it was good let's
17:33 - go would be fitted so that's why i was
17:35 - saying
17:36 - if
17:37 - in this
17:38 - if block if you want that multiple
17:40 - statements should be executed after this
17:41 - condition is true then you should put
17:44 - all these conditions into blocks into
17:47 - these
17:48 - braces one two three four five six
17:50 - statements any number of segments you
17:51 - can
17:52 - if only one statement is there then you
17:54 - can skip these
17:56 - curly brackets
17:58 - right
17:59 - i hope now everything about this if is
18:02 - clear to you guys
18:03 - and see if simply you write
18:06 - money
18:13 - that is also fine it's not like that you
18:15 - have to put condition that is also fine
18:19 - but in this case
18:20 - if you will enter money 100
18:23 - money hundred other than zero whatever
18:25 - is there here that would be considered
18:27 - as true so this statement is true
18:30 - so if block statement would be executed
18:32 - then after it if i enter money 0
18:36 - now 0
18:38 - at this time it is false only
18:40 - right so now it will not enter into this
18:43 - if block it will simply print let's go
18:45 - home so this condition can be any
18:47 - constant value if i write any constant
18:49 - like 100 so always it would be true
18:53 - 100 is always true
18:56 - there is no chance of any
18:58 - you know
18:59 - false statement here or false condition
19:01 - here
19:02 - so any constant constant thing you can
19:04 - write an expression you can write but
19:06 - that should be evaluated ultimately into
19:08 - a boolean value either true or false
19:11 - then only this if will work
19:13 - right
19:14 - i hope now the working of this if is
19:16 - clear to you let's uh you know see this
19:19 - thing
19:20 - with the help of practical with the help
19:22 - of a program okay so this is the program
19:25 - see before
19:26 - this program till now we have written
19:28 - program with simply they were following
19:30 - that sequential control structure
19:33 - right
19:34 - no if there is nothing simply one by one
19:36 - line by line program would be executed
19:38 - and
19:40 - in a sequence and we'll get the output
19:41 - right
19:42 - now we simply
19:44 - we are taking a variable into money how
19:45 - much you have seen money and we are
19:48 - checking the condition if money greater
19:50 - than
19:51 - equal to
19:52 - thousand
19:54 - then
19:55 - coffin starbucks and
19:58 - just remove the slime let's go home
20:01 - right
20:02 - now let me just run this simple one
20:04 - first see
20:06 - it will ask how much you have i'm just
20:08 - entering 1200
20:11 - so coffee in starbucks
20:13 - and let's go home
20:14 - again if i run this and we have only 400
20:18 - rupees
20:19 - then
20:21 - let's go home no coffee in starbucks
20:23 - this time right
20:24 - if now see let me just terminate this
20:27 - line
20:28 - with a semicolon
20:30 - now what output you get how much you
20:31 - have
20:32 - i have
20:34 - 1900
20:36 - let's just run this
20:38 - coffin starbucks let's go home okay fine
20:42 - let me just enter now i have 200 only
20:44 - this time condition would be false but
20:46 - still it will print
20:48 - coffee in starbucks let's go home same
20:50 - output
20:51 - why so because we you have just
20:53 - terminated this if log means there is no
20:55 - use of checking the condition here right
20:58 - so this is the thing
21:00 - now if i write like
21:03 - equal to thousand
21:05 - equality check condition equal to equal
21:07 - to
21:08 - right let me just run this
21:11 - and how much you have 200
21:14 - coffee in starbucks let's go home why so
21:16 - because i we haven't removed the
21:17 - semicolon let me just remove the
21:19 - semicolon let's just run this again
21:21 - see how much you have now i have 200
21:25 - let's go home
21:26 - right
21:27 - let's run again
21:30 - how much you have
21:31 - thousand
21:32 - of in starbucks let's go home right
21:35 - because this time condition is true if
21:37 - simply rather than double equal to
21:39 - simply i write equal to but this is
21:40 - assignment operator this time right
21:43 - so
21:44 - let's run this program again
21:48 - 200
21:50 - coffin starbucks let's go home right
21:53 - again
21:55 - 1200
21:56 - coffee in starbucks let's go home same
21:58 - output
21:59 - again
22:02 - thousand open starbucks let's go home
22:04 - because we are just entering
22:07 - or
22:07 - see suppose i am just entering zero i
22:10 - have zero money still coffee in
22:12 - starbucks let's go home why so because
22:14 - you are just putting assignment operator
22:16 - here it will simply assign the value
22:18 - thousand to money
22:20 - and that would be obviously
22:22 - all the time true other than zero
22:24 - everything
22:25 - every other value would be true
22:28 - so this you need to take care equality
22:30 - check means double equal to
22:32 - now here same condition you can write
22:35 - down like relational operator you can
22:37 - use logical operator logical and if you
22:39 - want to combine two statements right if
22:42 - you want to find out like maximum of two
22:45 - numbers
22:46 - a greater than equal to b and a greater
22:48 - than equal to c maximum is a this kind
22:50 - of thing so you can combine logical and
22:52 - logical or these kind of statements
22:55 - logical not also
22:57 - right relational operators multiple
22:59 - statements multiple conditions you can
23:01 - write down this if it's not like that
23:03 - you can check only one condition
23:06 - right
23:07 - like money
23:08 - i am writing money
23:10 - greater than equal to thousand
23:12 - right
23:13 - and
23:18 - and
23:22 - one more variable i am taking
23:25 - age
23:26 - greater than
23:29 - 15
23:31 - one more value and one more variable age
23:34 - we are taking and simply
23:38 - see out
23:41 - enterage
23:42 - right
23:44 - we are just
23:49 - entering
23:51 - age
23:52 - that's it
23:53 - right
23:56 - so now
23:58 - yeah we know there is no age bar when
24:00 - you go for a coffee it's
24:02 - somewhere else but let's take simple
24:04 - example i'm just
24:06 - combining two conditions many greater
24:07 - than equal to thousand and eight should
24:10 - be greater than fifteen then only you
24:12 - can have coffee in starbucks otherwise
24:13 - let's go home
24:14 - now let's just run this
24:17 - first it will ask how much you have
24:19 - money yeah money i have 1200
24:21 - then it will ask
24:23 - age
24:24 - suppose you are entering ages 10
24:27 - let's go home no fin starbucks
24:30 - logical and means both the condition
24:32 - should be true then only it will be
24:34 - evaluated as true right
24:37 - let's run this again how much you have
24:40 - 1200 age 20
24:43 - now you can have copy in starbucks let's
24:44 - go home
24:45 - so simply i just want to you know tell
24:47 - you this thing you can combine two three
24:49 - four
24:50 - conditions in this f also logical and
24:52 - logical or operator you can write down
24:54 - so you can try out these combinations
24:56 - also right
24:57 - i hope that's it for this video now so
24:59 - if you have any doubt in this f blog you
25:01 - can ask me in comment section or if you
25:03 - you try out different different things
25:04 - with this if
25:06 - blog it's not like that only one if you
25:08 - can write down in one program no
25:10 - multiple if you can write if
25:12 - this one more if you can write here if
25:14 - condition if condition two three four
25:16 - any number of condition you can write
25:18 - right
25:19 - but rather than writing two three four
25:21 - five these type of ifs if we use if else
25:25 - that is good
25:26 - right like something like this if uh
25:29 - greater than uh greater than thousand
25:31 - rupees you have open starbucks otherwise
25:34 - you can have coffee and ccd that is also
25:36 - fine
25:37 - so we always have some otherwise option
25:39 - alternate option so that how you can
25:42 - implement in program using if else
25:44 - statement so that thing will discuss in
25:46 - next video and i'll see in the next
25:47 - video then bye take care