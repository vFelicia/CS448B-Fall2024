00:00 - hello everyone I hope you all are safe
00:02 - and doing good so in the series of
00:03 - learning Python programming language in
00:05 - the previous video we have done a
00:06 - project that was Turtle race right okay
00:10 - now in this video we will see something
00:13 - interesting so we are going to discuss
00:16 - now event listeners okay using Turtle
00:21 - module fine so the basics we will see in
00:24 - this video and then the next video we'll
00:27 - see one coding exercise based on this
00:29 - video right okay now what first of all
00:32 - let's understand what is this event so
00:35 - when a user performs some action like
00:38 - suppose if I'm clicking this
00:41 - mouse right so this is this is an event
00:44 - it's click event so if you perform some
00:48 - action if you press any key if I press
00:51 - like space means that is also an event
00:55 - some event is happening right to get the
00:58 - desired result if I perform some action
01:00 - then that is known as event right
01:04 - everything if you press any key or if
01:06 - you move the M mouse or you click the
01:08 - mouse then that is event right and
01:11 - according to that according to that
01:14 - something would be happening there on
01:16 - the screen like you will get your
01:18 - desired results right like uh when you
01:22 - play game video game then there is uh
01:25 - like up key down key left right key or
01:29 - uh
01:30 - maybe some other Keys also for that like
01:32 - whenever you press that key the player
01:34 - will like jump or will shoot or
01:38 - something like this right so those
01:42 - events those actions are you know bound
01:46 - to those specific Keys like if I press
01:48 - this key then this would happen like if
01:51 - I press the right key then the player
01:53 - should move in right direction or
01:56 - forward if I press the up key then the
01:59 - player should should move in this
02:01 - direction upward Direction like turn
02:03 - left and upward like something like this
02:06 - right so this is what we need right now
02:10 - based on the this thing we are going to
02:12 - do some project right later so first
02:15 - understand this thing how we are going
02:17 - to B how we going to bind a particular
02:20 - function to a particular key on your
02:23 - keyboard right so this thing we will see
02:25 - in this video I hope you got the basic
02:27 - idea of event lessening or event
02:30 - listener so for that
02:33 - obviously if in my class if I'm am like
02:37 - teaching in my class and the that
02:40 - example if I put a dot on my keyboard
02:45 - that very famous example and if I ask to
02:48 - any student where is the do so the one
02:51 - who was listening or who was attentive
02:53 - or who who was watching can easily tell
02:56 - where is the dot but the one who was not
02:58 - attentive who was not not listening then
03:01 - not able to give the answer where is the
03:03 - dot right so if I want that everyone
03:08 - should listen whatever I'll say so first
03:09 - I'll what what I'll say listen to me so
03:13 - everyone in my class would be attentive
03:15 - at that time and whatever I would say
03:17 - after that
03:19 - then I hope everybody will
03:22 - listen
03:23 - right so this is the case so for this
03:27 - also we have some methods here here so
03:30 - I'll show you what are those methods and
03:33 - how to achieve this event listening okay
03:36 - now let's see this thing with help of
03:38 - example then example then you will get
03:40 - it better so in this Turtle project
03:43 - let's create a new file event listening
03:47 - intro. P it's the first video of this
03:51 - event listening okay now see what I want
03:57 - I have a turtle and see that this turtle
03:59 - module allows us to detect these events
04:02 - right and it will trigger the you know
04:05 - function accordingly whatever we want
04:09 - so what I want is there is a turtle
04:12 - first let's create a turtle so from
04:16 - Turtle let's import first the turtle
04:19 - class and let's import as well the
04:22 - screen class so let's create a
04:27 - screen the name of the object object I'm
04:30 - taking simple screen or you can take S1
04:32 - a b c any name and there is a screen
04:34 - class with S capital so let's create a
04:37 - turtle also to and we have a turtle
04:39 - class right and first let's do this
04:43 - thing screen do exit on click to hold
04:46 - that screen right so now there is a
04:49 - turtle we have now what I
04:53 - want in in our you know on our keyboard
04:56 - we have four Keys up down left and right
04:58 - arrows right so what I want is if I
05:01 - press the up Arrow up key then the
05:05 - turtle should the heading of the turtle
05:08 - or the head of the turtle should
05:10 - be you know uh tilted to Upward
05:15 - 90° and if I press the down arrow then
05:18 - it should be downward I mean you can say
05:21 - like right 90° right if I press the
05:25 - right arrow then it should the heading
05:28 - should be
05:30 - in that direction only and move forward
05:33 - if I press the left key then it should
05:35 - move backward something like this and if
05:38 - I press up then it should move up it
05:40 - should move in that direction if down
05:42 - key then it should move in downward
05:43 - Direction like
05:45 - this so we are going to bind these
05:48 - keys right to the function so for that
05:52 - let's go to that python Turtle
05:54 - documentation so in Python Turtle
05:57 - documentation we have some methods like
05:59 - see the screen method Turtle screen
06:02 - method screen events listen on key and
06:05 - these so listen Okay so first of all the
06:10 - screen should listen to us whatever key
06:14 - I'm going to press like the student
06:16 - should listen to me first so I'll say
06:17 - what listen to me first then the
06:20 - students would be attentive so first you
06:22 - will say to the screen listen to me like
06:26 - what what key or the uh what key I want
06:30 - to press right listen to that and
06:32 - accordingly call the function right so
06:35 - first listen you have to call this
06:37 - function it will set the focus on the
06:39 - turtle screen focus on the turtle screen
06:43 - to capture or to collect the key events
06:47 - whatever key you will press to capture
06:49 - those events right so first you have to
06:54 - call that thing to listen you have to go
06:58 - like screen screen Dot listen this one
07:03 - right so let's define four function
07:07 - obviously you have to Define for
07:08 - function C now after listening there are
07:11 - two method more on key you can use this
07:15 - on key or you can use this on key
07:16 - release so this on key method there two
07:19 - arguments should be passed function and
07:22 - key function with no argument and any
07:24 - key like maybe space up key down key or
07:27 - any a b c d these letters right so it
07:32 - will bind see it will bind the function
07:35 - whatever function you will pass here to
07:37 - that particular key right so obviously
07:40 - you have to Define first functions so
07:43 - here we are passing function as an
07:45 - argument higher order function that we
07:47 - have discussed in the previous video so
07:50 - let's define for function so in function
07:53 - up first of all I want to
07:55 - set what the angle of term to 90° left
07:59 - 90° or you can write down like uh this
08:02 - Tom do left here 90° or one more method
08:05 - we have set heading this also you can
08:08 - use set heading to
08:11 - 90° or here you can write down something
08:13 - like this stor do
08:16 - left to 90 this is also fine right and
08:21 - then if you want to move this time only
08:24 - then Tom dot forward move by 20 pixel
08:29 - and right same like this let's def
08:32 - Define four functions for four keys so
08:35 - for
08:36 - down the down function means downward
08:40 - then heading should be if you want to
08:42 - set the heading then it should be 27090
08:44 - then 180 then 270 then 360 I zero not
08:49 - 360 it's zero or you can write down here
08:51 - something like this uh term dot right
08:55 - 90° that is also fine right and forward
08:58 - 20° now
09:01 - left if you want to move left so left
09:05 - means now set heading to 180° because by
09:09 - default that would be in the turtle
09:11 - would be in facing right direction so
09:14 - next would
09:15 - be right in and set heading here zero
09:21 - okay now we have predefined functions so
09:24 - we can bind these functions so let's use
09:27 - that on key screen Dot
09:29 - on key so first passing we will pass a
09:32 - function then key so function I'm
09:35 - passing first up without these brackets
09:39 - just name and key I'm
09:42 - passing simply the up key up errow right
09:46 - or rather than in positional argument
09:48 - you can pass keyword argument that would
09:50 - be more understandable like fun is equal
09:52 - to this and key equal to up see F you
09:57 - want fun and key key so these two I'm
10:01 - using for keyword argument fun and key
10:04 - so like this now this key up key we have
10:10 - bound this up key to this function up
10:13 - and up function is doing what set
10:15 - heading to 90° and then forward 20
10:18 - pixels something like this so same you
10:21 - can bind these to all the keys to
10:27 - four four keys with four functions make
10:30 - sure the function name should be same
10:33 - okay and these are
10:36 - keys right now we have done this thing
10:39 - so let me just run this and show you
10:42 - what will happen see let's run this
10:45 - there's a screen we have this is a
10:47 - turtle and now I'm pressing the
10:52 - right key right arrow so see it is
10:56 - moving in this direction if I press
10:58 - upward Ward then it is mov upward
11:03 - left in this direction
11:06 - down then this so like this you can do
11:11 - you can like draw any any sketch or any
11:14 - image or something like this whatever
11:16 - you want to
11:17 - do okay now at last if you want to clear
11:21 - the screen that then also we can Define
11:24 - if suppose I I press
11:27 - C right then it should clear this this
11:30 - screen whatever this Turtle has drawn it
11:32 - should clear this thing so for that also
11:34 - we can define a function so one more
11:37 - function we can Define here
11:38 - dep
11:41 - clear
11:43 - screen and any function name you can
11:46 - take right and for that obviously to
11:48 - clearing a screen we have a method so
11:52 - under Turtle method we have a function
11:56 - we have a
11:57 - method clear
11:59 - see clear so this thing we will use okay
12:04 - this is going to clear whatever the
12:06 - drawing has you know whatever the
12:09 - drawing is there drawn by that
12:12 - particular Turtle right so only this
12:14 - thing we want we want we don't want to
12:16 - clear the complete screen because if
12:19 - there is second method also clear screen
12:21 - see clear screen it will clear the
12:23 - screen anything if there is any on that
12:26 - screen it will clear everything the
12:27 - turtle and as well as has any other
12:29 - things also but that thing I don't want
12:32 - I want to clear whatever has drawn by
12:34 - that particular Turtle so let's use this
12:37 - thing it deletes the turtles drawing
12:39 - from the screen okay okay but it do not
12:43 - move the
12:44 - turtle okay let's
12:47 - see see the state and position of the
12:50 - turtle as well as the drawing of other
12:52 - Turtles are not affected
12:54 - right other Turtles throwing are not
12:57 - affected so
13:00 - I want to clear the drawing of the stor
13:03 - Turtle only if you have two three more
13:05 - Turtle then those drawings would not be
13:07 - affected so to dot clear right okay
13:12 - let's run this so this is my drawing and
13:15 - now I want to okay so first of all
13:17 - obviously you have to bind this to a
13:21 - particular key that is also important
13:24 - okay so screen dot on key and function
13:29 - name is
13:30 - what this clear screen without these
13:34 - brackets and key any key you can take
13:37 - I'm taking
13:38 - c yeah The Binding is done so this is my
13:44 - drawing and I want to now I'm pressing C
13:48 - so that there is no drawing but the
13:50 - position and the state of the turtle is
13:52 - as it is here but I want after clearing
13:55 - the screen the turtle should be here at
13:57 - home like like At first the turtle was
14:01 - at here at 0 location same the turtle
14:04 - should be at 0 coordinate right facing
14:07 - in this Direction only forward so for
14:10 - that also we have a what you can
14:14 - say a function home Turtle load home so
14:18 - the turtle would be at his home only
14:20 - back to 0 coordinate so in this method
14:23 - only just write down Turtle dot Tom do
14:25 - home okay so if I write something like
14:28 - this and if I press C but see now
14:31 - there's one drawing I mean the sline
14:34 - while moving the turtle to here to home
14:36 - then it is going to draw
14:38 - that line so you have to do first
14:42 - definitely here P up now that's
14:46 - fine so if I draw now some drawing and
14:49 - press C now see the turtle
14:51 - is at his home and there's no drawing of
14:56 - that Turtle everything is gone
14:59 - so obviously now if you want to draw
15:03 - again then it will not draw anything
15:05 - because we have done pen
15:07 - up so this thing is also important if
15:10 - you do pen up then you have to do after
15:13 - reaching to home you have to do Tom dot
15:16 - pen
15:17 - down
15:19 - right so maybe like this is my drawing
15:22 - and I'll clear my drawing and again I
15:24 - want to draw now that is fine now clear
15:27 - this again I want to draw now clear this
15:30 - and like this right so this is event
15:34 - listening this is how we can achieve
15:35 - event listening using this Turtle module
15:37 - I hope you got the basic idea of this
15:38 - thing right so you
15:41 - can I mean if there is one assignment
15:44 - for you guys now
15:46 - see it's like if I press up then it will
15:50 - move upward it will first set the
15:52 - heading 90° and then it will forward
15:54 - move forward to 20 but I just want while
15:57 - pressing if I press this up Arrow then
16:00 - it will set the heading to
16:02 - 90° right but if then to move the sttle
16:07 - you have to press any other key like
16:10 - maybe
16:13 - space right so you have to
16:18 - bind if you press down then only it will
16:21 - set the heading to 270 it will not it
16:23 - should not move to move the turtle you
16:26 - should press space key so you have to
16:28 - bind the space key with the desired
16:31 - function like move forward function so
16:35 - how you'll do that this is your
16:37 - assignment you have to modify this thing
16:39 - right so I hope you got this thing this
16:42 - idea see now one more thing I want to
16:44 - tell you here rather than this screen do
16:46 - lesson we can use Turtle do lesson
16:48 - because here we are we are using Turtle
16:50 - do lesson if I if you check this uh
16:55 - lesson Turtle do lesson maybe you are
16:58 - Turtle do Liston I want to use Turtle do
17:00 - listen rather than screen do listen so
17:02 - what is the difference that is also fine
17:05 - there is no difference the difference is
17:07 - I'll tell you this implementation of
17:10 - this lesson method is one only it's not
17:12 - like that for turtle it's different for
17:13 - screen it's it's different no it's one
17:15 - only but whenever you call this using
17:18 - this Turtle do listen this
17:20 - line right then if I call this using
17:23 - Turtle do listen
17:26 - Okay like this Turtle do listen this
17:28 - will also work fine or Turtle do on key
17:31 - Turtle do on key this will also work
17:33 - fine okay but if you use this Turtle do
17:36 - listen then this line is going to access
17:40 - the code the code of this method this
17:44 - thing this function as a global function
17:48 - in the turtle module because turtle is a
17:52 - module it's that library right but if
17:56 - you call this using screen objects
17:58 - screen do lesson then yeah it is going
18:00 - to access the same code but now as a
18:04 - method of that particular screen object
18:08 - as a method of that particular screen
18:10 - object right and now here the screen
18:12 - object is we have taken SC WN
18:16 - screen right so this is the difference
18:20 - only other than that this lesson
18:22 - implementation of this lesson is one
18:24 - only it's not like that for turtle it's
18:26 - different for screen is it's different
18:29 - no within Turtle module only screen is a
18:32 - class and we are creating an object this
18:35 - screen of that screen class so now as a
18:39 - method of this object this lesson would
18:43 - be called as a method but here as a
18:45 - global function for this Turtle module
18:48 - as a uh you know Global function for
18:50 - this Turtle module if you write on this
18:53 - line right so I hope you got the
18:55 - difference right okay now based on this
18:59 - we will be seeing one coding exercise in
19:02 - next video right so now I'll see you in
19:04 - the next video till then bye-bye take
19:05 - care