00:00 - hey everyone I hope you are safe and
00:02 - doing good so in the series of learning
00:04 - C++ programming language we are
00:05 - discussing functions in C++ in previous
00:07 - video we have seen how to pass arrays to
00:09 - a function right now based on that we'll
00:12 - see two or three coding exercise in this
00:14 - video okay if you got that you can
00:17 - easily do these exercises so first
00:19 - exercise is you have to find out minimum
00:22 - and maximum element from an array so I
00:24 - hope you know the logic how to find out
00:25 - minimum and maximum element of an array
00:28 - right now there's a Twist you have to
00:29 - use use functions here so Define two
00:31 - functions Min element and Max element or
00:34 - any name you can take right while
00:36 - calling past that array you take right
00:39 - and then you have to find out like
00:42 - Define those functions to find out
00:45 - minimum and maximum element right using
00:47 - function you have to do this thing right
00:49 - so pause the video if you got my problem
00:51 - statement pause the video and try this
00:53 - out so I hope you have done this now
00:56 - we'll Define two functions right suppose
01:00 - void one is minan
01:03 - element we'll uh first declare two
01:06 - functions right mean element and there
01:10 - we should tell the compiler that this
01:11 - function is going to accept array as an
01:16 - argument so this one is for array and
01:18 - second is for size as we pass suppose
01:21 - right so intend it if you want to take
01:24 - name of these elements also I mean this
01:28 - is also fine you can take but but I
01:30 - prefer the syntax I'm comfortable with
01:33 - this
01:34 - thing so next is Max element same
01:37 - prototype would be there for this also
01:40 - right and in main let's take now first
01:44 - an
01:46 - array okay
01:56 - sorry let's take five elements we have
01:58 - in this array right and and we are
02:00 - calling this main element function and
02:03 - we are passing
02:04 - ARR
02:06 - right and obviously the size as well so
02:10 - you know the formula to calculate
02:12 - size size of this complete area divided
02:15 - by size of one element or one element is
02:17 - of type int so size of int we can also
02:20 - write and here we are passing size as
02:23 - well right so let's define now this
02:26 - function
02:31 - here you need to take name this is
02:36 - compulsory the variable name the
02:38 - parameter name a and size we are taking
02:40 - right because this is function
02:42 - definition so I hope now you know the
02:44 - logic minimum element and maximum
02:45 - element so let's take let's take the
02:48 - first element
02:50 - is a smallest one in the array let's
02:53 - assume right so we'll take suppose a
02:57 - variable smallest in smallest equal to a
03:02 - of0 let's take let's assume first
03:05 - element is the smallest one and then we
03:07 - compare the first element with all the
03:09 - elements and if you find any smaller
03:11 - element than the first one then just
03:13 - replace that or something like this
03:16 - right okay now four Loop we are going to
03:19 - compare because the smallest element
03:20 - with all the elements right so four
03:23 - loop from 0 to I less than whatever the
03:26 - size of the array size and
03:30 - I
03:34 - ++ so we take if if a of I whatever the
03:39 - element a of I less than the smallest
03:44 - element
03:46 - then the smallest element will be
03:48 - modified now the a of I element would
03:50 - become the smallest element that's
03:54 - it right and after that just print that
03:59 - element or if you want that this
04:01 - function should return that element so
04:03 - we should change I mean we have to
04:05 - change the Prototype so the return type
04:07 - of the function int and Here Also let's
04:10 - take
04:11 - int
04:13 - and after finding this it will return
04:16 - whatever the smallest
04:19 - element got it now if it is returning
04:22 - something so obviously you have to hold
04:24 - that
04:25 - element in a variable name of and
04:27 - variable of type int right
04:30 - so let's let's take here one more
04:32 - element in int smallest element and
04:36 - whatever it will return we will store
04:38 - that in that element in this variable
04:41 - smallest element and simply we print
04:43 - that smallest
04:46 - element that's
04:51 - it okay let's run this and see it's
04:54 - working or not smallest element is okay
04:56 - smallest element is
04:58 - obviously see here you have to call now
05:01 - that function so the function is main
05:05 - element you're not calling that function
05:07 - so that is why it is giving you whatever
05:09 - the size is right here you if you know
05:12 - the concept of this coma uh operator
05:15 - then you will get this thing why you are
05:17 - getting five right now Min element and
05:20 - okay now we are calling this let's run
05:22 - this and see - 78 yeah that's correct
05:27 - minimum element is this so now it's your
05:30 - assignment now pause the video and try
05:32 - that maximum element how to find out
05:34 - right same we consider the first element
05:37 - as maximum element from this array and
05:40 - then we compare this with every element
05:43 - right less than
05:47 - size and I
05:50 - ++ and if uh that those that a of I is
05:55 - greater
05:56 - than now greater than the maximum
05:58 - element
06:00 - if any a ofi I mean the element is
06:02 - maximum the sorry greater than those
06:04 - maximum element then we replace that so
06:06 - now maximum element will
06:08 - become is equal is equal to whatever
06:11 - that AI element
06:16 - right and at last we simply return so
06:21 - let's change this prototype this return
06:24 - type to in and here we'll call this this
06:27 - so simply Direct in see out we can
06:30 - call uh whatever the function name x x
06:34 - element and pass a and the
06:38 - size let's run this and see what outut
06:40 - we getting minimum element is- 78
06:42 - maximum in is 56 yeah that's
06:45 - correct right so here we are passing an
06:48 - array in a
06:50 - function and we are you know performing
06:52 - some operations right okay these two I
06:55 - hope you are done with these two one
06:57 - more exercise is suppose uh you are
07:01 - hosting an event in your school or in
07:03 - your college and you want to invite some
07:06 - guest speakers right so for that you
07:11 - will make that list right and you'll
07:14 - print that list and after that after
07:16 - hosting that suppose after hosting that
07:18 - or after that event you just clear that
07:20 - list so print the list and clear list
07:23 - two function you need to
07:26 - Define okay so suppose we have
07:30 - string an array I mean array of string
07:32 - type and there we have three names maybe
07:35 - like Jenny and Rahul and prep or any
07:39 - other name right so first print that
07:42 - list Define a function print list right
07:45 - and then clear that list after clearing
07:48 - again print that
07:49 - list I hope you got my point we didn't
07:52 - try this out let's declare a function
07:54 - print list and here we will take an
07:58 - array of type string
08:00 - as well as size so that would be an INT
08:05 - another one is clear that list I me
08:07 - clear list and same we'll pass string
08:10 - and array and second size of what data
08:15 - type you need to give no need to give
08:16 - here variable name because it is
08:18 - function
08:19 - declaration now in main function let's
08:23 - take string
08:27 - and like speak
08:30 - speakers
08:31 - list is equal
08:34 - to Jenny it's shuk Khan not the other
08:39 - one and suppose Modi you can make your
08:42 - own list if you don't like these three
08:45 - person you can just change the name
08:48 - right so this is my list fine now okay
08:53 - this is an array obviously so you
08:55 - should declare it something like this
08:57 - right now we are calling that print list
09:02 - and here I'm just
09:04 - passing speaker list and size so let's
09:08 - take let's take here one more variable
09:10 - like
09:16 - end speaker list size is
09:19 - three right and here I'm just passing
09:22 - speaker list
09:24 - size right so now let's let's define
09:27 - this
09:32 - print list so here we have string
09:39 - and let's take name here same name you
09:42 - can take speaker list or S list I'm
09:44 - taking here and then I'm taking simple
09:47 - name in
09:50 - size right okay now the for
09:55 - loop I should be less than whatever the
09:58 - size is and
10:01 - i++ so we will simply print now because
10:06 - this function is not returning anything
10:08 - we just want to print C out and the list
10:11 - so
10:12 - s
10:14 - list and
10:17 - I with some
10:19 - space
10:22 - right let's write down here a new
10:25 - line just to format it a little bit endl
10:29 - right now this is what print list so let
10:32 - me run this and show you the output you
10:33 - will
10:35 - get okay let's run this here
10:39 - don't so this is the list J srk Modi we
10:42 - just printing the list and you also want
10:44 - to uh restrict anyone from this function
10:47 - print list to modify the list so what
10:50 - you will do just write down here
10:53 - const just make this constant so that
10:58 - and no one can modify it right so if you
11:02 - want to here modify so suppose if you
11:04 - want to modify like if you don't like
11:08 - Modi and you want to replace this with
11:11 - Rahul
11:15 - so let's do this but now we have done
11:19 - this constant parameter here so it will
11:21 - give
11:22 - error now if you want to clear the list
11:25 - then let's define this
11:29 - the same function so here let's
11:32 - obviously you have to take the name I'm
11:35 - taking s list and here size so same for
11:40 - Loop and here rather than see out
11:43 - because you want to clear everything out
11:44 - so
11:46 - sore list and whatever the element there
11:51 - just a space or nothing sorry that's
11:57 - it after clearing the list let's call
11:59 - this function clear list
12:03 - here and after clearing again
12:11 - print right and let's uh in this
12:14 - function let's print after clearing
12:16 - let's
12:22 - print list cleared
12:25 - right so this is a program now let's run
12:29 - this and
12:31 - see first the list then list cleared and
12:34 - nothing will be printed now after that
12:37 - right so because list is cleared now you
12:40 - got
12:42 - it so like rather than in we can pass
12:45 - string array also so this is that
12:48 - example I hope you got this how to pass
12:50 - arrays to a function now try out
12:52 - different different exercises and
12:54 - examples on this thing on this topic
12:57 - don't leave this like yeah you got you
12:58 - you what those three exercises and
13:00 - that's it no just try out at least five
13:02 - or 10 exercises of different different
13:05 - type right like have to pass AR to a
13:07 - function so now that's it for this video
13:09 - now I'll see you in the next video till
13:10 - then bye-bye take care