00:00 - hey everyone I hope you all are safe and
00:02 - doing good so in the series of learning
00:03 - C++ programming language in the previous
00:05 - video we have seen what is continu
00:07 - statement in C++ and how to use it right
00:10 - and as well as we have seen break
00:11 - statement right break and continue in
00:14 - C++ now in this video we'll see one
00:16 - small topic that is infinite loops loops
00:19 - we have discussed for Loop y Loop do y
00:21 - Loop and range based for Loop now
00:23 - sometimes we have infinite Loop right so
00:26 - this thing we'll see in this video what
00:28 - is infinite Loop and why this thing
00:31 - occur in your program and when to use
00:34 - infinite Loops the applications when
00:38 - intentionally we use infinite Loops in
00:41 - our program the applications the uses of
00:43 - infinite Loop right with the help of
00:46 - program also I'll show you flowchart and
00:48 - everything we'll discuss in this video
00:50 - right now maybe you are thinking
00:51 - infinite means obviously that is never
00:54 - going to end so why we use this kind of
00:56 - FL because whenever till now I guess you
00:59 - know maybe you have done your
01:01 - programming and sometimes it happens
01:04 - like your Loop is your program is
01:07 - running
01:08 - continuously right and by default by by
01:13 - mistake you have put in finite Loop this
01:16 - kind of thing in your program so that is
01:17 - kind of error in your program and you
01:19 - have to stop that Loop right but
01:22 - sometimes we intentionally put infinite
01:25 - Loop in a program right now first let's
01:28 - understand what is infinite Loop a loop
01:30 - without exit condition or a loop which
01:33 - is never going to end or it is also
01:35 - known as endless
01:38 - loop right now this infinite kind of
01:42 - thing occurs when some condition meant
01:47 - in your program maybe first thing if you
01:51 - have written a loop with no termination
01:54 - condition that is infinite that would be
01:57 - an infinite Loop because to stop the
01:59 - loop you have to put some termination
02:00 - condition like in four we have we use
02:03 - four here we have initialization then we
02:05 - have termination condition then update
02:07 - so if you forget to put this termination
02:09 - condition then also this Loop would be
02:11 - infinite
02:12 - Loop right like uh maybe when I in my
02:18 - class if I you know ask any student like
02:21 - please stand up and read this thing read
02:24 - this paragraph or read this chapter
02:27 - right and I forgot to mention when to
02:30 - stop maybe after one paragraph or maybe
02:32 - after two paragraph or maybe after
02:34 - completing this chapter something like
02:36 - this so I forgot to mention to him or
02:39 - her when to stop I have just said start
02:41 - reading so that would be an infinite
02:43 - kind of thing right second thing maybe
02:47 - if you have mentioned in uh the
02:49 - termination condition but that is never
02:52 - going to
02:53 - meet this kind of termination condition
02:55 - you have put in your program that is
02:57 - never going to meet right so that is
03:00 - also you know that also will result in
03:03 - infinite Loop third thing if in your
03:06 - Loop there is a condition that instruct
03:09 - it to start over to start
03:12 - again like sometimes we Us in while loop
03:15 - continue uh uh press y to continue press
03:19 - n to exit so if you every time if you
03:21 - enter y it is going to continue continue
03:23 - continue
03:24 - continue so in the loop we have put some
03:27 - condition that instruct this Loop to
03:29 - start again
03:30 - so in these three situations a loop
03:33 - would be infinite Loop let me write down
03:37 - these condition so infinite Loop happens
03:39 - when one of these conditions occur in
03:42 - your program either there is no
03:44 - termination condition second you have a
03:46 - termination condition Loop has a
03:48 - termination condition that cannot be met
03:50 - or Loop has a condition that instructed
03:52 - to start over start again right so for
03:55 - these things we will be discussing
03:57 - individual programs and examples I'll
03:59 - show you
04:00 - right now how do you draw a flowchart
04:04 - first let's discuss this practically
04:06 - then we will draw flow chart right so
04:08 - let's create a new file infinite loop.
04:11 - CPP and same first we will write this
04:14 - header and I'll show you the example of
04:17 - infinite Loop right see if I write a for
04:21 - Loop some for Loop something like this
04:23 - sorry we have here semicolon right and
04:27 - within this if I print like see out high
04:32 - so this would be an infinite Loop
04:33 - because there is no termination
04:35 - condition in this
04:36 - Loop if you want me to run this let me
04:39 - run this and I'll show you see this is
04:41 - an infinite Loop right so because there
04:45 - is no termination condition here same if
04:48 - you put something like this we have like
04:50 - I is equal to 10 and then we put uh
04:54 - termination condition I less than equal
04:57 - to
04:58 - 10 but the thing is it's sorry it's I
05:03 - not one
05:04 - right but now this also an infinite Loop
05:08 - because there is no update so I would
05:10 - always be one one would always be less
05:13 - than equal to 10 so this is the case
05:15 - where we have termination condition that
05:16 - is never going to meant right so this is
05:19 - also an infinite Loop right if you have
05:23 - put something the condition which is
05:25 - always true like I put like uh 10 equal
05:28 - to equal to 10 the is always true or 9
05:31 - less than equal to 10 this is always
05:32 - true so the condition is never going to
05:34 - met right so this is some kind of you
05:37 - know infinite for Loop same with while
05:41 - loop if I put something like this same
05:43 - like for this while loop also we have
05:47 - initialized I is equal to 1 at first
05:51 - and the condition is I less than
05:56 - 10 and see out high but this would be an
05:58 - infinite Loop Loop because I is never
06:00 - going to
06:01 - update okay let me show you let's run
06:04 - this and see it's an infinite Loop
06:08 - right so and now the third Cas is when
06:13 - uh in the loop we have some condition
06:15 - that instruct the loop to start again so
06:19 - same if if I have something like this
06:23 - why if you put while one or while true
06:25 - or other than zero whatever you will put
06:26 - put here number 1 2 3 4 something like
06:28 - this that has always be true
06:30 - so this condition will always be always
06:32 - always be true and this would be
06:34 - infinite Loop right so if you put like
06:37 - while one and here if you ask like see
06:40 - out high and if we ask from the user if
06:44 - you ask from the user like do you want
06:45 - to continue yes or no so if the choice
06:48 - equal to equal to equal to this no
06:52 - either it's small or Capital so and the
06:56 - CH y Choice equal to equal to
07:00 - capital N then
07:03 - only exit means
07:07 - break otherwise it will continue right
07:10 - so if I run this let me show you first
07:14 - it will print high then it will ask do
07:16 - you want to continue and I press y do
07:18 - you want again hi do you want to
07:21 - continue again I press y again it last
07:25 - so if you again enter y y y then it is
07:28 - going to
07:30 - if you have to exit you have to press n
07:32 - so this kind of thing is there
07:38 - right this is the case the last
07:41 - condition to occur in finite program
07:44 - because we have some condition in our
07:46 - Loop that is going to instruct it to
07:47 - start over again right if you don't
07:51 - press n it is not going to exit but
07:54 - right so this kind of thing we will see
07:56 - in many programs so we use infinite
07:59 - Loops in many programs specifically what
08:02 - is use of now this infinite Loop why we
08:04 - use this in which type of things see in
08:06 - operating system infinite Loops are used
08:08 - because operating system you know
08:09 - continuously continuously check for user
08:11 - input manage resources handling input
08:13 - and output and all until you switch off
08:16 - your device right in a meded system also
08:20 - like in event driven programming event
08:22 - Loops event Loops are designed in for
08:25 - mobiles and eded system that are
08:27 - continuously checking for the you know
08:30 - um events like uh moving a cursor
08:33 - pressing any key or clicking something
08:36 - something like this until you switch off
08:38 - that device right so these are Loops
08:42 - viruses sometimes use you know these
08:44 - infinite Loops to crash your computer
08:47 - like whenever you open any link that
08:48 - contains a virus virus then it is going
08:52 - to maybe sometimes open the infinite
08:54 - number of Windows exhausted your
08:57 - resources and you are not able to use
08:59 - use your computer right so they use this
09:02 - thing in finite Loops to crash your
09:04 - computer next web servers use this this
09:07 - thing uh because they generally take
09:10 - user request and they return a web page
09:12 - and again they wait for so long to uh to
09:15 - accept or for the next request right so
09:19 - they have they use in finite Loops web
09:22 - servers also so there are these kind of
09:25 - things there the we intentionally
09:28 - infinite Loops are being used right
09:31 - otherwise generally in simple programs
09:33 - if there is an infinite Loop then we see
09:35 - it as a error as a bu bug and we correct
09:38 - it right so I hope now you got what is
09:41 - infinite Loop and why we use this what
09:44 - is need and when to use infinite Loops
09:46 - so I think you can draw flowchart for
09:48 - these Loops infinite four Loop infinite
09:50 - wide Loop even you can also uh do this
09:53 - thing with doy Loop so if you draw
09:57 - flowchart of infinite for four Loop then
09:59 - we have initialization first in four
10:01 - Loop then condition would be checked and
10:03 - it is always true so true then Loop body
10:06 - then update then again condition which
10:08 - is always true update Loop body and
10:10 - something like this this is infinite
10:11 - Loop right if you draw for while loop
10:14 - then something like this we have like we
10:18 - have a
10:19 - condition it's not like that there must
10:21 - be an initialization in by Loop and then
10:23 - we will enter into the loop body right
10:27 - and then again condition then low body
10:30 - condition low body it's always true
10:33 - right so this is infinite while l so
10:36 - this type of flow chart we can draw
10:38 - right so I hope you got what is infinite
10:40 - Loop and when to use infinite Loops so
10:43 - now in the next video we'll see what are
10:44 - nested loops and what is need of nested
10:46 - Loops right so now I'll see you in the
10:48 - next video till then bye-bye take
10:52 - care