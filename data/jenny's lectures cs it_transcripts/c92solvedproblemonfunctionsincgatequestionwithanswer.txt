00:00 - so in the series of running c
00:01 - programming we are discussing functions
00:03 - in c we have discussed all about
00:05 - functions
00:06 - like some basics about function three
00:08 - parts of function what are three parts
00:10 - function declaration function
00:11 - declaration is also known as function
00:13 - prototype
00:14 - function calling and function definition
00:16 - and as well as we have discussed what
00:18 - classification of function for
00:19 - classification with proper example with
00:21 - program so now i guess it's right time
00:24 - to you know solve some problems on
00:25 - function and the question i'll take that
00:28 - that are of gate question this question
00:30 - is of gate 2019 question right on
00:33 - functions so two or three problems we
00:35 - will discuss here i guess the basics and
00:38 - you know classification of function is
00:39 - clear to you recursion is left
00:42 - recursion we will discuss after
00:43 - discussing these problems right
00:44 - recursion also will discuss
00:46 - so i think you are able to solve these
00:48 - questions fine so we will discuss this
00:50 - question i will show you practical also
00:52 - on my laptop like you first first of all
00:54 - you will write on that this
00:56 - problem here we will see what output
00:58 - will get and then we will check will
01:00 - tell your answer we will run that
01:01 - program on our laptop right now before
01:03 - that just want to tell you one thing if
01:05 - you are preparing for gate or will be
01:07 - preparing for gate 2022 exam then an
01:10 - academy is conducting a combat it's like
01:13 - india's largest weekly competition for
01:15 - gate aspiring so you can say india's
01:17 - largest scholarship test for gate and
01:19 - esc aspirants
01:21 - it would be on 12th of september
01:24 - so the questions are challenging and
01:25 - original gate questions curated by the
01:28 - best gate educators at an academy so 20
01:31 - question you will get and time limit
01:32 - would be 60 minutes so you can take it
01:35 - live better to take it live to compete
01:37 - with the best and here you can analyze
01:39 - your performance by checking your
01:42 - ranking against the others from all over
01:44 - india with live leaderboard that shows
01:47 - real-time ranking after every question
01:50 - so you will come to know where you are
01:51 - standing among the others how your
01:53 - preparation is going on you can assess
01:55 - your preparation in just 60 minutes and
01:57 - one more thing after every contest
01:59 - detailed video solutions will be given
02:01 - to you by the top educators so that you
02:03 - can identify your weak areas and you can
02:05 - improve yourself so that you you can get
02:07 - it right next time and if you take it
02:09 - live you will also get a chance to win
02:11 - some exciting prices so the detail you
02:13 - can see over here and you can take this
02:16 - test for free you don't need to pay
02:17 - anything to take this test you just have
02:19 - to enroll for it the enrollment link
02:21 - i'll put in the description box of this
02:23 - video and enroll using my code jkl10
02:26 - just click on that enrollment link and
02:28 - scroll down and pick the right test for
02:31 - you according to your branch mechanical
02:32 - csit or whatever branch you have
02:34 - according to that you can pick the test
02:36 - and just click enroll
02:38 - so now let's discuss this question i
02:40 - guess you can easily first of all just
02:43 - note down this question brian this
02:44 - question it's not like that just note
02:46 - down this question and you know try to
02:49 - run this on your laptop and see what out
02:51 - we are getting no that is not correct
02:52 - way dry run this with your you know on
02:55 - your pen and paper see what output you
02:57 - are getting and then
02:59 - check on your laptop run this on your
03:01 - laptop and check you are getting same
03:03 - answer or not so here i am discussing
03:04 - this question see here we have one
03:06 - function what is this
03:09 - jumble right whenever the uh you know
03:12 - you will execute this thing first of all
03:13 - control will go where to the main
03:15 - function
03:16 - right and some memory would be allocated
03:19 - to this main function because in main
03:21 - obviously we will have maybe some local
03:23 - variables or something we have
03:25 - so here c we have x and y two variable x
03:29 - and y in x we have 2 and in y we have 5
03:34 - next line is y is equal to jumble y x so
03:37 - here this is what function calling i
03:40 - hope now you can you know
03:43 - identify which is function calling which
03:45 - is function definition which is function
03:47 - declaration here we have only function
03:49 - calling and this is function definition
03:51 - no declaration why because here we are
03:54 - calling this function before calling we
03:55 - are defining this function so in this
03:57 - case no need to you know declare the
03:58 - function it's fine
04:00 - right now it is about function calling
04:02 - so i am going to call this function
04:04 - jumble and what you are passing y and x
04:08 - question is tricky very simple but
04:09 - tricky question
04:11 - so y value is 5
04:13 - and x value is 2 so we are passing these
04:16 - two values so now control will go where
04:18 - here is the definition of the function
04:20 - so control will go here now some memory
04:22 - would be allocated to this jumble
04:24 - function
04:25 - here we have two argument
04:27 - it is what
04:28 - function with argument and with return
04:31 - type it is returning also something
04:33 - right so now here also we have x and y
04:36 - see the name of the variables are same
04:38 - in main also here also that's fine
04:41 - now so now in x and y what you have
04:44 - in x and y we don't have 2 and 5 why
04:47 - because we are passing here first of all
04:48 - we are passing y that is 5 and then 2 so
04:51 - now this 5 would be received by this
04:54 - x and this 2 would be received by this y
04:57 - obviously so now in x we have 5 and y we
04:59 - have 2 in this jumble function now x is
05:03 - equal to 2 into x plus y
05:05 - so 2 into x means 5 into 10 to 10 plus 2
05:08 - that is 12 so now in x we have 2n
05:12 - right here and return x so it is
05:15 - returning
05:16 - x that is it is returning what to n
05:19 - return means now control will go where
05:23 - back to here where we are we are calling
05:24 - this function here
05:27 - means it is returning 12
05:29 - now we have something to receive that
05:32 - value that is y so in y that 12 would be
05:34 - stored
05:35 - right and this y is where
05:38 - in main
05:40 - please don't modify this y
05:42 - now we are out of this thing and we once
05:44 - we go out of this
05:46 - these x and y are no more
05:48 - right so now we have in main we we are
05:51 - now in main so this y would be now 12
05:54 - because it is returning 12 and that i'm
05:56 - going to store in y so now the next line
05:58 - x is equal to jumble this again we are
06:00 - calling the function right so
06:02 - again
06:06 - when you will call again
06:08 - the control will go here again memory
06:10 - would be allocated to this function
06:12 - right
06:14 - and here we have now x and y
06:17 - right now
06:19 - we are passing y and x so y value is 12
06:22 - and x value is 2
06:24 - so now this 12 would be received by this
06:26 - x so now in x we have 12 and this 2
06:28 - would be received by this y so here we
06:30 - have 2
06:32 - right now
06:34 - x is equal to 2 into x plus y so 2 into
06:36 - x means 12 into 2 24 plus 2
06:38 - 26 now in x we have 26
06:42 - return x now 26 would be return now
06:44 - return means now control will go here we
06:46 - are calling this function here
06:48 - right so now once control will go out of
06:50 - this
06:51 - means
06:53 - this memory has been freed now these x
06:55 - and y are no more now we are in main
06:56 - function here now control is here
06:58 - so now whatever this will return it is
07:00 - returning what 26 we are going to store
07:02 - that in x so now x become 26
07:06 - next line is printf
07:08 - x we are printing so x value is what
07:12 - 26 and return 0
07:14 - because see we are taking ah the written
07:17 - type of main is end
07:19 - it means it will return something some
07:20 - integer value so
07:22 - return a 0 that's it
07:24 - right if you write down here void no
07:25 - need to write down return statement so
07:26 - now x value is 26 i hope you got this
07:29 - question this was one more question in
07:32 - gate 2 2019 so see simple question very
07:35 - simple but
07:36 - tricky
07:37 - you have to solve the gate question with
07:39 - full concentration right
07:41 - so i guess you got this answer let me
07:43 - show you practical of this question
07:45 - so see this is the question we have
07:48 - right
07:50 - now
07:50 - let me run this and show you what output
07:53 - you will get
07:56 - see it is printing what 26 so now x
07:59 - value is 26 i hope you would
08:01 - how this is printing 26 value right
08:04 - so in the next video we will see one
08:06 - more question or if you guys want me to
08:08 - discuss some i know a specific question
08:10 - then you can ask me in comment box on
08:11 - function
08:12 - maybe that came into gate or in ugc net
08:15 - exam or any exam that you can comment
08:18 - you can you know write down in the
08:19 - comment box
08:20 - we'll discuss that question in the next
08:21 - video so now see in the next video till
08:23 - then bye take care