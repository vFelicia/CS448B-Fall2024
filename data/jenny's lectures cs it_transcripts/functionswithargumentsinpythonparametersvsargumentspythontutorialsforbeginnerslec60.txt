00:00 - hi everyone I hope you all are safe and
00:02 - doing good so in the series of learning
00:04 - Python programming language we are
00:06 - discussing functions till now we have
00:08 - discussed some Basics or functions only
00:10 - like introduction to functions and based
00:12 - on that we have done three coding
00:14 - exercises
00:16 - right now the next point or the next
00:19 - step in functions is what functions with
00:22 - arguments right in previous video we
00:24 - have seen one function like when we're
00:26 - discussing the introduction to function
00:28 - in that video we have created a grid
00:30 - function like this
00:32 - I hope you have seen that video and you
00:34 - know how to define a function just diff
00:36 - keyword the function name greet these
00:39 - parenthesis then the colon and whatever
00:43 - you want to execute here suppose I want
00:45 - to execute like High
00:47 - and then I want to print
00:49 - these two things like hi and then are
00:52 - you from CS Department computer science
00:54 - department right so this is definition
00:57 - of this function right yeah this is not
01:00 - complete definition that we have
01:02 - discussed in the syntax like if you want
01:03 - to pass the parameter you can pass then
01:05 - we have a return statement also return
01:07 - expression but this function is not
01:08 - returning anything and we are not
01:09 - passing anything here so simple one this
01:12 - thing we have discussed but
01:13 - this will not do anything if you will
01:16 - run this program because you have to
01:18 - call the function right you have execute
01:21 - that function to get the output you have
01:23 - to call that function so how to call
01:24 - just name of the function and that's it
01:28 - these parenthesis green no colon here so
01:31 - whenever you will call it it will print
01:32 - two line hi are you from computer
01:34 - science department again if you call
01:35 - again equipment two line hi are you from
01:37 - computer science department CS
01:39 - Department like this like this is the
01:41 - basic one right but see if rather than
01:45 - this you want to print like hi Jenny
01:49 - are you from computer science department
01:51 - right so what you do simple trick is
01:54 - simply write here hi Jenny
02:03 - okay fine but next time I want to print
02:05 - like hi Ram
02:07 - so it's not like that we will Define
02:09 - another function like this grid one
02:11 - greet two and there we will print hi Ram
02:14 - are you from computer science department
02:15 - or again we will change here like hi Ram
02:18 - are you from computer science department
02:20 - like this but again if I want to create
02:22 - like high sham then what we'll do
02:25 - will you again change here sham no that
02:27 - is not a good idea
02:28 - and although no that is not a good idea
02:31 - but again if you define one function
02:33 - from another function for sham another
02:35 - function from Jenny the same like grid
02:38 - one great two great that is also not a
02:39 - good idea right then what is the use of
02:41 - using these functions you are repeating
02:43 - these lines again and again and again
02:45 - not repeating you are not reusing you
02:47 - are just writing again and again so what
02:48 - is use of function
02:50 - right so what I want whatever I will say
02:53 - that like the user say
02:55 - Jenny so that your function will accept
02:58 - that thing Jenny and then it will print
03:00 - hi Jenny are you from computer science
03:02 - department
03:02 - again if users say Ram so this your
03:06 - function should accept that Ram
03:09 - right and high Ram are you from computer
03:11 - science department next time then hi
03:13 - sham are you from computer science
03:14 - department the same function only one
03:16 - function
03:18 - right so for that you have to obviously
03:22 - call that function and you have to pass
03:25 - that thing
03:27 - right
03:28 - like if you want me to teach you then
03:31 - you should call me like Jenny like uh
03:34 - python so genuine please teach python
03:38 - right or if you want me to teach you C
03:40 - plus plus so you will call you will call
03:43 - me first that is important call me if
03:45 - you not call me then I cannot read your
03:47 - mind right like if you want to study C
03:49 - plus plus for me or python from me or uh
03:52 - database or anything so you have to call
03:54 - me same you have to call the function
03:56 - like I am a function right and you have
03:58 - to pass that subject also you have to
04:00 - like tell me the subject like please
04:02 - teach that is like teach is a function
04:05 - teach python
04:07 - okay then I will accept
04:10 - okay you are saying python okay I'll
04:12 - teach python again if you want like
04:15 - teach C plus plus then you will save me
04:17 - Teach please ma'am teach
04:19 - us C plus plus then I'll accept that C
04:22 - plus plus
04:23 - as a subject and then I'll teach
04:25 - like I'll execute myself something like
04:28 - this I hope you can relate this thing
04:30 - anyway now see so
04:35 - here rather than this we simply we are
04:38 - just writing like this
04:39 - so
04:41 - pass call the function when you will
04:43 - pass that thing whatever value you want
04:45 - to pass
04:46 - when you are calling that function
04:48 - obviously because that is the main thing
04:50 - control will first of all go here
04:52 - function calling
04:54 - right so here just pass like greed if I
04:57 - pass Jenny
05:01 - okay so now control will go here it will
05:03 - search the way the definition of the
05:05 - function definition of the function is
05:06 - here def green now this should be same
05:09 - the calling and this so here if you are
05:11 - passing something then
05:13 - here there should be something to accept
05:16 - that value
05:18 - and how to accept where to store
05:20 - generally in you know in our computer
05:22 - will store that information
05:25 - in variables in you know in variables
05:27 - right so just take a variable here like
05:29 - name
05:33 - so we'll pass Jenny here now this name
05:35 - will accept Jenny now we know
05:39 - on Jenny I have to do some like you can
05:42 - say functioning
05:44 - so I want to print like hi Jenny so what
05:47 - we can do hi we can use like a F string
05:51 - we have discussed what is F string
05:54 - in the previous videos just here you
05:57 - have to put F in print
05:59 - hi and the name of the variable name of
06:03 - the variable is name
06:06 - so it will this name it will pick up
06:09 - Jenny from here are you from computer
06:11 - science department
06:12 - fine next time if I want to greet Ram so
06:17 - just call another function
06:20 - just greet and RAM
06:22 - so it will print first hi Jenny are you
06:25 - from government size Department then
06:27 - here then again it will call now this
06:29 - time in name we have Ram so hi Ram are
06:34 - you from computer science department
06:36 - right so this is what these functions
06:39 - are we are providing some input to these
06:41 - functions or we can say argument to
06:43 - these function now see
06:44 - if General syntax if you write functions
06:48 - with arguments then how would you will
06:50 - how you will write
06:52 - uh we will write something like this I
06:55 - hope now you can write this pause the
06:56 - video and you can just try it out
06:59 - So Def
07:01 - here General syntax the function name
07:04 - and
07:06 - parameters
07:09 - and then column then
07:12 - function body
07:16 - right
07:17 - or if you are about to write in the
07:18 - complete thing then you can write down
07:20 - like a return
07:22 - expression within this function only but
07:25 - this return is what optional here we are
07:28 - not returning anything we are just
07:29 - printing
07:30 - and this is the definition of the
07:32 - function and calling is what
07:34 - just the function name
07:37 - and here you pass the value value means
07:40 - here you pass the
07:41 - arguments okay now I hope this is clear
07:45 - to you guys how to define a function
07:47 - with parameter how to call now
07:50 - another thing is what is difference
07:51 - between parameter and argument there is
07:53 - also one of one of the question in these
07:55 - or sometimes an interview also they ask
07:57 - this question what is parameter and
07:59 - argument so see here I have written
08:01 - arguments means whatever value the
08:04 - actual value you pass
08:06 - while calling the function that is
08:08 - argument or you can say
08:10 - actual parameter right
08:14 - and the variable name
08:16 - you you know use to hold or to accept
08:20 - that value while defining the function
08:23 - that is known as formal parameter or you
08:27 - can say parameters
08:29 - I hope the difference is clear to you
08:31 - guys these are parameter or formal
08:33 - parameter these are actual parameters or
08:36 - arguments you can say
08:39 - right now here as many arguments you can
08:41 - pass as you want like here I have passed
08:43 - only one argument one two three four
08:45 - five up to you or according to your need
08:48 - like if you are doing some of two
08:51 - numbers then what you will do you just
08:53 - pass
08:54 - two arguments have to write down that
08:57 - thing okay the here one exercise for you
09:00 - is if you have to write down a function
09:02 - add and there it should accept two
09:05 - arguments
09:07 - right and it will print edition now
09:09 - pause the video and try this out so I
09:11 - hope you have tried this out so let's
09:14 - create a new file here and we will say
09:16 - like
09:18 - function underscore width
09:21 - argument
09:24 - dot p y not C okay
09:28 - I hope you have done that Edition uh
09:30 - that function you have defined that
09:32 - function addition so how to define depth
09:34 - add
09:36 - and
09:38 - okay rather than defining when you will
09:40 - call
09:41 - when you will pass that those values
09:44 - like I want to add two numbers
09:46 - like maybe five or two right okay when
09:50 - like I have given you that example if
09:53 - you want me to teach you then you will
09:55 - call like ma'am please teach python
09:58 - you will call me so at the time of
10:01 - calling
10:02 - we pass our data the value right so how
10:06 - to call add suppose add and I want to
10:09 - pass like
10:10 - 5 comma 7.
10:12 - but how to add this computer doesn't
10:15 - know how to add these numbers you have
10:17 - to provide those instructions so you
10:18 - have to Define that function first so
10:21 - just depth the function name add and to
10:25 - store these values to variables
10:27 - variables obviously we are going to
10:29 - store the values call and end there we
10:31 - take another variable C is equal to
10:33 - suppose a plus b
10:35 - and simply we print
10:38 - using Okay using an app for string
10:43 - right like print and F and here we will
10:47 - store like sum is
10:51 - in which variable we have sum in C
10:53 - that's it right and you can call this ad
10:57 - 5 and 7. so let's run this
11:00 - I think it was easy you have done this
11:03 - it should print 12 so this sum is 12. if
11:06 - you want to add
11:08 - another number like 8 and 9 I want to
11:10 - add it's okay you can you can another if
11:13 - again call this function and pass your
11:15 - value eight and nine see the sum is 12
11:17 - the sum is 17 like this so we are
11:19 - passing in this case two arguments right
11:22 - and in Grid we were passing only one
11:25 - like name
11:27 - okay but see you have to call the
11:29 - function with exact number of arguments
11:32 - by default otherwise it will give error
11:34 - suppose here we have two arguments
11:36 - A and B means this function is you know
11:40 - expecting two values right and if you
11:43 - call this with only one value suppose
11:46 - five
11:47 - let's run this it will give error see
11:49 - type error
11:51 - missing one required positional argument
11:53 - so that we will see in the next video
11:55 - what is positional argument but you can
11:57 - see like there is missing one argument
11:59 - is missing right this is type one of the
12:02 - type of the argument positional argument
12:05 - so you have to pass exact number of
12:07 - arguments right so you have to pass two
12:10 - arguments here you cannot pass three
12:13 - note more argument not less argument by
12:15 - default you have to pass this thing we
12:17 - can pass like if uh the yeah there is a
12:20 - case also if this functioning is
12:22 - accepting you know
12:24 - two arguments
12:26 - and you are passing only one argument
12:29 - then also it will work but that is
12:31 - different case in the next we will see
12:33 - types of argument then I'll show you how
12:36 - this is possible but right now by
12:38 - default you have to pass something like
12:41 - this two argument the same exact number
12:42 - of argument right and a function without
12:44 - argument is also possible right but if
12:47 - you want to process something like here
12:49 - I want to add two numbers so I want to
12:51 - process addition on two numbers so just
12:54 - pass the information here so these
12:57 - arguments have to pass the information
12:59 - to the function right so that this
13:01 - function will perform some operation on
13:03 - that operation and then it will print or
13:05 - maybe it will return that value
13:07 - right so uh like if on different
13:10 - different inputs I want to perform this
13:12 - addition in that case
13:14 - it is better to pass arguments like
13:17 - suppose addition I want to you know
13:19 - print 10 times one time the addition of
13:22 - five and seven then eight and nine then
13:24 - one and two then 100 and 200 like this
13:27 - so in different different inputs you
13:29 - want to
13:31 - you know do addition of these numbers
13:33 - so just pass that value in the form of
13:36 - arguments right okay so here these five
13:39 - and seven these are arguments so you can
13:41 - say actual parameters and this A and B
13:43 - are parameters so you can say formal
13:45 - parameters right okay the grid function
13:48 - you can try I guess that was
13:50 - easy right okay so I hope this is clear
13:53 - to you guys functions with arguments or
13:55 - with inputs how to define this those
13:57 - functions how to a new call how to use
14:00 - those functions in your program but we
14:03 - have different types of arguments right
14:05 - so in the next video we will see types
14:06 - of arguments so now we'll say the next
14:08 - tutorial then bye take care