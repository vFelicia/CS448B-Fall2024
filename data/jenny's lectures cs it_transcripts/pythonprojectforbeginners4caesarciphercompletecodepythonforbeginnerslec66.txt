00:00 - hey everyone I hope you are safe and
00:02 - doing good so in the series of Learning
00:03 - Partner programming language in the
00:05 - previous video we have discussed what
00:07 - what is Caesar cycle because we are
00:08 - making this project Caesar Cipher right
00:11 - this in this series of you know python
00:13 - learning python this is a ports project
00:15 - so today we are going to implement that
00:17 - project so I would recommend to watch
00:19 - out the previous video first
00:21 - what you know there we have discussed
00:24 - what is Caesar Cipher how to implement
00:25 - and what kind of output I want right and
00:29 - pause the video right now and try this
00:31 - out right and if you have already tried
00:33 - this out it's okay now we are going to
00:36 - implement that project in this video
00:38 - okay now and I hope now you know I have
00:43 - told you what kind of output I want
00:45 - or let me just show you again what kind
00:47 - of output I want see first of all it
00:50 - should ask you type encrypt for
00:51 - encryption and decrypt for decryption
00:54 - so first of all
00:56 - I am going to encrypt my message what
00:58 - message suppose
01:01 - only Jenny
01:03 - type the shift number the shift number
01:06 - suppose three
01:08 - and see it will show here is the text
01:11 - after encryption mhqq B
01:15 - now it will ask type yes if you want to
01:18 - go again and otherwise no
01:21 - I'll type
01:22 - yes
01:24 - now
01:26 - I want to decrypt my message so type
01:28 - your message this is my message I want
01:31 - to decrypt this C for text so let's just
01:33 - copy paste this
01:36 - and shift number is obviously it would
01:38 - be same for encryption and decryption
01:39 - that is three and say after decryption
01:42 - my text is Jenny again you will ask if
01:46 - you want to continue or not if not then
01:49 - in the center no and it will say you
01:51 - goodbye and that's it
01:53 - something like this
01:54 - right so first what we will do obviously
01:57 - it should ask we will take three type of
02:00 - input this thing
02:03 - type encrypt for encryption decrypt for
02:05 - description this user will enter
02:07 - message user will enter and the shift
02:09 - number or the shift key user will enter
02:11 - these three input view on and according
02:14 - to the choice in crypto decrypt it will
02:16 - call encryption
02:18 - function or decryption function that's
02:21 - it
02:22 - okay
02:23 - okay fine now let's
02:26 - create a new file here
02:32 - so
02:35 - Caesar Cipher
02:38 - Caesar Cipher dot p y
02:41 - now three input we want so first thing
02:44 - like maybe
02:47 - what to do
02:49 - what you want to do and you can just
02:52 - take input you can
02:54 - just try and type first input is this
02:57 - encrypt or decrypt was what user want
03:00 - the user Choice then the text what text
03:04 - or what message you want to encrypt so
03:07 - suppose
03:08 - we take a variable text or any variable
03:11 - and there we will take input
03:13 - type your message and third is the shift
03:16 - key so
03:18 - just enter shift key and shift key is
03:21 - obviously integer so we are going to
03:23 - Typecast this into hint and this would
03:26 - be string this would be string so no
03:27 - need to type car so three input now we
03:29 - have
03:30 - now based on that which function you
03:32 - call
03:33 - encryption or decryption so you have to
03:35 - put a condition like if
03:37 - if this variable what to do
03:41 - what to do equal to equal to
03:46 - encrypt if user have typed encrypt then
03:51 - we will call encryption function suppose
03:53 - we have defined that function
03:55 - yeah I know till we haven't defined that
03:57 - function so directly we are going to
03:59 - call
04:01 - so we'll call a function encryption and
04:05 - what we pass an encryption the text you
04:07 - want to encrypt the message and the
04:10 - shift key two things so I am passing
04:13 - what
04:14 - only text and
04:17 - shift these two things
04:20 - okay but
04:23 - L if
04:25 - this what to do equal to equal to
04:27 - suppose decrypt
04:32 - then we will call
04:34 - suppose we have a decryption function
04:36 - decryption and same we will pass
04:39 - text and
04:40 - this shift
04:46 - two cases right now let's define these
04:49 - two function encryption and decryption
04:51 - functions so before calling we have to
04:53 - Define
04:54 - so first we will Define encryption
04:56 - function so the same name
04:59 - encryption
05:01 - two argument it should take so
05:03 - encryption will take a plain text and
05:06 - convert into ciphertext so suppose it
05:09 - will accept a plain text not suppose
05:11 - yeah it will accept a plain text so
05:14 - suppose we are taking argument
05:16 - plane
05:18 - sorry underscore
05:20 - text and
05:23 - shift key these two variable name I'm
05:27 - taking right
05:29 - so okay let's suppose rather than just
05:31 - positional argument better to pass
05:33 - keyword argument right so we will take
05:36 - here plain text equal to text and
05:44 - the shift key equal to
05:46 - shift right
05:49 - for this positional argument we will you
05:53 - know uh sorry the the keyword argument
05:55 - will pass but when we will Define that
05:57 - decryption function then we'll pass
05:59 - right
06:00 - so now in encryption you have to apply
06:03 - the formula what is the formula basic
06:05 - one what
06:07 - you have to find out like we have
06:10 - a list obviously we have to take a list
06:13 - first
06:14 - of all the alphabets a b c d like this
06:17 - right so let's take a list first of all
06:20 - okay now we have a list of alphabet
06:22 - having all the 26 letters or alphabets
06:25 - right
06:27 - so first thing
06:29 - what we have like the index or the
06:31 - position of these alphabet is from 0 to
06:33 - 25 right so the shift key is suppose I
06:37 - am passing a message
06:40 - like
06:42 - hello
06:43 - so for H for H the number is here
06:48 - 7. 0 1 2 3 4 5 6 7 so correct it's seven
06:53 - and suppose the shift key is three
06:55 - so in encryption
06:57 - it should give 7 plus 3 is 10 at 10 we
07:01 - have 7 8 9 10 K so it will replace this
07:04 - H with k
07:07 - right okay
07:09 - you know the formula so first you have
07:12 - to you know find out this index of this
07:16 - letter
07:17 - H the index is seven or you can see the
07:20 - position
07:21 - right how to find out the index we have
07:23 - a function in list index function how to
07:26 - call that function C
07:28 - suppose we have passed a message helper
07:31 - for each letter we are going to find out
07:33 - the index right so let's put it a for
07:36 - Loop for
07:38 - in
07:42 - plain text
07:44 - plain text is hello so first time in
07:47 - care H would be assigned for H we are
07:50 - going to find the position
07:52 - equal to how to use that index function
07:58 - just first of all the index function is
08:02 - of
08:03 - list on list we are using that index
08:05 - function so list name is alphabet
08:08 - Dot
08:10 - C you can see that this is the index
08:12 - function index
08:14 - and for what letter you want to find out
08:17 - the index the letter is in care
08:21 - now first in care we have H now in
08:25 - position right now we are having seven
08:27 - right so in position we will be adding
08:30 - position plus shift key right so new
08:34 - position
08:36 - new position is equal to
08:39 - this position plus
08:42 - whatever the shift key whatever the
08:44 - shift key
08:45 - so 7 plus 3 is now 10 right now at 10
08:50 - what letter we have that you have to
08:52 - access now right so how to access that
08:55 - letter and that letter we are going to
08:58 - obviously we are going to create a new
09:01 - string empty string first
09:04 - here suppose
09:07 - C for text is equal to empty string
09:12 - because whatever the text would be there
09:14 - after encryption that would be known as
09:15 - C4 text so right now C for text is empty
09:18 - so first
09:22 - in C for text we are going to add plus
09:25 - equal to
09:27 - at new position whatever the letter is
09:30 - so how to access at new position is 10
09:33 - how to access that thing just pass the
09:36 - list name and in index or in the
09:39 - subscript just passed new position
09:43 - so whatever the like Revenue position
09:44 - that would be added to now see for text
09:46 - so at first K would be added to C for
09:49 - text right now again we are in for Loop
09:53 - so next character is e now in care we
09:56 - have e so for E first of all we will
09:58 - find out the position then
10:01 - new position after adding the shift key
10:04 - after like once the for Loop is complete
10:07 - till we have done till o h e l l o now
10:10 - we are out of the loop and we are just
10:12 - going to print
10:15 - the C for text
10:17 - so what we will print like
10:22 - here is the
10:24 - text after
10:27 - encryption
10:32 - and the that
10:36 - in the variable C for text we are having
10:38 - that text
10:40 - right
10:43 - so I think encryption is done okay it's
10:46 - not like you know the final one little
10:49 - bit we are going to update but I'll show
10:51 - you that thing also
10:53 - when we are going to update so I think
10:55 - now we are thinking we are done with
10:57 - encryption right okay
11:02 - let's call this
11:06 - let us comment comment out these two
11:08 - lines first
11:10 - like we are just going to call encrypt
11:13 - encryption right okay I don't know it
11:16 - will work or not let's run this and
11:18 - let's see
11:19 - so we have only
11:22 - encrypt function type your message h e l
11:26 - l o hello
11:27 - shift key is suppose three
11:31 - so see the text after encryption is k h
11:34 - o o r now manually you can write down
11:37 - all the alphabet ABCD on a piece of
11:40 - paper just assign 0 1 2 3 4 like this
11:42 - and just trying to convert right but the
11:45 - problem is you will get k h o r but the
11:48 - problem is let's run this again
11:52 - encrypt and
11:55 - hello is our key suppose or suppose Jen
12:00 - is early
12:01 - so see why
12:04 - for y the index is
12:07 - 24. and the shift key if I provide three
12:13 - so for why it's 24 24 plus 3 27
12:19 - but in index we are not having any
12:21 - letter
12:22 - at 27. so what it will give
12:26 - C list out of index range
12:29 - index out of range error so how to solve
12:32 - this problem
12:35 - this is one thing
12:36 - if the letters are more towards the end
12:39 - like towards Z so after Z after 25 where
12:42 - you will go
12:44 - okay this is the problem so we should
12:47 - so this should be something like this
12:49 - Y is 24 24 plus 3 is 27 so we are in
12:55 - like a loop after Z we want again we
12:59 - should go to a
13:01 - so if we add plus 3 then y should be 1 2
13:04 - 3 it should be B it should be replaced
13:07 - with B
13:09 - okay
13:10 - so for this thing what you need to do
13:12 - see
13:14 - I have told you the formula it should be
13:17 - X Plus n mode 26.
13:21 - right because within 26 letter you have
13:24 - to be there within 26 letters within the
13:26 - range of 0 to 25 you cannot go out of
13:29 - that
13:31 - okay that is the you can say limitation
13:32 - of Caesar Cipher
13:34 - so here you have to do
13:37 - in the formula mode 26
13:42 - modulo operator 26.
13:46 - now let's run this
13:49 - same
13:57 - encrypt messages suppose Jenny shift key
14:01 - is 3 C
14:03 - mhqq B
14:06 - now B is converted to Y is converted to
14:09 - B because we have handled the situation
14:12 - also with mode 26 exact formula we have
14:15 - applied right and that also work in
14:18 - those cases if shift key is very large
14:20 - if shift key is more than 25 or more
14:23 - than 26 so 50 is 30
14:25 - right so with mode 26
14:29 - that would be within 26 only
14:33 - okay yeah
14:35 - if you are not applying here mode 26
14:39 - let's suppose again run this
14:41 - and
14:51 - encrypt and
14:55 - hello
14:57 - shift K suppose 30.
15:01 - see same list out of index range
15:04 - although letters are not more towards z
15:07 - l l o but the key is 30.
15:11 - now H is at seventh position 7 plus 30
15:14 - is 37. but how to access we we are not
15:17 - having any index
15:18 - 37 in our list we are having from 0 to
15:21 - 25. so to limit that index from 0 to 25
15:25 - within those 26 letters you have to use
15:28 - mode function
15:29 - right so this thing is very important
15:32 - you need to take care here
15:35 - more twenty six
15:37 - now this will work okay so I hope now
15:40 - you got
15:41 - how to define this encryption function
15:44 - now you will not face much difficulties
15:48 - while defining decryption function
15:50 - it would be almost same so let's just
15:54 - copy paste this thing
15:59 - okay now rather than encryption just
16:02 - change
16:04 - decryption and decryption is what it
16:07 - will convert ciphertext to plain text so
16:09 - it will accept the input
16:12 - ciphertext so rather than
16:15 - the argument name plain text
16:18 - just give it C for text or you can give
16:20 - plain text also that is also fine but
16:22 - for understanding because encryption
16:24 - will convert plane to Cipher so it will
16:27 - accept plain text and give you
16:28 - ciphertext decryption will convert
16:30 - Cipher to plane so it will accept
16:31 - ciphertext and give you plain text that
16:34 - is why I am just taking otherwise you
16:36 - can take any argument name it's up to
16:38 - you
16:39 - so and shift key that's it and
16:42 - here we are taking plain text because
16:45 - finally we will get plain text so for
16:47 - care in not plain text in Cipher text
16:54 - Karen ciphertext so if
16:57 - this is hello and the key is 3
17:00 - then Cipher text would be k h o o r now
17:06 - first of all care in care we are having
17:08 - k
17:09 - so here
17:13 - care is equal to K first
17:15 - so just find out the position of this k
17:19 - now position of K is or the index of K
17:22 - is using index we can just find out the
17:25 - same thing this time would not be
17:26 - changed so for K the position is 10.
17:30 - Now new position would be
17:32 - we are going to shift now backward
17:35 - while decryption so you have to do
17:37 - position minus shift e rather than Plus
17:41 - minus shift key and obviously mode 26
17:44 - would be there why what is the
17:45 - signification or significance of this
17:46 - mode 26 I have told you right but here
17:49 - minus 26 sorry minus shift key
17:53 - then
17:54 - in plain text
17:57 - we will add plus equal to
18:00 - this alphabet what is the alphabet at
18:02 - new position so okay it's 10 10 minus 3
18:05 - is 7 so at 7 what is the letter H so H
18:08 - would be added to plain text at first
18:10 - and same would be repaid for k then H
18:13 - then oor and finally you will get hello
18:16 - after this for Loop we are just going to
18:19 - print here is the text after
18:22 - decryption and this is what in
18:26 - the variable name is plain text
18:29 - okay so now we can call
18:32 - we can just remove these
18:35 - so else if this is what to do is decrypt
18:37 - just call decryption
18:39 - okay let's run this
18:42 - although it's not correct but let's run
18:44 - this
18:45 - and I will first decrypt
18:50 - decrypt type your message was
18:53 - k-h-o-o-r for hello
18:57 - encryption so it will give you hello
19:01 - but it should repeat
19:03 - now see it is going to end process
19:05 - finished but it should repeat until we
19:08 - enter no right so for that you have to
19:11 - put a loop or you can say for how many
19:13 - times it should repeat these things
19:15 - encryption decoration we don't know so
19:17 - the best Loop is while loop if you don't
19:18 - know the number of iteration
19:20 - so okay so all these things you have to
19:24 - put in a while loop because then again
19:26 - again we are asking what to do indicator
19:28 - decrypt message then shift key then call
19:31 - encryption and decryption
19:33 - so put this in while loop but
19:36 - what is the stopping condition when you
19:38 - have to stop
19:40 - I don't know the number of iteration
19:42 - fixed iteration so let's we will give a
19:44 - simple any variable and say a flag
19:47 - that should be true first always true
19:49 - but once something happens within this
19:52 - body of the while loop we will flip that
19:54 - flag to false
19:55 - and then exit from the loop so what
19:58 - variable M you can take any variable you
20:00 - variable you can take I just wanna take
20:03 - wanna
20:05 - and
20:07 - variable name wanna add or end of the
20:10 - program or you can say end or you can
20:13 - see any variable you can take a b c or
20:15 - also you can take but just for
20:17 - understanding purpose I am taking one
20:18 - and is equal to
20:19 - at first for false because we I'm not
20:22 - gonna I'm not gonna and I don't want to
20:24 - end my program right now so it should be
20:26 - false first so while
20:28 - not
20:30 - want to add so at first it is false not
20:32 - false is true
20:34 - so true means we are going to enter into
20:36 - this while loop so this all this this
20:38 - thing should be indented now but when to
20:42 - stop this while loop
20:46 - if
20:48 - in that output if user enter no then we
20:52 - will
20:53 - stop so you have to ask from the user
20:55 - one more input you have to take for that
20:57 - input just take a variable name
21:01 - let's I'm taking like a variable in play
21:03 - again
21:04 - okay so play again and
21:07 - with input function will take input from
21:10 - the user so in this variable we will
21:12 - just take input type yes to continue and
21:14 - type no to exit we will ask from the
21:16 - user right and we will check if if this
21:21 - play again this variable equal to equal
21:23 - to
21:24 - if it's a no no
21:27 - same letter you have to write down like
21:29 - n or no is in lower letter so here also
21:32 - n o lowercase letter not capital letter
21:34 - it is K sensitive
21:36 - so if it's a no then we are going to
21:38 - flip that variable that's 1 and equal to
21:43 - true
21:44 - and just in case you can just print a
21:48 - message here like have a nice day and
21:50 - bye in if
21:52 - so see one end is equal to True next
21:55 - time not true is equal to false and we
21:57 - are will be exit from this while loop
21:59 - right so this is how you can control
22:01 - this thing okay let's run this and see
22:03 - what output you will get let's run this
22:09 - encrypt type your message it is hello
22:12 - shift key is suppose three
22:14 - then we've got CS to continue node to
22:17 - exit yes
22:22 - I want to decrypt now messages k h o r
22:26 - shift key should be same 3 and
22:29 - decryption is hello and if I press no
22:32 - exit have a nice day bye
22:35 - but the problem here is what
22:37 - if I just enter the text like maybe
22:40 - hello space one two three or any symbol
22:43 - in that case what will happen
22:45 - see
22:51 - messages
22:53 - hello space one two three
22:56 - and then assemble and
22:58 - Jenny
23:00 - shift key is three
23:01 - see
23:03 - the space value error is not in the list
23:06 - because you are prodding space then one
23:08 - two three then this is this and enlist
23:11 - in alphabet list we are having only a to
23:13 - z
23:14 - so now it is giving error but it should
23:17 - not give any error
23:19 - because whatever you will enter another
23:21 - other than these alphabet it should give
23:24 - you it will give you as a tease like
23:26 - hello then space should be as it is
23:28 - and one to three would be as it is and
23:30 - whatever the alphabet that will be
23:31 - converted into C vertex cyber text
23:34 - so for that you have to put a condition
23:36 - if condition C
23:38 - see first of all let's update this
23:41 - encryption so for care in plain text
23:46 - so we have to find out we have to apply
23:49 - this formula only if if the character
23:55 - in this list
23:57 - alphabet
23:59 - then only apply this formula
24:02 - so just put this this formula within
24:04 - this if
24:06 - right
24:08 - then for this if we'll put an else else
24:12 - as it is whatever they are one two three
24:14 - if here we have space and one two three
24:17 - so this one two three would be added as
24:19 - it is to the C for text so else
24:23 - this Cipher text becomes plus equal to
24:27 - we are going to add the character as it
24:30 - is to this Cipher text
24:32 - and same in decryption for carrying
24:35 - ciphertext you have to put if condition
24:38 - if
24:39 - the square
24:41 - in membership operator in
24:43 - alphabet
24:45 - in this playlist
24:47 - then only apply this formula
24:50 - okay
24:51 - else
24:54 - as it is you have to put so in plain
24:57 - text
24:58 - we are going to put that character
25:01 - whatever the character is it's either a
25:03 - space or one two three or anything any
25:05 - special symbol put as it is to the plain
25:07 - text
25:08 - and that's it let's run this
25:13 - see
25:16 - encrypt
25:18 - messages suppose hello one two three
25:22 - with at the rate with Jenny
25:34 - would be converted to mhuqb
25:37 - right if you want to continue yes
25:40 - and suppose shift key is now
25:46 - again I want to encrypt a message like
25:49 - hello one two three
25:51 - this time hello Jenny like this and
25:53 - shift key is 30 this point of time
25:56 - greater than 26.
25:59 - let's run this
26:00 - yeah it will convert lips one two three
26:03 - and I rrc because we have done mode 26
26:06 - so this will also work okay let's
26:10 - press
26:11 - no and exit or if you want to decrypt
26:13 - you can just enter decrypt and this text
26:16 - you can copy paste you can paste and
26:19 - shift keyword should be same 30 and it
26:21 - will give you hello one two three gen
26:24 - so that's it I guess now you got this is
26:28 - not so tough Caesar Cipher or the second
26:31 - case is rather than two
26:34 - you have to Define here two functions
26:36 - rather than definition two functions of
26:38 - definition you can just put all the
26:40 - things in one function also right
26:43 - because see
26:45 - all the lines are almost same this
26:49 - the formula the main formula is almost
26:52 - same but just here we have plus here we
26:55 - have minus
26:56 - so this you have to operate a little bit
26:59 - right
27:00 - now what you can do let me just show you
27:03 - this thing also just you have to update
27:06 - a little bit like you can put if it is a
27:08 - decryption then you can do what thing
27:11 - you can do what you can just do this
27:14 - shift key
27:17 - into
27:19 - minus 1.
27:21 - rather than this you can say shift key
27:24 - equal to shift key into minus 1.
27:26 - shift key equal to
27:29 - shift key
27:31 - into minus 1.
27:34 - because shift key is three
27:36 - in clip for encryption it would be same
27:38 - but
27:39 - if it is a decryption if
27:45 - decrypt if user has Type decrypt then
27:47 - just have to apply shift key is equal to
27:49 - shift key into minus one then it will
27:51 - become minus and then you can simply if
27:54 - you add
27:55 - you have to put this formula only
27:57 - position plus shift key but if
27:59 - decryption shift key becomes minus 3
28:01 - suppose three then minus 3 so it will
28:03 - become plus minus three so automatically
28:05 - it will be minus three
28:07 - so I have just give you the hint you
28:09 - just modify this thing Define just only
28:11 - one function within same function you
28:13 - have to put this type of condition
28:15 - if this what to do this variable is
28:19 - because you will pass
28:21 - what to do also you have to pass rather
28:24 - than just two
28:28 - here also you can pass like I have told
28:30 - you that keyword keyworded argument so
28:39 - this C for text is equal to text and
28:43 - shift key equal to shift rather than 2
28:46 - you have to pass three argument this
28:48 - what to do also
28:50 - right and for that you have to accept
28:53 - here what to do you can say the say the
28:55 - direction
28:57 - and if the direction is equal to is
28:58 - equal to decrypt just put this thing
29:01 - otherwise you have to put this formula
29:03 - only same
29:04 - and one more thing see alphabets we have
29:07 - taken only small letters we have taken
29:09 - so if you type a message in capital
29:11 - letter that also will give you error so
29:14 - what we can do
29:16 - whenever you will type the text whenever
29:18 - you will take input from the user at
29:20 - that time only convert that thing into
29:23 - lowercase letter using this function
29:26 - lower so whatever you will type this
29:29 - will convert into lower case so okay
29:31 - let's run this and I'll show you what
29:33 - output you will get there
29:35 - say first we will encrypt
29:39 - and
29:41 - Capital hello small hello like one two
29:44 - three he will be
29:45 - again
29:48 - shift key suppose this time seven
29:50 - so see both caps hello and small Hello
29:54 - both are converted into same ciphertext
29:57 - o and SSV right
29:59 - go to exit no
30:02 - uh sorry type node to exit yeah no means
30:05 - now we are out from the sector let's run
30:08 - this again and this time
30:13 - encrypt
30:15 - like hello hello one two three suppose
30:19 - we have 10 minutes
30:20 - letters
30:22 - shift K this time is 10.
30:27 - 3 same this symbol same and this is the
30:31 - so now I want to contain vs
30:34 - I want to decrypt so the message is this
30:37 - one so let's just copy paste to this
30:39 - thing
30:42 - this is the message and key should be
30:44 - same 10 sing hello hello one two three
30:47 - Jenny's lectures okay now no
30:50 - to exit so exactly right
30:54 - okay now first of all you have to try
30:56 - this out if you are not getting this
30:58 - because I don't think so we will you're
31:01 - going to have any problem because that's
31:02 - very simple
31:04 - but if you're still you are not getting
31:05 - this how to do this thing you can ask me
31:07 - in comment section
31:09 - okay
31:10 - now that's it for this video the Caesar
31:13 - Cipher project right now if you haven't
31:16 - get this thing it's okay just write down
31:19 - that this thing all the formula that you
31:22 - know the code on a paper piece of paper
31:25 - like this
31:27 - right and take a message like hello and
31:30 - manually just run that program manually
31:33 - then definitely you will get it right
31:35 - how it is the working of this program
31:39 - okay now in the next video we'll see you
31:41 - dictionaries one also next to it will go
31:43 - bye take care