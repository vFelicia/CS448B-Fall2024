00:00 - hi guys welcome back in this video I'm
00:02 - going to discuss with you how to insert
00:04 - data in AVL tree or you can say how to
00:06 - construct our AVL tree so the question
00:09 - is you're supposed to construct AVL tree
00:11 - by inserting the following data I mean
00:13 - these numbers from left to right fine
00:16 - okay now first of all what is their
00:20 - first number is 14 so first insert 14
00:24 - because the static maybe have empathy
00:25 - trees or just create a node and insert
00:27 - this 1414 we have inserted fine now find
00:34 - out the balance factor of 14 is 0 this
00:36 - is balanced this is the balanced tree
00:39 - fine next is 17 the waves 17 should be
00:43 - inserted see AVL tree is first of all it
00:46 - is BST and second is height of left
00:48 - subtree - ID of light right subtree
00:51 - would be either minus 1 0 or 1 the where
00:53 - 17 would be inserted 17 check karo 17 is
00:57 - greater than 14 to 17 would be inserted
01:01 - here only fine
01:03 - now check out the balance factor balance
01:05 - factor of the 17 is left - right height
01:08 - 0 height of left is 0 and height of 4
01:12 - writers 0 - 1 that is minus 1 so no need
01:17 - to balance it out it is already balanced
01:19 - now insert this 11 fine now where this
01:24 - 11 would be inserted 11 is less than 14
01:27 - the 11 would be inserted to the left of
01:30 - 14 still this tree is balanced because
01:34 - balance factor of 11 is zero balance
01:36 - factor of 17 is also zero balance factor
01:38 - of 40 knees height of left subtree - IRA
01:41 - Freid subtree that is 1 - 1 0
01:43 - fine see after inserting each and every
01:46 - node we are supposed to check the
01:47 - balance factor for each node hi next is
01:51 - 7 now where 7 would be inserted 7 check
01:55 - less than 14 less than 11 those 7 would
01:59 - be inserted here only now find out a
02:03 - balance factor balance factor of 7 is
02:05 - zero balance factor of this 11 is 1 - 0
02:09 - 1 that is also fine this balance factor
02:12 - of 17 is 0
02:13 - 14 is highteeeee kic open e 1 n 2 fine 2
02:18 - - 1 1 so that is also fine in order to
02:21 - balance it out next answered 53 53 is
02:24 - greater than 1453 greater than the 17
02:28 - the 53 would be inserted here only fine
02:32 - now also this is balanced zero balance
02:36 - vector zero balance vector balance
02:37 - factory zero minus 1 that is minus 1
02:40 - well inspector of this 1 is 1 minus 0
02:42 - that is 1 and balance factor of 14 is
02:44 - 1/2 height of left is my two height of
02:47 - right is 2 that is 0 right 0 1 and minus
02:51 - 1 okay now insert the next element next
02:54 - is 4 now where this 4 would be inserted
02:58 - four is less than 14 4 is less than 11 4
03:02 - is less than 7 though it would be
03:04 - inserted also to the left of 7 left side
03:09 - fine left off 7 this 4 would be inserted
03:13 - now check out the balance factor balance
03:15 - factor of this 4s 0 fine balance factor
03:20 - of 7 is 1 right sub-tree key height is 0
03:24 - 1 minus 0 that is one balance factor of
03:27 - 11 is what height of left subtree height
03:29 - of left subtree is 1 n 2 2 minus 0 that
03:34 - is 2 fine and this is not either minus 1
03:41 - 0 or 1 so this node is a you can say
03:45 - critical node because of this node this
03:47 - trees and but unbalanced so before
03:51 - inserting next numbers in this tree you
03:54 - have to balance it out first of all I
03:56 - know
03:57 - okay now how to balance out this tree
04:00 - see find out why this tree is unbalanced
04:04 - this tree is unbalanced because because
04:07 - of this left insertion and again left
04:11 - insertion fine left and again left so
04:16 - you can say either you can say this is
04:17 - left left rotation ll rotation fine and
04:21 - how to solve this
04:22 - left left rotation making out there only
04:25 - one right route
04:26 - datian right Muslim like this right
04:31 - rotation fine and how that right
04:33 - rotation would be there this 11 would be
04:38 - pulled down and 707 would go up or
04:42 - simple the shortcut is see these are we
04:48 - are working in on these three elements
04:51 - 11 7 and for the median out of these
04:55 - element the median element would always
04:58 - be the root and the remaining element
05:01 - would be children of that element out of
05:03 - 4 7 and 11 but what is the median
05:07 - element that is 7 only 7 would be the
05:11 - root ARA PA rule according a are
05:13 - accepted in the left left rotation
05:15 - though half al or L so in that case one
05:18 - right rotation would be there fine the
05:22 - tree would be 14 would be as a tease 17
05:27 - would be as a tease
05:29 - 53 would be as a tease now what is this
05:33 - right rotation pull out this or you can
05:36 - say pull down this 11 to the right side
05:40 - right rotation or median of this one is
05:42 - 7 so 7 would be 7 would go up that would
05:47 - become the root find 11 and 4 that would
05:50 - be the children of this 7 4 would be to
05:55 - the left of 7 and 11 would be to the
05:58 - right of 7 because it is BST to greater
06:02 - element would be the tri in the right
06:04 - side and less element would be the left
06:07 - side fine now check out the balance
06:09 - vector 0 0 1 minus 1 0 0 minus 1 1 2 1 2
06:15 - 2 minus 2 0 this is balanced 3 now next
06:20 - element to be inserted is this 13 where
06:23 - 13 needs to be inserted 13 is less than
06:26 - 14 13 is greater than 7 third go to the
06:29 - right part in 13 a is greater than
06:31 - eleventh we would go again to the right
06:35 - part that is here threating would be
06:37 - inserted
06:39 - now find out the balance factor of each
06:41 - and every node balance factor of 13 is
06:44 - zero balance factor of 11 is 0-1 that is
06:47 - -1 balance factor of 4 is zero balance
06:51 - factor of 7 is height of left subtree is
06:53 - 1 - site of right subtrees 1 2 that is
06:57 - minus 1 0 here we have minus 1 C 14 left
07:03 - of a sorry height of left subtree is how
07:08 - much one say you can't say 1 & 2 that is
07:12 - the height because you are supposed to
07:14 - go to the leaf node Kooskia height
07:17 - thickening up so you have say like a 1
07:19 - yeah how's he like a heart to and from
07:22 - the snow to the leaf node 3 1 2 & 3 3
07:26 - minus 1 to 1 so obviously this tree is
07:32 - balanced okay now next s you have to
07:36 - insert this to L now where this 12 would
07:38 - be inserted this 2l is obviously this
07:41 - less than 14 and greater than 7 and
07:44 - greater than 11 but less than this so
07:48 - here the 12 will be inserted now find
07:52 - out the wine inspector balance factor of
07:54 - the balance factor of this 12 is 0 this
07:58 - 1 is 1 minus 0 that is 1 this one is
08:01 - height of left subtree is there any
08:03 - element to the left of 11 no so 0 minus
08:07 - height of right subtrees 1 & 2 that is
08:12 - minus 2 fine and that is not possible in
08:15 - AVL tree fine so we will work on this
08:20 - part this is our critical node or you
08:22 - can see the unbalanced node and with
08:24 - this node as unbalanced because of first
08:27 - of all this right insertion and then
08:30 - left insertion so here it is right left
08:35 - rotation and how to solve this right
08:38 - left rotation first right rotation -
08:41 - rotation would be there first right
08:42 - rotation and then left rotation okay see
08:47 - first right rotation
08:51 - how the tree would be constructed 14
08:57 - here we have seven here we have 17 here
09:02 - we have 53 here we have four now first
09:07 - of all right rotation take a right
09:10 - rotation is Takeshi of the right
09:11 - rotation would be on this part because
09:13 - we will make it right
09:15 - a right rotation okay so this 13 would
09:18 - be pulley down and 12 will go up seven
09:23 - here we have 11 now here this 12 will go
09:27 - up and 13 would go and there only fine
09:32 - so now this becomes right and right are
09:39 - our rotation
09:40 - still this is unbalanced because the
09:42 - balance factor of 11 is minus 2 still it
09:46 - is unbalanced and it is having minus 1
09:48 - it is having 0 now next part is first is
09:51 - right rotation next is left rotation to
09:54 - have near R&R the one left rotation
09:58 - would be there and the tree would be 14
10:06 - 17:53
10:07 - here we have 7 here we have force and do
10:12 - this left rotation left rotation means
10:14 - pull down this 11 the side left side
10:18 - then 12 would go up 12 this side left
10:23 - side of 12 is 11 and right side is 13
10:27 - fine
10:28 - so this is a balanced string or simple
10:32 - trick is see this is right or left
10:35 - rotation always you have to take care
10:38 - the median element of these three would
10:41 - be the root and remaining two elements
10:45 - would be the children see you can check
10:47 - out out of eleven twelve and thirteen
10:49 - which one is the middle element or the
10:51 - median element out of eleven twelve and
10:54 - thirteen or baselet well now see after
10:57 - two rotation right and left
10:59 - we got what to L is the root and eleven
11:02 - and thirteen would be the children so it
11:04 - is BST
11:05 - so you can easily do this here to the
11:09 - left of 1211 would be there and to the
11:11 - right of 2013 would be there yes this is
11:14 - the simple trick find out the median
11:16 - element and that would be the root okay
11:19 - now this is balanced tree you can check
11:21 - out by finding the balance factor of
11:24 - each and every node fine now next next
11:28 - you how to insert is this 8 okay now
11:33 - where this 8 would be inserted left over
11:38 - 14 it is greater than 7 go to the right
11:43 - part it is less than 12 or to the left
11:45 - part it is less than this 11 go to the
11:48 - left part this is 8 pi now see find out
11:56 - the balance vector after every insertion
11:58 - you're supposed to find out the balance
12:00 - vector balance factor of this 8 is zero
12:04 - balance spectro this one is 1-0 that is
12:09 - 1/12 Kelley a 1/2 2 minus 1 that is 1
12:13 - here we have zero and here we have 1
12:16 - minus 1 2 & 3 see balance factor of 7 is
12:19 - height of left subtree is 1 minus height
12:22 - of right subtree of the 7 is 1 2 & 3
12:27 - right 1 minus 3 that is minus 2 so you
12:32 - can take a 1 and 2 you can write height
12:35 - 1 minus 2 you are supposed to check the
12:37 - longest height go to the leaf the 1 2 &
12:42 - 3 that is minus 2 all right so this 7 is
12:46 - now a critical node okay now why this
12:52 - minus 2 y the 7 is unbalanced find out
12:55 - the reason because because of this first
12:59 - of all this right insertion and then
13:02 - this left insertion because of this
13:07 - right and left the left this node is
13:10 - unbalanced so you will work on this part
13:16 - seven - Ln 11 fine say right and left
13:21 - right and left - rotation would be their
13:23 - first right rotation then left rotation
13:25 - okay we have discussed in detail with
13:29 - the help of this case now second the
13:32 - shortcut is what just find out the
13:35 - median element out of seven twelve and
13:39 - eleven what is the median element seven
13:42 - eleven or twelve c7 K by the eleven I
13:46 - can then to Eliza became BST in sorted
13:49 - order then what is the median element
13:51 - amid an element is eleven okay so eleven
13:55 - would be the root and seven and 12 would
13:58 - be children of this eleven okay
14:02 - now the three would be something like
14:05 - this
14:12 - see after this the tree would be 40 1753
14:20 - see that part is unaffected part fine
14:23 - now out of this 11 is median so 11 would
14:27 - be to the go to the root here 11 would
14:32 - be there fine and 7 and to a large
14:37 - children of this 11th oh seven eight
14:40 - children off 11th and seven obviously
14:42 - would go to the left part because seven
14:43 - is less than 11 and 12 would go to the
14:46 - right part with us 2 L is greater than
14:47 - 11 now where this four would go for will
14:52 - go to the left part of 7c left part of 7
14:55 - schedule right for now where this 13
15:00 - would go 13 is to the right of 2 L say
15:03 - check out industry because we are
15:05 - creating this from this only we're
15:07 - balancing out the string so 13 is to the
15:10 - right of 2 n fine and where this 8 would
15:15 - go now check out 8 is to the left of 11
15:19 - in this tree so basically in this tree
15:21 - the 8 would be to the left of 11 right
15:24 - now go to the 11 node having key 11 now
15:29 - we're to the left of 11 but you can't
15:32 - insert 8 at this place because here is 7
15:35 - only so it would go to the right of 7
15:38 - why so because 8 is greater than 7 and
15:41 - this is BST so you know the rule very
15:44 - well because the element greater than
15:46 - that node will go to the right of that
15:48 - mode fine so this is a BST now and this
15:51 - is balanced you can check out this by
15:54 - checking out the balance factor of each
15:56 - and every node fine ok now next inserted
16:00 - element is what 60 where the 60 would be
16:04 - inserted 60 always check out from the
16:08 - root greater than 14 and greater than 17
16:11 - greater than 50 53 the 60 would be
16:14 - inserted here only fine now find out the
16:18 - balance vector balance factor of 60 is
16:21 - zero balance factor of 53
16:25 - zero minus 1 that is minus 117 is zero
16:28 - minus 2 that is minus 2 here we have
16:32 - some problem because it is not minus 1
16:34 - or 0 not 1 okay now and balance factor
16:40 - of each and every is 0 0 0 here we have
16:43 - 0 minus 1 minus 1 here we have 1 minus 1
16:45 - 0 here we have 2 minus 2 0 I know you do
16:50 - not find out the benefit of this one
16:51 - because we have this node unbalanced so
16:54 - you're supposed to balance it out first
16:56 - of all so you will work on this part and
17:00 - the 17 is unbalanced because first of
17:04 - all this right insertion again right
17:07 - insertion that is our our rotation a
17:09 - rotation make out there 1 left rotation
17:13 - would be there fine like this 17 would
17:16 - be pulled down 53 would go or you can
17:20 - say the median element find out the
17:22 - median element out of these three
17:24 - elements out of 1753 and 60 what is the
17:27 - median element or middle element 53 53
17:30 - would be the root and 17 and 60 would be
17:32 - children of this 50 53 now then over the
17:38 - tree would be C will draw this tree here
17:43 - really fine this 14 the left subtree
17:51 - would be unaffected 11 7 here we have 4
17:56 - here we have 8 here we have 12 here you
18:00 - have 13 now the middle element is 53 53
18:04 - would go up that is 53 becomes the root
18:08 - 17 and 60 would be the children 17 is
18:11 - less than 53 so it would go to the left
18:13 - part 60s would go to the right part okay
18:19 - now the you can check out the balance
18:22 - web profusion of your node industries
18:23 - balanced now insert 19 where 19 would be
18:27 - inserted greater than 14 less than 53
18:31 - greater than 17 letters here 19 would be
18:35 - inserted fine
18:37 - you can find out the balance factor of
18:40 - each and every node and still this tree
18:42 - is balanced fine okay now 16 would be
18:49 - inserted where 16 would be inserted 16
18:52 - would be inserted to the left of 17 here
18:56 - 16 would be inserted still this trace is
19:00 - balanced you can find out the balance
19:02 - vector 0 0 1 minus 1 0 1 2 2 minus 1 1
19:08 - balanced 0 0 0 0 2 minus 2 0 here we
19:14 - have 0 here we have 0 minus 1 1 here we
19:16 - have 1 2 3 3 minus 1 2 3 3 minus 3 is 0
19:23 - ok now insert this 20/20 would be
19:28 - inserted here only to the right of 19
19:34 - now check out the balanced vector the
19:36 - balanced factor of 20 is 0 balanced
19:40 - factor of 19 is 0 minus 1 that is minus
19:42 - 1 16 is 0 17 1 minus 2 that is minus
19:47 - sorry 1 minus 2 that is minus 1 ok and
19:51 - balanced factor of 53 is what balanced
19:54 - factor of 53 is height of left subtree C
19:59 - 1 2 but 3 also go to the last level
20:04 - after 16 C 16 is you can see it this
20:09 - place only 16 so height of left subtree
20:12 - is 1 2 and this 3 the longest hide the
20:18 - longest distance from that node to de
20:20 - you know that leaf node you are supposed
20:23 - to go 3 minus 1 that is minus 2 so this
20:28 - 53 is our critical node or you can say
20:31 - the unbalanced node why this tree is
20:34 - unbanned why this sorry node is
20:36 - unbalanced because of left insertion and
20:40 - then right insertion okay you're
20:46 - supposed to find out the reason though
20:48 - here with rotation would be there left
20:50 - and then
20:51 - right so you would work on this part
20:54 - only on these three in 150 37919
21:01 - okay now in left/right rotation how to
21:05 - solve this out we are supposed to do two
21:08 - rotation first is left then right okay
21:12 - left rotation on these two elements
21:15 - take a left rotation means 17 would go
21:19 - below and 19 would go up 19 a happy I
21:21 - got 17 I got then it would become left
21:24 - and left
21:26 - I'll draw see 14 left part is as it is
21:34 - okay
21:35 - 7 8 12 and 13 first see we have left
21:43 - right then first rotation would be left
21:44 - rotation left rotation because you're
21:46 - supposed to make it these type of you
21:50 - know that shape to the either ll
21:52 - rotation or RR rotation so here we can
21:55 - make it ll rotation because barely have
21:57 - any path starting here L this coal left
22:00 - banana clearly we will pull this this 17
22:03 - below or 19 would go up then 53:19 would
22:08 - go up 17 would go below 17 k left make
22:12 - it happen a pass 16 right Oh 53 we have
22:16 - 60 and to the right of this 20s to the
22:19 - right of 19 here we have 20 it is
22:22 - unbalanced still see this is having 53
22:29 - is having the balance factor is - sorry
22:32 - 1 2 3 3 minus 1 that is 2 here we have
22:40 - sorry - okay now 17 this would have 0
22:46 - this would have 1 this would have 1 - 2
22:48 - - 1 1 now it becomes L L rotation left
22:57 - left
22:58 - ll rotation see Ln fine
23:01 - ll rotation gases all what the a you
23:03 - will do one right rotation
23:05 - right rotation upkeep in Tonopah Casio V
23:07 - you will pull up pull this 53 down and
23:11 - 19 would go then the tree would be 14 11
23:17 - 7 4 8 here we have 2 else here we have
23:23 - 13 now do the right rotation 53 would go
23:28 - down in 19min go up so 19 would become
23:32 - the root to the right of 19 we will have
23:36 - 53 and 60 would be to the right of 53
23:40 - fine and 19k left make a hog aapke 17 17
23:45 - key left maybe have 16 where this 20
23:49 - would go check out 20 is to the right of
23:54 - 19 now check out right of 19 you can't
23:58 - answer 20 here so 20 would be inserted
24:00 - to the left of 53 because 20 is less
24:05 - than 53 ok now this would be our tree or
24:12 - fine simply you can use the shortcut
24:15 - left and right rotation you are supposed
24:17 - to balance out this part find out the
24:21 - median element of these three elements -
24:24 - 17 1953 a median element would be C
24:29 - don't check out you pirelli 53 here then
24:31 - 17 then 19 the median median element
24:34 - would be 17 oh it is BS Tina so try to
24:37 - write down that data in sorted order
24:39 - first 17 then 19 then 53 now find out
24:44 - the median element median element is 19
24:47 - 19 would become the root okay 17 and 53
24:52 - would become the children of that mode
24:54 - how many a same thing we have done 19 is
24:58 - the root fine sorry 19 is the root and
25:02 - 70 and 53 are the children of this 90
25:07 - fine here see if you don't go this long
25:11 - processor with this left/right means to
25:13 - rotation first left rotation then right
25:15 - rotation then simply find out the median
25:17 - element
25:19 - then median element would become the
25:21 - root and remaining two elements would
25:23 - become the the left hand right child of
25:26 - that note fine that is the shortcut here
25:30 - nineteen is median element seventeen and
25:33 - fifty-three are child of children of
25:36 - this nineteen and then find out the
25:38 - proper place for though for this
25:39 - remaining element sixteen and twenty see
25:43 - somewhere you're supposed to you know
25:45 - can you have to keep in mind that this
25:47 - should be a BST so like that they see
25:51 - twenty if you want to insert 20 then 20
25:53 - is to the right of this nineteen but in
25:56 - the right of this 1953 is there so it's
25:58 - not like you can insert twenty here or
26:01 - maybe twenty to the right of this
26:02 - nineteen find out the proper place for
26:04 - nine didn't go to the right of nineteen
26:06 - and then find out the proper place is to
26:08 - integrate proper places to the left of
26:10 - fifty-three because this is less than
26:11 - fifty three okay so this is how the data
26:16 - is to be inserted in AVL tree in the
26:18 - next video I'll discuss with you how to
26:19 - delete data from a via three till then
26:23 - bye-bye take it