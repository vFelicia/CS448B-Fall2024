00:00 - in the series of learning programming in
00:02 - c we have discussed four Loop and Y Loop
00:04 - in C in detail in my previous videos now
00:06 - we are left with one Loop that is doy
00:08 - Loop so that Loop I'll be discussing in
00:10 - this video everything about doy Loop the
00:12 - synx of doy Loop working of doy loop
00:14 - with the help of a flowchart as well as
00:16 - we will see the working of d loop with
00:18 - the help of a program and we'll also see
00:20 - some differences between while loop and
00:22 - d loop right so now let us discuss about
00:24 - do Loop it is almost same as while loop
00:28 - but we will see what is the difference
00:29 - between between while and do while see
00:31 - first of all as you know while loop and
00:34 - for Loop those Loop are entry controlled
00:36 - Loop right and this is what exit
00:39 - controlled Loop now what does this mean
00:40 - exit controlled loop I have already
00:42 - discussed whenever I was discussing in
00:45 - that video introduction to Loops I'll
00:46 - put that video in the side button you
00:47 - can check out there so this is exit
00:49 - controlled Loop while we are exiting
00:52 - from the from the loop at that time
00:54 - condition would be checked right see the
00:56 - syntax of uh this do y Loop then you
00:58 - will get it better first of all you WR
01:00 - write the do this is a keyword after
01:02 - that in curly braces this is what body
01:04 - of the this doy Loop so here we will
01:07 - write that uh statement some statements
01:10 - which uh you want to be executed within
01:12 - this Loop right so this is what
01:14 - statement block right and after closing
01:19 - of the curly braces after that we will
01:20 - write while and here we will write some
01:25 - condition and after this we will put a
01:28 - semicolon this you need to take care in
01:30 - while when you write while condition we
01:33 - don't put semicolon right but here we
01:36 - put semicolon after writing the
01:38 - condition it's not compulsory that you
01:39 - have to write after this curly braces
01:41 - only you can write the while condition
01:43 - in this next line also that is also fine
01:45 - but this you need to take care you have
01:46 - to put semicolon after this otherwise it
01:48 - will give you syntax error right now the
01:51 - initialization would also be done
01:52 - because here we are seeing only the
01:54 - condition but I have told you three
01:55 - factors are there with with any Loop
01:58 - initialization uh condition termination
02:00 - condition third one is increment or
02:01 - decrement or you can say update or
02:02 - modify expression so here we are seeing
02:04 - only condition right so what you can do
02:07 - you can also write something like this
02:09 - before this we do
02:12 - initialization before starting of this
02:14 - doy Loop then do here we write some
02:16 - statements to be executed statement one
02:20 - statement two like this statement n here
02:22 - we write within this body of the loop we
02:26 - write that increment or decrement or you
02:29 - can mod modify your update expression
02:32 - after that we do while we write what
02:36 - while condition and just terminate it
02:39 - you do something like this right or you
02:41 - can do this initialization within this
02:44 - body of the loop also that is also fine
02:45 - you can try it out right I'm just uh
02:48 - telling you first of all the general
02:50 - syntax of writing do Loop right so now
02:53 - as you can see what is the working of
02:55 - this two y Loop first of all the
02:57 - statement block would be executed
02:59 - because we are not going to check any
03:01 - condition without checking the condition
03:03 - control will enter into this block
03:06 - whatever statements you're writing here
03:08 - that would be executed after that
03:10 - condition would be checked if the
03:11 - condition is true again it will enter
03:15 - into this Loop the statement would be
03:17 - executed again condition would be
03:19 - checked right after doing some modify or
03:22 - after you know updating that variable
03:24 - after doing some increment or decrement
03:26 - again condition would be checked and if
03:28 - the condition is false then control will
03:30 - go out of the slope right so if you draw
03:34 - a flowchart how you can do first of all
03:37 - statements should be
03:40 - executed statement
03:43 - block right now after that what uh it
03:48 - will do modify or update or you can say
03:52 - some increment or
03:54 - decrement this would be according to the
03:56 - requirement of the program right suppose
03:59 - if you want to print number from 1 to
04:01 - 100 obviously increment if you want to
04:03 - print number from 100 to 1 then it would
04:05 - be decrement right after that we will
04:08 - check
04:10 - condition if the condition is
04:13 - true there can be two cases true or
04:15 - false
04:17 - again control will go to here again the
04:20 - statement block statement will be
04:21 - executed again update or modify
04:23 - increment or decrement again condition
04:25 - would be checked this would be in Loop
04:27 - if the condition is
04:28 - false
04:30 - that in that case out of this Loop
04:32 - whatever condition you write here after
04:34 - the loop that would be executed right so
04:36 - this is what simple working of this doy
04:38 - loop I hope you you got the working of
04:40 - this doy Loop so let us discuss it with
04:42 - the help of a program now now see after
04:44 - looking at this snx and this flowchart
04:47 - what you can say about doy Loop that the
04:50 - body of the doy Loop will be executed at
04:54 - least once without checking any
04:57 - condition right in any case it would be
04:59 - executed at least once irrespective of
05:02 - the condition if the condition is false
05:04 - then also this would be executed at
05:07 - least once after that because it is what
05:09 - exit control Loop we are not checking
05:11 - the condition while entering into this
05:13 - Loop without any condition we are
05:15 - entering into this Loop right so that
05:17 - would be executed at least once then we
05:20 - check while exiting from the loop we are
05:22 - checking the condition now the condition
05:23 - is false then it will not again enter
05:25 - this Loop in this body of the loop it
05:28 - will exit but at least least one it will
05:30 - execute right now let us see uh with the
05:34 - help of a program why I'm saying this
05:36 - the body of the slop will be executed at
05:38 - least once what output you will get when
05:40 - you write a program see now see here I'm
05:44 - I'm taking a variable I right and here
05:47 - I'm initializing it with zero now see in
05:50 - the body of the loop do control will
05:52 - enter into here because there's no
05:54 - condition here print if Jenny so on the
05:56 - output screen Jenny would be printed
05:58 - once now check check the condition while
06:00 - I greater than 0 means I 0 0 is not
06:04 - greater than Z so condition is false now
06:06 - it will not enter again it will go out
06:08 - of the loop so now it will print out of
06:13 - loop it will not print in the second
06:15 - line if you write here like something
06:16 - like this slash and then it will print
06:18 - into second line right otherwise it will
06:19 - print jny out of loop right see let me
06:22 - write this with the help of Y Loop same
06:24 - program same I'm initializing the side
06:26 - with the zero now in while we are
06:28 - checking condition before before
06:29 - entering into this Loop while I greater
06:31 - than Z is I greater than Z no so it will
06:35 - not execute this body of the loop it
06:38 - will go out of this Loop out of this
06:40 - Loop whatever I have written out of loop
06:42 - so what output we will get here out of
06:44 - loop only here you will get Jenny and
06:47 - out of loop so now we are getting the
06:49 - difference right that is why it is
06:51 - called entry control Loop it is what
06:53 - exit control Loop here the conditions
06:56 - here whatever you will written you will
06:57 - write here within this body of of the
06:59 - loop that would be executed at least
07:01 - once irrespective of the condition
07:03 - whether it's true or false right I hope
07:05 - you are getting my point now second
07:06 - difference is what here we write what
07:08 - semicolon after this while um statement
07:11 - here we are not writing any semicolon
07:13 - here if you write semicolon it will give
07:15 - you error here if you not write
07:17 - semicolon then it will give you error
07:19 - right so when you will use this y doy
07:21 - Loop when you want to execute these
07:25 - statements the body of the loop at least
07:28 - once means when you want to execute the
07:30 - body of the loop without checking the
07:32 - condition at least once then we use in
07:35 - those scenarios in those cases we use
07:37 - dowi Loop but if you want to test the
07:39 - condition first and after that you want
07:41 - the body of the loop would be executed
07:43 - then you will use either for Loop or
07:45 - while loop according to your convenience
07:47 - right so now this is the difference
07:49 - between while and does fine so now see
07:52 - here if I do I
07:55 - ++ now what output you will get here
07:58 - tell me in the comment box do I Loop I'm
08:00 - putting here I ++ I is zero I'm printing
08:02 - Jenny then how many times Jenny would be
08:04 - printed whether it would be infinite
08:06 - Loop or tell me it is finite Loop then
08:09 - tell me how many times the JY would be
08:10 - printed right so this is now your
08:13 - assignment so now that's it for this
08:15 - video now I'll see you in the next video
08:16 - till then bye-bye take
08:21 - care