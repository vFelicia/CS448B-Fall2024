00:00 - in the series of learning programming in
00:01 - c we are discussing arrays in C we have
00:03 - discussed all the basics about arrays
00:05 - like what is array Declaration of array
00:07 - initialization of array memory
00:09 - representation of array elements as well
00:10 - as how to access array elements so I
00:13 - have just written down all the points in
00:16 - brief about arrays here you can take a
00:18 - screenshot or you can it's like a notes
00:20 - for you these contains you can say these
00:22 - are character characteristics of arrays
00:24 - or you can say some here we have some
00:26 - advantages of array as well as drawbacks
00:29 - of using arrays right like I I think no
00:33 - need to uh explain all the points here
00:36 - because these are very simple I have
00:38 - explained clearly all the points from
00:41 - here only you can find out the
00:43 - advantages and drawbacks like advantages
00:46 - is what if you want to store more than
00:48 - one data item then you can use arrays
00:50 - right it's simple to use arrays but Drac
00:53 - is what it contains only it can store
00:56 - only same type of data item like if
00:58 - integer is array then all the data items
01:00 - should be of integer type if character
01:02 - array is of character type then all the
01:04 - data items can be of character type all
01:06 - the elements are stored in continuous
01:08 - memory allocation Intex should be
01:09 - started from zero one drawback is also
01:12 - there like what if size is declared you
01:14 - have declared the size of the then you
01:16 - cannot change it so it is having fixed
01:19 - size problem accessing of array of
01:21 - element is faster using index of array
01:25 - how we access just write down the name
01:27 - of the array and here in bracket index
01:30 - like index always start from zero so
01:31 - first element if you want to access then
01:34 - a of zero so it is faster Random Access
01:37 - is possible directly you can access any
01:39 - element of the array in constant time so
01:40 - this is what advantage is of array here
01:43 - it can store data in multi-dimensional
01:45 - form in 2D array and multi-dimensional
01:47 - array 3D array also right so this is
01:50 - Advantage but inserting and deleting of
01:53 - data items in a in an array is tough
01:55 - It's coly right how that we will discuss
01:58 - with the help of program this is you can
02:00 - say it's a drawback of array here the
02:02 - one point is what no bound checking in
02:05 - arrays in C now what does this mean this
02:09 - is what it's a drawback suppose you have
02:11 - declared a array of size 10 so index
02:15 - would be from 0 to 9 but if you want to
02:19 - access a of 10 then it should give error
02:23 - right because there is no index of 10
02:26 - but it will give garbage value so no
02:29 - bound check checking bound boundary is
02:31 - what 0 to 9 but it is not checking the
02:33 - boundary in C it it will not give any
02:35 - error it will give what any garbage pin
02:39 - we will see practical also of this point
02:42 - no bound checking in see so I guess this
02:45 - is clear now we will discuss one or two
02:48 - programs on arrays so now let us discuss
02:50 - some problems on arrays first of all
02:51 - I'll discuss the logic the problem here
02:53 - on the Whiteboard then I'll show you on
02:55 - my laptop right first we will discuss a
02:58 - simple problem like how to read data in
03:01 - an array at run time although we have
03:03 - discussed it but next thing is how to
03:05 - print all the elements of array first of
03:07 - all how to print simply print then we
03:10 - will discuss how to print in reverse
03:12 - order and then we will see some complex
03:15 - problem so
03:19 - see so I have already discussed like how
03:22 - to uh initialize are at run time I guess
03:26 - you can already write down the header
03:27 - files and all I'm not writing the
03:29 - complete program I'm just going to start
03:31 - from the main function right and here
03:34 - what I'm declaring array simple a of
03:39 - size five I'm not initializing this at
03:42 - compile time you can also initialize it
03:44 - at compile time I'll take input from the
03:46 - user right so now for that what one for
03:50 - Loop you will use I is equal to 0 and I
03:55 - less than number of elements are five
03:58 - and I ++ before using this I this is
04:01 - what of type integer so we will take
04:04 - what a variable I here we will declare a
04:07 - variable I here and how to take input
04:10 - using scanf how to read data using scanf
04:13 - function we know percentage D address of
04:16 - what name of the array is a
04:20 - and on I location we want to store means
04:23 - I would be from 0 to five so all the
04:25 - five location in the all the five
04:26 - location we will store using this thing
04:29 - right now see uh before printing just
04:33 - I'm writing what when this would be
04:36 - compiled then an array how many bytes
04:40 - would be
04:41 - allocated if you take two bytes then 10
04:44 - bytes would be allocated the size of
04:46 - integer if you take four bytes and some
04:47 - compiler it takes four bytes then 20
04:50 - bytes should be allocated right so now
04:52 - suppose address is 100 I'm taking four
04:54 - bytes 104 then 8 12 and for this 16
05:00 - right and index would be from 0 1 2 3
05:04 - and 4 and if you we haven't initialized
05:07 - it then it is containing some garbage
05:09 - value if you print now then some garbage
05:13 - value would be printed right and one
05:16 - variable I suppose the this memory
05:20 - address for this is 2,000 right and this
05:24 - also having some garbage value right now
05:26 - right now when compiler will come here
05:29 - for I is equal to 0 I would be
05:30 - initialized with zero condition true
05:33 - enter scan F percentage D where the data
05:36 - would be stored address of a of I I
05:39 - value is zero first of all so address of
05:41 - a of I is what
05:43 - 100 right this address Base address is
05:46 - 100 and where it is going to be stored
05:49 - this a is what it will act as a internal
05:52 - pointer it is going to store 100 here
05:55 - and the address of this a also some
05:58 - address like you can uh take th000 any
06:01 - address address would be in hexadecimal
06:03 - form but just to make you understand I'm
06:05 - taking simple these addresses right and
06:08 - this is what you can say pointer to the
06:11 - first variable of the sing right address
06:15 - of a ofi a of i z a of z address is 100
06:18 - at this address First Data will be
06:21 - stored whatever you will enter so that
06:23 - would be stored suppose I have entered
06:25 - 15 now I ++ now I becomes what 1
06:30 - condition true again enter address of a
06:32 - of now I is 1 a of 1 address is what
06:35 - 104 right so the next data would be
06:38 - stored here suppose I have entered here
06:41 - 16 right so I hope you can continue this
06:44 - process now I ++ now I becomes two again
06:46 - condition true a of two address of a of
06:48 - two this index now data would be stored
06:51 - here and suppose I have entered minus1 0
06:53 - and uh 15
06:55 - again like this we have entered once I
06:58 - value becomes what
07:00 - five means I five less than five no it
07:04 - will exit from this four Loop and will
07:06 - come here now I'm going to print the S
07:09 - how you will print we will take another
07:11 - four Loop right you can take any Loop
07:15 - while do I again I would be 0 to I less
07:18 - than I less than 5 if you write I less
07:22 - than equal to then you should write four
07:24 - right from 0 to 4 and I
07:28 - ++ now print all the values we use what
07:31 - print a
07:32 - function for reading we use scan a
07:35 - function data is of type integer so
07:39 - percentage uh d and a of
07:44 - I simply you have to write this thing
07:47 - right now again one for Loop now I would
07:50 - be again initialized with what
07:53 - zero condition true enter print F
07:56 - percentage D which type of value integer
07:58 - value a of I a of
08:02 - Z right now A of z address how address
08:06 - would be calculated how you can fetch in
08:08 - the previous video I have told you the
08:09 - formula what Base address plus what this
08:14 - um index index means I we are taking I
08:18 - into size of data type data type is
08:22 - integer so size of in so now here Base
08:25 - address is what Base address is stored
08:27 - in a base address is
08:29 - what uh that 100 plus here I value is
08:33 - first 0 into size of integer is four
08:36 - means address would be calculated 100
08:40 - 100 so a of I means 100 here from here
08:45 - the value would be first and the the
08:47 - data 15 would be printed on your
08:50 - screen I hope you got it now I ++ 1
08:54 - again condition true enter here now a of
08:58 - 1 this is how we access the element
09:01 - right now how this address a of one
09:03 - address would be calculated Base address
09:05 - is this one into uh + 1 into 4 that is
09:08 - 104 that is 104 from here data would be
09:12 - fetched accessed that is 16 so now 16
09:16 - would be printed but if you write here
09:20 - sln then the data would be printed in
09:22 - next line otherwise data would be
09:23 - printed in same line so you will not get
09:27 - I know it would be very uh Clumsy type
09:28 - of thing so better to use slash and new
09:31 - line 16 now I ++ I becomes for two I
09:35 - guess now you can repeat the process and
09:37 - this is how all the data would be first
09:40 - right and once I value becomes what
09:43 - three then four once it becomes five
09:45 - condition not true exit from the loop
09:48 - and that's it end of the
09:50 - program right so this is how you can
09:53 - print simply the elements of aray now
09:56 - I'll show you the output also on my
09:57 - screen but if you want to print print in
09:59 - reverse order from here 15 0 -1 16 15
10:06 - then how you will print first of all
10:08 - think the logic what you want in that
10:11 - case directly I want to print first of
10:13 - all this
10:14 - data then this then this then this then
10:17 - this so now at first what kind of logic
10:19 - come to your mind scanf this for Loop
10:22 - would be same because it is for reading
10:24 - purpose you have to change this for Loop
10:26 - only this is for printing purpose right
10:29 - so now rather than starting the index
10:31 - from zero first of all you want to go to
10:34 - which index the last
10:36 - one right so directly start the index
10:40 - from what I is equal to here
10:46 - 4 if you start from four then it should
10:49 - be next three then 2 then 1 then zero so
10:52 - here should be I minus
10:54 - minus Simple Thing condition is what
10:59 - you will move this side till I becomes
11:03 - zero if I becomes minus one you have to
11:06 - stop so the condition should be what I
11:11 - greater
11:12 - than equal to
11:16 - 0 and simply print AI That's it now see
11:20 - the working of this thing first of all
11:27 - here
11:31 - this I value would be four in this
11:33 - variable four would be stored is this
11:35 - condition true four greater than equal
11:37 - to Z yes condition true enter into this
11:39 - room print F percentage d a of I a of I
11:43 - is 4 directly a of4 you have to access
11:47 - so now how Base address would be
11:49 - calculated sorry the address A4 would be
11:51 - calculated Base address is 100 plus
11:54 - index is 4 into size of in is 4 means 1
11:58 - Z
11:59 - uh sorry 11 6 directly you can access
12:03 - this 116 and what value would be printed
12:07 - 15 IUS minus sorry I becomes three now
12:12 - right so condition true again enter here
12:15 - a of I a of three again address would be
12:17 - calculated I becomes three address would
12:20 - be
12:21 - 112 access this thing zero would be
12:24 - printed I minus minus I hope you got my
12:27 - point now once I becomes what then two
12:30 - then one then zero would we printed the
12:32 - one once I becomes minus one condition
12:35 - is not true exit from the loop this is
12:38 - how you can print in reverse order so
12:41 - now let me show you the output of these
12:42 - two programs on my screen so now let me
12:45 - create one more file for
12:47 - you I'm writing
12:49 - what read
12:51 - array okay dot
12:55 - C first of
12:57 - all header file we will write
13:01 - then main function and then we declare
13:05 - array array name is I'm taking only
13:08 - a as well as one variable Loop variable
13:11 - I right and one for Loop what to enter
13:17 - first of all to read the array right
13:19 - less than five and I
13:21 - ++ so for reading purpose we we will use
13:25 - what scanf and
13:29 - percentage D I hope you know the syntax
13:31 - address of a of I
13:36 - right and then for printing purpose
13:39 - again we will use one more full loop and
13:42 - I is equal to 0 till I less then five
13:46 - and I
13:48 - ++ right and for print F we use which
13:52 - function print F so I I'll write array
13:57 - element
14:02 - at I'm going to print index value also
14:05 - at
14:06 - index like zero index one one index
14:10 - second index like this percentage
14:13 - D is and one more percentage D for
14:17 - actual printing the value so first
14:20 - percentage D will will be replaced with
14:22 - I value and second how to access a of I
14:24 - the actual value right and that's it so
14:29 - I'm just writing here one more print f
14:33 - it will ask like uh at starting enter
14:37 - the array
14:39 - elements
14:41 - right and
14:44 - uh now let me just just run this program
14:47 - and it should ask you enter the array
14:49 - elements first of
14:51 - all so see it is asking AR array
14:54 - elements I'm entering 1 - 9 0 2 4
15:00 - 5 and see okay uh I'm I'm going to
15:04 - decorate this a little bit slash in for
15:07 - the new line right and now you will get
15:09 - it better like -1 4 3 5 2 oh sorry sorry
15:20 - sorry and uh now run this
15:25 - program and here I'm going to write
15:27 - minus1
15:29 - 3 4 5
15:31 - 6 and see okay we I have to save it
15:34 - first of
15:37 - all
15:38 - and I haven't enabled that auto saave
15:43 - option so now again I'm going to run
15:46 - this program and it will ask ENT
15:48 - elements minus 1 0 5 6 7 and see a
15:53 - element and index
15:54 - zero 0 to 4 it should be so minus 1 0 0
15:59 - 5 6 7 it is going to print right so it
16:02 - is in forward and if you want to print
16:04 - in reverse order then just a little bit
16:07 - you have to change here in this also I'm
16:12 - adding one more for Loop so I should be
16:15 - started
16:16 - from size minus one last index I want to
16:20 - first of all exess I should be 4 I
16:25 - greater than equal to 0 and I minus
16:28 - minus sorry minus minus right and here
16:33 - simply
16:34 - print print
16:37 - F array element at index same line
16:43 - percentage D is you can copy also and
16:46 - one more percentage
16:48 - D because two values we are going to
16:50 - print first of all I value and then a of
16:54 - I
16:55 - value right I hope we will get the
16:58 - answer right now I'm going to run this
17:01 - program and it is going to ask enter
17:03 - elements of 9 5 6
17:06 - 7 and
17:08 - 8 see it is first of all it is printing
17:12 - forward 95 6 7 right and eight last one
17:17 - and then in reverse order again I'm
17:20 - going to write what slash in here then
17:23 - you'll get it
17:25 - better so again let me just run this 1 2
17:28 - 2 3 4 5 see first of all from 0 to 4 1 2
17:33 - 3 4 5 and then 5 4 3 2 1 right so I hope
17:37 - you got this one so now here you can
17:39 - change something like this if you don't
17:42 - declare the size here I I have told you
17:45 - like if you will do something like this
17:46 - you don't declare the size here then it
17:49 - should give error right and obviously if
17:51 - you run this program then it will give
17:54 - error see it is going to give some error
17:58 - here
17:59 - you have to give some output so you can
18:00 - try out those different different things
18:01 - if you're getting the uh you know error
18:04 - or not right and you can initialize here
18:07 - then you can initialize at run time and
18:09 - everything you can do here I have just
18:11 - shown you the program fine and here you
18:14 - can also write down something like this
18:16 - 3 + 2 that is also fine right it is not
18:22 - uh going to give you any
18:24 - error okay I have to save it first of
18:26 - all now let me just run this and see it
18:29 - is asking enter number of elements so
18:31 - you can write down any expression also
18:33 - which is positive uh integer right so
18:36 - you can try out all the things and you
18:37 - can tell me in comment BX if you're
18:38 - getting uh the things I have told you in
18:40 - the program like declaration and
18:42 - initialization videos those are correct
18:45 - or not right so you have to try out all
18:47 - the variance here so now in the next
18:50 - video we'll see a more complicated
18:51 - problem like um we will take marks of
18:54 - maybe five or 10 students we will what
18:57 - calculate average of all the marks first
18:59 - of all we will sum all the marks then
19:01 - we'll calculate average using AR so now
19:04 - I'll see you in the next video till then
19:06 - bye-bye thank you