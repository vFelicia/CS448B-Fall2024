00:00 - in the series of learning programming in
00:01 - c in the previous video i have discussed
00:03 - formatted output function means we have
00:05 - already discussed formatted input
00:06 - function and formatted output function
00:09 - input is what scan a function and for
00:11 - formatted output we use printf function
00:13 - so now we are left with unformatted
00:15 - input and output functions so in this
00:17 - video i am going to talk about
00:19 - unformatted input functions in c
00:22 - see what does this mean formatted and
00:23 - unformatted formatted means you can take
00:26 - your output means the output has been
00:28 - arranged arranged in a particular format
00:30 - you can arrange your output in a
00:31 - particular format according to you
00:33 - according to
00:34 - you know your requirement like this
00:36 - suppose i want to take first as in
00:38 - teaser like one then i want to take
00:40 - float value one point two then i want to
00:41 - take any uh string sorry character value
00:44 - and if i want to take any string value
00:46 - yes you can arrange you can take data in
00:48 - this format it's fine using scanner
00:49 - function only you can take suppose if
00:51 - you want to
00:53 - arrange this like this first of all i
00:54 - want to take a float value then a
00:56 - character value then integer value then
00:57 - string value then it it is fine you can
01:00 - take data in this format also
01:02 - right
01:03 - so this is what it's a formatted type of
01:05 - input you can take and
01:07 - how to use these kind of input how to
01:09 - format the input using format specifiers
01:13 - percentage d for integer percentage f
01:14 - for float percentage c for character
01:17 - percentages for string
01:19 - right
01:20 - but in unformatted input functions you
01:22 - cannot
01:23 - format your data you cannot format your
01:26 - input you want to take
01:27 - it just unformatted means basically
01:30 - unformatted input functions these work
01:32 - on character data type and they can uh
01:34 - they can accept a single character only
01:37 - or a string only right right so i'll be
01:40 - discussing about unformatted input
01:42 - functions all the input functions in c
01:44 - and how to use those functions and what
01:46 - output you will get when you uh you know
01:47 - use those functions in your those input
01:50 - functions in your program so now let us
01:52 - discuss about unformatted input
01:54 - functions in c what are unformatted
01:56 - input function in c so these three input
01:58 - function will take input as a character
02:00 - a single character and this will take as
02:02 - a you know the complete string the
02:03 - complete line until that new line
02:05 - operator or you press enter so now first
02:07 - of all let us discuss about get care
02:09 - input function this function reads a
02:12 - single character from the standard input
02:14 - device what is standard input device
02:16 - that is
02:17 - keyboard right let us suppose i am
02:18 - writing a program
02:20 - in main function and this is you know uh
02:23 - the the this is defined in that header
02:25 - file stdio.h
02:27 - main function i am writing suppose
02:29 - a variable character type get ch and in
02:32 - ch i am calling this function getcare
02:36 - in this one there is no argument you
02:37 - need to you no need to pass any argument
02:40 - in this function this is function
02:41 - calling and whatever it will return i am
02:43 - storing that in this
02:45 - variable ch so that when we will print
02:48 - the ch we will will come to know that
02:51 - what input the the get care function is
02:53 - accepted right and after that i am
02:55 - printing
02:56 - this ch
02:58 - percentage c and
03:00 - ch that's it
03:02 - so now let us take this program
03:04 - obviously you have to include that
03:05 - header file also get get get function is
03:08 - what it reads only single character
03:10 - right and whatever it is reading i am
03:12 - storing that character into ch and after
03:14 - that i am printing that character right
03:16 - now anywhere you run this program then
03:17 - suppose this is your output screen and
03:19 - here you will see a cursor that is
03:22 - blinking right
03:23 - now
03:25 - you have to enter something right one
03:27 - character suppose i am entering what j
03:29 - whenever you will press j then that
03:31 - would be displayed on the screen j and
03:33 - cursor would be here
03:35 - right
03:36 - now
03:37 - it is waiting to press
03:39 - other character or you can say enter key
03:42 - whenever you press new line
03:44 - character or you can say that enter key
03:47 - then that value would be displayed that
03:49 - value next line would be executed and
03:51 - that value would be displayed like j the
03:54 - character would be displayed i am
03:56 - i i hope you know how to write printf
03:58 - function we have already discussed in
03:59 - the previous video this is format
04:01 - specifier for character and this is the
04:02 - variable where we are storing that
04:04 - character so j would be printed right
04:06 - but suppose
04:08 - i'm entering the value j k l m n o
04:12 - so you can write down many characters
04:15 - but
04:17 - see it will stop
04:18 - the reading the characters when you will
04:20 - press enter key
04:22 - right
04:23 - you can write down many characters but
04:25 - it will accept only one character or you
04:27 - can say you can you can say it will read
04:29 - only one character so whenever you press
04:31 - enter key then only it will read j and
04:34 - only j value would be stored in ch and j
04:36 - value would be printed these will these
04:38 - characters would not be printed j
04:40 - character would be printed and if you
04:42 - want to print the sky value then here
04:44 - you can use percentage d and then you
04:45 - can print the sky value also of that
04:47 - character right here
04:49 - now this is what get care and now uh let
04:52 - us take this function get cs function
04:54 - suppose rather than get here i am
04:56 - writing here get ch
04:59 - generally you know get set function we
05:00 - use at the end of the program to hold
05:03 - the screen of the program right
05:06 - now
05:07 - when you use this get ch function then
05:10 - what will happen
05:11 - yeah it will it read only only a single
05:14 - character it also reads single character
05:17 - right but
05:18 - that character would not be you know
05:21 - you can say displayed on the screen or e
05:22 - code on the screen what does this
05:24 - echoing mean
05:26 - now whenever you run this program cursor
05:28 - is here
05:29 - and when you will press suppose j
05:32 - then
05:33 - that would not be e code on the screen
05:35 - that j
05:36 - whenever you press the j any key
05:39 - it's not like that you can only uh press
05:41 - you can only enter the characters means
05:43 - the abcd alpha numeric it will uh you
05:45 - know accept zero to nine also some
05:47 - special character also and like uh minus
05:49 - or equal to these kind of things and
05:51 - abcd also
05:52 - and even it is also considering enter as
05:55 - a character so whenever you press
05:57 - suppose i am pressing one
06:00 - right
06:00 - so it will not be e code on the screen
06:03 - directly immediately it will go to the
06:05 - next line and directly it will print
06:07 - that one that is one
06:09 - this one
06:10 - and this function is uh defined where in
06:13 - that header file on your rotate right so
06:16 - for better understanding see suppose i
06:17 - am writing
06:18 - here ch equal to percentage c
06:23 - right so when you will execute this one
06:25 - the cursor would be blinking here
06:28 - right and suppose i am pressing any uh
06:30 - alphanumeric number alpha numeric thing
06:34 - like i'm pressing suppose a
06:37 - so whenever you press a then a would not
06:39 - be equal on the screen directly
06:42 - output you will get ch equal to a this
06:44 - thing only ch equal to a
06:46 - right immediately whenever you press
06:49 - immediately the control will go to the
06:50 - next time immediately the control will
06:52 - execute the next line right and it is
06:54 - used to accept it is used to read the
06:57 - input a single character input from the
07:00 - console from this screen console screen
07:02 - right and see here the character would
07:05 - not be displayed
07:06 - echoed on the screen so suppose if you
07:09 - are commenting this line so you will not
07:11 - get this output
07:13 - if suppose i am pressing a here cursor
07:16 - is there when you whenever you will
07:17 - press a or anything directly you will
07:19 - come to your editor screen no input no
07:22 - data would be displayed here so some
07:24 - somewhere it is used for the security
07:26 - purpose like in case of passwords so
07:28 - that nobody can see whatever input you
07:30 - are giving right
07:32 - and if in place of
07:34 - get che i am i get cs i am writing get
07:37 - ch e function
07:39 - this one
07:40 - now it also accept a single character
07:42 - from the console right
07:45 - and that character would be e code on
07:47 - the screen e means e code
07:50 - right equal method of displayed
07:52 - like this
07:54 - this is suppose my output screen here
07:56 - cursor is blinking whenever you run this
07:58 - program and suppose i am pressing a
08:01 - then a first of all when
08:03 - when you press a that would be displayed
08:05 - here right
08:07 - now cursor is here no cursor would not
08:09 - be here
08:10 - whenever you enter the a that would be e
08:12 - code on the screen and immediately next
08:14 - line would be executed that is here you
08:16 - will get ch
08:18 - equal to a this output you will get
08:21 - right i'm not using slash and if you use
08:23 - slash n then you will get
08:25 - this ch equal to in the next line
08:28 - and this is what
08:29 - in case of gate che and this is what if
08:33 - you press a
08:35 - ah
08:36 - ch equal to it this is in case of
08:39 - get ch here
08:41 - the character has been echoed on the
08:43 - screen whenever you enter that a that
08:45 - would be code first of all on the screen
08:47 - then ch equal to a would be executed but
08:49 - that character would not be equal on the
08:51 - screen if you use gate ch and directly
08:53 - this line would be executed that is cs
08:55 - equal to a that is the only difference
08:57 - between gate cs and gate che right and
08:59 - what is the similarity in
09:01 - both gates and get ch
09:03 - while inputting the value the cursor
09:05 - would immediately jump to the next line
09:09 - without
09:10 - waiting to enter the
09:12 - new line character or without waiting uh
09:14 - to press the enter key right this is the
09:16 - only difference
09:18 - this is the similarity and the
09:19 - difference is what here character would
09:20 - be e code on the screen first of all
09:22 - then
09:23 - the value would be you know displayed c
09:25 - is equal to here character would not be
09:26 - e code on the screen
09:28 - and here in get care
09:30 - this will have we will wait to press the
09:33 - enter key then the value would be
09:35 - displayed the next the cursor would jump
09:37 - jump to the next line right
09:40 - now what about gets get s this is used
09:42 - to take input the complete string as an
09:45 - input suppose i am writing here get s
09:48 - right
09:50 - and
09:52 - sorry what
09:53 - you'll write here is
09:55 - for this one because you are taking
09:57 - complete string like jenny's lectures
09:59 - it's not a single character it's a
10:00 - complete you know
10:02 - string of characters so you can sequence
10:04 - of character that is a string so you
10:06 - have to take character array suppose i
10:07 - am displaying this is what character
10:09 - array i know you don't know the funda
10:11 - fairy but that also we'll discuss
10:13 - in the next videos
10:15 - so the size is 10
10:17 - and now here i am calling this function
10:19 - get
10:20 - s and i am passing this name get sorry
10:23 - ch
10:24 - fine
10:25 - and now i am displaying for displaying
10:27 - that string you will use percentage
10:31 - s percentage c is for just for single
10:34 - character
10:35 - and now
10:36 - what would be the output the screen is
10:37 - like this
10:39 - right cursor is here and now here you
10:41 - can enter
10:42 - number of characters a string suppose i
10:44 - am entering here
10:46 - jenny's
10:48 - lectures right space you can also give
10:51 - space and now whenever you press enter
10:55 - then what output you will get
10:58 - ch equal to this percentage s this would
11:01 - be replaced by the value in ch the value
11:03 - in cs is what the complete string ch is
11:05 - equal to
11:06 - jenny's
11:08 - lectures
11:09 - so the complete string you can read
11:11 - using this get s right so now i hope you
11:14 - got the idea why we are using gateshead
11:16 - function at the end of the program to
11:18 - hold the screen
11:19 - whenever see like this one this is a
11:21 - program this line will be executed then
11:23 - this line then this line right
11:26 - after that
11:27 - just this line gets it will be executed
11:30 - and the screen would be as it is like
11:32 - this
11:33 - you can check your output you can see
11:34 - your output
11:35 - whenever you press any it's not like
11:37 - that you have to press enter key only
11:39 - whenever you press any alphanumeric
11:40 - thing like abcd or 0 to 9 or anything
11:44 - then
11:45 - it will not display on the screen but it
11:47 - will act as an input for this gate ch
11:51 - right and whenever you press any
11:53 - alphanumeric then it will go back to
11:56 - your editor screen right it will not
11:58 - display on on your that
12:00 - screen monitor screen on the output
12:01 - screen right that is why we use get set
12:04 - function to hold the screen we say that
12:06 - we use getsys function to hold the
12:07 - screen because if this is not here this
12:10 - is not the function then
12:11 - yeah this would be executed but
12:14 - you will not able to see the output it
12:16 - will fluctuate and it will go back to
12:18 - the editor screen
12:20 - but yeah output is there how you can see
12:22 - you can just if you are using turbo see
12:24 - then you can just go to your file and
12:26 - there is a option of dose shell you can
12:29 - click on that and you can see your
12:31 - output right and whenever you
12:33 - when you are type exit on that screen
12:35 - then you will
12:37 - get to know you will you know back to
12:38 - your editor screen right so now i hope
12:41 - you got the idea about these functions
12:43 - but you have to try it at your own it's
12:45 - not like that i have you know
12:47 - completed everything about these
12:48 - functions maybe sometimes rather than
12:51 - care here you can take int ch and here
12:54 - rather than these functions you can
12:56 - write down cs is equal to get care and
12:58 - in printf you can print with percentage
13:00 - d what output you are getting percentage
13:01 - see what output you are getting right so
13:04 - try out different different things in
13:05 - get care if you are using multiple
13:07 - successive character as an input so you
13:10 - can use get care in a loop
13:12 - so if you have any idea about loop i
13:14 - haven't covered loop
13:15 - yet but if you have any idea then you
13:17 - can use this get care function in loop
13:19 - also and you can see what output you are
13:21 - getting right see while taking any input
13:23 - we are taking input here we are not
13:25 - using any format specifier percentage d
13:27 - percentage f percentage c or anything
13:31 - like we were using in scanf that is why
13:34 - we are calling these unformatted input
13:36 - function because we are not using any
13:37 - format specifier here we cannot format
13:39 - our input
13:40 - right because it will accept only one
13:42 - characters and put or a string as an
13:44 - input right but yeah while printing we
13:46 - are using this format specifier it is
13:48 - what for output printf it is not for
13:50 - input that is why i am writing here
13:53 - format specifier but in next video we'll
13:54 - also discuss unformatted output
13:57 - functions in c so i hope that's it for
13:59 - this video now i'll see you in the next
14:01 - video till then bye take care
14:18 - you