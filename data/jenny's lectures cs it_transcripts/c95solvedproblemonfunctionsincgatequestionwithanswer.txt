00:00 - so in the series of learning c
00:01 - programming we are discussing some
00:02 - previous year gate questions on
00:04 - functions we have discussed two to three
00:06 - questions in this video we will discuss
00:07 - one more question
00:08 - and this came in gate 2016 right this
00:12 - question is example of both you know
00:13 - combination of call by value and call by
00:15 - reference we will pass here they have
00:17 - passed two arguments one argument has
00:19 - call by value and one argument is called
00:20 - by reference
00:22 - so better to first of all watch out that
00:24 - video if you don't know call by value or
00:25 - call by reference i have already
00:27 - uploaded that video after that you will
00:29 - come to this video then you will get
00:30 - this question better right now before
00:32 - that just want to tell you one thing if
00:34 - you are preparing for gate or will be
00:36 - preparing for gay 2022 exam then there
00:38 - is a good news for you
00:40 - on an academy
00:42 - if you want to purchase any subscription
00:44 - for gate that is for six months or above
00:47 - then you will get it at a special price
00:48 - with 10
00:50 - extra discount
00:52 - here you will get two types of
00:53 - subscription plan
00:55 - plus an iconic what you will get in plus
00:58 - it's a basic plan to get you started in
01:00 - this plan you will get the best
01:02 - educators who will cover the entire
01:04 - syllabus for gate and interactive live
01:07 - classes would be there you will get
01:08 - complete structured course and pdf as
01:11 - well as with this
01:12 - live test would be conducted and some
01:14 - quiz will also be there
01:16 - plus that what is there in iconic one
01:19 - all the features that you will get in
01:20 - plus as well as some extra feature so
01:22 - with iconic plan you just take your gate
01:24 - preparation to the next level with what
01:27 - a personal coach you will get
01:29 - personalized test analysis and as well
01:32 - as personalized doubt solving session
01:34 - would be there if you have any doubt you
01:35 - can ask into those sessions and as well
01:38 - as you will get some uh study material
01:40 - for your
01:41 - preparation so you can select any
01:43 - subscription plan which is best for you
01:44 - according to your requirement you can
01:46 - see the price detail over here on my
01:48 - screen the regular price of that plan as
01:51 - well as after 10 discount and one more
01:53 - thing if you use my code jkl10 you will
01:56 - get extra 10 percent off on the already
01:58 - reduced prices so the detail you will
02:01 - find out in the link that i'll put in
02:02 - the description box of this video you
02:04 - can go and check out so now let me first
02:06 - note down that question here and after
02:08 - that you will discuss that question
02:09 - right
02:10 - let's see
02:11 - we have one function that is f and first
02:14 - of all where where the control will go
02:16 - when you execute the start executing
02:18 - this thing to the main function right so
02:20 - memory would be allocated to this this
02:22 - main function here
02:24 - now in main we have i and j two variable
02:27 - one is i and one is
02:29 - j i is having five and j is having value
02:32 - ten you have to tell that what it will
02:34 - print after execution after completing
02:37 - the execution right we are printing i
02:39 - plus j
02:40 - now see next line is
02:42 - this is what this is calling a function
02:45 - but here
02:46 - arguments what you are passing in
02:48 - arguments address of i
02:50 - so this is what when you are passing
02:51 - address it means it is example of call
02:53 - by reference
02:55 - this is just normal variable j it is
02:57 - example of call by value so in one
03:00 - program only one argument we are passing
03:02 - as call by reference and one argument we
03:04 - are passing is called by value so you
03:06 - have to be very careful while solving
03:08 - these type of questions right so now
03:11 - whenever the the control will go here so
03:14 - now function call means it will go to
03:15 - the definition part of the function so
03:17 - now
03:19 - this function f memory would be
03:20 - allocated to this function now we are
03:22 - passing address of i so suppose address
03:24 - of i is thousand we don't know the
03:26 - address but i'm just supposing address
03:28 - of 5000 address of j is
03:30 - 2 000. so now we are passing address so
03:33 - 5 that is 1000 we are passing so to
03:35 - receive the address
03:37 - what pointer variable should be there
03:39 - that is why as a parameter we have we
03:41 - have declared one pointer variable that
03:43 - is
03:44 - p so this this piece pointer and it is
03:47 - accepting address of i that is thousand
03:50 - now j
03:51 - means 10 value would be pass this is
03:53 - called by value
03:55 - so now it would pass 10 so that is why
03:57 - and this is normal variable m this is
03:59 - not pointer variable so in m we have
04:01 - 10. so now see this this p is pointing
04:04 - to
04:05 - here because it is having address of
04:07 - this i
04:09 - right
04:10 - so now here we have now in this function
04:13 - we have m is equal to m plus five so now
04:15 - m becomes 10 plus five that is 15
04:19 - right
04:20 - s with p is equal to s with p plus m now
04:23 - see
04:24 - whatever the right hand side of this
04:25 - equal to first of all that would be
04:26 - evaluated and that value would be
04:28 - assigned to the left hand side of this
04:30 - equal to so strict p plus m
04:32 - strict p means
04:34 - p is this
04:36 - s t p means
04:37 - this is a direction operator value at
04:40 - value at thousand
04:42 - so
04:43 - value at thousand is what because this
04:45 - is pointing to here value at thousand is
04:47 - not five so it means five plus m m value
04:51 - is fifteen
04:53 - see we are in this function
04:55 - so here m value is 15 right so 5 plus 15
04:59 - is 20 so now this 20 would be assigned
05:02 - to a strict p
05:03 - obviously strict p means value at this
05:05 - that is this so this would be updated
05:07 - that is it becomes i becomes now 20
05:11 - i hope you got this one
05:13 - now next line is return where it is
05:15 - going to return simply where you have
05:17 - called this function here
05:19 - and the function of this calling is done
05:22 - now next line is printf percentage d i
05:25 - plus j
05:27 - now we are in main function so we are
05:29 - here now so i plus j i y is 20 j value
05:32 - is 10 so i plus j is 30.
05:37 - so it will print
05:38 - 30. i hope you got the working of this
05:41 - and i hope you go the working of this
05:42 - call by value and call by reference this
05:44 - is very simple this tricky question but
05:45 - very simple right so
05:48 - let me just run this and
05:50 - show you what output you are getting 30
05:52 - you are getting or not so this was the
05:54 - question we have discussed so let's run
05:56 - this and see what output you will get
06:02 - see it is printing 30 i plus j is 30. so
06:05 - i hope you got the working of this
06:06 - question right so that's it for this
06:08 - video now and i'll see in the next video
06:10 - till then bye