00:00 - so in the series of learning Python
00:01 - programming language in the previous
00:03 - video we have seen index error like what
00:05 - is index error why you get this index
00:06 - error and how to fix this error right
00:09 - now the next topic is nested list I hope
00:12 - you are clear with what is list and
00:14 - python how to use the list and all we
00:16 - have discussed the thing now we'll be
00:18 - discussing what is nested list right
00:21 - I'll show you practical also see if I
00:25 - make a list something like this suppose
00:26 - I am making a list of numbers numbers is
00:29 - equal to and this is at least like 1 10
00:32 - 15 20 like this
00:34 - right
00:36 - and duplicate elements are also allowed
00:38 - we know so rather than this I can
00:40 - directly I can this 15 we can I can
00:43 - write down again so this is what I list
00:46 - right
00:47 - list of numbers list of names possible
00:50 - or let's you know list need not to be
00:53 - homogeneous
00:55 - this list is also possible like I'm
00:57 - writing 1 10 then I'm writing Jenny a
01:01 - string then I'm writing like true
01:06 - so this is Boolean this is string this
01:08 - is what integer right so this kind of
01:12 - list is also possible mixed data type
01:15 - now what is nested Leaf a nested list
01:19 - within a list suppose rather than
01:22 - writing this thing I am writing
01:24 - something like this this and
01:27 - this so this is one list but within this
01:31 - list I have one more list
01:33 - having 20 minus 10 and 15.
01:36 - so this is what nested list
01:39 - it's not like that we can add more
01:42 - elements also like we I can add
01:45 - something like this so this is nested
01:47 - list because it is list within a list
01:50 - right
01:51 - now the point is if
01:54 - one question for you is if I find out
01:56 - length of this list
01:58 - using length function like length
02:00 - numbers
02:02 - then what would be the length of this
02:03 - list
02:04 - one two three four five six seven eight
02:08 - is it eight or one two three four five
02:11 - six is it six
02:15 - it is six why so because this complete
02:20 - list is considered to be one item of
02:22 - this outer list not three item
02:26 - so the length of this list is one two
02:28 - three four five and six not eight right
02:32 - so this is concept of nestled nested
02:35 - list now how this this list is to be
02:38 - stored let me just show you the memory
02:41 - allocation
02:42 - see we have a list
02:45 - one two three four five and six elements
02:49 - so I have like 1 10 15 then 17 like this
02:54 - and here rather than these elements we
02:57 - are having good
02:58 - reference of this list 20 minus 10 and
03:03 - 15 something like this
03:05 - right
03:07 - now index is 0 1 2 3 4 5 0 1 2.
03:14 - and this list is what the name of this
03:16 - list is numbers
03:18 - so how you can access the element of
03:20 - this simply numbers
03:23 - and the name of the list and in
03:25 - subscript
03:27 - obviously the index so if I write like 0
03:29 - so it will give one if I write 1 it will
03:31 - give 10 if I write 2 it will give 15 if
03:33 - I write 3
03:36 - what it will give
03:38 - 20 minus 10 15 something like this
03:42 - right if I write 4 17 5 a 0 but if you
03:47 - want to access the individual individual
03:49 - element of this list then how you can
03:50 - access
03:52 - first of all numbers 3 after that next
03:55 - index would be maybe there is 0 1 or 2
04:00 - through this we can access like this
04:01 - three then one two or three like three
04:06 - zero it will give 20 this element
04:10 - three one
04:13 - it will give minus 10 something like
04:15 - this and slicing is also possible
04:18 - we have discussed what is slicing right
04:20 - so I hope what is nested list it is
04:23 - clear to you guys now let me just take
04:25 - one example we will make a program and
04:27 - on that we'll be discussing what is how
04:30 - how you can access these elements what
04:32 - is slicing how you can apply slicing on
04:35 - this list also right so I'll show you
04:38 - practically
04:39 - so let's create a new file here
04:44 - nested underscore list
04:50 - okay now I'll making a list like
04:53 - I'm taking list one name and here I'm
04:56 - writing like 10
04:58 - 34 like this
05:01 - so this is outer list this is list
05:04 - within a list so let me just
05:08 - print what would be the length of this
05:10 - list
05:17 - let's select current file and run this
05:19 - see length is
05:21 - 5 okay 1 2 3 4 and 5 this complete is
05:27 - one item only right now if you want to
05:30 - access
05:32 - the element of this list then using
05:34 - obviously using index we can access
05:36 - right so let's just print if I
05:42 - write something like this
05:45 - Now list one and I want to access
05:48 - at Fourth index
05:50 - so at Fourth index we have 89.
05:53 - now because Z 0 1 2 this complete is at
05:58 - third index and then four now let me
06:01 - just access the third index
06:05 - C the complete list you could because at
06:08 - third Index this is the lesson now third
06:12 - index and then again one more index zero
06:15 - now you will get this 45
06:17 - right at 3 0 we have 45
06:22 - at 3
06:23 - 2 we have minus 3 I hope you would have
06:27 - to access if there is a next list how to
06:29 - you can access the element rather than
06:31 - this 4578 minus 3 you can put here any
06:33 - names also so strings also allowed like
06:36 - here we have integer here we have string
06:38 - allow because list can contain mixed
06:41 - data type right
06:43 - now slicing and see if I write negative
06:46 - index like minus 2
06:49 - at minus 2 we have this list only
06:51 - because this is minus one eighty nine at
06:53 - minus 1 negative indexing from backward
06:55 - this is minus two minus 3 minus four
06:57 - minus five something like this right now
06:59 - what is slicing C
07:01 - and see if I write rather than this
07:04 - index I am here just
07:08 - putting Len function Len of list one
07:13 - right
07:15 - and
07:20 - suppose minus 1
07:22 - if I wrote something like this like list
07:24 - one but rather than providing the direct
07:26 - index I am providing some expression
07:29 - length of the list 1 and then minus 1.
07:32 - now length of this list one is one two
07:34 - three four five then five minus 1 is 4.
07:38 - so index would be both so what it should
07:41 - print 89
07:44 - right now if I write here minus 2 then
07:48 - 3 Ultimate index would be three so now
07:51 - it is printing this list right so rather
07:54 - than direct index some expression can
07:55 - also be there that would be evaluated
07:57 - and after that just find out the
08:00 - you know index value right okay let's
08:03 - see slicing here
08:06 - okay so list one and I am providing here
08:08 - first third index then at second index
08:12 - nothing
08:14 - slicing means start point and point but
08:17 - if you do not provide provide anything
08:19 - then start point would be by default
08:21 - zero but the first index and ending
08:23 - point would be the length of the list
08:24 - right so length of this list
08:27 - means one two three so zero to three it
08:29 - would be zero to three let's suppose
08:31 - first write a zero two
08:34 - three so it will print this complete
08:37 - list 45 78 and minus 3 but if I do not
08:40 - put 0 and 3 then also it will print this
08:44 - list because by default here we have 0
08:46 - and here we have 3 right and if you put
08:49 - something like 0 2 I want to access only
08:52 - 0 to 2.
08:54 - okay
08:56 - now what it will print only to element
08:58 - 45 and 78 from zeroth index that is 45
09:02 - and 2 is
09:04 - what is this two not index it is length
09:06 - of the list length of this list
09:08 - because this third this index 3 that is
09:11 - for outer list so at third index we have
09:13 - this list now for this list we are
09:15 - providing next index
09:17 - so 0 means from 0 to index to 2 2 means
09:20 - length of this list
09:23 - till two length like one and two
09:27 - right so till 78 it will print right
09:30 - means still
09:31 - 2 minus 1
09:33 - that is one index so 0 to 1 45 and 78 I
09:37 - hope you got this
09:39 - and rather than this one more thing we
09:41 - have at third if you don't do not
09:44 - provide anything here and
09:46 - third part is the step if you have
09:48 - watched my that video uh list in Python
09:51 - then we have discussed this thing also
09:53 - now third is steps so now by default
09:56 - step is one it will print some
09:58 - everything 45 78 minus three and if I
10:01 - write step is two so first it will print
10:03 - it will start from 0 that is 45 then two
10:06 - step means one and two means 45 and
10:10 - minus 3 it will print only not 78 it
10:13 - will skip 78.
10:14 - 45 and minus 3. so like this we can
10:17 - access the list of element of nested
10:19 - list and we can provide slicing on that
10:21 - list so this is basically a basic idea
10:24 - of nested listing python okay so one
10:26 - question for you is this is the list we
10:28 - have list two is this one
10:30 - first of all tell me it is possible is
10:33 - it possible to create this type of list
10:34 - and then you have to tell what is the
10:36 - length of this list and then how you can
10:39 - ex I just want to print
10:41 - this uh like I just want to access this
10:45 - this one the ram then how you can access
10:48 - this Ram what you have to write right so
10:53 - this is for your assignment you have to
10:54 - tell in comment section so I hope you
10:57 - got what is nested list and how to use
10:58 - it how to access the element of nested
11:00 - list so the next video we'll see one
11:02 - coding exercise so now it's my next
11:03 - video bye take care