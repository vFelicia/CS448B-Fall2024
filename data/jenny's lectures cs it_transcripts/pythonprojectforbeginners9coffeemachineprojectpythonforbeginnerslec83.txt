00:00 - hey everyone I hope you all are safe and
00:02 - doing good so in the series of cloning
00:04 - Python programming language in the
00:05 - previous video we have implemented a
00:07 - game that was a higher lower game
00:10 - right I hope you have done that project
00:12 - now in this video we'll be working on
00:14 - one more project and that is what we are
00:17 - going to make a coffee machine
00:19 - it's a virtual coffee machine
00:21 - right
00:23 - now first of all the project is you have
00:25 - to make a copy machine now first task is
00:28 - what you have to understand the
00:30 - requirement you have to understand the
00:31 - working of that coffee machine if you
00:33 - have seen if you are working or anywhere
00:35 - in office or anywhere if you have seen
00:37 - that coffee coffee machine then how it
00:39 - works obviously there are multiple kind
00:41 - of coffee machines so generally what a
00:43 - coffee machine do that thing
00:46 - right
00:47 - so maybe like it will ask you the option
00:50 - which which type of coffee you want like
00:53 - maybe latte espresso or cappuccino right
00:56 - you will give your choice then according
00:59 - to that it will prepare like if
01:01 - resources are available then only it
01:03 - will give you the coffee you will insert
01:06 - second thing you will insert coin the
01:08 - coffee machine we assume that this
01:10 - coffee machine the virtual coffee
01:11 - machine we are going to make is
01:12 - accepting only coins five rupees 10
01:15 - rupees and 20 rupees coin right
01:18 - now you have to insert the coin it will
01:20 - calculate if you have provided enough
01:23 - money or not right and if you have
01:26 - inserted too much money then it will
01:27 - give you change
01:29 - and if you have inserted less money then
01:31 - it will give you like it will give you a
01:33 - it will print a message like that's not
01:35 - enough money and money your money would
01:37 - be refunded
01:39 - this kind of thing I
01:41 - think is understand just go on Google
01:44 - and understand the requirement of coffee
01:46 - machine right maybe my requirements are
01:49 - different from your requirements that is
01:51 - okay right so understand the requirement
01:54 - write down all the requirement on a
01:56 - piece of paper divide the complete task
01:59 - the complete copy machine project into
02:01 - different different tasks small small
02:02 - tasks and then complete one one task
02:05 - small task right and then ultimately you
02:08 - will get your project right
02:10 - okay now let me show you what the
02:13 - requirements I have written what I want
02:15 - in my virtual coffee machine see
02:19 - so if you run your project then let me
02:20 - just show you the output what kind of
02:22 - output you will get it will ask what
02:23 - would you like to have latte espresso
02:25 - cappuccino we have only three options we
02:27 - have given only three options right
02:29 - toward this virtual coffee machine so
02:31 - just I'm entering latte so it will ask
02:34 - please insert coin how many five rupees
02:36 - coin suppose uh five how many 10 Rupees
02:40 - going five how many 20 rupees points
02:43 - suppose again five
02:45 - so here is your rupees 25 in change
02:48 - means you haven't started too much money
02:49 - the cost of coffee is not that much
02:53 - and here is your latte right now again
02:56 - it will serve it will ask to the next
02:58 - customer it will serve to the next
03:00 - customer like what would you like to
03:01 - have and suppose if this time I enter
03:05 - cappuccino then see it will it will show
03:08 - you sorry there is not enough milk
03:10 - so if resources are not enough then it
03:13 - will show this kind of message and then
03:14 - again you'll ask what would you like to
03:15 - have right again if I ask for
03:19 - espresso so yeah there are sufficient
03:22 - resources available in that coffee
03:23 - machine to make espresso coffee so it
03:25 - will ask please insert coin again maybe
03:27 - I am entering like I don't know how much
03:30 - money is this
03:31 - you have to calculate the total and it
03:33 - will give you 165 rupees and change
03:35 - because you have inserted too much money
03:37 - and here is your espresso right and if I
03:41 - insert this report if I report then it
03:46 - will generate a report
03:48 - and it will show me how much water is
03:50 - left how much milk is left how much
03:52 - coffee is left
03:53 - in our machine coffee machine and the
03:56 - money the profit because we have stored
03:59 - to two customer so we have like
04:03 - received money from two customers the
04:06 - payment so it will add that money here
04:08 - like it is asking in the machine I am
04:11 - having right now 250 rupees right
04:14 - now again if you'll ask what would you
04:15 - like to have so if I
04:18 - enter o
04:19 - then it will turn off the machine and
04:22 - just exit from here
04:24 - right
04:26 - so this is the simple one
04:29 - so for this thing what you need to have
04:31 - first the database
04:34 - the resources because obviously in
04:36 - coffee machine we insert some water or
04:38 - the coffee beans right
04:41 - and maybe milk so according to your
04:43 - requirement latte espresso cappuccino
04:45 - according to that it will fetch milk
04:47 - water and
04:49 - coffee from the machine only and it will
04:52 - prepare the coffee and it will add and
04:54 - what it will do obviously from the
04:56 - resources available in the machine that
04:58 - resources for your selected rank would
05:01 - be deducted right
05:04 - and report will show how much resources
05:06 - are still left right so what are the
05:09 - requirements if you write down the
05:11 - requirement then these are the
05:12 - requirements I have written first thing
05:15 - it will ask from the user for coffee
05:16 - time and will prompt what would you like
05:18 - to have
05:19 - from these options and see this line
05:23 - is should be in Loop because it is
05:25 - asking again and again from the user see
05:27 - what would you like to have what would
05:29 - you like to have what would you like to
05:30 - have
05:31 - right second thing
05:34 - when you are entering report as an input
05:37 - then it will show a report something
05:38 - like this how much water milk coffee
05:40 - left and how much money is there in that
05:43 - machine right if you enter off then your
05:46 - program should end the execution
05:48 - right
05:49 - now
05:51 - if
05:52 - resources are available
05:54 - it will first of all it will check if
05:56 - sufficient resources are available or
05:57 - not
05:58 - for your selected ring right if
06:02 - resources are available then it will ask
06:04 - the machine will ask please insert coin
06:06 - and it will calculate the total money
06:08 - receipt right
06:10 - and it will accept only five rupees 10
06:12 - rupees and 20 rupees going now next step
06:15 - is
06:16 - we'll check the payment is successful or
06:18 - not so if user has entered sufficient
06:21 - money then
06:22 - that cost of that drink
06:24 - would be added to the
06:27 - machine as a profit right and whenever
06:30 - you fetch the report then it will show
06:32 - you that money in the machine right if
06:34 - user has earned too much money then it
06:36 - will offer you change but if user has
06:39 - entered less money then it will just
06:42 - sorry that there is not enough money and
06:45 - money would be refunded right
06:47 - now next step is if payment is
06:49 - successful then you have to make the
06:51 - coffee
06:51 - and what is the process like in Virtual
06:53 - confirmation obviously this is not the
06:55 - real one so I'll not give you the coffee
06:57 - just virtual
06:59 - if payment is successful then you have
07:01 - to make the coffee and ingredient to
07:02 - make that selected coffee should be
07:05 - deducted from the resources
07:07 - from that coffee machine resources right
07:10 - and you will print a message like here
07:12 - is your the name of your coffee is
07:14 - selected like here is your cappuccino if
07:16 - you have selected cappuccino right
07:18 - so these are some requirements
07:21 - right now you can pause the video again
07:24 - you can just write down these
07:26 - requirements right now one by one we
07:28 - will Implement these steps these
07:30 - requirements so first thing is this one
07:34 - it will ask from the user what would you
07:36 - like to have
07:38 - let's create a new file here
07:41 - coffee machine project dot py right
07:45 - so
07:47 - and whatever your choice
07:51 - I'll be
07:52 - will be taking a variable to fetch or to
07:55 - you know store that choice in a variable
07:58 - choice
07:59 - now this line should be in Loop how many
08:02 - time it should be repeated we don't know
08:04 - so if you don't know the number of
08:05 - iteration then best is just use while
08:09 - loop but what is the stopping condition
08:11 - see
08:14 - if user enter both then program should
08:17 - end the execution
08:19 - so
08:20 - in choice we can enter these three
08:22 - things or
08:24 - we can enter report or oh
08:27 - here you can also write down if you want
08:29 - like
08:31 - press o for enter off to switch off the
08:33 - machine and enter report to get the
08:36 - report that also you can write down
08:39 - so
08:40 - suppose I have a variable
08:43 - if the machine is on so for that I am
08:46 - taking a variable is on is equal to
08:49 - true means at first the machine is
08:52 - Pawn so while
08:55 - is on
08:57 - till then it will ask from the user what
08:59 - would you like to have this line would
09:00 - be repeated right but if
09:03 - this Choice equal to equal to
09:07 - if you have enter entered O then
09:12 - it is the right time to flip this
09:14 - variable and it is right time right time
09:16 - to switch off the machine or you can say
09:17 - to end the execution of our program
09:19 - right so this is on variable
09:22 - will flip this variable to false right
09:25 - now is one is equal to false now while a
09:27 - Zone false then we will be exit will be
09:30 - out from this while loop and we will not
09:32 - ask from the user what we would like to
09:33 - have again right but
09:36 - next is if
09:38 - like obviously we will write down
09:41 - Health if
09:44 - or if rather than else if you write like
09:47 - if
09:48 - our choice is equal to
09:51 - report
09:53 - then it should bring print something
09:56 - like this the current resources
09:57 - available
09:59 - now where are these resources
10:03 - so we have a dictionary
10:05 - in a program we'll be having a
10:07 - dictionary
10:10 - named the sources
10:12 - and their
10:14 - we will have
10:17 - these things like water
10:19 - and how much how many how much you need
10:22 - like suppose at first I'll enter 500.
10:26 - or rather than this I'll just write 500
10:28 - integer right
10:30 - just assume this is what in ml
10:33 - right now next is milk
10:37 - so suppose water I have at first 500 mL
10:39 - milk 200 mL and coffee is 100 gram I
10:43 - have
10:45 - so in report it should print
10:52 - using F string will be printing like
10:55 - water is equal to
10:58 - and obviously from where you have to
11:00 - fetch the water this value from here 500
11:03 - ml from resources from this dictionary
11:07 - so how to fetch the value from
11:08 - dictionary
11:09 - name of the dictionary and here we just
11:12 - pass the
11:15 - key as it is so water and we will write
11:19 - ml
11:22 - same for milk and coffee
11:28 - so see it is giving error
11:30 - can you see this red lines here so I
11:33 - have told you in earlier videos like if
11:36 - here
11:37 - opening and closing quotes you are
11:40 - writing double quotes then within this
11:41 - we cannot write down double quotes
11:42 - within this if you
11:45 - need a string then you have to put
11:47 - single quote right if here outside
11:50 - opening and closing are single code then
11:52 - Within These you have to put double
11:54 - quote
11:56 - and this ml would be here
11:59 - now same for milk and coffee so see like
12:04 - this water milk coffee and money as well
12:08 - it will print money as well right so
12:10 - water milk coffee we can fetch from the
12:12 - resources as it is from this dictionary
12:15 - right now where is money so at first we
12:18 - are not having any
12:19 - like variable so
12:22 - let's take a variable profit and at
12:24 - first it is zero because no customer
12:27 - came till now so at first this money is
12:31 - equal to from
12:33 - which variable from profit we can fetch
12:36 - and you can write down like rupees
12:40 - rupees and from this variable you will
12:43 - fetch
12:44 - so
12:46 - like this
12:47 - but if
12:49 - we have entered any specific coffee like
12:52 - latte espresso Capuchin then
12:56 - what will happen
12:57 - see now we should write here L if
13:00 - because why so we want that only one
13:03 - condition should be checked either if O
13:05 - then no other condition should be
13:07 - checked if report we have entered report
13:09 - then no other condition should be
13:11 - checked
13:12 - right after this after this
13:16 - after checking this condition
13:19 - and if choice is equal to report then
13:21 - only it will print this thing and
13:24 - whatever you will write after these line
13:26 - that would not be executed right
13:29 - else
13:31 - now if you have entered a coffee name
13:34 - then what will happen now check
13:36 - sufficient resources are available or
13:38 - not
13:39 - so resources we have but
13:41 - obviously we should have ingredient to
13:43 - make latte espresso and cappuccino
13:45 - then only we can check
13:47 - if we have selected latte then
13:49 - ingredient of latte or water this ml
13:52 - milk this much ml coffee this much gram
13:55 - then those ingredients are order
13:57 - ingredient we can compare with these
13:59 - resources ingredient and then only we
14:01 - can check so we should have first a
14:03 - database of having the ingredient of
14:05 - ingredient of latte espresso and
14:07 - cappuccine right so same suppose I have
14:11 - a variable menu dictionary
14:15 - and there
14:16 - first thing I am having latte
14:20 - right and for this
14:23 - ingredient water milk coffee and Coast
14:27 - these four things we want right so the
14:31 - value value again I am taking in the
14:33 - form of dictionary right so the key is
14:36 - ingredients
14:38 - and
14:40 - now value the ingredients are three
14:42 - water milk and coffee so again a
14:46 - dictionary so these are example of
14:49 - nested dictionaries water 200 mL milk
14:52 - 150 and coffee 24 gram I want right
14:55 - okay
14:57 - now obviously ingredient as well as we
15:00 - have another key that is
15:02 - Coast
15:04 - and Coast for latte is suppose 150
15:06 - rupees
15:08 - right
15:09 - so put comma here so same
15:12 - this is the key is latte and the value
15:16 - is again in the form of dictionary
15:17 - ingredient then again dictionary three
15:19 - ingredient and then
15:21 - Lata is having two key ingredient and
15:23 - Coast so this is a first entry same for
15:30 - espresso and cappuccino right
15:32 - so here are our resources here we have
15:35 - the menu
15:37 - the dictionary name and the sources for
15:39 - latte espresso and cappuccino the
15:41 - required ingredient and cost of the
15:44 - coffin rupees
15:47 - right
15:48 - now we can compare if we can check like
15:52 - resources or sufficient resources are
15:53 - available or not so how to check else
15:58 - first you have to fetch if you have
16:00 - selected latte then you have to fetch
16:03 - the ingredient of latte because this
16:06 - only we have to compare water milk and
16:07 - coffee so fetch ingredient of your
16:10 - selected coffee right now this is a
16:13 - dictionary so how to fetch we know from
16:15 - the dictionary dictionary name is
16:19 - menu and we will give our choice
16:22 - whatever Choice espresso cappuccino and
16:26 - we will
16:28 - so whatever you have fetched that let's
16:30 - suppose we print
16:33 - we have taken a variable coffee tie
16:34 - right
16:36 - so let's run this and see if the last
16:38 - photo you like to have suppose I am
16:42 - I'm using latte
16:44 - so it will give
16:45 - this ingredient of latte and post
16:49 - because latte is a dictionary and C
17:00 - okay
17:01 - latte we have given this latte so in
17:04 - this dictionary we are having ingredient
17:05 - as well as second key value pair is cost
17:08 - so
17:09 - it will give us
17:11 - it will get us this thing again it is
17:13 - asking what would you like to have if I
17:17 - enter cappuccino then it will give me
17:19 - the cappuccino ingredient and post right
17:22 - now if I enter
17:25 - report
17:27 - then it will show you the resources
17:30 - available water milk coffee and money is
17:33 - still now zero obviously
17:34 - at first it is zero so and if I enter
17:37 - off
17:38 - then exit
17:40 - so till now we are fine right
17:43 - we have implemented first point second
17:45 - Point third point now you have to check
17:48 - sufficient resources are available or
17:50 - not
17:51 - so how you will check this thing
17:55 - it will create a function check
17:57 - resources and there what you need to
17:59 - pass
18:01 - the resources
18:03 - that is available globally because this
18:07 - dictionary is global right so what you
18:09 - need to pass the selected if you have
18:12 - selected latte then ingredient of latte
18:16 - right and those ingredients are
18:19 - in this variable coffee type see this
18:22 - coffee type is
18:23 - a dictionary
18:27 - don't look at this error you just have
18:29 - to see ingredient this latte is having
18:31 - this coffee type we have stored whatever
18:34 - it will fetch in that variable coffee
18:37 - time this variable coffee type so in
18:39 - coffee type we are having ingredient two
18:41 - key value per ingredient these and
18:44 - secondary key value pair is cost but we
18:46 - want only
18:46 - ingredient we don't want post so again
18:49 - you have to fetch
18:51 - whatever the key ingredient is the key
18:53 - and the value of this key this one right
18:56 - so what you will write here coffee time
18:58 - and the key is what
19:04 - ingredients
19:08 - right now it will fetch this only water
19:12 - milk and coffee these three values only
19:15 - and it will pass these three values to
19:17 - this function right and that's exactly
19:19 - we want only three values note the cost
19:23 - of the coffee right
19:26 - so let's define a function here
19:29 - check resources and obviously you should
19:32 - have
19:34 - a variable
19:40 - check resources and whatever
19:43 - we will have one parameter to fetch the
19:47 - ingredient the name is order ingredient
19:49 - right this is a dictionary
19:51 - so now compare first obviously water
19:55 - with water milk with milk coffee with
19:57 - coffee right you have to compare
20:02 - like this water 200 mL we need water 500
20:07 - mL sufficient milk 150 ml we need milk
20:10 - at first 200 mL sufficient coffee to 24
20:14 - gram we need coffee 100 gram sufficient
20:16 - right so this is how you need to check
20:19 - so you have to Loop through for each
20:21 - item
20:23 - right so you have to Loop through means
20:25 - you have to take you have to write down
20:27 - a for Loop four item in
20:30 - in
20:31 - order ingredient whatever you have
20:33 - passed so if
20:37 - odor ingredient see this is a dictionary
20:40 - order ingredient right so order
20:42 - ingredient and
20:45 - whatever the item right now this Loop is
20:48 - going through
20:49 - is greater than
20:53 - resources
20:55 - and item
20:57 - if this is the case
20:59 - then
21:00 - what you need to print
21:03 - there is not
21:05 - enough and
21:06 - whatever the item the loop is going
21:09 - through so we are using a string here
21:12 - right and then
21:14 - it will return
21:17 - false right
21:20 - if this is the case then return false
21:22 - otherwise
21:24 - return
21:26 - means yes sufficient resources are
21:29 - available
21:30 - it will return this thing
21:32 - so say at first
21:34 - in order ingredient what do we have
21:38 - water milk and
21:41 - coffee this dictionary this is again a
21:44 - dictionary
21:45 - right
21:46 - so this is having this value now for
21:49 - item in order ingredients so first item
21:51 - would be water so first Key Water is
21:54 - assigned in this item so first is water
21:57 - right
21:59 - in item I'm having water so order
22:00 - ingredient item is water water is
22:03 - greater than resources water 500 mL 200
22:07 - mL is it Greater no so
22:10 - again we are not entering here but now
22:14 - next ingredient is what
22:17 - milk
22:19 - because
22:21 - we are still in this for Loop then milk
22:23 - will be assigned then milk milk would be
22:25 - compared and third time
22:28 - coffee would be assigned to the item and
22:30 - coffee and coffee would be compared
22:32 - right and this if statement is every
22:35 - time false so we are not going to enter
22:37 - in the into the safe now end of this
22:39 - dictionary because we have looped
22:42 - through this through this dictionary
22:43 - till the end right till coffee now it
22:46 - will return true means yes ingredients
22:49 - are available if ingredient are
22:51 - available then it will ask from the user
22:53 - please insert coins from payment right
22:57 - because after that only
22:59 - the machine is going to make coffee
23:03 - so I hope this definition of this
23:05 - function is clear to you guys right so
23:08 - whatever it will return
23:10 - we are going to
23:14 - maybe store in a variable or directly we
23:16 - can write down a four if statement if
23:19 - check resources this
23:22 - so either it will return check resources
23:24 - function will return true or false
23:27 - So based on that if it is returning
23:28 - first time it is returning true so if
23:31 - true means we can enter into this if
23:34 - statement right and if
23:38 - resources are available
23:40 - then see if resources are available then
23:43 - next task is machine should ask to
23:45 - insert coin and calculate the total
23:48 - money received from the user
23:50 - right so next step is this
23:54 - now next
23:57 - we will suppose we will uh
24:03 - we'll make a
24:05 - function
24:07 - process points right
24:10 - so we will not pass anything here and
24:13 - let's define this function here
24:19 - will not pass anything so no parameter
24:22 - would be required and first it will
24:24 - print please insert coin right and we
24:28 - will take a variable total is equal to
24:30 - 0.
24:31 - now 5 rupees point 10 rupees and 20
24:33 - rupees coin only three coin the machine
24:36 - will accept
24:37 - so
24:40 - we are going to take a variable coins
24:42 - and 5 and we'll take input from the user
24:46 - and we'll ask like so last how many five
24:49 - rupees coin right and obviously that
24:52 - would be in integer form so please
24:54 - convert it first type cast this into int
24:58 - so same for 10 Rupees coin and 20 rupees
25:01 - coin right and at last
25:05 - just calculate total so suppose I have
25:07 - entered one one coin of each right so
25:09 - total would be
25:11 - how much just calculate total so 20 plus
25:14 - 10 30 and 35 total is 35 Total Money
25:17 - received so how to calculate
25:20 - simply this first like coins how many
25:24 - five number of coins that is in this
25:27 - variable into
25:29 - 5.
25:30 - Plus
25:33 - 10 into obviously 10 and plus
25:41 - coins 20 into
25:43 - 20 so this is what the total money
25:46 - received I hope no need to describe why
25:49 - I have done into 5 into 10 into 20
25:51 - that's very simple right
25:54 - and it will just return
25:56 - the total
25:58 - now it will return here
26:00 - to the caller right
26:02 - so suppose take a variable
26:05 - payment
26:06 - is equal to process coins
26:09 - right now next next step is what
26:13 - C
26:15 - we have done this fifth one
26:17 - we have calculated the total now check
26:20 - payment is successful or not so you have
26:22 - to check if user has entered sufficient
26:24 - money then the cost of the drink would
26:27 - be added to the money to the machine
26:29 - resources as profit if too much money
26:31 - then you should offer the change if not
26:33 - sufficient money then
26:35 - just print a message sorry that's not
26:38 - enough money and money refunded now
26:39 - sixth step you need to handle so means
26:43 - we need to check now if the transaction
26:46 - or payment is successful or not so for
26:49 - that also let's define a function
26:52 - Def
26:54 - is payment successful and what it will
26:59 - have it should have
27:01 - to check if payment is useful or not
27:04 - first thing we need
27:06 - the money received and
27:11 - the cost of that coffee
27:13 - we need two things to compare right
27:17 - right the cost of the coffee and the
27:19 - money received what the customer has
27:21 - given you how much money
27:22 - these two things you need
27:24 - right so say after this let's call the
27:28 - function
27:29 - is payment successful and what argument
27:33 - you need to pass money received is in
27:36 - what in this variable payment the total
27:39 - in is this variable
27:40 - payment and the cost of the selected
27:44 - copy if you have selected latte then
27:47 - cost of latte see this thing only the
27:51 - cost of Landing
27:53 - so this complete thing we are having
27:56 - this coffee type in this dictionary so
27:59 - but but I want to access only this key
28:01 - value pair
28:03 - the cost of the coffee not the
28:06 - ingredient right so what you need to
28:08 - write here the name of the dictionary is
28:11 - coffee type and they are just
28:14 - the key name cost only the screening
28:17 - post
28:18 - passes and it will fetch the cost of the
28:21 - latte if you have selected latte and
28:23 - then it will pass and the payment is
28:25 - what you will receive from here
28:27 - here
28:29 - the total what user has entered right
28:32 - now compare
28:35 - if
28:37 - this money received is
28:44 - greater than or equal to
28:47 - the coffee cost
28:50 - if this is the case then what would
28:52 - happen see
28:56 - if sufficient one is there then cost of
28:58 - the drink would be added to the machine
29:00 - as profit to the machine resources as
29:02 - profit
29:04 - right so
29:07 - profit we have a variable profit is now
29:10 - zero at first profit is 0.
29:13 - so profit becomes profit plus equal to
29:17 - whatever the cost of the cost selected
29:19 - coffee
29:21 - right but one thing it will be better
29:23 - because profit is what a global variable
29:26 - right and you are trying to modify This
29:29 - Global variable within this function
29:31 - means within a local scope
29:34 - so that is directly you cannot do you
29:36 - can access but you cannot modify it so
29:38 - for that I have told you we have a
29:42 - Global keyword
29:45 - so just use Global profit now
29:48 - this line will indicate that we are
29:51 - referring to a variable profit that is
29:54 - global so now we can change this this
29:57 - thing we have discussed Global keyword
29:59 - local spoke Global scope right now we
30:01 - have updated the profit
30:03 - okay
30:04 - and if too much money is inserted then
30:08 - you have to give change
30:10 - now how much change you will be having
30:13 - that money received minus
30:16 - whatever the cost of the coffee just
30:19 - detect the cost of the coffee from the
30:20 - vanilla brand that is your change and
30:23 - then print
30:25 - here is your
30:27 - rupees whatever the changes fetch the
30:29 - value from here using a string in change
30:33 - and just return
30:37 - right because we are this type of
30:40 - function we are creating like is payment
30:42 - successful we need to check
30:44 - paymentsexual means true it should
30:46 - return to you payment successful not
30:48 - successful means it will run false right
30:51 - now else
30:54 - if sufficient money is not there then it
30:58 - will print message
31:00 - sorry there is no that's not enough
31:02 - money and money would be refunded and it
31:04 - will return false
31:06 - dysfunction right so where we are
31:09 - calling this function it will return the
31:12 - value where to the caller so here I am
31:14 - calling this function is payment
31:15 - successful right so now
31:19 - see if payment is successful
31:22 - payment is successful then make the copy
31:25 - if payment is successful then you have
31:26 - to make coffee right
31:28 - so we will
31:31 - either we can write down like we will
31:33 - fetch this thing in a variable and then
31:35 - we can put another if that variable is
31:38 - true or false according to that we can
31:40 - make the coffee or
31:43 - if directly you can write down here if
31:45 - and call the function so definitely it
31:48 - will return either true or false so if
31:50 - it will turn to you so if true means
31:52 - yeah we can enter into this if below
31:55 - if false then definitely we are not
31:57 - going to make the coffee
31:59 - so if this is true then make coffee
32:03 - so let's create a function again
32:07 - make coffee
32:09 - what you need to pass here to make
32:12 - coffee obviously the ingredient of that
32:15 - copyright
32:18 - now first
32:20 - you need to pass
32:22 - the coffee name what you have selected
32:25 - like latte so that would be in this
32:28 - variable Choice what would you like to
32:30 - have and then ingredient of your copy
32:33 - now the ingredient are we have accessed
32:35 - in this coffee type in this dictionary
32:37 - menu and choice see
32:40 - now these are the ingredient so just
32:43 - pass the ingredient so you have to fetch
32:45 - the ingredient so name of the dictionary
32:48 - and
32:52 - name of the key as it is
32:55 - ingredients ingredients this key this
32:58 - value only I want so just pass this key
33:01 - right no need to fetch cost right
33:05 - now
33:07 - you are calling this function then let's
33:10 - define this function here
33:17 - make coffee and here we have we should
33:20 - have two parameter right
33:22 - so first thing is suppose coffee name
33:24 - and
33:32 - let's take name order ingredient same
33:35 - name also you can take because somewhere
33:37 - else also we have taken this name powder
33:40 - ingredient here that's fine
33:43 - you can take your same name so coffee
33:45 - name and the what you can write down
33:47 - here coffee ingredient
33:50 - coffee ingredient
33:52 - now to make the coffee virtually we are
33:55 - making so you need to detect detect the
33:57 - selected drink
34:00 - resources from the
34:02 - coffee machine resources right and just
34:05 - print a message here is your coffee name
34:07 - from water water would be detected from
34:09 - milk milk and from coffee coffee
34:13 - three all the items so you have to Loop
34:16 - through all the items so definitely we
34:18 - need a for Loop for item in
34:28 - of ingredient because right now in
34:30 - coffee ingredient we are having these
34:32 - three things water milk and coffee if
34:35 - you have selected latte so just detect
34:37 - these
34:39 - think from the resources available from
34:41 - the resources available from this amount
34:44 - right
34:46 - so
34:47 - you have to do like resources
34:50 - and item
34:54 - would be minus equal to
34:58 - Kofi ingredient
35:00 - and
35:02 - item for that particular item right so
35:05 - at first if first the water would be
35:08 - assigned to this item then resources
35:10 - item is water
35:12 - minus equal to means resources item is
35:14 - equal to resources item minus of
35:16 - ingredient item so water for water we
35:19 - have 500 ml
35:21 - so from 500 ml
35:23 - how much would be deducted
35:26 - Kofi ingredient and item is water so
35:30 - coffee ingredient water is 200 mL so
35:32 - this would be deducted and 300 ml left
35:35 - right like this same for milk and same
35:38 - for coffee and what it should print
35:40 - here is your coffee name and from Google
35:43 - you can just search like
35:46 - coffee emoji and from there you can just
35:48 - copy paste that that emoji right
35:51 - and maybe you can write down
35:53 - enjoy
35:55 - like this right
35:58 - so this function is not returning
36:00 - anything we are just printing here right
36:03 - so we will not take any variable or
36:06 - anything to except the value because it
36:08 - is not returning anything
36:10 - fine so let's try to run this now
36:15 - see
36:16 - what would you like to have I will have
36:19 - latte
36:21 - so it is showing me the ingredient and
36:23 - everything and then please Insert Coins
36:26 - so I'm entering five five
36:29 - so here is your 25 rupees in change
36:31 - because ghost of the latter is 150 and
36:33 - here is your latte enjoy now it will ask
36:36 - the next customer
36:37 - if I
36:39 - first of all I want to check the report
36:41 - the resources available water is only
36:43 - 300 ml at first it was 500 milk is only
36:46 - 500 M left and coffee is 76 gram left
36:50 - only and money profit is now 150 rupees
36:53 - now what would you like to have suppose
36:58 - I enter cappuccino
37:00 - so ingredient of cappuccino these are
37:03 - the ingredients so yeah water is
37:05 - available 250 ml
37:07 - but milk is 50 ml and we need 100 ml for
37:10 - Cappuccino so sorry there is not enough
37:11 - milk so it is working fine now next if I
37:15 - enter
37:16 - espresso
37:18 - so only water and coffee we need and
37:21 - yeah we have these things
37:23 - right
37:24 - so it will ask please insert coin so I
37:28 - am in I'm inserting less money suppose
37:31 - only
37:32 - one one of each so that there is not
37:35 - that's not enough money money refunded
37:37 - because we need 100 rupees and these are
37:39 - not 100 rupees so money would be
37:41 - refunded again it will ask
37:43 - so if I enter again
37:46 - espresso and money I enter like five
37:49 - five
37:51 - so here is your 75 rupees in change
37:53 - again because 175 is total cost is
37:57 - hundred here's your espresso you can
37:59 - enjoy your coffee now again what would
38:00 - you like to have suppose
38:03 - I enter report
38:05 - so water is 250 ml milk 50 and coffee
38:08 - only 58 gram and money now is 250 rupees
38:10 - now I have
38:12 - right now turn off the machine
38:15 - off and exit
38:17 - so I know this one is little bit
38:20 - tough we can say or tricky because many
38:23 - functions and you are you are you know
38:26 - um there is a coffee machine and you are
38:29 - obviously implementing a virtual coffee
38:31 - machine as it is
38:33 - so a real world entity you have and that
38:35 - you are writing in the form of project
38:38 - right so obviously that could be a
38:41 - little bit tough one and here we are
38:44 - using functions only
38:46 - because if you heard about object
38:48 - oriented programming then to you know
38:50 - Implement a real world thing real world
38:54 - entity or real world object or real
38:55 - world project in this form in
38:58 - programming form then the best Paradigm
39:01 - to use is object oriented programming
39:03 - right
39:05 - so yeah we are here following the
39:07 - procedural approach only using functions
39:10 - we are doing this thing that is little
39:12 - bit tough but if you use that oop
39:16 - Paradigm then it would be a little bit
39:18 - easier understandable more
39:20 - understandable for you guys right so
39:22 - that's it now from the next video we'll
39:24 - be starting
39:25 - oop concept object oriented programming
39:28 - Concept in Python right and then using
39:32 - those we will be implementing the same
39:35 - project again
39:38 - so there can be many ways to implement
39:41 - the coffee machine or many requirement
39:43 - or maybe you can modify this thing you
39:44 - can play around with this game this code
39:47 - I have only three choices you can have
39:49 - five choices
39:50 - you can have one more thing like mocha
39:52 - and that ingredient one more ingredient
39:54 - you can add one more resource you can
39:56 - add for that you need chocolate so you
39:58 - add chocolate
40:00 - so if you got this thing then definitely
40:02 - you can modify your project and you can
40:04 - make a better project or complex one
40:07 - right
40:09 - so if you haven't got this thing it's
40:10 - okay you can just write down the score
40:12 - on a piece of paper one by one you can
40:14 - dry around this and just take a break
40:16 - and you will definitely will get it
40:19 - right try this out at your own if
40:21 - suppose you haven't tried this out at
40:23 - your own you are just working with me
40:24 - then okay don't think that I got this
40:27 - project now that's it no
40:29 - now
40:30 - without any help again try this out
40:33 - write down the complete code again
40:35 - without any help
40:37 - right then you will see how many bugs
40:40 - you are going to get how many times we
40:42 - need to check like obviously you need to
40:45 - copy you need to check the previous
40:46 - coding and all
40:48 - fine so that's it for this video and now
40:51 - I'll see the next video till then bye
40:52 - take care