00:05 - right and we are implementing these
00:07 - exercises on the box wall One X here you
00:10 - know that's a this is a website to Learn
00:12 - Python for beginners actually right now
00:14 - in this video we'll be discussing one
00:16 - more exercise
00:18 - right
00:19 - same the hurdle race but this is going
00:22 - to be something different here we are
00:24 - going to use while loop in the previous
00:26 - video we have seen that exercise we have
00:28 - sold that thing using for Loop so I
00:30 - recommend to watch out that video first
00:32 - because that would be really beneficial
00:34 - for you guys
00:35 - you know if you are going to solve this
00:37 - exercise
00:38 - right now let me just show you okay so
00:42 - you have to search hurdle race in
00:44 - revokes world and you can click on the
00:47 - first
00:48 - link
00:49 - and now here see
00:53 - okay hurdle race now it is some hint
00:56 - like what you need to know the function
00:58 - moved on left we have already used in
01:00 - the previous video now you have to be
01:02 - aware about because in this video we'll
01:04 - be using these conditions like front is
01:06 - clear wall in front at goal these
01:09 - functions right
01:10 - and we'll use a while loop and if
01:13 - statement so these are some hint and see
01:15 - in hurdle here you have to select huddle
01:18 - three right it is already selected in my
01:20 - case hurdle three right now what is the
01:24 - case see this is the program we have
01:26 - written in the previous case right using
01:29 - for Loop now this is going not going to
01:31 - work in this video because what is the
01:34 - scene here
01:35 - see if you run this code with this
01:39 - hurdle race then C
01:42 - I hit a wall because
01:44 - at Jump function first of all we are
01:47 - going to move but here
01:49 - we cannot move because we have Wall in
01:52 - front of us right now we have all we
01:54 - cannot move even even one step so you
01:56 - have to turn left and move in upward
01:58 - direction right so this is not going to
02:00 - work this is for sure right but the
02:02 - problem one more problem is what C now
02:04 - hurdle this these hurdles are changing
02:06 - whenever you will reload this game c now
02:09 - at this point of time we have hurdles
02:11 - four hurdles here and four hurdles here
02:13 - right
02:14 - if you again like if I run this and if I
02:18 - again reload this game then now three
02:20 - hurdles are here then one then two so
02:23 - every time you are going to reload the
02:25 - game then these hurdles would be
02:27 - changing so we don't know where the
02:29 - hurdle would be in the next at next time
02:33 - right and how many iteration you need
02:35 - how many jump or how many jump you need
02:38 - how many iteration you need because in
02:40 - the previous case we were sure like six
02:42 - iteration we need six jump that's it we
02:45 - have used four Loop so that is why when
02:48 - you don't know how many jump you need
02:50 - how many iteration you need of this
02:53 - function jump function or you can say
02:54 - walk function this function then we know
02:58 - yeah while loop
03:00 - right let's see if I run this
03:03 - then it will give error and again if I
03:06 - reload this game if I press this back
03:08 - button then see now hurdles one two
03:12 - three only four hurdles are there so
03:13 - these are changing every time so we
03:15 - don't know how many time we have to jump
03:17 - the wall
03:18 - right that is why one hint is what while
03:21 - loop we use if statement we use and you
03:24 - have to use some condition like you have
03:26 - to check like wall in front or not maybe
03:28 - front is clear or not or at goal you are
03:31 - at goal or not right or maybe negation
03:33 - of these functions right so these are
03:36 - some hint now pause the video and try
03:39 - this out
03:40 - be honest don't look the solution pause
03:42 - the video and try this out right
03:46 - okay I hope now you have done this now
03:49 - see
03:50 - we cannot use this for Loop right
03:55 - now obviously turn right function will
03:58 - be using here this jump function also
04:00 - will be using here but there is some you
04:03 - know slight difference in this jump
04:05 - function that also I will show you what
04:07 - is the difference but
04:08 - here we'll be using while loop now in
04:11 - while loop here we put some condition
04:15 - this
04:17 - now the the statement within this while
04:19 - loop would be executed until this
04:21 - condition is true
04:22 - so we know we have here a function it
04:27 - will inbuilt at
04:28 - goal
04:31 - while
04:32 - but not
04:34 - we cannot write while at Gold we have to
04:36 - write y
04:38 - not at goal
04:40 - right sorry it's g o a l right
04:45 - while not at goal this is inbuilt so
04:50 - it's good for us otherwise we can take a
04:52 - variable just like game or variable in
04:55 - previous one of my previous videos we
04:56 - have also seen Game Over set the game
04:57 - over to false then while not game over
05:01 - and then within this while loop you have
05:03 - to flip that variable right
05:06 - to exit from this while loop something
05:08 - like this but we have here at goal
05:11 - function so directly we can use that
05:12 - thing like this is simple for us so why
05:16 - not at Gold
05:18 - we have to
05:20 - now directly we cannot like write down
05:22 - jump no now check
05:25 - we have to check you have to put some if
05:27 - condition
05:29 - if
05:31 - wall is in front like here we don't have
05:34 - Wall in front so we can directly move so
05:36 - maybe you can say like move you can
05:40 - directly right here move
05:43 - move
05:45 - and then we can check if wall in front
05:48 - then jump
05:51 - you have to jump on that wall
05:54 - right but maybe sometime if next time
05:58 - like if next time I reload the scheme
06:01 - then okay we don't have all at this time
06:03 - also in front because we can move one
06:06 - step but suppose next time I reload this
06:09 - game now the see now this point of time
06:12 - we cannot even move a single step
06:13 - because
06:15 - wall is there so we cannot write down
06:17 - move first of all
06:19 - so first check if
06:22 - this function we can use directly like
06:25 - from this this thing if wall in front if
06:29 - this is the case
06:31 - then
06:33 - if all in front then jump
06:36 - just call the function jump this
06:39 - function we have U used and described in
06:42 - the previous video right but you have to
06:45 - modify this function see if wall in
06:48 - front then call jump function so control
06:51 - would be here
06:52 - right okay
06:55 - let's first of all write down one more
06:58 - else in else
07:01 - simply move
07:02 - that's it
07:04 - if wall is in front so you have to jump
07:06 - else move
07:08 - very simple
07:10 - okay now let's run this
07:13 - maybe you think it will work let's run
07:15 - this step by step this step through
07:17 - option
07:18 - first control would be here while not at
07:21 - goal this condition is true we are not
07:23 - at a goal because goal is here let's
07:25 - click this again
07:27 - now if wall in front this would be
07:30 - checked let's run this sorry step
07:33 - then jump so control would be here
07:38 - where we have defined the function jump
07:40 - so in Jump first statement we have move
07:43 - so let's click here and see
07:46 - ouch I hit a wall because we cannot move
07:49 - even as one even single step because the
07:52 - wall is there in front of us so you have
07:54 - to turn what you have to turn left and
07:57 - then move so
07:59 - we will be just stop this game and just
08:02 - modify this function rather than move
08:05 - now that's fine obviously if wall is in
08:08 - front so we cannot move
08:10 - right so jump function you have to
08:12 - modify that you have to write down here
08:13 - turn left
08:15 - remove the smooth and turn left then
08:17 - then move then turn right move down
08:19 - right move and then turn left now this
08:21 - is the jump function
08:23 - here for this program
08:25 - right
08:26 - okay now
08:31 - now it will work fine now let's do this
08:34 - step through
08:36 - while not at goal
08:38 - if wall in front
08:39 - right now wall is not in front because
08:42 - we have reloaded this game so it will be
08:44 - moving to the else part so move
08:47 - again check while not at goal move
08:51 - now all in front yes now jump so
08:55 - to the jump function turn left move turn
08:58 - right then turn right function would be
08:59 - cold because we have defined this
09:01 - function like this right
09:05 - so see this
09:08 - turn left again while not at goal yes
09:10 - wall in front yes jump go to jump
09:13 - function turn left move turn right now
09:15 - hold on right function
09:19 - right function simple then again turn
09:23 - right then move then turn left
09:26 - now
09:28 - I hope now you can easily do this
09:32 - okay now see
09:36 - turn left then move
09:38 - turn left
09:40 - now check the condition now we added to
09:43 - Gold so check the condition the
09:45 - condition is not true exit from the
09:46 - program exit from this Loop now see you
09:49 - will see this this is at correct
09:51 - position X and Y position right I hope
09:54 - you got this if you stop this and reload
09:56 - this game let's see this time this is a
09:58 - different game right so you can run this
10:00 - directly and yeah this will work for
10:02 - this also so for two to three
10:05 - time you can just reload the game and
10:07 - try this out right so this is the
10:10 - exercise using while loop the previous
10:13 - one was using for Loop now I hope you
10:16 - are clear with when we'll be using for
10:18 - Loop and when we'll be using while
10:19 - because here we don't know how many jump
10:22 - we have to do how many times these
10:24 - statements whatever you will write in
10:26 - while loop like jump statement that
10:27 - would be it we don't know
10:29 - so that is why we use while loop here
10:31 - right
10:32 - so that's it for this video now in the
10:35 - next video we'll be seeing one more
10:37 - hurdle that is something different and
10:39 - little bit tough right so first please
10:43 - watch out the previous video and this
10:45 - video then the next video would be very
10:47 - easy for you guys so now I'll see the
10:49 - next tutorial number bye take care