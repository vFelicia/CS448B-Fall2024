00:00 - hey everyone I hope you all are safe and
00:02 - doing good so in the series of learning
00:04 - C++ programming language we are
00:05 - discussing now vectors in C++ the
00:07 - previous video was uh you can say like
00:10 - introduction to vectors how to declare a
00:12 - vector how to initialize a vector that
00:14 - thing we have discussed now in this
00:15 - video we'll see how to access elements
00:18 - of a vector right and how to modify a
00:21 - vector these two things right so let's
00:25 - start we'll just make a new file so we
00:29 - we have created a new file now first
00:33 - basically we will include IO
00:37 - stream header then if you are using
00:40 - Vector then you have to include Vector
00:43 - as well
00:48 - right and yeah before main we will be uh
00:51 - using that Nam space as well including
00:53 - that Nam
00:55 - space which name space
00:58 - STD right so let's create a vector first
01:02 - there are many ways this thing we have
01:04 - discussed in previous video right how to
01:06 - declare a vector how to initialize a
01:07 - vector right Vector in bracket that
01:10 - object type see Vector is whatever
01:12 - Vector we are creating that is a you
01:14 - know that is an object because Vector is
01:16 - a class here right so we are creating a
01:19 - vector number so it is acting as an
01:21 - object here in C++
01:23 - right okay now I'm initializing with an
01:28 - initializer list like an array
01:30 - so I'm just taking some values in this
01:33 - Vector fine now how to access these
01:38 - values same in an array how you access
01:41 - just provide index in those subscript so
01:44 - that is one way here so see out the name
01:47 - of this Vector that is numbers and in
01:50 - the subscript index zero index I want to
01:54 - XS right I mean the first
01:58 - element return zero and let me just show
02:00 - you it should give you
02:04 - three see element at index Zer is three
02:09 - right so you are getting right out
02:11 - output but the problem with this method
02:13 - is what it will not provide you bound
02:15 - checking like if you want to access at
02:19 - index 0 1 2 3 4 final indexes four but
02:24 - if you want to
02:26 - access element add index 10 and I
02:29 - provide here but there is no element at
02:31 - index 10 so ideally it should give error
02:33 - or exception but it will give any
02:35 - garbage value C right so there is no
02:38 - bound checking here same with ARs if you
02:43 - use this formula this operator to access
02:45 - element right but there is another way
02:48 - to access the elements which is we have
02:50 - an member function at that member fun
02:53 - function provide uh bound checking right
02:57 - okay now let's see element at index x0
03:02 - is this but there is a second way using
03:07 - at member function so element at index
03:10 - zero is and we are using that at index
03:14 - function sorry at function so Vector
03:16 - name dot here
03:20 - at and here in this round bracket you
03:23 - provide that index zero right so both
03:28 - will give three and three let's run
03:31 - this c three and three okay for a new
03:36 - line we can just add here endl or slash
03:39 - right it's
03:41 - fine but this method provide bound
03:44 - checking if I access here element at
03:46 - index 10 and at 10 if I write right let
03:51 - me just comment out this thing now it
03:53 - will give it will throw an exception
03:55 - right out of
03:57 - range see
04:00 - uh this is out of range exception is
04:03 - throwing C Vector this check which is 10
04:07 - but it is greater than or equal to the
04:09 - size which is five actual size is five
04:11 - so it should be less than or equal to
04:13 - five sorry four not more so this provide
04:17 - bound check this is how we can access
04:19 - element now one more method is directly
04:22 - if you want to access front and back
04:24 - element so we have two more uh member
04:26 - function front and back why I'm calling
04:29 - this member fun function because Vector
04:31 - is a class and this numbers this is
04:34 - actually an object so whatever the
04:37 - function in that class we can use those
04:39 - function those are known as member
04:41 - functions and those member function we
04:43 - can use with the help of this object
04:45 - right right so let me show you see there
04:48 - are many functions we can use with these
04:51 - vectors so if you go through this side
04:52 - like cpv vector and there is a site C+
04:56 - plus.com right here you will get
04:58 - everything about vectors and what
04:59 - whatever function member function you
05:01 - can use on vectors c 1 by1 you'll get
05:04 - everything right so these are the
05:06 - function we can use on vectors right see
05:10 - this thing we have seen in previous
05:11 - video size and capacity these two things
05:14 - right how they are going to work element
05:17 - access for element access using this
05:19 - operator you can access using at we can
05:21 - access right this thing we have seen now
05:23 - front and back X is first element this x
05:26 - is last element how to use if you want
05:27 - to check you just click on front and it
05:29 - will give you the complete
05:31 - detail X is first element it will return
05:33 - a reference to the first element in the
05:36 - vector right and how to use here we have
05:39 - an example so you can use this let me
05:41 - just show you here if I want to access
05:45 - the last element directly last element
05:47 - in this Vector numbers is how to call
05:51 - back function Vector name dot the
05:54 - function name is
05:56 - back and that's it right
06:01 - andl so let me just comment out this
06:03 - line and if I run this it should give
06:06 - four right because the last element is
06:08 - four so it is four so directly if you
06:10 - want to access front and last element we
06:11 - can use this thing for front same we
06:14 - have front
06:16 - function first element for first
06:19 - element so for first element you just
06:22 - have to write
06:23 - here
06:25 - front so it will give four and the this
06:28 - will give three
06:30 - right so last element is four first
06:33 - element is three so this is how you can
06:35 - access elements now how to modify if you
06:38 - want to modify this Vector using at we
06:40 - can modify yeah if I want to modify like
06:44 - the element at index one the second
06:47 - element so how you can uh update this
06:50 - thing modify this
06:53 - thing
06:54 - numbers the vector name dot at at at
06:59 - index one I want to make it 10 now we
07:05 - will access element at index one is at
07:08 - one so let me just comment out these two
07:12 - line and at first it was Zero but now we
07:15 - have modified it 10 so this line should
07:17 - give 10 right let me just run this so
07:21 - element at index one is 10 this is how
07:24 - you can modify any element right using
07:27 - at or if you want to ask from from the
07:29 - user that also we can do like I
07:33 - just want to declare a vector of size
07:38 - five right so enter element of vector
07:41 - Five Element you want to enter so just
07:45 - use a loop like for
07:47 - Loop because I don't want to repeat the
07:49 - same line again and again from zero
07:53 - to till Vector size so I should be less
07:58 - than vector a size how to calculate
08:02 - numbers dot we have a function size and
08:06 - that's it and then I
08:10 - ++ right and here just see
08:13 - in numbers and at I
08:18 - these five elements it will take right
08:22 - so let's run this enter Vector elements
08:25 - of vector 1 2 3 4 5 right and element at
08:31 - index one is see 10 it is showing me 10
08:34 - because actually it is two but it is
08:35 - showing 10 because we have updated this
08:37 - thing modified this thing using this
08:39 - line right and if you want to print
08:42 - elements whatever elements you have
08:44 - entered in this Vector then also same we
08:46 - can use for Loop
08:48 - like same line it will
08:52 - iterate from 0o to numbers do
08:58 - size
09:05 - and yeah I less than numbers do size
09:08 - right and I
09:11 - ++ and then we can just simply print C
09:14 - out and uh with the help of at function
09:20 - I want to print at
09:22 - I
09:28 - right
09:31 - just format it a little bit with
09:34 - endl
09:38 - right so first it will ask numbers
09:41 - element of vector then it will print
09:43 - those vector and then after modifying
09:46 - this it will print the modified value at
09:50 - index one right okay now enter 1 2 3 4
09:55 - 45 or five element of vector are these
09:58 - but element at index first is 10 because
10:01 - we have modified
10:03 - that element right so like this here we
10:07 - have different different functions in
10:09 - this Vector
10:12 - right so you can just go to this side
10:15 - and you can check all these functions
10:17 - you can try out these functions right
10:19 - the element XS these are modifier push
10:21 - back we have used right and in next
10:24 - video we'll see some more function
10:26 - member function of vectors right
10:32 - so that's it for this video now I'll see
10:34 - you in the next video till then bye-bye
10:36 - take care