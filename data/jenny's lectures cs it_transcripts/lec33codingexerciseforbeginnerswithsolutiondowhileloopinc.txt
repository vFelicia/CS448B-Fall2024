00:00 - so on the series of learning C plus plus
00:02 - programming language we are discussing
00:04 - Loops in C plus plus in the previous
00:05 - video we have discussed dou y u right so
00:08 - now in this video we will discuss some
00:09 - practice problems on do while loop right
00:12 - you will write two programs using do
00:14 - while loop so this would be something
00:16 - like you know coding exercise for you
00:19 - guys so first program is what you have
00:22 - to calculate sum of positive integers
00:25 - right now what kind of output I want see
00:29 - first of all the problem is you have to
00:31 - find out sum of positive integer but you
00:33 - have to understand
00:34 - right what is this problem statement
00:37 - right what kind of output I want
00:39 - according to that after that you have
00:40 - you you know you need to start writing
00:42 - program okay it's not like that just
00:45 - start adding hash into IO stream using
00:47 - YouTube STD and this is no no no logic
00:49 - is very important so for that you have
00:52 - to understand the problem statement
00:53 - first right if you have any question you
00:56 - can ask
00:57 - right so what kind of output I want let
00:59 - me just show you
01:01 - so this type of how I want see it will
01:03 - ask enter a number I am entering one
01:05 - again it will ask enter number suppose
01:07 - 10. next suppose to next suppose 20.
01:12 - next suppose I'm entering a minus 5.
01:16 - so it will print sum as 33 sum of
01:18 - positive numbers only 1 plus 10 plus 2
01:21 - plus 20 is 33
01:22 - minus 5 is not in the sum so 33 it
01:26 - should print this type of output I want
01:29 - now pause the video and write down the
01:32 - logic for this thing before seeing the
01:34 - solution
01:34 - so this is the output we want right
01:37 - now how you can write down this thing
01:39 - first of all think the logic see you
01:42 - have to write down this
01:43 - obviously this statement is executing
01:46 - again and again enter a number enter a
01:47 - number so it is asking again and again
01:49 - from the user so you have to put this
01:52 - statement in Loop and we write down this
01:55 - with the help of do while loop so do
01:58 - and this is suppose do y
02:02 - Loop and here we will write some
02:03 - condition this is the general syntax
02:05 - right so here somewhere we have to write
02:08 - down this line like we can write down C
02:09 - out because this would you need to print
02:12 - you need to put this line in a loop
02:14 - because if this line is executing again
02:17 - and again enter a number right and see
02:21 - in what variable I am taking hint
02:24 - number
02:25 - and before this do value outside of this
02:28 - body of the loop I am
02:31 - taking a variable nth number y outside
02:34 - of this Loop y cannot
02:37 - I write here I enter number
02:40 - rather than here because C
02:43 - this it will ask from the user
02:47 - till the number is positive means while
02:49 - the number is positive you are entering
02:51 - a positive number Loop will continue as
02:54 - soon as you enter a negative number
02:56 - Loop will terminate and it will just do
02:58 - some of these positive numbers only not
03:01 - this negative number
03:02 - only sum of positive numbers
03:05 - so you have to put some condition on
03:07 - number
03:09 - if the number is negative stop
03:11 - so in while loop we put condition on
03:13 - number
03:15 - that is why this number we are using
03:17 - this variable outside outside of this
03:19 - Loop body right so you have to declare
03:22 - this outside of this Loop body if you
03:24 - declare here not here then it will give
03:26 - error
03:27 - number greater than equal to 0.
03:31 - while the number is greater than equal
03:33 - to 0
03:34 - it will
03:35 - repeating the statement will repeat
03:37 - these statements
03:39 - enter a number enter a number enter
03:41 - number as soon as you enter negative
03:42 - number stop
03:43 - so now
03:45 - some of these numbers I hope you know
03:48 - the logic sum so let's declare another
03:50 - variable also
03:52 - sum and initialize it with 0 better
03:55 - because otherwise maybe it will take
03:57 - some garbage value at starting and in
03:59 - garbage value if you add one it will
04:01 - give some garbage value so better to
04:02 - initialize it with zero now where to
04:05 - write down this sum
04:07 - here or here suppose you are writing
04:09 - here sum equal to sum plus number
04:15 - right and after this I am just printing
04:19 - C out
04:20 - what you will print the sum is the sum
04:23 - is
04:24 - and the variable is
04:26 - sum
04:27 - right and
04:29 - return 0 and that's it and here we can
04:33 - return in domain and above the header
04:35 - file and all right
04:38 - now what will happen see
04:40 - okay now we have a number
04:42 - it will take some garbage value Maybe
04:45 - right
04:46 - sum is equal to 0 and we have sum sum is
04:49 - 0 and the number is we don't have any we
04:51 - haven't initialized this number so do c
04:53 - out and try number it will ask a number
04:54 - one so one
04:57 - okay now sum is equal to some plus
04:59 - number so sum becomes 0 plus 1
05:02 - 1 right
05:04 - again now it will check the condition
05:06 - number we have entered is 1 so 1 is
05:09 - greater than equal to 0 yes so again it
05:11 - will enter here so again it will ask
05:13 - enter a number we have entered 10 right
05:16 - this time 10 sum plus number 10 plus 1
05:20 - is 11 so check at this time number is 10
05:23 - 10 greater than equal to 0 yes condition
05:25 - true again it will enter here again it
05:28 - will ask enter a number we have entered
05:30 - two
05:31 - some plus number means 11 plus 2 is 13
05:35 - at this point of 5 number is 2 condition
05:38 - true yes again enter here again it will
05:40 - ask enter a number suppose I have
05:42 - entered 20 some plus number means 20
05:45 - plus this is thirty three at this point
05:49 - of time number is 20 so 20 greater than
05:51 - equal to 0 yes condition true again it
05:54 - will enter
05:56 - focus at this point again it will enter
05:59 - here and it will ask enter a number now
06:01 - I have entered a number minus 5. okay
06:04 - this point of time minus 5.
06:06 - so now this statement this statement
06:09 - would be executed before checking the
06:11 - condition sum is equal to sum plus
06:12 - number
06:13 - so number is this point of prime number
06:15 - is minus five so at this point of time
06:17 - it will become
06:19 - twenty seven
06:21 - right and after that we'll check number
06:24 - is minus 5 minus 5 greater than equal to
06:27 - 0 no condition is not true exit from the
06:30 - loop and it will print sum is 27.
06:33 - so in this logic we have
06:37 - we have done what it will add it will
06:40 - add this negative number also and the
06:43 - sum would be rather than 33 27. but we
06:46 - don't want this
06:47 - we don't want to add this negative
06:49 - number we only want sum of positive
06:51 - numbers
06:53 - only one change you have to do
06:56 - so what you can do
06:58 - before
07:00 - what we want
07:01 - it will ask enter a number and after
07:04 - entering the number just after entering
07:06 - the number it should check the condition
07:10 - right so this line you need to skip
07:14 - as soon as you enter a number minus five
07:16 - it will check the condition condition is
07:18 - not print it will not do sum out of the
07:20 - loop so where you can put this line
07:23 - before
07:24 - asking the number sum is equal to sum
07:27 - Plus
07:28 - number
07:29 - this should be the correct logic here we
07:32 - cannot write down this line
07:34 - right
07:37 - now one more change you need to do
07:40 - now here suppose here we have done so
07:43 - num is equal to nothing sum is equal to
07:45 - 0 right
07:47 - now it will enter sum is equal to some
07:49 - plus number
07:50 - now at this point of time number is any
07:52 - garbage value because you haven't
07:54 - initialized this thing so sum becomes 0
07:57 - plus various value some garbage value
08:01 - so sum is now some garbage value and
08:03 - when whenever you enter number one so
08:05 - garbage Value Plus One it will give some
08:07 - garbage value unexpected result
08:10 - right so what you can do to rescue from
08:13 - this situation to rescue yourself from
08:15 - the situation
08:16 - we can initialize number with zero at
08:19 - first number is equal to zero
08:22 - number zero sum 0 so at this point of
08:24 - time sum is equal to some plus number
08:26 - sum would be 0 only
08:29 - and then it will ask enter a number and
08:31 - that's this now you will get 33 so this
08:34 - should be the logic right you can rewind
08:37 - this and right in this program right and
08:40 - you will get 33 only
08:42 - so this is how rather than just copying
08:45 - and pasting this correct code you have
08:49 - to try at your own right
08:52 - because maybe sometimes
08:54 - playing would be here and you think that
08:57 - yeah these three lines are here and this
09:00 - is the correct logic because you haven't
09:01 - tried that thing right so try different
09:05 - different Logics right rather than just
09:08 - copying and pasting the correct logic
09:10 - from YouTube or from Google and all
09:13 - right write down your own logic first
09:17 - right so this is the first exercise next
09:20 - exercise is let me just show you what
09:22 - type of output I want so see this is the
09:25 - code
09:27 - that I we have discussed some of
09:29 - positive numbers only right now let me
09:32 - just run this and show you the output
09:35 - see it will ask enter a number one then
09:38 - suppose 10 then 2 then 20 minus 5 any
09:43 - minus number and sum is 33.
09:46 - so this type of output we want right
09:50 - next problem is we want something like
09:54 - you can say simple calculator but what
09:58 - kind of output I want see see at first
10:01 - whenever you will run it should show you
10:03 - the choices one choice one is for
10:07 - addition two for subtraction if you
10:09 - press three then multiplication then
10:11 - four for division and if you press q
10:13 - small q or capital Q then it will quit
10:16 - and then you'll ask enter your choice
10:18 - suppose I am entering 2.
10:21 - so it will print you chose to
10:23 - subtraction right then it will ask enter
10:26 - two numbers separated by a space suppose
10:28 - I am entering 5 and 2.
10:31 - enter
10:32 - it will show subtraction is 3 and then
10:36 - after again it will show you these the
10:38 - menu and it will ask your your choice
10:41 - now if you press suppose 4.
10:45 - it will show you you chose 4 that is
10:48 - division and enter two numbers separated
10:50 - by a space suppose I am entering 4
10:54 - and three
10:57 - so it will print a division is 1.
11:00 - right and again it will show you the
11:02 - menu now suppose I am entering Cube
11:05 - small keyword Capital view suppose I am
11:07 - entering small q
11:09 - means quit
11:11 - so it will say goodbye
11:15 - that's it so this kind of thing I want
11:18 - and if you enter any other choice rather
11:21 - than one two three four and Q suppose I
11:24 - enter 6 7 8 suppose let's run this again
11:27 - and I'll show you
11:29 - see enter this enter your choice I am
11:32 - entering suppose 7.
11:35 - so it will show you wrong choice try
11:38 - again
11:40 - if I enter suppose h
11:43 - wrong choice try again and it will show
11:46 - you the menu
11:47 - right so this type of output I want so
11:50 - let's pause the video and try this with
11:53 - do while loop within do while you can
11:56 - use maybe your pencils or switch
11:58 - statement it's up to you
12:00 - ok so I
12:02 - hope you have tried this program let's
12:05 - write down this program
12:10 - first thing we want is what
12:13 - within do I Loop see we want that that
12:16 - menu
12:18 - should be repeated again and again right
12:20 - obviously that thing also we will write
12:22 - down that do I Loop in that do I Loop
12:24 - but first time without checking any
12:25 - condition it should show you the menu so
12:30 - in do while loop also dual is also exit
12:32 - control Loop so one time it will run
12:35 - those statements and after that it will
12:37 - check the condition right so what we
12:39 - will do suppose uh in this
12:43 - do
12:48 - y
12:49 - this is some
12:51 - so here in this block we will write down
12:53 - some condition so first thing what we
12:55 - want is that menu should be printed
12:58 - right
13:00 - so it is just for decoration purpose the
13:03 - Slime right
13:13 - like this you want to print like first
13:15 - and
13:17 - first is for
13:18 - as it is you have to write down that
13:20 - thing in C out Edition right
13:24 - and same just copy and paste this line
13:27 - it should ask after that
13:30 - it should ask
13:32 - enter your
13:36 - take a choice variable and obviously
13:38 - condition you will put on what variable
13:41 - on choice because choice is one either
13:44 - one two three four or Q or anything else
13:48 - right so in Choice variable you have to
13:50 - put some conditions so Choice variable
13:52 - what we will do
13:54 - the choice variable
13:56 - should be declared outside of this Loop
13:58 - of the body
13:59 - right so here I am taking int so in not
14:03 - int we are taking
14:04 - care because Q is character so care
14:09 - choice
14:11 - right
14:13 - now okay it will ask this thing
14:16 - now obviously if choice is 1 then it
14:20 - will do addition so now you have to put
14:22 - some condition
14:23 - I am using Harry file statement you can
14:26 - try this with a switch statement also so
14:28 - now we will see
14:30 - if
14:33 - this choice is equal to is equal to
14:37 - 1 because this is character so we put
14:40 - single quote here
14:41 - so now one would be considered as a
14:43 - character not integer if choice is one
14:46 - then
14:49 - one is for addition so now first line
14:52 - what it should print you chose one so in
14:55 - simple C out you can write down
15:00 - see map that output with your program
15:03 - it's not like that just see the output
15:06 - here this kind of thing I want and start
15:07 - writing the program from the beginning
15:09 - only no you can write down from do I
15:11 - loophole so after that you can write
15:12 - down
15:14 - these header files and all right
15:17 - think the logic according to the output
15:20 - map that thing in your program better is
15:23 - this thing right
15:25 - then you know it will be you will be
15:27 - able to enhance your logic building
15:29 - skills so it should print you chose one
15:31 - and
15:33 - addition this line
15:35 - okay
15:38 - after that it should ask
15:41 - right enter two numbers separated by a
15:44 - space so
15:47 - now if you will enter two number then
15:50 - obviously you will need two variables
15:51 - suppose I am taking a
15:53 - and
15:55 - B
15:57 - but this A and B
15:59 - C red line under under this A and B
16:01 - Because identify p and a is undefined we
16:03 - haven't defined these variables A and B
16:06 - so because this A and B we will just use
16:10 - within this Loop of the body better you
16:13 - can declare this a and
16:16 - B here and obviously we want some like
16:20 - here see some A and B
16:23 - now it should do some I am taking a
16:25 - variable sum is equal to a plus
16:29 - B right so the sum is also undefined so
16:32 - you have to
16:33 - declare some initialize some better to
16:35 - initialize it with 0 so that it will not
16:38 - take any garbage value so we need like
16:40 - this
16:41 - a variable to store subtraction also so
16:44 - sub is equal to 0
16:46 - multiplication is equal to 0 and
16:49 - division equal to zero these four
16:52 - variables also we want
16:54 - now some you have
16:56 - calculated now just print some C out
17:00 - in the output addition is as it is we
17:03 - will write down addition is
17:06 - just
17:08 - the variable and
17:11 - e n d l
17:13 - right
17:14 - so if choice is one these statements
17:17 - would be executed right same thing you
17:21 - have to write on if choice is 2 then 3
17:22 - then 4 same thing right I'm just copying
17:26 - and pasting this thing now
17:28 - if choice is one addition else if
17:30 - because you have to use LC Federal else
17:32 - if choice is 2 you chose to subtraction
17:34 - then again it will ask enter two numbers
17:36 - several by space a b subtraction a minus
17:39 - B and then it will print else if choices
17:40 - three then multiplication lcf choice is
17:43 - 4 then division okay
17:45 - now
17:46 - one more thing else
17:49 - if
17:50 - choices
17:52 - quit for quit choices
17:55 - Choice equal to equal to
17:57 - small cube
17:59 - or logical or
18:02 - Choice equal to equal to capital Q both
18:06 - mean squid either you press small cure
18:08 - capital Q right
18:10 - then it will print simply
18:20 - goodbye
18:22 - okay
18:23 - other than these if you enter anything
18:27 - else simply don't need to write else if
18:30 - now else otherwise any other choice if
18:34 - you give rather than one two three four
18:35 - and Q
18:37 - it should show you a message what wrong
18:39 - choice try again so else
18:43 - C out
18:48 - wrong choice
18:54 - it is same as we write a default in
18:57 - switch case statement try again
18:59 - right
19:00 - now
19:10 - better to write the ndn here also
19:12 - okay
19:14 - now
19:18 - nothing else we want within this Loop
19:20 - now you have to put the condition in
19:22 - this y right
19:24 - so till
19:26 - you don't press small cure capital Q it
19:30 - should run
19:32 - if you have pressed small q it should
19:36 - quit if you have pressed capital Q then
19:38 - also it should quit right now what
19:42 - should be the choice choice
19:45 - not equal to
19:47 - small q
19:51 - and
19:53 - choice
19:54 - not equal to
19:58 - capital Q
20:00 - choice is not equal to small cure
20:01 - capital Q it should run right if choice
20:05 - is small q or capital Q it should quit
20:08 - so obviously this should be the
20:09 - condition but we cannot put logical over
20:11 - here
20:12 - you can try out this thing if you put
20:15 - logical over here then it will not run
20:17 - according to you know whatever we have
20:20 - expected the output
20:22 - so it should be logical and
20:25 - right
20:28 - simply return 0.
20:30 - right and let's save this and
20:36 - I hope now you would have to write down
20:38 - a program
20:40 - let's run this
20:44 - C
20:45 - the menu is here enter your choice one
20:48 - you chose One Edition
20:51 - I'm entering two number two and three
20:53 - addition is five again it will show you
20:55 - the menu I am entering
20:58 - three
20:59 - we chose three multiplication right
21:02 - enter two numbers separated by space
21:04 - four six
21:06 - multiplication and multiplication is
21:07 - twenty four again again suppose I am
21:10 - entering Choice seven
21:12 - wrong choice try again okay I am
21:15 - entering e
21:16 - wrong choice try again I am entering
21:19 - small queue
21:23 - goodbye and exit if you enter Capital
21:26 - code so then also goodbye in it
21:28 - that's it so this was the program I hope
21:31 - you got how to write down this program
21:33 - right
21:35 - so if
21:37 - let's just write down here logical over
21:40 - and try this out you try this out what
21:42 - output we are getting because see you
21:44 - have to put here logical and if you put
21:46 - here logical or in that case what will
21:48 - happen
21:49 - see suppose I am entering choice is a
21:53 - mentoring Choice Q
21:56 - small q right
21:59 - so okay after checking all the effects
22:01 - this fence is true this
22:05 - because choice is small q
22:07 - right
22:08 - so this is true so it will be true so it
22:11 - will uh what print goodbye and then it
22:14 - will check the condition choice not
22:16 - equal to
22:17 - small q but we have entered small q this
22:20 - condition is what
22:22 - false right because we have entered
22:24 - small q and the condition is choice not
22:26 - equal to q but this is Q so this is
22:29 - false okay fine but in logical or we
22:31 - have to check that second condition also
22:34 - choice not equal to capital Q
22:36 - this condition is true the choice is
22:39 - small
22:40 - and we are checking for capital Q so
22:42 - this condition is true so false and true
22:45 - in logical or it will give true so if
22:47 - the condition is true again it will
22:49 - repeat it is not going to end right that
22:52 - is why we put here logical and you can
22:54 - try this out
22:55 - right
22:57 - so I hope you got these two programs how
22:59 - to use do while loop while writing
23:02 - programs and all and the next video
23:04 - we'll see range based for Loops now
23:05 - we'll see in the next video till then
23:07 - bye take care