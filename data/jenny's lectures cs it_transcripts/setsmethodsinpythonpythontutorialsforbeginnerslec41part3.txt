00:00 - so in the series of learning Python
00:01 - programming language we are discussing
00:03 - operations on sets in the previous video
00:04 - we have seen Union and intersection
00:07 - and update operation Union and Union
00:09 - update in the section and intersection
00:11 - update how to modify a set with the help
00:14 - of Union and intersection also right now
00:16 - in this video we're talking about
00:17 - difference and symmetry difference like
00:20 - difference and difference updates
00:21 - symmetric difference and symmetric
00:23 - difference update right so let's see
00:26 - this we'll be taking the same example
00:28 - those set that we have taken in the
00:31 - previous video right okay now this is
00:33 - our file we are having here this set one
00:37 - set two and set three now let's see
00:39 - first of all difference
00:41 - so
00:42 - we have we can do this with both we have
00:45 - a method and we have operator also so
00:47 - with the help of method we'll see we'll
00:48 - do what set one
00:51 - dot difference method difference and in
00:54 - bracket we are suppose passing another
00:56 - set so you same you can call this method
00:58 - on one set and you can
01:00 - pass another set into argument as an
01:03 - argument so let's just print
01:08 - what it will give
01:10 - C so the difference I have told you in
01:14 - the previous video what difference will
01:15 - give set one dot different set to it
01:18 - will give like
01:19 - it's like set 1 minus set two
01:22 - so it will give the item in set one but
01:26 - which are not in set 2.
01:30 - item in set one but not in set two
01:33 - so let's run this then you'll get it
01:36 - better see
01:38 - I told you it will give set of items
01:40 - which are in set one but not in set two
01:43 - Ram
01:45 - is it in set to no so Ram is there sham
01:48 - is also not in set two so sham is their
01:51 - Jenny but Jenny is set to also so it
01:54 - will not give Jenny only give Raman Shah
01:57 - right
01:59 - and with the help of operator also we
02:01 - can do something like this set one
02:05 - minus set 2 that's it and you can print
02:10 - this thing
02:12 - right
02:14 - so let's just comment this out
02:17 - and do this thing so same it will give
02:20 - Raman shyam
02:21 - right but same here both the operand
02:24 - should be set and set but here it is not
02:27 - compulsory set one door difference if
02:30 - you do not pass here set two rather than
02:32 - that you can pass any iterable of values
02:36 - like I am passing this time at Apple and
02:39 - in Tuple I am having values like Mohan
02:43 - and same
02:46 - Shiva
02:48 - okay let's just comment this out so
02:51 - let's run this
02:53 - it will give Ram sham and Jenny
02:55 - because it will give the values in set
02:57 - one but not here
03:01 - Ram is not here it will give this value
03:03 - sham is not here in this set Jenny is
03:06 - not here in this because this is
03:08 - actually a tuple but it will convert
03:09 - this into first set
03:11 - Jenny is also not in this set so it will
03:13 - give Jenny
03:15 - right
03:16 - so for these methods it's what comes
03:19 - with that both the operands should be
03:22 - set like this like in this this and on
03:25 - multiple set also we can do this thing
03:28 - right so if I pass a set one dot
03:31 - difference and I am passing rather than
03:35 - this set 2 comma set three
03:40 - fine let's run this and just update this
03:44 - set then you will get it better in this
03:45 - set I am
03:46 - adding down
03:48 - so what do you think what output you
03:51 - should get before
03:53 - checking the output just pause the video
03:56 - and think what output you will get for
03:58 - this thing
03:59 - now let's run this
04:01 - and we're getting sham only first
04:03 - because it will be performed from left
04:05 - to right so set one door different set
04:07 - two in that case it will give RAM and
04:10 - Sham now on that it will perform with
04:13 - third set so don't different set three
04:17 - so RAM and Sham but Ram is in set three
04:20 - so Ram would also be discarded we are
04:22 - left with Sham only so it will give sham
04:24 - only I hope you got this same set 1
04:26 - minus set to minus set 3 like this we
04:28 - can do now if you want to update the set
04:31 - with the difference update then we have
04:33 - a method difference update to modify
04:36 - your set
04:37 - like we are having you want to modify
04:40 - set one then
04:41 - you just write down that name of that
04:44 - sets at one dot
04:45 - d i double F difference update see you
04:49 - got this method difference update and
04:51 - here I am passing suppose set 2.
04:54 - Now set 1 has been updated so set one if
04:58 - you want to print it will give only RAM
05:00 - and Sham what it will do it will return
05:03 - it will update set one and it will
05:05 - return all the elements which are in set
05:08 - one but not in set two
05:11 - so in set one we have Ramen sham but
05:13 - Jenny it's a in set two so it will not
05:16 - take Jenny
05:17 - right so now set one has been updated if
05:20 - you want to update set two okay you can
05:22 - write down here set two so now this time
05:25 - set 2 has been updated if I print
05:29 - set two
05:30 - see now what output you will get set one
05:33 - is same Jenny RAM and Sham all the three
05:35 - values but set two has been updated Now
05:37 - set two is an empty set because in set
05:40 - two
05:40 - what it will give it will be having all
05:44 - the value set of all the values which
05:46 - are in set two but okay not in set one
05:52 - because set to minus set to difference
05:54 - obviously that would be a null
05:56 - so let's run this again see this time we
05:59 - are getting G and Akash for set two
06:02 - and Akash because Jenny is in set one so
06:04 - it will need not take change okay this
06:07 - is how you can update any set so rather
06:08 - than the setup you can pass any
06:11 - value is also in the form of less dot
06:14 - double with that only it can perform
06:17 - difference update right so this is what
06:19 - difference and difference update now
06:21 - let's see symmetric difference and
06:22 - symmetric difference update okay
06:24 - symmetric difference is what it will
06:26 - return the set of all values which are
06:30 - in either
06:31 - like set 1 and set two set one or set
06:35 - two but not in both
06:38 - in other terms we can write down if you
06:40 - are going to find out symmetric
06:42 - difference of set 1 and set two so set
06:44 - one Union set to minus
06:47 - set 1 in the section set 2 so that is
06:49 - symmetric difference
06:51 - maybe if you are not getting this
06:53 - lecture so you must read about these
06:56 - operations theoretically right in the
06:59 - previous video we have I have discussed
07:00 - this thing with the help of one example
07:03 - so set one dot
07:06 - symmetric difference and I'm calling
07:09 - this one set two
07:11 - okay let's print this what it will give
07:19 - symmetric difference of
07:21 - set 1 and set two
07:26 - C Ram Akash jira and Sham
07:29 - so it will return like set of all the
07:33 - elements either in set one or set two
07:36 - but not in both
07:41 - but Jenny is in both
07:44 - so it will not take Jenny I have told
07:46 - you
07:48 - it is set of all the elements it will
07:50 - return set of all the elements which are
07:51 - either in set one
07:53 - or set to but not in both Jenny is in
07:57 - both the set so it will not take then it
07:59 - will not return Jenny it will return
08:01 - only Ram sham ji and Akash
08:04 - right
08:05 - okay so this is what symmetric
08:07 - difference
08:08 - right so as we have seen like
08:11 - Union you can do Union of set one and
08:13 - set two and minus
08:16 - intersection of set 1 and set two
08:18 - intersection is genuinely so you can
08:20 - minus Jenny from Union of Z1 Z2 so this
08:24 - is symmetric difference
08:26 - now if you want to perform this thing on
08:28 - multiple sets then that is not allowed
08:30 - here set one and set three
08:34 - the symmetric difference please note the
08:36 - sound is not allowed on multiple set if
08:39 - I run this
08:40 - you will get an error systematic
08:42 - difference takes exactly one argument
08:43 - and you have passed two arguments at one
08:46 - and set two so this is not allowed now
08:48 - with the help of operator also we can do
08:51 - this thing so let's comment this out and
08:53 - what is the operator of this set one
08:56 - so
09:00 - this the operator which is on
09:04 - 6 numeric six
09:07 - set two
09:09 - this is what same thing you will get
09:13 - this is symmetric difference of these
09:15 - two set let me just run this and I'll
09:17 - show you what output will get
09:19 - Akash okay but this operator you can
09:22 - apply on multiple set
09:27 - this operator can be applied on multiple
09:29 - set but this method we cannot apply so
09:31 - let's run this again and it will give
09:34 - pradeep Jia so on the three set we have
09:38 - applied this thing okay now if you want
09:42 - to update the set so there is also a
09:46 - if you want to update set 2 Now set to
09:49 - Dot
09:51 - symmetric difference update we have a
09:53 - method here right and here we can pass
09:56 - like set one
09:58 - so what it will do we'll just now we
10:01 - have updated what set to so we'll print
10:04 - set two set one is as it is because
10:07 - symmetric different separate we have
10:08 - called this function on set two so set
10:10 - two has been updated now so it will
10:12 - update set to
10:14 - which is having Elements which are found
10:17 - in both set 1 either in set 1 and set
10:20 - two but not in both right so let's run
10:23 - this now set 2 is Akash ramji and
10:27 - RAM sham janakash with the Jenny is in
10:30 - both
10:31 - so it will not take Jenny
10:33 - either in set one or set to the element
10:36 - but not in both right so this is how you
10:38 - can update the set any set with the help
10:42 - of these methods also right you can
10:45 - update set one also so you can call this
10:47 - method say on set one and here rather
10:50 - than set if you want to pause a pass any
10:53 - other thing like a tuple I want to pass
10:55 - only two names
10:59 - and I'll print
11:01 - set one and set to booth
11:04 - Mohan and Shiva at Apple I am passing
11:07 - so now see set 2 is
11:12 - right setu is
11:15 - and set one is because we have updated
11:18 - set one so set one is now Ram sham Shiva
11:21 - Mohan and Jenny it will update set one
11:25 - having retaining only those items which
11:28 - are either in this set one
11:31 - or here whatever you pass here but not
11:34 - in both so Mohan and Shiva these are not
11:36 - in set one so it will add both Mohan and
11:39 - Shiva here
11:40 - right so this is how you can update any
11:43 - set so that's it about the French and
11:46 - symmetric difference if you are not
11:47 - getting these operations
11:49 - please read out these operations first
11:52 - theoretically understand what is Union
11:53 - what is intersection what is the
11:55 - difference what is semantic difference
11:56 - right
11:57 - using vane diagram and all then
12:00 - get back to this practical type of thing
12:03 - right
12:04 - better to write down first of all set
12:06 - all the sets and with the help of pen
12:09 - and paper with dry run you can say a
12:12 - kind of thing dry run first of all the
12:14 - code
12:15 - see what we are getting why you are
12:16 - getting that output and then run that
12:18 - thing on computer and Telly you are
12:20 - getting the same output or not then you
12:22 - will get it better right
12:24 - so in the next video we will see some
12:26 - more you know about sets like this joint
12:30 - sets and superset proper setup to find
12:32 - out these things so that would be next
12:33 - part of this video right so now it's in
12:37 - the next video then bye take care