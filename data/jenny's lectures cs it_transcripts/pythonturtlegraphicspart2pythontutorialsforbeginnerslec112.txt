00:00 - hey everyone I hope you all are safe and
00:02 - doing good so in the series of learning
00:03 - Python programming language in the
00:04 - previous video we have seen Turtle
00:07 - module what is turtle module what is
00:08 - turtle graphics and how to use it right
00:11 - the basic functions we have used like
00:13 - move the turtle forward backward turn it
00:16 - to Left Right with an angle specified
00:18 - angle and how to control the speed of
00:21 - the turtle these kind of things right
00:23 - that was introduction video right now in
00:27 - that video we haven't used
00:28 - objectoriented approach right now in
00:31 - that casee we have only one Turtle
00:34 - unnamed Turtle object right but now I
00:37 - want on the single screen the one screen
00:39 - only I want two Turtle three Turtle four
00:41 - Turtle more than one Turtle I want then
00:44 - you have to create Turtles right means
00:47 - basically I want to say we will create
00:49 - Turtle
00:51 - objects right for that obviously we need
00:54 - a class and in Turtle module we have a
00:56 - class Turtle but T Capital right right
01:00 - so we can create as many Turtle object
01:02 - as we want so this is kind of we will be
01:04 - using object oriented approach in this
01:07 - video right and that is definitely more
01:09 - powerful and whatever the functions in
01:11 - the turtle that would be here in
01:13 - objected programming approach that would
01:15 - be like methods of a turtle object right
01:20 - like forward backward these would be
01:21 - acted as methods of a turtle object now
01:24 - let's see how to create Turtle objects
01:26 - and few new things we will see like how
01:28 - to set color how to draw some shapes and
01:31 - how to fill color into that shapes these
01:34 - kind of things right so let's see now
01:36 - let's create a new file and that would
01:39 - be Turtle
01:42 - 2 right py let's name it Turtle 2 py now
01:46 - first I'll show you how to import the
01:50 - turtle we have seen this method like
01:51 - import Turtle the name of the module
01:55 - right okay this is fine but now if you
02:00 - want to create object then obviously in
02:02 - this Turtle module we have a class
02:04 - Turtle right so now how to use an object
02:09 - uh how to create an object just the
02:10 - object name suppose I'm taking object
02:12 - name any name like a BC equal
02:16 - to Turtle the name of the class the name
02:19 - of the class is this
02:22 - turtle with the capital but directly we
02:26 - cannot use this if you want to use any
02:29 - name any
02:30 - name any class name any function name
02:32 - method name or anything any property
02:34 - name which is in this module then first
02:35 - of all you have to write down the module
02:37 - name
02:39 - Turtle then dot then whatever thing you
02:43 - want to use then you can use so this is
02:45 - one way right this is how we can use I
02:48 - want to create more object like x y z XY
02:52 - Z equal to same thing you need to write
02:54 - down like turtle dot class name is
02:58 - capital T turtle with capital T like
02:59 - this this right one way is this next way
03:03 - is directly we can use from method from
03:08 - here we can use like
03:10 - from module name is
03:14 - turtle and import directly the class
03:20 - turtle in this case no need to write
03:23 - down this name of the module because
03:25 - directly we have imported the class so
03:29 - no need to write down this turtle turtle
03:32 - if you write down this it will give
03:33 - error see I'll show
03:35 - you the name turtle is not defined this
03:38 - small T because we haven't imported
03:41 - Turtle module from Turtle we have
03:43 - imported specific class Turtle all the
03:46 - methods everything within this class
03:48 - would be imported right so here in this
03:51 - case I think this is easy way right if
03:55 - you want to create more than you
03:57 - know like 10 15 objects or you want to
04:00 - use many methods from this Turtle
04:02 - library then rather than using again
04:05 - Turtle do turtle dot just import the
04:07 - specific thing right one more thing is
04:11 - see let me just show you one more
04:14 - thing which
04:17 - is from
04:20 - Turtle
04:22 - import everything everything means
04:26 - Star
04:28 - right so here if you create a turtle
04:32 - then obviously like ABC is equal to
04:35 - Turtle class name this is the way
04:39 - but in this case if you want to move a
04:42 - turtle forward then you don't need to
04:44 - write down the turtle name do forward
04:47 - simply you can write down the function
04:48 - name forward and distance is suppose 100
04:52 - right let me just run this and show you
04:54 - okay you have to
04:58 - first uh to hold the screen we will use
05:02 - what exit on click method let's run this
05:06 - and
05:07 - see right but the problem in this case
05:10 - is what if you don't know like
05:15 - these these two lines are
05:18 - here here so by looking at these lines
05:21 - can you just tell me what is this
05:23 - forward what is this forward you know we
05:26 - are using this forward for what purpose
05:30 - I don't know by just looking on this
05:32 - because it is not at all
05:33 - expressive so that would be a little bit
05:36 - difficult for us if any other person is
05:38 - going to read her code and for him or
05:40 - her it will be difficult to find out the
05:42 - swore word as for what I don't know I'm
05:44 - using Turtle library or not I don't know
05:46 - right so better to
05:50 - use rather than writing
05:56 - this either this thing because yeah now
05:59 - I know now now directly if you write
06:00 - down forward it will give you error
06:02 - let's run this and see name forward is
06:04 - not defined so forward ABC suppos total
06:09 - name ABC do
06:11 - forward and here we can write down this
06:13 - kind of thing so
06:15 - C
06:18 - right now we know if we know like ABC is
06:21 - a turtle then we know like this ABC is
06:24 - like this forward is for moving the
06:26 - turtle forward right but still a lot
06:30 - more expressive ways rather than this
06:32 - just use
06:33 - import this kind of
06:36 - thing like this we use import the module
06:38 - name then AB is equal to module name dot
06:41 - whatever you want to use so if you want
06:44 - to import more than one module and if in
06:47 - all the two or three modules suppose you
06:49 - are importing two module and in both the
06:51 - modules one function is same having name
06:54 - any name like like
06:57 - display right so now how to you and you
07:01 - are calling both the functions in your
07:03 - program display display so better to
07:06 - write down the module name first like
07:08 - module one do display module two do
07:10 - display so it would be easy for you to
07:11 - identify this display is from module one
07:13 - this display is from module two right so
07:15 - this this this kind of thing this
07:16 - approach is a lot more expressive so
07:18 - better to use this approach if you can
07:23 - right okay
07:26 - now if suppose Alia's name if you want
07:30 - to import give another alas name to this
07:33 - module so we can import like import
07:34 - module name as alas name alas name
07:37 - suppose I'm taking like T so rather than
07:40 - this Turtle now we simply use here
07:42 - T that is also fine this will work fine
07:45 - right so just this is an alas name this
07:48 - thing we generally use when we have a
07:50 - long module
07:52 - name right it's like turtle maybe ABC or
07:57 - maybe underscore some some kind of of
07:59 - name we have like a very long module
08:02 - name we have so rather than writing that
08:04 - mod module name again and again in a
08:06 - program just use an Ali as a short name
08:09 - for that module right so you can use a
08:13 - short name in your program like here we
08:15 - have used t t do turtle not we are not
08:19 - using Turtle right so this is some you
08:22 - can say ways of importing the module
08:24 - different different ways right now let
08:27 - me show you now we have this
08:33 - code let's give a meaningful name here
08:36 - and maybe Tom is equal to one
08:40 - Turtle so here obviously the name of the
08:44 - turtle is to
08:46 - then what this line means first let's
08:50 - run this and I'll show you what is
08:52 - happening
08:56 - here see we are moving the Turtle
08:59 - forward by 100 pixels okay you are
09:01 - getting fine now it's working fine so
09:05 - what is happening in this code we have
09:06 - imported Turtle class just created a
09:09 - turtle object to we are moving this
09:11 - forward then to hold that screen what we
09:14 - are using the module name dot screen dot
09:18 - main Loop now what does this line mean
09:20 - so here this storm dot
09:23 - screen this is an instance of a screen
09:27 - class right we have a class here that is
09:32 - screen if you want to create your own
09:34 - screen then also you can create like S1
09:37 - equal to just name of the class screen
09:40 - that's it
09:41 - right now in this case if you have
09:43 - created your screen so rather than
09:45 - writing this line we can simply use the
09:48 - screen object dot either main Loop or
09:51 - exit on click this is also fine but what
09:54 - does this line mean I haven't created
09:56 - any screen object but directly in this
09:58 - line it will create to do screen means
10:02 - it will create a I'm not creating a
10:05 - screen object explicitly Tom do screen
10:08 - is a instance of the screen
10:10 - class on which the turtle
10:14 - object
10:16 - exist and this is created the screen is
10:18 - created automatically when you create
10:21 - Turtle object you don't need to create
10:23 - screen explicitly it would be created
10:26 - automatically when you create Turtle
10:28 - right
10:29 - and it just we are creating a screen
10:32 - object to to you know call some methods
10:35 - on that screen object this main Loop in
10:38 - Python 3 this main Loop is a method let
10:41 - me just show you if you want to check
10:43 - out you can just go to the python
10:44 - documentation here we have total python
10:46 - documentation and here we have see main
10:49 - Loop I'm going to show you what
10:52 - this what does this
10:55 - mean see it's basically a screen method
10:59 - or screen event main
11:00 - Loop right it it is going to start the
11:04 - event Loop and it is it is going to
11:07 - collect TK inter main Loop function so
11:10 - this screen method implies that the
11:12 - window or the screen is not going to
11:15 - terminate automatically until the user
11:18 - exist on that screen right and this
11:22 - event would be you can say like it gets
11:24 - called whenever the program starts
11:27 - executing right
11:29 - so I just that that is why I was saying
11:31 - like to hold the screen you can use this
11:33 - method you can call this method main
11:35 - Loop right it would not be going to
11:37 - close the terminate or close the screen
11:39 - automatically if you call this method
11:42 - fine or we have another method also done
11:45 - but as I told you this is a screen
11:47 - method main
11:48 - Loop right so obviously we are creating
11:51 - a screen object and then we call Main
11:54 - Loop right can I call this on this
12:00 - Tom do main Loop let's run this see this
12:04 - Turtle object has no attribute main Loop
12:08 - this stor is Turtle object and this is
12:11 - not having any main Loop method right
12:14 - this main Loop method is for screen it
12:17 - is screen method to to call this method
12:19 - you have to create object of a screen so
12:22 - that's why I'm using like Tom do
12:25 - screen it will create a screen object
12:28 - right or second way I have also told you
12:30 - like just create screen object S1 and S1
12:33 - do exit on click or you can write down
12:35 - here S1 do main
12:37 - Loop this is also here right let's just
12:41 - comment out this thing and it will work
12:44 - fine so see there are multiple ways of
12:47 - doing one thing here I'm just trying my
12:50 - best to tell you every possible way but
12:53 - you have to explore these things now
12:55 - let's use color we have two thing like
13:00 - we have method pen color fill color and
13:02 - one is color first we'll use pen color
13:06 - actually right
13:08 - so let's create screen object we have
13:11 - created Turtle object we have created
13:13 - right now I'm going to change the color
13:16 - of I'm going to change the pen color
13:19 - right so Tom
13:21 - dot we have a color pen color and just
13:25 - give here like maybe I'm uh giving
13:30 - red or first let's just change the shape
13:35 - as well just to you know get a feeling
13:37 - of using Turtle Graphics shape to Turtle
13:41 - let's run this and see pen color means
13:43 - outside boundary of the turtle is now
13:45 - red otherwise it's black right so and if
13:50 - I use let me just show you first what
13:53 - this pen color means here we have in
13:56 - Python documentation just go to pen
13:58 - color and it will accept variable
14:00 - arguments see estri cars right it's
14:03 - going to reset or set the pen color if
14:07 - you use simply the pen color this
14:10 - function then it will return the current
14:12 - pen color let me just show you if I use
14:15 - simply if I
14:16 - print for this object what is the pen
14:24 - color let's run
14:27 - this and see it will print the pen color
14:30 - is red because we have changed the color
14:33 - to Red by default it was black
14:36 - right and you can see like pen color and
14:39 - in bracket you can give any color string
14:41 - so this will set the pen color to
14:42 - whatever string you will give now but
14:44 - what color we can give like red green
14:46 - pink we don't know how many colors how
14:49 - would I know so see this is going to
14:53 - which is a TK color specification string
14:55 - so basically it is using the TK color
14:58 - specif
14:59 - ification right such as red yellow and
15:03 - or in this format also like RGB format
15:05 - also we can give the color so let's just
15:06 - search this what is this TK color
15:11 - specification just first click on the
15:13 - first thing and
15:15 - see these are the name of the
15:18 - colors with their RGB
15:21 - value as you can see
15:23 - here so these many colors you can write
15:27 - down
15:31 - right from here you can take any color
15:33 - you can pick any color or you can take
15:34 - any this RGB configuration this also you
15:36 - can write now right so I hope you got
15:40 - now the list of the colors you can use
15:43 - right now one more thing is we have a
15:46 - fill color as well Tom
15:48 - dot fill color see as you can see fill
15:51 - color and there also same like I'm
15:54 - giving Here Pink or rather than Pink
15:58 - Just give like maybe
16:00 - green let's run
16:03 - this see now outside the boundary of the
16:07 - turtle the pen color is red but inside
16:10 - fill color is what this is green if you
16:15 - want to check out what is this fill
16:16 - color then we
16:19 - have see the fill color it it is going
16:21 - to return or set the fill
16:26 - color so in the in these for input
16:29 - format we can use this fill color we can
16:32 - give the color string or we can give the
16:34 - RGB combination or we can use it like
16:38 - this also it is going to return whatever
16:40 - the fill color is right so you have to
16:43 - use these things now let's come to
16:47 - a we have a color method as well so Tom
16:51 - do simple color and here I'm using
16:55 - suppose red just comment out the these
16:58 - two line and let's see the difference
17:00 - let's comment out these two lines and
17:02 - simply I'm using color right and just
17:05 - delete this line
17:08 - also color is red let's run this see the
17:13 - color of this turtle is now
17:15 - red and red one more I'm giving like
17:21 - green so let's run this so This output
17:25 - is same as we have used these two lines
17:26 - or maybe maybe you are thinking now the
17:29 - line because we have changed the pen
17:31 - color right but this line is still black
17:34 - why so the problem is see I forgot to
17:38 - tell you this thing first we have
17:40 - forwarded this total 100 pixels and then
17:42 - we are changing the colors right so the
17:46 - exact let's just comment out this thing
17:49 - and just Tom dot pen color is red
17:52 - but you have to use this before moving
17:57 - the turtle forward
17:59 - then only you will get red line see now
18:01 - you're getting red line right I hope I'm
18:04 - I'm sure you will be having this St
18:06 - definitely in your mind like why we have
18:08 - changed the pen color definitely if you
18:09 - have a red pen whatever you will write
18:11 - that would be in red now right but I
18:13 - have changed the pen color to red but
18:15 - still that line was black this was the
18:17 - reason right because we have moved the
18:19 - turtle first forward 100 pixel then we
18:22 - were changing the color so first change
18:24 - the pen color then move
18:26 - the uh you can say turtle right so let's
18:30 - let's uh write down this line also here
18:34 - before this thing let's run this again
18:37 - see red pen color is red out outside
18:41 - boundary of the Turtle is red the line
18:42 - or whatever shape you will draw would be
18:44 - in red and the fill color is green right
18:48 - now rather than these two line we
18:51 - have one method color which will
18:55 - do the task of
18:59 - both pen color and fill color so Tom dot
19:04 - color let me just show you in
19:05 - documentation what is this color see it
19:07 - will return or set pen color and fill
19:11 - color so first thing see color uh if you
19:16 - write down simply the color and nothing
19:19 - will write here then it will return the
19:20 - current pen color and current fill color
19:22 - as a pair of color combination color
19:24 - specification string as you know tles as
19:28 - return by pen color and fill color so
19:30 - rather than using pen color fill color
19:32 - different different two methods just use
19:34 - color the first would be pen color the
19:38 - second whatever you will write the color
19:40 - that would be fill color first pen color
19:44 - second argument second color would be
19:46 - fill color right if I have a shape like
19:49 - I want to draw a circle I want to fill
19:51 - that circle with a red color but I want
19:53 - to fill that shape so first let's create
19:57 - a circle
19:59 - what is the we have used what is the
20:03 - method Circle and they supposed to give
20:05 - 100 this is the uh What uh radius I want
20:10 - to get so rather than moving this circle
20:21 - forward let's run this see so see this
20:25 - is the pen color is red so boundary is
20:27 - red Turtle fill color is green so Turtle
20:30 - within Turtle we have green but I want
20:32 - to fill the circle as well whatever
20:33 - shape I'll create I want to fill that
20:35 - shape also I want to fill the shape with
20:37 - green color or pink color suppose right
20:40 - or black color so for that also we have
20:43 - two things begin fill and end fill
20:47 - so whenever you create a shape before
20:50 - creating the shape you have to
20:53 - call begin fill right then just create
20:57 - the shap shape and after creating the
21:00 - shape just call and
21:03 - fill these two things we have let's run
21:09 - this see because fill color is why this
21:13 - green because fill color is green pen
21:17 - color is red fill color is green that is
21:20 - why circle is green right if I change
21:24 - the fill color
21:26 - to like we can say pink let's run
21:33 - this
21:35 - see the boundary was red and this is
21:38 - pink fill color is pink this is how you
21:41 - can fill the shape begin fill end fill
21:43 - so these thing also you can see here
21:45 - begin fill to be just called before
21:47 - drawing a shape and fill the shape drawn
21:50 - after the Lo last go to begin F right so
21:55 - see you can see that here the example as
21:58 - as well right okay now I want to you
22:02 - know we have one more thing also pen up
22:05 - and down that these thing are also
22:07 - important so after creating this circle
22:09 - I want to create one more
22:11 - Circle right so one Circle first after
22:17 - ending the circle I want to move
22:21 - this Tom object forward with or you can
22:26 - say down
22:29 - with 100 steps or 100 pixels so first
22:32 - you have to turn that head of the turtle
22:36 - to right right with 90° so Tom dot right
22:40 - or RT angle is
22:44 - 90° right now I just want to move this
22:48 - to in that direction only
22:50 - forward like uh 100 100 pixels let's run
22:54 - this and see what we
22:56 - getting
22:58 - okay here I want to draw one more Circle
23:01 - but okay let's draw first then I'll show
23:05 - you let's take this green only because
23:09 - the combination of red and pink is not
23:10 - looking good I guess so let's create one
23:14 - more Circle here Tom dot Circle or any
23:17 - other square or any other shape also you
23:20 - can create but circle is like it's easy
23:22 - to create a circle that is why I'm
23:23 - taking this example so Circle 50 let's
23:26 - run this
23:33 - right the circle
23:35 - is of radius 50 this is of 100 right so
23:39 - from here this is 50 it will take and it
23:42 - will it is going to draw right but this
23:46 - line I don't want this line here but
23:49 - whenever you move this Turtle forward
23:51 - definitely it is going to draw so what
23:52 - we can see see when you you know going
23:56 - to up your pen on this like I'm writing
23:59 - something when I'm going to pull up my
24:02 - pen and I'm
24:04 - just moving forward so definitely it is
24:08 - not going to draw a line and then to
24:10 - draw a line you have to put your pen
24:12 - down and then draw right so same thing
24:15 - same method we have pen up pen down here
24:19 - so what we can
24:21 - do after turning to the right 90° first
24:25 - we can just do pen up so we have a
24:28 - method Tom dot pen
24:31 - up right then move this 100 pixel then
24:37 - pen down because obviously to draw a
24:40 - circle you have to down your pen on the
24:43 - paper so same pen
24:44 - down pen down and then draw the circle
24:47 - let's run this now see the difference
24:50 - here
24:54 - right so this also we have like pen up
24:57 - anden pen P down here you can check out
25:00 - see we have the pen control pen down PD
25:03 - or down you can use pull the pen down it
25:06 - would be drawing while moving for pen up
25:08 - we can use either pen up or simply pu or
25:10 - simply up right pulls the pen up and no
25:14 - drawing while moving right you can
25:17 - change pen size as well right just have
25:19 - to give the width with a positive number
25:23 - so it is going to obviously set the
25:25 - thickness it is going to increase the
25:27 - thickness of then pen if if you uh just
25:31 - after drawing this
25:33 - circle then before moving this second
25:37 - Circle I want to increase the size so
25:40 - pen
25:42 - size just give the width suppose I'm
25:45 - giving 10 I don't know how it is going
25:48 - to you know look
25:52 - see pen size it's going to you know
25:55 - increase the thickness here whatever you
25:57 - will will give right so you can change
25:59 - the pen size as
26:01 - well now your assignment is you have to
26:04 - fill the second Circle as well but you
26:08 - have to fill that second circle with
26:11 - orange color right so this is your
26:13 - assignment you have to write down this
26:15 - thing in comment section that logic
26:18 - right okay now if if uh the thing is
26:22 - supposed I want to change the size I
26:25 - want to move our Turtle any specific
26:28 - position to any specific position so for
26:30 - that we have a function go to Method go
26:33 - to a method go to or you can use go to
26:37 - or you can write here set post or you
26:38 - can write here set position and you have
26:40 - to give the coordinate XY
26:42 - coordinate X can be a simp simple number
26:45 - or a pair of number or Y can be a number
26:47 - or nothing if you don't give any y
26:50 - coordinate then X must be a pair of two
26:53 - coordinate right let's run this and uh
26:57 - first
26:58 - let's find out after drawing the second
27:00 - Circle let's find out the position XY
27:02 - coordinate of our Turtle so how to find
27:05 - out we have
27:09 - a method POS or position either you can
27:12 - use POS or position simply I'm using POS
27:16 - so I'm going to print whatever the
27:18 - position of
27:20 - my
27:22 - turtle let's run this after drawing the
27:26 - second Circle
27:30 - see the position is 0 0 first x
27:34 - coordinate is zero and y coordinate is-
27:37 - 100 I hope you got by default the that
27:41 - we can say total is here and this
27:44 - coordinate in the center is x is 0 Y is
27:47 - 0 right now still now we have moved from
27:52 - here to here so obviously X is still
27:55 - zero but horizontal AIS is X and this
27:59 - vertical is y so towards upward it's
28:03 - positive y downwards it's negative y so
28:06 - we have moved negative towards negative
28:09 - y direction how many steps 100 pixel
28:13 - right so that is why this Y is negative
28:16 - if you want want to move this Turtle
28:17 - directly to anywhere so obviously we can
28:20 - move we I have told you some method like
28:24 - U dot go
28:26 - to go to I want to move this to uh X is
28:31 - negative - 100 y would be same -
28:36 - 100 both - 100 - 100 let's run this and
28:40 - see what you're
28:45 - getting so X is - 100 so it is a
28:51 - horizontal line towards this side it was
28:54 - plus but towards this side it is minus 6
28:56 - so we have moved - 100 and Y is - 100 so
29:00 - Y is same - 100 I hope you are aware
29:02 - about the coordinate system X Y kind of
29:04 - thing right see this we have this
29:08 - horizontal this is X and this this is
29:12 - vertical is y if you move in this
29:14 - direction means this is positive X this
29:17 - direction is netive X right this is
29:21 - positive Y and this direction is Nega
29:25 - y so this is X this is why I hope you
29:28 - got a little bit of this coordinate
29:30 - system you have a knowledge of this
29:31 - thing
29:33 - right and also we have show turtle and
29:37 - high Turtle method if you want to hide
29:39 - your turtle obviously we have this thing
29:42 - so after you know completing the first
29:45 - circle before drawing the second Circle
29:49 - right I just want to
29:51 - hide my turtle so just call this High
29:54 - Turtle that's it let's run this and I'll
29:56 - show you what is happening so first
29:58 - Circle it is showing the turtle
30:01 - while creating second Circle the turtle
30:05 - was invisible so we have hit the turtle
30:09 - right now see there's no turtle on the
30:11 - screen if you want to show then simply
30:14 - you can use here after high Turtle after
30:17 - this go to Simply here at last I want to
30:20 - show where is my turtle so I want to
30:22 - just I just call this thing show
30:25 - Turtle that's it
30:27 - see you can see the difference here no
30:31 - turtle and at last it is going to show
30:33 - the turtle
30:35 - right now if you want to check like the
30:38 - turtle is the pen down is not right then
30:42 - obviously if there is a big application
30:44 - and before drawing something you want to
30:46 - check out like the pen is down or not
30:48 - because if pen is not down then
30:49 - obviously you can't create any shape so
30:52 - there for that also we have a method so
30:56 - see if after pen down if after pen up
30:59 - you want to check Tom dot is
31:04 - down simply so it will return true if
31:07 - the pen is down otherwise it will return
31:10 - false so what do you think what here it
31:11 - will return let me know in comment
31:13 - section let's run
31:18 - this see
31:20 - false it is returning false
31:24 - because after pen
31:28 - up obviously is down means pen was not
31:31 - down so it is returning false and then
31:34 - if rather than here after pen down if
31:38 - you want to
31:44 - print if you want to check is this down
31:47 - or not P down or not so for that
31:49 - definitely it will return true see it is
31:52 - going to return true right and the
31:55 - turtle is visible or not if you want to
31:57 - to check then there is also a method is
31:59 - visible right so after hiding Turtle if
32:01 - you call Tom dot is visible this method
32:05 - then definitely it is going to print
32:07 - false because you have hit the
32:12 - turtle print it is visible or not so
32:15 - definitely it will print
32:20 - false and see it is returning false
32:24 - because after hiding the turtle here
32:27 - High Turtle after that I'm using is
32:29 - visible or not definitely it's not
32:30 - visible so it is going to show if turtle
32:33 - is visible if not hidden then it will
32:35 - return true if it is hidden then it will
32:37 - return false so these are some you can
32:39 - say few um very common methods we'll be
32:43 - using there are many methods that you
32:46 - can go to the python documentation and
32:47 - you can go and search and you just try
32:49 - out different different methods okay so
32:51 - one assignment for you is you have to
32:53 - draw these
32:54 - shapes here like a Circle then a square
32:58 - then in in this corner triangle and in
33:02 - this corner it's a pentagon with
33:04 - different different colors yellow red
33:06 - green and sky
33:08 - blue fine so this is for your assignment
33:11 - you have to do this and okay you can
33:14 - just write down that thing that code in
33:16 - comment section right or you can just
33:18 - send me on my Instagram account as a
33:20 - message the code fine so now I guess
33:23 - that's it for this video now I'll see
33:25 - you in the next tutorial then by bye
33:26 - take care