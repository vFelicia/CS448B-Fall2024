00:00 - here the numbers are not compared like
00:02 - the C we have done in other another
00:04 - sorting algorithm suppose I'm taking 15
00:06 - and 10 then I'm going to compare this 15
00:09 - with me with this 10 his 15 greater than
00:11 - 10 yes then do swapping something like
00:13 - this see we are not going to do any
00:15 - comparison here between the numbers
00:17 - given right so now if no comparison is
00:20 - there then how the data is to be sorted
00:21 - see data is to be sorted here desert by
00:24 - desert we are going to solve the data
00:26 - according to the place value of the
00:28 - desert but you can say the position of
00:30 - the desert in that number see suppose we
00:33 - are taking a number 4 to 1 right so this
00:37 - is what C place value is what here we
00:41 - have this place value of this one is
00:44 - once place value of 2 is tens place
00:47 - value of this 4 is hundreds fine and
00:50 - face value of this one is 1 face value
00:52 - of this is to face value of this is for
00:54 - eye I hope you know what is face value
00:56 - and place value right so we are going to
00:58 - start from the least significant digit
01:01 - least significant visitors this side and
01:04 - this is the most significant desert so I
01:07 - am going to start the sorting from this
01:11 - least significant desert and we're going
01:13 - to move towards most significant digit
01:16 - right desert by desert the data is to be
01:20 - sorted so see how that it has to be
01:23 - sorted digit by digit let us take this
01:25 - example you are going to solve this one
01:27 - we are going to we are going to solve
01:28 - this data using radix sort
01:30 - fine see the sorting algorithm we have
01:33 - discussed bubble quick merge selection
01:36 - insertion those are comparison based
01:37 - sorting and the best best time
01:41 - complexity for those comparison based
01:43 - algorithm is order of n log N or you can
01:47 - say Omega n log n they cannot do better
01:49 - than this so after sorting we we are
01:51 - also going to see what is the time
01:53 - complexity for this radix sort
01:54 - fine see here the first step in this
01:57 - sorting algorithm is out of these given
02:00 - numbers find out the maximum number fine
02:04 - now see by looking at these number we
02:06 - can see the maximum number is what 8 0 2
02:12 - second step is calculate how many visits
02:15 - are there in this maximum number how
02:17 - many deserts are there one two and three
02:20 - now third step is you are going to make
02:23 - all these numbers or three-digit number
02:26 - right now how we are going to make you
02:29 - are going to put zeros now where where
02:32 - you are going to put a zero suppose this
02:34 - has the number this is two digit number
02:36 - one and two now where you are going to
02:38 - put a zero to make it a three-digit
02:40 - number you cannot put a zero here
02:42 - because if you put a zero here then it
02:45 - will become 150 and the number is 15
02:47 - fine so you cannot change the number the
02:51 - value of this number that is why we are
02:53 - going to put a zero to the hell this
02:56 - side now all the numbers are three-digit
02:58 - number
02:58 - fine here and X means basically the base
03:01 - so here I am dealing with decimal
03:04 - numbers so base for decimal number is 10
03:07 - right so that is why I am going to take
03:10 - 10 buckets this is also known as bucket
03:13 - sorting so here we are going to take 10
03:16 - but 10 buckets from 0 to 9 fine see this
03:20 - sorting algorithm is also used to sort
03:22 - strings so you can say alphabets in that
03:25 - case the base is 26 for alphabets
03:28 - so we are going to take buckets from 0
03:30 - to 25 right in that case how we are
03:34 - going to sort suppose I am going to take
03:36 - two names one is Jenny and one is Jia so
03:41 - in that case we are going to start from
03:42 - here but you can say from MSB you can
03:47 - say from the most significant bit right
03:50 - so we are compared with this with this
03:52 - both are J then fine again we are going
03:56 - to compare second here we have a here we
03:58 - have I so he comes first then I so this
04:01 - is this Jenny comes first today Jia
04:04 - right
04:05 - in case of numbers we are going to we
04:07 - are going to check from this side from
04:09 - the least significant digit right now
04:13 - see so now we are going to take 10
04:15 - buckets ranging from 0 to 9 right and
04:18 - now we are going to put these numbers
04:20 - into these buckets now the next step is
04:23 - how we are
04:24 - to fill these buckets see this is pass
04:27 - one so in past one we are going to salt
04:30 - we are going to sort these numbers
04:32 - according to which visit the least
04:34 - significant digit and the least
04:36 - significant digit is this one so we are
04:40 - going to check this desert of every
04:42 - number right and see so first of all
04:48 - take this number the least significant
04:49 - desert is five so now we are going to
04:53 - put this number in which bucket in fifth
04:56 - bucket the number the bucket having
04:58 - number five so here I am going to put
05:01 - this one zero one five next number is
05:04 - zero zero one
05:05 - now we are sorting the data according to
05:06 - this this visit so I am just going to
05:09 - check this desert here we have one so I
05:12 - am going to put this in bucket 1 here we
05:15 - have one so I'm going to put again this
05:17 - in one here we have zero so we are going
05:21 - to put this in zero here we have two in
05:24 - bucket two here we have two in bucket
05:27 - two here we have three so we are going
05:30 - to put this in bucket three here we have
05:32 - zero again we are going to put this in
05:34 - bucket zero the nine we are going to put
05:37 - this in ninth bucket and then one we are
05:40 - going to put this in zero one one one
05:42 - bucket right now next step is we are
05:47 - going to remove the data from this these
05:49 - buckets and how starting from zero the
05:52 - bucket now say this bucket is having two
05:55 - numbers now which number you are going
05:57 - to remove first this number the first
06:00 - number right not this number you
06:03 - remember you are going to move this
06:04 - number first so in one bucket also from
06:06 - first this then this then this
06:09 - now remove one by one from data from all
06:11 - buckets and after pass one after pass
06:13 - one the data is something like this
06:15 - first of all remove this one so the data
06:21 - is 0 1 0 then 90 then 0 0 1 then you
06:28 - remove 321 then 0 1 1 now after first
06:33 - pass the data is this one so here one
06:36 - more thing you have to
06:37 - here the passes would be same as number
06:40 - of visits in the maximum number so
06:43 - maximum number is a 2-0 - number of
06:44 - visits are three so here we have three
06:46 - passes so after pass one the data is
06:48 - something like this
06:49 - now pass two in past two we are going to
06:52 - sort the data according to which does it
06:54 - distill it the second one right the
06:59 - desert of it which is at tenth place we
07:01 - have already sorted the data coding to
07:03 - this visit the desert a bit which is at
07:05 - one place right now this does it now
07:09 - again we are going to take 10 buckets
07:13 - now repeat the same step check first
07:16 - number this 1 0 1 0 now we are going to
07:19 - take which it is it this one the desert
07:22 - which is at 10th place now here we have
07:24 - 1 so we are going to put this in this
07:26 - bucket bucket number 1 we have 9 so we
07:31 - are going to put this in this bucket
07:32 - here we have 0 0 1 in 0th bucket 3 2 1 2
07:37 - second bucket 0 1 1 in one bucket 8 0 2
07:42 - 0 is there so here 2 0 2 here also we
07:45 - have 0 here we have 2 1 2 3 here we have
07:50 - 1 0 1 5 and here we have 0 1 0 9 these
07:56 - buckets are in pretty fine so that's
07:58 - fine now next step is what you are going
08:00 - to remove the data from these buckets
08:02 - and how from the starting bucket and
08:04 - from starting book at all so if many
08:06 - numbers are then then we are going to
08:07 - remove the first number first right so
08:10 - after pass - this is passed - so after
08:13 - pass - the data is something like this
08:16 - remove this 1 0 0 1 8 0 2 0 0 2 1 0 9
08:24 - here we have 0 1 0 so after pass to the
08:28 - data is this one now the last pass that
08:33 - is the third pass in that pass we're
08:35 - going to sort the data according to
08:36 - which visit the third one this one the
08:40 - desert which is at hundredth place right
08:43 - so now repeat the same step we are going
08:45 - to take again 10 buckets
08:50 - this is past 3:00 again we are going to
08:51 - take 10 buckets ranging from zero to
08:53 - nine again we are going to fill these
08:55 - buckets half so these are the number
08:57 - after past two so now we are going to
08:59 - see which digit to that third one third
09:01 - one so now here we have zero where we
09:04 - are going to put this in 0th bucket here
09:06 - we have eight eight zero two zero zero
09:11 - zero two one zero nine zero one zero
09:15 - here we have again zero one one zero one
09:18 - five three two one three two one one two
09:22 - three
09:23 - so does it is one here we have zero zero
09:27 - nine zero right so these are the buckets
09:31 - now now next step is what you are going
09:33 - to remove data from these buckets right
09:35 - and remove means we are going to store
09:37 - the data in an output array so here is
09:39 - zero zero one sugar you can write one
09:41 - here we have two here we have ten eleven
09:46 - fifteen ninety one zero nine one two
09:52 - three three two one and finally a 2-0 -
10:01 - so this is the data after pass three so
10:04 - as you can see this is the sorted data
10:07 - now so here we have removed the extra
10:09 - zeros we have put to make the numbers
10:11 - three-digit number right so this is now
10:14 - the sorted data as you can see how many
10:16 - passes are required three means the
10:19 - number of deserts in the maximum number
10:21 - those number of passes would be required
10:24 - here we have three deserts so three
10:25 - passes would be required so this is how
10:27 - radix sort will sort the data
10:29 - see this reddick sort use what count
10:32 - sold as a subroutine so you know what is
10:35 - a count sort right and if you say the
10:39 - running time complexity for this sort is
10:42 - what you can write order of B into n
10:47 - plus B now here see these what number of
10:52 - digits in maximum number number of
10:55 - digits are three so here for each digit
10:58 - we are going to repeat the steps right
11:00 - first of all for this it is it
11:02 - understand this how many times three
11:04 - times you have repeated so here we are
11:05 - taking B into n is the number of how
11:09 - many numbers are there plus B is what
11:12 - base what is base here because we are
11:15 - going to take buckets equal to the base
11:19 - here base is 10 so we are going to take
11:20 - 10 buckets in alphabets basis to
11:23 - intersect so in that case we will take
11:25 - 26 buckets from 0 to 25 that is why I am
11:28 - going to take here BN plus B and D is
11:31 - number of deserts so we are going to
11:34 - repeat the steps here for 3 times the
11:38 - number of digits times right so this is
11:41 - the time complexity so this is all about
11:43 - bucket salt or you can say this radix
11:45 - sort
11:46 - in next video we are going to discuss
11:47 - shell sorting so till then bye bye I
11:50 - take