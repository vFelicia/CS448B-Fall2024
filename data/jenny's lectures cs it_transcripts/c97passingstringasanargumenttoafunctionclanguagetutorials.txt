00:00 - so in the series of learning c
00:01 - programming we are discussing functions
00:02 - in c in the previous video we have
00:04 - discussed how to pass an array as an
00:06 - argument to a function in this video we
00:08 - will discuss how to pass a string as an
00:10 - argument to a function or you can have
00:12 - to pass a character array as an argument
00:14 - like
00:15 - what is the string like if i want to
00:16 - pass my name
00:19 - it's nothing but but a string or you can
00:21 - say character array as an argument right
00:24 - so it's character array it means all the
00:26 - rules should be same
00:28 - as we we have discussed how to pass
00:31 - array as an argument rules should be
00:33 - same right now how to pass that will
00:35 - discuss here and then you know with the
00:37 - proper program and then i'll show you
00:39 - practical also that program on my laptop
00:41 - and we can also pass array of strings
00:43 - that is a different concept so that
00:44 - we'll discuss in a next video right but
00:47 - before that just want to tell you one
00:48 - thing if you want to build a great
00:50 - career in software development then you
00:52 - must think about the aspects like what's
00:53 - trending in the industry the questions
00:55 - being asked in the interviews how to
00:57 - improve your courtship ranking what is
00:58 - the thought process behind the great
01:00 - application like zometo ola so here an
01:02 - academy brings your platform where you
01:04 - can get access to weekly shows which you
01:06 - can watch live and the host of these
01:08 - shows are working in some of the top
01:09 - companies like linkedin google amazon
01:12 - and our seven star coders on code chef
01:14 - and industry experts with years of
01:16 - experience so they'll be covering the
01:18 - content which would be really helpful
01:20 - for your career like in the live
01:22 - episodes you will get an opportunity to
01:24 - ask take a
01:25 - about the top 20 questions being asked
01:27 - and the industry leaders about the
01:29 - recruitment process in top startups and
01:31 - mncs what is the eligibility criteria
01:33 - and how to apply for them and you can
01:35 - also get your resume reviewed by the
01:37 - experts not only this you can also
01:39 - participate into mock interviews and you
01:41 - can also learn courses on programming
01:43 - languages uh
01:44 - blockchain and crypto cloud computing
01:46 - tech aspects of digital marketing data
01:48 - analytics and there's one more show in
01:50 - which the host will walk through the top
01:52 - interview questions usually asked for
01:54 - the companies like apple netflix google
01:56 - amazon linkedin and how to solve them
01:59 - and respond in a way that you know helps
02:02 - you in cracking the interview and you
02:04 - can also get a chance to come live with
02:06 - the host and you know get your query
02:07 - resolved on the spot so if you are a
02:09 - college student and you know want to get
02:11 - placed in the top companies or if you
02:13 - are a working professional and want to
02:15 - switch then this show is definitely for
02:17 - you so the detail of the show and the
02:19 - batch you will find in the link that
02:21 - i'll put in the description box of this
02:22 - video and don't forget to use my code
02:24 - jkl10 to get 10 extra discount on your
02:27 - paid subscription so now let's discuss
02:28 - how to pass a string as an argument to a
02:30 - function so rules would be same that we
02:32 - have discussed when we are passing array
02:34 - as an argument because string is nothing
02:36 - but but a character array so rules
02:38 - should be same right so now we'll take a
02:40 - simple example first just to display the
02:42 - string we'll pass a string and that will
02:44 - display the string in that function only
02:47 - right we'll call that function using you
02:49 - know a passing string as an argument so
02:51 - i am taking one function display
02:54 - see we are going to just pass the string
02:57 - we are you know i am not supposed that
02:59 - the function should return something so
03:01 - the return type is void and suppose name
03:03 - is display
03:06 - and what
03:07 - we will pass a character array
03:10 - so just
03:11 - write down in the bracket this thing
03:13 - data type and this is what like it's an
03:15 - array or you can write down this also
03:17 - cat
03:18 - s freak this also means that it would be
03:20 - a generally we you know
03:22 - declare string something like this this
03:24 - also right or you can write something
03:26 - like this
03:27 - fine
03:28 - now
03:29 - suppose in main function what
03:31 - i'm going to do i'm taking a string
03:35 - cat str
03:38 - and here only i am taking jenny
03:41 - or you can ask from the user also
03:43 - it's up to you like printf interesting
03:45 - and scanf percentage s and address of
03:48 - you know this str
03:50 - but i'm initializing at compile time
03:52 - only and i want to call this function
03:54 - display and just pass how you will pass
03:57 - just write down the name of the string
03:58 - str
04:00 - that's it
04:02 - now how to define this function
04:05 - void
04:06 - name
04:07 - display and here
04:09 - obviously we have to take a string or
04:11 - you can say character array to accept
04:13 - this as an argument right but see either
04:16 - i am taking care str name can be same or
04:18 - different
04:20 - str no need to specify the size here
04:23 - right
04:25 - now here i want to just i want to
04:27 - display like printf
04:29 - and string is percentage s and the
04:32 - string is
04:33 - what str
04:37 - that's it
04:38 - right so here what does this mean it's
04:41 - not like that the complete string jenny
04:42 - would be copied here one copy would be
04:44 - here one copy would be would be here no
04:47 - it is what call by reference
04:49 - string would also be passed as call by
04:50 - reference so what str means star
04:53 - contains the base address of the
04:55 - character array or you can say the
04:56 - address of the first character
04:59 - so that address would be passed so this
05:01 - will act as
05:02 - what compiler will interpret as can
05:04 - asterisk str means str is a pointer to
05:08 - this string so ultimately it is called
05:11 - by reference it's not a duplicate copy
05:13 - it's not a copy of this string
05:16 - right
05:17 - so now i guess no need to explain this
05:19 - or whenever the control you know when
05:21 - you execute this control will go here
05:23 - now we are taking one string so what
05:26 - in main one in step one frame would be
05:29 - for this main function
05:31 - right and the activation record of this
05:33 - main function would be there so here we
05:35 - are having what this str
05:38 - as a pointer and here i am taking what
05:42 - j e double n y jenny so this str would
05:45 - point to here suppose address is
05:47 - 100 1 0 1 1 0 2 1 0 3 1 0 4 because
05:50 - character will take one byte only so
05:52 - here we have 100
05:54 - in this now in display str we are going
05:56 - to pass str so means it is going to pass
05:58 - the address so here
06:00 - in display
06:01 - whenever it will be called here second
06:03 - frame would be for
06:05 - display function here we have
06:08 - one pointer that is str and here at 100
06:12 - would be copied so now this str would
06:14 - also point to this j right or you can
06:16 - take str1 any different name and just
06:19 - print the string percentages str
06:22 - i hope you know how to you know
06:24 - this process how to you know print a
06:27 - string that we have discussed when we
06:28 - were discussing another the concept
06:30 - strings in c so you can watch out that
06:32 - video in the c playlist the link of that
06:34 - place i'll put in the description below
06:36 - this video so now jenny would be printed
06:39 - right
06:39 - and if you want to modify something in
06:41 - this journey here or suppose i just
06:44 - i'll modify this
06:46 - program we are going to find out the
06:47 - length of the string
06:50 - we will pass the string
06:52 - and we will find out the length of the
06:53 - string right or suppose you want to pass
06:55 - two strings
06:57 - lets take two string character one
06:59 - and one is
07:01 - character 1 and character
07:04 - this string is 2 so here i am passing
07:06 - what
07:08 - jenny and here i am passing
07:11 - khatri 2 string you want to pass
07:14 - right
07:15 - so str1 comma str
07:19 - 2
07:20 - or the function name i'm taking modify
07:25 - right
07:26 - over here also i'm taking
07:29 - modify
07:31 - or i want a program like
07:33 - for one string i want to find out length
07:35 - of the string but for this string i want
07:37 - to modify the string
07:38 - right means suppose rather than this k
07:42 - i want here it should be
07:45 - it's some small k
07:47 - so i want to replace it with capital k
07:50 - just this k only or you can replace it
07:52 - with any other letter also like a or any
07:55 - other letter
07:56 - so here
07:57 - in
07:59 - the this declaration also means
08:02 - we have to specify like we want to pass
08:04 - two string so here also for accepting we
08:06 - have
08:07 - string one
08:08 - and
08:10 - here also we will have care str 2
08:13 - and this
08:15 - name you can take different also right
08:17 - and what i want to do here i want to
08:19 - find out length of the the string first
08:21 - string so how to find out length of the
08:23 - string see
08:25 - one for loop i would be zero
08:28 - till till
08:30 - str of i
08:32 - not equal to
08:33 - null character and i plus plus
08:36 - and here i am taking
08:38 - one variable length is equal to
08:41 - length plus
08:43 - one
08:44 - and simply i just want to print printf
08:48 - length of
08:49 - first
08:51 - string is length would be in integer
08:53 - percentage d and l n g th length so we
08:57 - are taking two variable here i and
08:59 - length so we have to declare these
09:01 - variables in i
09:02 - and
09:04 - length in this function length is equal
09:06 - to zero i will initialize this here
09:09 - and for second string i want to modify
09:11 - so str2 and
09:14 - suppose i want to modify what
09:18 - this character second character so
09:20 - second would be at index one
09:22 - index would be started from zero so at
09:25 - one what character i want to replace
09:27 - this with what
09:29 - again k
09:30 - so just write down k
09:33 - either small or capital it's up to you
09:35 - right and here simply print printf you
09:39 - can print both the string also
09:41 - percentage s percentage s
09:45 - str1 comma str
09:48 - 2.
09:50 - that's it
09:52 - so how how it will be executed
09:55 - first control will go here in main now
09:57 - we have str1 and str2
10:01 - so one string is this and one string i
10:03 - am taking this one
10:07 - right and suppose address is 200 201 202
10:11 - 203 204 205
10:14 - so for this
10:15 - in str2 we have 200 so now this str2
10:18 - would be pointing to where
10:20 - from here i am going to point this here
10:22 - it is pointing and this str1 is pointing
10:25 - to here str1 str2 you are passing means
10:27 - 100 200 would be passed the address so
10:30 - address will be stored in this str1 here
10:32 - also we have str2 so it is also 200 so
10:36 - this is also pointing to here
10:38 - now how to find out length i is equal to
10:40 - 0 first of all one more variable we have
10:42 - here
10:43 - i
10:44 - and one is length in length we have 0 i
10:48 - 0 stri not equal to null character see
10:51 - we know
10:52 - we know how the string would be stored
10:54 - at last
10:56 - it will be having null character
10:57 - automatically compiler will
10:59 - place a null character after the string
11:02 - just to show that it is end of string
11:04 - automatically compiler will do this
11:05 - thing
11:06 - right
11:07 - you no need to specify something like
11:09 - this null
11:10 - if you initialize
11:12 - know in a different way then you have to
11:14 - put null there
11:16 - right
11:16 - see
11:17 - stri means str 0
11:20 - str of 0 means at 0 index what is the
11:23 - value i mean it should be str1 because i
11:26 - am i want to find out length of the
11:28 - first string str one this string
11:31 - so str one i i zero zero one two three
11:35 - four five
11:36 - it is j it is not null so condition true
11:39 - enter here length is equal to length
11:40 - plus one now length becomes one
11:43 - i plus plus i becomes two and again half
11:45 - length would be calculated this we have
11:47 - already discussed this program so no
11:48 - need to know briar in this full loop i
11:51 - hope you know the working of this for
11:52 - loop so now length would be what
11:55 - one two three four five so length would
11:57 - be five in length now at last we will
12:00 - have five so just print
12:02 - it will print five and str2 of one now
12:06 - now str2
12:08 - str2
12:10 - this is the pointer this is pointing to
12:12 - here now
12:13 - and at one index here 0 1 2 3 4 5 6 we
12:18 - have h
12:19 - so at the place of h just place k
12:22 - so what it will print
12:24 - str1 would be jenny str2 would be what k
12:29 - k a t r i
12:31 - this
12:32 - so we are modifying the string in this
12:35 - function
12:37 - right
12:39 - but once control will go here
12:42 - then control will go back to here
12:44 - right so the changes would be reflected
12:47 - here also
12:48 - and after after this what is the
12:51 - statement just closing braces so that's
12:53 - it exit from the program right so this
12:55 - is how you can it's very simple i guess
12:58 - if you go how to pass array as an
12:59 - argument you can also pass a string as
13:01 - an argument
13:02 - the tricky one is how to return a string
13:05 - from a function
13:06 - that is a different thing here we are
13:07 - not returning
13:09 - but if you want to return a string i
13:12 - want this function should return a
13:14 - string
13:15 - so how that thing would happen that we
13:18 - will discuss in next video that is a
13:20 - little bit tricky one
13:22 - right so let me just run this on my
13:24 - laptop and show you what output you will
13:26 - get
13:27 - same like here we are calculating length
13:29 - of the string you can also do like if
13:33 - you just convert the string from
13:34 - uppercase to lowercase or lowercase to
13:37 - uppercase
13:38 - many type of programmer string copy
13:40 - program string concatenation program
13:42 - whatever you can do with the predefined
13:43 - function of the string that you can do
13:45 - also with user defined function means
13:47 - you can define define your own function
13:48 - something like this and you can do all
13:50 - that thing just write down your own
13:52 - logic and you can do that thing also so
13:54 - you can try out different different
13:55 - programs also on string
13:57 - so now let's
13:59 - run this code so now let me create a new
14:01 - file here
14:04 - string as
14:06 - argument
14:09 - right
14:14 - and what program we will see
14:16 - just to find out length two string we
14:18 - are going to pass right
14:20 - so i am taking what
14:24 - just name i'm taking modify
14:27 - so here two string i want to pass so
14:29 - here
14:30 - in declaration
14:33 - just write down this thing and
14:35 - in main thing function what
14:38 - will take
14:40 - care str1
14:42 - is equal to
14:48 - jenny and
14:49 - one more string i want to take care str2
14:55 - and that
14:59 - i'm initializing at compile time only
15:01 - right so just call the function
15:05 - modify
15:06 - and just pass what str1 name of the
15:10 - string and str2 that's it
15:12 - right
15:13 - and now
15:15 - see
15:16 - definition
15:19 - of this one
15:20 - so here also we'll take what
15:23 - str1 or you can take different name also
15:25 - it's up to you and
15:27 - str2 i'm taking same name
15:32 - right
15:33 - now what you will do here
15:37 - two variable in i
15:39 - and one is
15:40 - i am taking length
15:42 - l
15:43 - right
15:44 - just find out length of the string one
15:47 - so what you will do str1
15:49 - or you can find out length of the string
15:50 - tool so here you can write down str2
15:53 - and i not equal to null
15:55 - it's up to you
15:57 - not equal to what
16:00 - null
16:01 - right and i plus plus
16:04 - so now here simply l is equal to l
16:07 - plus 1 or l plus plus or l plus equal to
16:10 - 1 there are many ways to write down this
16:12 - statement
16:13 - no need to i'm not writing the curly
16:15 - braces because the in the you know if
16:17 - there's four block because here we are
16:19 - having only one statement so no need to
16:21 - put the statement in the
16:24 - braces
16:26 - sorry
16:28 - or if you want to put that's a good
16:30 - practice always
16:31 - i think you should put
16:34 - if you know there is
16:37 - only one line that also
16:39 - you have to put that into
16:41 - bracket
16:43 - suppose later if you want to add any no
16:45 - more line in this for loop
16:47 - so at that time there will be no problem
16:50 - right now after that
16:52 - uh what i'm i want to do str2
16:56 - str2 of 1
16:58 - is equal to
17:00 - and here k only
17:02 - or any other characters you can say z
17:05 - want to place that with
17:07 - z
17:08 - and just print
17:12 - length of
17:15 - string
17:16 - 1
17:18 - is
17:20 - percentage d and l because that could be
17:23 - that would be a integer value
17:25 - and
17:28 - both those strings
17:30 - are percentage s and percentage s
17:35 - just print str1 comma str2
17:39 - that's it
17:40 - right
17:42 - here just put a
17:44 - slash fine
17:48 - now see
17:49 - let me run this and see what output you
17:51 - are
17:58 - getting see
18:00 - length of the string one is five
18:02 - obviously length is five jenny five
18:05 - excluding
18:06 - null character
18:08 - and both the strings are one is jenny
18:09 - and second one is c
18:11 - rather than h it is printing z k z a t r
18:15 - i
18:16 - right
18:18 - and see here i have modified this thing
18:20 - rather than this i am taking care
18:22 - astrick str1 care s3 str2 obviously that
18:26 - would be a pointer
18:27 - interpret compiler will interpret it as
18:29 - a pointer so rather than writing hair
18:31 - bracket you just you can write down this
18:33 - thing also and in modifying the
18:35 - declaration also you can just write down
18:36 - characteristic characteristic
18:38 - there will be no problem because here
18:41 - pointer which is pointing to a character
18:44 - type
18:45 - this this means what it would be a
18:46 - pointer which is pointing to a character
18:49 - so same thing
18:50 - now
18:51 - see let me just run this and see same
18:53 - output you are getting length of the
18:55 - string is five and both the strings are
18:56 - journey and the modified string
18:59 - so here you can also write down this
19:00 - thing also right but here if you declare
19:03 - the string something like this here see
19:05 - one more way of declaring string is care
19:08 - and
19:11 - s trick
19:13 - rather than this
19:15 - because what you think str1 str2 are
19:18 - pointers right so here also we can write
19:20 - down this thing str1 is a pointer which
19:22 - is pointing to a character status is
19:24 - also a pointer which is pointing to a
19:26 - character right and jenny and kathry
19:28 - will just pass these character i mean
19:30 - these values
19:31 - address so this would also be same right
19:34 - so now let me run this and show you what
19:37 - output you will get here in this case
19:41 - see it will not run
19:43 - has stopped working
19:45 - now why this happened this is for your
19:48 - assignment you have to tell me in
19:49 - comment box or if you are not getting
19:50 - the answer you can ask me in comment box
19:53 - i'll explain it in the later videos
19:55 - right
19:55 - here you cannot put something like this
19:58 - here you have to write down
20:01 - this declaration
20:04 - this one's all right and now let me run
20:07 - this and see it will
20:10 - give you output the correct output right
20:14 - so that's it for this video now
20:16 - so in the next video we'll see how to
20:18 - return a string right so until the next
20:20 - video till then bye take care
23:42 - you