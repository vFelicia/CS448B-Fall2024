all right so to kick off this training we're going to talk about where to start this is um something that's going to be critical if you are interested in trying coding but perhaps you're not so sure what to do first you're feeling a little nervous you might be unsure about it perhaps your admin has decided for you that you're going to teach coding and you just need a little bit of support about what to do first that's totally understandable and we're going to break down everything you need to know about getting started so you feel a bit more comfortable and confident when you finally do get rolling with your students so first thing first is to think about things that are not actually the content you're going to be teaching but rather the tools and everything that you have currently that you will use that will set you up for success so my recommendation is to take stock of everything you already have the opportunities that are already available to you and your students and i'll run through this quick checklist that you can go through yourself and make sure that you check off each item you take stock of everything you have so that when it's time to choose or implement a coding curriculum you're a little bit more prepared so this checklist will include things like taking stock of your setting where you're teaching what type of setting you're in the equipment you have so the devices or the lack of devices your personal teaching style as well as the learning style of your students and then once you kind of have a good idea of these four things you really clearly understand where you're going to be teaching what tools you have how you love to teach and how your learners like to learn you can then either pick a program or a platform some sort of tool to help you or perhaps that has been assigned for you and you can explore it with with this different framing with these things in mind so we're going to break down each of those items in the checklist a little bit further and again if any questions come up about different different pieces that i'm going to be talking about i will touch on a few more things later in the webinar but if you do have questions please feel free to ask them so the first one is your setting so what space are you working with are you in your own classroom are you pushing into other classrooms that's what i did when i was a computer science teacher i had a cart of chromebooks that i would wheel from classroom to classroom to bring computer science to the different classrooms of the school but perhaps you have your own classroom and then with that comes schedule so what kind of time do you have to teach coding how often will you be seeing students every week will that change week to week so you'll hit on your setting and your schedule an example might be that my students will be coding in my classroom i have 30 of them we get to do coding once a week for 45 minutes so that's just an example of how you can take stock of what you already have and the answers to these questions they don't dictate whether you can or cannot teach coding because you really can teach coding using any space with any pocket of time but i bring this up because the answers to these questions will help inform the type of program you think about using like codable or something else what types of coding lessons and tools would just be best for you to utilize and later in this training we are going to break down in depth more about different settings and what kids coding can look like in a bunch of different settings and that will include time constraints as well the second thing to think about is equipment take stock of what you have do you have internet access are kids going to be working on chromebooks or ipads how many devices per student do you have maybe you don't have any technology and similar to the last slide you don't need anything specific to be able to teach coding computer science concepts can be learned online on tech devices or offline via worksheets and unplugged activities or makerspace projects again the answer to the equipment question will simply inform what types of activities you can explore and i will be diving more into unplugged coding as well when we talk about different use cases and coding in different settings later on in the training the third thing to think about when you're getting started is something that i think a lot of teachers overlook because you guys are so used to putting your students before yourself but it is important to think about your own preference in teaching style and learning so how do you plan or structure your class periods how do you like to teach so an example would be direct instruction you like to be at the front of the classroom giving a presentation or you like more openended free time and choicebased stations this one is important because if you plan to teach coding in a way that is more openended and exploratory then you would want to choose a coding tool a platform that is also child directed with scaffolds built into it in case kids get stuck and they're working on their own and if you like more direct instruction then you can choose something that will involve a little bit more teacher teacher influence since it's developed to be that way so in the example of codable we have a hint system built into our games with a lot of scaffolded levels so that would be a good choice if you like more openended childdirected learning it'll just inform what kind of tool you choose to use and finally something really important to think about is your learners so you know your students best you know what they're capable of you know where they might struggle and all of this is going to inform how you approach coding so for example if you know that your students thrive when they have more structure and scaffolding and handholding then you would choose like i said one type of tool that has more scaffolds and hints built into it as opposed to a more openended creation one that doesn't have as many supports which would be really well suited for a different group of students i remember when i was a computer science teacher my my students were really quick to ask me for help when they got stuck they did not like that feeling so i knew that before we launched into our coding curriculum we needed to do some sort of practice about how to ask for help and how to help each other as opposed to just waiting for the teacher to respond since i had a lot of other things i was doing in the classroom so that's one example you know your students best you know that they might need certain support in different areas and the type of tool you choose to teach coding will depend on that and then finally so you've ran through your checklist you've taken stock of your setting and your equipment and how you like to teach and how your learners like to learn then you can pick a coding platform to help you and when i say platform i'm referring to any product or service that you can access that will provide a coding curriculum for you if you are brand new to coding then you very well might not have a clear idea for what to teach or how to structure unit plans and courses and learning paths we will cover some of that today but i would not expect you to know all of that right off the bat and the good news is that you don't need to reinvent the wheel there are some excellent resources that you can use to teach coding and you don't need to make up the curriculum on your own there is of course a scenario where you're not the one choosing right so perhaps admin or someone else at your school has told you to implement coding with a specific platform they've given you the platform and they say you're going to be using this and that's totally okay too i still recommend running through this checklist of setting equipment you're learning the learning style of your learners and your teaching style so that when you're exploring whatever program you're going to be using like codable you can keep those scenarios in mind it'll help a little bit with your planning you