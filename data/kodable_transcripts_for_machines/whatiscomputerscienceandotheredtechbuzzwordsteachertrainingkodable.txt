i'll move on to our buzzword review it's not a test we're just gonna walk through some some vocab that if you're thinking about starting a coding program at your school you might run into some of these terms sound the same but mean different things and it can get confusing so i'm going to walk through all of them some of them are specifically related to coding they're coding terms and then some are more fieldwide terms that you might run into in your research so the first we've talked about this one a bunch already but coding is giving a computer instructions for k2 students we talked about how this can happen in the form of games or puzzles or worksheets or projects and a lot more options coding for k2 students is really all about sequencing so putting things in order recognizing when they're out of order and then employing other commands or other tools that can change the sequence can change the path of your code and again a huge emphasis for k2 coding specifically is debugging so recognizing when there's a problem being able to locate it and then trying many different possibilities for how to solve it you've likely also heard me say program a couple times sometimes i use those interchangeably so if coding is giving a computer instructions then a program is the instructions themselves that's the word we use to refer to the actual instructions that a programmer gives to a computer so as you can see from this definition a program is the specific set of instructions that is that we give to a computer to read and follow and the the key here in a program order sequence as i mentioned before it really matters a computer will read a computer program the same way that we read a book from left to right top to bottom and if one of the instructions is out of order or written incorrectly then the program will not do what it's supposed to do it will not run properly um the third term here is algorithm and this is kind of one level deeper so before i before i wrap up algorithm i do want to say if this is confusing and if these words mean the same thing um this again will be recorded you can always revisit i know sometimes if you're a super beginner to coding and you you have not been exposed to these words they can all kind of sound the same um but let's talk about algorithms so this is an exact specific set of steps needed for a computer to reach a specific outcome to do a specific thing in code written by adults like the code that was written that allows me to speak to you on this live stream there are tons and tons and tons of algorithms in a single program tons of little tasks that the computer has to do for this to work properly in k2 coding because our students are so young there will often only be one or possibly two algorithms two tasks that students are controlling at any time so this will help with focus and they won't get bogged down with needing to remember tons of little things they want the computer to do there's typically only one and algorithms are all around us a great example is a recipe so you can see the image on the right is an algorithm showing how to make a peanut butter and jelly sandwich and this is an example of something that you can put on a word wall or you can put up on your wall as an anchor chart to show an everyday algorithm so in this case you need to follow the steps in the specific order to have the outcome you want make a peanut butter and jelly sandwich and if one of these things are out of order like you spread the peanut butter before you've cut the bread then you won't be able to make your sandwich properly so that is an example of an algorithm we're entering the world of computer science now so you've heard me jump between coding and computer science and here's the clarification computer science includes coding coding is a part of computer science but this field also looks at how computers and programs work and interact in the real world so there are some broader implications in computer science that might include things like robotics game design hardware and software digital citizenship like we were talking about in the chat these are all things that make up the field of computer science so you might be interested in just teaching coding really honing in on giving a computer specific instructions or if you're incorporating computer science you might be also looking at how things like robots and hardware and software and being a digital citizen what these things mean in the real world stem we likely all know what stem stands for science technology engineering and math but something that i've noticed when i do my own research is that stem is really used quite frequently nowadays in a lot to mean a lot of different things sometimes it means all four of these topics on their own but i personally think the key to stem is when these four words are grouped together it's that strong integration so i believe that with stem we're intentionally melding these disciplines together and this integration will encourage students to draw a connection between all four components so a good example is computer science it's a wonderful representation of the spirit of stem because as a field it integrates science technology engineering and math all four are are super incorporated which is also great if you're a math teacher and perhaps you've been prompted to bring coding into your math curriculum computer science already has so much math involved that it's a it's a really easy integration and is possible for any of us to do even with our youngest students okay we're almost done we have two more words the first is makerspace so if you're looking to start off with stem but you're not sure if you want to dive straight into coding there is another place to start and that's with maker spaces so maker spaces don't they do not need to be hightech and they do not need to look like a pinterest board a makerspace is really defined by the mindset having a maker's mindset is really powerful when students are constructing and building and creating things we're emphasizing that the process is as important as the product and having that maker's mindset is what defines the space you don't need all the bells and whistles to make it happen computer science concepts like robotics design or engineering app design game design these are all things that can organically evolve from work in maker spaces and if uh i think maker spaces are a really stellar place to start if you want to see what your students are interested in you can give them openended creation time you'll see where they gravitate towards you'll see what sorts of things they are innately interested in making and then you can kind of build off of that to construct your stem or your computer science curriculum and you have options so you could have a maker corner in your classroom you could do like a popup maker space for a singular project um when i taught computer science we did a game design unit where the classroom was transformed into a maker space for a couple weeks so they could build board games before we then coded them using scratch so that's an option but you could also do a virtual makerspace we saw virtual maker spaces really become popular during the school shutdowns with the pandemic so having some sort of place online that your students can go to like a google slide deck or some other website where there's multiple projects they can choose from they can click on them and then do you know a level encodable for example that's one option if you don't have a space to actually make a physical makerspace all right and then our final word today is project based learning this is a big one and honestly i could do an entire webinar just on this so i'm going to keep it brief but i did want to bring it up here because i think it's a fabulous way to help students start to draw connections between computer science and the world around them so projectbased learning is really what it sounds like it's projects and learning through working on a longer project and these are often presented as like a challenge or a real world problem that will ask students to come up with a real solution and since computer science as we mentioned it it covers a wide range of topics that students are interacting with every day through technology or the apps on their phones hopefully your k2 students don't have phones but i know that they do because i saw when i was a teacher um all of these things that they're interacting with daily you can they can come up with better solutions for them if there's a problem that they're facing and projectbased learning is one way to do that you