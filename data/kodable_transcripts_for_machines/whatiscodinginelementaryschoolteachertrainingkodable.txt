let's jump in with the big one this is the the main topic of today's training what does coding mean in kindergarten first or second grade when i tell people that i work for a company that teaches elementary students to code i often get uh skeptical responses people saying really how does how exactly does that work are are those kids really learning how to code and i get the skepticism when we think of coding we often think of you know a person working alone in a dark room with a glowing computer screen writing sentences and sentences of this uh random garble of symbols and numbers and text so it's not going to look like that but yes i'm here to tell you that kids can code it'll look different than this picture we have in our head but they can do it so that's what the first part of our chat will be about we're going to break down some assumptions about what is coding and what does it mean for our youngest students so what is coding at its core coding means giving a computer clear instructions in a language it understands to produce a specific result in other words it's telling a computer what to do and we can't do that just by telling it what to do in english or any other human speaking language we do that with code that's the language that computers understand like i said you might picture someone coding like this maybe they're working in isolation they're writing lines and lines and lines of letters and numbers and symbols and this is what coding might look like for a lot of adults in certain settings but when we talk about kids coding we are definitely referring to something different we would not expect our elementary students to type lines and lines of syntax in front of a screen for hours we know that that's not developmentally appropriate or interesting for them at all however kids can absolutely do what this definition of coding describes they can give a computer really clear instructions to produce a result to have some sort of outcome so this is what we mean when we say kids can code and you might ask well if kids aren't typing out lines of code then how exactly are they still coding what does coding mean in this case and typically effective k2 coding apps or resources will employ some sort of drag and drop interactive something that engages fine motor skills that might cater to prereaders with symbols and shapes and colors as opposed to text and words so this picture on the right this is an example of a young student working in codable and you can see already that it's a bit more interactive than that picture prior where you're just typing on a keyboard kid's coding can be really visual really interactive and engaging and it doesn't have to be like what we sometimes picture adults doing when they're coding so let's dive in a little bit more to what kindergarten for a second or really elementary school in general what coding can be like what else is out there so one way to teach young students to code is through blockbased coding and you might have seen examples of blockbased coding maybe it's in a recommended curriculum for you to use or just through your own research of examples like scratch junior that's what you see here um regular scratch so here's this example code.org does blockbased coding there's a lot of other options as well these platforms utilize some sort of drag and drop learning environment where learners use these coding instructional blocks you can see those colorful blocks that sort of snap together like puzzle pieces in a certain order to create their code those instructions we talked about on the last slide the the instructions you're giving to a computer so that's an example of blockbased coding coding that is appropriate for younger students and then another way to teach k2 students to code is through gamebased puzzles gamebased tasks so here is an example in codable this is a gamebased puzzle that also employs a draganddrop mechanic so students are dragging those arrow commands or those other commands up into those boxes in a certain order just like in block based coding where they link together in a certain order that will produce some sort of result in the game so in the codable example students are putting arrow commands in order to tell a little fuzzy character what directions to roll through the maze so in both examples in blockbased coding and in the codable gamebased puzzle there is a program there's code somewhere on the screen and then there's also a stage and the stage is the outcome it's showing what the code what the code does it's having some sort of a cause and effect and that's a really strong connection for our young students to make so when we think about why this works why these platforms really work for young students to learn how to code it's because there is that sensory feedback to every action changing the code or the input will change the output so what the learner sees or hears and students can utilize a lot of tools and resources that they might use in other subjects like the scientific method when they're learning to code so they're forming hypotheses about what their code will do and then they actually get to see the outcome what the code actually did and if there's something wrong in the code if one of those blocks are out of order or it's the wrong arrow command then they'll be able to see it immediately that feedback is right there they'll know that their code has a bug and then they can cert they can go out and try to start fixing it so these platforms work to teach kids to code because they're visual they're interactive and there are oftentimes um there's many possible solutions so there's not just one single way that a kid can solve a gamebased puzzle or put together a blockbased code there's many possible solutions to serve all different types of students i do want to say that k2 coding does not only need to take place online or on tech devices i would say it's a little easier because if it's online then students can iterate faster and if they make a mistake they can change it and try something new a little bit faster than if they were writing with pen or paper but there are tons of unplugged pen and paper coding options that are a wonderful way to engage and get started with coding so if you don't have tech devices or you don't have onetoone devices that doesn't need to be the reason why you don't pursue coding in your classroom here are some examples of worksheets that engage some of the similar computational thinking skills that those online coding platforms do and you can find a lot of these on our website but we've also seen some awesome examples on teachers pay teachers or pinterest or blogs there's a lot of options out there if you don't have tech devices for your students so how exactly do these programs teach kids to code we know why they might work but what are kids actually learning from these different types of programs they're doing two main things the first is that they are helping learners develop a real understanding of coding concepts the fundamental concepts like sequencing so putting things in order conditional statements so if then statements which are like if something happens then something else will happen that's a core coding concept also loops so having some sort of repetition debugging solving problems these core coding concepts students can learn in kindergarten or even before so they are able to learn some of the main coding concepts that they would then use for their entire coding trajectory and the reason why it's possible for kids to learn about these fundamentals at such a young age is because there are truly examples of all of these concepts all around us these coding concepts all have a real world analogy that kids have likely already seen they've already experienced and the role of a coding teacher is just to help them reframe it when we teach code we're helping them draw on this existing knowledge around the world and apply it in a new way so a good example might be sequence putting something in order your students have likely followed some sort of set of instructions in their life maybe they've put together a lego build where they followed stepbystep instructions perhaps they've executed a recipe they've baked something and they've followed step by step instructions they know that if one of their instructions are out of order then the thing won't happen the way that they expect so they've seen examples of sequence and we just reframe it we say just like you follow a recipe step by step your computer is going to follow your instructions and code step by step there's really clear links and that's why it's possible for even our youngest students to um to learn the concepts and to learn how to code and i do see i have a comment on the side from mona who's asking if we have vocabulary cards for the coding concepts and we do have vocabulary cards um at codable we're happy to connect you with those and if you want to create your own it's pretty easy to put these words onto cards and then to have them up in your classroom so that way if you see an example of sequence in an everyday life throughout the school day you can point to it and make that connection a little bit clearer so that's a great question and then the second way that kids coding programs can help teach kids to code besides just learning the coding concepts is to help develop a coding mindset and this is a really core piece of why it's important to teach kids to code especially at a young age so we're talking about skills that coders have that can benefit students in all walks of their life so this includes you know creative problem solving resilience creativity logical thinking knowing when to ask for help these are skills that will permeate into all other subjects and not just be helpful when learning to code i always like to say that these programs are doing both of these things at the same time and that's why they're really effective learning tools now because coding education is drawing on such a wide range of personal skills the way that coding looks in a k2 classroom is going to be hugely diverse and different from class to class the way that your students code and engage with these coding platforms is going to be totally different from the way students in another classroom might engage with the same tools so i just wanted to show some images of what k2 coding might look like sometimes it could be head down focus i remember when i was teaching my middle schoolers how to code there were some class periods where it was totally silent you could hear a pin drop nobody was talking they were all in flow and really focused on their work but most of the time i would say because coding is so fun it might be a little bit more lively than other classes so there could be cheering and pointing and leaning into each other hands up talking chatter um if there's there's a little bit of a spark in the classroom when kids are are learning how to code because it's a new skill and it's something that's engaging all of those uh those coding mindsets that i mentioned on the last slide so there will also be some frustrated sighs and some you know some noises that are indicating that kids are are stuck and that's also the beauty of coding they will ask their classmates or find a way on their own to solve the problems and that's important too