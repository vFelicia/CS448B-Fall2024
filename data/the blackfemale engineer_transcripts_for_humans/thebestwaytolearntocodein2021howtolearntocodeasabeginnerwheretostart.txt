With timestamps:

00:00 - hello everybody my name is nya and i'm
00:02 - the black female engineer i provide
00:04 - content for new
00:05 - and aspiring software engineers and
00:06 - today we are talking about
00:08 - how to learn to code as a beginner
00:11 - really just the best way
00:13 - to start your coding journey to start
00:15 - learning how to code
00:16 - in 2021 so let's get to it so if you are
00:20 - looking to learn how to code odds are
00:22 - you are looking to get
00:24 - hired or paid for your work at some
00:27 - point in time
00:28 - so number one see what careers you can
00:31 - get
00:32 - with a programming language search types
00:34 - of software engineers types of software
00:36 - developers
00:37 - and you'll see a list of front-end
00:39 - developers back-end developers
00:41 - game development etc and see what
00:44 - languages
00:45 - are needed to be employed as such
00:48 - and so if you know you want to be a
00:50 - front-end developer
00:51 - back-end game dev or you do some reading
00:54 - and you see that okay yeah i would
00:56 - really like a career in
00:58 - x y and z then this puts you in a great
01:00 - spot in knowing
01:01 - what to learn to code because each
01:04 - career path tends to have their list
01:07 - of languages that you either must know
01:10 - or is highly recommended you know or as
01:13 - long as you know this
01:14 - your odds are you'll have a chance of
01:16 - getting a job in
01:17 - x and x fee this is also great for
01:19 - knowing that you are learning to code
01:21 - for a specific end goal in mind this is
01:23 - what's going to put you
01:25 - push you through those hard times rather
01:27 - than oh i'm bored let me learn how to
01:29 - code today and then
01:30 - you never pick it up ever again so
01:32 - having that end goal in mind
01:34 - also helps with that learning process
01:36 - but yes
01:37 - try to see if there's a career path that
01:39 - you really see stand out for you you
01:41 - think would be a great
01:42 - match in terms of personality wise and
01:44 - just interesting to do
01:46 - and go from there and actually my next
01:48 - video is going to be
01:50 - on how to pick that first coding
01:52 - language to learn so make sure you
01:53 - subscribe
01:54 - so you don't miss that if you don't know
01:56 - what career path you want to be on that
01:57 - is totally okay
01:58 - i didn't know a career path i wanted to
02:00 - be on until i had found the languages i
02:03 - liked and tailored the career path based
02:05 - on the language so that's totally okay
02:08 - what you can do instead is see what for
02:10 - example
02:11 - the easiest languages to learn are this
02:13 - is the first thing i did
02:14 - when learning how to code and i stumbled
02:17 - upon
02:18 - python python is known as one of the
02:20 - easiest languages
02:22 - to learn especially for beginners ruby
02:24 - and javascript are also
02:26 - great easy starter languages i started
02:29 - with python and then i ended up
02:30 - abandoning it because it just didn't
02:32 - speak to my soul
02:33 - and that's okay you're going to
02:34 - encounter things like that
02:36 - but those are different approaches to
02:38 - finding your first coding language
02:40 - again that'll be my next video but once
02:42 - you find your coding language that you
02:44 - are going to learn you're going to stick
02:45 - to
02:46 - you're next going to want to find the
02:48 - resources to aid in your
02:50 - learning some of the top resources
02:52 - include free code camp
02:53 - codecademy udemy and edx
02:56 - i used all of these when first learning
02:59 - how to code and so let me give you a
03:01 - quick run through
03:02 - of all of these different resources one
03:04 - free code camp
03:05 - free code camp is amazing i think they
03:08 - do
03:08 - great work over there especially with
03:10 - beginner programmers
03:12 - and so to me it's great as a beginner
03:15 - with really figuring out the
03:17 - foundational
03:18 - things and really what's a p tag what's
03:21 - an
03:22 - image tag how do you add x y and z to an
03:24 - html site and things like that
03:27 - however i ended up
03:30 - yearning for something more and so
03:32 - that's when i
03:33 - ended up going to codecademy and udemy
03:36 - udemy provides
03:38 - hours hours and hours and hours of tons
03:41 - hundreds of different courses some of
03:43 - which you can end up with a certificate
03:45 - in that specific
03:47 - course after you've completed it and so
03:49 - it's great for beginners and it's also
03:50 - great
03:51 - when you are a person kind of needs a
03:53 - teacher someone to follow along with
03:56 - where udemy can kind of go wrong
03:59 - is you can kind of get stuck in this
04:02 - tutorial
04:03 - just cycle of just doing tutorials after
04:06 - tutorials and courses after courses
04:08 - and meanwhile you don't really
04:11 - know why you're doing what you're doing
04:13 - you're just following along
04:15 - now some courses they are great and you
04:18 - won't
04:18 - do this but there are many that you just
04:20 - find yourself
04:21 - following along to what the teacher or
04:23 - instructor says
04:25 - without really knowing why if you were
04:28 - put in a room where you had to replicate
04:31 - what you just did
04:32 - you wouldn't even know where to start
04:34 - and even why to start and it's
04:36 - important to know the why however now
04:39 - courses are like this some of them are
04:41 - great i'll add links below for courses
04:43 - that i've heard some people boast about
04:45 - and so yeah just keep that in mind with
04:47 - udemy make sure that when you're going
04:49 - through them
04:50 - you are understanding the why if you
04:52 - don't understand the why
04:53 - it's okay to break out and google
04:57 - it ask okay what does an if statement do
04:59 - what does x y and z do
05:01 - and then go back to the to the tutorial
05:03 - make sure
05:04 - you're always understanding the meaning
05:06 - behind some of these things moving on to
05:08 - code
05:09 - codecademy ended up being my main
05:13 - resource for learning and i used their
05:15 - web development course
05:17 - which really goes into html css and
05:19 - javascript
05:20 - and i really liked codecademy up until
05:23 - the part that it got to
05:24 - javascript once i got to javascript it
05:27 - felt
05:28 - kind of like how udemy felt of this
05:31 - following along of okay this is an if
05:33 - statement but
05:35 - why am i here why am i using this and so
05:38 - that's kind of where i stepped off
05:43 - from codecademy when i was just doing
05:45 - things and understanding cost
05:46 - concepts but not understanding how i
05:49 - would use this at work how i would use
05:51 - this
05:52 - or when i would use it in building an
05:53 - app not saying that
05:55 - they weren't teaching the relevant
05:58 - things it's that
05:59 - i just didn't it didn't click
06:02 - why i was learning it and for me i need
06:05 - to know the why
06:06 - i need to know the why and it's really
06:09 - what makes a difference in my learning
06:11 - and so right when we got to javascript i
06:13 - kind of went off a bit
06:14 - and went a different direction however
06:17 - it is great for the beginner items it's
06:20 - great for knowing the fundamentals for
06:22 - knowing
06:23 - just the foundation of concepts and so i
06:25 - do still recommend and then lastly
06:27 - there's edx
06:28 - edx was great for understanding the
06:31 - computer science
06:32 - part of software engineering rather than
06:35 - just the programming
06:36 - and coding and so i used their i believe
06:39 - was their harvard
06:41 - computer science intro to computer
06:43 - science course or something like that
06:44 - i'm sure
06:45 - everyone and their mom has heard of it
06:47 - and so i'll leave a link to that
06:49 - below as well and i really like this
06:51 - because i was also a college student at
06:52 - the time
06:53 - when i was going through this and so i
06:55 - really liked that lecture
06:56 - feel of an actual instructor an actual
07:00 - teacher
07:00 - on the stage going over concepts and
07:03 - material with students with freshmen
07:05 - i really liked that feel and so i do
07:08 - also recommend
07:09 - that as well but overall don't be afraid
07:12 - to try
07:12 - all of these things out see which one
07:14 - resonates best for you
07:16 - and don't be afraid to switch around
07:18 - some things like i said start with free
07:19 - code camp it was great for beginner then
07:21 - went on to udemy was it i don't remember
07:24 - which came first udemy or codecademy but
07:26 - yeah
07:27 - went on to one of those did a little bit
07:29 - of what i needed to do then moved on to
07:31 - something else and so don't be afraid to
07:33 - jump around and figure out what the best
07:35 - course of action is for you after
07:38 - finding a resource for learning
07:40 - figure out your study plan it is
07:43 - important
07:43 - and maybe is this the planner in me i
07:46 - define myself identify as a planner
07:49 - it is important to have a plan because
07:51 - it is that plan and that
07:52 - goal that is going to get you through
07:55 - the hard
07:56 - days of wanting to quit wanting to just
07:58 - be done with everything
07:59 - it's the impending timeline that's going
08:02 - to
08:03 - drag you across the finish line and so
08:06 - one way to do this is to work backwards
08:09 - see
08:10 - that okay i want to be a developer
08:13 - within a year and so knowing that you
08:16 - want to
08:16 - have a job after 12 months of learning
08:19 - then you can identify what things you
08:20 - need to do now to get there
08:22 - say okay so i want to be a web developer
08:26 - in the next 12 months so it means i need
08:27 - to do three hours of learning every day
08:30 - every tuesday et cetera and build your
08:32 - study plan
08:32 - that way you can also go forward moving
08:35 - where you really don't have a timeline
08:37 - for yourself it happens when it happens
08:39 - and really you're focused on learning
08:41 - without
08:42 - the impending deadline that you've set
08:44 - for yourself that also works too and so
08:46 - see
08:46 - okay so i only have one hour of my day i
08:50 - can allocate to
08:51 - something that's not work related and so
08:54 - i'm going to devote this one hour every
08:55 - day to coding
08:56 - so whichever way you choose make sure
09:00 - you write something down have a study
09:02 - plan and
09:03 - stick to it seriously stick to it
09:05 - because at some point you'll realize how
09:07 - much material there is to learn
09:09 - and you don't want to shoot yourself in
09:11 - the foot by
09:13 - not recognizing the gravity of what
09:16 - you're trying to do here which is maybe
09:18 - switch careers or
09:19 - just get into your first career etc
09:21 - that's a big thing and so make sure
09:23 - you treat it like a big deal and have a
09:25 - study plan next
09:27 - build projects it's important to know
09:29 - how to
09:30 - think like a developer when you are
09:32 - hired you are going to be expected to
09:34 - think like a developer not just follow
09:37 - along to instructions and the way you
09:39 - think like a developer
09:40 - is by building projects of your own now
09:42 - following along when i say build
09:44 - projects i don't mean following along
09:46 - to some other udemy course that says
09:48 - we'll build five projects
09:50 - no put that away and think what kind of
09:53 - project do you want to build what kind
09:55 - of apps you want to build
09:56 - so okay i want to create a financial
09:58 - tracker
09:59 - so have that goal in mind and start
10:02 - building it out and so i say that not to
10:05 - mean that
10:06 - you have all the skills needed right now
10:09 - to build it
10:09 - you may not however you need to know how
10:12 - to
10:13 - learn you need to know where the gaps in
10:15 - your knowledge are
10:16 - and the best way to do that is by
10:18 - building and so
10:19 - you set on a plan to build a financial
10:22 - app
10:23 - and so now when after you build your
10:26 - landing page or your static page with
10:28 - html and css
10:30 - you see okay i need to make this dynamic
10:32 - and i need to make sure that each input
10:35 - is recognized
10:35 - so then you go to google and say how to
10:38 - make sure user can
10:39 - input new numbers to financial tracker
10:42 - or something maybe not that
10:44 - specific but but yes google things as
10:47 - they come
10:48 - and slowly build that way because trust
10:50 - me
10:51 - and you may not know this yet developers
10:55 - use
10:55 - google like they have stock in it we use
10:59 - google
11:00 - like it is running out of style like it
11:02 - is
11:03 - leaving at some point is about to become
11:05 - extinct
11:06 - you need to learn how to use google
11:09 - effectively
11:10 - like a developer because it's a way that
11:13 - we problem solve
11:15 - asking the right questions asking the
11:17 - right resources
11:18 - and seeing how best to use that
11:21 - information
11:22 - for our benefit for our apps for our
11:24 - projects
11:25 - you need to learn to do the same because
11:27 - it will not end once you get the job
11:29 - and so once you've developed the
11:31 - fundamentals and once you've gotten a
11:32 - bit more comfortable with the languages
11:34 - that you've set on to learn
11:36 - start building projects on your own not
11:38 - with cold steel in the background like
11:39 - no
11:40 - on your own and it's going to be long
11:43 - it's going to be painful
11:47 - painful but it's really going to be what
11:50 - teaches you the most because
11:52 - tutorials do not teach you how to
11:54 - problem problem-solve and now
11:56 - after you've taken the time to learn to
11:58 - grow to develop your own projects
12:00 - start looking at job postings and no
12:02 - this is not to
12:04 - get the job right now i say this because
12:07 - we want to see what jobs are looking for
12:10 - in their candidates what things do you
12:12 - see constantly pop
12:14 - up in the job listing for back-end
12:16 - developer
12:17 - do you constantly see that they want you
12:19 - to learn sql do you constantly see that
12:21 - they want you
12:22 - to actually have this type of skill when
12:25 - using python et cetera so see
12:28 - what job postings are saying about the
12:30 - career path you want to be on
12:32 - and now alter your learning to
12:36 - account for these things to specifically
12:38 - learn these things
12:39 - that way when you are ready to go on the
12:41 - job hunt you are not caught off guard or
12:44 - you are not
12:44 - constantly being passed off because
12:48 - you don't have a specific skill that
12:50 - they are looking for
12:51 - that being said there are some jobs that
12:54 - will
12:54 - ask for the moon meanwhile are paying
12:58 - you 15.50 an hour and everything
13:00 - try to avoid those things try to instead
13:04 - really focus on the patterns that you're
13:06 - seeing
13:07 - do five out of every eight jobs request
13:10 - this specific thing
13:11 - then add that to your list of things to
13:14 - learn rather than
13:15 - oh this one job out of the 20 i've
13:18 - looked at
13:18 - asked that i know postgres so avoid that
13:22 - unless you would like to learn it that
13:25 - is totally fine
13:26 - but yes in terms of which things to
13:28 - really make sure you
13:29 - add to your learning list to your study
13:32 - plan
13:32 - go that direction and lastly don't be
13:35 - afraid to rinse and repeat
13:37 - don't be afraid to backtrack to
13:40 - change languages to change courses to
13:42 - figure out some type of other resource
13:43 - to use for your learning
13:45 - don't be afraid to rinse and repeat and
13:47 - repeat and repeat
13:48 - because odds are this for you is
13:50 - uncharted territory and so
13:52 - it's okay to see that okay i actually
13:56 - did this wrong
13:56 - let me go this direction and oh actually
13:59 - this is wrong too let me go this
14:00 - direction
14:01 - don't be afraid of that instead
14:02 - acknowledge that what you're doing
14:04 - is growing and celebrate that be happy
14:07 - that you're doing that
14:08 - even if you end up after months of
14:10 - learning deciding that
14:12 - python isn't for you that is completely
14:14 - okay and
14:15 - you are you are completely okay changing
14:18 - languages because you know what
14:20 - even just knowing that little sliver of
14:21 - python you just learned
14:23 - that is going to help you at some point
14:24 - in the future either on your learning
14:26 - journey
14:27 - seeing what things helped what things
14:28 - didn't what resources helped what
14:30 - resources didn't
14:31 - or on the job when you see a posting
14:34 - that says oh
14:35 - knows basic python principles even
14:37 - though it's for some web dev
14:39 - posting and so note that there's no loss
14:42 - in anything
14:43 - everything is helping you grow and
14:45 - develop and
14:46 - you'll see how much that helped in the
14:49 - end even
14:50 - after you've changed direction please
14:52 - don't forget to like and subscribe
14:53 - if you enjoyed this and if you did don't
14:56 - forget the next video
14:57 - is going to be specifically on how to
15:00 - choose a coding
15:01 - language where i go much more into depth
15:03 - onto the different
15:04 - coding languages for different career
15:06 - paths etc so
15:08 - thank you so much for watching and i'll
15:09 - see you all later
15:11 - bye

Cleaned transcript:

hello everybody my name is nya and i'm the black female engineer i provide content for new and aspiring software engineers and today we are talking about how to learn to code as a beginner really just the best way to start your coding journey to start learning how to code in 2021 so let's get to it so if you are looking to learn how to code odds are you are looking to get hired or paid for your work at some point in time so number one see what careers you can get with a programming language search types of software engineers types of software developers and you'll see a list of frontend developers backend developers game development etc and see what languages are needed to be employed as such and so if you know you want to be a frontend developer backend game dev or you do some reading and you see that okay yeah i would really like a career in x y and z then this puts you in a great spot in knowing what to learn to code because each career path tends to have their list of languages that you either must know or is highly recommended you know or as long as you know this your odds are you'll have a chance of getting a job in x and x fee this is also great for knowing that you are learning to code for a specific end goal in mind this is what's going to put you push you through those hard times rather than oh i'm bored let me learn how to code today and then you never pick it up ever again so having that end goal in mind also helps with that learning process but yes try to see if there's a career path that you really see stand out for you you think would be a great match in terms of personality wise and just interesting to do and go from there and actually my next video is going to be on how to pick that first coding language to learn so make sure you subscribe so you don't miss that if you don't know what career path you want to be on that is totally okay i didn't know a career path i wanted to be on until i had found the languages i liked and tailored the career path based on the language so that's totally okay what you can do instead is see what for example the easiest languages to learn are this is the first thing i did when learning how to code and i stumbled upon python python is known as one of the easiest languages to learn especially for beginners ruby and javascript are also great easy starter languages i started with python and then i ended up abandoning it because it just didn't speak to my soul and that's okay you're going to encounter things like that but those are different approaches to finding your first coding language again that'll be my next video but once you find your coding language that you are going to learn you're going to stick to you're next going to want to find the resources to aid in your learning some of the top resources include free code camp codecademy udemy and edx i used all of these when first learning how to code and so let me give you a quick run through of all of these different resources one free code camp free code camp is amazing i think they do great work over there especially with beginner programmers and so to me it's great as a beginner with really figuring out the foundational things and really what's a p tag what's an image tag how do you add x y and z to an html site and things like that however i ended up yearning for something more and so that's when i ended up going to codecademy and udemy udemy provides hours hours and hours and hours of tons hundreds of different courses some of which you can end up with a certificate in that specific course after you've completed it and so it's great for beginners and it's also great when you are a person kind of needs a teacher someone to follow along with where udemy can kind of go wrong is you can kind of get stuck in this tutorial just cycle of just doing tutorials after tutorials and courses after courses and meanwhile you don't really know why you're doing what you're doing you're just following along now some courses they are great and you won't do this but there are many that you just find yourself following along to what the teacher or instructor says without really knowing why if you were put in a room where you had to replicate what you just did you wouldn't even know where to start and even why to start and it's important to know the why however now courses are like this some of them are great i'll add links below for courses that i've heard some people boast about and so yeah just keep that in mind with udemy make sure that when you're going through them you are understanding the why if you don't understand the why it's okay to break out and google it ask okay what does an if statement do what does x y and z do and then go back to the to the tutorial make sure you're always understanding the meaning behind some of these things moving on to code codecademy ended up being my main resource for learning and i used their web development course which really goes into html css and javascript and i really liked codecademy up until the part that it got to javascript once i got to javascript it felt kind of like how udemy felt of this following along of okay this is an if statement but why am i here why am i using this and so that's kind of where i stepped off from codecademy when i was just doing things and understanding cost concepts but not understanding how i would use this at work how i would use this or when i would use it in building an app not saying that they weren't teaching the relevant things it's that i just didn't it didn't click why i was learning it and for me i need to know the why i need to know the why and it's really what makes a difference in my learning and so right when we got to javascript i kind of went off a bit and went a different direction however it is great for the beginner items it's great for knowing the fundamentals for knowing just the foundation of concepts and so i do still recommend and then lastly there's edx edx was great for understanding the computer science part of software engineering rather than just the programming and coding and so i used their i believe was their harvard computer science intro to computer science course or something like that i'm sure everyone and their mom has heard of it and so i'll leave a link to that below as well and i really like this because i was also a college student at the time when i was going through this and so i really liked that lecture feel of an actual instructor an actual teacher on the stage going over concepts and material with students with freshmen i really liked that feel and so i do also recommend that as well but overall don't be afraid to try all of these things out see which one resonates best for you and don't be afraid to switch around some things like i said start with free code camp it was great for beginner then went on to udemy was it i don't remember which came first udemy or codecademy but yeah went on to one of those did a little bit of what i needed to do then moved on to something else and so don't be afraid to jump around and figure out what the best course of action is for you after finding a resource for learning figure out your study plan it is important and maybe is this the planner in me i define myself identify as a planner it is important to have a plan because it is that plan and that goal that is going to get you through the hard days of wanting to quit wanting to just be done with everything it's the impending timeline that's going to drag you across the finish line and so one way to do this is to work backwards see that okay i want to be a developer within a year and so knowing that you want to have a job after 12 months of learning then you can identify what things you need to do now to get there say okay so i want to be a web developer in the next 12 months so it means i need to do three hours of learning every day every tuesday et cetera and build your study plan that way you can also go forward moving where you really don't have a timeline for yourself it happens when it happens and really you're focused on learning without the impending deadline that you've set for yourself that also works too and so see okay so i only have one hour of my day i can allocate to something that's not work related and so i'm going to devote this one hour every day to coding so whichever way you choose make sure you write something down have a study plan and stick to it seriously stick to it because at some point you'll realize how much material there is to learn and you don't want to shoot yourself in the foot by not recognizing the gravity of what you're trying to do here which is maybe switch careers or just get into your first career etc that's a big thing and so make sure you treat it like a big deal and have a study plan next build projects it's important to know how to think like a developer when you are hired you are going to be expected to think like a developer not just follow along to instructions and the way you think like a developer is by building projects of your own now following along when i say build projects i don't mean following along to some other udemy course that says we'll build five projects no put that away and think what kind of project do you want to build what kind of apps you want to build so okay i want to create a financial tracker so have that goal in mind and start building it out and so i say that not to mean that you have all the skills needed right now to build it you may not however you need to know how to learn you need to know where the gaps in your knowledge are and the best way to do that is by building and so you set on a plan to build a financial app and so now when after you build your landing page or your static page with html and css you see okay i need to make this dynamic and i need to make sure that each input is recognized so then you go to google and say how to make sure user can input new numbers to financial tracker or something maybe not that specific but but yes google things as they come and slowly build that way because trust me and you may not know this yet developers use google like they have stock in it we use google like it is running out of style like it is leaving at some point is about to become extinct you need to learn how to use google effectively like a developer because it's a way that we problem solve asking the right questions asking the right resources and seeing how best to use that information for our benefit for our apps for our projects you need to learn to do the same because it will not end once you get the job and so once you've developed the fundamentals and once you've gotten a bit more comfortable with the languages that you've set on to learn start building projects on your own not with cold steel in the background like no on your own and it's going to be long it's going to be painful painful but it's really going to be what teaches you the most because tutorials do not teach you how to problem problemsolve and now after you've taken the time to learn to grow to develop your own projects start looking at job postings and no this is not to get the job right now i say this because we want to see what jobs are looking for in their candidates what things do you see constantly pop up in the job listing for backend developer do you constantly see that they want you to learn sql do you constantly see that they want you to actually have this type of skill when using python et cetera so see what job postings are saying about the career path you want to be on and now alter your learning to account for these things to specifically learn these things that way when you are ready to go on the job hunt you are not caught off guard or you are not constantly being passed off because you don't have a specific skill that they are looking for that being said there are some jobs that will ask for the moon meanwhile are paying you 15.50 an hour and everything try to avoid those things try to instead really focus on the patterns that you're seeing do five out of every eight jobs request this specific thing then add that to your list of things to learn rather than oh this one job out of the 20 i've looked at asked that i know postgres so avoid that unless you would like to learn it that is totally fine but yes in terms of which things to really make sure you add to your learning list to your study plan go that direction and lastly don't be afraid to rinse and repeat don't be afraid to backtrack to change languages to change courses to figure out some type of other resource to use for your learning don't be afraid to rinse and repeat and repeat and repeat because odds are this for you is uncharted territory and so it's okay to see that okay i actually did this wrong let me go this direction and oh actually this is wrong too let me go this direction don't be afraid of that instead acknowledge that what you're doing is growing and celebrate that be happy that you're doing that even if you end up after months of learning deciding that python isn't for you that is completely okay and you are you are completely okay changing languages because you know what even just knowing that little sliver of python you just learned that is going to help you at some point in the future either on your learning journey seeing what things helped what things didn't what resources helped what resources didn't or on the job when you see a posting that says oh knows basic python principles even though it's for some web dev posting and so note that there's no loss in anything everything is helping you grow and develop and you'll see how much that helped in the end even after you've changed direction please don't forget to like and subscribe if you enjoyed this and if you did don't forget the next video is going to be specifically on how to choose a coding language where i go much more into depth onto the different coding languages for different career paths etc so thank you so much for watching and i'll see you all later bye
