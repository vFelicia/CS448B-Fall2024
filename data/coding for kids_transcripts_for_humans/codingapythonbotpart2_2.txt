With timestamps:

00:00 - hello everybody my name is Jamie and
00:02 - today I will be doing part two of the
00:04 - Python bot series and in this video
00:06 - we're going to be covering a little bit
00:07 - more basics of python and we're going to
00:09 - look at you know the basics of uh
00:12 - building a bot so we could go do it a
00:14 - little bit easier with knowing like the
00:17 - foundation the basics so yeah let's
00:18 - start without further ado
00:20 - so first things first we're going to
00:21 - open vs code if you don't know how to
00:23 - install visual studios in my last
00:25 - previous video there is a video showing
00:28 - you how to do it but if you already have
00:30 - a download that's fine uh just press
00:32 - Visual Studio codes open it up
00:34 - you take from this screen
00:36 - if you're wondering what's on my right
00:38 - side again it's my uh the things I want
00:40 - to touch on for this lesson uh we have
00:43 - one two three four
00:46 - we have in total four parts that I want
00:48 - to touch on today but these parts are
00:49 - very important so we have to pay
00:51 - attention uh so first things first let
00:52 - me come into here we're going to press
00:54 - on new file
00:55 - and we're going to choose python file if
00:57 - you don't if this doesn't show up that
00:59 - means your extensions hasn't been
01:00 - installed yet so go back to the previous
01:02 - video install everything first so we're
01:04 - going to choose python file which makes
01:06 - it the dot py and B and we can save it
01:08 - somewhere
01:10 - I'm gonna save it to my folder here
01:13 - videos part two
01:16 - all right so the first thing we're going
01:18 - to be learning is about dictionaries in
01:21 - the last video where I showed you guys
01:23 - arrays or a list and now we're going to
01:25 - be doing dictionaries dictionary is kind
01:27 - of like how you would view in real life
01:28 - there's going to be a key and there's
01:29 - going to be a value
01:31 - um the key is basically like the word
01:32 - and the value is the definition I'll
01:34 - show you what it means so
01:37 - in order to create a dictionary first
01:39 - actually let's do this first so
01:40 - dictionary part nine because last video
01:44 - is part eight dictionary
01:46 - so in order to create a dictionary we
01:50 - first have to have a name my name will
01:53 - be my stats like you know maybe stats in
01:55 - game we have to know what they're at
01:57 - right now so my stats equal to and then
02:00 - uh these little like I don't know how
02:03 - they call it the Powershell kind of
02:05 - colon well I don't know what to call it
02:07 - let me search it up
02:09 - [Music]
02:09 - um
02:12 - what's that called
02:15 - it is called uh uh comma no parentheses
02:20 - bracket angle bracket what I can't find
02:23 - anything about it what is that called
02:26 - eh let me
02:29 - they call it Crow bracket curly brackets
02:31 - all right it's called a curly bracket so
02:32 - we have to have two curly brackets to
02:34 - declare a variable press enter I mean uh
02:37 - dictionary press enter and you can see
02:39 - it spaces out for us nice and neat so
02:41 - let's start off with declaring some uh
02:44 - keys inside of this dictionary our first
02:48 - key is going to be a string called uh
02:50 - let's say health because that's pretty
02:51 - important right health
02:53 - and we're gonna have a cold in here to
02:54 - Define what health is and we're going to
02:57 - say health is that's a hundred that's
03:00 - full health right so health is 100 comma
03:02 - this is to separate each word in
03:04 - definition or key in values Health next
03:06 - we're gonna have Mana because that's
03:08 - important right Mana let's say we used
03:11 - up a little bit let's say 75 next one
03:14 - we're gonna have what is say
03:16 - hunger Hunger
03:18 - hunger is about maybe 160 and then we
03:23 - have water levels or just water
03:26 - and I guess you're pretty good on water
03:27 - we have like 80 or something all right
03:29 - so that's our stats for our uh stats for
03:32 - here oh wait I almost forgot one thing
03:33 - this is a bit complicated but we're
03:36 - gonna have uh maybe we're gonna have
03:38 - like some Pokemons inside of our stats
03:40 - statistics you know keep track of what
03:43 - Pokemons we have right now so we're
03:44 - going to create a list inside of this
03:47 - dictionary called Pokemon so in order to
03:49 - do that we're going to do another string
03:51 - Pokemon
03:53 - this is going to be a bit different from
03:54 - declaring a normal list but because
03:56 - we're doing it inside of a dictionary so
03:58 - we're gonna have Pokemon as a string and
04:00 - then we're gonna do uh the this thing
04:02 - like the square brackets and remember to
04:05 - put a comma every time you separate all
04:06 - right and then inside of Pokemons we're
04:08 - going to have three Pokemons obviously
04:09 - we're gonna have Pikachu because who
04:12 - doesn't want Pikachu in their Pokemon or
04:14 - let's say Pokedex actually Pokedex yeah
04:16 - inside of your Pokemon sounds weird
04:18 - inside their Pokedex Pikachu Raichu
04:20 - maybe let's just do Pikachu Evolution
04:22 - Raichu let's put Petri in front
04:26 - oops YouTube
04:28 - perfect so we have our Pokedex right
04:31 - here which is consists of Pichu Pikachu
04:33 - and Raichu so yeah that's our statistics
04:35 - right now and let's see what we can do
04:37 - with this dictionary so first things
04:39 - first we're obviously kind of print it
04:41 - right because that's what everybody does
04:44 - um right yeah hopefully it's not just me
04:46 - but I just want to print it and see what
04:47 - it looks like first so let's play
04:50 - and there you go it has Health Mana
04:53 - hunger water Pokedex and then we have
04:55 - our Pokemon okay so once we have printed
04:57 - it out you know there's nothing special
04:58 - about it there's nothing like too crazy
05:00 - now what if we decide to you know want
05:03 - to only look at Health how do we do it
05:04 - you have to have the key name in here so
05:07 - we're gonna do uh bracket and then there
05:10 - are key names to help like so
05:13 - and as you can see it prints out the
05:15 - value of Health which is 100 if we try
05:18 - to do for Mana
05:21 - 75 and then so on and so on let's try
05:24 - Pokey that Pokedex let's see what
05:25 - happens up there
05:27 - oh Pokemon
05:28 - X all right
05:30 - it's gonna be Pichu Pikachu and Raichu
05:33 - so yeah that's basically it however what
05:35 - if we want the first Pokemon instead of
05:37 - our Pokedex inside of our statistics
05:40 - let's see so in order to do that we're
05:42 - gonna have to print out the list name
05:43 - first and then outside of these brackets
05:46 - outside the first brackets we're gonna
05:48 - add another one and we're gonna choose
05:49 - which one we want remember a list always
05:51 - starts from zero
05:53 - a list or an array so zero one two right
05:55 - so we're going to start with zero let's
05:57 - see
05:59 - but bam Pichu right there so we took one
06:02 - specific one out all right that's pretty
06:04 - good and what if we just don't want the
06:06 - values what if we just want to see our
06:08 - statistics you know maybe like we want
06:10 - to see what we have what our criteria is
06:12 - what to stay alive or whatever uh we
06:14 - could do that as well let's comment this
06:16 - out all right so we can do that by
06:19 - saying print
06:21 - print my stat dot uh let's pretend we
06:26 - want the definition or like the stats so
06:28 - dot Keys like this dot keys with
06:30 - parentheses let's play it out
06:33 - there you go it gives a list of our
06:35 - dictionary Keys Health Mana hunger water
06:37 - and Pokedex we could do the same thing
06:39 - for values as well values
06:42 - laid out as you can see 175 60 80 and
06:46 - then our list so yeah that's basically
06:47 - it for dictionaries uh of course you can
06:49 - add remove pop uh you know I'll do all
06:52 - those stuff you want to do with an array
06:55 - you can do the dictionary as well but
06:57 - it's not as important right now so yeah
06:59 - let's move on to the next one and if you
07:01 - don't know how to comma if you don't
07:03 - know how to comment like bulk like this
07:04 - just do control and slash it's really
07:07 - easy it's like new hack I just learned
07:09 - um so yeah uh after this let's go to
07:12 - Part 10 so part 10 let me zoom in just
07:15 - in case okay part 10 is going to be
07:19 - about while Loops uh so while Loops are
07:23 - pretty interesting because they go on
07:25 - until it's over
07:28 - um so let's create an example let's
07:29 - pretend we got injured right now our
07:31 - health is down so let's say we have a
07:33 - variable called health health equals to
07:35 - we're like Adriana so probably for 10 15
07:38 - that's pretty low 15 healthy goes to 15.
07:41 - we're gonna do while health
07:44 - else
07:46 - else equals or is less less or equal to
07:51 - wait yeah less or equal to they're just
07:53 - less than a hundred uh then whatever we
07:56 - wanted to do we wanted to heal right so
07:58 - we're gonna do
07:59 - else
08:01 - plus equal to plus equal to basically
08:03 - means or equal to plus I don't know
08:05 - equal to plus like this
08:10 - well one of these ways probably this one
08:12 - um it's going to basically say Alice
08:15 - will add on top of itself how much we
08:16 - want so we're gonna say maybe by 10 all
08:20 - right so we're gonna add every time it
08:21 - Loops we're gonna add ten we're also
08:23 - going to print out
08:25 - health
08:26 - print Health every time so we can see
08:29 - that like the progress going up and once
08:31 - it's over we just stop so yeah uh let's
08:34 - actually import time as well import time
08:38 - and for time time is already built in
08:40 - just uh let that be we're gonna do time
08:43 - dot sleep
08:45 - uh we're gonna set this as like 0.2
08:48 - maybe so every time it has a little
08:50 - delay
08:52 - uh let's see there you go 25 35 40 55 65
08:56 - at blah blah until 105. so when it
08:59 - reaches 105 it overheels but you know
09:01 - can't hurt you have extra more Health
09:02 - right so yeah that's basically our while
09:05 - our while loop and uh yeah that's
09:07 - basically it so that's how to use while
09:10 - loops you can even make this a little
09:12 - bit more complicated if you want and
09:13 - I'll show you how to do that later
09:15 - so let's control slash this all right
09:18 - let's move on to our part 11 wait
09:22 - hashtag hashtag part 11.
09:26 - which is going to be four Loops so for
09:29 - Loops four Loops is another loop that we
09:33 - use a lot in you know this program so uh
09:37 - pretend let's say
09:40 - uh maybe we want them to list out our
09:43 - Pokemons in our Pokedex so let's go back
09:44 - up here grab our Pokedex really quickly
09:46 - we might need to edit this a little bit
09:48 - because we have to make it an array now
09:50 - so Pokedex
09:52 - equals to there all right so now we have
09:54 - an array called Pokedex with our
09:56 - Pokemons inside and we're gonna say four
09:58 - I in range
10:00 - like so
10:01 - uh we actually no no let's say
10:07 - let's say four values in
10:11 - Pokedex
10:13 - like so and then we're gonna have a
10:16 - golden here
10:17 - enter
10:21 - try it out oh there you go so instead of
10:23 - print Pokedex I originally print I
10:25 - because we're gonna have pull connection
10:26 - here so yeah that's basically it okay
10:29 - let's move on to part 12. heart wealth
10:32 - is about functions
10:33 - um and basically like what a function is
10:37 - when you have a set of code that you can
10:39 - call up multiple times instead of having
10:42 - the entire thing you can have like uh
10:44 - you can have it group and you can just
10:46 - call it like pretend walking would be a
10:48 - function right so we don't have to say
10:50 - right foot forward left foot forward
10:51 - right foot forward left foot forward we
10:53 - just say walk and it'll just do it for
10:55 - us so yeah let's learn how to define a
10:57 - function first so in order to Define
10:58 - function we have def for Define and then
11:01 - we're gonna have our function name uh
11:03 - I'm gonna grab our healing right here so
11:06 - we might use this Ctrl C Ctrl V let me
11:11 - delete this stuff
11:13 - all right so we're gonna have our
11:16 - function as Define heal
11:19 - and inside of heel this is a local
11:21 - variable it's basically going to uh when
11:23 - we call the functions we need these like
11:25 - things inside of the function so we're
11:28 - going to have one that says uh equipment
11:31 - equipment or part I guess and then this
11:35 - is basically what we're going to heal
11:36 - and our other one is going to be Health
11:38 - current health
11:40 - okay so we have two local variables here
11:42 - we're going to press a colon enter all
11:44 - right while we have in here we're going
11:45 - to grab all of our this of our heel put
11:48 - that inside all right time dot sleep uh
11:51 - maybe we can delete this we don't need
11:52 - this or we could leave it as if if we
11:55 - want to we could just say import time
11:57 - here
11:59 - oh now let's just let's just delete it
12:01 - it's fine all right so once you have
12:03 - something like this we should be A-Okay
12:06 - so let's try calling up a function
12:07 - really quickly so we're going to call up
12:09 - heal heal
12:12 - equipment we're gonna say sword if
12:15 - you're a sword God damage uh let's say
12:17 - our sword is that like
12:19 - 20 right now 20 Health let's say
12:22 - as you can see it heals our sword oh I
12:24 - forgot one important thing instead of
12:25 - printing Health let's do print equipment
12:30 - uh equip oh sorry equipment comma
12:36 - uh comma we're gonna say
12:38 - colon comma
12:41 - and when I say health
12:43 - this way it looks more natural instead
12:45 - of just this let's compare them you can
12:47 - see sword is at this much sword 30 sword
12:49 - 64 70 sword 80 90 100. so yeah that's
12:52 - basically it for heal and now let's move
12:54 - on to part or uh 13. part 13. part 13 is
12:59 - calling functions you might be wondering
13:01 - hey what's the point of calling a
13:02 - function but then we just call one we
13:04 - did but we're gonna call from another
13:06 - file calling function
13:08 - from another file
13:10 - so this way we can have multiple
13:12 - functions not in one file because that's
13:14 - a bit uh redundant if you ask me so yeah
13:17 - let's create a new follower here new uh
13:19 - we can do new text file and we're going
13:21 - to control s we're going to go to our
13:22 - python bot or wherever you store it
13:25 - we're going to rename this to
13:27 - function
13:29 - yield dot g y like so then we're going
13:32 - to copy and paste this entire thing or
13:35 - just this part
13:37 - paste into here and run it and save it
13:41 - alright once you've done this we have a
13:43 - function here.py ready to go and let's
13:46 - calm this out
13:48 - oh it's not bad controlled like that all
13:51 - right and just to make sure it doesn't
13:53 - work anymore we're going to do we're
13:54 - gonna copy this and we're gonna paste in
13:56 - here so make sure that the function is
13:58 - out right as you can see it's gonna say
13:59 - undefined
14:00 - healer is not defined as you can see uh
14:02 - so it doesn't work anymore but in order
14:04 - for it to work we can do it really
14:05 - simply just do import enter file name
14:08 - functionhill.py so let's do function
14:11 - uh from wait wait no from function
14:15 - eel Dot py
14:17 - or yeah py import uh
14:22 - import heal
14:25 - like so
14:26 - we're gonna press play
14:28 - no module named function here.py all
14:32 - right well what if we try from file heal
14:33 - function heal
14:35 - there you go so it has you can't have
14:37 - dot py after it just do stop wrong
14:39 - function heal import heal as you can see
14:41 - it'll do this uh let's pretend we have
14:43 - multiple multiple uh we call it multiple
14:48 - functions inside of this file so let's
14:51 - say attack so instead of plus it's going
14:53 - to subtract from Health until if health
14:56 - is less
14:58 - is less or is greater than zero
15:02 - we're going to subtract until it's more
15:04 - than zero so we're gonna try it out all
15:07 - right so let's instead of heal and then
15:09 - in order to you know do this we instead
15:12 - of only saying import heal we're going
15:13 - to import uh the star which basically
15:16 - says import every single function so
15:18 - once we do this we can grab this
15:20 - control C control V
15:22 - enemy
15:24 - let's say their health is like really
15:25 - much like
15:26 - uh maybe 700 would spit too much maybe
15:29 - like 150.
15:31 - okay let's see this
15:33 - a bam
15:34 - this oh what oh wait did we didn't save
15:37 - it or something okay let's save this
15:39 - all right oh we did heal no wonder
15:41 - attack
15:44 - all right play
15:46 - as you can see our sword heals up
15:49 - while our enemy decreased from 148 to
15:52 - zero so yeah that's how to call
15:54 - functions from another file and that's
15:56 - basically for this video I hope you
15:57 - enjoyed see you in the next one bye

Cleaned transcript:

hello everybody my name is Jamie and today I will be doing part two of the Python bot series and in this video we're going to be covering a little bit more basics of python and we're going to look at you know the basics of uh building a bot so we could go do it a little bit easier with knowing like the foundation the basics so yeah let's start without further ado so first things first we're going to open vs code if you don't know how to install visual studios in my last previous video there is a video showing you how to do it but if you already have a download that's fine uh just press Visual Studio codes open it up you take from this screen if you're wondering what's on my right side again it's my uh the things I want to touch on for this lesson uh we have one two three four we have in total four parts that I want to touch on today but these parts are very important so we have to pay attention uh so first things first let me come into here we're going to press on new file and we're going to choose python file if you don't if this doesn't show up that means your extensions hasn't been installed yet so go back to the previous video install everything first so we're going to choose python file which makes it the dot py and B and we can save it somewhere I'm gonna save it to my folder here videos part two all right so the first thing we're going to be learning is about dictionaries in the last video where I showed you guys arrays or a list and now we're going to be doing dictionaries dictionary is kind of like how you would view in real life there's going to be a key and there's going to be a value um the key is basically like the word and the value is the definition I'll show you what it means so in order to create a dictionary first actually let's do this first so dictionary part nine because last video is part eight dictionary so in order to create a dictionary we first have to have a name my name will be my stats like you know maybe stats in game we have to know what they're at right now so my stats equal to and then uh these little like I don't know how they call it the Powershell kind of colon well I don't know what to call it let me search it up um what's that called it is called uh uh comma no parentheses bracket angle bracket what I can't find anything about it what is that called eh let me they call it Crow bracket curly brackets all right it's called a curly bracket so we have to have two curly brackets to declare a variable press enter I mean uh dictionary press enter and you can see it spaces out for us nice and neat so let's start off with declaring some uh keys inside of this dictionary our first key is going to be a string called uh let's say health because that's pretty important right health and we're gonna have a cold in here to Define what health is and we're going to say health is that's a hundred that's full health right so health is 100 comma this is to separate each word in definition or key in values Health next we're gonna have Mana because that's important right Mana let's say we used up a little bit let's say 75 next one we're gonna have what is say hunger Hunger hunger is about maybe 160 and then we have water levels or just water and I guess you're pretty good on water we have like 80 or something all right so that's our stats for our uh stats for here oh wait I almost forgot one thing this is a bit complicated but we're gonna have uh maybe we're gonna have like some Pokemons inside of our stats statistics you know keep track of what Pokemons we have right now so we're going to create a list inside of this dictionary called Pokemon so in order to do that we're going to do another string Pokemon this is going to be a bit different from declaring a normal list but because we're doing it inside of a dictionary so we're gonna have Pokemon as a string and then we're gonna do uh the this thing like the square brackets and remember to put a comma every time you separate all right and then inside of Pokemons we're going to have three Pokemons obviously we're gonna have Pikachu because who doesn't want Pikachu in their Pokemon or let's say Pokedex actually Pokedex yeah inside of your Pokemon sounds weird inside their Pokedex Pikachu Raichu maybe let's just do Pikachu Evolution Raichu let's put Petri in front oops YouTube perfect so we have our Pokedex right here which is consists of Pichu Pikachu and Raichu so yeah that's our statistics right now and let's see what we can do with this dictionary so first things first we're obviously kind of print it right because that's what everybody does um right yeah hopefully it's not just me but I just want to print it and see what it looks like first so let's play and there you go it has Health Mana hunger water Pokedex and then we have our Pokemon okay so once we have printed it out you know there's nothing special about it there's nothing like too crazy now what if we decide to you know want to only look at Health how do we do it you have to have the key name in here so we're gonna do uh bracket and then there are key names to help like so and as you can see it prints out the value of Health which is 100 if we try to do for Mana 75 and then so on and so on let's try Pokey that Pokedex let's see what happens up there oh Pokemon X all right it's gonna be Pichu Pikachu and Raichu so yeah that's basically it however what if we want the first Pokemon instead of our Pokedex inside of our statistics let's see so in order to do that we're gonna have to print out the list name first and then outside of these brackets outside the first brackets we're gonna add another one and we're gonna choose which one we want remember a list always starts from zero a list or an array so zero one two right so we're going to start with zero let's see but bam Pichu right there so we took one specific one out all right that's pretty good and what if we just don't want the values what if we just want to see our statistics you know maybe like we want to see what we have what our criteria is what to stay alive or whatever uh we could do that as well let's comment this out all right so we can do that by saying print print my stat dot uh let's pretend we want the definition or like the stats so dot Keys like this dot keys with parentheses let's play it out there you go it gives a list of our dictionary Keys Health Mana hunger water and Pokedex we could do the same thing for values as well values laid out as you can see 175 60 80 and then our list so yeah that's basically it for dictionaries uh of course you can add remove pop uh you know I'll do all those stuff you want to do with an array you can do the dictionary as well but it's not as important right now so yeah let's move on to the next one and if you don't know how to comma if you don't know how to comment like bulk like this just do control and slash it's really easy it's like new hack I just learned um so yeah uh after this let's go to Part 10 so part 10 let me zoom in just in case okay part 10 is going to be about while Loops uh so while Loops are pretty interesting because they go on until it's over um so let's create an example let's pretend we got injured right now our health is down so let's say we have a variable called health health equals to we're like Adriana so probably for 10 15 that's pretty low 15 healthy goes to 15. we're gonna do while health else else equals or is less less or equal to wait yeah less or equal to they're just less than a hundred uh then whatever we wanted to do we wanted to heal right so we're gonna do else plus equal to plus equal to basically means or equal to plus I don't know equal to plus like this well one of these ways probably this one um it's going to basically say Alice will add on top of itself how much we want so we're gonna say maybe by 10 all right so we're gonna add every time it Loops we're gonna add ten we're also going to print out health print Health every time so we can see that like the progress going up and once it's over we just stop so yeah uh let's actually import time as well import time and for time time is already built in just uh let that be we're gonna do time dot sleep uh we're gonna set this as like 0.2 maybe so every time it has a little delay uh let's see there you go 25 35 40 55 65 at blah blah until 105. so when it reaches 105 it overheels but you know can't hurt you have extra more Health right so yeah that's basically our while our while loop and uh yeah that's basically it so that's how to use while loops you can even make this a little bit more complicated if you want and I'll show you how to do that later so let's control slash this all right let's move on to our part 11 wait hashtag hashtag part 11. which is going to be four Loops so for Loops four Loops is another loop that we use a lot in you know this program so uh pretend let's say uh maybe we want them to list out our Pokemons in our Pokedex so let's go back up here grab our Pokedex really quickly we might need to edit this a little bit because we have to make it an array now so Pokedex equals to there all right so now we have an array called Pokedex with our Pokemons inside and we're gonna say four I in range like so uh we actually no no let's say let's say four values in Pokedex like so and then we're gonna have a golden here enter try it out oh there you go so instead of print Pokedex I originally print I because we're gonna have pull connection here so yeah that's basically it okay let's move on to part 12. heart wealth is about functions um and basically like what a function is when you have a set of code that you can call up multiple times instead of having the entire thing you can have like uh you can have it group and you can just call it like pretend walking would be a function right so we don't have to say right foot forward left foot forward right foot forward left foot forward we just say walk and it'll just do it for us so yeah let's learn how to define a function first so in order to Define function we have def for Define and then we're gonna have our function name uh I'm gonna grab our healing right here so we might use this Ctrl C Ctrl V let me delete this stuff all right so we're gonna have our function as Define heal and inside of heel this is a local variable it's basically going to uh when we call the functions we need these like things inside of the function so we're going to have one that says uh equipment equipment or part I guess and then this is basically what we're going to heal and our other one is going to be Health current health okay so we have two local variables here we're going to press a colon enter all right while we have in here we're going to grab all of our this of our heel put that inside all right time dot sleep uh maybe we can delete this we don't need this or we could leave it as if if we want to we could just say import time here oh now let's just let's just delete it it's fine all right so once you have something like this we should be AOkay so let's try calling up a function really quickly so we're going to call up heal heal equipment we're gonna say sword if you're a sword God damage uh let's say our sword is that like 20 right now 20 Health let's say as you can see it heals our sword oh I forgot one important thing instead of printing Health let's do print equipment uh equip oh sorry equipment comma uh comma we're gonna say colon comma and when I say health this way it looks more natural instead of just this let's compare them you can see sword is at this much sword 30 sword 64 70 sword 80 90 100. so yeah that's basically it for heal and now let's move on to part or uh 13. part 13. part 13 is calling functions you might be wondering hey what's the point of calling a function but then we just call one we did but we're gonna call from another file calling function from another file so this way we can have multiple functions not in one file because that's a bit uh redundant if you ask me so yeah let's create a new follower here new uh we can do new text file and we're going to control s we're going to go to our python bot or wherever you store it we're going to rename this to function yield dot g y like so then we're going to copy and paste this entire thing or just this part paste into here and run it and save it alright once you've done this we have a function here.py ready to go and let's calm this out oh it's not bad controlled like that all right and just to make sure it doesn't work anymore we're going to do we're gonna copy this and we're gonna paste in here so make sure that the function is out right as you can see it's gonna say undefined healer is not defined as you can see uh so it doesn't work anymore but in order for it to work we can do it really simply just do import enter file name functionhill.py so let's do function uh from wait wait no from function eel Dot py or yeah py import uh import heal like so we're gonna press play no module named function here.py all right well what if we try from file heal function heal there you go so it has you can't have dot py after it just do stop wrong function heal import heal as you can see it'll do this uh let's pretend we have multiple multiple uh we call it multiple functions inside of this file so let's say attack so instead of plus it's going to subtract from Health until if health is less is less or is greater than zero we're going to subtract until it's more than zero so we're gonna try it out all right so let's instead of heal and then in order to you know do this we instead of only saying import heal we're going to import uh the star which basically says import every single function so once we do this we can grab this control C control V enemy let's say their health is like really much like uh maybe 700 would spit too much maybe like 150. okay let's see this a bam this oh what oh wait did we didn't save it or something okay let's save this all right oh we did heal no wonder attack all right play as you can see our sword heals up while our enemy decreased from 148 to zero so yeah that's how to call functions from another file and that's basically for this video I hope you enjoyed see you in the next one bye
