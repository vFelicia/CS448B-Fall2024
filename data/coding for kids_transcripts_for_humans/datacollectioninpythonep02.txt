With timestamps:

00:01 - hello everybody my name is jemmy and
00:03 - today i will be giving a brief overview
00:05 - on
00:06 - collections in python uh this is ep 2
00:09 - and today we're going to be looking at
00:11 - dictionaries and sets
00:13 - so let's get started i am doing this in
00:16 - jupiter notebook but if you prefer
00:18 - in google collab you can uh the way to
00:21 - open jupyter notebook is to type in
00:22 - command prompt
00:23 - jupyter notebook and it should open your
00:25 - browser and after that
00:27 - you just need to click on new python 3
00:30 - ipy kernel
00:31 - and it will bring you to an empty
00:32 - notebook um however minds i already did
00:35 - it
00:35 - but the link to download this notebook
00:37 - is in the description
00:38 - if you want to go download for yourself
00:40 - then you can click on that link
00:42 - okay now let's continue so in here what
00:44 - we want to do first is we want to look
00:46 - at a dictionary
00:47 - and we're going to look how to create a
00:48 - dictionary so a dictionary is created by
00:52 - having let me delete this really quickly
00:54 - so a dictionary
00:55 - is created by having two curly brackets
00:59 - uh next to each other like this and then
01:01 - this will create
01:02 - a dictionary but however
01:06 - a dictionary isn't normal like lists and
01:09 - like tuples
01:10 - instead it's kind of different um a
01:12 - dictionary
01:13 - well in real life a dictionary used to
01:16 - have like it has a word
01:17 - and it has a definition of a word so
01:19 - that's what it kind of looks like in
01:20 - python 2.
01:21 - so if we were to press enter in the
01:23 - middle of these two curly brackets it
01:26 - should give us some sort of like this
01:27 - format
01:28 - and then after that what we want to do
01:30 - is we want to type in the word first
01:32 - so pretend we make up a word pretend so
01:35 - like
01:35 - uh let's make up a word called i'm not
01:38 - even going to make up a word i'm just
01:39 - going to use
01:40 - a word i already made up python and go
01:43 - or python and i'll just say python
01:44 - um and then once you did that then what
01:47 - you do is you put
01:48 - you go outside of the quotation marks
01:51 - and then you put a colon there
01:53 - and then once you did that you put an
01:55 - integer
01:56 - or a list or anything really i'm going
01:59 - to put another string
02:00 - and i'm going to write the definition of
02:02 - python python
02:04 - and i'll say a python
02:08 - python pokemon series
02:11 - pokemon series right so now we have
02:14 - a list called start not sorry now list a
02:17 - dictionary called start and
02:18 - inside the dictionary there is a word
02:20 - called python
02:21 - and inside of pythamine or what the
02:23 - python means
02:24 - the definition of python is a python
02:27 - pokemon series
02:28 - so if we were to print out uh print
02:30 - start
02:31 - and brackets and then type out python
02:34 - like so it'll print a python pokemon
02:37 - series so this is how to create a list
02:39 - but today i'm not going to be doing
02:41 - python a python pokemon series
02:43 - uh it's actually today's series but i'm
02:45 - going to be using some pokemons instead
02:48 - uh since it's more you know fun to do
02:51 - with so print start uh and then let's
02:54 - type in squirtle squirtle
02:59 - like this and we can see that it prints
03:01 - out squirtle's
03:02 - integer right here which is 15. um this
03:06 - is the combat power
03:07 - uh so yeah don't get confused but the
03:09 - integer is the combat power of the
03:10 - pokemon
03:11 - and i forgot to mention but if you have
03:13 - multiple uh
03:15 - items inside of a dictionary then what
03:18 - you want to do
03:19 - is between each one you have a comma at
03:21 - the end to separate them
03:22 - so yeah this is basically how to create
03:25 - a list
03:26 - and let's look at how to update no not a
03:29 - list a dictionary i'm sorry
03:31 - and now let's look at how to update a
03:32 - dictionary so basically i have
03:34 - a dictionary here called start and
03:37 - inside start it
03:39 - is basically like last time it has
03:41 - pikachu charmander bubbles are and
03:42 - squirtle
03:43 - the starting pokemon for pokemon go
03:46 - and um in each pokemon
03:49 - uh there is the combat power so this is
03:52 - the
03:53 - what the dictionary called start kind of
03:54 - looks like and now we have another one
03:57 - called update pokey and it says it's
04:00 - equal to bulbasaur
04:01 - 15 uh home by power we can see the
04:03 - combat power here pikachu has 20
04:06 - charmander has 15 bulbasaur has 10 and
04:09 - squirtle has 15.
04:10 - so right now bulbasaur is looking kind
04:13 - of weak um
04:14 - and all the rest are kind of strong um
04:16 - so he's kind of neglected but what we
04:18 - want to do
04:19 - is he went to the gym and he went to
04:20 - train uh and now he's really really
04:23 - well he's got he's gotten stronger so
04:25 - now we're gonna set
04:26 - him to have 15 combat power instead of
04:30 - 10
04:30 - so let's do it what we want to do is we
04:33 - want to use the command
04:34 - start which is the name of this first
04:36 - dictionary dot
04:37 - update don't get confused okay dot
04:39 - update
04:40 - is a command not the name of this
04:43 - dictionary
04:44 - start dot update and inside parentheses
04:46 - we pass in a parameter
04:48 - called updatepokey which is our second
04:51 - dictionary and once we did that this is
04:53 - what our list should look like
04:55 - so now we can see that bulbasaur is no
04:58 - longer 10 by 15
05:00 - uh and if we were to print one buff
05:02 - print our list beforehand
05:04 - uh then this is the difference let me
05:06 - print it okay
05:08 - okay so now we can see that bulbasaur
05:10 - instead of being 10
05:11 - it is now 15 so that is how to update a
05:14 - list
05:14 - uh and make sure make sure that you have
05:17 - this
05:18 - the name the same thing or else it won't
05:20 - work so yeah that
05:22 - is how to update a list let's move on to
05:25 - not a list i'm starting to say list
05:27 - dictionary dictionary
05:30 - okay never don't forget all the lists
05:32 - they said it's dictionary okay
05:34 - now let's look at how to emerge a
05:36 - dictionary so we have
05:38 - our first dictionary here which is start
05:40 - again uh with all the pokemons and
05:43 - uh bulbasaur has 15 combat power and we
05:46 - have another dictionary called
05:47 - water this is like some water type
05:50 - pokemons like vaporeon
05:52 - which is an evolution of eevee suacoon
05:54 - or
05:55 - suicune i don't know but it's uh
05:58 - it's a part of the trio the beast trio
06:01 - in generation six and then there's
06:03 - magikarp of course the classic
06:05 - uh and so vaporeon has 30 combat power
06:08 - suicune has
06:09 - 50 and magikarp has five um
06:13 - and yeah what we want to do is you want
06:15 - to put them together so
06:17 - oh it's going to be one big list so what
06:19 - we want to do is we want to use the
06:20 - command just like last time
06:22 - start which is our first uh dictionary's
06:25 - name
06:25 - dot update water and now basically
06:29 - uh these two dictionaries will combine
06:31 - together into one big one
06:33 - um which is the start one so it will
06:36 - just push it together
06:37 - and let's see what it does so as you can
06:39 - see it's a really really really really
06:41 - long
06:41 - uh dictionary and there is like uh
06:45 - over here there is where it connects
06:47 - after squirtle there is vaporeon
06:49 - and the rest so yeah that's how to merge
06:52 - a list
06:53 - a dictionary oh my gosh a dictionary and
06:57 - now let's look at how to delete
06:58 - dictionary elements so like a part of
07:01 - the dictionary but not the whole thing
07:03 - so let's look at how to do it so let's
07:06 - see
07:07 - first of all we have our dictionary over
07:09 - here
07:10 - the start dictionary with all the
07:11 - starter pokemon and
07:13 - we will print it first without doing
07:15 - anything so right now it is
07:17 - unchanged untouched uh so it's
07:19 - completely the same
07:21 - but let's use our first command which is
07:23 - delete
07:24 - start charmander so this will basically
07:26 - delete charmander from the start
07:29 - uh dictionary so let's do it now you can
07:32 - see
07:32 - the difference charmander is gone from
07:36 - our second list but it's still there in
07:38 - the first list because it didn't delete
07:39 - it yet
07:40 - but after that after deleted it's no
07:42 - longer there
07:43 - uh now let's do a different thing let's
07:45 - do start
07:46 - dot clear which will clear our whole
07:48 - entire
07:49 - uh dictionary okay now you can see that
07:53 - the whole dictionary is gone nothing is
07:55 - left of it
07:56 - but now uh let's move on to our last one
07:59 - which is delete start and i'm pretty
08:02 - sure you guys know what that does
08:03 - it just deletes the entire dictionary
08:06 - out of existence
08:07 - so let's see as you can see it comes
08:10 - with an error
08:11 - so this is before right before and we
08:14 - have our
08:15 - uh dictionary just like normal but then
08:17 - after
08:18 - is an error because it says name start
08:21 - is not defined the reason it's not
08:22 - defined is because it's gone it's no
08:24 - longer there
08:25 - it's been deleted um but yeah that is
08:28 - basically some deleting
08:29 - uh elements of dictionaries uh and yeah
08:33 - pretty good uh and handy to use let's
08:36 - now let's move on to finding dictionary
08:38 - length so now we're going to
08:40 - look at how long a dictionary is by not
08:43 - counting them
08:44 - of course but by using a command it's
08:46 - pretty simple
08:47 - i'll show you but let's look at our new
08:49 - dictionary our new dictionary is called
08:51 - fire with some fire type pokemons
08:53 - like torchic flareon a volcanion
08:57 - volcano is a good pokemon it's really
08:58 - really weird it's a dual type pokemon
09:01 - that has
09:01 - water and fire so it's kind of uh
09:05 - like uh opposites of each other but it's
09:07 - a good pokemon i like it
09:09 - i don't think it is in pokemon go it is
09:11 - volcanion and pokemon go
09:13 - i never caught it so uh in pokemon go
09:18 - uh yes it is in pokemon go wow that is a
09:21 - lot of cp
09:23 - 3882 wow okay well
09:26 - yeah we pour into good pokemon just
09:28 - simply yeah and that's
09:29 - how he looks uh volcanion and yeah
09:33 - so volcanion has a comet power of 60
09:36 - i know that is really really really low
09:38 - but i
09:39 - am right now judging my pokemons from
09:43 - 1 to 100 combat power and i know it
09:46 - might not be accurate it's probably
09:48 - somewhere around 90 if it's
09:50 - on my scale but but but this is not
09:53 - about pokemon stats right now this is
09:55 - about coding
09:56 - so we're gonna leave the minor details
09:58 - out okay um and we're gonna focus
10:00 - on the bigger detail okay
10:04 - but yeah let's move on uh so once we did
10:06 - this
10:07 - we're going to be uh well of course
10:10 - we're gonna be finding the length of the
10:11 - dictionary so we can see right here it's
10:13 - three right because we can count it but
10:15 - how
10:16 - however if you continue your dictionary
10:18 - like you add more and more stuff over
10:20 - like
10:21 - uh the project or the program uh
10:24 - then you'll add you have a really big
10:26 - dictionary at one point and then you
10:27 - won't be able to count it anymore
10:29 - so then you would need uh this command
10:32 - which is really really simple print len
10:35 - which stands for
10:36 - length and then the dictionary name fire
10:38 - oh and it should just print out how long
10:40 - it is so we can see that it's three
10:42 - and if we were to like copy paste this
10:44 - one more time
10:46 - like so it should become six oh
10:49 - okay oh i forgot the comma okay
10:53 - there we go it's still three and the
10:55 - reason this is
10:56 - uh it's still three because we gotta
10:58 - change the
10:59 - the well the name of the not the name
11:02 - but the wording
11:03 - so i can just delete some of it i'm
11:05 - gonna
11:06 - tour toward let me let me make up my own
11:09 - name uh
11:10 - tour tour kick
11:13 - okay torque kick and there's
11:16 - uh flare on
11:19 - i get it it's like fire flare on i don't
11:22 - know
11:23 - and then um volcanion let's call this uh
11:28 - uh uh ocean
11:31 - i don't know uh what is like an ocean
11:33 - disaster
11:35 - tsunami that doesn't make sense um just
11:38 - say huevos
11:39 - wavenyan wave okay screw it
11:43 - we have tour kick flareon and wavian as
11:46 - our three new pokemons
11:47 - and let's do it again as you can see
11:49 - it's six um
11:50 - so yeah this is how to find the length
11:53 - of uh
11:54 - a dictionary it's just by doing print
11:57 - len
11:57 - and then the dictionary name okay let's
12:00 - move on
12:01 - uh let me delete this okay so let's move
12:04 - on and we're going to look at how to
12:06 - check
12:06 - existing elements or basically we're
12:08 - going to
12:09 - see whether or not the things we're
12:11 - trying to look for exists
12:12 - inside of the dictionary this is uh
12:16 - also used with input or user has a use
12:19 - user interface kind of
12:20 - uh but basically we're going to be using
12:22 - a dictionary which is the fire
12:24 - dictionary
12:24 - uh and you have torchic flareon and
12:27 - volcanion
12:28 - so we have also an input which is called
12:31 - keyword
12:32 - keyword equals to input what fire type
12:34 - pokemon are you looking for
12:36 - so this will basically ask them um and
12:39 - then they can
12:40 - type their reply in and after that it
12:42 - will basically trigger
12:44 - a function called search and then inside
12:46 - the function there is
12:48 - a parameter called pokename and we'll
12:50 - just pass in keyword as the parameter
12:52 - but now let's take a look at the
12:53 - function so the function itself
12:55 - has the name search and a parameter
12:58 - called pokename
13:00 - and it says if poker name in fire which
13:02 - means
13:03 - if the keyword that we're searching for
13:05 - is inside of our fire dictionary
13:08 - then print poker name which is the
13:10 - keyword
13:11 - is in the database but if it's not then
13:14 - else
13:14 - print poker name is not in the database
13:17 - so let's take a look at
13:19 - uh the real thing so what are you
13:21 - looking for pretend i want to see
13:23 - uh a fire pokemon like moltres
13:26 - uh which is a fireball firebird like so
13:30 - oh no search is not defined
13:33 - okay let's see what it got wrong
13:37 - search and search uh
13:40 - let's see okay moltres i'm
13:43 - i don't know why i'm repeating it search
13:46 - is not defined
13:48 - name search but it's it's it's the same
13:51 - thing right
13:52 - or do i have how do i how did i get it
13:55 - wrong
13:56 - name search is not defined am i doing
13:58 - something wrong i didn't edit it
14:00 - one second okay guys i just figured out
14:03 - what it got wrong
14:04 - i am very very stupid but um
14:09 - it's not defined because it the keyword
14:12 - went
14:12 - first before the actual function is
14:14 - defined so this means that there
14:17 - is currently no function called search
14:20 - while they want to call it up so let's
14:24 - control x this and we're going to put it
14:26 - beneath our function
14:28 - so it's going to define our function
14:30 - before so like
14:31 - this and there we go it should work
14:34 - hopefully
14:35 - multrez okay multis okay
14:38 - and now click enter and there you go
14:40 - motors is not in the database
14:41 - uh the the reason an error appeared if
14:44 - you didn't get it was because
14:46 - uh i put this uh keyword
14:50 - that triggers the diction not the
14:51 - dictionary triggers the function
14:53 - before the actual function was did it um
14:56 - even existed
14:57 - which meant that there was actually no
14:59 - function called search until
15:01 - uh at the end of the code and of course
15:03 - it will have an error because
15:05 - there was no function called search at
15:07 - the time they called it
15:08 - so we have to put that after search was
15:11 - defined
15:12 - um but yeah that is how to fix the
15:13 - problem and now let's look at some
15:15 - pokemons that are inside the data set so
15:17 - like
15:18 - volcanion volcanion like this and there
15:21 - we go volcanion
15:22 - is in the database so we can use this as
15:25 - a user interface
15:27 - and you can develop it to be even more
15:29 - complex and more
15:31 - uh appliable i can say and make it
15:34 - better overall
15:35 - but yeah this is our uh data set
15:38 - of fire and this is how to check
15:40 - existing elements
15:42 - and now let's look at turning a
15:44 - dictionary into a list
15:46 - so let's look at this now some of you
15:48 - might be saying like
15:49 - that's so simple what do you mean it's
15:52 - so hard
15:53 - why do you need all this for loop for
15:56 - and you're probably thinking like we
15:57 - could just do like this
15:58 - list fire equals to list
16:01 - and then our our name fire
16:05 - like so now it converted the whole
16:08 - entire list
16:09 - into i mean the whole entire dictionary
16:11 - into a list
16:12 - um print l fire
16:15 - l l fire like this right
16:19 - and uh oh i forgot why do i put where
16:22 - did
16:22 - parentheses um there oh
16:26 - my gosh why am i putting quotation marks
16:28 - on yeah
16:30 - okay there we go and you're probably
16:31 - thinking like hey that's it now we
16:33 - turned our whole entire dictionary into
16:35 - a list but
16:36 - i thought that too in the beginning but
16:38 - then however i realized that
16:40 - it was not that simple we can see that
16:42 - in this
16:43 - dictionary right here we lost all our
16:46 - definitions meaning that we don't have
16:48 - any definitions for
16:49 - these pokemons at all but the what i
16:52 - want is i want to keep the definition as
16:54 - well as the item
16:55 - so i have to use a for loop and i'll
16:58 - show you how to do that
16:59 - right now so we have we're going to
17:01 - declare an empty
17:02 - list called l fire or saying for list
17:05 - fire
17:06 - and after that we're going to make a for
17:08 - loop for
17:09 - i in fire a equals to i comma fire
17:12 - and then the the i in parenthesis not
17:16 - parenthesis bracket
17:17 - this will basically grab each um grab
17:20 - the item
17:21 - and the item definition into the
17:24 - variable
17:24 - a and then it will append a to
17:27 - the variable l fire which is our list
17:30 - so it will add a into our list right
17:33 - here
17:34 - and after that it will just add and add
17:36 - an ad until it's completely done
17:39 - and once it does that we can just simply
17:41 - type it out
17:42 - and now it is a full list as you can see
17:44 - a full list toward chick
17:46 - um and by the way this right here we can
17:49 - call it up too
17:50 - so pretend we only want this one right
17:52 - so we can do we only want torchic
17:54 - so we want and torchic index is zero so
17:57 - if we were to do this and it will only
17:59 - print out torchic
18:00 - so yeah that is how to convert a
18:02 - dictionary into a list
18:04 - i was about to say how to convert a list
18:05 - into a dictionary but i'm getting too
18:07 - confused
18:08 - anyways let's move on why am i laughing
18:10 - so weird
18:12 - okay i'm gonna cut that part out um but
18:16 - uh yeah i am very sad inside
18:20 - okay let's move on um so now let's look
18:23 - at the popping dictionary it's not like
18:25 - a popcorn dictionary
18:27 - but it's like uh it's how to pop a
18:29 - dictionary so
18:30 - um in here we're going to be basically
18:33 - deleting some elements like we did
18:34 - before
18:35 - but it's a it's kind of different
18:37 - because instead of deleting
18:38 - any element we want from the dictionary
18:41 - we will delete
18:42 - the uh only the back uh the last item of
18:45 - the dictionary
18:47 - using the command dot pop and let's look
18:49 - at how to do it so we have a dictionary
18:51 - called
18:52 - grass and inside of grass there's some
18:54 - grass
18:55 - pokemons such as uh or plant type i mean
18:59 - both of them grass or plant uh glass
19:02 - grass who who calls it plant type i mean
19:05 - does your plant type even plant type
19:09 - pokemon i mean some people call it plant
19:11 - type but
19:12 - it's called grass type yeah it's called
19:14 - grass type but
19:16 - you know some people call it plants some
19:17 - people called grass but yeah it's some
19:19 - grass-type pokemon such as bulb sprout
19:21 - executor which is a great tank in
19:23 - pokemon
19:24 - uh and chest pin which is a little
19:27 - green how do i how do i even describe it
19:31 - it's like uh it's like a forest animal
19:33 - with a green and three little hair
19:35 - spikes
19:35 - here i'll show you a picture um chest
19:38 - pin
19:39 - all right let's look at him yeah three
19:41 - little spikes on his head
19:42 - he's a i don't even a squirrel i can say
19:44 - with a tail
19:45 - that's like that but yeah he he's a
19:48 - plant
19:48 - type and yeah that is our grass type
19:52 - dictionary and let's look at how to pop
19:54 - a grass type dictionary
19:56 - well not a grass type dictionary any
19:58 - dictionary so
20:00 - um let's first print out uh
20:03 - our dictionary before it was popped and
20:05 - then let's pop our dictionary using the
20:07 - command
20:08 - dictionary name or grass dot pop item
20:11 - and then inside uh we have a parenthesis
20:14 - after that
20:15 - and we put print after comma graph which
20:17 - will print
20:18 - the dictionary after it was popped as
20:21 - you can see
20:22 - this is our dictionary before it was
20:23 - popped uh
20:25 - executor is still there i mean not
20:27 - executed chest pin is still there
20:29 - but after chest pin is gone because
20:32 - it's been popped and we can keep on
20:34 - popping every
20:35 - uh single item until it's gone
20:39 - and eventually after that it will come
20:40 - and come up an error because there is
20:42 - nothing left
20:43 - uh it'll basically be deleting the whole
20:45 - entire dictionary
20:46 - but yeah that is how to pop a dictionary
20:49 - now let's look at our second
20:51 - to last code which is a set um however
20:54 - i don't have too much information on the
20:56 - set but it's kind of similar to
20:58 - a data not a data a list
21:02 - and a tuple not completely similar to
21:05 - uh i call it a dictionary because
21:08 - it doesn't have a definition it only has
21:11 - the
21:12 - the name or the item so let's look at it
21:14 - now this is how to create
21:16 - a set so what we need is we need
21:19 - a name equals to set parentheses and
21:22 - inside the parentheses we need brackets
21:25 - it it's really confusing but
21:26 - it it's how to create a set so this is
21:29 - to declare an empty set right here
21:31 - electric equals to set and now we have
21:34 - parentheses and inside the parentheses
21:37 - we have a bracket
21:38 - and whatever we put inside the back
21:40 - bracket integers
21:41 - uh lists dictionaries can you do
21:44 - yeah you can put dictionaries another
21:46 - set i think and
21:48 - integers strings etc and separated by a
21:51 - comma
21:52 - then that's inside of the set so right
21:54 - now i'm going to be using these three
21:56 - for our electric type set jolteon zapdos
21:59 - and galvantula
22:00 - uh galvantula is a pretty good pokemon
22:03 - in pokemon go
22:04 - it was my first 1000 cp
22:07 - uh pokemon i'm pretty sure galvantula
22:11 - okay um it's a pretty good
22:14 - pokemon overall it has uh i have one
22:17 - with like the best
22:18 - uh i call it the best um
22:21 - skill set and it's pretty tanky and it
22:24 - does a lot of damage
22:26 - so yeah oh this is a shiny
22:29 - i never had chinese only had a normal
22:31 - one but
22:32 - anyways let's go back to coding so
22:36 - this is just how to create a set and if
22:38 - we were to print that it prints it sort
22:39 - of like a dictionary with the
22:41 - curly brackets but it doesn't have the
22:42 - definition and it
22:44 - prints out the whole thing uh i'm pretty
22:46 - sure we can slice it too so
22:48 - if we want only galvantula oh no it is
22:51 - not sliceable
22:52 - so this was an experiment but sets are
22:55 - not sliceable which means you can't get
22:57 - only a part of them
22:58 - and so you got to print out the whole
22:59 - thing but yeah now let's look at how to
23:01 - update a set just like we updated our
23:04 - dictionary
23:05 - so electric equals to set
23:08 - jolteon.covangela
23:09 - basically we're creating a set called
23:11 - electric and we're going to print out
23:13 - electric or the set before it was uh
23:16 - before it was updated and then we're
23:19 - going to update our
23:21 - set by using the command uh set name or
23:24 - electric
23:25 - dot add and then whatever we want to add
23:27 - to the end of
23:28 - our set which is magnemite which is
23:31 - another electric pokemon
23:32 - it's pretty og i'm pretty sure it came
23:34 - in the early generation
23:36 - uh magnamite magnum might i'm sorry i
23:41 - just need to look it up
23:42 - magnemite generation again
23:46 - narration okay
23:50 - introduced in generation one yeah i knew
23:52 - it was an og
23:53 - so magnemite was been been there for a
23:55 - really long time
23:56 - but yeah once we added magnemite in we
23:59 - should
24:00 - have a magmite at the end and we will
24:03 - print out electric
24:04 - after it has been added after magnamine
24:06 - has been added
24:07 - so now let's look at it as you can see
24:10 - uh
24:11 - magnemite was added to number two
24:14 - that is very interesting it's been added
24:16 - to the middle
24:18 - um i am not sure why but it's been added
24:22 - there
24:23 - uh if i look at it from alphabetical
24:26 - order it doesn't
24:27 - really work because the z is zapdos
24:31 - it should be behind but uh let's look
24:34 - at a little detailed if we want dot add
24:37 - a parenthesis
24:38 - like so uh why did i how how is that
24:42 - even possible but
24:43 - all right let's look at this okay dot
24:46 - add orange
24:47 - right so it doesn't add it to the end oh
24:50 - no this is what list i need to do with
24:52 - set
24:53 - sets python
24:57 - set dot uh this ad set uh
25:01 - okay geeks for geeks
25:06 - over here so but they're very but
25:08 - they're using a
25:09 - uh we know that is a set um
25:12 - so this is a set add s print
25:16 - okay let's run this
25:21 - i don't think anybody's having oh sorry
25:23 - i don't think anybody's having the
25:26 - the
25:29 - sorry i don't think anybody's having the
25:31 - same issues that i am for some reason i
25:33 - don't know why
25:34 - my uh my magnemite is going into the
25:37 - middle
25:38 - but anyways uh that wraps up today's
25:40 - lesson
25:41 - and i hope you enjoyed see the next one
25:45 - bye

Cleaned transcript:

hello everybody my name is jemmy and today i will be giving a brief overview on collections in python uh this is ep 2 and today we're going to be looking at dictionaries and sets so let's get started i am doing this in jupiter notebook but if you prefer in google collab you can uh the way to open jupyter notebook is to type in command prompt jupyter notebook and it should open your browser and after that you just need to click on new python 3 ipy kernel and it will bring you to an empty notebook um however minds i already did it but the link to download this notebook is in the description if you want to go download for yourself then you can click on that link okay now let's continue so in here what we want to do first is we want to look at a dictionary and we're going to look how to create a dictionary so a dictionary is created by having let me delete this really quickly so a dictionary is created by having two curly brackets uh next to each other like this and then this will create a dictionary but however a dictionary isn't normal like lists and like tuples instead it's kind of different um a dictionary well in real life a dictionary used to have like it has a word and it has a definition of a word so that's what it kind of looks like in python 2. so if we were to press enter in the middle of these two curly brackets it should give us some sort of like this format and then after that what we want to do is we want to type in the word first so pretend we make up a word pretend so like uh let's make up a word called i'm not even going to make up a word i'm just going to use a word i already made up python and go or python and i'll just say python um and then once you did that then what you do is you put you go outside of the quotation marks and then you put a colon there and then once you did that you put an integer or a list or anything really i'm going to put another string and i'm going to write the definition of python python and i'll say a python python pokemon series pokemon series right so now we have a list called start not sorry now list a dictionary called start and inside the dictionary there is a word called python and inside of pythamine or what the python means the definition of python is a python pokemon series so if we were to print out uh print start and brackets and then type out python like so it'll print a python pokemon series so this is how to create a list but today i'm not going to be doing python a python pokemon series uh it's actually today's series but i'm going to be using some pokemons instead uh since it's more you know fun to do with so print start uh and then let's type in squirtle squirtle like this and we can see that it prints out squirtle's integer right here which is 15. um this is the combat power uh so yeah don't get confused but the integer is the combat power of the pokemon and i forgot to mention but if you have multiple uh items inside of a dictionary then what you want to do is between each one you have a comma at the end to separate them so yeah this is basically how to create a list and let's look at how to update no not a list a dictionary i'm sorry and now let's look at how to update a dictionary so basically i have a dictionary here called start and inside start it is basically like last time it has pikachu charmander bubbles are and squirtle the starting pokemon for pokemon go and um in each pokemon uh there is the combat power so this is the what the dictionary called start kind of looks like and now we have another one called update pokey and it says it's equal to bulbasaur 15 uh home by power we can see the combat power here pikachu has 20 charmander has 15 bulbasaur has 10 and squirtle has 15. so right now bulbasaur is looking kind of weak um and all the rest are kind of strong um so he's kind of neglected but what we want to do is he went to the gym and he went to train uh and now he's really really well he's got he's gotten stronger so now we're gonna set him to have 15 combat power instead of 10 so let's do it what we want to do is we want to use the command start which is the name of this first dictionary dot update don't get confused okay dot update is a command not the name of this dictionary start dot update and inside parentheses we pass in a parameter called updatepokey which is our second dictionary and once we did that this is what our list should look like so now we can see that bulbasaur is no longer 10 by 15 uh and if we were to print one buff print our list beforehand uh then this is the difference let me print it okay okay so now we can see that bulbasaur instead of being 10 it is now 15 so that is how to update a list uh and make sure make sure that you have this the name the same thing or else it won't work so yeah that is how to update a list let's move on to not a list i'm starting to say list dictionary dictionary okay never don't forget all the lists they said it's dictionary okay now let's look at how to emerge a dictionary so we have our first dictionary here which is start again uh with all the pokemons and uh bulbasaur has 15 combat power and we have another dictionary called water this is like some water type pokemons like vaporeon which is an evolution of eevee suacoon or suicune i don't know but it's uh it's a part of the trio the beast trio in generation six and then there's magikarp of course the classic uh and so vaporeon has 30 combat power suicune has 50 and magikarp has five um and yeah what we want to do is you want to put them together so oh it's going to be one big list so what we want to do is we want to use the command just like last time start which is our first uh dictionary's name dot update water and now basically uh these two dictionaries will combine together into one big one um which is the start one so it will just push it together and let's see what it does so as you can see it's a really really really really long uh dictionary and there is like uh over here there is where it connects after squirtle there is vaporeon and the rest so yeah that's how to merge a list a dictionary oh my gosh a dictionary and now let's look at how to delete dictionary elements so like a part of the dictionary but not the whole thing so let's look at how to do it so let's see first of all we have our dictionary over here the start dictionary with all the starter pokemon and we will print it first without doing anything so right now it is unchanged untouched uh so it's completely the same but let's use our first command which is delete start charmander so this will basically delete charmander from the start uh dictionary so let's do it now you can see the difference charmander is gone from our second list but it's still there in the first list because it didn't delete it yet but after that after deleted it's no longer there uh now let's do a different thing let's do start dot clear which will clear our whole entire uh dictionary okay now you can see that the whole dictionary is gone nothing is left of it but now uh let's move on to our last one which is delete start and i'm pretty sure you guys know what that does it just deletes the entire dictionary out of existence so let's see as you can see it comes with an error so this is before right before and we have our uh dictionary just like normal but then after is an error because it says name start is not defined the reason it's not defined is because it's gone it's no longer there it's been deleted um but yeah that is basically some deleting uh elements of dictionaries uh and yeah pretty good uh and handy to use let's now let's move on to finding dictionary length so now we're going to look at how long a dictionary is by not counting them of course but by using a command it's pretty simple i'll show you but let's look at our new dictionary our new dictionary is called fire with some fire type pokemons like torchic flareon a volcanion volcano is a good pokemon it's really really weird it's a dual type pokemon that has water and fire so it's kind of uh like uh opposites of each other but it's a good pokemon i like it i don't think it is in pokemon go it is volcanion and pokemon go i never caught it so uh in pokemon go uh yes it is in pokemon go wow that is a lot of cp 3882 wow okay well yeah we pour into good pokemon just simply yeah and that's how he looks uh volcanion and yeah so volcanion has a comet power of 60 i know that is really really really low but i am right now judging my pokemons from 1 to 100 combat power and i know it might not be accurate it's probably somewhere around 90 if it's on my scale but but but this is not about pokemon stats right now this is about coding so we're gonna leave the minor details out okay um and we're gonna focus on the bigger detail okay but yeah let's move on uh so once we did this we're going to be uh well of course we're gonna be finding the length of the dictionary so we can see right here it's three right because we can count it but how however if you continue your dictionary like you add more and more stuff over like uh the project or the program uh then you'll add you have a really big dictionary at one point and then you won't be able to count it anymore so then you would need uh this command which is really really simple print len which stands for length and then the dictionary name fire oh and it should just print out how long it is so we can see that it's three and if we were to like copy paste this one more time like so it should become six oh okay oh i forgot the comma okay there we go it's still three and the reason this is uh it's still three because we gotta change the the well the name of the not the name but the wording so i can just delete some of it i'm gonna tour toward let me let me make up my own name uh tour tour kick okay torque kick and there's uh flare on i get it it's like fire flare on i don't know and then um volcanion let's call this uh uh uh ocean i don't know uh what is like an ocean disaster tsunami that doesn't make sense um just say huevos wavenyan wave okay screw it we have tour kick flareon and wavian as our three new pokemons and let's do it again as you can see it's six um so yeah this is how to find the length of uh a dictionary it's just by doing print len and then the dictionary name okay let's move on uh let me delete this okay so let's move on and we're going to look at how to check existing elements or basically we're going to see whether or not the things we're trying to look for exists inside of the dictionary this is uh also used with input or user has a use user interface kind of uh but basically we're going to be using a dictionary which is the fire dictionary uh and you have torchic flareon and volcanion so we have also an input which is called keyword keyword equals to input what fire type pokemon are you looking for so this will basically ask them um and then they can type their reply in and after that it will basically trigger a function called search and then inside the function there is a parameter called pokename and we'll just pass in keyword as the parameter but now let's take a look at the function so the function itself has the name search and a parameter called pokename and it says if poker name in fire which means if the keyword that we're searching for is inside of our fire dictionary then print poker name which is the keyword is in the database but if it's not then else print poker name is not in the database so let's take a look at uh the real thing so what are you looking for pretend i want to see uh a fire pokemon like moltres uh which is a fireball firebird like so oh no search is not defined okay let's see what it got wrong search and search uh let's see okay moltres i'm i don't know why i'm repeating it search is not defined name search but it's it's it's the same thing right or do i have how do i how did i get it wrong name search is not defined am i doing something wrong i didn't edit it one second okay guys i just figured out what it got wrong i am very very stupid but um it's not defined because it the keyword went first before the actual function is defined so this means that there is currently no function called search while they want to call it up so let's control x this and we're going to put it beneath our function so it's going to define our function before so like this and there we go it should work hopefully multrez okay multis okay and now click enter and there you go motors is not in the database uh the the reason an error appeared if you didn't get it was because uh i put this uh keyword that triggers the diction not the dictionary triggers the function before the actual function was did it um even existed which meant that there was actually no function called search until uh at the end of the code and of course it will have an error because there was no function called search at the time they called it so we have to put that after search was defined um but yeah that is how to fix the problem and now let's look at some pokemons that are inside the data set so like volcanion volcanion like this and there we go volcanion is in the database so we can use this as a user interface and you can develop it to be even more complex and more uh appliable i can say and make it better overall but yeah this is our uh data set of fire and this is how to check existing elements and now let's look at turning a dictionary into a list so let's look at this now some of you might be saying like that's so simple what do you mean it's so hard why do you need all this for loop for and you're probably thinking like we could just do like this list fire equals to list and then our our name fire like so now it converted the whole entire list into i mean the whole entire dictionary into a list um print l fire l l fire like this right and uh oh i forgot why do i put where did parentheses um there oh my gosh why am i putting quotation marks on yeah okay there we go and you're probably thinking like hey that's it now we turned our whole entire dictionary into a list but i thought that too in the beginning but then however i realized that it was not that simple we can see that in this dictionary right here we lost all our definitions meaning that we don't have any definitions for these pokemons at all but the what i want is i want to keep the definition as well as the item so i have to use a for loop and i'll show you how to do that right now so we have we're going to declare an empty list called l fire or saying for list fire and after that we're going to make a for loop for i in fire a equals to i comma fire and then the the i in parenthesis not parenthesis bracket this will basically grab each um grab the item and the item definition into the variable a and then it will append a to the variable l fire which is our list so it will add a into our list right here and after that it will just add and add an ad until it's completely done and once it does that we can just simply type it out and now it is a full list as you can see a full list toward chick um and by the way this right here we can call it up too so pretend we only want this one right so we can do we only want torchic so we want and torchic index is zero so if we were to do this and it will only print out torchic so yeah that is how to convert a dictionary into a list i was about to say how to convert a list into a dictionary but i'm getting too confused anyways let's move on why am i laughing so weird okay i'm gonna cut that part out um but uh yeah i am very sad inside okay let's move on um so now let's look at the popping dictionary it's not like a popcorn dictionary but it's like uh it's how to pop a dictionary so um in here we're going to be basically deleting some elements like we did before but it's a it's kind of different because instead of deleting any element we want from the dictionary we will delete the uh only the back uh the last item of the dictionary using the command dot pop and let's look at how to do it so we have a dictionary called grass and inside of grass there's some grass pokemons such as uh or plant type i mean both of them grass or plant uh glass grass who who calls it plant type i mean does your plant type even plant type pokemon i mean some people call it plant type but it's called grass type yeah it's called grass type but you know some people call it plants some people called grass but yeah it's some grasstype pokemon such as bulb sprout executor which is a great tank in pokemon uh and chest pin which is a little green how do i how do i even describe it it's like uh it's like a forest animal with a green and three little hair spikes here i'll show you a picture um chest pin all right let's look at him yeah three little spikes on his head he's a i don't even a squirrel i can say with a tail that's like that but yeah he he's a plant type and yeah that is our grass type dictionary and let's look at how to pop a grass type dictionary well not a grass type dictionary any dictionary so um let's first print out uh our dictionary before it was popped and then let's pop our dictionary using the command dictionary name or grass dot pop item and then inside uh we have a parenthesis after that and we put print after comma graph which will print the dictionary after it was popped as you can see this is our dictionary before it was popped uh executor is still there i mean not executed chest pin is still there but after chest pin is gone because it's been popped and we can keep on popping every uh single item until it's gone and eventually after that it will come and come up an error because there is nothing left uh it'll basically be deleting the whole entire dictionary but yeah that is how to pop a dictionary now let's look at our second to last code which is a set um however i don't have too much information on the set but it's kind of similar to a data not a data a list and a tuple not completely similar to uh i call it a dictionary because it doesn't have a definition it only has the the name or the item so let's look at it now this is how to create a set so what we need is we need a name equals to set parentheses and inside the parentheses we need brackets it it's really confusing but it it's how to create a set so this is to declare an empty set right here electric equals to set and now we have parentheses and inside the parentheses we have a bracket and whatever we put inside the back bracket integers uh lists dictionaries can you do yeah you can put dictionaries another set i think and integers strings etc and separated by a comma then that's inside of the set so right now i'm going to be using these three for our electric type set jolteon zapdos and galvantula uh galvantula is a pretty good pokemon in pokemon go it was my first 1000 cp uh pokemon i'm pretty sure galvantula okay um it's a pretty good pokemon overall it has uh i have one with like the best uh i call it the best um skill set and it's pretty tanky and it does a lot of damage so yeah oh this is a shiny i never had chinese only had a normal one but anyways let's go back to coding so this is just how to create a set and if we were to print that it prints it sort of like a dictionary with the curly brackets but it doesn't have the definition and it prints out the whole thing uh i'm pretty sure we can slice it too so if we want only galvantula oh no it is not sliceable so this was an experiment but sets are not sliceable which means you can't get only a part of them and so you got to print out the whole thing but yeah now let's look at how to update a set just like we updated our dictionary so electric equals to set jolteon.covangela basically we're creating a set called electric and we're going to print out electric or the set before it was uh before it was updated and then we're going to update our set by using the command uh set name or electric dot add and then whatever we want to add to the end of our set which is magnemite which is another electric pokemon it's pretty og i'm pretty sure it came in the early generation uh magnamite magnum might i'm sorry i just need to look it up magnemite generation again narration okay introduced in generation one yeah i knew it was an og so magnemite was been been there for a really long time but yeah once we added magnemite in we should have a magmite at the end and we will print out electric after it has been added after magnamine has been added so now let's look at it as you can see uh magnemite was added to number two that is very interesting it's been added to the middle um i am not sure why but it's been added there uh if i look at it from alphabetical order it doesn't really work because the z is zapdos it should be behind but uh let's look at a little detailed if we want dot add a parenthesis like so uh why did i how how is that even possible but all right let's look at this okay dot add orange right so it doesn't add it to the end oh no this is what list i need to do with set sets python set dot uh this ad set uh okay geeks for geeks over here so but they're very but they're using a uh we know that is a set um so this is a set add s print okay let's run this i don't think anybody's having oh sorry i don't think anybody's having the the sorry i don't think anybody's having the same issues that i am for some reason i don't know why my uh my magnemite is going into the middle but anyways uh that wraps up today's lesson and i hope you enjoyed see the next one bye
