With timestamps:

00:00 - hello everybody i'm jemmy and today i
00:02 - will be giving you a brief overview on
00:04 - how to make an ai in 10 minutes this is
00:06 - fast ai for kids episode 1 and let's get
00:09 - right into it first off the timer
00:11 - doesn't start yet because of course i'm
00:13 - not making ai yet i'm just going to give
00:14 - you a slideshow of what we're going to
00:16 - be doing and uh how we're going to be
00:18 - doing and what we're doing so
00:20 - before the timer starts uh i'm going to
00:22 - explain it to you
00:24 - uh so yeah let's get right into it
00:26 - an ai is actually a type of computer
00:28 - program um but it's very different from
00:31 - like a normal computer program a simple
00:33 - one so this could be classified as a
00:35 - simple computer program you can see that
00:37 - there is the input there's the program
00:39 - and the result so you give it something
00:40 - like one plus one the program like does
00:43 - something with it like thinks about it
00:44 - and the results would be two um so yeah
00:46 - that would be how simple program works
00:49 - but the thing is that uh to make it an
00:51 - ai we would have to make it think by
00:52 - itself right but this one it can't think
00:55 - by itself and it can't fix problems like
00:56 - automatically so there's a guy named
00:59 - arthur samuel and in 1990 and 1949 they
01:03 - actually thought of a way to or the
01:04 - program to be able to think by itself or
01:07 - fix problems on its own and that is
01:09 - instead of having only inputs going into
01:11 - the model there's now a thing called
01:13 - weight weight is actually something like
01:16 - to
01:16 - adjust the result of the model so you
01:19 - can adjust the weight um to be higher or
01:20 - lower and then you see the results and
01:22 - then you like look if it's good or bad
01:25 - and you can adjust it again and repeat
01:27 - until you have a great a model but
01:31 - there's a problem with this it is that
01:32 - the weights we have to adjust it
01:34 - manually on our own um instead of having
01:36 - something to do it for us so now we
01:39 - actually uh have an improved version of
01:42 - our model and you can see that there is
01:44 - a new thing that is performance and it
01:46 - updates our weight um and this is called
01:48 - an uh an automated mechanism which is
01:51 - basically uh going to our results and
01:54 - looking at the results and then seeing
01:57 - uh what we get from the results and that
02:00 - is our performance and then we updated
02:02 - the weights according to the performance
02:03 - so if the performance is bad then we
02:05 - just change the weight and then we see
02:07 - if it's better or worse if it's better
02:09 - than we uh keep on doing it that way is
02:11 - tweaking little by little until we get
02:13 - what we want but again this is just the
02:14 - thought so um we actually don't have it
02:17 - yet this is all called machine learning
02:19 - and machine learning is basically when
02:21 - you train programs um and use them to uh
02:24 - let them be able to learn from their
02:26 - mistakes and then correcting them making
02:28 - them better and better so that is how
02:29 - they get like get really good at like
02:31 - video games and stuff and now since this
02:33 - is just like a thought process it's not
02:35 - actually a real thing yet we can start
02:37 - trying to make it a real thing so people
02:39 - have actually used this model right here
02:41 - and they replaced it with neural
02:42 - networks and neural networks are effect
02:44 - functions that can be used to solve any
02:46 - given problems by just changing the
02:48 - weight of it so it can solve like any
02:51 - type of problem at all and now that's in
02:52 - that part is through the model has been
02:54 - changed let's replace this part right
02:56 - here performance uh and then updates the
02:58 - weight according to the performance this
03:00 - part right here we can change it but
03:02 - what can we change it to
03:03 - luckily we have a thing called sgd or
03:06 - stochastic gradient descent which it
03:08 - basically updates our weights according
03:09 - to the performance and now we have all
03:12 - the parts enabled um so yeah we have
03:15 - made an ai now this is how what an ai
03:17 - looks like however this is an old
03:18 - version of an ai we have made it to the
03:20 - modern age and this is what it looks
03:22 - like now you can see that there is one
03:24 - added thing called labels and the things
03:27 - have been changed the names have been
03:29 - changed so you can see uh parameters is
03:32 - actually weights architecture is model
03:34 - um predictions is basically our was it
03:38 - our result and loss is our performance
03:40 - um so it's pretty much the same thing
03:42 - except we added labels uh labels is
03:45 - basically like uh let's see our input
03:47 - would be
03:48 - ten pictures of dogs right and we put
03:50 - into our architecture and the
03:52 - architecture trains it ten times um and
03:55 - eight out of ten images the rai
03:57 - classifies it as a dog so the
03:59 - predictions would be eight out of ten
04:01 - images are dogs and then two would be
04:03 - other animals and if and then that would
04:05 - be our loss loss would be eighty percent
04:07 - um eighty percent uh no twenty percent
04:10 - error rate uh and basically eighty 80
04:13 - accuracy but then the label says all
04:16 - all ten figures are dogs then the loss
04:19 - would become uh zero because we have
04:21 - classified most of it as a dog um so
04:24 - yeah that is basically how this works
04:26 - but if like it gets like really low like
04:28 - 40 and then the label said all 10
04:31 - pictures are dogs then the loss goes
04:32 - update the parameters changes it and
04:34 - then sees if it's better and it loops
04:36 - again and again and again so that that's
04:38 - how an ai works and let's go create an
04:40 - ai um this is basically the entire code
04:44 - for an ai can you like believe it it's
04:45 - like so short right
04:47 - look believe it or not you can't believe
04:49 - it it's not that short
04:52 - it's actually shorter than that this is
04:53 - the entire code for the ai that short
04:56 - like what in uh
04:58 - under 20 lines so it's really short and
05:01 - let's go create it um now this you might
05:04 - be wondering hey where did you just go
05:05 - this is a collab um again if you didn't
05:07 - watch ap 0 make sure to go watch ep 0 uh
05:10 - it will explain a lot of things we did
05:12 - um but this is basically our ai in 10
05:14 - minutes and once i say start the timer
05:17 - will start but uh yeah so this is a
05:20 - collab file you can actually go into the
05:22 - description the first link in the
05:23 - description click on that and you'll
05:25 - come to the same page as me uh so we can
05:27 - go look through this together
05:29 - uh so i'll be explaining how each line
05:32 - works and what they do
05:34 - and by the end of this you will have a
05:36 - ai that can classify if an image is a
05:38 - cat and how much percent it's a cat um
05:40 - this will work on your any computer you
05:42 - don't need to download anything just go
05:43 - into here and it will work 100
05:46 - so the timer starts now
05:48 - all right so this is fasta for kids
05:50 - episode one make your a ai in 10 minutes
05:53 - um so let's start the first line is
05:55 - basically to uh pip install fastbook
05:58 - which is fast ai they'll install fasta
06:00 - into your collab workspace let's click
06:02 - run
06:04 - uh now this part we're gonna have to
06:05 - connect to our
06:07 - uh server or google thingy i don't know
06:10 - uh but we can actually make sure by
06:11 - clicking on edit notebook settings and
06:14 - make sure this is gpu uh then click save
06:16 - and once it's connected it will run and
06:18 - it should not come up an error
06:20 - there you go once it has a little check
06:22 - mark there that means finish and we can
06:24 - go to the next one so this one is these
06:26 - lines are to import functions from
06:28 - fastbook or fastai so we can have more
06:31 - of a wide variety of computer models um
06:34 - that we can use let's press run
06:36 - all right once we're done with that we
06:38 - can now go on to the next one right here
06:40 - is uh where we start to download a
06:43 - standard data set of uh
06:46 - data sets from past days data collection
06:49 - and this is a pet data set so we would
06:52 - have 7 390 images of dogs and cats
06:55 - combined
06:56 - from 30 37 different breeds of of both
06:59 - dog and cats and then we will after that
07:02 - we will use a function to separate the
07:04 - ai uh from dogs and cats so let's get
07:07 - the data set first
07:10 - and in the data set the files aren't
07:12 - separated for us like dogs and cats
07:14 - and we'll have to create our own
07:16 - function to separate them but don't
07:17 - worry that's not that hard i'll show you
07:19 - how to do it
07:22 - okay now our code is finished and we're
07:25 - ready to go to the next one so the next
07:27 - one over here is to create a function
07:28 - which will separate our uh our what you
07:31 - call it files from each other so dogs
07:33 - and cats um how we're going to do this
07:35 - is all dogs files are the file name is
07:37 - all lower case but in catch files the
07:40 - file name is the beginning letter is
07:42 - uppercase so we can create a function
07:45 - that sorts out lowercase and uppercase
07:47 - um in this case uh oh my god i'm saying
07:49 - case too much so cats are going to be
07:51 - uppercase and dogs are going to be
07:52 - lowercase uh so that's how we're going
07:54 - to separate them and this just to create
07:55 - a function so let's run this too
07:58 - and you can see it runs rather quickly
08:00 - uh now we're gonna go to this one right
08:02 - here it might look intimidating at first
08:03 - but don't worry it's not that much uh so
08:06 - first we're gonna separate them which we
08:07 - already did so we're just recalling the
08:09 - function that we created up here
08:11 - and now we're going to be creating a
08:13 - code or not creating a code using a code
08:16 - that will transform our images in some
08:18 - way which will help increase the ai's
08:20 - accuracy and um we have an option to
08:24 - batch transform or image transform image
08:26 - transform is to basically change the
08:28 - image one by one that transform is to
08:31 - change an image like in a batch or like
08:33 - in a group we're gonna be using image
08:34 - transform today and uh how we're gonna
08:37 - transform it is we're gonna resize it to
08:38 - two to four pixels by two to four pixels
08:40 - um this way i find it like the best
08:43 - results so yeah change it to that but
08:45 - right now i already have it changed for
08:47 - you so you don't need to do anything now
08:48 - we're going to be doing valid underscore
08:50 - pct equals to 0.2 this is basically
08:53 - setting our validation set um to
08:56 - 20 of our data set so that would be like
09:00 - some 20 of
09:01 - 7390 right
09:03 - yeah yeah
09:05 - so we're going to set the validation set
09:07 - and we're going to set a seed 42 uh this
09:09 - is so that we want the val we need the
09:11 - validation set to be the same because if
09:14 - we put the validation set in the
09:15 - training set
09:16 - then it would be kind of cheating since
09:18 - our ai uses the validation set to train
09:21 - and if it's trained uh if it's tested by
09:23 - the image that it trained already then
09:26 - it means that um it doesn't it's gonna
09:28 - be 100 either way it's already it
09:30 - already knows what that image is so we
09:32 - have to make sure that we keep the
09:34 - validation set differ apart from our
09:36 - training set
09:38 - and yeah that is the code right there
09:39 - press run
09:42 - all right once we're done with that
09:43 - we're going to now create a cnn or a
09:46 - convolutional neural network um we're
09:48 - going to be using the cnn
09:50 - uh and we're going to be using cnn with
09:53 - the architecture of resnet34 resnet34 is
09:56 - like a pre-trained model so it already
09:58 - has been trained by uh by other people
10:01 - um you can see it has 34 layers and
10:03 - we're going to be using our metrics as
10:05 - error rate
10:06 - now error rate and accuracy you can
10:08 - change this um right now i'm using error
10:11 - rate which is more simpler for me uh
10:13 - basically accuracy is one minus error
10:15 - rate so you get one subtract by air rate
10:17 - if the error rate is like 0.1 then the
10:20 - accuracy would be 0.9 um so yeah but i'm
10:23 - using airaid today we're also going to
10:25 - be using a pre-trained model which is
10:26 - our resident 34 as i said earlier uh
10:28 - which has been trained by 1.3 million
10:31 - images that is a lot but it's not
10:33 - specific to cats or dogs instead it's
10:36 - more of a general um idea like roads uh
10:40 - roads buildings cars bicycles uh
10:43 - airplanes stuff like that so it's more
10:46 - general and we have to fine tune it for
10:49 - uh it to be great
10:51 - uh and more specific towards dog and cat
10:53 - so now we're gonna click play and you
10:56 - can see the bottom line we're gonna fine
10:57 - tune it one
10:58 - time keep in mind this part will take a
11:02 - little bit longer so um
11:04 - i might cut this out of the
11:06 - out of the part if i
11:08 - out of the timer if i like take too long
11:10 - but i probably it probably won't matter
11:12 - that much i don't think you stupid okay
11:15 - guys i'm gonna use utilize this time
11:17 - wisely so while it's running i just want
11:18 - to mention something called overfitting
11:20 - overfitting is when we fine tune our ai
11:23 - too much by the way this number right
11:24 - here you can actually change this to be
11:26 - like a hundred or like 10 or whatever
11:29 - you want and it will train the ai that
11:31 - much times the more times it trains the
11:33 - better it gets but
11:35 - if you train too much then the worse it
11:37 - gets let me show you an example so when
11:40 - you train an ai like pretend uh 15 times
11:43 - with two less data then the accuracy
11:46 - would actually become worse instead of
11:47 - better uh so that's overfitting um right
11:50 - now i'm gonna only train it one time
11:52 - which is really good uh it would be like
11:55 - uh you can see this is the pre-trained
11:56 - model right here with the one without
11:58 - any fine tuning at 0.004 but now this is
12:01 - going to be the one with the fine tuning
12:03 - at 0.003 so that's the really good um
12:06 - i'm so i'm not going to change it too
12:07 - much um but if you want to change it to
12:09 - be a higher number just be careful of
12:11 - overfitting which is when your error
12:12 - rate goes back up instead of going down
12:15 - all right let's move on so this one is
12:17 - creating a this code creates a button
12:19 - for us to upload our images or to let
12:22 - the ai uh basically um
12:26 - uh predict the image for us so if we run
12:28 - this one it will just create it and this
12:30 - is to show our image
12:32 - our button sorry here you go this is our
12:34 - button we'll use this later um and then
12:36 - this one's basically each displays our
12:39 - image that we're gonna put in so we're
12:40 - gonna do a cat image speedrun right now
12:42 - cat wait go go go we just need to find
12:45 - one picture of a cat uh this one and
12:47 - i'll save it save as uh image save
12:51 - images and just save and then don't make
12:53 - it too big um i don't know how big mine
12:55 - was but if it's too big it won't work
12:57 - click upload and then go into this code
13:00 - right here then it will uh show our
13:03 - image like so that is the cute cat and
13:06 - now we're going to predict the image be
13:08 - if it's a cat or a dog this first code
13:11 - is used to predict it and then these
13:12 - last two codes basically just chose the
13:14 - result so let's click run
13:18 - this is a cat with a probability of 100
13:21 - and that is how you create an ai in 10
13:23 - minutes you can actually change this to
13:25 - be anything you like the image could be
13:27 - of a face of your parents of yourself or
13:30 - of your cat if you have one um then you
13:32 - can see if it uh if your cat's really a
13:35 - cat or not or if your family members are
13:37 - a cat so yeah that is how to create an
13:40 - eye in 10 minutes i hope you enjoy this
13:41 - episode um again the link is in the
13:43 - description uh if you want to follow
13:45 - along uh but yeah this is it for today
13:48 - i'll see you next video bye

Cleaned transcript:

hello everybody i'm jemmy and today i will be giving you a brief overview on how to make an ai in 10 minutes this is fast ai for kids episode 1 and let's get right into it first off the timer doesn't start yet because of course i'm not making ai yet i'm just going to give you a slideshow of what we're going to be doing and uh how we're going to be doing and what we're doing so before the timer starts uh i'm going to explain it to you uh so yeah let's get right into it an ai is actually a type of computer program um but it's very different from like a normal computer program a simple one so this could be classified as a simple computer program you can see that there is the input there's the program and the result so you give it something like one plus one the program like does something with it like thinks about it and the results would be two um so yeah that would be how simple program works but the thing is that uh to make it an ai we would have to make it think by itself right but this one it can't think by itself and it can't fix problems like automatically so there's a guy named arthur samuel and in 1990 and 1949 they actually thought of a way to or the program to be able to think by itself or fix problems on its own and that is instead of having only inputs going into the model there's now a thing called weight weight is actually something like to adjust the result of the model so you can adjust the weight um to be higher or lower and then you see the results and then you like look if it's good or bad and you can adjust it again and repeat until you have a great a model but there's a problem with this it is that the weights we have to adjust it manually on our own um instead of having something to do it for us so now we actually uh have an improved version of our model and you can see that there is a new thing that is performance and it updates our weight um and this is called an uh an automated mechanism which is basically uh going to our results and looking at the results and then seeing uh what we get from the results and that is our performance and then we updated the weights according to the performance so if the performance is bad then we just change the weight and then we see if it's better or worse if it's better than we uh keep on doing it that way is tweaking little by little until we get what we want but again this is just the thought so um we actually don't have it yet this is all called machine learning and machine learning is basically when you train programs um and use them to uh let them be able to learn from their mistakes and then correcting them making them better and better so that is how they get like get really good at like video games and stuff and now since this is just like a thought process it's not actually a real thing yet we can start trying to make it a real thing so people have actually used this model right here and they replaced it with neural networks and neural networks are effect functions that can be used to solve any given problems by just changing the weight of it so it can solve like any type of problem at all and now that's in that part is through the model has been changed let's replace this part right here performance uh and then updates the weight according to the performance this part right here we can change it but what can we change it to luckily we have a thing called sgd or stochastic gradient descent which it basically updates our weights according to the performance and now we have all the parts enabled um so yeah we have made an ai now this is how what an ai looks like however this is an old version of an ai we have made it to the modern age and this is what it looks like now you can see that there is one added thing called labels and the things have been changed the names have been changed so you can see uh parameters is actually weights architecture is model um predictions is basically our was it our result and loss is our performance um so it's pretty much the same thing except we added labels uh labels is basically like uh let's see our input would be ten pictures of dogs right and we put into our architecture and the architecture trains it ten times um and eight out of ten images the rai classifies it as a dog so the predictions would be eight out of ten images are dogs and then two would be other animals and if and then that would be our loss loss would be eighty percent um eighty percent uh no twenty percent error rate uh and basically eighty 80 accuracy but then the label says all all ten figures are dogs then the loss would become uh zero because we have classified most of it as a dog um so yeah that is basically how this works but if like it gets like really low like 40 and then the label said all 10 pictures are dogs then the loss goes update the parameters changes it and then sees if it's better and it loops again and again and again so that that's how an ai works and let's go create an ai um this is basically the entire code for an ai can you like believe it it's like so short right look believe it or not you can't believe it it's not that short it's actually shorter than that this is the entire code for the ai that short like what in uh under 20 lines so it's really short and let's go create it um now this you might be wondering hey where did you just go this is a collab um again if you didn't watch ap 0 make sure to go watch ep 0 uh it will explain a lot of things we did um but this is basically our ai in 10 minutes and once i say start the timer will start but uh yeah so this is a collab file you can actually go into the description the first link in the description click on that and you'll come to the same page as me uh so we can go look through this together uh so i'll be explaining how each line works and what they do and by the end of this you will have a ai that can classify if an image is a cat and how much percent it's a cat um this will work on your any computer you don't need to download anything just go into here and it will work 100 so the timer starts now all right so this is fasta for kids episode one make your a ai in 10 minutes um so let's start the first line is basically to uh pip install fastbook which is fast ai they'll install fasta into your collab workspace let's click run uh now this part we're gonna have to connect to our uh server or google thingy i don't know uh but we can actually make sure by clicking on edit notebook settings and make sure this is gpu uh then click save and once it's connected it will run and it should not come up an error there you go once it has a little check mark there that means finish and we can go to the next one so this one is these lines are to import functions from fastbook or fastai so we can have more of a wide variety of computer models um that we can use let's press run all right once we're done with that we can now go on to the next one right here is uh where we start to download a standard data set of uh data sets from past days data collection and this is a pet data set so we would have 7 390 images of dogs and cats combined from 30 37 different breeds of of both dog and cats and then we will after that we will use a function to separate the ai uh from dogs and cats so let's get the data set first and in the data set the files aren't separated for us like dogs and cats and we'll have to create our own function to separate them but don't worry that's not that hard i'll show you how to do it okay now our code is finished and we're ready to go to the next one so the next one over here is to create a function which will separate our uh our what you call it files from each other so dogs and cats um how we're going to do this is all dogs files are the file name is all lower case but in catch files the file name is the beginning letter is uppercase so we can create a function that sorts out lowercase and uppercase um in this case uh oh my god i'm saying case too much so cats are going to be uppercase and dogs are going to be lowercase uh so that's how we're going to separate them and this just to create a function so let's run this too and you can see it runs rather quickly uh now we're gonna go to this one right here it might look intimidating at first but don't worry it's not that much uh so first we're gonna separate them which we already did so we're just recalling the function that we created up here and now we're going to be creating a code or not creating a code using a code that will transform our images in some way which will help increase the ai's accuracy and um we have an option to batch transform or image transform image transform is to basically change the image one by one that transform is to change an image like in a batch or like in a group we're gonna be using image transform today and uh how we're gonna transform it is we're gonna resize it to two to four pixels by two to four pixels um this way i find it like the best results so yeah change it to that but right now i already have it changed for you so you don't need to do anything now we're going to be doing valid underscore pct equals to 0.2 this is basically setting our validation set um to 20 of our data set so that would be like some 20 of 7390 right yeah yeah so we're going to set the validation set and we're going to set a seed 42 uh this is so that we want the val we need the validation set to be the same because if we put the validation set in the training set then it would be kind of cheating since our ai uses the validation set to train and if it's trained uh if it's tested by the image that it trained already then it means that um it doesn't it's gonna be 100 either way it's already it already knows what that image is so we have to make sure that we keep the validation set differ apart from our training set and yeah that is the code right there press run all right once we're done with that we're going to now create a cnn or a convolutional neural network um we're going to be using the cnn uh and we're going to be using cnn with the architecture of resnet34 resnet34 is like a pretrained model so it already has been trained by uh by other people um you can see it has 34 layers and we're going to be using our metrics as error rate now error rate and accuracy you can change this um right now i'm using error rate which is more simpler for me uh basically accuracy is one minus error rate so you get one subtract by air rate if the error rate is like 0.1 then the accuracy would be 0.9 um so yeah but i'm using airaid today we're also going to be using a pretrained model which is our resident 34 as i said earlier uh which has been trained by 1.3 million images that is a lot but it's not specific to cats or dogs instead it's more of a general um idea like roads uh roads buildings cars bicycles uh airplanes stuff like that so it's more general and we have to fine tune it for uh it to be great uh and more specific towards dog and cat so now we're gonna click play and you can see the bottom line we're gonna fine tune it one time keep in mind this part will take a little bit longer so um i might cut this out of the out of the part if i out of the timer if i like take too long but i probably it probably won't matter that much i don't think you stupid okay guys i'm gonna use utilize this time wisely so while it's running i just want to mention something called overfitting overfitting is when we fine tune our ai too much by the way this number right here you can actually change this to be like a hundred or like 10 or whatever you want and it will train the ai that much times the more times it trains the better it gets but if you train too much then the worse it gets let me show you an example so when you train an ai like pretend uh 15 times with two less data then the accuracy would actually become worse instead of better uh so that's overfitting um right now i'm gonna only train it one time which is really good uh it would be like uh you can see this is the pretrained model right here with the one without any fine tuning at 0.004 but now this is going to be the one with the fine tuning at 0.003 so that's the really good um i'm so i'm not going to change it too much um but if you want to change it to be a higher number just be careful of overfitting which is when your error rate goes back up instead of going down all right let's move on so this one is creating a this code creates a button for us to upload our images or to let the ai uh basically um uh predict the image for us so if we run this one it will just create it and this is to show our image our button sorry here you go this is our button we'll use this later um and then this one's basically each displays our image that we're gonna put in so we're gonna do a cat image speedrun right now cat wait go go go we just need to find one picture of a cat uh this one and i'll save it save as uh image save images and just save and then don't make it too big um i don't know how big mine was but if it's too big it won't work click upload and then go into this code right here then it will uh show our image like so that is the cute cat and now we're going to predict the image be if it's a cat or a dog this first code is used to predict it and then these last two codes basically just chose the result so let's click run this is a cat with a probability of 100 and that is how you create an ai in 10 minutes you can actually change this to be anything you like the image could be of a face of your parents of yourself or of your cat if you have one um then you can see if it uh if your cat's really a cat or not or if your family members are a cat so yeah that is how to create an eye in 10 minutes i hope you enjoy this episode um again the link is in the description uh if you want to follow along uh but yeah this is it for today i'll see you next video bye
