With timestamps:

00:00 - hello everybody welcome to
00:03 - saturday python mini project so today is
00:06 - another series it's a new one um called
00:09 - python saturday or saturday python and
00:11 - basically in this series we're going to
00:13 - be creating a lot of mini projects um so
00:16 - this is ep one and today we're going to
00:18 - be creating a password creator which
00:20 - basically uh generates a password
00:23 - i will show you what it does right now
00:25 - so pretend we have a password that is uh
00:29 - pretend how much digits long we can have
00:31 - like
00:32 - 20 digits long pretend and it'll print
00:34 - out 20 digits of uppercase lowercase
00:38 - accept special characters and numbers of
00:41 - passwords so this is what it would look
00:43 - like um we can have it to like eight or
00:45 - something something more reasonable but
00:48 - this is a password creator that you can
00:49 - use the link to download this notebook
00:51 - will be in the description so if you
00:54 - want to check it out and follow along
00:55 - with me then uh you can do that so now
00:58 - let's look at our uh password creator
01:02 - let me reload or restart this kernel so
01:05 - we can start off fresh and let me clear
01:07 - the output too
01:09 - uh cell
01:11 - i'll put clear okay now it should be all
01:13 - clear i'll delete this okay perfect so
01:15 - once we have this let's look at the
01:17 - first one the first one is the needs so
01:20 - we need at least eight characters um so
01:23 - that's the minimum we need one lowercase
01:26 - one uppercase character one special
01:28 - character and one number so that's like
01:30 - the minimum uh of course we can have
01:32 - more than that
01:33 - but this is just the
01:35 - minimum things that we need so once we
01:37 - did that we need to import the libraries
01:39 - that we're going to be using today today
01:41 - we're going to be using random and that
01:43 - is kind of obvious because passwords
01:45 - need to be kind of random so import
01:47 - random and import string import string
01:50 - is used for
01:51 - a trick i'm about to show you and it
01:53 - will save you a lot of time if you
01:54 - import this so import string and import
01:57 - random
01:58 - after that define
02:00 - a function that we made called pass
02:02 - create or it's short for password
02:04 - creator and once we did that pass create
02:07 - we have a parameter or a local variable
02:10 - called amount which is basically how
02:13 - long the password will be so you can
02:15 - insert like 16 10 or like four into here
02:18 - and then that's how long it would be
02:20 - so string lower would be the lower key
02:24 - strings and we're going to be creating
02:25 - each of the
02:27 - each of the lowercase uppercase special
02:30 - number not a special number special
02:32 - character and number into a list so
02:34 - there's going to be each list for one so
02:36 - right now we're going to create the
02:38 - lowercase
02:39 - list so here we are
02:42 - str lower which is lowercase strings
02:45 - equals to string right here import
02:47 - string string.ascii underscore lowercase
02:50 - this will basically call out uh the
02:52 - whole list of lowercase letters and
02:54 - it'll print it out in here which is
02:56 - lowercase equals to list str lower and
02:59 - this will store every single lowercase
03:01 - uh letter into
03:03 - our list called lowercase and then this
03:05 - applies for uppercase 2 we have str
03:07 - upper equals to string dot ascii
03:10 - underscore uppercase uppercase equals to
03:12 - list str underscore upper so
03:15 - the this is just to store the lowercase
03:18 - and uppercase into a list that we can
03:20 - use um so now once we have a lowercase
03:22 - and uppercase let's move on to the
03:24 - special characters the special
03:25 - characters equals to underscore and
03:28 - slash of course you can have more like a
03:30 - period or
03:32 - comma or star or whatever but i'm just
03:35 - going to do these two because it's the
03:37 - most common um for me at least so yeah
03:40 - this is just the special characters it's
03:42 - nothing much and now let's look at the
03:44 - number characters so here is the numbers
03:47 - um
03:48 - this time instead of the abcs i actually
03:51 - wrote this out because it's not too long
03:53 - it's just one through nine um and yeah
03:55 - that is our number characters and now
03:58 - let's move on to the a little bit more
04:00 - complicated stuff so here we want to
04:03 - create the password right so we have to
04:05 - meet the minimum first i need to make
04:07 - sure my head is not blocking it okay so
04:09 - we're going to be looking at this chunk
04:10 - now so basically what this will do is it
04:13 - will get the first half of the password
04:16 - which is all of these needs right here
04:18 - so it will make sure that all these
04:20 - needs are met first so that's the first
04:22 - half a lowercase uppercase special
04:24 - character and number so a pic right here
04:26 - okay my head's not blocking it pic is
04:29 - basically um
04:31 - a way of
04:33 - saying
04:34 - uh here are the numbers you can pick
04:36 - from let me get this straight first so
04:38 - we want a password right and so let me
04:41 - go out to a new tab let me close all
04:44 - these tabs really quickly
04:46 - okay and let's go into this tab so i'm
04:49 - going to type a password here right so
04:51 - we need at least one special number not
04:54 - special number special character
04:56 - a number
04:58 - a a lower case and an uppercase right
05:00 - and now uh what we're trying to do is
05:03 - the first half is going to look somewhat
05:04 - like this uh but in order to do that we
05:07 - need to random position two right so it
05:10 - could be like this
05:12 - it could be like
05:13 - uh
05:14 - this so we just need a random position
05:16 - of each one not like in a straight
05:18 - orderly line like the first one will be
05:20 - a number and the second one will be a
05:22 - slash then a special character and the
05:25 - other one will be a lowercase and the
05:26 - other one will be an uppercase then
05:28 - every time it changes it will still be
05:29 - like this and our password is going to
05:31 - be very easy to hack so what we want to
05:33 - do is we want to random the positions of
05:36 - each uh case and that's what we're gonna
05:38 - do for pick so
05:40 - uh each of these numbers can either be
05:43 - lowercase uppercase special character or
05:45 - number and characters here is just two
05:48 - random shoes which we'll choose from the
05:51 - list randomly so it will choose a
05:53 - lowercase letter an uppercase a special
05:55 - character and a number
05:57 - so once we did that uh
05:59 - password underscore gen1 this will
06:01 - basically um declare a very or not
06:04 - variable a list for us to use later
06:06 - password generation one um this is
06:08 - declaring an empty list after that we
06:11 - will go into a for loop for i in range
06:13 - four this is basically how much time is
06:15 - going to repeat so four times
06:18 - var or variable pick
06:20 - equals to string random dot choice pick
06:23 - uh basically this is to
06:25 - uh random from pick right here and it
06:28 - will just choose one of the numbers then
06:29 - after that we will do password
06:32 - underscore generation one dot append
06:34 - charge into various pick okay so
06:37 - basically this is a little menacing but
06:39 - what it does is it's going to um
06:42 - go into characters which is this one and
06:45 - it will basically pick a random
06:48 - one to go first so pretend it picks like
06:51 - a
06:52 - it look pretty like a special character
06:53 - so it will append that to the first one
06:55 - so now the first slot of password
06:58 - underscore gen 1 is a special character
07:00 - and then it will uh once it's done with
07:02 - that it'll pick dot remove var
07:04 - underscore pick so now it'll remove um
07:07 - whatever it chose so pretend it chose
07:10 - special character okay
07:12 - uh special characters index is zero
07:14 - one two it's two right so it'll remove
07:17 - two from pick right here and it'll
07:19 - remove two so now we can't pick a
07:21 - special character anymore instead we
07:23 - have to pick zero one or three okay and
07:26 - then it'll repeat again and it'll pick
07:27 - like three and then it will go to the
07:30 - numbers after that it will pick either
07:33 - one is either zero or one and pretend
07:35 - picks one which is uppercase and then
07:38 - pick zero which is lowercase and now we
07:39 - have the minimum need that we all uh
07:42 - that we like met so we met all the needs
07:45 - and the first half of the password is
07:47 - complete now let's look at the second
07:48 - half so pick two this will basically you
07:51 - can just copy and paste this you just
07:53 - need to change some bits so pick two we
07:55 - will have our you know our normal stuff
07:58 - zero one two three um our password
08:00 - generation two this is for the second
08:02 - half of the password we're just
08:03 - declaring an empty variable password two
08:06 - is basically password generation two
08:08 - except that every time it appends it
08:11 - will append and do password two um this
08:13 - is because uh it's kind of different
08:15 - since this is the rest of the password
08:17 - so it will keep on going on for the
08:19 - amount that they give so password two
08:22 - equals to brackets
08:24 - again we're declaring an empty
08:26 - uh list for i in range amount minus four
08:30 - uh this is amount is of what they insert
08:32 - in right so pretend they put in 50 minus
08:35 - four is to use is to subtract these four
08:39 - that already went let me draw some water
08:42 - minus four is to subtract um our
08:45 - variable from these four over here uh
08:48 - and basically we're going to be doing
08:50 - the rest so amount minus four is how
08:52 - much times we're gonna be repeating this
08:54 - loop for and inside this loop we're
08:56 - gonna have characters two the reason we
08:58 - didn't put this outside as we did for
09:00 - this one is because we're going to have
09:02 - to keep random um
09:04 - we're gonna have to keep on randoming
09:06 - the
09:07 - with whether it's a special number or
09:09 - like a
09:10 - lowercase uppercase etc so we're going
09:12 - to keep on random and every time uh this
09:14 - code runs it will get a new character um
09:18 - or it'll random a new character for us
09:20 - to use so we need to use this one and
09:23 - after that we'll do var underscore pick
09:25 - two uh this will basically um
09:29 - let us basically like use for the same
09:31 - purpose as this one is to just pick from
09:34 - pick two like a random number and once
09:37 - it does that password underscore
09:38 - generation two will equal to characters
09:40 - to
09:41 - int bar pick two so this means it will
09:44 - pick from this list which is characters
09:46 - two it'll pick one thing from this list
09:49 - and it will delete that choice from pick
09:52 - two so now it only has like three
09:54 - choices left and it will keep on doing
09:56 - this until
09:57 - uh the
09:58 - the high column until the
10:01 - criteria or amount is met so once we do
10:04 - that we're going to have our final
10:07 - password so global password will
10:09 - basically declare this as a global
10:10 - variable remember that inside of a
10:12 - function any variable stored that was
10:15 - you know any variable that was created
10:17 - inside of a function will not be able to
10:19 - use outside of the function because it's
10:21 - a local variable inside of the function
10:23 - and in order to make it be able to use
10:25 - outside of the function we need to put
10:27 - global and then the variable name
10:31 - after that we will declare password as
10:33 - an empty string we don't actually need
10:35 - this of course um but i just put it
10:37 - there so basically next we'll just
10:39 - password equals to password underscore
10:41 - generation one plus list password two so
10:44 - password two right now um i wasn't sure
10:47 - what it was so i made a list in order to
10:49 - be uh concatenated with password one uh
10:53 - so now once we added those two together
10:55 - we should have our password however
10:56 - right now our password is still in a
10:59 - list form so we need to make it into a
11:02 - string i got this piece of code from
11:04 - geeksforgeeks uh
11:06 - although i did modify it a little bit so
11:08 - list to string this will basically
11:10 - basically convert a list to a string so
11:12 - it's another function which has a
11:14 - parameter of ls ls is list string one
11:18 - equals to
11:19 - uh nothing which is declaring an empty
11:21 - string for ele in list string one plus
11:26 - equals
11:27 - uh basically string one equals to string
11:29 - one plus ele and return string one which
11:32 - will basically print out our string and
11:34 - it'll just uh make it into a list
11:37 - and now if we were to try to run it
11:40 - there we go our password is a string
11:42 - ready for us to use um we can set this
11:45 - to how much we want like a hundred even
11:48 - and it will be all random um there is
11:50 - going to be some that are the same thing
11:53 - together because it's uh of course it's
11:56 - limited
11:57 - um i can't find one yet so it's actually
12:00 - pretty good um
12:02 - since there's none that are like the
12:04 - same thing next to each other unless
12:05 - it's like these special characters but
12:08 - yeah that is how to create a password
12:10 - creator in
12:12 - python i hope you enjoyed it this is the
12:14 - first episode of saturday python and see
12:17 - you in the next video goodbye

Cleaned transcript:

hello everybody welcome to saturday python mini project so today is another series it's a new one um called python saturday or saturday python and basically in this series we're going to be creating a lot of mini projects um so this is ep one and today we're going to be creating a password creator which basically uh generates a password i will show you what it does right now so pretend we have a password that is uh pretend how much digits long we can have like 20 digits long pretend and it'll print out 20 digits of uppercase lowercase accept special characters and numbers of passwords so this is what it would look like um we can have it to like eight or something something more reasonable but this is a password creator that you can use the link to download this notebook will be in the description so if you want to check it out and follow along with me then uh you can do that so now let's look at our uh password creator let me reload or restart this kernel so we can start off fresh and let me clear the output too uh cell i'll put clear okay now it should be all clear i'll delete this okay perfect so once we have this let's look at the first one the first one is the needs so we need at least eight characters um so that's the minimum we need one lowercase one uppercase character one special character and one number so that's like the minimum uh of course we can have more than that but this is just the minimum things that we need so once we did that we need to import the libraries that we're going to be using today today we're going to be using random and that is kind of obvious because passwords need to be kind of random so import random and import string import string is used for a trick i'm about to show you and it will save you a lot of time if you import this so import string and import random after that define a function that we made called pass create or it's short for password creator and once we did that pass create we have a parameter or a local variable called amount which is basically how long the password will be so you can insert like 16 10 or like four into here and then that's how long it would be so string lower would be the lower key strings and we're going to be creating each of the each of the lowercase uppercase special number not a special number special character and number into a list so there's going to be each list for one so right now we're going to create the lowercase list so here we are str lower which is lowercase strings equals to string right here import string string.ascii underscore lowercase this will basically call out uh the whole list of lowercase letters and it'll print it out in here which is lowercase equals to list str lower and this will store every single lowercase uh letter into our list called lowercase and then this applies for uppercase 2 we have str upper equals to string dot ascii underscore uppercase uppercase equals to list str underscore upper so the this is just to store the lowercase and uppercase into a list that we can use um so now once we have a lowercase and uppercase let's move on to the special characters the special characters equals to underscore and slash of course you can have more like a period or comma or star or whatever but i'm just going to do these two because it's the most common um for me at least so yeah this is just the special characters it's nothing much and now let's look at the number characters so here is the numbers um this time instead of the abcs i actually wrote this out because it's not too long it's just one through nine um and yeah that is our number characters and now let's move on to the a little bit more complicated stuff so here we want to create the password right so we have to meet the minimum first i need to make sure my head is not blocking it okay so we're going to be looking at this chunk now so basically what this will do is it will get the first half of the password which is all of these needs right here so it will make sure that all these needs are met first so that's the first half a lowercase uppercase special character and number so a pic right here okay my head's not blocking it pic is basically um a way of saying uh here are the numbers you can pick from let me get this straight first so we want a password right and so let me go out to a new tab let me close all these tabs really quickly okay and let's go into this tab so i'm going to type a password here right so we need at least one special number not special number special character a number a a lower case and an uppercase right and now uh what we're trying to do is the first half is going to look somewhat like this uh but in order to do that we need to random position two right so it could be like this it could be like uh this so we just need a random position of each one not like in a straight orderly line like the first one will be a number and the second one will be a slash then a special character and the other one will be a lowercase and the other one will be an uppercase then every time it changes it will still be like this and our password is going to be very easy to hack so what we want to do is we want to random the positions of each uh case and that's what we're gonna do for pick so uh each of these numbers can either be lowercase uppercase special character or number and characters here is just two random shoes which we'll choose from the list randomly so it will choose a lowercase letter an uppercase a special character and a number so once we did that uh password underscore gen1 this will basically um declare a very or not variable a list for us to use later password generation one um this is declaring an empty list after that we will go into a for loop for i in range four this is basically how much time is going to repeat so four times var or variable pick equals to string random dot choice pick uh basically this is to uh random from pick right here and it will just choose one of the numbers then after that we will do password underscore generation one dot append charge into various pick okay so basically this is a little menacing but what it does is it's going to um go into characters which is this one and it will basically pick a random one to go first so pretend it picks like a it look pretty like a special character so it will append that to the first one so now the first slot of password underscore gen 1 is a special character and then it will uh once it's done with that it'll pick dot remove var underscore pick so now it'll remove um whatever it chose so pretend it chose special character okay uh special characters index is zero one two it's two right so it'll remove two from pick right here and it'll remove two so now we can't pick a special character anymore instead we have to pick zero one or three okay and then it'll repeat again and it'll pick like three and then it will go to the numbers after that it will pick either one is either zero or one and pretend picks one which is uppercase and then pick zero which is lowercase and now we have the minimum need that we all uh that we like met so we met all the needs and the first half of the password is complete now let's look at the second half so pick two this will basically you can just copy and paste this you just need to change some bits so pick two we will have our you know our normal stuff zero one two three um our password generation two this is for the second half of the password we're just declaring an empty variable password two is basically password generation two except that every time it appends it will append and do password two um this is because uh it's kind of different since this is the rest of the password so it will keep on going on for the amount that they give so password two equals to brackets again we're declaring an empty uh list for i in range amount minus four uh this is amount is of what they insert in right so pretend they put in 50 minus four is to use is to subtract these four that already went let me draw some water minus four is to subtract um our variable from these four over here uh and basically we're going to be doing the rest so amount minus four is how much times we're gonna be repeating this loop for and inside this loop we're gonna have characters two the reason we didn't put this outside as we did for this one is because we're going to have to keep random um we're gonna have to keep on randoming the with whether it's a special number or like a lowercase uppercase etc so we're going to keep on random and every time uh this code runs it will get a new character um or it'll random a new character for us to use so we need to use this one and after that we'll do var underscore pick two uh this will basically um let us basically like use for the same purpose as this one is to just pick from pick two like a random number and once it does that password underscore generation two will equal to characters to int bar pick two so this means it will pick from this list which is characters two it'll pick one thing from this list and it will delete that choice from pick two so now it only has like three choices left and it will keep on doing this until uh the the high column until the criteria or amount is met so once we do that we're going to have our final password so global password will basically declare this as a global variable remember that inside of a function any variable stored that was you know any variable that was created inside of a function will not be able to use outside of the function because it's a local variable inside of the function and in order to make it be able to use outside of the function we need to put global and then the variable name after that we will declare password as an empty string we don't actually need this of course um but i just put it there so basically next we'll just password equals to password underscore generation one plus list password two so password two right now um i wasn't sure what it was so i made a list in order to be uh concatenated with password one uh so now once we added those two together we should have our password however right now our password is still in a list form so we need to make it into a string i got this piece of code from geeksforgeeks uh although i did modify it a little bit so list to string this will basically basically convert a list to a string so it's another function which has a parameter of ls ls is list string one equals to uh nothing which is declaring an empty string for ele in list string one plus equals uh basically string one equals to string one plus ele and return string one which will basically print out our string and it'll just uh make it into a list and now if we were to try to run it there we go our password is a string ready for us to use um we can set this to how much we want like a hundred even and it will be all random um there is going to be some that are the same thing together because it's uh of course it's limited um i can't find one yet so it's actually pretty good um since there's none that are like the same thing next to each other unless it's like these special characters but yeah that is how to create a password creator in python i hope you enjoyed it this is the first episode of saturday python and see you in the next video goodbye
