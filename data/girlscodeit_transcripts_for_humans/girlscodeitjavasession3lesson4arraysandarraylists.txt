With timestamps:

00:01 - okay cool so we're gonna get started
00:03 - um welcome to java um
00:06 - class number four now um i'm alex i'm
00:10 - one of your instructors
00:12 - and andrea's the other one i don't know
00:14 - where she is on your screen but yeah
00:17 - uh so yesterday we were talking about if
00:20 - statements
00:22 - and if you didn't um
00:25 - have the chance to come to class
00:26 - yesterday i think we sent out a video
00:30 - a recording of the class so if you want
00:33 - you can watch
00:33 - that on your own time um but today we're
00:36 - going to be moving
00:37 - on um i'm going to share my screen
00:44 - actually before we do um i'm going to go
00:48 - over
00:50 - uh does anyone want to talk about the
00:52 - activity that we did yesterday with the
00:54 - if statements the magic 8 ball
00:57 - if anyone had any problems with their
00:59 - code or just want to ask questions about
01:01 - it
01:02 - or about any code actually
01:05 - feel free to talk now
01:15 - so just a reminder the activity we left
01:18 - off with yesterday it was the magic
01:20 - 8 ball if you were here um
01:24 - so we really hope you guys went
01:28 - um went home and
01:31 - kind of like fit around with it or added
01:33 - more options
01:34 - or just tried to run the code yourself
01:38 - and so
01:42 - if everyone's good with what we learned
01:45 - before
01:47 - um we're gonna go ahead and start the
01:50 - lesson for today
01:56 - okay so today we're going to be learning
02:00 - about arrays and arraylists
02:03 - and these are useful because
02:06 - before when we had a variable like
02:10 - stream name is equal to alex
02:14 - um that variable only holds one value
02:18 - which is alex but with arrays you can
02:21 - hold
02:22 - more than one value so you can hold
02:25 - like an int of numbers like one two
02:29 - three four five six seven but they have
02:33 - to hold
02:34 - the same type
02:42 - yeah hey do you want me to do an example
02:44 - now
02:46 - oh wait first yeah
02:50 - sure okay
02:54 - okay um
02:57 - okay so everyone as always we're going
03:00 - to want to make a new class
03:01 - so we can do some examples and write
03:04 - some code today
03:05 - during class so when you open up bluej
03:08 - you have this screen
03:09 - and you click on new class up here and
03:13 - name it whatever you want
03:16 - um
03:24 - so then you get this screen with all of
03:27 - this
03:27 - random code and you're going to delete
03:30 - all of that
03:34 - and just type
03:39 - public class array class
03:42 - or whatever you mean your classmates
03:48 - love like static voice
03:57 - and i'm just gonna copy paste that into
04:01 - chat in case you don't want to type all
04:05 - that out
04:08 - basically the public static void
04:11 - mainstream
04:12 - stuff it just allows you to type code in
04:15 - it
04:16 - and so you can run run the code too
04:20 - hello where did the chat go
04:31 - well this is fun
04:35 - okay i can't find the chat so
04:39 - you guys might just to copy this down by
04:43 - looking
04:45 - um
04:48 - i'll give you like a minute to catch up
04:53 - yeah thank you caitlin who
04:56 - talked and posted the code
04:59 - yay
05:08 - do you want to go over how to exactly
05:10 - make the
05:11 - array
05:16 - or like yeah
05:19 - okay so to create an array
05:23 - you have first have to declare the
05:27 - data type and the data type is
05:30 - just like if it's an int double
05:33 - string and
05:36 - yeah so you just do int in this example
05:40 - and then you do these brackets and the
05:42 - brackets are like
05:44 - above your enter sign and they're like
05:47 - the square brackets and then you put the
05:51 - name of what you want to name your array
05:54 - and then equals new because we're
05:57 - creating
05:57 - a new array and then the data type again
06:02 - and in brackets and inside here
06:05 - inside the brackets you want to put the
06:08 - size because for arrays you
06:12 - have a fixed size so if you declare
06:16 - a size of 5 then it will only have five
06:20 - values
06:21 - and you can't change it so you can't add
06:24 - or delete values
06:29 - okay so like we said before you can make
06:32 - an array
06:34 - of any type of variable so like in
06:37 - double and string but all of the entries
06:40 - and your array have to be the
06:42 - exact have to be the same type of
06:43 - variable so
06:45 - an array of all ends or all doubles or
06:47 - all strings
06:49 - so just to
06:52 - like emphasize how you just to go over
06:54 - how you make one i'm going to
06:57 - make an array in blue jay over here
07:00 - um so
07:04 - an int array okay maybe not a string
07:07 - array
07:08 - so you start with the type of variable
07:12 - and then brackets to let the computer
07:14 - know it's an array
07:16 - and then you name their rate like
07:18 - anything you want to like
07:20 - dogs and then equals
07:24 - new to let them know you're making a new
07:26 - array
07:27 - the type of variable again and then
07:30 - in brackets how big you want it to be so
07:33 - i'll go to seven
07:37 - and that should be it
07:42 - um that is basically how you make an
07:46 - array
07:46 - and we'll show you how to print it out
07:48 - later um
07:50 - but for now that's basically all we'll
07:53 - do
07:57 - yeah so for arrays
08:01 - um to add like
08:04 - okay so first for erase it's a bit
08:08 - different
08:09 - like how you're normally used to so
08:12 - arrays they
08:13 - start counting
08:16 - starting from zero so it would be zero
08:20 - one two three and four
08:24 - and the index is just like a
08:27 - pointer that points to what
08:30 - value you want to access
08:34 - so it's kind of confusing but if
08:37 - in this example you want to put
08:41 - like the number seven in the first
08:45 - value for the array you would have to do
08:49 - array brackets zero bracket
08:52 - equals seven instead of like array one
08:56 - so zero means the first value
09:06 - yep
09:08 - kind of like you can see in the diagram
09:10 - over here so like
09:12 - at index zero that's basically going to
09:14 - be
09:15 - the first entry in the array because we
09:18 - start counting at zero and then
09:20 - the entry with the index one is
09:23 - basically the second
09:24 - entry so it's kind of shifted a little
09:29 - and that's really important to remember
09:30 - when you're working with the rays
09:36 - and so before we set
09:39 - like the value 7 to um
09:43 - at index 0 so to print out the value
09:47 - we would just do system dot out dot
09:50 - print line
09:52 - parenthesis and then the array
09:55 - and then you want to put the index
09:59 - because that's how you refer to
10:03 - the value so it's kind of like the index
10:06 - is a name tag and the value
10:10 - is a person so to call the person you
10:13 - call them by their name
10:15 - so the index is kind of like their name
10:22 - yep so like i said we
10:26 - we're going to talk about how different
10:28 - an array
10:29 - like andrea was just talking about so
10:32 - um this is a really this is basically
10:36 - why you need to know the index
10:38 - the concept of the index when you're
10:40 - talking about erase
10:41 - so that you can properly print it out
10:44 - like
10:45 - maybe you just want to print out the
10:46 - third number in your
10:48 - array and so you would use array bracket
10:52 - 2 because the third
10:56 - entry has the index of 2.
10:59 - that can be really confusing but you'll
11:01 - get used to it
11:02 - though um i'm
11:06 - just going to
11:12 - wait
11:19 - [Music]
11:22 - so i'm going to fill this array with
11:26 - seven strings um because there are seven
11:29 - slots
11:30 - in the array so
11:33 - like we showed you before you're going
11:35 - to use
11:36 - the name of the array and then in
11:39 - brackets
11:40 - which um
11:43 - index you want to add in your element at
11:47 - so i'll start with zero because it's the
11:50 - first one
11:51 - and then it's an array of strings so i'm
11:54 - going to fill it with
11:57 - names of dogs because i didn't get dogs
12:00 - um
12:02 - so oops fluffy
12:07 - um i'm gonna make it
12:10 - before because seven is not um
12:24 - i don't know what you name your dogs
12:29 - okay um
12:38 - and notice that even though we're
12:41 - ending at index three we have
12:45 - four entries in our array
12:49 - on i don't know man
12:58 - okay okay so
13:01 - now we're now maybe you want to print
13:04 - the name of one of these dogs and you
13:08 - just
13:08 - and to do that to print a random entry
13:12 - in your array you're going to use the
13:15 - system.out.printline
13:17 - method that we taught you before so it's
13:20 - really pretty simple you just go system
13:23 - to have a print
13:25 - and then as always parentheses and
13:27 - inside the parentheses this time you're
13:29 - going to
13:31 - call an element of your array using the
13:34 - index that it's at
13:37 - um basically how you identify a certain
13:41 - element is always by its index
13:43 - so i'm just going to print
13:49 - whatever is in index 2 and that's going
13:52 - to be the third entry
13:54 - and that's marley so
13:57 - i want to see if that actually works so
14:00 - i'm going to compile my code
14:03 - go down to the brown box right click
14:06 - second
14:06 - option okay and i printed out marley
14:12 - yeah that worked
14:17 - [Music]
14:19 - so you can do this with an array of like
14:22 - any type you can do integers
14:24 - or doubles whatever you want and yeah
14:29 - do you guys have any questions
14:40 - please feel free to ask questions or if
14:42 - you have any errors in your code we can
14:44 - help you figure it out
14:46 - especially since we have a smaller class
15:03 - andre is there anything in the chat i
15:06 - can't see
15:07 - no okay cool we can move on
15:11 - okay so since you guys don't seem to
15:14 - have any questions
15:16 - we'll move on to the second part
15:21 - okay so for there's another type
15:25 - that's called an arraylist and an
15:28 - arraylist
15:30 - is a bit more flexible because
15:33 - the size is actually not fixed
15:36 - so the size can change as you add
15:40 - elements
15:40 - and also as you delete elements
15:44 - so yeah it's a bit more flexible
15:48 - so too and also
15:51 - for an array list
15:54 - creating one in java is a little bit
15:57 - different
15:58 - first you have to do
16:01 - arraylist with a capital a and a capital
16:04 - l it's just like that
16:08 - and then these angle brackets like the
16:11 - less than and greater than sign
16:13 - and inside there you want to put the
16:17 - type of array list you want
16:21 - and instead of doing like int or double
16:24 - or string you actually want to spell it
16:28 - out
16:28 - so int becomes integer and double
16:31 - becomes double and stream becomes string
16:34 - but it also has to be
16:36 - capitalized so like capital i integer
16:40 - and then you name your arraylist
16:44 - whatever you want dogs cats
16:48 - colors and then equals new arraylist
16:53 - again and then you put the brackets
16:56 - and data type and then parentheses
17:00 - and inside these parentheses you can
17:03 - leave
17:04 - it empty or you can also put the size
17:07 - so you can put like three and you'll
17:10 - have three values in it
17:12 - but if you put three values in it you
17:15 - can also
17:16 - add on to your array or you can delete
17:19 - items
17:20 - as well so like throughout your code you
17:24 - can change how many values you have in
17:26 - your arraylist
17:30 - yeah yeah um so i'm just going to go
17:34 - ahead and make an arraylist
17:36 - for an example right now wow it's while
17:38 - this slide is down the screen
17:40 - and i'm just going to comment out the
17:42 - code from before
17:46 - and another thing with arraylist
17:49 - you have to import it so
17:52 - like right above the public class scene
17:55 - you want to type import
18:01 - java dot util
18:04 - dot arraylist
18:07 - this is kind of similar to how we
18:10 - imported the ability to use
18:12 - so we're going to import the ability to
18:14 - use an arraylist
18:19 - okay so to make an arraylist
18:23 - it's just like you see in this slide on
18:25 - the right over here
18:26 - so you're going to start with the word
18:28 - arraylist
18:31 - careful to do all the capitals in the
18:33 - right places
18:34 - um because as we explain java is
18:38 - um a caps sensitive language so
18:41 - it cares about that um so a realist
18:45 - and then less than
18:49 - less than greater than sign and inside
18:52 - you're going to put the type
18:54 - of arraylist you want to make so i'll
18:57 - just go with double this time
19:00 - oops um and then we're going to name
19:04 - our arraylist so
19:07 - i'm going to call it scores
19:11 - scores
19:14 - equals new arraylist
19:18 - and then the type of realistic it is
19:20 - again so like
19:21 - the type of value the type of variable
19:25 - you're storing
19:26 - in it and then
19:29 - parentheses and a semicolon as always
19:37 - if you're making your own arraylist on
19:39 - your own computer you can
19:41 - like make whatever type you want i'm
19:43 - just going to go with this
20:02 - okay so
20:05 - tell us if you need more time whenever
20:08 - you
20:08 - do um but right now i'm just gonna move
20:12 - on to the next one
20:16 - okay so to add values
20:20 - into our arraylist it's just
20:23 - the arraylist name and then this
20:26 - dot add and then parentheses
20:30 - and then whatever value you want to add
20:33 - into your arraylist
20:34 - goes inside the parentheses
20:37 - so realist.add5 adds the value 5
20:41 - into the arraylist and this time you
20:45 - don't have to
20:46 - specify the index it just adds
20:49 - on to your arraylist at the end
20:55 - and to delete an array
20:59 - to delete a value this time you want to
21:02 - do
21:03 - the arraylist name and then dot remove
21:06 - and then the index and the like
21:09 - index 0 gets removes the
21:13 - first value and the reason why you want
21:16 - to
21:17 - put the index instead of getting the
21:20 - value
21:21 - is because if we have an
21:24 - arraylist with like
21:28 - two values that are like 11
21:31 - if you get if you do not remove 11
21:34 - meaning you want to remove
21:36 - the value that is 11 but you have two
21:40 - 11's then the arraylist doesn't know
21:43 - which one you want to remove
21:45 - so yeah you have to basically
21:49 - yeah yeah you always call it value by
21:51 - its index
21:54 - yeah yeah
22:01 - so next slide
22:11 - andrea do you want to do the next slide
22:13 - oh sorry
22:15 - and then to print the
22:19 - value we would do system.out.printline
22:24 - arraylistname and then dot
22:27 - get and then we would put the index
22:35 - yeah so that's like before
22:39 - you tell the computer which
22:43 - element of the index you want using the
22:47 - which element of the array you want
22:49 - using its index
22:51 - okay so now that we've made
22:55 - our arraylists over here hopefully you
22:57 - made your own on your own computer
22:59 - um i'm going to fill it up with values
23:02 - and we do that with the dot add method
23:06 - like we talked about before um
23:11 - so the name of the arraylist
23:15 - math score is
23:18 - and then we'll go with a 90.5
23:25 - um i just add in a few
23:30 - so we have valleys to work with
23:48 - notice that doesn't it doesn't matter
23:50 - like what
23:52 - size the arraylist is as you add more
23:55 - values it keeps expanding
23:57 - if you remove values it gets smaller and
24:00 - like the size of the arraylist isn't set
24:14 - [Music]
24:16 - permanently
24:23 - okay so i just filled in
24:27 - a few random scores
24:30 - i'm imagining like scores on a math test
24:33 - but you can do whatever you want
24:36 - so
24:39 - right now we just know how to print out
24:43 - like individual elements of an arraylist
24:47 - we can teach you how to print out the
24:49 - whole arraylist or the whole array later
24:51 - but right now we're just going to
24:53 - concentrate on printing individual
24:55 - elements
24:56 - so say i just want to know
24:59 - what the third student got on their math
25:02 - test
25:03 - um so like in the slideshow
25:06 - we're going to use a
25:08 - system.out.printline method
25:10 - um like we said before that's basically
25:13 - how you
25:15 - that's basically just how you print
25:17 - something out to the computer
25:19 - um always a system.out.printline
25:25 - you can do a print or a print line it
25:26 - doesn't really matter
25:28 - um so the name of the arraylist
25:33 - and then to get
25:36 - an element in order to print
25:40 - you're go when you're using an arraylist
25:42 - you're going to use
25:43 - dot get and then inside the parentheses
25:47 - you put
25:47 - whatever index whatever is the index of
25:50 - the element you want to print
25:52 - so since i said i want to do the third
25:56 - student does anyone want to tell me
25:58 - which index i should put in the
26:00 - parentheses to print out
26:11 - or do you see do you have any guess
26:18 - two yeah exactly
26:22 - so i'm not sure who's on that but like
26:24 - great job
26:25 - so we start counting from zero so
26:28 - therefore the third element is going to
26:31 - have the index
26:32 - of two so when we
26:37 - print this line we should get 9.8
26:42 - because
26:42 - that's the third element so i'm going to
26:45 - compile
26:46 - again make sure there aren't any errors
26:49 - right click second option okay
26:53 - and it printed 99.8
26:56 - that's exactly what we wanted and
27:04 - yep
27:09 - so
27:15 - say we want to remove
27:18 - an element from the arraylist for some
27:21 - reason
27:22 - maybe we just don't need it anymore
27:24 - maybe
27:25 - like a student isn't participating
27:28 - anymore or
27:29 - whatever so maybe i want to remove
27:33 - the fifth element from the arraylist
27:38 - so that picture was like i'm going to
27:41 - drop your lowest test score
27:45 - right yay
27:48 - so now you see that it's very nice so
27:51 - yeah
27:53 - so i'm going to
27:57 - remove the fifth element
28:00 - um this is like really similar to the
28:02 - dot wait this is not
28:04 - similar to the dot
28:08 - there we go this is similar to the dot
28:09 - get
28:12 - so do that we're just going to
28:15 - use the name and then dot remove
28:19 - and then inside the parentheses we put
28:21 - the index
28:22 - of whatever we want to remove um
28:25 - so since i'm doing the fifth element
28:27 - here i'm going to go with index 4
28:31 - and i don't really know how i can
28:35 - show you that it removed index
28:38 - 4 but
28:41 - it did maybe
28:45 - since this was the last element in the
28:47 - arraylist
28:49 - maybe now that we don't have
28:52 - the fourth now that we don't have the
28:55 - fifth element anymore
28:57 - if we tried to print the fifth element i
28:59 - wonder what
29:01 - the computer would tell us
29:04 - it would probably be an error right
29:06 - because
29:07 - if we want to print the fifth element
29:09 - but there is no fifth element
29:12 - i can't do it so i'm just going to try
29:15 - that
29:16 - see what it's going to tell us
29:20 - so dot wait math scores
29:24 - dot get and then the fifth element is
29:33 - compile and
29:37 - wait was this
29:43 - and it didn't print anything and it told
29:45 - us their out of bounds exception
29:48 - so index four is out of bounds because
29:51 - our arraylist is only
29:54 - four elements long so it doesn't have an
29:57 - index four and it can't print it
30:00 - yeah because it has zero one
30:03 - two and three index
30:08 - yep so basically right now since we
30:10 - removed
30:12 - index four all we have in the arraylist
30:14 - is this
30:18 - but maybe what if we remove the
30:22 - second element so this one
30:26 - so that would mean everyone's indexes
30:29 - are gonna shift so
30:32 - if this one like just gets removed
30:37 - then 99.8
30:40 - is going to have the index of one now
30:43 - instead of two everything's going to be
30:46 - everyone's index is
30:47 - going to become one less because we
30:50 - removed that
30:53 - if that makes sense so if you imagine
30:56 - them all like
30:58 - you know like books in a bookshelf if
31:01 - you remove
31:03 - one of the books all the rest of the
31:05 - books are gonna slide over
31:07 - and take its place
31:20 - so yep i'm gonna give you guys like a
31:22 - couple minutes to maybe hatch up or play
31:24 - around
31:25 - with both arrays and arraylists
31:29 - um and then we're going to do a short
31:44 - activity
33:05 - [Music]
33:31 - okay so if anyone has any questions
33:35 - about what we just taught you about
33:37 - arrays and array lists
33:38 - how to add things how to remove things
33:41 - how to print them
33:43 - um go ahead and ask them like and meet
33:46 - yourself or
33:47 - type in the chat
33:50 - or any areas in your code that you can't
33:52 - figure out
34:12 - okay then so if no one has any questions
34:15 - we're going to move on
34:19 - um we just have a short fun activity for
34:22 - today
34:25 - we're going to simulate having an
34:27 - inventory
34:28 - in a pet shop so
34:30 - [Music]
34:33 - um we're going to use an arraylist for
34:36 - this
34:37 - because it's just more flexible
34:40 - maybe the pet shop sometimes it has
34:43 - five pets up for adoption but maybe
34:45 - sometimes it has seven
34:46 - and you just don't wanna like put a hard
34:49 - limit on how
34:50 - big the inventory can be so we're going
34:52 - to make an arraylist
34:53 - to like simulate um
34:58 - like holding the num holding all the
35:01 - information
35:02 - about holding the name of the pets
35:05 - in the pet shop
35:08 - um okay
35:11 - so in order to make an arraylist like we
35:14 - did before
35:15 - we're going to type oh
35:18 - and remember that like when you start a
35:20 - new class and you want to use realist
35:22 - you'd have to use this import statement
35:28 - okay so you do
35:31 - you write arraylist
35:34 - just like to let them know you're making
35:37 - an arraylist
35:38 - and then for this we're going to want to
35:41 - make
35:42 - ooh does anyone want to tell us what
35:44 - type of a realist we want to make in
35:46 - order to
35:48 - keep track of animals in pet jump
35:57 - lena do you have a guess
36:04 - or anyone else
36:10 - string yeah exactly
36:14 - um perfectly right uh usually
36:18 - arraylists are like often strings
36:20 - because you store like
36:22 - names of people in a class or things
36:25 - like that
36:25 - so uh we're going to make it an
36:28 - arraylist of strings
36:30 - so inside your greater than lesson signs
36:33 - you put the word
36:34 - string and then you name the arraylist
36:36 - so i'm going to call mine pet shop
36:39 - but you can call us whatever you want um
36:42 - and then you realist
36:47 - type again and then parentheses
36:53 - and as always your semi-colon
37:04 - and in here you can put spaces or you
37:07 - don't have to
37:08 - it's just like personal preference but i
37:11 - think
37:12 - it looks easier and it's easier to like
37:15 - keep track of and look at if you put a
37:17 - lot of spaces
37:19 - whatever you want
37:30 - so i'm going to fill this
37:33 - array list of strings with a lot of pet
37:37 - names
37:38 - um all the names of the pets i think
37:42 - that
37:42 - pet shop has up for adoption and this is
37:45 - kind of
37:47 - like what we did before with
37:50 - names and strings so
37:54 - pet shop dot
37:58 - add um
37:59 - [Music]
38:03 - i'm so bad at coming up with names
38:06 - um you guys go ahead and like add your
38:10 - own names but i'm just gonna
38:13 - do this over here um
38:33 - cotton candy
38:37 - oh this is not what i would name my dog
38:44 - is anyone like have a pet if you do like
38:47 - i can add their name
38:58 - in
39:07 - okay i'll do one more
39:28 - okay
39:36 - so now i have this arraylist of strings
39:40 - that has all of these pet names in it
39:42 - and i'm just saying that these names are
39:44 - the names of pets
39:46 - in the pet shop and
39:49 - so maybe we'll make a program where
39:54 - the user can put can
39:57 - tell the computer a random number from
40:01 - like one through
40:03 - six and then uh
40:06 - we can like randomly we can assign them
40:10 - or like give them the pet that's in
40:13 - that index
40:17 - now i realize that you'll want to ask
40:19 - them for 0-5
40:20 - but okay so in order to get
40:24 - um in order to
40:28 - ask the user for input
40:31 - and to get their input back and use it
40:33 - in your code
40:34 - we're going to use the scanner like we
40:37 - talked about
40:38 - before um so
40:41 - we need to import the ability to use a
40:43 - scanner so
40:44 - we type at the top of our class before
40:47 - we name the class
40:49 - import java.util
40:54 - and like you can see that's really
40:55 - similar to arraylist
41:08 - okay and down here basically wherever
41:11 - you want to put it
41:12 - um i'm going to make a scanner tool
41:18 - um see if i remember how to do this
41:21 - scanner you can name your scanner
41:24 - whatever you want
41:25 - i know we like used the word input
41:28 - before
41:28 - but i like to use scan
41:43 - and yeah so like i said
41:47 - you can change this to input or whatever
41:49 - you want
41:54 - and this line of code can go anywhere in
41:56 - your code
41:58 - as long as it's before the pet shop
42:00 - stuff
42:09 - and so we're going to print out to the
42:13 - user
42:14 - like hi um
42:17 - enter a number
42:21 - okay so we're going to take this number
42:24 - and like use it
42:25 - to use it as the index of the pet
42:29 - that they get so basically we're asking
42:32 - them
42:33 - for an index number
42:36 - and since indexes start counting at zero
42:39 - and go up we're going to ask
42:43 - them to enter a number between
42:46 - 0 2
42:49 - 5 because there are 6 entries in here
42:53 - so the last index is going to be 5.
42:57 - you can also do this with like the
43:01 - pet name but it's it's a bit more
43:04 - complicated
43:05 - and it uses like if statements and stuff
43:09 - so yeah we're just gonna stick with
43:10 - index
43:12 - yep but yeah there's totally a way
43:15 - where maybe they want series
43:19 - and they can type in the word series and
43:22 - we can do it that way but it's a little
43:25 - more complicated like andrea said
43:30 - so in order to print something out to
43:32 - the user as
43:33 - always we go system.out.print
43:36 - line if you want
43:40 - and inside the parentheses we're going
43:41 - to print out a string
43:43 - so we'll go
43:47 - hello welcome to the pet shop
43:53 - um enter a number
43:57 - from zero to
44:00 - five
44:04 - you get a pet
44:10 - and this is what the computer is going
44:12 - to tell the user
44:15 - and so once the user re reads that
44:18 - statement they're going to
44:20 - okay i'll type in a number from zero to
44:23 - five
44:24 - and in order to get that value
44:28 - we're going to make a
44:31 - an int variable that will store whatever
44:34 - they type
44:35 - in and it's going to be an int variable
44:38 - because
44:38 - since it's the number 5 it's going to be
44:40 - a whole number
44:42 - an integer so
44:45 - we're going to make an integer value you
44:49 - um
44:50 - hope you guys remember how to do this
44:52 - from before but if not no worries you
44:54 - can always review
44:56 - so and i'm gonna name it response
45:00 - and then equals and this is where the
45:02 - scanner comes in so we're going to use
45:04 - our scanner tool like we made up here
45:08 - and go scan dot next
45:12 - it
45:16 - and that should take whatever the user
45:18 - types in
45:19 - and store that in an int variable that
45:22 - we
45:23 - named response
45:29 - i'll give you like a minute to catch up
46:00 - okay so once they type in their index
46:04 - we're going to tell the user the name of
46:07 - the pet that
46:08 - they received so in order to do that we
46:12 - uh do it like before and use the dot get
46:16 - method so we're going to do
46:18 - system.out.print
46:26 - and just go
46:28 - [Music]
46:29 - your pet is
46:33 - remember to put a space after whatever
46:36 - you typed because
46:37 - if not it's going to go your pet
46:41 - is strawberry um because the computer
46:45 - doesn't know to put in a space
46:47 - so you need to put in your space right
46:50 - here
46:52 - and then plus and then
46:56 - we're going to use the dot get method
47:00 - and do pet shop
47:03 - dot get
47:08 - response
47:12 - and we're going to use response here
47:14 - because remember we basically asked the
47:16 - user for the index
47:18 - of the path they want and then we're
47:21 - going to use that index
47:22 - in the get statement to get it
47:25 - and print it out
47:34 - and i'm just gonna
47:49 - and if we really want to be fancy we can
47:51 - actually remove
47:52 - that pet from our pet shop arraylist
47:56 - since the user quoting
48:00 - got the pet so it's not in the pet shop
48:02 - anywhere so
48:04 - we're going to do that just like we did
48:05 - before and go pet shop
48:08 - dot remove and then remember here we put
48:10 - the index
48:12 - uh we can't call the
48:15 - call the element by the actual
48:19 - element so we can't go like remove
48:21 - serious
48:22 - because what if there are two seriouses
48:24 - in the pet shop like andre i said before
48:27 - and it doesn't really know which one to
48:29 - remove so we're going to remove it using
48:33 - index and we know the index at because
48:37 - the user typed it in and we stored it in
48:40 - response
48:40 - so we're going to go remove the element
48:45 - at the integer response
48:53 - okay
48:56 - uh so i'm going to
49:00 - compile this hopefully you guys are
49:03 - caught up by now and i'm just going to
49:06 - run it through one time and then we'll
49:08 - be done with the class today
49:11 - so we'll go here right click on the
49:13 - brown bot
49:15 - second option okay
49:19 - and yay the first part of the code works
49:22 - it types
49:23 - hello welcome to the pet shop and our
49:24 - number from zero to five
49:26 - so i'm just gonna go with three
49:30 - and it told us our pet is cotton candy
49:33 - and that's
49:34 - right because cotton candy is the fourth
49:36 - one in the array so that means its
49:38 - index is three and so
49:42 - therefore
49:44 - our pet is cotton candy
49:51 - and so our code works
49:55 - and you guys can go home and play around
49:58 - with this code
49:59 - run it as many times as you want um but
50:02 - right now we're going to be down in the
50:04 - class for today
50:05 - does anyone have any questions
50:15 - anything at all does anyone have any
50:24 - errors
50:26 - okay then so uh we are done for class
50:30 - with today
50:31 - i think that's all andre do you have
50:33 - anything to add
50:35 - um nope okay
50:38 - so we hope you guys had fun and learned
50:40 - something new and if you're free to go
50:42 - home and practice
50:44 - if you want and yeah thank you all so
50:46 - much for coming
50:47 - i think the next class is
50:50 - is wednesday okay
50:54 - see you all thank you bye
51:02 - uh i'm again so see ya
51:07 - okay bye

Cleaned transcript:

okay cool so we're gonna get started um welcome to java um class number four now um i'm alex i'm one of your instructors and andrea's the other one i don't know where she is on your screen but yeah uh so yesterday we were talking about if statements and if you didn't um have the chance to come to class yesterday i think we sent out a video a recording of the class so if you want you can watch that on your own time um but today we're going to be moving on um i'm going to share my screen actually before we do um i'm going to go over uh does anyone want to talk about the activity that we did yesterday with the if statements the magic 8 ball if anyone had any problems with their code or just want to ask questions about it or about any code actually feel free to talk now so just a reminder the activity we left off with yesterday it was the magic 8 ball if you were here um so we really hope you guys went um went home and kind of like fit around with it or added more options or just tried to run the code yourself and so if everyone's good with what we learned before um we're gonna go ahead and start the lesson for today okay so today we're going to be learning about arrays and arraylists and these are useful because before when we had a variable like stream name is equal to alex um that variable only holds one value which is alex but with arrays you can hold more than one value so you can hold like an int of numbers like one two three four five six seven but they have to hold the same type yeah hey do you want me to do an example now oh wait first yeah sure okay okay um okay so everyone as always we're going to want to make a new class so we can do some examples and write some code today during class so when you open up bluej you have this screen and you click on new class up here and name it whatever you want um so then you get this screen with all of this random code and you're going to delete all of that and just type public class array class or whatever you mean your classmates love like static voice and i'm just gonna copy paste that into chat in case you don't want to type all that out basically the public static void mainstream stuff it just allows you to type code in it and so you can run run the code too hello where did the chat go well this is fun okay i can't find the chat so you guys might just to copy this down by looking um i'll give you like a minute to catch up yeah thank you caitlin who talked and posted the code yay do you want to go over how to exactly make the array or like yeah okay so to create an array you have first have to declare the data type and the data type is just like if it's an int double string and yeah so you just do int in this example and then you do these brackets and the brackets are like above your enter sign and they're like the square brackets and then you put the name of what you want to name your array and then equals new because we're creating a new array and then the data type again and in brackets and inside here inside the brackets you want to put the size because for arrays you have a fixed size so if you declare a size of 5 then it will only have five values and you can't change it so you can't add or delete values okay so like we said before you can make an array of any type of variable so like in double and string but all of the entries and your array have to be the exact have to be the same type of variable so an array of all ends or all doubles or all strings so just to like emphasize how you just to go over how you make one i'm going to make an array in blue jay over here um so an int array okay maybe not a string array so you start with the type of variable and then brackets to let the computer know it's an array and then you name their rate like anything you want to like dogs and then equals new to let them know you're making a new array the type of variable again and then in brackets how big you want it to be so i'll go to seven and that should be it um that is basically how you make an array and we'll show you how to print it out later um but for now that's basically all we'll do yeah so for arrays um to add like okay so first for erase it's a bit different like how you're normally used to so arrays they start counting starting from zero so it would be zero one two three and four and the index is just like a pointer that points to what value you want to access so it's kind of confusing but if in this example you want to put like the number seven in the first value for the array you would have to do array brackets zero bracket equals seven instead of like array one so zero means the first value yep kind of like you can see in the diagram over here so like at index zero that's basically going to be the first entry in the array because we start counting at zero and then the entry with the index one is basically the second entry so it's kind of shifted a little and that's really important to remember when you're working with the rays and so before we set like the value 7 to um at index 0 so to print out the value we would just do system dot out dot print line parenthesis and then the array and then you want to put the index because that's how you refer to the value so it's kind of like the index is a name tag and the value is a person so to call the person you call them by their name so the index is kind of like their name yep so like i said we we're going to talk about how different an array like andrea was just talking about so um this is a really this is basically why you need to know the index the concept of the index when you're talking about erase so that you can properly print it out like maybe you just want to print out the third number in your array and so you would use array bracket 2 because the third entry has the index of 2. that can be really confusing but you'll get used to it though um i'm just going to wait so i'm going to fill this array with seven strings um because there are seven slots in the array so like we showed you before you're going to use the name of the array and then in brackets which um index you want to add in your element at so i'll start with zero because it's the first one and then it's an array of strings so i'm going to fill it with names of dogs because i didn't get dogs um so oops fluffy um i'm gonna make it before because seven is not um i don't know what you name your dogs okay um and notice that even though we're ending at index three we have four entries in our array on i don't know man okay okay so now we're now maybe you want to print the name of one of these dogs and you just and to do that to print a random entry in your array you're going to use the system.out.printline method that we taught you before so it's really pretty simple you just go system to have a print and then as always parentheses and inside the parentheses this time you're going to call an element of your array using the index that it's at um basically how you identify a certain element is always by its index so i'm just going to print whatever is in index 2 and that's going to be the third entry and that's marley so i want to see if that actually works so i'm going to compile my code go down to the brown box right click second option okay and i printed out marley yeah that worked so you can do this with an array of like any type you can do integers or doubles whatever you want and yeah do you guys have any questions please feel free to ask questions or if you have any errors in your code we can help you figure it out especially since we have a smaller class andre is there anything in the chat i can't see no okay cool we can move on okay so since you guys don't seem to have any questions we'll move on to the second part okay so for there's another type that's called an arraylist and an arraylist is a bit more flexible because the size is actually not fixed so the size can change as you add elements and also as you delete elements so yeah it's a bit more flexible so too and also for an array list creating one in java is a little bit different first you have to do arraylist with a capital a and a capital l it's just like that and then these angle brackets like the less than and greater than sign and inside there you want to put the type of array list you want and instead of doing like int or double or string you actually want to spell it out so int becomes integer and double becomes double and stream becomes string but it also has to be capitalized so like capital i integer and then you name your arraylist whatever you want dogs cats colors and then equals new arraylist again and then you put the brackets and data type and then parentheses and inside these parentheses you can leave it empty or you can also put the size so you can put like three and you'll have three values in it but if you put three values in it you can also add on to your array or you can delete items as well so like throughout your code you can change how many values you have in your arraylist yeah yeah um so i'm just going to go ahead and make an arraylist for an example right now wow it's while this slide is down the screen and i'm just going to comment out the code from before and another thing with arraylist you have to import it so like right above the public class scene you want to type import java dot util dot arraylist this is kind of similar to how we imported the ability to use so we're going to import the ability to use an arraylist okay so to make an arraylist it's just like you see in this slide on the right over here so you're going to start with the word arraylist careful to do all the capitals in the right places um because as we explain java is um a caps sensitive language so it cares about that um so a realist and then less than less than greater than sign and inside you're going to put the type of arraylist you want to make so i'll just go with double this time oops um and then we're going to name our arraylist so i'm going to call it scores scores equals new arraylist and then the type of realistic it is again so like the type of value the type of variable you're storing in it and then parentheses and a semicolon as always if you're making your own arraylist on your own computer you can like make whatever type you want i'm just going to go with this okay so tell us if you need more time whenever you do um but right now i'm just gonna move on to the next one okay so to add values into our arraylist it's just the arraylist name and then this dot add and then parentheses and then whatever value you want to add into your arraylist goes inside the parentheses so realist.add5 adds the value 5 into the arraylist and this time you don't have to specify the index it just adds on to your arraylist at the end and to delete an array to delete a value this time you want to do the arraylist name and then dot remove and then the index and the like index 0 gets removes the first value and the reason why you want to put the index instead of getting the value is because if we have an arraylist with like two values that are like 11 if you get if you do not remove 11 meaning you want to remove the value that is 11 but you have two 11's then the arraylist doesn't know which one you want to remove so yeah you have to basically yeah yeah you always call it value by its index yeah yeah so next slide andrea do you want to do the next slide oh sorry and then to print the value we would do system.out.printline arraylistname and then dot get and then we would put the index yeah so that's like before you tell the computer which element of the index you want using the which element of the array you want using its index okay so now that we've made our arraylists over here hopefully you made your own on your own computer um i'm going to fill it up with values and we do that with the dot add method like we talked about before um so the name of the arraylist math score is and then we'll go with a 90.5 um i just add in a few so we have valleys to work with notice that doesn't it doesn't matter like what size the arraylist is as you add more values it keeps expanding if you remove values it gets smaller and like the size of the arraylist isn't set permanently okay so i just filled in a few random scores i'm imagining like scores on a math test but you can do whatever you want so right now we just know how to print out like individual elements of an arraylist we can teach you how to print out the whole arraylist or the whole array later but right now we're just going to concentrate on printing individual elements so say i just want to know what the third student got on their math test um so like in the slideshow we're going to use a system.out.printline method um like we said before that's basically how you that's basically just how you print something out to the computer um always a system.out.printline you can do a print or a print line it doesn't really matter um so the name of the arraylist and then to get an element in order to print you're go when you're using an arraylist you're going to use dot get and then inside the parentheses you put whatever index whatever is the index of the element you want to print so since i said i want to do the third student does anyone want to tell me which index i should put in the parentheses to print out or do you see do you have any guess two yeah exactly so i'm not sure who's on that but like great job so we start counting from zero so therefore the third element is going to have the index of two so when we print this line we should get 9.8 because that's the third element so i'm going to compile again make sure there aren't any errors right click second option okay and it printed 99.8 that's exactly what we wanted and yep so say we want to remove an element from the arraylist for some reason maybe we just don't need it anymore maybe like a student isn't participating anymore or whatever so maybe i want to remove the fifth element from the arraylist so that picture was like i'm going to drop your lowest test score right yay so now you see that it's very nice so yeah so i'm going to remove the fifth element um this is like really similar to the dot wait this is not similar to the dot there we go this is similar to the dot get so do that we're just going to use the name and then dot remove and then inside the parentheses we put the index of whatever we want to remove um so since i'm doing the fifth element here i'm going to go with index 4 and i don't really know how i can show you that it removed index 4 but it did maybe since this was the last element in the arraylist maybe now that we don't have the fourth now that we don't have the fifth element anymore if we tried to print the fifth element i wonder what the computer would tell us it would probably be an error right because if we want to print the fifth element but there is no fifth element i can't do it so i'm just going to try that see what it's going to tell us so dot wait math scores dot get and then the fifth element is compile and wait was this and it didn't print anything and it told us their out of bounds exception so index four is out of bounds because our arraylist is only four elements long so it doesn't have an index four and it can't print it yeah because it has zero one two and three index yep so basically right now since we removed index four all we have in the arraylist is this but maybe what if we remove the second element so this one so that would mean everyone's indexes are gonna shift so if this one like just gets removed then 99.8 is going to have the index of one now instead of two everything's going to be everyone's index is going to become one less because we removed that if that makes sense so if you imagine them all like you know like books in a bookshelf if you remove one of the books all the rest of the books are gonna slide over and take its place so yep i'm gonna give you guys like a couple minutes to maybe hatch up or play around with both arrays and arraylists um and then we're going to do a short activity okay so if anyone has any questions about what we just taught you about arrays and array lists how to add things how to remove things how to print them um go ahead and ask them like and meet yourself or type in the chat or any areas in your code that you can't figure out okay then so if no one has any questions we're going to move on um we just have a short fun activity for today we're going to simulate having an inventory in a pet shop so um we're going to use an arraylist for this because it's just more flexible maybe the pet shop sometimes it has five pets up for adoption but maybe sometimes it has seven and you just don't wanna like put a hard limit on how big the inventory can be so we're going to make an arraylist to like simulate um like holding the num holding all the information about holding the name of the pets in the pet shop um okay so in order to make an arraylist like we did before we're going to type oh and remember that like when you start a new class and you want to use realist you'd have to use this import statement okay so you do you write arraylist just like to let them know you're making an arraylist and then for this we're going to want to make ooh does anyone want to tell us what type of a realist we want to make in order to keep track of animals in pet jump lena do you have a guess or anyone else string yeah exactly um perfectly right uh usually arraylists are like often strings because you store like names of people in a class or things like that so uh we're going to make it an arraylist of strings so inside your greater than lesson signs you put the word string and then you name the arraylist so i'm going to call mine pet shop but you can call us whatever you want um and then you realist type again and then parentheses and as always your semicolon and in here you can put spaces or you don't have to it's just like personal preference but i think it looks easier and it's easier to like keep track of and look at if you put a lot of spaces whatever you want so i'm going to fill this array list of strings with a lot of pet names um all the names of the pets i think that pet shop has up for adoption and this is kind of like what we did before with names and strings so pet shop dot add um i'm so bad at coming up with names um you guys go ahead and like add your own names but i'm just gonna do this over here um cotton candy oh this is not what i would name my dog is anyone like have a pet if you do like i can add their name in okay i'll do one more okay so now i have this arraylist of strings that has all of these pet names in it and i'm just saying that these names are the names of pets in the pet shop and so maybe we'll make a program where the user can put can tell the computer a random number from like one through six and then uh we can like randomly we can assign them or like give them the pet that's in that index now i realize that you'll want to ask them for 05 but okay so in order to get um in order to ask the user for input and to get their input back and use it in your code we're going to use the scanner like we talked about before um so we need to import the ability to use a scanner so we type at the top of our class before we name the class import java.util and like you can see that's really similar to arraylist okay and down here basically wherever you want to put it um i'm going to make a scanner tool um see if i remember how to do this scanner you can name your scanner whatever you want i know we like used the word input before but i like to use scan and yeah so like i said you can change this to input or whatever you want and this line of code can go anywhere in your code as long as it's before the pet shop stuff and so we're going to print out to the user like hi um enter a number okay so we're going to take this number and like use it to use it as the index of the pet that they get so basically we're asking them for an index number and since indexes start counting at zero and go up we're going to ask them to enter a number between 0 2 5 because there are 6 entries in here so the last index is going to be 5. you can also do this with like the pet name but it's it's a bit more complicated and it uses like if statements and stuff so yeah we're just gonna stick with index yep but yeah there's totally a way where maybe they want series and they can type in the word series and we can do it that way but it's a little more complicated like andrea said so in order to print something out to the user as always we go system.out.print line if you want and inside the parentheses we're going to print out a string so we'll go hello welcome to the pet shop um enter a number from zero to five you get a pet and this is what the computer is going to tell the user and so once the user re reads that statement they're going to okay i'll type in a number from zero to five and in order to get that value we're going to make a an int variable that will store whatever they type in and it's going to be an int variable because since it's the number 5 it's going to be a whole number an integer so we're going to make an integer value you um hope you guys remember how to do this from before but if not no worries you can always review so and i'm gonna name it response and then equals and this is where the scanner comes in so we're going to use our scanner tool like we made up here and go scan dot next it and that should take whatever the user types in and store that in an int variable that we named response i'll give you like a minute to catch up okay so once they type in their index we're going to tell the user the name of the pet that they received so in order to do that we uh do it like before and use the dot get method so we're going to do system.out.print and just go your pet is remember to put a space after whatever you typed because if not it's going to go your pet is strawberry um because the computer doesn't know to put in a space so you need to put in your space right here and then plus and then we're going to use the dot get method and do pet shop dot get response and we're going to use response here because remember we basically asked the user for the index of the path they want and then we're going to use that index in the get statement to get it and print it out and i'm just gonna and if we really want to be fancy we can actually remove that pet from our pet shop arraylist since the user quoting got the pet so it's not in the pet shop anywhere so we're going to do that just like we did before and go pet shop dot remove and then remember here we put the index uh we can't call the call the element by the actual element so we can't go like remove serious because what if there are two seriouses in the pet shop like andre i said before and it doesn't really know which one to remove so we're going to remove it using index and we know the index at because the user typed it in and we stored it in response so we're going to go remove the element at the integer response okay uh so i'm going to compile this hopefully you guys are caught up by now and i'm just going to run it through one time and then we'll be done with the class today so we'll go here right click on the brown bot second option okay and yay the first part of the code works it types hello welcome to the pet shop and our number from zero to five so i'm just gonna go with three and it told us our pet is cotton candy and that's right because cotton candy is the fourth one in the array so that means its index is three and so therefore our pet is cotton candy and so our code works and you guys can go home and play around with this code run it as many times as you want um but right now we're going to be down in the class for today does anyone have any questions anything at all does anyone have any errors okay then so uh we are done for class with today i think that's all andre do you have anything to add um nope okay so we hope you guys had fun and learned something new and if you're free to go home and practice if you want and yeah thank you all so much for coming i think the next class is is wednesday okay see you all thank you bye uh i'm again so see ya okay bye
