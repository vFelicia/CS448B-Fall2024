With timestamps:

00:00 - and again today will be the last lesson
00:03 - for um this class so if you have like
00:07 - any questions not just about the final
00:09 - project but about like
00:10 - java in general um feel free to just ask
00:13 - me
00:14 - um during this time the lesson
00:17 - itself will also be pretty short we'll
00:19 - just be going over
00:20 - what um ideas for the final project
00:24 - and then um just some tips and tricks
00:26 - for
00:27 - when you're coding um so if you
00:31 - so after like i go over the powerpoint
00:33 - today
00:34 - um i'll be just hanging around um
00:37 - answering your guys's questions
00:39 - um otherwise like if you're comfortable
00:41 - with doing the project yourself and
00:44 - you don't you don't want to like hang
00:45 - out after class
00:47 - um feel free to like feel free to drop
00:49 - off um
00:50 - otherwise like if you have any other
00:52 - questions or um
00:54 - you want to just hang around just in
00:55 - case like
00:57 - you want to like just in case you want
00:59 - some help debugging or like working with
01:01 - your code
01:02 - um feel free to just hang around um i'll
01:05 - be here until
01:06 - until 6 pm est or um
01:10 - or 3 p.m pfc
01:14 - so yeah i'll be available to help
01:18 - all right yeah so again from this
01:22 - for this lesson we'll basically be just
01:24 - going over like
01:26 - um be going over the final project
01:28 - technically the final project
01:30 - is you're creating your own java program
01:33 - yourself
01:33 - um using what we've learned um in the
01:36 - past lessons
01:37 - but um today i'll just be going over
01:40 - just some ideas of like
01:42 - what what are some good ideas for um
01:45 - beginner
01:45 - java programs and what are um some
01:49 - some tips that might help you out when
01:51 - you're working
01:52 - with them code on your own
01:56 - so basically um during this course we
01:59 - went over
02:00 - four major things so the first one is um
02:02 - basic variables and operations
02:05 - so these are just like the basic
02:06 - building blocks of code so
02:08 - the different data types are available
02:11 - in java and what you can do to
02:13 - manipulate those data types
02:15 - um the second one is the if statements
02:17 - and loops
02:18 - so if else statements can do multiple
02:22 - cases
02:22 - and this is just like different ways you
02:25 - can iterate over
02:26 - code or even like or um do like
02:29 - branching code
02:31 - so using um if statements and
02:34 - like four or while loops um the third
02:36 - thing we went over
02:37 - is object classes so objects are sort of
02:40 - a special kind of data type
02:42 - and classes are used to create objects
02:45 - so this is just
02:46 - a more um complex way of being able to
02:49 - um
02:50 - to manipulate data in your code and then
02:52 - finally
02:53 - um the last um kind of thing we went
02:56 - over is
02:57 - arrays and arraylists so these are just
03:00 - um
03:00 - being able to put a data type in a
03:03 - or a bunch of data types in a collection
03:06 - and being able to um
03:08 - to group them together and um
03:11 - and manipulate them as a whole
03:15 - so if you like i would recommend you
03:17 - sort of go over
03:19 - the um the lessons that are mainly
03:22 - focused on these four different types of
03:26 - of um concepts because these are the
03:28 - most helpful
03:29 - for um for creating your own programs
03:34 - so next for this final project um we
03:37 - basically want you to
03:39 - to create your own java program but the
03:41 - thing with like creating a java program
03:43 - is like you can technically create
03:45 - anything
03:45 - but um but we want to
03:49 - sort of like we want to give you the
03:50 - freedom to basically create anything you
03:52 - want
03:53 - um i think like something that might be
03:56 - difficult
03:57 - um with this with this like kind of
03:59 - project itself is just like
04:01 - because you can create anything you want
04:02 - it's sort of hard to start
04:04 - to be like where do i start so we've
04:06 - decided to give you
04:08 - um a list of ideas that you can
04:11 - you can um of like programs you can make
04:13 - on the right side
04:15 - and we've also ordered it from the least
04:18 - difficult to the
04:19 - um most difficult so um something that
04:23 - would be very good for a beginner
04:25 - programmer um
04:26 - you can create like a currency converter
04:28 - or like a number guessing game
04:30 - um these are pretty like these will use
04:34 - some
04:35 - more basic um java concepts and then you
04:38 - can
04:38 - do anything up you like to sorry sudoku
04:43 - so sudoku is a little bit more
04:45 - complicated
04:46 - but um technically you'll be able to do
04:48 - it some
04:50 - some recommendations i would say for a
04:53 - beginner java program
04:55 - is just um avoid thinking about
04:58 - sort of um what user like the user
05:02 - interface
05:02 - so we haven't talked much about like
05:04 - creating a java program that is very
05:06 - user friendly
05:08 - a lot of our demos just use like the the
05:11 - console or like the command line
05:13 - um i would recommend you stick with that
05:15 - mostly because um
05:17 - sort of converting a program into an
05:20 - actual like
05:21 - piece of software that uses like a
05:23 - really nice like
05:24 - gui or like graphic user interface
05:27 - requires like
05:28 - using like or learning a different java
05:31 - library
05:32 - and then learning a few a few like
05:36 - more complex concepts
05:39 - when it comes to programming so
05:42 - um this list on the right is
05:46 - basically what we we think is pretty
05:48 - beginner friendly
05:51 - for like um for your final project
05:56 - and last thing we can go over is just
05:57 - some um coding tips and tricks
06:00 - so the first one is i would really
06:03 - recommend youtube design before you code
06:06 - so um when we went over classes we
06:08 - talked a lot about
06:09 - or we talked a bit about um class
06:12 - diagrams
06:13 - um i would really recommend you sort of
06:16 - draw out like
06:17 - think about what classes will you need
06:19 - when you make your code
06:21 - and what methods will you need to
06:22 - implement um
06:24 - or to like make your code work so
06:27 - don't like don't just jump straight and
06:30 - do coding
06:31 - because sometimes what happens is you'll
06:32 - actually code yourself into a corner
06:34 - where you've designed you haven't really
06:36 - thought about the design of something
06:38 - but now like you've written so much code
06:40 - that's too late
06:41 - to really like change the design of
06:43 - something and
06:45 - but like at the same time the way you've
06:47 - designed a class
06:48 - or like the way you've designed a
06:51 - solution
06:52 - has like makes it a lot more difficult
06:55 - for you to
06:55 - actually um make your project work a lot
06:58 - of
06:59 - like coding um when you get to like more
07:02 - complex code
07:03 - it's not actually about like um the
07:05 - syntax for like
07:07 - making um some super clever hack
07:11 - to make something work it's actually
07:13 - about how do i design my code to be
07:16 - to be extensible and to be scalable
07:19 - so make sure instead of like just
07:22 - jumping into like this is like this is
07:25 - why i have to implement this is like
07:27 - what i have to do and like just coding
07:30 - um or just like jumping in and coding
07:33 - think about like first think about like
07:35 - well how do i like
07:37 - how do i do this in on a conceptual
07:39 - level and then
07:40 - in order to implement the solution what
07:43 - classes you need
07:44 - and what methods will you need also
07:47 - second off just don't be afraid to use
07:50 - online resources
07:51 - and don't be afraid to ask for help of
07:53 - course with online resources
07:55 - always be always make sure to use um
07:58 - multiple sources
07:59 - not everybody is right on the internet
08:01 - so make sure that like
08:04 - the solutions you find are first correct
08:07 - and second actually solve your issue
08:11 - but um that being said like don't be
08:14 - afraid to
08:15 - just google something or even to like
08:17 - ask
08:18 - teachers for help
08:24 - um the second part of this is just some
08:27 - tips with debugging
08:29 - so a lot of times what happens um when
08:32 - you
08:33 - when you like first write your code is
08:35 - nothing goes right nothing ever goes
08:37 - right like the first time you write
08:39 - a piece of code so what what you'll have
08:42 - to do
08:43 - a lot is just debugging and that's
08:45 - basically just
08:47 - finding what's wrong with your code and
08:49 - and making it work
08:51 - so the first part of debugging is
08:54 - identify the error
08:55 - so what exactly is causing the issue
08:58 - this is
08:58 - this can be like the hardest part of
09:00 - debugging
09:02 - um the first thing i recommend is just
09:04 - read the error messages
09:06 - java isn't trying to shift you and like
09:09 - java isn't trying to trick you with
09:11 - compiler error messages
09:12 - and they aren't being um and they aren't
09:15 - being
09:17 - um i would say they aren't being tricky
09:20 - on purpose
09:22 - um a lot of java error messages once you
09:24 - understand how to be an
09:25 - error message you'll it will be very
09:28 - easy to identify
09:29 - where your code went wrong um so
09:32 - start practicing reading those compile
09:34 - error messages
09:36 - because a lot of times um once like you
09:38 - get used to that
09:39 - you'll sort of understand like how java
09:41 - works
09:43 - um also this second off is print
09:46 - statements very
09:47 - help a lot so um the first part of the
09:51 - like debugging we're finding the error
09:53 - is like what does the error message say
09:56 - and once you know what the error message
09:57 - says you want to try to identify like
10:01 - is that actually the line that went
10:02 - wrong or is there something before that
10:05 - line
10:05 - that like caused everything after it to
10:08 - go wrong
10:09 - so you can sort of find that out by
10:13 - um using print statements and sort of
10:16 - printing out the data
10:17 - to see like what's actually happening
10:21 - and second up is user resources
10:24 - so think about what outside resources
10:27 - might be helpful
10:28 - again like google is your friend and
10:30 - don't be afraid to ask me
10:32 - or even um anna about like
10:35 - for help with debugging and we'll try to
10:38 - walk you through that
10:43 - and finally this is just some additional
10:45 - resources
10:46 - for like if you wanna um look a little
10:49 - deeper into java
10:53 - so this first one is just gonna be
10:56 - ap um ap free response questions
11:00 - so this is just um
11:05 - some extra practice that you can
11:11 - do on your own time
11:18 - um this next one is coding that java
11:20 - questions
11:21 - coding that um is actually a really good
11:25 - resource for um for any language
11:27 - honestly
11:28 - um and i think they're also pretty
11:32 - useful
11:33 - for um for when you want to practice
11:37 - like interview questions that use java
11:42 - and they also have
11:47 - some questions that are more geared
11:49 - towards ap practice
11:52 - this is just also some more practice
11:55 - questions
12:03 - and then finally this these are just
12:06 - some project ideas
12:08 - using java
12:17 - all right so after that um yeah so this
12:20 - is
12:21 - basically the end of the presentation
12:23 - for
12:24 - this lesson again i'll be staying back
12:26 - until
12:27 - um until like the the rest of for the
12:30 - rest of class time just in case you guys
12:32 - have some more questions about java or
12:34 - stuff
12:35 - like want some help with your project
12:37 - but um
12:40 - besides that like you can just go out
12:42 - and
12:43 - and like start working on your projects
12:46 - um projects aren't
12:47 - also just a heads up like projects
12:49 - aren't due
12:51 - at the end of class there technically
12:52 - isn't i don't i don't believe that there
12:54 - is
12:55 - like like a hard deadline for them but
12:58 - this we're just trying to give you some
13:00 - time where you can code but also
13:02 - have like ha like we're have some time
13:06 - where like teachers are also available
13:08 - to give you one-on-one help
13:12 - and then finally um you can also feel
13:15 - free to share your projects
13:17 - you can post your projects on github if
13:19 - you know how to use get
13:20 - or um you can post it on roughly and
13:23 - we'd also like it
13:25 - if you um if you send
13:30 - like if you're comfortable you can also
13:32 - send us your projects
13:34 - using this submission form
13:46 - and then finally um this is the feedback
13:48 - form for it
13:50 - i think for for classes overall
13:54 - um again we really we really really
13:58 - appreciate it
13:58 - if you just fill out the feedback form
14:01 - because
14:02 - if this will help us for future classes
14:06 - not like not just for java lessons
14:16 - all right so this is basically the end
14:18 - of the presentation
14:30 - you

Cleaned transcript:

and again today will be the last lesson for um this class so if you have like any questions not just about the final project but about like java in general um feel free to just ask me um during this time the lesson itself will also be pretty short we'll just be going over what um ideas for the final project and then um just some tips and tricks for when you're coding um so if you so after like i go over the powerpoint today um i'll be just hanging around um answering your guys's questions um otherwise like if you're comfortable with doing the project yourself and you don't you don't want to like hang out after class um feel free to like feel free to drop off um otherwise like if you have any other questions or um you want to just hang around just in case like you want to like just in case you want some help debugging or like working with your code um feel free to just hang around um i'll be here until until 6 pm est or um or 3 p.m pfc so yeah i'll be available to help all right yeah so again from this for this lesson we'll basically be just going over like um be going over the final project technically the final project is you're creating your own java program yourself um using what we've learned um in the past lessons but um today i'll just be going over just some ideas of like what what are some good ideas for um beginner java programs and what are um some some tips that might help you out when you're working with them code on your own so basically um during this course we went over four major things so the first one is um basic variables and operations so these are just like the basic building blocks of code so the different data types are available in java and what you can do to manipulate those data types um the second one is the if statements and loops so if else statements can do multiple cases and this is just like different ways you can iterate over code or even like or um do like branching code so using um if statements and like four or while loops um the third thing we went over is object classes so objects are sort of a special kind of data type and classes are used to create objects so this is just a more um complex way of being able to um to manipulate data in your code and then finally um the last um kind of thing we went over is arrays and arraylists so these are just um being able to put a data type in a or a bunch of data types in a collection and being able to um to group them together and um and manipulate them as a whole so if you like i would recommend you sort of go over the um the lessons that are mainly focused on these four different types of of um concepts because these are the most helpful for um for creating your own programs so next for this final project um we basically want you to to create your own java program but the thing with like creating a java program is like you can technically create anything but um but we want to sort of like we want to give you the freedom to basically create anything you want um i think like something that might be difficult um with this with this like kind of project itself is just like because you can create anything you want it's sort of hard to start to be like where do i start so we've decided to give you um a list of ideas that you can you can um of like programs you can make on the right side and we've also ordered it from the least difficult to the um most difficult so um something that would be very good for a beginner programmer um you can create like a currency converter or like a number guessing game um these are pretty like these will use some more basic um java concepts and then you can do anything up you like to sorry sudoku so sudoku is a little bit more complicated but um technically you'll be able to do it some some recommendations i would say for a beginner java program is just um avoid thinking about sort of um what user like the user interface so we haven't talked much about like creating a java program that is very user friendly a lot of our demos just use like the the console or like the command line um i would recommend you stick with that mostly because um sort of converting a program into an actual like piece of software that uses like a really nice like gui or like graphic user interface requires like using like or learning a different java library and then learning a few a few like more complex concepts when it comes to programming so um this list on the right is basically what we we think is pretty beginner friendly for like um for your final project and last thing we can go over is just some um coding tips and tricks so the first one is i would really recommend youtube design before you code so um when we went over classes we talked a lot about or we talked a bit about um class diagrams um i would really recommend you sort of draw out like think about what classes will you need when you make your code and what methods will you need to implement um or to like make your code work so don't like don't just jump straight and do coding because sometimes what happens is you'll actually code yourself into a corner where you've designed you haven't really thought about the design of something but now like you've written so much code that's too late to really like change the design of something and but like at the same time the way you've designed a class or like the way you've designed a solution has like makes it a lot more difficult for you to actually um make your project work a lot of like coding um when you get to like more complex code it's not actually about like um the syntax for like making um some super clever hack to make something work it's actually about how do i design my code to be to be extensible and to be scalable so make sure instead of like just jumping into like this is like this is why i have to implement this is like what i have to do and like just coding um or just like jumping in and coding think about like first think about like well how do i like how do i do this in on a conceptual level and then in order to implement the solution what classes you need and what methods will you need also second off just don't be afraid to use online resources and don't be afraid to ask for help of course with online resources always be always make sure to use um multiple sources not everybody is right on the internet so make sure that like the solutions you find are first correct and second actually solve your issue but um that being said like don't be afraid to just google something or even to like ask teachers for help um the second part of this is just some tips with debugging so a lot of times what happens um when you when you like first write your code is nothing goes right nothing ever goes right like the first time you write a piece of code so what what you'll have to do a lot is just debugging and that's basically just finding what's wrong with your code and and making it work so the first part of debugging is identify the error so what exactly is causing the issue this is this can be like the hardest part of debugging um the first thing i recommend is just read the error messages java isn't trying to shift you and like java isn't trying to trick you with compiler error messages and they aren't being um and they aren't being um i would say they aren't being tricky on purpose um a lot of java error messages once you understand how to be an error message you'll it will be very easy to identify where your code went wrong um so start practicing reading those compile error messages because a lot of times um once like you get used to that you'll sort of understand like how java works um also this second off is print statements very help a lot so um the first part of the like debugging we're finding the error is like what does the error message say and once you know what the error message says you want to try to identify like is that actually the line that went wrong or is there something before that line that like caused everything after it to go wrong so you can sort of find that out by um using print statements and sort of printing out the data to see like what's actually happening and second up is user resources so think about what outside resources might be helpful again like google is your friend and don't be afraid to ask me or even um anna about like for help with debugging and we'll try to walk you through that and finally this is just some additional resources for like if you wanna um look a little deeper into java so this first one is just gonna be ap um ap free response questions so this is just um some extra practice that you can do on your own time um this next one is coding that java questions coding that um is actually a really good resource for um for any language honestly um and i think they're also pretty useful for um for when you want to practice like interview questions that use java and they also have some questions that are more geared towards ap practice this is just also some more practice questions and then finally this these are just some project ideas using java all right so after that um yeah so this is basically the end of the presentation for this lesson again i'll be staying back until um until like the the rest of for the rest of class time just in case you guys have some more questions about java or stuff like want some help with your project but um besides that like you can just go out and and like start working on your projects um projects aren't also just a heads up like projects aren't due at the end of class there technically isn't i don't i don't believe that there is like like a hard deadline for them but this we're just trying to give you some time where you can code but also have like ha like we're have some time where like teachers are also available to give you oneonone help and then finally um you can also feel free to share your projects you can post your projects on github if you know how to use get or um you can post it on roughly and we'd also like it if you um if you send like if you're comfortable you can also send us your projects using this submission form and then finally um this is the feedback form for it i think for for classes overall um again we really we really really appreciate it if you just fill out the feedback form because if this will help us for future classes not like not just for java lessons all right so this is basically the end of the presentation you
