With timestamps:

00:00 - today we're going to get into some css
00:03 - part 2.
00:04 - now my group last week we had css part
00:07 - 1 so we made an
00:11 - ugly website but today we are going
00:14 - to make a website that has some
00:17 - animation factors in it so
00:19 - get excited for that i'm going to share
00:20 - my screen with everyone so we can all
00:23 - see
00:23 - the slides and we're going to go through
00:24 - them together as always feel free to
00:26 - interrupt me if you have any questions
00:27 - or just drop them in the chat as they
00:29 - come to you
00:30 - so css part two let's get into it
00:34 - so importing uh copy paste a style sheet
00:36 - link into your head before all other
00:38 - style seats load us to css
00:41 - i know that we have does everyone see
00:44 - this the
00:44 - link rel style sheet href
00:48 - http stockpack bootstrap this is a
00:50 - little bit of an interesting thing
00:52 - we're going to get into bootstrap later
00:54 - that's going to come
00:55 - next week um it's an interesting little
00:57 - add-on
00:58 - that we can have and um remember when we
01:01 - have um
01:02 - i know my group talked about it a little
01:04 - bit extensively i don't know exactly
01:05 - what christians group covered but
01:07 - hopefully you guys will be familiar you
01:08 - know the metadata stuff that we talked
01:10 - about at the beginning
01:11 - that's where you're going to find the
01:12 - importing of the css sheet it's kind of
01:14 - done automatically for you
01:16 - this bootstrap stuff we're going to talk
01:17 - about next week so
01:19 - um get excited for that because it comes
01:21 - more into play when we're doing more
01:23 - complex websites which we're going to be
01:24 - doing with java
01:26 - so comments um my group has
01:29 - seen these a little bit in my examples
01:31 - comments are used to explain about what
01:33 - you want to achieve with the code they
01:34 - don't actually interfere with the codes
01:36 - processes
01:37 - comments are placed inside the style
01:39 - element um
01:41 - and starts with a slash asterisk and
01:45 - ends with an asterisk slash this is our
01:47 - opening and closing tag let me get my
01:49 - pointer because i feel like that helps
01:51 - opening closing tag um everything is an
01:54 - opening closing tag
01:55 - if we remember and for here this is a
01:58 - comment talking about
01:59 - what this part of the code does
02:02 - um and this is a comment talking about
02:04 - what this part of the code does
02:06 - this should be a review because we
02:08 - talked about coleman's comments
02:10 - excuse me a little bit of a british
02:11 - accent there um we talked about comments
02:13 - previously
02:14 - so now we're going to talk about the
02:15 - layout of a website and this is kind of
02:17 - important
02:18 - um because it kind of lets us know how
02:21 - the computer is thinking about things
02:23 - visually so there are many layouts you
02:25 - can choose from
02:27 - this is the most common one so if you go
02:28 - into reply you open a web page
02:30 - and you don't do anything to select the
02:32 - layout
02:33 - this is what you're going to get you
02:36 - know this is like the standard
02:39 - you know except for the navigation menu
02:41 - i think that's a little bit more
02:42 - advanced because you're not putting in a
02:43 - navigation menu
02:45 - um explicitly but here's how it goes
02:48 - we have our header anything at the top
02:50 - of the page like a title
02:51 - like a big category makes sense
02:55 - main content is what i like to think
02:57 - about of is like
02:58 - the paragraph um so like this is where
03:02 - my image is going to be this is where my
03:03 - paragraph is going to be this is where
03:05 - the content that people are going to
03:07 - interact with is going to be whether
03:08 - they read it they write it they type it
03:09 - they
03:10 - look at it that's where it's going to be
03:13 - oh i'm so sorry let's go back
03:16 - your navigation menu is going to be like
03:18 - the thing um
03:19 - if we look at it in like websites say
03:21 - you want to
03:23 - um you go on any website and it has that
03:26 - like little nav bar at the top
03:27 - menu and it might say like oh great
03:30 - example you go to the girls code website
03:33 - right and it says about and it says our
03:35 - courses and it says
03:37 - join that's a navigation bar it has a
03:39 - bunch of different options
03:40 - all lined up in this one bar at the top
03:42 - that's a navigation menu
03:44 - we're going to learn how to make those
03:45 - today but that's not what the example is
03:46 - focused on because
03:47 - i thought animation was a little bit
03:49 - more important especially if we're gonna
03:51 - get into bootstrap which kind of makes
03:52 - navigation menus for you
03:54 - so footer anything at the bottom of the
03:57 - web page
03:58 - any you know miscellaneous text and
04:01 - these are content windows on either side
04:03 - of my main content
04:04 - um i would recommend putting things here
04:06 - because they kind of get clustered off
04:07 - to the side but you can put like an
04:08 - image here you can put more text here
04:10 - it's up to you headers um headed to the
04:13 - top of each website we saw that little
04:15 - block at the very top
04:16 - headers should be clear and precise like
04:19 - a title
04:20 - this one in our example header padding
04:23 - 70 pixels text align in the center
04:27 - background lavender color color of the
04:30 - font
04:31 - white color anyone who was in my class
04:33 - last week i remember i told you
04:35 - think about your color combinations this
04:37 - is an example of a bad color combination
04:39 - it's white on light purple it's really
04:42 - hard to see
04:43 - not the bex ux not the best ui so we're
04:46 - going to try and avoid color
04:47 - combinations like this
04:48 - when we're making websites but for now
04:51 - this is your
04:52 - example navigation menu consists of a
04:55 - list of
04:56 - things that can help people navigate
04:58 - through the website
05:00 - so remember how i talked over the girls
05:02 - code it website
05:03 - you know the about us the join the
05:07 - our lessons those are the examples
05:10 - so the navigation bar is that um
05:14 - and then it has text with different
05:15 - links remember in my group how we kind
05:18 - of did text with different hyperlinks in
05:19 - it like
05:20 - a little bit maybe there was some in the
05:23 - examples
05:24 - um so if you look back you'll see them
05:25 - but that's basically what this is
05:28 - the hover when you point on your mouse
05:30 - cursor um that's the hover function
05:32 - that's an example
05:33 - of a fun little pseudo class remember my
05:36 - group we talked about pseudo classes a
05:38 - lot there was one in the example
05:39 - um remember when we had our example when
05:41 - i hover my mouse on this
05:44 - it changes so that's basically this when
05:46 - i hover my mouse on this it changes
05:48 - color
05:48 - that's a pseudo class we know what that
05:50 - is right awesome
05:52 - so let's go to the top and just run
05:54 - through the code a little bit
05:55 - go through piece by piece so we can
05:57 - figure it out style the top of the
05:59 - navigation bar
06:00 - overflow hidden which means anything
06:02 - that's out of the screen limits is just
06:04 - hidden
06:05 - background color light pink that's why
06:06 - we have this little
06:08 - nice light pink color yes
06:12 - awesome style the links so that's the
06:15 - text that we see here that's the link
06:16 - link link
06:17 - that's what this is talking about so
06:20 - float left display block float my group
06:23 - we did not get into this advanced group
06:25 - i don't know if we talked about this or
06:26 - not
06:27 - float is a little bit of an interesting
06:30 - one
06:32 - i don't know if i want to get into it
06:34 - now but
06:36 - it's it's something that you can use to
06:38 - like orientate
06:39 - the text um i perfect i prefer to just
06:43 - use like text align stuff but like
06:45 - you know float i guess is also an
06:47 - interesting one to throw in there
06:49 - i mean you oh you see you have both in
06:51 - this example
06:52 - um display block we have block of text
06:55 - color of the text this f2 f2 f2
07:00 - text align center in the center padding
07:02 - 14 pixels 16 pixels
07:04 - and text decoration none that's another
07:07 - class that we didn't get into my group
07:09 - text decoration
07:10 - um honestly why this is here and it says
07:13 - none
07:14 - is kind of just like a useless piece of
07:15 - coding to me um but
07:19 - i to each their own i guess i guess
07:20 - that's a fun example of that um category
07:23 - um but yeah change color on hover what
07:26 - is this this is a pseudo class
07:27 - remember we talked about this last week
07:29 - so when my mouse hovers
07:31 - over the bar the background color
07:33 - changes to
07:34 - this color this color code color
07:39 - yes pseudo class to the next
07:42 - thing content columns so
07:45 - the contents will be divided into
07:46 - columns that make it easier to view i.e
07:49 - see this example this
07:52 - yes this is our float class we'll get
07:55 - into that in two seconds but see this
07:56 - example was like oh like it goes this
07:58 - way it goes the other way
07:59 - columns perfect selector would be a
08:03 - column
08:04 - so you know this
08:07 - we'll talk about this in two seconds the
08:09 - selector for the left columns would be
08:11 - column
08:12 - dot side why is it dot column i don't
08:14 - care i don't code like this the dot
08:16 - before things some people do i don't
08:18 - know if christian does
08:20 - i don't add the period before things
08:22 - isn't that just
08:23 - like the css the dot com that side i
08:26 - don't
08:26 - i don't code with dots if you notice my
08:29 - examples like none of them have dots
08:31 - okay so dots are like specifically meant
08:33 - for like
08:35 - so like if you are going to be
08:36 - referencing a class
08:38 - it's good practice to put a dot i think
08:40 - if you don't put a dot
08:41 - you're actually doing the tag itself
08:44 - really
08:45 - i'm not i'm not yeah yeah i'm not 100 on
08:48 - that either
08:49 - because i mean i've never used dots um
08:54 - general rule of thumb is if you're going
08:55 - to use classes just put a dot
08:57 - in the css file um yeah
09:01 - well we hear we heard it here first
09:03 - folks use dots
09:04 - and i should start doing that bad coding
09:07 - on my part
09:08 - um selector for the middle column would
09:10 - be column.middle
09:12 - this is talking about how it's putting
09:13 - it in the center this is talking about
09:14 - how it's putting it on
09:15 - one side and the other remember um
09:18 - that's just kind of how we orientate
09:20 - things um the middle column will hold up
09:23 - most important information always
09:25 - remember that it's good ux ui to always
09:27 - have your most important information
09:28 - right in front of the person because
09:30 - that just makes it easier for everything
09:32 - and people like using your websites more
09:34 - the float property places the element on
09:36 - the left or right side of its container
09:40 - that's a lot of coding jumbo
09:43 - so basically whenever you have something
09:46 - it's
09:46 - put in a container because that's just
09:49 - easier for the computer to think about
09:50 - it
09:51 - and um basically by saying
09:55 - float left we want it to be
09:59 - on that side of its container
10:03 - so like a container is basically like
10:05 - the area
10:06 - of space that the computer will allow
10:08 - the thing to be
10:10 - and by saying float left you're saying i
10:12 - want to decrease that area even more
10:15 - by just saying i want it to be on that
10:17 - side of my container
10:19 - right so if i have like a box and
10:23 - i put a marble in the box the marble's
10:25 - probably going to go in the middle
10:27 - if i was able to code that marble and i
10:30 - said
10:30 - marble float left the marble would go to
10:33 - the left side of the container
10:35 - and if i said marble float right the
10:37 - marble would roll
10:38 - to the right side of the container but
10:40 - left and right column
10:42 - column dot side basically just referring
10:44 - to both of the side columns
10:46 - um in their class with 25 so like
10:50 - ends about there ends about there and
10:53 - the middle column is with 50
10:55 - so it takes up the rest of the width of
10:56 - the page here
11:00 - yes so the containers so like say for
11:02 - this one for example this side
11:05 - my container is probably going to be
11:06 - right about here that last 25
11:10 - and it's gonna go that way
11:14 - or no yes no it's going to float left
11:17 - because it wants to be on the
11:18 - left side yes okay
11:22 - footer footer often at the bottom of the
11:24 - page
11:25 - not important information you don't want
11:27 - to put like a big body paragraph down in
11:29 - your footer
11:30 - um copyrights contact information have
11:32 - you ever scrolled to like the really
11:34 - really bottom of a web page and it's
11:35 - like
11:37 - like this is an example everyone should
11:41 - know
11:42 - so if you have ever gotten an iphone an
11:44 - ipad an apple watch whatever
11:46 - you'll notice that the packaging in
11:48 - really really small gray font says
11:50 - made by apple in california that's an
11:53 - example of like
11:54 - the kind of text that you would find in
11:56 - a footer um
11:57 - nothing important um
12:01 - so let's ask the group and christian's
12:03 - gonna monitor the chat and tell me if we
12:05 - have the correct answer or not according
12:06 - to what you previously learned
12:08 - what will be the selector of a footer
12:13 - and christian you could just let me know
12:14 - if we have the correct answer in the
12:15 - chat
12:16 - sorry i'm just answering another
12:19 - question oh yeah no totally take your
12:20 - time
12:21 - so see i'm gonna draw my little lines
12:23 - here
12:24 - hopefully people can see those
12:28 - i'm sorry those are not pretty i'm not
12:30 - an artist
12:31 - um okay see this main content block
12:35 - this is fifty percent of my width
12:41 - this is 50 and these are 25 these each
12:44 - side are 25. sorry this is atrocious
12:50 - so these are 25 and apply that to both
12:53 - sides so
12:54 - ditto over here we get that
12:57 - from this block of code and this block
13:01 - of code
13:02 - where it tells us that our left and
13:04 - right columns are 25 percent width
13:06 - and our middle column is 50 width
13:10 - that's the container so that makes the
13:12 - container so see this side
13:13 - this i'm going to outline it this
13:16 - is my 25 with container
13:20 - for my side column this is my
13:23 - 25 width container for my other side
13:27 - column
13:28 - and i'm going to change my color this
13:31 - is my 50 width container
13:35 - for my my main content column
13:39 - so i think i think it would be really
13:41 - beneficial if they like see how to
13:43 - implement it on the html file
13:45 - so like how do you do how do you add the
13:48 - class column
13:49 - because i don't yeah let me see
13:52 - hold up christian do you want to try and
13:56 - take a stab at explaining it while i see
13:57 - if i can find something to show them
14:00 - yeah i'll explain it as best as i can so
14:04 - basically in your css file um
14:07 - your selectors you're selecting the
14:10 - column class right
14:11 - and so you're applying whatever you put
14:13 - between those brackets
14:14 - and you're applying that style to any
14:16 - element with the class
14:18 - of column so that's how
14:22 - you're able to like split different
14:23 - elements onto like different sides of
14:25 - the page
14:26 - so if i were to put dot column and then
14:29 - apply a style in there anything
14:32 - any any element with the attribute of
14:34 - class equals column
14:36 - will have that style applied to it does
14:38 - that make sense
14:41 - um i hope that was good i have a code
14:43 - example i just searched up really
14:45 - quickly
14:45 - on the internet but i have one
14:49 - that we can like look at um really
14:51 - really quickly
14:53 - so i just found this really quick
14:55 - because unfortunately i don't have
14:56 - anything
14:57 - that isn't like for school that i
14:59 - unfortunately can't
15:00 - show um but this is just like a really
15:05 - simple example so
15:09 - this one this one here is without a
15:11 - container and this one here is with a
15:13 - container
15:14 - and if we notice see this
15:17 - see how it's like all like
15:20 - up next to the end and it's like not
15:23 - pretty
15:23 - but this one that's with the container
15:26 - it is like
15:27 - sent it's like more centered and it's
15:29 - prettier
15:31 - um so basically oh my gosh where's the
15:35 - style sheet me get this style sheet open
15:42 - yeah it's exactly like a margin on a
15:44 - google doc that's why you add like
15:46 - padding
15:47 - um margins you want you want to add that
15:49 - stuff so that
15:50 - things are like kind of exactly where
15:52 - you want them to be yeah that css
15:54 - sheet is kind of a mess to like look
15:56 - through as an example
15:57 - i thought it would be cleaner it's not
15:59 - um but basically
16:01 - like this is what the difference of a
16:03 - container makes by putting things in a
16:04 - container you're able to like move them
16:06 - around and make things more
16:07 - aesthetically pleasing
16:10 - you don't need a container to make a
16:12 - website but if you want to make a pretty
16:13 - website containers help
16:16 - so if we go back to our css
16:19 - slides sorry i was looking ahead to see
16:22 - if i could find an example
16:24 - um
16:28 - you have my containers
16:32 - that are here that encase this
16:34 - information
16:37 - how would you you write all this code in
16:40 - css
16:41 - and then how would you apply it to a
16:44 - paragraph
16:46 - in the html code okay so
16:49 - let's go back to like um
16:54 - okay see this see this like dot talk nav
16:58 - and see all this code that's talking
16:59 - about how to style this top navigation
17:02 - bar
17:03 - well that's basically what you would do
17:07 - except you would just like have like
17:10 - paragraph
17:11 - like p so
17:14 - that's how like whatever element you're
17:16 - styling you just put its
17:17 - class or you put its tag or you put its
17:19 - element there
17:21 - and then whatever is in that is how you
17:22 - style it because you just code
17:24 - through the styling and then the css
17:25 - sheet links the html sheet through that
17:28 - linking process which we went over at
17:30 - the very beginning and
17:32 - that's how you link stuff but good
17:35 - question
17:36 - okay so this one is not the example from
17:40 - this one
17:41 - so this one has a background color of
17:44 - lavender
17:45 - text align is in the center which is
17:47 - like this so it's like in the center
17:49 - and the padding is ten percent within
17:51 - the container
17:53 - yes okay
17:57 - yeah if you're actually
18:00 - sorry if you're gonna apply the um
18:04 - style to the tag then you would just
18:06 - like put whatever the tag name and then
18:08 - apply the style
18:09 - so in this case since the table thtd and
18:13 - yeah all three of those are tags in html
18:16 - you don't have to put the period
18:17 - or you know that sharp sign in front of
18:20 - it you would just
18:22 - put the name of the tag and then it
18:23 - would apply the style to anything
18:26 - with those um tags does that make sense
18:29 - yeah christian's absolutely right that
18:31 - was a really good explanation thank you
18:32 - christian
18:33 - um so the borders this is where it gets
18:36 - a little fun
18:37 - um we're making tables now so it's a
18:40 - nice way to
18:41 - categorize and organize data
18:44 - so borders add borders with the border
18:45 - property border collapse property makes
18:48 - them
18:48 - all collapse into one border so that's
18:52 - like
18:52 - say if i had like this and i wanted a
18:56 - border around the whole table
18:58 - so see i have like this and you have
18:59 - this like line on the outside
19:02 - but say i wanted a border that went
19:04 - around the whole table i could use
19:05 - border collapse to collapse
19:07 - the box container border with the border
19:09 - that goes around the whole table just to
19:11 - make it
19:12 - pretty um alignment align
19:15 - text left text right text center with
19:16 - the text align so do i want
19:18 - this is text align center all of these
19:21 - are text align centers but you know
19:22 - it's like how you play around with it in
19:24 - a google doc spacing
19:26 - padding as property to white space um
19:28 - color background color
19:29 - so like what color do i want this this
19:31 - is pink what color do i want this purple
19:34 - um it's like changing colors it's the
19:36 - exact same way that you would change a
19:37 - color for a paragraph
19:39 - you know background color you know text
19:41 - color
19:42 - text-align you know it's all the
19:45 - principles that you've already learned
19:46 - but now we're doing it in a table
19:48 - it seems a little bit daunting but i
19:50 - promise you it's not
19:52 - um size width and height and properties
19:54 - modifies the size of the rows this is a
19:56 - little bit new because we're dealing
19:57 - with a table
19:59 - um we don't have size
20:02 - as an example here unfortunately
20:06 - but a lot of the times it will like
20:07 - default size which looks like what kind
20:09 - of happened here
20:11 - where it will like give it like a decent
20:12 - amount of stuff
20:14 - um you know to deal with
20:18 - however i want to talk about how the
20:21 - padding works
20:22 - a little bit because you see an
20:23 - interesting example of this here
20:26 - so for the table the padding is 10
20:29 - 10 pixels what does that mean
20:32 - so that means like around the text in
20:34 - the container there's a padding of 10
20:36 - pixels
20:37 - and that kind of like is an area where
20:40 - the
20:41 - wording isn't allowed to be anymore so
20:43 - it closed off more area
20:45 - but the padding is relative to the
20:48 - border
20:49 - does that make sense so like if i were
20:51 - to run a 10 pixel line
20:53 - right next to this one but it's 10
20:55 - pixels away
20:56 - and i would have run that all the way
20:58 - around
21:00 - all the way around that's that's my
21:02 - padding
21:04 - so flexbox this one's interesting
21:08 - flexbox is a layout module which uses
21:10 - flex containers to make flexible
21:12 - responsive layouts
21:14 - for your different devices and screen
21:16 - sizes
21:17 - a fun way that i like to think about it
21:19 - and it makes no sense to anyone but me
21:21 - but i'm like oh if tables
21:25 - are glass containers flex boxes are
21:27 - jello
21:28 - because i'm like oh like they like ship
21:30 - like they shape shift but that's like
21:31 - that's a really bad one i just say that
21:33 - because
21:33 - i think it's funny so the width the
21:36 - height and the order of items in the
21:37 - container can change
21:39 - to best fit a given amount of space you
21:41 - don't need to use float or positioning
21:42 - when using a flex box
21:45 - so um to make a container flex container
21:48 - to set it set its display property to
21:52 - flex
21:53 - so class flex container and then we have
21:58 - item abc
22:00 - ie this
22:04 - now we're gonna go that's our html yes
22:08 - our css flex container
22:11 - display flex so like it's it's as a flex
22:14 - box i wish this would
22:16 - this bar would go away i want it to move
22:19 - um
22:21 - there's a piece of code oh my gosh can
22:22 - we i'm just gonna not move my mouse
22:24 - see that height 150 pixels that's
22:26 - basically just like saying
22:27 - the height of the flexible container
22:31 - yeah so it's it's it's essentially just
22:34 - like a more
22:35 - customizable table like it's a table but
22:37 - we can do more
22:38 - fun things with it to make it work for
22:40 - our specific needs
22:43 - so if you have a whole bunch of data and
22:44 - you want categories and you want it to
22:46 - be all laid out perfectly row by row by
22:48 - row
22:49 - that's you're probably going to use a
22:50 - table but if you have
22:52 - a limited amount of space and you need
22:54 - to categor or you need to show like two
22:56 - or three pieces of information
22:58 - i would probably use a flexbox so
23:00 - flexbox container properties um
23:02 - direction so flex direction sorry
23:05 - sets the items to display in a row or a
23:07 - column justify content align items
23:10 - horizontally
23:12 - this is just for this example but you
23:14 - know flex start um
23:16 - left this is default flex end right and
23:19 - center
23:21 - justify content is another way to like
23:23 - align things um
23:25 - so space around display the items with
23:27 - equal spacing before after and in
23:29 - between
23:29 - so like we see here equal space in
23:32 - between them
23:33 - and i know that if like this went on you
23:35 - would probably have like an equal amount
23:36 - of space if you were to use
23:38 - um space around um this is probably an
23:41 - example of space between
23:42 - where we have the same amount of space
23:44 - in between each category
23:46 - align items vertically so flex start top
23:49 - flex and bottom and center and stretch
23:51 - fills the container default option and
23:54 - baseline aligns the cord
23:58 - aligns the items according to the text
24:00 - baseline
24:01 - talking is not my strong suit today i'm
24:04 - so sorry about that
24:05 - um so here let's go through the code
24:07 - line by line figure it out
24:08 - flux container the flux container
24:11 - display flex
24:12 - we know it's a flex container flex flow
24:15 - row so it's a row it's not a column it's
24:18 - a row
24:19 - justify content space around
24:22 - so we're supposed to have the equal
24:24 - amount of space
24:25 - on all the sides but i think that's just
24:28 - an issue of like the way the image was
24:29 - cropped
24:30 - but yeah so it's equal equal amounts of
24:33 - space all around
24:34 - each container items align center
24:37 - so they're going to be in the center of
24:39 - their boxes and height
24:41 - of the containers is 150 pixels
24:45 - yes i know it seems a little crazy and i
24:47 - know it's a little daunting
24:49 - um but these are a lot of properties
24:52 - we've already talked about
24:53 - it's just a little bit of a different
24:55 - wording for them
24:57 - um if you have questions about the flex
24:59 - containers
25:00 - and this flexbots stuff
25:03 - ask please ask i know it's hard
25:09 - but i'm gonna look in we're gonna give
25:11 - reactions yes no maybe how we're feeling
25:12 - about this
25:14 - um it takes a little while to like get
25:16 - comfortable with flex boxes
25:18 - like even i'm not all that comfortable
25:20 - with them
25:22 - definitely not as much as willa but um
25:24 - yeah so
25:25 - don't be too hard on yourself if you
25:27 - don't understand it
25:28 - because a lot of it's memorization or
25:31 - you know completely understanding it
25:33 - which might take a little while
25:35 - yeah like for people like christian
25:39 - and i who have been coding for like a
25:41 - decent amount of time and i know
25:42 - christian can testify to this
25:44 - um especially with java christian's
25:46 - really good at java
25:48 - or sorry javascript excuse me thank you
25:50 - um but
25:51 - like when you code for that long it kind
25:53 - of just like comes naturally like you
25:55 - kind of just like remember it
25:57 - um and i don't want people to get too
25:58 - hard on themselves about this because
26:00 - we're going to be talking about
26:00 - bootstrap next week
26:02 - which can like kind of help you do all
26:03 - this for you
26:05 - um not really but like kind of
26:08 - so a lot a lot of stuff a good portion
26:10 - of stuff
26:11 - i mean yeah a lot of stuff you'll still
26:13 - have to know but like it'll make your
26:15 - life a lot easier
26:16 - yeah but we're getting into that next
26:17 - week because we thought it would be most
26:18 - helpful
26:20 - for that segment of the course um but
26:23 - yeah so don't be too hard on yourself i
26:24 - know it's difficult
26:25 - but let's move on um animation's part
26:29 - one this is what we're getting into this
26:30 - is what we're talking about today
26:31 - because it's the newest concept so an
26:33 - animation lets an element gradually
26:35 - change from one style to another so
26:39 - i want my box to change colors from red
26:41 - to blue
26:42 - i want my triangle to change into a
26:45 - circle
26:46 - these things keyframes when you specify
26:48 - the css style
26:49 - inside the keyframes rule the animation
26:51 - will change from current style to next
26:53 - style
26:54 - yeah so it's like um
26:59 - oh you know what it's like it's like
27:01 - this is such an old reference but you
27:02 - know
27:03 - um those movies like those old movies
27:05 - and they used to shoot them on film
27:07 - and each like segment of film was like
27:09 - one like very small piece of it
27:12 - but like if you played them really fast
27:14 - it was a whole movie
27:16 - it's like going from like one box to the
27:19 - next
27:20 - in the film of your animation of your
27:22 - website and then
27:23 - it plays it all through so it's like a
27:25 - movie but the animation
27:27 - that's what we're gonna talk about each
27:28 - frame each frame combined
27:30 - makes moving yeah right yeah yeah
27:34 - so the animation name specify a name for
27:36 - the keyframes element
27:38 - um animation duration specify the time
27:40 - that the animation can complete one
27:41 - cycle
27:42 - that's in seconds so five seconds
27:45 - animation delay delay the animation to
27:47 - start so that's like
27:49 - after i press run program how long will
27:52 - it wait before it starts my animation
27:54 - so in this example it's three seconds so
27:56 - after i press run
27:57 - it will count one two three and then it
28:00 - will start my animation that was
28:02 - five seconds long and animation
28:03 - iteration count the number of times your
28:05 - animation should run
28:06 - so in this case it's three yeah
28:10 - so um this one
28:13 - we're going to go through this changes
28:14 - your background color from red to yellow
28:17 - that's my animation my animation is
28:19 - changing my background color from red to
28:21 - yellow
28:22 - and we always do the background color
28:26 - to be set is the starting color not the
28:28 - ending color the starting color
28:30 - and then division with 100 pixels height
28:32 - 100 pixels this is just saying like what
28:34 - the divider will look like
28:36 - um that's changing color and then
28:39 - animation
28:40 - name it can be whatever you want it can
28:42 - be
28:43 - my favorite dog it can be flexbox it can
28:46 - be well not flexbox that was just what
28:48 - came
28:48 - it can be like troll doll like i don't
28:51 - know you can name it whatever you want
28:53 - and animation duration four seconds so
28:55 - it will take four seconds
28:56 - for this divider that's 100 pixels by
28:58 - 100 pixels to change from red
29:00 - to yellow and that's what this code
29:02 - means
29:05 - yes questions maybe
29:10 - how do we like does that kind of make
29:12 - sense to people uh yes no maybe i'm
29:13 - looking
29:14 - i'm looking for reactions
29:24 - i see a one thumbs up i want to look for
29:26 - some more though
29:28 - um christian do we have some questions
29:30 - that need to be answered
29:31 - um well how do you make an animation go
29:35 - on indefinitely it was one of the
29:36 - questions
29:37 - we'll see that during the workshop but
29:38 - if you want to cover that now
29:40 - um can i show you guys it's in the it's
29:44 - in the
29:44 - it's in the i think we should just get
29:46 - to the workshop because we have like 12
29:47 - minutes
29:48 - so yeah that's generally yeah this is
29:50 - like the second last slide so don't
29:51 - worry guys
29:52 - i think yeah so this is the second last
29:54 - oh my gosh
29:56 - so this is the second last slide um
29:59 - animation's part two so direction
30:02 - left right front forward normal
30:05 - animation
30:06 - is default it will play forwards
30:07 - whatever your forward structure is
30:09 - reverse animation is played in reverse
30:10 - so backwards so if i said
30:12 - my animation is from left to right if i
30:14 - said reverse it would go from
30:15 - right to left alternate the animation is
30:18 - played first forwards then backwards so
30:19 - then it would go
30:20 - right left left right and alternate
30:23 - reverse the animation is played
30:24 - backwards thirst then forward so
30:26 - right left left right um
30:31 - oh my gosh google animation timing
30:34 - function
30:35 - the speed of an animation linear same
30:37 - speed
30:38 - start to end ease in slow start so
30:41 - that's like the fade in
30:43 - or a jump cut basically if you're
30:46 - talking about in movie terms so
30:48 - um does that kind of make sense i'm
30:51 - going to go to the example because their
30:52 - example today is relatively simple
30:54 - so this is my example today i made it
30:58 - um this is very simple
31:04 - who has a question about making it go
31:06 - indefinitely
31:08 - whoever had that question this is the
31:10 - line of code i want you to focus on
31:12 - animation iteration count this counts
31:14 - how many times our animation happens
31:17 - notice how it says infinite this in this
31:19 - animation will never stop
31:20 - it will keep going it will change colors
31:22 - it will go around in the circle
31:24 - forever and that's how you do it you
31:25 - just say infinite animation duration
31:28 - i wouldn't recommend sending this to
31:29 - infinite because you will never get
31:31 - your end result um so animation duration
31:34 - always have a time limit
31:36 - animation iteration count could be
31:38 - infinite
31:39 - so i'm going to drop this link in the
31:40 - chat um
31:43 - i'm going to drop this link in the chat
31:45 - and what are we gonna do we're gonna
31:46 - fork it
31:48 - yes we're gonna fork it that's the first
31:49 - thing we're gonna do we're gonna fork it
31:51 - and it's gonna be great and it's gonna
31:53 - be
31:54 - a great time so everyone i want you to
31:56 - go to the animation
31:58 - um and i want you to go and i want you
32:00 - to fork it for you advanced people
32:02 - we have a different example this is the
32:05 - example we have for the
32:06 - advanced class but um if you want
32:10 - this is this was done by lovely
32:12 - education director rachel um
32:14 - she did an amazing job this is like a
32:16 - fun little moving background
32:18 - interactable text interactable well
32:21 - animated image this is the example
32:25 - that's for the more advanced class um
32:28 - i don't have the code for that
32:31 - right now oh this is also our submission
32:33 - form for this week so i'm gonna drop
32:34 - that in the chat
32:35 - really quick um
32:43 - [Music]
32:46 - so that's our submission form that's a
32:47 - replica link um i'm going to go through
32:49 - the replica code
32:50 - line by line like we always do and then
32:53 - i'm going to give you guys some time
32:54 - because there are some challenges in
32:56 - there that we can go through together so
32:57 - i'm going to share my screen and we're
32:58 - going to go through it
32:59 - together awesome so
33:04 - um this is the replit so this is our
33:07 - very simple animation example which you
33:09 - all should have forked if you don't know
33:10 - how to fork it we're going to go
33:12 - click this little arrow and then we're
33:13 - going to fork it i want everyone to make
33:15 - sure that they do that because
33:16 - we should not be editing this replica we
33:19 - should be making our own copy
33:21 - okay so this is all of our code for
33:23 - today actually
33:24 - um as much as it's in the x.html file
33:26 - it's
33:27 - a lot of css so if you already
33:30 - look at this code and you're in the
33:31 - advanced group and you're like yeah i
33:33 - could do that
33:33 - i want you to look here and i want you
33:35 - to go to these challenges and i want you
33:36 - to do these then
33:40 - so those are our challenges for today
33:42 - but for beginners we're going to go
33:43 - through the code a little bit more
33:45 - and talk about it divider
33:48 - this is what's making our thing this is
33:50 - what's making the square the square is
33:52 - known as divider
33:53 - in html world so with 150 pixels height
33:57 - 150 pixels
33:58 - background color starts as red remember
34:00 - how i said our background color is
34:02 - always the starting color not the ending
34:03 - color not the color in between
34:05 - it's our starting color our starting
34:06 - color is red position
34:09 - relative what does that mean it's
34:11 - relative to the size of the screen
34:13 - animation name i called it square loop
34:16 - because it's a square going in a loop
34:18 - you can name it whatever you want
34:20 - animation duration five seconds what
34:21 - does that mean it's gonna take me five
34:22 - seconds to go from one
34:24 - two three four five seconds
34:28 - one two three
34:32 - four another five seconds animation
34:35 - iteration count
34:36 - infinite what does that mean it's gonna
34:37 - go on forever it's gonna keep doing this
34:39 - square loop circle until the end of time
34:44 - animation direction alternate just kind
34:46 - of everyone remember what that means
34:49 - yeah kind of maybe so this is the
34:52 - reverse
34:53 - right now that's happening up
34:56 - and left this is forward so
35:00 - this is the forward and by saying
35:02 - alternate
35:03 - we make it go backwards if we didn't say
35:06 - alternate it would just
35:08 - come back up to this and it would start
35:10 - the same direction it would go again it
35:12 - wouldn't reverse the circle it would
35:13 - only go in one direction
35:15 - this is our animation this
35:18 - just this i know it looks not that scary
35:22 - which is good
35:23 - so keyframe square loop keyframes our
35:25 - animation tag
35:26 - square loop the name of our animation
35:29 - zero percent when the animation is zero
35:30 - percent of the way through
35:32 - the background color is red and its
35:34 - position is left
35:35 - zero pixels and top zero pixels so it's
35:38 - at the very top
35:39 - left corner of our screen can we sir i'm
35:44 - sorry
35:44 - yeah no go for it can we do like circle
35:48 - loops or like oval loops or
35:49 - different kinds of loops because when i
35:52 - typed in different
35:54 - like i put circle loop and it doesn't
35:56 - move at all it just stays on
35:58 - red well
36:01 - here's the thing if you change square
36:03 - loop to circle loop that's not
36:04 - automatically going to make it a circle
36:06 - you need to change that here so let me
36:08 - go through this because i think that
36:09 - might help you
36:10 - so once you have to also make sure that
36:13 - if you change
36:13 - this like if you change this to circle
36:16 - loop you also need to change this to
36:17 - circle loop so that they're both talking
36:19 - about the same thing
36:20 - okay so let's go through here when it
36:22 - says left zero pixel top zero pixel this
36:25 - dictates its path of travel
36:26 - these like code lines this left top left
36:29 - top left top left top left top this
36:31 - dictates its path of travel
36:33 - so if you want to make it not go in this
36:35 - rectangle formation
36:36 - you have to play with these pixel
36:39 - arrangements
36:40 - to make it go in a circle to make it go
36:42 - in a triangle to make it go in a square
36:45 - right now it's traveling in a 200 pixel
36:47 - by 200 pixel square
36:49 - so left zero pixel zero pixel left 200
36:52 - pixel
36:53 - 0 pixel left 200 pixel top 200 pixel
36:58 - which is there
37:02 - and then left 0 pixel top 200 pixel
37:05 - and left 0 and top 0 which is our
37:07 - starting point so i'm gonna say it
37:09 - through
37:10 - zero zero two hundred zero two hundred
37:12 - two hundred
37:13 - zero two hundred zero zero
37:17 - zero two hundred two hundred two hundred
37:20 - two hundred zero
37:22 - it's a coordinate system if anyone knows
37:25 - x and y
37:25 - coordinates i made this container 200
37:29 - pixels by 200 pixels
37:30 - and i'm allowing it to move within the
37:33 - container
37:33 - that's 200 pixels by 200 pixels
37:36 - via the coordinate system that is the
37:39 - pixels
37:41 - this is its path of travel this
37:45 - tells me what color it is so notice how
37:47 - it changes color
37:48 - that's because when i say the animation
37:50 - is 50 done its background color is green
37:53 - and it's at this position
37:56 - so each one of these lines tells me how
37:58 - far along the animation is
38:00 - what color it is and
38:04 - where it is and that's the three
38:06 - components you need to make an animation
38:07 - how far along it is what color and
38:12 - where it is in the animation that's it
38:15 - that's all you need
38:16 - you need more stuff to do more complex
38:18 - animations so say if i wanted to make
38:20 - this move in a triangle i would probably
38:22 - need
38:22 - more understanding of like how it would
38:25 - go
38:26 - in a triangle but other than that it's a
38:29 - pretty
38:30 - you know like when you think about oh
38:32 - this is a box that changes colors that
38:34 - moves around my screen but this is
38:36 - five lines of code it's not you know
38:39 - it's
38:39 - one of the more interesting things
38:43 - that we've done our challenges for today
38:45 - is to change the square into an image
38:48 - add a moving background and add an
38:50 - interactable text with a pseudo class
38:51 - like we learned last week
38:53 - do i'm going to stop sharing my screen
38:57 - have a good one

Cleaned transcript:

today we're going to get into some css part 2. now my group last week we had css part 1 so we made an ugly website but today we are going to make a website that has some animation factors in it so get excited for that i'm going to share my screen with everyone so we can all see the slides and we're going to go through them together as always feel free to interrupt me if you have any questions or just drop them in the chat as they come to you so css part two let's get into it so importing uh copy paste a style sheet link into your head before all other style seats load us to css i know that we have does everyone see this the link rel style sheet href http stockpack bootstrap this is a little bit of an interesting thing we're going to get into bootstrap later that's going to come next week um it's an interesting little addon that we can have and um remember when we have um i know my group talked about it a little bit extensively i don't know exactly what christians group covered but hopefully you guys will be familiar you know the metadata stuff that we talked about at the beginning that's where you're going to find the importing of the css sheet it's kind of done automatically for you this bootstrap stuff we're going to talk about next week so um get excited for that because it comes more into play when we're doing more complex websites which we're going to be doing with java so comments um my group has seen these a little bit in my examples comments are used to explain about what you want to achieve with the code they don't actually interfere with the codes processes comments are placed inside the style element um and starts with a slash asterisk and ends with an asterisk slash this is our opening and closing tag let me get my pointer because i feel like that helps opening closing tag um everything is an opening closing tag if we remember and for here this is a comment talking about what this part of the code does um and this is a comment talking about what this part of the code does this should be a review because we talked about coleman's comments excuse me a little bit of a british accent there um we talked about comments previously so now we're going to talk about the layout of a website and this is kind of important um because it kind of lets us know how the computer is thinking about things visually so there are many layouts you can choose from this is the most common one so if you go into reply you open a web page and you don't do anything to select the layout this is what you're going to get you know this is like the standard you know except for the navigation menu i think that's a little bit more advanced because you're not putting in a navigation menu um explicitly but here's how it goes we have our header anything at the top of the page like a title like a big category makes sense main content is what i like to think about of is like the paragraph um so like this is where my image is going to be this is where my paragraph is going to be this is where the content that people are going to interact with is going to be whether they read it they write it they type it they look at it that's where it's going to be oh i'm so sorry let's go back your navigation menu is going to be like the thing um if we look at it in like websites say you want to um you go on any website and it has that like little nav bar at the top menu and it might say like oh great example you go to the girls code website right and it says about and it says our courses and it says join that's a navigation bar it has a bunch of different options all lined up in this one bar at the top that's a navigation menu we're going to learn how to make those today but that's not what the example is focused on because i thought animation was a little bit more important especially if we're gonna get into bootstrap which kind of makes navigation menus for you so footer anything at the bottom of the web page any you know miscellaneous text and these are content windows on either side of my main content um i would recommend putting things here because they kind of get clustered off to the side but you can put like an image here you can put more text here it's up to you headers um headed to the top of each website we saw that little block at the very top headers should be clear and precise like a title this one in our example header padding 70 pixels text align in the center background lavender color color of the font white color anyone who was in my class last week i remember i told you think about your color combinations this is an example of a bad color combination it's white on light purple it's really hard to see not the bex ux not the best ui so we're going to try and avoid color combinations like this when we're making websites but for now this is your example navigation menu consists of a list of things that can help people navigate through the website so remember how i talked over the girls code it website you know the about us the join the our lessons those are the examples so the navigation bar is that um and then it has text with different links remember in my group how we kind of did text with different hyperlinks in it like a little bit maybe there was some in the examples um so if you look back you'll see them but that's basically what this is the hover when you point on your mouse cursor um that's the hover function that's an example of a fun little pseudo class remember my group we talked about pseudo classes a lot there was one in the example um remember when we had our example when i hover my mouse on this it changes so that's basically this when i hover my mouse on this it changes color that's a pseudo class we know what that is right awesome so let's go to the top and just run through the code a little bit go through piece by piece so we can figure it out style the top of the navigation bar overflow hidden which means anything that's out of the screen limits is just hidden background color light pink that's why we have this little nice light pink color yes awesome style the links so that's the text that we see here that's the link link link that's what this is talking about so float left display block float my group we did not get into this advanced group i don't know if we talked about this or not float is a little bit of an interesting one i don't know if i want to get into it now but it's it's something that you can use to like orientate the text um i perfect i prefer to just use like text align stuff but like you know float i guess is also an interesting one to throw in there i mean you oh you see you have both in this example um display block we have block of text color of the text this f2 f2 f2 text align center in the center padding 14 pixels 16 pixels and text decoration none that's another class that we didn't get into my group text decoration um honestly why this is here and it says none is kind of just like a useless piece of coding to me um but i to each their own i guess i guess that's a fun example of that um category um but yeah change color on hover what is this this is a pseudo class remember we talked about this last week so when my mouse hovers over the bar the background color changes to this color this color code color yes pseudo class to the next thing content columns so the contents will be divided into columns that make it easier to view i.e see this example this yes this is our float class we'll get into that in two seconds but see this example was like oh like it goes this way it goes the other way columns perfect selector would be a column so you know this we'll talk about this in two seconds the selector for the left columns would be column dot side why is it dot column i don't care i don't code like this the dot before things some people do i don't know if christian does i don't add the period before things isn't that just like the css the dot com that side i don't i don't code with dots if you notice my examples like none of them have dots okay so dots are like specifically meant for like so like if you are going to be referencing a class it's good practice to put a dot i think if you don't put a dot you're actually doing the tag itself really i'm not i'm not yeah yeah i'm not 100 on that either because i mean i've never used dots um general rule of thumb is if you're going to use classes just put a dot in the css file um yeah well we hear we heard it here first folks use dots and i should start doing that bad coding on my part um selector for the middle column would be column.middle this is talking about how it's putting it in the center this is talking about how it's putting it on one side and the other remember um that's just kind of how we orientate things um the middle column will hold up most important information always remember that it's good ux ui to always have your most important information right in front of the person because that just makes it easier for everything and people like using your websites more the float property places the element on the left or right side of its container that's a lot of coding jumbo so basically whenever you have something it's put in a container because that's just easier for the computer to think about it and um basically by saying float left we want it to be on that side of its container so like a container is basically like the area of space that the computer will allow the thing to be and by saying float left you're saying i want to decrease that area even more by just saying i want it to be on that side of my container right so if i have like a box and i put a marble in the box the marble's probably going to go in the middle if i was able to code that marble and i said marble float left the marble would go to the left side of the container and if i said marble float right the marble would roll to the right side of the container but left and right column column dot side basically just referring to both of the side columns um in their class with 25 so like ends about there ends about there and the middle column is with 50 so it takes up the rest of the width of the page here yes so the containers so like say for this one for example this side my container is probably going to be right about here that last 25 and it's gonna go that way or no yes no it's going to float left because it wants to be on the left side yes okay footer footer often at the bottom of the page not important information you don't want to put like a big body paragraph down in your footer um copyrights contact information have you ever scrolled to like the really really bottom of a web page and it's like like this is an example everyone should know so if you have ever gotten an iphone an ipad an apple watch whatever you'll notice that the packaging in really really small gray font says made by apple in california that's an example of like the kind of text that you would find in a footer um nothing important um so let's ask the group and christian's gonna monitor the chat and tell me if we have the correct answer or not according to what you previously learned what will be the selector of a footer and christian you could just let me know if we have the correct answer in the chat sorry i'm just answering another question oh yeah no totally take your time so see i'm gonna draw my little lines here hopefully people can see those i'm sorry those are not pretty i'm not an artist um okay see this main content block this is fifty percent of my width this is 50 and these are 25 these each side are 25. sorry this is atrocious so these are 25 and apply that to both sides so ditto over here we get that from this block of code and this block of code where it tells us that our left and right columns are 25 percent width and our middle column is 50 width that's the container so that makes the container so see this side this i'm going to outline it this is my 25 with container for my side column this is my 25 width container for my other side column and i'm going to change my color this is my 50 width container for my my main content column so i think i think it would be really beneficial if they like see how to implement it on the html file so like how do you do how do you add the class column because i don't yeah let me see hold up christian do you want to try and take a stab at explaining it while i see if i can find something to show them yeah i'll explain it as best as i can so basically in your css file um your selectors you're selecting the column class right and so you're applying whatever you put between those brackets and you're applying that style to any element with the class of column so that's how you're able to like split different elements onto like different sides of the page so if i were to put dot column and then apply a style in there anything any any element with the attribute of class equals column will have that style applied to it does that make sense um i hope that was good i have a code example i just searched up really quickly on the internet but i have one that we can like look at um really really quickly so i just found this really quick because unfortunately i don't have anything that isn't like for school that i unfortunately can't show um but this is just like a really simple example so this one this one here is without a container and this one here is with a container and if we notice see this see how it's like all like up next to the end and it's like not pretty but this one that's with the container it is like sent it's like more centered and it's prettier um so basically oh my gosh where's the style sheet me get this style sheet open yeah it's exactly like a margin on a google doc that's why you add like padding um margins you want you want to add that stuff so that things are like kind of exactly where you want them to be yeah that css sheet is kind of a mess to like look through as an example i thought it would be cleaner it's not um but basically like this is what the difference of a container makes by putting things in a container you're able to like move them around and make things more aesthetically pleasing you don't need a container to make a website but if you want to make a pretty website containers help so if we go back to our css slides sorry i was looking ahead to see if i could find an example um you have my containers that are here that encase this information how would you you write all this code in css and then how would you apply it to a paragraph in the html code okay so let's go back to like um okay see this see this like dot talk nav and see all this code that's talking about how to style this top navigation bar well that's basically what you would do except you would just like have like paragraph like p so that's how like whatever element you're styling you just put its class or you put its tag or you put its element there and then whatever is in that is how you style it because you just code through the styling and then the css sheet links the html sheet through that linking process which we went over at the very beginning and that's how you link stuff but good question okay so this one is not the example from this one so this one has a background color of lavender text align is in the center which is like this so it's like in the center and the padding is ten percent within the container yes okay yeah if you're actually sorry if you're gonna apply the um style to the tag then you would just like put whatever the tag name and then apply the style so in this case since the table thtd and yeah all three of those are tags in html you don't have to put the period or you know that sharp sign in front of it you would just put the name of the tag and then it would apply the style to anything with those um tags does that make sense yeah christian's absolutely right that was a really good explanation thank you christian um so the borders this is where it gets a little fun um we're making tables now so it's a nice way to categorize and organize data so borders add borders with the border property border collapse property makes them all collapse into one border so that's like say if i had like this and i wanted a border around the whole table so see i have like this and you have this like line on the outside but say i wanted a border that went around the whole table i could use border collapse to collapse the box container border with the border that goes around the whole table just to make it pretty um alignment align text left text right text center with the text align so do i want this is text align center all of these are text align centers but you know it's like how you play around with it in a google doc spacing padding as property to white space um color background color so like what color do i want this this is pink what color do i want this purple um it's like changing colors it's the exact same way that you would change a color for a paragraph you know background color you know text color textalign you know it's all the principles that you've already learned but now we're doing it in a table it seems a little bit daunting but i promise you it's not um size width and height and properties modifies the size of the rows this is a little bit new because we're dealing with a table um we don't have size as an example here unfortunately but a lot of the times it will like default size which looks like what kind of happened here where it will like give it like a decent amount of stuff um you know to deal with however i want to talk about how the padding works a little bit because you see an interesting example of this here so for the table the padding is 10 10 pixels what does that mean so that means like around the text in the container there's a padding of 10 pixels and that kind of like is an area where the wording isn't allowed to be anymore so it closed off more area but the padding is relative to the border does that make sense so like if i were to run a 10 pixel line right next to this one but it's 10 pixels away and i would have run that all the way around all the way around that's that's my padding so flexbox this one's interesting flexbox is a layout module which uses flex containers to make flexible responsive layouts for your different devices and screen sizes a fun way that i like to think about it and it makes no sense to anyone but me but i'm like oh if tables are glass containers flex boxes are jello because i'm like oh like they like ship like they shape shift but that's like that's a really bad one i just say that because i think it's funny so the width the height and the order of items in the container can change to best fit a given amount of space you don't need to use float or positioning when using a flex box so um to make a container flex container to set it set its display property to flex so class flex container and then we have item abc ie this now we're gonna go that's our html yes our css flex container display flex so like it's it's as a flex box i wish this would this bar would go away i want it to move um there's a piece of code oh my gosh can we i'm just gonna not move my mouse see that height 150 pixels that's basically just like saying the height of the flexible container yeah so it's it's it's essentially just like a more customizable table like it's a table but we can do more fun things with it to make it work for our specific needs so if you have a whole bunch of data and you want categories and you want it to be all laid out perfectly row by row by row that's you're probably going to use a table but if you have a limited amount of space and you need to categor or you need to show like two or three pieces of information i would probably use a flexbox so flexbox container properties um direction so flex direction sorry sets the items to display in a row or a column justify content align items horizontally this is just for this example but you know flex start um left this is default flex end right and center justify content is another way to like align things um so space around display the items with equal spacing before after and in between so like we see here equal space in between them and i know that if like this went on you would probably have like an equal amount of space if you were to use um space around um this is probably an example of space between where we have the same amount of space in between each category align items vertically so flex start top flex and bottom and center and stretch fills the container default option and baseline aligns the cord aligns the items according to the text baseline talking is not my strong suit today i'm so sorry about that um so here let's go through the code line by line figure it out flux container the flux container display flex we know it's a flex container flex flow row so it's a row it's not a column it's a row justify content space around so we're supposed to have the equal amount of space on all the sides but i think that's just an issue of like the way the image was cropped but yeah so it's equal equal amounts of space all around each container items align center so they're going to be in the center of their boxes and height of the containers is 150 pixels yes i know it seems a little crazy and i know it's a little daunting um but these are a lot of properties we've already talked about it's just a little bit of a different wording for them um if you have questions about the flex containers and this flexbots stuff ask please ask i know it's hard but i'm gonna look in we're gonna give reactions yes no maybe how we're feeling about this um it takes a little while to like get comfortable with flex boxes like even i'm not all that comfortable with them definitely not as much as willa but um yeah so don't be too hard on yourself if you don't understand it because a lot of it's memorization or you know completely understanding it which might take a little while yeah like for people like christian and i who have been coding for like a decent amount of time and i know christian can testify to this um especially with java christian's really good at java or sorry javascript excuse me thank you um but like when you code for that long it kind of just like comes naturally like you kind of just like remember it um and i don't want people to get too hard on themselves about this because we're going to be talking about bootstrap next week which can like kind of help you do all this for you um not really but like kind of so a lot a lot of stuff a good portion of stuff i mean yeah a lot of stuff you'll still have to know but like it'll make your life a lot easier yeah but we're getting into that next week because we thought it would be most helpful for that segment of the course um but yeah so don't be too hard on yourself i know it's difficult but let's move on um animation's part one this is what we're getting into this is what we're talking about today because it's the newest concept so an animation lets an element gradually change from one style to another so i want my box to change colors from red to blue i want my triangle to change into a circle these things keyframes when you specify the css style inside the keyframes rule the animation will change from current style to next style yeah so it's like um oh you know what it's like it's like this is such an old reference but you know um those movies like those old movies and they used to shoot them on film and each like segment of film was like one like very small piece of it but like if you played them really fast it was a whole movie it's like going from like one box to the next in the film of your animation of your website and then it plays it all through so it's like a movie but the animation that's what we're gonna talk about each frame each frame combined makes moving yeah right yeah yeah so the animation name specify a name for the keyframes element um animation duration specify the time that the animation can complete one cycle that's in seconds so five seconds animation delay delay the animation to start so that's like after i press run program how long will it wait before it starts my animation so in this example it's three seconds so after i press run it will count one two three and then it will start my animation that was five seconds long and animation iteration count the number of times your animation should run so in this case it's three yeah so um this one we're going to go through this changes your background color from red to yellow that's my animation my animation is changing my background color from red to yellow and we always do the background color to be set is the starting color not the ending color the starting color and then division with 100 pixels height 100 pixels this is just saying like what the divider will look like um that's changing color and then animation name it can be whatever you want it can be my favorite dog it can be flexbox it can be well not flexbox that was just what came it can be like troll doll like i don't know you can name it whatever you want and animation duration four seconds so it will take four seconds for this divider that's 100 pixels by 100 pixels to change from red to yellow and that's what this code means yes questions maybe how do we like does that kind of make sense to people uh yes no maybe i'm looking i'm looking for reactions i see a one thumbs up i want to look for some more though um christian do we have some questions that need to be answered um well how do you make an animation go on indefinitely it was one of the questions we'll see that during the workshop but if you want to cover that now um can i show you guys it's in the it's in the it's in the i think we should just get to the workshop because we have like 12 minutes so yeah that's generally yeah this is like the second last slide so don't worry guys i think yeah so this is the second last oh my gosh so this is the second last slide um animation's part two so direction left right front forward normal animation is default it will play forwards whatever your forward structure is reverse animation is played in reverse so backwards so if i said my animation is from left to right if i said reverse it would go from right to left alternate the animation is played first forwards then backwards so then it would go right left left right and alternate reverse the animation is played backwards thirst then forward so right left left right um oh my gosh google animation timing function the speed of an animation linear same speed start to end ease in slow start so that's like the fade in or a jump cut basically if you're talking about in movie terms so um does that kind of make sense i'm going to go to the example because their example today is relatively simple so this is my example today i made it um this is very simple who has a question about making it go indefinitely whoever had that question this is the line of code i want you to focus on animation iteration count this counts how many times our animation happens notice how it says infinite this in this animation will never stop it will keep going it will change colors it will go around in the circle forever and that's how you do it you just say infinite animation duration i wouldn't recommend sending this to infinite because you will never get your end result um so animation duration always have a time limit animation iteration count could be infinite so i'm going to drop this link in the chat um i'm going to drop this link in the chat and what are we gonna do we're gonna fork it yes we're gonna fork it that's the first thing we're gonna do we're gonna fork it and it's gonna be great and it's gonna be a great time so everyone i want you to go to the animation um and i want you to go and i want you to fork it for you advanced people we have a different example this is the example we have for the advanced class but um if you want this is this was done by lovely education director rachel um she did an amazing job this is like a fun little moving background interactable text interactable well animated image this is the example that's for the more advanced class um i don't have the code for that right now oh this is also our submission form for this week so i'm gonna drop that in the chat really quick um so that's our submission form that's a replica link um i'm going to go through the replica code line by line like we always do and then i'm going to give you guys some time because there are some challenges in there that we can go through together so i'm going to share my screen and we're going to go through it together awesome so um this is the replit so this is our very simple animation example which you all should have forked if you don't know how to fork it we're going to go click this little arrow and then we're going to fork it i want everyone to make sure that they do that because we should not be editing this replica we should be making our own copy okay so this is all of our code for today actually um as much as it's in the x.html file it's a lot of css so if you already look at this code and you're in the advanced group and you're like yeah i could do that i want you to look here and i want you to go to these challenges and i want you to do these then so those are our challenges for today but for beginners we're going to go through the code a little bit more and talk about it divider this is what's making our thing this is what's making the square the square is known as divider in html world so with 150 pixels height 150 pixels background color starts as red remember how i said our background color is always the starting color not the ending color not the color in between it's our starting color our starting color is red position relative what does that mean it's relative to the size of the screen animation name i called it square loop because it's a square going in a loop you can name it whatever you want animation duration five seconds what does that mean it's gonna take me five seconds to go from one two three four five seconds one two three four another five seconds animation iteration count infinite what does that mean it's gonna go on forever it's gonna keep doing this square loop circle until the end of time animation direction alternate just kind of everyone remember what that means yeah kind of maybe so this is the reverse right now that's happening up and left this is forward so this is the forward and by saying alternate we make it go backwards if we didn't say alternate it would just come back up to this and it would start the same direction it would go again it wouldn't reverse the circle it would only go in one direction this is our animation this just this i know it looks not that scary which is good so keyframe square loop keyframes our animation tag square loop the name of our animation zero percent when the animation is zero percent of the way through the background color is red and its position is left zero pixels and top zero pixels so it's at the very top left corner of our screen can we sir i'm sorry yeah no go for it can we do like circle loops or like oval loops or different kinds of loops because when i typed in different like i put circle loop and it doesn't move at all it just stays on red well here's the thing if you change square loop to circle loop that's not automatically going to make it a circle you need to change that here so let me go through this because i think that might help you so once you have to also make sure that if you change this like if you change this to circle loop you also need to change this to circle loop so that they're both talking about the same thing okay so let's go through here when it says left zero pixel top zero pixel this dictates its path of travel these like code lines this left top left top left top left top left top this dictates its path of travel so if you want to make it not go in this rectangle formation you have to play with these pixel arrangements to make it go in a circle to make it go in a triangle to make it go in a square right now it's traveling in a 200 pixel by 200 pixel square so left zero pixel zero pixel left 200 pixel 0 pixel left 200 pixel top 200 pixel which is there and then left 0 pixel top 200 pixel and left 0 and top 0 which is our starting point so i'm gonna say it through zero zero two hundred zero two hundred two hundred zero two hundred zero zero zero two hundred two hundred two hundred two hundred zero it's a coordinate system if anyone knows x and y coordinates i made this container 200 pixels by 200 pixels and i'm allowing it to move within the container that's 200 pixels by 200 pixels via the coordinate system that is the pixels this is its path of travel this tells me what color it is so notice how it changes color that's because when i say the animation is 50 done its background color is green and it's at this position so each one of these lines tells me how far along the animation is what color it is and where it is and that's the three components you need to make an animation how far along it is what color and where it is in the animation that's it that's all you need you need more stuff to do more complex animations so say if i wanted to make this move in a triangle i would probably need more understanding of like how it would go in a triangle but other than that it's a pretty you know like when you think about oh this is a box that changes colors that moves around my screen but this is five lines of code it's not you know it's one of the more interesting things that we've done our challenges for today is to change the square into an image add a moving background and add an interactable text with a pseudo class like we learned last week do i'm going to stop sharing my screen have a good one
