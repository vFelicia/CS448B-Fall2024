With timestamps:

00:00 - html is basically everything that is
00:02 - going to be in a web page
00:04 - so if we look at the inspect element and
00:07 - if we go into
00:08 - inspecting a web page if we click that
00:10 - inspect element it's going to be all of
00:12 - the code that we see
00:13 - in a web page so basically there's a
00:16 - couple elements of html that we're going
00:18 - to go through
00:19 - so an element is part of one html
00:22 - document and the document is basically
00:24 - that code that we see so it could be a
00:26 - piece of text
00:27 - like a paragraph or a header it could be
00:29 - an image a video
00:31 - or a link that takes us to a different
00:33 - website to declare where an element
00:35 - starts and ends you must enclose them in
00:37 - these tags and each
00:39 - feature is unique to each kind of tag oh
00:42 - i'm trying to
00:43 - make it okay i'm just gonna put that
00:45 - there for now um
00:46 - if there's a lot of questions and i
00:49 - can't see them please just feel free to
00:50 - yell at me
00:51 - um so most elements need an opening tag
00:55 - and a closing tag and i'm gonna change
00:56 - that most
00:57 - to all so everything we're going to be
00:59 - using today requires an opening and a
01:01 - closing element and that tells the
01:02 - computer
01:03 - that what's inside that these closing
01:05 - and opening salmon
01:07 - co opening and closing elements is our
01:10 - content
01:10 - so it's like a sandwich you have the two
01:12 - pieces of bread and whatever is in the
01:14 - middle is your contents of your sandwich
01:16 - um that's basically the same thing one
01:18 - of the examples that we're gonna go over
01:19 - today is a paragraph
01:21 - very very simple paragraph p
01:24 - p that denotes your paragraph one of the
01:26 - big things you want to note with html
01:28 - though is
01:29 - that you have an opening tag as shown
01:31 - here and a closing tag
01:33 - your opening tag is always going to be
01:37 - carrot bracket element that you're
01:39 - talking about so like a letter
01:40 - a series of characters closing carrot
01:44 - all of the things that are in that
01:47 - and then you're gonna have your carrot
01:50 - your closing bracket
01:52 - think of this as like the door that
01:53 - closes your element tag
01:55 - you always need this to close the
01:57 - element tag and you only need in the
01:58 - closing tag
01:59 - and then that same set of characters and
02:01 - then your closing carrot tag
02:03 - does that make sense to everyone perfect
02:06 - um i'm gonna move on here um okay so an
02:10 - attribute um an attribute gives
02:12 - additional information about an element
02:14 - just like an
02:14 - attribute of an object in the real world
02:18 - gives us more information about that
02:19 - object in the real world so
02:21 - attributes add style links image sizes
02:24 - classes
02:24 - ids etc this is mostly going to be
02:28 - when you think of style stuff most of
02:31 - this
02:32 - is going to be under css which is
02:34 - cascading style sheets which is going to
02:36 - be
02:36 - all of your pretty things about a web
02:38 - page
02:39 - but we can use it in html for things
02:43 - like images
02:44 - which is an example here any html
02:47 - element can have attributes
02:48 - attributes are always declared in the
02:50 - opening tag and they're usually in the
02:51 - format
02:52 - attribute equals a given value
02:55 - so in this one i should have
02:59 - thought about this before i said all
03:01 - they are right it is most
03:03 - um so this is your example your example
03:06 - of your image tag and we're going to go
03:07 - through this because this is one of the
03:08 - most unique
03:09 - tags we see in html so first we're going
03:12 - to have our opening caret
03:14 - same thing we always have our tag which
03:16 - is our series of characters
03:18 - or characters just like the p from the
03:19 - paragraph tag this is img
03:22 - so image so when you think about it src
03:26 - i know that can sound like really weird
03:28 - but if you think about it as source
03:30 - we have image the source of the image
03:33 - the source of the image equals this link
03:37 - and this is how you insert every single
03:39 - image into html files because
03:41 - what you do is you say okay carrot
03:45 - i have an image that image's source
03:48 - is this link and it's just a
03:51 - url or a jpeg link or
03:55 - other image file link name insert here
03:58 - and it's just within those two brackets
04:01 - so
04:01 - that's a this is my source this is how
04:03 - to call it and then you just close it
04:05 - off
04:05 - with your carrot bracket and your your
04:08 - slash and that's
04:09 - basically it it's just as simple as that
04:10 - you can really just take a link off of
04:12 - google images put it in between those
04:15 - two
04:16 - brackets and call it your image and that
04:19 - will insert it into your html file
04:21 - um so the structure of html documents
04:24 - we're not going to get into this too
04:25 - much right now
04:26 - but document root your html so your html
04:31 - file
04:32 - and then head title um
04:35 - href stuff which is you'll see that when
04:37 - we get into the replica file but it's
04:39 - basically just like your standard stuff
04:41 - body elements um and then
04:44 - text header all that stuff so structure
04:47 - of an html example you're going to see
04:49 - this in the example we're going to use
04:50 - today
04:51 - doctype.html what does this mean this
04:54 - means
04:55 - that our file is an html file it's not a
04:58 - java file it's not a python file it's
05:00 - not a javascript file
05:01 - it's an html file so doctype is html
05:06 - one this line is talking to html
05:10 - so first of all we're going to note that
05:12 - we have html opening tags and html
05:14 - closing tags
05:16 - just like we have everything else
05:17 - there's an opening and a closing this
05:19 - denotes that anything inside of those
05:21 - two tags
05:21 - is html code it will be read by the
05:24 - compiler in the html code
05:26 - it will be read by the browser's html
05:28 - code so these are really really
05:30 - important to have
05:32 - second head the head tag includes
05:36 - metadata about the webpage or other
05:39 - introductory information
05:41 - um you're going to notice that like
05:44 - i don't know the head is kind of a weird
05:47 - one
05:48 - we're not going to touch on it too much
05:49 - for now because you're not going to
05:50 - really need it
05:51 - but know that it doesn't really give you
05:53 - content so the the head
05:54 - is not really showing up on the screen
05:56 - as anything it's not like a header
05:59 - so this h1 is a header
06:02 - and this is the header that we see and
06:05 - this prints on the screen
06:06 - welcome as a header the one tricky thing
06:11 - about headers is that the number that is
06:14 - here
06:15 - in the opening and closing bracket for
06:18 - headers
06:19 - matters so i had a really good example
06:21 - of this
06:22 - um but basically play around with it
06:26 - when you're
06:26 - making your websites today the headers
06:30 - matter because they change what the
06:31 - header looks like
06:33 - so you can always change it back in um
06:37 - css but headers
06:40 - come with their own css like just
06:43 - inherently
06:44 - it's not like that bad like it's like
06:45 - header one is bigger than header two
06:48 - and it goes all the way up to header six
06:50 - so for easy css work if you think your
06:53 - header's too big
06:54 - just decrease the number and if you
06:56 - think your head is too small increase
06:57 - the number
06:58 - um if you're having a little bit of
06:59 - trouble with that call me over when
07:01 - we're doing reply and i'll be happy to
07:02 - help you
07:03 - um body so this is the body of your
07:06 - webpage it comes below your headers and
07:08 - it comes above your footers there's no
07:10 - example of the footer here
07:11 - but your footers anything that's at the
07:13 - bottom of your web page anything that's
07:15 - in the body is going to be like the
07:16 - middle
07:17 - the meat of your web page and example
07:21 - paragraph this is text now i know we
07:24 - talked about how the headers
07:25 - how the number here matters in
07:27 - paragraphs we don't have that in html
07:30 - all paragraphs regardless of the number
07:32 - here look
07:33 - exactly the same you could have
07:35 - paragraph 155
07:37 - and it would look exactly the same as
07:38 - paragraph one
07:40 - so that's just something to keep in mind
07:41 - headers the number here matters
07:43 - and yes
07:46 - hyperlink uh what would be the
07:48 - difference between like an h6 versus a
07:50 - paragraph would they be the same size
07:52 - um they're a little different the header
07:55 - six
07:56 - is a little bit more bold um
08:00 - i i mean if you're really interested
08:02 - just play around with it honestly the
08:04 - whole point of web pages is just to play
08:06 - around with it
08:07 - but yeah so definitely play around with
08:10 - it but
08:11 - i mean if you don't like it you can
08:13 - always just take it out but yeah it's a
08:15 - little bit more bold
08:16 - um so linking css and javascript css and
08:19 - javascript can be used html in two
08:21 - different ways
08:22 - internally in the same file that's why
08:24 - we have our html opening and closing
08:26 - tags
08:26 - because we can use html and css in the
08:29 - same file so we want to differentiate
08:31 - between our html and css
08:33 - or externally in different files which
08:35 - is going to be the example we're using
08:36 - today
08:37 - so you'll notice when i go through the
08:39 - replica example that the html file
08:41 - will have a link to both the javascript
08:43 - file don't worry about that today
08:46 - and the css file probably don't worry
08:48 - about that today
08:49 - and you'll see how we're able to link
08:50 - the files externally
08:52 - to the html file so that all of it is
08:54 - referring to the same web page
08:57 - externally is recommended that's what
08:58 - we're using today
09:00 - more organized and different html files
09:02 - can use the same css and javascript
09:04 - files
09:05 - so how do we link the files great
09:08 - question
09:10 - perfect so linking this is exactly what
09:12 - you're going to see
09:13 - in our replied example today um
09:17 - so this is the code right here it's kind
09:20 - of in a little pink box
09:22 - um so it says script script file
09:25 - source equals script.javascript
09:29 - now what's i remember we had a question
09:32 - about what's between the brackets does
09:33 - this are the quotation marks excuse me
09:36 - the quotation marks does that matter for
09:38 - this
09:39 - it does because what is in between these
09:42 - quotation marks to link your files
09:45 - must be the exact same as your file name
09:48 - otherwise it won't link because it will
09:52 - be trying to look for a file that
09:53 - doesn't exist
09:54 - so that's why we need to have the exact
09:56 - same
09:57 - file an easy trick to do that is
10:01 - i always like to use my
10:04 - html file so if i have index.html
10:08 - i'm going to have index.javascript and
10:11 - index.css
10:12 - so that i know all of these files are
10:14 - linked to that specific html file
10:16 - so i don't get confused but since we're
10:18 - only working with one html file today
10:20 - it's okay just be careful with it but i
10:22 - think the default is
10:24 - script.javascript and style.css
10:27 - we have a question what does meta stand
10:30 - for
10:32 - oh i think you can still see meta on
10:33 - this
10:36 - no oh yes mata so
10:39 - meta is we're gonna use it in this
10:41 - example
10:42 - so meta is an inherent um
10:46 - attribute not an attribute but it's like
10:47 - an inherent um
10:50 - line and basically it's bringing in
10:56 - like an attribute of the site so
11:01 - basically it's like it's it's kind of
11:04 - like the
11:04 - overlying css but i would rather call it
11:08 - principles than styling so if we see
11:11 - here
11:12 - meta is telling us that our content
11:15 - has to be the width of the device
11:18 - it can't be larger and it can't be
11:20 - shorter because that just
11:22 - makes for easy viewing experience this
11:25 - meta
11:26 - is telling us that our character set of
11:28 - the site which
11:29 - links into css is utf-8 which is a given
11:34 - character set that's probably
11:36 - in our css file so meta is like our
11:39 - overarching rules that our site has to
11:42 - go by
11:43 - yeah so like meta is going to be in
11:46 - basically everything
11:47 - don't worry about it for today um here
11:50 - let's show the replica example because i
11:52 - feel like that will help us more than
11:54 - looking at this
11:56 - so this is your replica file that we're
11:58 - all going to use today you're going to
11:59 - fork it
12:00 - but it's going to be yours um i made a
12:03 - starter site for you all
12:05 - um it's about harry potter but you know
12:07 - it works
12:08 - so this meta is linking our character
12:12 - set
12:12 - um i don't really have any css in here i
12:14 - just put some sample
12:16 - but the cf the meta is only going to be
12:18 - found
12:19 - in the like html file
12:23 - but whatever it's linking could be in
12:25 - like other files
12:27 - so i mean this is like a standard
12:29 - character set
12:30 - utf-8 it's like a standard like web
12:33 - browser friendly character set
12:35 - character set if you've noticed not
12:38 - every single web file out there
12:40 - is one font right i have one font here
12:44 - i have a different font in my
12:47 - google slides i have a different font
12:49 - for this run button
12:51 - not every single web thing is the same
12:54 - font
12:55 - a character set is what kind of allows
12:58 - us
12:58 - to dictate not only the characters we're
13:01 - using
13:02 - but like also that font so um oh sorry
13:07 - that's completely wrong that's font
13:09 - family character set is
13:11 - the characters we're using so are we
13:13 - using
13:14 - cyrillic letters are we using the
13:16 - spanish alphabet are we using
13:18 - the greek alphabet are we using english
13:21 - like the anglican alphabet like what are
13:22 - we using
13:23 - that's our character set yes so it's the
13:26 - letters like the specific alphabet we're
13:28 - using
13:28 - i'm so sorry that was really confusing i
13:31 - didn't explain that well
13:33 - um but yes so that's our character set
13:36 - and then our meta is basically just like
13:38 - bringing that in telling the computer
13:40 - this is the character set we're
13:41 - specifically using recognize these
13:42 - characters
13:44 - i see chat so i think this is just an
13:46 - example but i think
13:48 - i mean with device width like if you're
13:51 - talking
13:51 - generally like height doesn't really
13:54 - matter right
13:55 - because if we're scrolling through a web
13:56 - page our dictated height
13:59 - is like our web page is going to be
14:00 - longer than our computer right but we
14:02 - can scroll down
14:04 - right so our height isn't necessarily a
14:06 - factor
14:07 - but our width matters because if our
14:09 - width is
14:10 - 500 feet long and my laptop screen is 15
14:13 - inches
14:14 - it's not going to work so by making
14:16 - width equals device width we can have
14:18 - this
14:18 - rectangle that is the standard width so
14:22 - our
14:22 - content is able to show up on screen but
14:25 - the height doesn't matter because we can
14:27 - just scroll through and adjust height as
14:29 - we see fit
14:30 - okay yeah does that make sense yeah then
14:34 - why isn't content in a separate meta
14:38 - um honestly
14:42 - it's for simplicity's sake because this
14:44 - meta is talking about the viewing
14:47 - so like name viewport like this is like
14:50 - the viewing
14:51 - meta and then the content of that meta
14:54 - is how we're able to view the given web
14:57 - page
14:58 - we always say ahrefs just because it's
15:00 - easier but totally go for href i'm just
15:03 - trying to find
15:03 - where the given ah attribute href
15:07 - um ahref is like a weird one i'm trying
15:10 - to see
15:11 - i might have a better example of it in
15:13 - my
15:14 - um replit to show you
15:17 - here this is an href
15:22 - so this is inserting a link
15:26 - which is like the challenge for today um
15:29 - having so hrefs are always enclosed in
15:32 - the a tag so this is my href
15:34 - i have an a tag with
15:39 - this but it closes over here so
15:42 - href so a open we leave the tag open
15:46 - because ahrefs are within
15:48 - one opening tag um they're kind of weird
15:50 - like that they're an exception of html
15:52 - but it's how we insert links into other
15:54 - web pages so
15:55 - it's how we are able to have multiple
15:57 - web pages on the same web page so
16:00 - say you're on amazon and you want to
16:02 - click the checkout button
16:04 - the checkout button is an href button
16:07 - because the checkout window is not the
16:09 - same window that you just bought
16:11 - slippers in right so ahref is how we are
16:15 - able to link sites together
16:16 - so href this is my link it's like
16:20 - the example like we linked harry potter
16:22 - because it's a harry potter example site
16:25 - so this is our href link to the site and
16:28 - then
16:28 - below that we have what it would say if
16:31 - somehow the link didn't show
16:33 - because you always want to have an
16:34 - alternate something goes wrong
16:36 - so below that it says summary and that's
16:38 - what would show
16:40 - oh no that's not the alternate sorry
16:42 - summary is what shows
16:44 - as the link so i'm going to refresh this
16:45 - and you're going to see the webpage
16:48 - if it i have to run it perfect
16:51 - so this is my href right here href it
16:54 - says summary
16:56 - but it is my href because if i click on
16:58 - it
17:00 - it's going to open wikipedia because
17:02 - that's my href and it linked the sites
17:04 - together
17:05 - so href is our linking bridge between
17:08 - one site and another
17:10 - so that's our tag to do that well not
17:13 - our tag but it's our operator to do that
17:15 - our tag is the a
17:17 - i was gonna put these in but i think we
17:20 - can go through it
17:21 - body tags what goes in a body tag can
17:23 - someone tell me
17:27 - i'll look in chat too to see if anyone
17:30 - had said it in the chat
17:37 - body text yeah so body is like the meat
17:40 - of our website
17:41 - um we can have paragraphs we can have
17:42 - headers but that's what goes inside the
17:45 - body tags
17:46 - paragraph tags what goes in there a
17:49 - paragraph
17:50 - um and what attributes do you need to
17:53 - use to link css to html
17:56 - href so what i said before href is our
17:58 - bridge
18:00 - from one to another here we're using
18:03 - href to link our css sheet to our html
18:08 - seat we can also use it to link
18:09 - our um one web page to another
18:13 - but they can do a lot of different
18:14 - things but think of them as bridges
18:16 - linking one thing to another
18:18 - and a rel is
18:21 - like the name it's like
18:24 - i it's hard to explain but you don't
18:27 - need to worry about it right now
18:29 - the most thing you're gonna have to
18:30 - worry about is the href because that's
18:32 - inserting a link in there
18:34 - it's like rel is like how it's like
18:36 - referred to
18:37 - basically so we're gonna make a webpage
18:41 - today is everyone excited about it
18:43 - um honestly it's a really fun workshop
18:46 - i'm gonna
18:47 - because if you copy and paste it you're
18:48 - editing the communal one
18:50 - can everyone see my screen again we're
18:51 - gonna go through forking it
18:55 - okay great we're gonna see this little
18:58 - arrow
18:59 - this little arrow right here can
19:01 - everyone see that we're gonna click it
19:05 - and we're gonna hit this button it says
19:08 - fork
19:11 - yes everyone sees that perfect yes can
19:14 - everyone see that
19:16 - awesome once you click that button
19:20 - see it opens a new one see how it
19:23 - changed to part 1-3
19:25 - this is now my own reply no one can see
19:28 - it except for me
19:29 - this is the original once you forked it
19:31 - i want you to close the original
19:33 - because that means that you have all the
19:36 - codes you need right here
19:39 - and you're not editing anyone else's by
19:40 - accident
19:42 - forking it means that you're basically
19:44 - taking the one
19:46 - that was given you're making an
19:48 - identical copy
19:49 - and then that identical copy is unique
19:51 - to you so
19:52 - the file that i gave you is access to
19:55 - everyone it's accessed publicly
19:56 - so that means even after this workshop
19:58 - you want to go back to it you're more
19:59 - than welcome to do so
20:01 - by forking it you're creating your own
20:03 - unique copy of that file
20:04 - that you can edit without changing the
20:07 - original file
20:08 - so that the original file maintains its
20:11 - like coding integrity
20:12 - because we don't want to have that file
20:14 - be all messed up and then people are
20:16 - looking at it for reference and then
20:18 - h tags are all wrong and then paragraphs
20:21 - are a little bit weird so we want to
20:22 - make sure that that
20:24 - is maintaining the same can you fork
20:27 - any code um in reply specifically or
20:31 - like just in general
20:35 - in general so a lot of the code builders
20:39 - are so i mean i've used at least for
20:41 - html and css i've used mozilla thimble
20:44 - i've used glitch i've used droplet every
20:46 - single one of those services
20:48 - are going to allow you to fork it um
20:50 - they might not call in it forking it
20:51 - they might call it making a copy
20:54 - um they might call it making a reference
20:56 - but every single one of those services
20:58 - have allowed you to do that
20:59 - now in terms of like i have a question
21:02 - here that's about those
21:04 - gray tags um those are not tags
21:07 - let's talk about them um i'm gonna share
21:10 - my screen again
21:11 - um thumbs up we can see my screen
21:16 - awesome so i think what that comment is
21:18 - referring to
21:19 - is these um these little gray
21:22 - text blurbs um these are not tags these
21:26 - are comments
21:27 - so comments are really really useful
21:28 - when we're coding because it allows us
21:30 - to
21:31 - understand our code just in like plain
21:33 - simple english
21:34 - so this comment is saying import the web
21:36 - pages style sheet
21:38 - because that's what this line of code
21:40 - does
21:41 - i see a chat okay
21:44 - um yeah so that's what this line of code
21:47 - does
21:48 - so these comments how you make a comment
21:50 - is you do carrot
21:51 - exclamation point dash dash
21:54 - i mean the dash dash isn't necessary
21:56 - that's just because we wanted to have
21:57 - that centered
21:58 - but it's carrot exclamation point
22:01 - closed carrot and anything within the
22:03 - carrots is considered your comment
22:04 - it doesn't affect how the code runs and
22:06 - it's only visible to you the person
22:08 - who's coding
22:09 - and it basically just tells you whatever
22:12 - you want it to tell you
22:13 - so i can edit my comment to say fluffy
22:15 - bunnies are amazing but that doesn't
22:17 - really give me a whole lot of
22:18 - information about my code
22:19 - so coders often use comments um
22:22 - to just tell us what is happening with
22:24 - the given segment of code
22:26 - um so you can use them as often or as
22:29 - little as you want you could have no
22:30 - comments in your code and it would run
22:32 - completely the same as if you had 500
22:34 - comments
22:35 - so comments are just really there for
22:36 - the coder to understand what's going on
22:38 - or it's for if the coder wants to share
22:40 - their code with people
22:41 - we can put comments in to let the other
22:43 - people know what's going on with the
22:45 - code
22:46 - now while i have yes i see another chat
22:49 - what's going on
22:50 - how can i center my heading that's a
22:53 - great question
22:54 - um i'm going to give people a little bit
22:56 - of time
22:58 - centering your heading is something that
22:59 - happens in css so we're not going to
23:02 - really touch on that today because we
23:03 - didn't do any css coding
23:04 - but if you go into style.css which you
23:07 - also have access to because you forked
23:09 - the file
23:10 - body h1 image with
23:14 - font style color background color these
23:16 - are very very basic
23:18 - so play around with them um
23:22 - but if you go i'm gonna give you a hint
23:24 - and if you still can't figure it out
23:26 - come back to me after i've helped um
23:28 - her find the replit file but
23:31 - i'm gonna give you a hint that says you
23:34 - have to put something in here
23:36 - that tells you about the margins on
23:38 - either side
23:40 - of the header so that's all i'm going to
23:42 - say for now
23:43 - i'm going to stop sharing my screen and
23:45 - i want you guys to go
23:47 - into the file and i want you to take
23:49 - everything that's like black
23:50 - text so you'll see like black text it
23:52 - says harry potter
23:53 - talks about all about harry potter i
23:55 - want you to change all of that
23:57 - i want you to make it a web page about
23:59 - something that interests you
24:00 - it could be your favorite food your dog
24:03 - your favorite class at school
24:05 - um it could be about anything and i want
24:08 - you to make a web page
24:09 - that tells me about that thing so
24:12 - so this is the website right here this
24:14 - is the link
24:15 - basically if you want to change that
24:17 - link i want you to copy and paste
24:18 - whatever website link you want into that
24:21 - href i'm going to change it because i
24:22 - think i'm going to do it on camera so
24:23 - dogs
24:24 - dogs are great love dogs um
24:27 - first link that comes up dogs wikipedia
24:30 - so i want to change that harry potter
24:32 - link to the link about dogs because i'm
24:34 - sick of harry potter i want dogs
24:36 - um oh my gosh i like can't do this
24:39 - because okay there we go
24:41 - so i don't want harry potter anymore i'm
24:42 - gonna take that out
24:44 - i'm gonna make sure that i have my two
24:46 - quotation marks still there
24:48 - and i want to center my cursor in the
24:50 - middle of those two
24:51 - quotation marks then i'm going to ctrl v
24:54 - paste my new link in there and then i'm
24:56 - going to go to the summary
24:58 - um that's what the word says in order to
25:00 - clink on the link
25:01 - and i'm gonna make it so it says like
25:04 - link
25:05 - about dogs so
25:09 - that's what changes it um i saw that
25:11 - there was a chat
25:12 - so
25:15 - how do we change images great question
25:18 - i'm going to do that now
25:19 - to show everyone so if you want to know
25:20 - how to change an image pop back into the
25:22 - zoom meeting we're going to do that
25:23 - really quick
25:24 - [Music]
25:25 - so um we're going to use our example of
25:28 - dogs again hold up let me
25:29 - refresh the page the replit page so you
25:31 - guys can understand what i just did for
25:33 - emmanuella who asked the question about
25:35 - inserting the link yes
25:39 - do website need to cite the source of
25:41 - images that's a really good question
25:43 - for this no because you know like
25:47 - if you're just using it for fun like no
25:49 - that's fine
25:50 - um oh always make sure if you want to
25:53 - see
25:54 - your web page you have to click run
25:57 - and then do that so
26:00 - emmanuella i don't know if you're still
26:02 - here but basically our link
26:04 - was this and i changed it so this is
26:06 - what it says
26:07 - but this is the link it goes to so
26:09 - that's how you change a link
26:11 - um okay perfect we can
26:14 - that's how you would change a link so i
26:16 - hope that kind of made sense
26:18 - oh shoot wrong thing sorry my bad we're
26:20 - gonna share the screen again
26:22 - perfect okay now next question
26:26 - changing images awesome let's do that
26:27 - now so we're gonna go back to our use of
26:30 - dogs
26:31 - um we're gonna go to images little i'm
26:34 - trying to find one
26:35 - that has like
26:39 - not a whole lot of um not a whole
26:43 - because a lot of these
26:44 - perfect this one so i'm gonna go here
26:47 - i'm gonna find an image i want on
26:49 - google i'm gonna copy so i'm going to
26:52 - right click and i'm going to play
26:53 - copy image address okay we're going to
26:56 - copy image address
26:57 - click then i see chats i'm going to get
27:00 - those in two seconds
27:02 - if we see image source equals same thing
27:06 - as the web page we're going to go
27:07 - everything in between those two
27:09 - quotation marks i want you to delete it
27:11 - delete it and then we're going to paste
27:14 - our new image link
27:15 - which is really long because it's an
27:17 - image source link
27:18 - why is it so long didn't realize it was
27:20 - that long okay we're going to control z
27:22 - but basically you want to paste your
27:25 - image source link
27:27 - um okay let's try this one
27:32 - i'm trying to find one that has like a
27:33 - short one that we can
27:35 - um use but it's like not really working
27:39 - all that well because a lot of these
27:42 - have just like really long image links
27:43 - for no reason
27:44 - anyway sorry about that so we're going
27:47 - to paste our new image link in there
27:49 - it's going to be long it's going to be
27:50 - gross looking but that's usually how
27:51 - image links are
27:53 - then this is our alt text our alt text
27:55 - is what shows up if an image doesn't
27:57 - render
27:58 - so we're going to change that to like a
27:59 - picture of a dog
28:02 - because that's what this image is a
28:04 - picture of a dog
28:05 - then you're going to see right now in my
28:08 - webpage it was a picture of the harry
28:09 - potter cast because that's what my
28:10 - original image link was
28:12 - if i refresh it or i have to run it
28:16 - it's a picture of a dog now because we
28:18 - changed our image link
28:20 - to the link that was like the image
28:23 - source
28:23 - link or not the image source link the
28:25 - image link itself
28:27 - so yeah so this is our google submission
28:29 - form if you want to submit your website
28:31 - that's really fine
28:32 - you do not have to do it now um
28:36 - oh my gosh i'm so sorry thank you
28:39 - everyone for pointing that out to me
28:46 - so that's our submission form you do not
28:48 - have to do it right now
28:49 - um totally take some time you know play
28:52 - around with your stuff
28:53 - have fun with it um but yeah
28:57 - take some time but that is our
28:58 - submission form if you guys want to
28:59 - submit it
29:00 - um and yeah if you want to exit out you
29:03 - have something to go do you want to eat
29:04 - dinner you want to get a snack totally
29:06 - fine
29:06 - um i'll be here for a little bit more
29:08 - time answer you guys questions
29:09 - help out but i'm going to stop recording
29:11 - right now because it is the end of our
29:13 - time
29:13 - so yeah

Cleaned transcript:

html is basically everything that is going to be in a web page so if we look at the inspect element and if we go into inspecting a web page if we click that inspect element it's going to be all of the code that we see in a web page so basically there's a couple elements of html that we're going to go through so an element is part of one html document and the document is basically that code that we see so it could be a piece of text like a paragraph or a header it could be an image a video or a link that takes us to a different website to declare where an element starts and ends you must enclose them in these tags and each feature is unique to each kind of tag oh i'm trying to make it okay i'm just gonna put that there for now um if there's a lot of questions and i can't see them please just feel free to yell at me um so most elements need an opening tag and a closing tag and i'm gonna change that most to all so everything we're going to be using today requires an opening and a closing element and that tells the computer that what's inside that these closing and opening salmon co opening and closing elements is our content so it's like a sandwich you have the two pieces of bread and whatever is in the middle is your contents of your sandwich um that's basically the same thing one of the examples that we're gonna go over today is a paragraph very very simple paragraph p p that denotes your paragraph one of the big things you want to note with html though is that you have an opening tag as shown here and a closing tag your opening tag is always going to be carrot bracket element that you're talking about so like a letter a series of characters closing carrot all of the things that are in that and then you're gonna have your carrot your closing bracket think of this as like the door that closes your element tag you always need this to close the element tag and you only need in the closing tag and then that same set of characters and then your closing carrot tag does that make sense to everyone perfect um i'm gonna move on here um okay so an attribute um an attribute gives additional information about an element just like an attribute of an object in the real world gives us more information about that object in the real world so attributes add style links image sizes classes ids etc this is mostly going to be when you think of style stuff most of this is going to be under css which is cascading style sheets which is going to be all of your pretty things about a web page but we can use it in html for things like images which is an example here any html element can have attributes attributes are always declared in the opening tag and they're usually in the format attribute equals a given value so in this one i should have thought about this before i said all they are right it is most um so this is your example your example of your image tag and we're going to go through this because this is one of the most unique tags we see in html so first we're going to have our opening caret same thing we always have our tag which is our series of characters or characters just like the p from the paragraph tag this is img so image so when you think about it src i know that can sound like really weird but if you think about it as source we have image the source of the image the source of the image equals this link and this is how you insert every single image into html files because what you do is you say okay carrot i have an image that image's source is this link and it's just a url or a jpeg link or other image file link name insert here and it's just within those two brackets so that's a this is my source this is how to call it and then you just close it off with your carrot bracket and your your slash and that's basically it it's just as simple as that you can really just take a link off of google images put it in between those two brackets and call it your image and that will insert it into your html file um so the structure of html documents we're not going to get into this too much right now but document root your html so your html file and then head title um href stuff which is you'll see that when we get into the replica file but it's basically just like your standard stuff body elements um and then text header all that stuff so structure of an html example you're going to see this in the example we're going to use today doctype.html what does this mean this means that our file is an html file it's not a java file it's not a python file it's not a javascript file it's an html file so doctype is html one this line is talking to html so first of all we're going to note that we have html opening tags and html closing tags just like we have everything else there's an opening and a closing this denotes that anything inside of those two tags is html code it will be read by the compiler in the html code it will be read by the browser's html code so these are really really important to have second head the head tag includes metadata about the webpage or other introductory information um you're going to notice that like i don't know the head is kind of a weird one we're not going to touch on it too much for now because you're not going to really need it but know that it doesn't really give you content so the the head is not really showing up on the screen as anything it's not like a header so this h1 is a header and this is the header that we see and this prints on the screen welcome as a header the one tricky thing about headers is that the number that is here in the opening and closing bracket for headers matters so i had a really good example of this um but basically play around with it when you're making your websites today the headers matter because they change what the header looks like so you can always change it back in um css but headers come with their own css like just inherently it's not like that bad like it's like header one is bigger than header two and it goes all the way up to header six so for easy css work if you think your header's too big just decrease the number and if you think your head is too small increase the number um if you're having a little bit of trouble with that call me over when we're doing reply and i'll be happy to help you um body so this is the body of your webpage it comes below your headers and it comes above your footers there's no example of the footer here but your footers anything that's at the bottom of your web page anything that's in the body is going to be like the middle the meat of your web page and example paragraph this is text now i know we talked about how the headers how the number here matters in paragraphs we don't have that in html all paragraphs regardless of the number here look exactly the same you could have paragraph 155 and it would look exactly the same as paragraph one so that's just something to keep in mind headers the number here matters and yes hyperlink uh what would be the difference between like an h6 versus a paragraph would they be the same size um they're a little different the header six is a little bit more bold um i i mean if you're really interested just play around with it honestly the whole point of web pages is just to play around with it but yeah so definitely play around with it but i mean if you don't like it you can always just take it out but yeah it's a little bit more bold um so linking css and javascript css and javascript can be used html in two different ways internally in the same file that's why we have our html opening and closing tags because we can use html and css in the same file so we want to differentiate between our html and css or externally in different files which is going to be the example we're using today so you'll notice when i go through the replica example that the html file will have a link to both the javascript file don't worry about that today and the css file probably don't worry about that today and you'll see how we're able to link the files externally to the html file so that all of it is referring to the same web page externally is recommended that's what we're using today more organized and different html files can use the same css and javascript files so how do we link the files great question perfect so linking this is exactly what you're going to see in our replied example today um so this is the code right here it's kind of in a little pink box um so it says script script file source equals script.javascript now what's i remember we had a question about what's between the brackets does this are the quotation marks excuse me the quotation marks does that matter for this it does because what is in between these quotation marks to link your files must be the exact same as your file name otherwise it won't link because it will be trying to look for a file that doesn't exist so that's why we need to have the exact same file an easy trick to do that is i always like to use my html file so if i have index.html i'm going to have index.javascript and index.css so that i know all of these files are linked to that specific html file so i don't get confused but since we're only working with one html file today it's okay just be careful with it but i think the default is script.javascript and style.css we have a question what does meta stand for oh i think you can still see meta on this no oh yes mata so meta is we're gonna use it in this example so meta is an inherent um attribute not an attribute but it's like an inherent um line and basically it's bringing in like an attribute of the site so basically it's like it's it's kind of like the overlying css but i would rather call it principles than styling so if we see here meta is telling us that our content has to be the width of the device it can't be larger and it can't be shorter because that just makes for easy viewing experience this meta is telling us that our character set of the site which links into css is utf8 which is a given character set that's probably in our css file so meta is like our overarching rules that our site has to go by yeah so like meta is going to be in basically everything don't worry about it for today um here let's show the replica example because i feel like that will help us more than looking at this so this is your replica file that we're all going to use today you're going to fork it but it's going to be yours um i made a starter site for you all um it's about harry potter but you know it works so this meta is linking our character set um i don't really have any css in here i just put some sample but the cf the meta is only going to be found in the like html file but whatever it's linking could be in like other files so i mean this is like a standard character set utf8 it's like a standard like web browser friendly character set character set if you've noticed not every single web file out there is one font right i have one font here i have a different font in my google slides i have a different font for this run button not every single web thing is the same font a character set is what kind of allows us to dictate not only the characters we're using but like also that font so um oh sorry that's completely wrong that's font family character set is the characters we're using so are we using cyrillic letters are we using the spanish alphabet are we using the greek alphabet are we using english like the anglican alphabet like what are we using that's our character set yes so it's the letters like the specific alphabet we're using i'm so sorry that was really confusing i didn't explain that well um but yes so that's our character set and then our meta is basically just like bringing that in telling the computer this is the character set we're specifically using recognize these characters i see chat so i think this is just an example but i think i mean with device width like if you're talking generally like height doesn't really matter right because if we're scrolling through a web page our dictated height is like our web page is going to be longer than our computer right but we can scroll down right so our height isn't necessarily a factor but our width matters because if our width is 500 feet long and my laptop screen is 15 inches it's not going to work so by making width equals device width we can have this rectangle that is the standard width so our content is able to show up on screen but the height doesn't matter because we can just scroll through and adjust height as we see fit okay yeah does that make sense yeah then why isn't content in a separate meta um honestly it's for simplicity's sake because this meta is talking about the viewing so like name viewport like this is like the viewing meta and then the content of that meta is how we're able to view the given web page we always say ahrefs just because it's easier but totally go for href i'm just trying to find where the given ah attribute href um ahref is like a weird one i'm trying to see i might have a better example of it in my um replit to show you here this is an href so this is inserting a link which is like the challenge for today um having so hrefs are always enclosed in the a tag so this is my href i have an a tag with this but it closes over here so href so a open we leave the tag open because ahrefs are within one opening tag um they're kind of weird like that they're an exception of html but it's how we insert links into other web pages so it's how we are able to have multiple web pages on the same web page so say you're on amazon and you want to click the checkout button the checkout button is an href button because the checkout window is not the same window that you just bought slippers in right so ahref is how we are able to link sites together so href this is my link it's like the example like we linked harry potter because it's a harry potter example site so this is our href link to the site and then below that we have what it would say if somehow the link didn't show because you always want to have an alternate something goes wrong so below that it says summary and that's what would show oh no that's not the alternate sorry summary is what shows as the link so i'm going to refresh this and you're going to see the webpage if it i have to run it perfect so this is my href right here href it says summary but it is my href because if i click on it it's going to open wikipedia because that's my href and it linked the sites together so href is our linking bridge between one site and another so that's our tag to do that well not our tag but it's our operator to do that our tag is the a i was gonna put these in but i think we can go through it body tags what goes in a body tag can someone tell me i'll look in chat too to see if anyone had said it in the chat body text yeah so body is like the meat of our website um we can have paragraphs we can have headers but that's what goes inside the body tags paragraph tags what goes in there a paragraph um and what attributes do you need to use to link css to html href so what i said before href is our bridge from one to another here we're using href to link our css sheet to our html seat we can also use it to link our um one web page to another but they can do a lot of different things but think of them as bridges linking one thing to another and a rel is like the name it's like i it's hard to explain but you don't need to worry about it right now the most thing you're gonna have to worry about is the href because that's inserting a link in there it's like rel is like how it's like referred to basically so we're gonna make a webpage today is everyone excited about it um honestly it's a really fun workshop i'm gonna because if you copy and paste it you're editing the communal one can everyone see my screen again we're gonna go through forking it okay great we're gonna see this little arrow this little arrow right here can everyone see that we're gonna click it and we're gonna hit this button it says fork yes everyone sees that perfect yes can everyone see that awesome once you click that button see it opens a new one see how it changed to part 13 this is now my own reply no one can see it except for me this is the original once you forked it i want you to close the original because that means that you have all the codes you need right here and you're not editing anyone else's by accident forking it means that you're basically taking the one that was given you're making an identical copy and then that identical copy is unique to you so the file that i gave you is access to everyone it's accessed publicly so that means even after this workshop you want to go back to it you're more than welcome to do so by forking it you're creating your own unique copy of that file that you can edit without changing the original file so that the original file maintains its like coding integrity because we don't want to have that file be all messed up and then people are looking at it for reference and then h tags are all wrong and then paragraphs are a little bit weird so we want to make sure that that is maintaining the same can you fork any code um in reply specifically or like just in general in general so a lot of the code builders are so i mean i've used at least for html and css i've used mozilla thimble i've used glitch i've used droplet every single one of those services are going to allow you to fork it um they might not call in it forking it they might call it making a copy um they might call it making a reference but every single one of those services have allowed you to do that now in terms of like i have a question here that's about those gray tags um those are not tags let's talk about them um i'm gonna share my screen again um thumbs up we can see my screen awesome so i think what that comment is referring to is these um these little gray text blurbs um these are not tags these are comments so comments are really really useful when we're coding because it allows us to understand our code just in like plain simple english so this comment is saying import the web pages style sheet because that's what this line of code does i see a chat okay um yeah so that's what this line of code does so these comments how you make a comment is you do carrot exclamation point dash dash i mean the dash dash isn't necessary that's just because we wanted to have that centered but it's carrot exclamation point closed carrot and anything within the carrots is considered your comment it doesn't affect how the code runs and it's only visible to you the person who's coding and it basically just tells you whatever you want it to tell you so i can edit my comment to say fluffy bunnies are amazing but that doesn't really give me a whole lot of information about my code so coders often use comments um to just tell us what is happening with the given segment of code um so you can use them as often or as little as you want you could have no comments in your code and it would run completely the same as if you had 500 comments so comments are just really there for the coder to understand what's going on or it's for if the coder wants to share their code with people we can put comments in to let the other people know what's going on with the code now while i have yes i see another chat what's going on how can i center my heading that's a great question um i'm going to give people a little bit of time centering your heading is something that happens in css so we're not going to really touch on that today because we didn't do any css coding but if you go into style.css which you also have access to because you forked the file body h1 image with font style color background color these are very very basic so play around with them um but if you go i'm gonna give you a hint and if you still can't figure it out come back to me after i've helped um her find the replit file but i'm gonna give you a hint that says you have to put something in here that tells you about the margins on either side of the header so that's all i'm going to say for now i'm going to stop sharing my screen and i want you guys to go into the file and i want you to take everything that's like black text so you'll see like black text it says harry potter talks about all about harry potter i want you to change all of that i want you to make it a web page about something that interests you it could be your favorite food your dog your favorite class at school um it could be about anything and i want you to make a web page that tells me about that thing so so this is the website right here this is the link basically if you want to change that link i want you to copy and paste whatever website link you want into that href i'm going to change it because i think i'm going to do it on camera so dogs dogs are great love dogs um first link that comes up dogs wikipedia so i want to change that harry potter link to the link about dogs because i'm sick of harry potter i want dogs um oh my gosh i like can't do this because okay there we go so i don't want harry potter anymore i'm gonna take that out i'm gonna make sure that i have my two quotation marks still there and i want to center my cursor in the middle of those two quotation marks then i'm going to ctrl v paste my new link in there and then i'm going to go to the summary um that's what the word says in order to clink on the link and i'm gonna make it so it says like link about dogs so that's what changes it um i saw that there was a chat so how do we change images great question i'm going to do that now to show everyone so if you want to know how to change an image pop back into the zoom meeting we're going to do that really quick so um we're going to use our example of dogs again hold up let me refresh the page the replit page so you guys can understand what i just did for emmanuella who asked the question about inserting the link yes do website need to cite the source of images that's a really good question for this no because you know like if you're just using it for fun like no that's fine um oh always make sure if you want to see your web page you have to click run and then do that so emmanuella i don't know if you're still here but basically our link was this and i changed it so this is what it says but this is the link it goes to so that's how you change a link um okay perfect we can that's how you would change a link so i hope that kind of made sense oh shoot wrong thing sorry my bad we're gonna share the screen again perfect okay now next question changing images awesome let's do that now so we're gonna go back to our use of dogs um we're gonna go to images little i'm trying to find one that has like not a whole lot of um not a whole because a lot of these perfect this one so i'm gonna go here i'm gonna find an image i want on google i'm gonna copy so i'm going to right click and i'm going to play copy image address okay we're going to copy image address click then i see chats i'm going to get those in two seconds if we see image source equals same thing as the web page we're going to go everything in between those two quotation marks i want you to delete it delete it and then we're going to paste our new image link which is really long because it's an image source link why is it so long didn't realize it was that long okay we're going to control z but basically you want to paste your image source link um okay let's try this one i'm trying to find one that has like a short one that we can um use but it's like not really working all that well because a lot of these have just like really long image links for no reason anyway sorry about that so we're going to paste our new image link in there it's going to be long it's going to be gross looking but that's usually how image links are then this is our alt text our alt text is what shows up if an image doesn't render so we're going to change that to like a picture of a dog because that's what this image is a picture of a dog then you're going to see right now in my webpage it was a picture of the harry potter cast because that's what my original image link was if i refresh it or i have to run it it's a picture of a dog now because we changed our image link to the link that was like the image source link or not the image source link the image link itself so yeah so this is our google submission form if you want to submit your website that's really fine you do not have to do it now um oh my gosh i'm so sorry thank you everyone for pointing that out to me so that's our submission form you do not have to do it right now um totally take some time you know play around with your stuff have fun with it um but yeah take some time but that is our submission form if you guys want to submit it um and yeah if you want to exit out you have something to go do you want to eat dinner you want to get a snack totally fine um i'll be here for a little bit more time answer you guys questions help out but i'm going to stop recording right now because it is the end of our time so yeah
