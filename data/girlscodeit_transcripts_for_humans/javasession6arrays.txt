With timestamps:

00:00 - this is our sixth lesson i believe
00:03 - on arrays in java and we're going to be
00:05 - covering what our arrays and what do we
00:06 - use them for
00:09 - so arrays an array is a collection of
00:12 - data
00:13 - it's used to hold multiple related
00:15 - values at the same time
00:17 - in one collection so it's kind of like
00:21 - a list of different pieces of data
00:25 - so an object that an array is an object
00:28 - it holds a fixed number of values of a
00:31 - single type
00:32 - so you can only have like strings in it
00:34 - or you can only have
00:35 - numbers in it you can't combine those
00:38 - two
00:39 - also you cannot change the size of an
00:41 - array
00:42 - so you can't change the number of things
00:44 - inside of it
00:45 - once you define it so you can have an
00:48 - array
00:49 - of type integer of type double of type
00:53 - string etc
00:54 - you just can't combine them and if it
00:57 - helps you um you can visualize an array
01:00 - as a table so like a little
01:04 - like table down here um and each of
01:08 - those
01:08 - little boxes is like a piece of data
01:12 - in the array like a piece of text or a
01:14 - number
01:16 - so does everyone understand this are
01:19 - there any questions
01:20 - just about very basic introduction to
01:24 - arrays
01:27 - thumbs up that's good
01:34 - okay everyone looks good so let's keep
01:38 - going
01:40 - so index so to access things in an array
01:45 - you need to use their index and an index
01:48 - is just like
01:49 - the number that represents the position
01:52 - of an item in the array so
01:54 - each element of an array each item in it
01:56 - has an
01:57 - index number depending on where it is
02:00 - in the array and so you can keep track
02:03 - of the specific
02:04 - element and you can like reference it
02:07 - and use it in your code
02:09 - a very important thing in most
02:11 - programming languages
02:12 - and especially in java is that you start
02:15 - counting
02:16 - at index number zero so the first item
02:20 - in an array it does not have an index
02:22 - number
02:23 - one it has an index number of zero so
02:26 - in this example down here we have an
02:29 - array of numbers
02:31 - and it starts at seven and we have 11 6
02:34 - 55 etc
02:36 - however the index number so like the
02:40 - the index number of the first element is
02:43 - zero
02:44 - and not one so if you want to get the
02:47 - number seven
02:48 - or the first item in this array you
02:50 - would have to
02:51 - use zero so the number is zero
02:55 - and then the second item is number one
02:57 - third item is number two
02:58 - and so on until the end of your array
03:02 - um how to create an array now
03:05 - important um so this is like your
03:09 - this basic way of creating an array and
03:11 - this doesn't put
03:12 - anything in it this just makes like
03:16 - the remember on a couple of slides there
03:18 - was like this blank one
03:19 - so you're just going to make like that
03:21 - blank row
03:23 - of um of possible elements
03:27 - so you start with saying the data type
03:30 - so in this case we're making
03:32 - an array of integers so you put int and
03:34 - you put
03:35 - two square brackets and then you put
03:39 - the name of the array in this case array
03:41 - one and then that equals
03:42 - a new we put the data type again so
03:46 - int and then put the square brackets
03:48 - again
03:49 - except this time in square brackets
03:51 - you're putting the size of the array
03:54 - so if you want there to be five elements
03:57 - in your array and you can't change this
03:59 - so i guess be careful with that
04:01 - um you just put a number five there and
04:04 - so
04:04 - now after this step only after that can
04:07 - you actually start
04:08 - putting numbers into your array and you
04:11 - can put up to five numbers in here
04:14 - um there is however another way you can
04:17 - make an array
04:18 - and this is usually a little easier uh
04:20 - but it depends on your
04:21 - on what you want to do with it but um in
04:24 - this
04:25 - in this case you're actually putting the
04:28 - numbers in it
04:29 - from the start so you start of course
04:31 - with the data type
04:32 - and your um square brackets the name of
04:35 - the array
04:36 - array one equals mu you type again
04:39 - square brackets and after that on the
04:42 - same line
04:43 - you have curly brackets and then inside
04:46 - you put all of the elements in the array
04:50 - so in this case the first element
04:52 - located at
04:53 - index 0 would be one and the second
04:57 - element
04:57 - element located at index um
05:01 - one would be two
05:05 - so this way you can actually put
05:08 - everything in an array from the start
05:11 - um and it ought and you kind of
05:13 - automatically tell it how big it is so
05:14 - there's five numbers
05:16 - so it's obviously going to have a fixed
05:18 - size of five
05:20 - you can't change so in our next slide
05:23 - here you can see
05:24 - you're printing out you have to put
05:25 - semicolons at the end as well
05:27 - so let's continue um the
05:31 - next now that we know how to make an
05:32 - array we can
05:34 - learn how to like get things from an
05:36 - array and print them out
05:38 - so to access an element in an array
05:41 - you can use as index in brackets
05:46 - you can print use using system.out.print
05:50 - so to get an item in an array
05:53 - you would use its name so you can see in
05:55 - pink array one or two
05:56 - and then you put two like um
06:00 - square brackets and then inside the
06:02 - square brackets
06:04 - you put the index number so if you want
06:06 - to get the first
06:08 - element of an array you would put a 0
06:11 - in there and that would print the
06:12 - element at index 0
06:14 - and then if you want to print an element
06:16 - at index 3
06:17 - you would put a 3 and that is the fourth
06:20 - item
06:20 - so the zero thing might be a little
06:23 - confusing
06:24 - but yeah i'll set the demo link right
06:26 - now sorry about that
06:28 - um so there's a demo to explain this
06:30 - concept a little better
06:32 - that is a demo uh make sure you
06:35 - fork the demo uh before
06:39 - editing it
06:45 - all right so in this demo
06:48 - we just have a little scanner to get
06:50 - user input
06:53 - and then we have an array
06:56 - right here so this is an array of movies
07:00 - it's a string array um
07:03 - so string movies equals mu string
07:08 - excuse me and then you can see the curly
07:10 - bracket way of making an array
07:12 - so there's curly brackets and then it
07:14 - just
07:15 - lists off each item and each item has
07:18 - like a comma
07:18 - between just so you can separate them
07:21 - and so this has
07:22 - one two three four five
07:25 - movies and then um
07:30 - actually i'm gonna fork this as well
07:33 - just so i can play around with it on my
07:36 - own
07:39 - so uh and then it asks
07:43 - which movie should you watch today pick
07:45 - a number from between
07:47 - uh one and five and then
07:51 - based on that uh number it like prints a
07:54 - movie for you
07:55 - uh make sure to subtract one because
07:57 - arrays always start at the index of zero
07:59 - so when it here is uh how you're getting
08:01 - an item from the array
08:03 - and as you can see the index number that
08:06 - you're using
08:07 - in in between the square brackets takes
08:11 - away
08:11 - one from what you input because if you
08:14 - want to watch the first
08:15 - movie you would normally put in one
08:17 - right but to get the first
08:20 - element of an array it's an index zero
08:23 - so you have to be taking away one and so
08:26 - you just type in a number
08:27 - and it gives you the fourth item in the
08:30 - array
08:32 - uh one two three four is sonic the
08:36 - hedgehog
08:37 - um this is a really cute demo um
08:42 - yeah so make sure when you're getting an
08:44 - item from an array you're using the
08:46 - square brackets and then putting your
08:48 - number inside of them
08:52 - um
08:54 - okay so now that we know how to get an
08:57 - item from an array and print it out um
09:00 - we can also talk about the length of an
09:03 - array
09:03 - so you can find the length of an array
09:06 - or the number of
09:07 - elements in an array the number of
09:10 - things in it
09:12 - and you can get that using array dot
09:14 - length
09:15 - so array being just the name of your
09:18 - array
09:18 - and then dot length so if you want to
09:22 - put that an integer
09:23 - you can just go int length equals array
09:26 - one dot length
09:27 - so array one being your array um and
09:30 - yeah you have to be aware that length is
09:32 - not the same as
09:33 - index so have an array with six elements
09:38 - um like the one in our example here
09:41 - the last index number is five
09:44 - because you started zero and you got the
09:46 - five
09:47 - yeah yeah and if you forget this you can
09:51 - get a little error um
09:54 - so in our little array down here uh
09:57 - index the first item has an index of
10:00 - zero
10:01 - and the sixth item has an index of five
10:05 - so an important concept that's what we
10:07 - saw in the last demo
10:09 - um making sure that you know the
10:11 - difference between
10:14 - its index number and its like position
10:17 - in the array
10:20 - because like the position can be the
10:22 - first the first item
10:23 - but its index is zero pretty much um
10:27 - i hope everyone's doing okay
10:30 - if you want to print an entire array so
10:34 - go through every single item in an array
10:36 - and i'll show you the demo
10:38 - um you can use a for loop so
10:43 - you just get this
10:48 - you just get the demo right
10:51 - here and send it to everyone if i can
10:54 - get the chat
10:57 - chat there you go so make sure you fork
11:00 - the demo
11:02 - um let's open it up
11:09 - um fork it
11:17 - so um
11:20 - because there is there's no built-in way
11:23 - to print an array
11:25 - you have to iterate through every item
11:28 - in your array
11:30 - and print them out so in our example
11:33 - here
11:34 - we make a an empty string an empty array
11:36 - sorry of strings
11:38 - string fruits equals mu string five so
11:42 - that makes
11:43 - a string array with five that can have
11:46 - five elements in it
11:49 - [Music]
11:51 - you the first element is grapes
11:54 - apple banana strawberry orange etc
11:58 - and then down here you have a for loop
12:00 - to print out everything
12:02 - so the for loop if you remember for
12:05 - loops you start at
12:06 - zero because i is zero um
12:09 - i is less than fruits.length so
12:12 - fruits fruits.length is 5 so
12:17 - i only goes up to 4 because once it hits
12:20 - 5 5 is no longer less than 5.
12:24 - and then it increments by one each time
12:27 - and then you can print out fruits i so
12:30 - it started zero and it would print out
12:32 - grapes
12:32 - and apple banana strawberry orange
12:36 - and then when i would get to five it
12:38 - would stop
12:39 - um so you can just run that and you can
12:41 - see how it prints out
12:42 - all of the fruit um at the end it says
12:46 - hope you found something you liked if
12:48 - not how would you add another fruit
12:50 - also i plus plus so someone asked um
12:54 - what does i plus plus mean that just
12:56 - means um
12:57 - add one so you can change i plus plus to
13:01 - plus equals one it's just a shorthand
13:04 - way
13:05 - of adding one to eye
13:14 - um okay so at the
13:17 - at the bottom it says if not how would
13:20 - you add another fruit
13:22 - so let's say you wanted to add like
13:25 - um a lemon to this
13:28 - array does does anyone have any
13:32 - possible guesses about how you would add
13:35 - another item to the array a
13:37 - sixth item i'll give you a hint
13:41 - you would go on to this line and you
13:44 - would
13:44 - make something equal to
13:48 - lemon like that uh you can you would
13:51 - put fruits five if that is the
13:55 - yeah so it's five someone typed it that
13:57 - is correct um
13:58 - five would be the next item in the array
14:03 - after four you can just run that
14:06 - um
14:09 - oh you would also have to change this to
14:11 - a six sorry i didn't realize that
14:12 - but yeah yeah yes thank you
14:16 - thank you two people realized a good job
14:18 - you you caught that for me thank you
14:20 - so you would also have to say six up
14:23 - here
14:23 - because otherwise you would get the
14:25 - error i just got but other than that you
14:27 - can
14:27 - keep adding every as many things as you
14:30 - want as long as you're changing this
14:32 - number here
14:33 - and you're adding it here the for loop
14:37 - it runs off of fruit stock length so
14:39 - because you're using fruit stock
14:41 - length it will automatically change
14:43 - whenever you add
14:44 - something new in here and whenever you
14:47 - change this number
14:49 - so um yeah go ahead and try that out
14:53 - adding
14:53 - fruits and things to
14:57 - to your array to your demo so
15:00 - we have two more demos to go through i
15:04 - believe
15:05 - let's continue so now i can move on to
15:09 - printing an entire array with the for
15:11 - each loop so this
15:12 - this does the same thing as the for loop
15:15 - it's like
15:15 - font like it does fundamentally the same
15:18 - thing
15:19 - except we do it a different way
15:22 - so this iterates through every item
15:24 - element in the loop without relying on
15:27 - index
15:28 - so this is a new kind of loop called a
15:30 - for each loop
15:32 - and here's what it looks like for it
15:35 - number array one system about that print
15:37 - number
15:38 - so for each number in an array you can
15:40 - print out the number
15:42 - um let's i'll send everyone the demo for
15:46 - this one
15:47 - let's make sure you fork it but here it
15:49 - is
15:51 - um i'm just gonna fork
15:55 - that
16:00 - yeah now wait a second make sure
16:03 - everyone's ready
16:04 - for this little demo so in this
16:08 - demo we have a string of veggies this
16:10 - time
16:11 - and this time they're all the array is
16:15 - initiated so it's created and all the
16:17 - elements are added
16:18 - on the same line so this one's
16:20 - convenient because i don't have to
16:21 - change
16:22 - a number in here i can just like comma
16:25 - and then add another item
16:28 - um and then ask which vegetables do you
16:30 - sell
16:31 - and then you have your little loop so
16:34 - if you want to do a for each loop um you
16:37 - would need to
16:38 - you need an array first of all to use
16:40 - this loop and then
16:42 - inside your round brackets
16:45 - you would first put the data type of
16:47 - your array so we have a string up here
16:50 - so you would put string down here and
16:52 - then you would put a name
16:54 - that basically would represent one item
16:57 - in your in your array you can change
16:59 - that to whatever you want it doesn't
17:01 - really
17:02 - matter and then you would put a colon in
17:06 - the middle
17:07 - and then you would put the name of your
17:08 - array
17:10 - and then inside of your for loop you can
17:12 - now use
17:14 - this like symbol to represent
17:18 - every item in your array to to print it
17:21 - out
17:22 - so if you run that
17:25 - it will print everything out uh by
17:29 - going through each item
17:32 - um we can also
17:35 - try something else where we can have it
17:38 - print the length of each
17:44 - string
17:46 - this depends on how many letters there
17:48 - are so that's just how you can see it
17:51 - um maybe a little more advanced
17:54 - printing out more things so you can use
17:57 - these for each loops pretty conveniently
17:59 - because they're a little
18:00 - simpler than a for loop they're easier
18:02 - to understand
18:03 - so you don't need to use index at all
18:05 - here
18:06 - and if you want to add a new item for
18:09 - this type of
18:11 - array declaration you can just you know
18:13 - type in
18:14 - um can't think of a vegetable for some
18:17 - reason right now
18:19 - um a tomato
18:22 - like that
18:25 - and it would do that
18:28 - um it would add it to the array and then
18:30 - it would get printed out in our
18:32 - for each loop so
18:35 - we only have one more demo left
18:38 - i think and it's all of them
18:42 - progressively get more complicated so um
18:44 - do ask
18:45 - any questions at any point if you have
18:47 - some um
18:50 - our last concept
18:54 - is a search so it's called linear search
18:58 - that doesn't really matter
18:59 - but it's just the simplest way to search
19:01 - an array for an element so if you want
19:03 - to find something
19:05 - in an array this is the easiest way to
19:07 - do it
19:08 - so in our example we're using a for each
19:11 - loop
19:13 - and first you declare your desired
19:15 - number so
19:17 - if you want to find a specific number in
19:19 - the array and you go through every
19:21 - number in the array
19:23 - if the number in the array is equal to
19:26 - the number you want your desired number
19:28 - you can print out that the number was
19:30 - found
19:31 - this is the the concept we're looking at
19:34 - in this demo
19:37 - so i'll just send that in the chat
19:49 - and make sure you fork
19:53 - before editing
20:00 - and this one is a little more complex
20:03 - looking
20:03 - but fundamentally it's pretty simple
20:11 - so in this example of search
20:14 - if you want to find something in the
20:16 - right we're going to use input in this
20:18 - case
20:19 - and then we have a another
20:22 - string array called database and all the
20:26 - things are listed here
20:27 - they have a bunch of countries
20:30 - let's see if the country you live in
20:32 - matches any of those in our database
20:35 - no you can just add that then if you
20:38 - want so let's add
20:40 - nigeria so you can add as many countries
20:43 - as you want
20:46 - um
20:48 - um and so then it'll ask you what
20:50 - country you live in
20:51 - um you get to type it in you type in the
20:54 - country
20:55 - and then you enter a for loop so in this
20:58 - case we have to use a for loop because
21:00 - we want to print out the index that the
21:03 - country is
21:03 - found at so because we want to know the
21:06 - exact
21:06 - index of of uh of the
21:10 - index number in the array we have to use
21:12 - a for loop
21:13 - um so then inside the for loop which
21:16 - goes up to the length of database which
21:19 - is i don't know what it is it's pretty
21:20 - big
21:21 - um if database i so um
21:24 - a database country equals the country
21:27 - you typed in in uppercase
21:30 - print out yay your country exists in our
21:32 - database it can be found at
21:34 - the index where you're at and that would
21:36 - end
21:37 - the loop so let's run that
21:41 - which country do you live in and you
21:44 - know i'll put in nigeria
21:46 - for an example and it's like yay your
21:48 - country exists in our database
21:50 - it's founded index 14
21:57 - so nigeria is the last thing
22:00 - in our array its index is 14
22:06 - how many items are there in the array
22:10 - um
22:13 - without counting so if it's it's the
22:16 - last item in the list and its index is
22:18 - 14 how many items are there
22:22 - in the array 15.
22:26 - yes i would i think that's correct and
22:28 - then we can just double check
22:30 - three four five six seven eight
22:34 - fifteen fourteen fifty correct so it's
22:36 - the last item
22:37 - um and its index is 14 so the number of
22:40 - items
22:41 - in the list must be plus 115.
22:45 - also someone asked what does two
22:46 - uppercase mean
22:48 - so um dot to uppercase on a string just
22:52 - makes it all in uppercase so
22:55 - the reason we use it in uppercase so if
22:58 - you type in
22:59 - um like canada and it's an all lowercase
23:03 - and you try to like see if it's equal to
23:06 - canada here
23:07 - in all uppercase that's not going to
23:09 - work so um
23:11 - it's so you can it like it's so you can
23:13 - capitalize it however you want
23:16 - and like it still works that's the point
23:18 - of
23:19 - um doing it to uppercase just puts
23:21 - everything in uppercase
23:24 - um does that answer your question
23:29 - okay good um yeah
23:36 - so this is a helpful way of
23:40 - finding trying to find an item in a
23:43 - database
23:45 - you can add even more countries if you
23:47 - want um
23:49 - so let's let's get started on our quiz
23:53 - um uh i hope no one's all the answers
23:57 - but anyway
24:00 - so uh the first quiz question is and
24:02 - feel free to put your answers in the
24:04 - chat
24:05 - um so the first question is you can
24:08 - change the number of items in an array
24:11 - after initializing it true or false
24:14 - as we have a little bit of conflicted
24:16 - answers and we're saying true
24:18 - they're saying false okay let's take a
24:21 - look at the answer
24:22 - so the answer is false so you can't
24:26 - change the number of items in an array
24:27 - after initializing it
24:28 - so i think i know why some of you
24:32 - if you re-initialize exactly so
24:35 - you can't change it once the code is
24:39 - already running
24:40 - so you can change it when you're editing
24:42 - the code itself
24:44 - but um when the code
24:47 - is already running there is no way
24:50 - to add something to an array you can
24:54 - only do that when you're editing the
24:55 - code
24:56 - like when i showed you changing the
24:57 - number from a five to a six or whatever
25:00 - that's separate from this there is no
25:04 - um way in your code to change
25:07 - the number of an array like when the
25:09 - like there's no line of code to do that
25:13 - does that make sense it's only in the
25:16 - editing stages of your code
25:18 - where you can change how how long your
25:21 - array is
25:26 - yeah so i understand why that might have
25:29 - been
25:29 - confusing to some of you only if you
25:32 - re-initialize
25:33 - um um or if you if you change you edit
25:37 - your code
25:38 - can you do that
25:42 - um quiz question number two what number
25:44 - is printed with this code so you have an
25:47 - array of numbers 1506 2172
25:50 - and then a print statement what numbers
25:54 - printed with this code
25:56 - okay yeah so let's take a look at the
25:57 - answer and the answer
26:00 - is um d 21
26:04 - number 21 is printed because an array's
26:06 - index starts at zero
26:08 - so number 15 if you want to get number
26:10 - 15 you would put
26:11 - zero if you want to get zero you would
26:15 - put
26:15 - one if you want to get six you would put
26:18 - a
26:18 - two and if you want to get 21 you would
26:21 - put three
26:22 - so that's how this works are there any
26:25 - questions about that
26:26 - about uh indexes because
26:30 - this can be a little confusing but just
26:32 - remember that try to remember at least
26:34 - that it starts at zero and goes up from
26:37 - there
26:40 - all right uh let's keep going question
26:43 - number three
26:44 - how do you get the length of an array so
26:47 - you have four options here
26:51 - um array.length
26:54 - as a method array.length as a property
26:57 - um length array and or you can't get
27:02 - the length of an array without iterating
27:03 - through it so the answer is
27:06 - b so so when it comes to arrays
27:10 - um length is a property of an array and
27:13 - it's oxed
27:14 - with dot property so dot length
27:17 - it might be confusing because with
27:18 - strings it's a
27:20 - so if you're trying to get the length of
27:22 - a string you would go string.length
27:25 - with the curly brackets but if you're
27:28 - trying to get
27:28 - the length of an array it would be
27:31 - array.length
27:32 - and nothing else so that can be
27:36 - i always i mess that up pretty often so
27:38 - it's okay if you can't
27:39 - remember that exactly but there is a
27:42 - difference
27:43 - a slight difference there between
27:44 - getting the length of an array and a
27:46 - string
27:50 - so let's continue question
27:53 - four what is one correct way
27:57 - to initialize an array of string objects
27:59 - and look at them
28:00 - carefully because they're kind of um
28:03 - some of them are a little tricky
28:06 - but which one which is the correct way
28:09 - of initializing
28:11 - a string array so the correct answer
28:15 - for question four is
28:18 - in fact c so the correct formula for
28:21 - initializing an array
28:23 - with a fixed size because that's what
28:25 - the options are
28:26 - is type so string array name equals new
28:29 - type
28:30 - string and then size so one person put d
28:33 - um it's not d because d is missing
28:38 - two things a d needs to have string
28:41 - at the front before you put array and
28:43 - then
28:44 - when you're putting the size like number
28:46 - five it has to be
28:47 - square brackets and not curly brackets
28:50 - so
28:51 - c is the correct answer
28:55 - i have one more question i believe
28:59 - um so quiz question number five
29:02 - what is the output of this code and look
29:04 - at it carefully
29:06 - as well i'll give you guys a little bit
29:08 - of time to
29:09 - to analyze this one okay
29:12 - so the correct answer for this one is
29:16 - b um the reason that it's b
29:19 - is because in the in the for loop
29:22 - um the the third statement instead of
29:26 - being i
29:26 - plus plus or i plus equals one it's i
29:29 - plus equals
29:30 - two so i increments by two each time
29:34 - instead of one so it would start out by
29:38 - printing one
29:39 - because that's index zero of course but
29:41 - then instead of i
29:43 - goes to two um no sorry i goes to one
29:47 - i would skip skip skip that one
29:50 - and it would go to two so go 0
29:54 - 2 in terms of the value of i
29:58 - and so the index 2 in this array
30:02 - is 3 so 1 3 5
30:05 - instead of one two three
30:09 - um that might be a little confusing
30:14 - but um if you i it's okay you can catch
30:18 - that
30:19 - but um when you're analyzing a for loop
30:21 - it's important to see
30:22 - how much i changes yeah very tricky it's
30:24 - important to see
30:25 - how much i changes each time so this
30:28 - time it changes by
30:29 - two instead of the normal one so you'd
30:31 - have to
30:32 - do a little bit of code tracing in your
30:35 - head to figure out
30:36 - um exactly what would print in this
30:39 - circumstance
30:40 - um someone said a and the reason it's
30:42 - not a
30:43 - is because the loop starts at zero
30:46 - um i starts at zero so you would print
30:49 - out the
30:50 - number one first anyway and then it
30:53 - would continue from there
30:54 - yeah so this is a little this is a
30:56 - tricky question um
30:58 - i'm very glad that everyone tried their
30:59 - best anyway
31:01 - um that's always good to see um so
31:04 - that is it for our lesson though um
31:08 - now it's time for questions feedback
31:11 - form
31:12 - um and the workshop as well of course so
31:16 - um i'm just going to open up our
31:20 - workshop
31:21 - um you can do your feedback form now or
31:25 - you can do
31:26 - your feedback form at the end of the
31:28 - lesson but that is really appreciated
31:31 - in terms of um lessons and things i'll
31:34 - just i can just quickly send the
31:36 - feedback form
31:37 - i'll just i'll just have that one in the
31:39 - chat now
31:40 - and then also give you um
31:43 - the the resources links will come pretty
31:45 - soon
31:46 - but i'll just send the workshop link
31:49 - this is
31:50 - a cute slide um workshop link
31:54 - is this one make sure you fork and
31:58 - be
32:01 - mission forum link is
32:04 - this one yeah okay
32:14 - let's work this
32:21 - and there we go okay
32:26 - yeah and there's also a bunch of
32:27 - resources in the chat
32:29 - um so today's
32:33 - workshop is this so
32:37 - um you finally managed to sneak into one
32:39 - of the ice cream stores
32:40 - this is i guess a continuation of the
32:42 - plot line you receive a top secret lead
32:45 - saying
32:46 - that each ice cream tub is actually a
32:48 - tunnel leading to a secret room where
32:50 - they could be keeping your friend
32:52 - let's try the one with your friend's
32:54 - favorite ice cream flavor in it what is
32:56 - your friend's favorite icing paper okay
32:57 - go on
32:58 - and the important part is going to be
33:00 - the loop at the very bottom here
33:03 - um but up until then i'll help
33:07 - everyone out with this workshop
33:10 - so let's import something we can use to
33:12 - collect user input
33:14 - so um we've done this quite a few times
33:17 - i think all of our workshops
33:19 - like to use input so
33:22 - we can just start with import
33:27 - java dot um
33:30 - util dot scanner
33:34 - um to get our user input and then does
33:38 - anyone remember
33:38 - how to create the user input object
33:42 - the object that we need to create user
33:44 - input
33:45 - it starts with scanner
33:49 - um and you can name it something
33:53 - um doesn't really matter what equals
33:57 - mu gamma like that
34:01 - and then inside of the brackets
34:06 - system dot in um and that will create
34:10 - your your scanner objects you can create
34:13 - user input
34:15 - um and then down here let's create a
34:18 - variable to store the user's
34:20 - input so it already gives you the
34:22 - variable called
34:23 - flavor right here
34:27 - so if you want to get if you want to get
34:28 - user input
34:31 - and put it in flavor um
34:34 - does anyone know what you would have to
34:36 - type after the equal sign
34:38 - um keeping in mind that our scanner
34:41 - object is named scan
34:43 - at the top yeah feel free to put your
34:45 - answers in chat
34:46 - i can i know it can be a little
34:48 - nerve-wracking but uh
34:50 - yes next someone said it next line so
34:53 - scan is the name of our object so scan
34:55 - dot next line good job caitlyn um
35:00 - scan dot next line and that will store
35:03 - the user's input
35:05 - um and now there's an array created for
35:08 - you
35:08 - so it says now we have to create the
35:10 - array of all the different ice cream
35:12 - flavors in store
35:13 - let's make them uppercase so we can
35:15 - easily match the user's input
35:17 - so um yeah a good tip a good tip for
35:20 - something like this trying to
35:21 - find some trying to find something in an
35:23 - array is
35:24 - making all of the things in the array
35:26 - have the same case
35:28 - so they're all uppercase in this case
35:30 - you can also make them all
35:31 - lowercase um just so that it's easier to
35:34 - match
35:35 - the user inputs to them and if you have
35:38 - any other ice cream flavors feel free to
35:40 - add them to the array
35:41 - so i really like um cheesecake
35:46 - flavor ice cream which is kind of a wild
35:49 - card
35:49 - but there's some really good flavors and
35:51 - i also like
35:52 - cold coconut so i want to put those in
35:55 - there because i really like those
35:59 - um and then the last part the for loop
36:02 - and like the search i'm gonna leave
36:04 - up to um you guys to try and figure it
36:08 - out
36:08 - if you wanna put your code in the chat
36:10 - or leave your answers
36:12 - so i can see them you can also do that
36:14 - but um
36:16 - now you're supposed to go through all
36:17 - the flavors and see if any of them
36:19 - match your friends favorite
36:23 - if you find a match print out the index
36:25 - you found it at
36:26 - as well
36:31 - so they have a bunch of little tips here
36:36 - about how to write the for loop and how
36:39 - to conduct
36:40 - the search
36:46 - but this part i want i think it's a good
36:48 - idea if you try it out on your own
36:51 - and if you need any help with your code
36:52 - though and you have any other questions
36:55 - um this is a good time to ask you can
36:58 - also ask me like
36:59 - privately like send me a like a private
37:01 - dm on zoom you can do that
37:03 - um
37:07 - but yeah that is pretty much everything
37:10 - for
37:10 - today's lesson i guess it's technically
37:12 - a little bit early
37:14 - because like seven minutes technically
37:16 - left but um
37:18 - that is really all we had to go through
37:21 - um so we went over
37:23 - a raise um
37:26 - getting items in an array printing
37:28 - arrays
37:29 - searching an arrays yeah lots of array
37:34 - stuff
37:38 - yeah of course uh before you go
37:41 - you can please fill out the feedback
37:44 - form which i want to send one more time
37:46 - really helpful um
37:52 - but yeah that's pretty much all
37:55 - for today um you can stay if you have
37:57 - questions or need help
37:59 - um but thank you for coming have a great
38:02 - day
38:03 - everyone i think i'm not 100 sure what
38:06 - our next lesson is
38:07 - it might be classes it might be
38:09 - arraylist but uh yeah thank you everyone
38:11 - for coming hope you're learning
38:13 - something
38:14 - i hope you work on your workshop
38:18 - at home
38:29 - bye

Cleaned transcript:

this is our sixth lesson i believe on arrays in java and we're going to be covering what our arrays and what do we use them for so arrays an array is a collection of data it's used to hold multiple related values at the same time in one collection so it's kind of like a list of different pieces of data so an object that an array is an object it holds a fixed number of values of a single type so you can only have like strings in it or you can only have numbers in it you can't combine those two also you cannot change the size of an array so you can't change the number of things inside of it once you define it so you can have an array of type integer of type double of type string etc you just can't combine them and if it helps you um you can visualize an array as a table so like a little like table down here um and each of those little boxes is like a piece of data in the array like a piece of text or a number so does everyone understand this are there any questions just about very basic introduction to arrays thumbs up that's good okay everyone looks good so let's keep going so index so to access things in an array you need to use their index and an index is just like the number that represents the position of an item in the array so each element of an array each item in it has an index number depending on where it is in the array and so you can keep track of the specific element and you can like reference it and use it in your code a very important thing in most programming languages and especially in java is that you start counting at index number zero so the first item in an array it does not have an index number one it has an index number of zero so in this example down here we have an array of numbers and it starts at seven and we have 11 6 55 etc however the index number so like the the index number of the first element is zero and not one so if you want to get the number seven or the first item in this array you would have to use zero so the number is zero and then the second item is number one third item is number two and so on until the end of your array um how to create an array now important um so this is like your this basic way of creating an array and this doesn't put anything in it this just makes like the remember on a couple of slides there was like this blank one so you're just going to make like that blank row of um of possible elements so you start with saying the data type so in this case we're making an array of integers so you put int and you put two square brackets and then you put the name of the array in this case array one and then that equals a new we put the data type again so int and then put the square brackets again except this time in square brackets you're putting the size of the array so if you want there to be five elements in your array and you can't change this so i guess be careful with that um you just put a number five there and so now after this step only after that can you actually start putting numbers into your array and you can put up to five numbers in here um there is however another way you can make an array and this is usually a little easier uh but it depends on your on what you want to do with it but um in this in this case you're actually putting the numbers in it from the start so you start of course with the data type and your um square brackets the name of the array array one equals mu you type again square brackets and after that on the same line you have curly brackets and then inside you put all of the elements in the array so in this case the first element located at index 0 would be one and the second element element located at index um one would be two so this way you can actually put everything in an array from the start um and it ought and you kind of automatically tell it how big it is so there's five numbers so it's obviously going to have a fixed size of five you can't change so in our next slide here you can see you're printing out you have to put semicolons at the end as well so let's continue um the next now that we know how to make an array we can learn how to like get things from an array and print them out so to access an element in an array you can use as index in brackets you can print use using system.out.print so to get an item in an array you would use its name so you can see in pink array one or two and then you put two like um square brackets and then inside the square brackets you put the index number so if you want to get the first element of an array you would put a 0 in there and that would print the element at index 0 and then if you want to print an element at index 3 you would put a 3 and that is the fourth item so the zero thing might be a little confusing but yeah i'll set the demo link right now sorry about that um so there's a demo to explain this concept a little better that is a demo uh make sure you fork the demo uh before editing it all right so in this demo we just have a little scanner to get user input and then we have an array right here so this is an array of movies it's a string array um so string movies equals mu string excuse me and then you can see the curly bracket way of making an array so there's curly brackets and then it just lists off each item and each item has like a comma between just so you can separate them and so this has one two three four five movies and then um actually i'm gonna fork this as well just so i can play around with it on my own so uh and then it asks which movie should you watch today pick a number from between uh one and five and then based on that uh number it like prints a movie for you uh make sure to subtract one because arrays always start at the index of zero so when it here is uh how you're getting an item from the array and as you can see the index number that you're using in in between the square brackets takes away one from what you input because if you want to watch the first movie you would normally put in one right but to get the first element of an array it's an index zero so you have to be taking away one and so you just type in a number and it gives you the fourth item in the array uh one two three four is sonic the hedgehog um this is a really cute demo um yeah so make sure when you're getting an item from an array you're using the square brackets and then putting your number inside of them um okay so now that we know how to get an item from an array and print it out um we can also talk about the length of an array so you can find the length of an array or the number of elements in an array the number of things in it and you can get that using array dot length so array being just the name of your array and then dot length so if you want to put that an integer you can just go int length equals array one dot length so array one being your array um and yeah you have to be aware that length is not the same as index so have an array with six elements um like the one in our example here the last index number is five because you started zero and you got the five yeah yeah and if you forget this you can get a little error um so in our little array down here uh index the first item has an index of zero and the sixth item has an index of five so an important concept that's what we saw in the last demo um making sure that you know the difference between its index number and its like position in the array because like the position can be the first the first item but its index is zero pretty much um i hope everyone's doing okay if you want to print an entire array so go through every single item in an array and i'll show you the demo um you can use a for loop so you just get this you just get the demo right here and send it to everyone if i can get the chat chat there you go so make sure you fork the demo um let's open it up um fork it so um because there is there's no builtin way to print an array you have to iterate through every item in your array and print them out so in our example here we make a an empty string an empty array sorry of strings string fruits equals mu string five so that makes a string array with five that can have five elements in it you the first element is grapes apple banana strawberry orange etc and then down here you have a for loop to print out everything so the for loop if you remember for loops you start at zero because i is zero um i is less than fruits.length so fruits fruits.length is 5 so i only goes up to 4 because once it hits 5 5 is no longer less than 5. and then it increments by one each time and then you can print out fruits i so it started zero and it would print out grapes and apple banana strawberry orange and then when i would get to five it would stop um so you can just run that and you can see how it prints out all of the fruit um at the end it says hope you found something you liked if not how would you add another fruit also i plus plus so someone asked um what does i plus plus mean that just means um add one so you can change i plus plus to plus equals one it's just a shorthand way of adding one to eye um okay so at the at the bottom it says if not how would you add another fruit so let's say you wanted to add like um a lemon to this array does does anyone have any possible guesses about how you would add another item to the array a sixth item i'll give you a hint you would go on to this line and you would make something equal to lemon like that uh you can you would put fruits five if that is the yeah so it's five someone typed it that is correct um five would be the next item in the array after four you can just run that um oh you would also have to change this to a six sorry i didn't realize that but yeah yeah yes thank you thank you two people realized a good job you you caught that for me thank you so you would also have to say six up here because otherwise you would get the error i just got but other than that you can keep adding every as many things as you want as long as you're changing this number here and you're adding it here the for loop it runs off of fruit stock length so because you're using fruit stock length it will automatically change whenever you add something new in here and whenever you change this number so um yeah go ahead and try that out adding fruits and things to to your array to your demo so we have two more demos to go through i believe let's continue so now i can move on to printing an entire array with the for each loop so this this does the same thing as the for loop it's like font like it does fundamentally the same thing except we do it a different way so this iterates through every item element in the loop without relying on index so this is a new kind of loop called a for each loop and here's what it looks like for it number array one system about that print number so for each number in an array you can print out the number um let's i'll send everyone the demo for this one let's make sure you fork it but here it is um i'm just gonna fork that yeah now wait a second make sure everyone's ready for this little demo so in this demo we have a string of veggies this time and this time they're all the array is initiated so it's created and all the elements are added on the same line so this one's convenient because i don't have to change a number in here i can just like comma and then add another item um and then ask which vegetables do you sell and then you have your little loop so if you want to do a for each loop um you would need to you need an array first of all to use this loop and then inside your round brackets you would first put the data type of your array so we have a string up here so you would put string down here and then you would put a name that basically would represent one item in your in your array you can change that to whatever you want it doesn't really matter and then you would put a colon in the middle and then you would put the name of your array and then inside of your for loop you can now use this like symbol to represent every item in your array to to print it out so if you run that it will print everything out uh by going through each item um we can also try something else where we can have it print the length of each string this depends on how many letters there are so that's just how you can see it um maybe a little more advanced printing out more things so you can use these for each loops pretty conveniently because they're a little simpler than a for loop they're easier to understand so you don't need to use index at all here and if you want to add a new item for this type of array declaration you can just you know type in um can't think of a vegetable for some reason right now um a tomato like that and it would do that um it would add it to the array and then it would get printed out in our for each loop so we only have one more demo left i think and it's all of them progressively get more complicated so um do ask any questions at any point if you have some um our last concept is a search so it's called linear search that doesn't really matter but it's just the simplest way to search an array for an element so if you want to find something in an array this is the easiest way to do it so in our example we're using a for each loop and first you declare your desired number so if you want to find a specific number in the array and you go through every number in the array if the number in the array is equal to the number you want your desired number you can print out that the number was found this is the the concept we're looking at in this demo so i'll just send that in the chat and make sure you fork before editing and this one is a little more complex looking but fundamentally it's pretty simple so in this example of search if you want to find something in the right we're going to use input in this case and then we have a another string array called database and all the things are listed here they have a bunch of countries let's see if the country you live in matches any of those in our database no you can just add that then if you want so let's add nigeria so you can add as many countries as you want um um and so then it'll ask you what country you live in um you get to type it in you type in the country and then you enter a for loop so in this case we have to use a for loop because we want to print out the index that the country is found at so because we want to know the exact index of of uh of the index number in the array we have to use a for loop um so then inside the for loop which goes up to the length of database which is i don't know what it is it's pretty big um if database i so um a database country equals the country you typed in in uppercase print out yay your country exists in our database it can be found at the index where you're at and that would end the loop so let's run that which country do you live in and you know i'll put in nigeria for an example and it's like yay your country exists in our database it's founded index 14 so nigeria is the last thing in our array its index is 14 how many items are there in the array um without counting so if it's it's the last item in the list and its index is 14 how many items are there in the array 15. yes i would i think that's correct and then we can just double check three four five six seven eight fifteen fourteen fifty correct so it's the last item um and its index is 14 so the number of items in the list must be plus 115. also someone asked what does two uppercase mean so um dot to uppercase on a string just makes it all in uppercase so the reason we use it in uppercase so if you type in um like canada and it's an all lowercase and you try to like see if it's equal to canada here in all uppercase that's not going to work so um it's so you can it like it's so you can capitalize it however you want and like it still works that's the point of um doing it to uppercase just puts everything in uppercase um does that answer your question okay good um yeah so this is a helpful way of finding trying to find an item in a database you can add even more countries if you want um so let's let's get started on our quiz um uh i hope no one's all the answers but anyway so uh the first quiz question is and feel free to put your answers in the chat um so the first question is you can change the number of items in an array after initializing it true or false as we have a little bit of conflicted answers and we're saying true they're saying false okay let's take a look at the answer so the answer is false so you can't change the number of items in an array after initializing it so i think i know why some of you if you reinitialize exactly so you can't change it once the code is already running so you can change it when you're editing the code itself but um when the code is already running there is no way to add something to an array you can only do that when you're editing the code like when i showed you changing the number from a five to a six or whatever that's separate from this there is no um way in your code to change the number of an array like when the like there's no line of code to do that does that make sense it's only in the editing stages of your code where you can change how how long your array is yeah so i understand why that might have been confusing to some of you only if you reinitialize um um or if you if you change you edit your code can you do that um quiz question number two what number is printed with this code so you have an array of numbers 1506 2172 and then a print statement what numbers printed with this code okay yeah so let's take a look at the answer and the answer is um d 21 number 21 is printed because an array's index starts at zero so number 15 if you want to get number 15 you would put zero if you want to get zero you would put one if you want to get six you would put a two and if you want to get 21 you would put three so that's how this works are there any questions about that about uh indexes because this can be a little confusing but just remember that try to remember at least that it starts at zero and goes up from there all right uh let's keep going question number three how do you get the length of an array so you have four options here um array.length as a method array.length as a property um length array and or you can't get the length of an array without iterating through it so the answer is b so so when it comes to arrays um length is a property of an array and it's oxed with dot property so dot length it might be confusing because with strings it's a so if you're trying to get the length of a string you would go string.length with the curly brackets but if you're trying to get the length of an array it would be array.length and nothing else so that can be i always i mess that up pretty often so it's okay if you can't remember that exactly but there is a difference a slight difference there between getting the length of an array and a string so let's continue question four what is one correct way to initialize an array of string objects and look at them carefully because they're kind of um some of them are a little tricky but which one which is the correct way of initializing a string array so the correct answer for question four is in fact c so the correct formula for initializing an array with a fixed size because that's what the options are is type so string array name equals new type string and then size so one person put d um it's not d because d is missing two things a d needs to have string at the front before you put array and then when you're putting the size like number five it has to be square brackets and not curly brackets so c is the correct answer i have one more question i believe um so quiz question number five what is the output of this code and look at it carefully as well i'll give you guys a little bit of time to to analyze this one okay so the correct answer for this one is b um the reason that it's b is because in the in the for loop um the the third statement instead of being i plus plus or i plus equals one it's i plus equals two so i increments by two each time instead of one so it would start out by printing one because that's index zero of course but then instead of i goes to two um no sorry i goes to one i would skip skip skip that one and it would go to two so go 0 2 in terms of the value of i and so the index 2 in this array is 3 so 1 3 5 instead of one two three um that might be a little confusing but um if you i it's okay you can catch that but um when you're analyzing a for loop it's important to see how much i changes yeah very tricky it's important to see how much i changes each time so this time it changes by two instead of the normal one so you'd have to do a little bit of code tracing in your head to figure out um exactly what would print in this circumstance um someone said a and the reason it's not a is because the loop starts at zero um i starts at zero so you would print out the number one first anyway and then it would continue from there yeah so this is a little this is a tricky question um i'm very glad that everyone tried their best anyway um that's always good to see um so that is it for our lesson though um now it's time for questions feedback form um and the workshop as well of course so um i'm just going to open up our workshop um you can do your feedback form now or you can do your feedback form at the end of the lesson but that is really appreciated in terms of um lessons and things i'll just i can just quickly send the feedback form i'll just i'll just have that one in the chat now and then also give you um the the resources links will come pretty soon but i'll just send the workshop link this is a cute slide um workshop link is this one make sure you fork and be mission forum link is this one yeah okay let's work this and there we go okay yeah and there's also a bunch of resources in the chat um so today's workshop is this so um you finally managed to sneak into one of the ice cream stores this is i guess a continuation of the plot line you receive a top secret lead saying that each ice cream tub is actually a tunnel leading to a secret room where they could be keeping your friend let's try the one with your friend's favorite ice cream flavor in it what is your friend's favorite icing paper okay go on and the important part is going to be the loop at the very bottom here um but up until then i'll help everyone out with this workshop so let's import something we can use to collect user input so um we've done this quite a few times i think all of our workshops like to use input so we can just start with import java dot um util dot scanner um to get our user input and then does anyone remember how to create the user input object the object that we need to create user input it starts with scanner um and you can name it something um doesn't really matter what equals mu gamma like that and then inside of the brackets system dot in um and that will create your your scanner objects you can create user input um and then down here let's create a variable to store the user's input so it already gives you the variable called flavor right here so if you want to get if you want to get user input and put it in flavor um does anyone know what you would have to type after the equal sign um keeping in mind that our scanner object is named scan at the top yeah feel free to put your answers in chat i can i know it can be a little nervewracking but uh yes next someone said it next line so scan is the name of our object so scan dot next line good job caitlyn um scan dot next line and that will store the user's input um and now there's an array created for you so it says now we have to create the array of all the different ice cream flavors in store let's make them uppercase so we can easily match the user's input so um yeah a good tip a good tip for something like this trying to find some trying to find something in an array is making all of the things in the array have the same case so they're all uppercase in this case you can also make them all lowercase um just so that it's easier to match the user inputs to them and if you have any other ice cream flavors feel free to add them to the array so i really like um cheesecake flavor ice cream which is kind of a wild card but there's some really good flavors and i also like cold coconut so i want to put those in there because i really like those um and then the last part the for loop and like the search i'm gonna leave up to um you guys to try and figure it out if you wanna put your code in the chat or leave your answers so i can see them you can also do that but um now you're supposed to go through all the flavors and see if any of them match your friends favorite if you find a match print out the index you found it at as well so they have a bunch of little tips here about how to write the for loop and how to conduct the search but this part i want i think it's a good idea if you try it out on your own and if you need any help with your code though and you have any other questions um this is a good time to ask you can also ask me like privately like send me a like a private dm on zoom you can do that um but yeah that is pretty much everything for today's lesson i guess it's technically a little bit early because like seven minutes technically left but um that is really all we had to go through um so we went over a raise um getting items in an array printing arrays searching an arrays yeah lots of array stuff yeah of course uh before you go you can please fill out the feedback form which i want to send one more time really helpful um but yeah that's pretty much all for today um you can stay if you have questions or need help um but thank you for coming have a great day everyone i think i'm not 100 sure what our next lesson is it might be classes it might be arraylist but uh yeah thank you everyone for coming hope you're learning something i hope you work on your workshop at home bye
