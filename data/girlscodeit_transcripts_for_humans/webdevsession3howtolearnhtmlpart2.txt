With timestamps:

00:00 - first of all we're gonna talk about
00:02 - comments so this is html part two
00:04 - um there was a couple comments in the
00:06 - code last week there are
00:08 - a couple this week i mean i made the
00:10 - example so i'm trying to think um
00:12 - there's a few um you used to leave
00:14 - little notes in your html document
00:16 - um these do not affect the integrity of
00:18 - your code they don't add anything to
00:19 - your code except for a comment and only
00:22 - the person who wrote the code can see
00:23 - them so they're in your code
00:25 - they just are helpful little notes but
00:27 - they don't like
00:28 - make anything run so say if you wanted
00:30 - to add an image you can't do that in a
00:32 - comment because the comment doesn't
00:33 - affect the code
00:34 - um to do that carrot bracket
00:37 - exclamation point dash dash
00:41 - that's basically our syntax for comments
00:44 - so carat exclamation point
00:47 - um dash dash is your opening tag
00:50 - however fun thing to note i know that we
00:53 - just went over in a kahoot that the
00:55 - closing tag
00:56 - for html is slash
00:59 - care bracket um not for comments
01:02 - comments are a special one and we're
01:04 - just going to use dash dash
01:06 - carrot bracket so that's a fun one
01:09 - just remember but you will also notice
01:11 - that you're doing a comment correctly
01:13 - when the comment turns gray so a lot of
01:16 - your code it's like black
01:17 - or some elements turn blue or purple but
01:20 - comments are always
01:21 - gray so that's to know how comments have
01:23 - been initiated because they're always
01:25 - gray
01:26 - so inline scripting this is a little bit
01:29 - of a
01:29 - fun little thing inline scripting is
01:33 - contained directly in an html code so
01:35 - that basically means that our javascript
01:37 - functions are javascript but they're
01:40 - going to be in our html document
01:42 - um you don't see those a whole lot but
01:44 - they can be used for like little
01:46 - javascript things in an html website uh
01:49 - using it requires the script tag which
01:50 - we talked a little bit about earlier so
01:52 - this is
01:53 - to embed javascript within an html file
01:56 - um it's a little bit tricky but it's
01:59 - not for your entire javascript file it's
02:02 - for like little
02:03 - little things so this one shows an alert
02:06 - which pops up as like a little one of
02:08 - those like little web pages
02:10 - um but that's what this is for this is
02:13 - not for
02:14 - like making your website do all of its
02:17 - javascript functions this is for very
02:19 - very little details
02:20 - and i want to emphasize that because if
02:22 - you use this script tag and you paste
02:24 - your entire javascript file into there
02:27 - or at least the contents of it it will
02:30 - not it like it just won't
02:32 - work the way you want it to it might not
02:34 - even like function as
02:36 - code so i want you to make sure that
02:39 - you're only using this for like little
02:40 - things
02:41 - um if you want to use an alert you can
02:42 - also just be used the
02:44 - alert function but that's a javascript
02:47 - thing
02:48 - so this would be used to make this but
02:50 - in the javascript file
02:52 - i see a question what type of code is
02:55 - this again
02:56 - so this is actually two types of code um
02:59 - that we're seeing here on the web page
03:00 - this is javascript so this alert open
03:04 - bracket close bracket
03:05 - that is javascript and that's a
03:06 - javascript function which we'll get into
03:08 - later because you're going to see them
03:10 - in our example today but this chara
03:12 - bracket
03:13 - script um care bracket dash
03:16 - script that is html so it's really
03:19 - interesting
03:20 - but html javascript and css all go hand
03:23 - in hand so you're going to see all of
03:25 - them
03:25 - in web pages um inline styling
03:28 - so basically remember what we did with
03:30 - javascript where we said okay
03:32 - little things that we can do with
03:34 - javascript we can put them in our html
03:36 - file
03:36 - well we can do this exact same thing
03:38 - with css so
03:40 - um inline styling css code contained
03:42 - within the individual lines of html
03:46 - use the style attribute so remember how
03:48 - we use
03:49 - script for javascript well because style
03:52 - is css we use the word style
03:56 - but in this one we're not going to use
03:59 - the open bracket
04:00 - close bracket so remember how um we use
04:02 - open marker close bracket for this one
04:04 - we're going to use
04:04 - style equals and that's just because
04:07 - that's the syntax for css
04:09 - so in css we use style equals
04:12 - um or we use color equals
04:15 - um this is a little bit tricky it's like
04:18 - css formatted in html
04:20 - we're not going to get into it super
04:21 - today because we don't have our css
04:23 - lessons yet
04:24 - but when we get back into css i'll talk
04:26 - about this more but you don't need it
04:27 - for today
04:28 - um inline styling syntax explained so
04:30 - the style attribute declares what you're
04:32 - going to add to style
04:34 - so this tells us that it's going to be a
04:36 - css
04:37 - and this tells us what we're adding so
04:39 - it tells us it's going to be a css
04:41 - the color property is set to the value
04:44 - blue
04:44 - this is called declaration so
04:46 - declaration means that we're
04:48 - declaring so i'm sitting here and i'm
04:50 - saying the color
04:51 - is blue that's what's known as a
04:54 - declaration
04:55 - and that's what we're doing basically by
04:57 - saying the statement so we're saying the
04:58 - style
04:59 - of this is that the color is blue and
05:01 - that is our declaration and that's
05:03 - basically what
05:04 - from this semicolon forward means
05:07 - um properties are separated with a colon
05:10 - so
05:10 - this semicolon or sorry
05:14 - declarations are separated by the
05:15 - semicolon but properties are separated
05:17 - with a colon
05:18 - i don't like to think of this as
05:19 - separating a property um i just think of
05:22 - this as listing the attributes of the
05:24 - property so
05:25 - the color think of this as is so think
05:28 - of this
05:29 - semicolon as an is so color is
05:32 - blue break text align
05:36 - is center so we line our text in the
05:38 - center
05:40 - um that's an easier way to think about
05:41 - it if you think about it in like word
05:43 - blocks
05:43 - but yeah we're not going to use a whole
05:45 - lot of this today but it's an
05:46 - interesting feature
05:47 - um to know about so display information
05:51 - in a table format
05:52 - there are four tags associated with
05:54 - tables four
05:55 - table we define that we have a table
05:58 - tr divides a row within the table so tr
06:02 - think of it as table row th
06:05 - defines header so table header the first
06:08 - row
06:08 - should contain every single header so
06:11 - say if you wanted to have like a column
06:12 - that was like
06:13 - times of day and like the activity you
06:16 - were doing
06:16 - that first row would be like activities
06:19 - or it would be
06:20 - the times you know what i'm saying um
06:23 - and then
06:23 - td defines individual cells um
06:27 - why is it d i don't know but it
06:30 - it is um so this table
06:34 - right here this is the code that is
06:37 - this table so we have table
06:41 - tr so we have our tr here oh my gosh can
06:45 - that go away
06:47 - sorry i'm trying to let me make pointers
06:49 - so it maybe will go away
06:51 - okay so th header is the name
06:55 - age is the name or yes so name
06:59 - h we have that um sam
07:02 - 18 is our content in the cells
07:05 - of our table um again won't be using
07:08 - that today but it's interesting thing to
07:10 - look at
07:11 - um table examples this is our css so
07:15 - this tells us
07:16 - like the border width of these boxes and
07:18 - that we have boxes
07:20 - but this is the html code for
07:23 - this yeah
07:27 - thumbs up thumbs down yes no maybe
07:34 - any questions
07:38 - okay i see a chat do we need to merge
07:41 - the two different codes
07:44 - um okay yeah so there's nothing like
07:46 - merging
07:48 - really happening um when we go into the
07:50 - example i'll point out but basically how
07:52 - you do it
07:53 - is you like link
07:56 - your different sheets to your html sheet
07:59 - so in your html
08:01 - i'm going to look there and i'm going to
08:02 - have something that says like
08:04 - css sheet equals style.css
08:08 - is stylesheet very rough but
08:12 - that basically says that everything css
08:14 - in this html code
08:16 - is going to be found in this style sheet
08:19 - so that's basically how replied does it
08:20 - replit and like a lot of other programs
08:22 - have html css and javascript because
08:25 - they all have different syntax they're
08:26 - all different coding languages they all
08:27 - have different styles
08:28 - and while they work really really well
08:30 - together they're best friends they're
08:31 - all still different
08:33 - so by having all of these
08:36 - different things we just link them
08:38 - together in the html file and i can show
08:41 - you how to do that we're going to talk
08:42 - about that later
08:43 - so forms used to get user input such as
08:45 - text drop down
08:46 - um three important tags related to forms
08:48 - form enclosed all the different elements
08:50 - label use before input element to label
08:53 - it input
08:54 - an element with many different options
08:55 - for input so
08:57 - kinds of form inputs um see the inputs
09:01 - text radio button check box button
09:05 - number we're going to see a lot of these
09:07 - text inputs today because our project
09:10 - sneak peek is a mad libs and
09:13 - a lot of the mad libs questions are like
09:16 - input a noun here
09:17 - and those are examples of text inputs
09:20 - because they're words
09:21 - but if we want to say um say we wanted
09:23 - to make like a math problem
09:26 - in html or in css and javascript we
09:28 - would use a number input because we want
09:30 - to have a number input answer
09:32 - so they're different inputs and that's
09:34 - what they're used for they're using
09:35 - different circumstances
09:37 - um so this is a form example
09:40 - if you want to learn more about it check
09:42 - the link out below after class but it's
09:45 - definitely an interesting thing to do
09:47 - so like first name this would be a text
09:49 - input last name would also be a text
09:51 - input
09:52 - this would be a checkbox input because
09:54 - you're checking
09:56 - you're either checking it or you're not
09:58 - checking it um
10:00 - interesting but these are the ones we're
10:03 - going to talk about
10:04 - mostly today and you're going to see the
10:05 - examples of those in roughly
10:07 - so we're here at workshop mad libs
10:10 - i'm going to drop this in the chat but
10:13 - before i drop it in the chat
10:15 - i want to really emphasize the fact that
10:18 - we are not
10:19 - going to edit that reply
10:22 - we are going to fork it and then we are
10:24 - going to edit it we had a couple
10:25 - instances of people just going in and
10:27 - then editing that reply
10:28 - that replie is meant to be a pristine
10:30 - copy of code that is functioning and
10:32 - working
10:33 - and by editing that one we can't
10:34 - guarantee that it's going to work and
10:36 - then people want to go back
10:37 - check their work and we need to make
10:39 - sure that that one maintains integrity
10:41 - if you don't know how to fork it wait
10:43 - for me
10:45 - yeah i see some questions about forking
10:47 - if you don't know what forking is
10:48 - i will explain that right now but
10:51 - please be sure to fork it and if you
10:54 - don't have a replant account
10:55 - and you're like the person i talked to
10:57 - earlier stay and i will find a way for
11:00 - the code to work for you because i know
11:02 - i can format it in a couple different
11:04 - interfaces so i'm going to click this
11:06 - link to join it
11:09 - if you click that link when i put in the
11:11 - chat you're going to get taken
11:13 - to this that's probably christian um
11:16 - you're going to get taken to the code
11:19 - we're going to click
11:20 - this button this button so it's going to
11:22 - say willa html mad libs because i
11:24 - created it it's the html it's mad libs
11:27 - we're going to click that button i'm
11:28 - going to go all the way down here it's a
11:30 - little tiny teeny button
11:31 - it's a teeny teeny tiny button we're
11:33 - going to call it fork i'm going to click
11:34 - that
11:36 - it's going to say forking and then all
11:38 - of a sudden just going to take us to a
11:39 - new window
11:41 - and it's gonna say willa html mad libs
11:43 - dash one
11:44 - or like dash two or whatever it's gonna
11:46 - be a number
11:47 - but now you're gonna notice that the
11:49 - person that was here is no longer here
11:51 - because this is now my own copy of the
11:53 - code
11:54 - and i can edit it and nothing will
11:57 - happen to the original code which is
11:59 - good because you can always save the
12:00 - original code
12:01 - and if something happens to this code
12:03 - and whatever you can always go back to
12:04 - the original
12:05 - fork it and try again we good we good we
12:08 - good
12:09 - okay so now i'm gonna go through some
12:11 - really cool stuff
12:12 - in the code so first of all i want
12:15 - everyone to take a look just at my
12:17 - screen first because you're gonna have
12:18 - the exact same thing on your screen
12:20 - so my screen first just we know we're
12:22 - all at the same page
12:24 - this right here is an example of a
12:27 - comment
12:28 - so notice how it's gray and it's sort of
12:30 - a little bit lighter than the rest of
12:32 - the code this is an example of an html
12:33 - comment i know we talked about that a
12:35 - little bit earlier
12:35 - but i just wanted to give a nice example
12:37 - just so that everyone could be
12:39 - familiar with what that is um
12:42 - this is again our html opening bracket
12:44 - this is our
12:47 - our like utilitarian data do not touch
12:51 - this
12:52 - like just don't it just tells us our
12:54 - character set
12:55 - this is in english um it tells us that
12:58 - like our
12:59 - width should be our device with and like
13:01 - all of the other like
13:02 - just cody bits that we don't need to
13:03 - deal with so it's not content so just
13:06 - don't touch it
13:07 - um but yeah so harry potter mad libs
13:10 - that's what this is i made an example
13:12 - for harry potter i did a harry potter
13:13 - website last week
13:14 - i like harry potter um and it's also
13:17 - just easy to do
13:18 - so i just ran the code so you can see
13:20 - the output as well
13:21 - um so this imports the web pages style
13:24 - sheet i remember there was a question
13:26 - about linking two sites
13:27 - together if you notice on this side
13:29 - we're gonna have a index.html
13:31 - main.css main.javascript
13:35 - this says we're going to link our
13:38 - main.css
13:39 - file stylesheet and it's a
13:42 - type text is css so that basically means
13:45 - a css file
13:46 - in css controls this
13:50 - style elements of this web page and you
13:52 - can find it
13:53 - right here and that basically just links
13:56 - this file
13:57 - to this one you don't need to worry
13:59 - about that today we're not going to
14:00 - really do that much css today we're
14:02 - saving that for
14:03 - a couple weeks down the line i think we
14:04 - have one more week of html and then we
14:06 - get into css
14:08 - so if you're holding out to make some
14:09 - pretty like color web pages
14:12 - just hold out for two more weeks i know
14:14 - it's so much fun um
14:16 - but now we're going to get into the web
14:17 - pages html code
14:19 - so what are we going to use we're going
14:20 - to use these text input boxes
14:23 - i have a bunch of test stuff here that i
14:25 - was using from before
14:26 - ignore that but we have a bunch of
14:30 - test text input boxes here and that's
14:33 - what these are
14:34 - so if you see we have name input type
14:38 - text id person
14:41 - and now these all have different parts
14:43 - but i'm going to go through them one by
14:45 - one because they're the same for each of
14:46 - them
14:47 - name so this right here in between the
14:49 - paragraph tags is what shows up
14:51 - right here so whatever you put in
14:53 - between here is going to show up right
14:55 - here
14:57 - cool fun fresh fantastic that gives
14:59 - people what
15:01 - what about coding on a blank page are
15:03 - you going to cover that
15:05 - um what do you mean code like you just
15:07 - like open a rebel and it's completely
15:08 - blank is that what that question means
15:14 - yes okay so if you open up a replit
15:17 - if it's an html like okay if you have a
15:20 - replit account and you
15:21 - don't know this you can make a bunch of
15:23 - different styles of code so i can open
15:25 - up a reply and make a python file i can
15:27 - make a java file i can make a javascript
15:29 - file
15:30 - um html isn't really like that so
15:34 - html is going to give you like a lot of
15:37 - this stuff
15:39 - it's just not that fun to code um but
15:43 - i think like the final project in this
15:46 - course is like
15:46 - you guys make your own project and we're
15:49 - just here to help you
15:50 - so i think that comes up then but you
15:52 - need a lot more skill set
15:54 - stuff before we just get into like
15:56 - throwing you guys into an empty web page
15:57 - and saying
15:58 - make something awesome so i think that
16:00 - does get covered in this course but it's
16:02 - like way down the line because you need
16:03 - to learn javascript first you need to
16:04 - learn
16:05 - css stuff first you need to learn how to
16:06 - link it all together you need to know
16:08 - how it works together
16:09 - so that's way down the line but i think
16:10 - we do cover it anyway
16:12 - getting back to this name this is what
16:14 - shows up on screen
16:15 - input type text that basically just
16:17 - gives me an input box and it says
16:19 - what's going to go in this box is text
16:23 - i know we covered that a little bit but
16:24 - yeah this id
16:27 - and you're going to see it in each one
16:28 - so this one says id person id
16:30 - thing id verb id location id names
16:33 - this id tag is how this
16:37 - variable is going to be because it's a
16:39 - variable it's a none
16:40 - it's an unknown input into a web page
16:42 - it's called variable
16:44 - this id tag is going to be how the
16:47 - computer
16:48 - tells what that like how it identifies
16:52 - that input text variable
16:55 - i know that's just like a bunch of
16:57 - really weird
16:59 - code language but i will show you this
17:01 - in javascript
17:02 - so remember how we have this input file
17:06 - and it says id person so name says id
17:08 - person
17:09 - if we go into our javascript file
17:12 - variable person remember that
17:16 - so our name is actually a variable
17:19 - ver v-a-r called person
17:22 - and we id'd it as quote person
17:26 - so that the computer can identify it as
17:29 - quote
17:30 - person and make it a variable that is
17:32 - named person
17:33 - and therefore we can refer to that in
17:36 - our different web pages
17:37 - so notice how it says person is now a
17:40 - variable
17:40 - in a different part of our web page
17:43 - that's because we were able to
17:45 - ideate and initialize it in our html
17:47 - file
17:48 - it's really tricky and if you have some
17:50 - trouble with it let me know
17:52 - but basically it initializes it as a
17:54 - person
17:55 - and then we can use it here to set it
17:58 - again to person
17:59 - and then use it again here to put it in
18:02 - our story
18:04 - so as an example i think i'm gonna run
18:06 - the webpage because i think that's gonna
18:08 - make a little bit more sense
18:10 - so i'm gonna put a name it's a harry
18:12 - potter story so i'm going to say ron
18:15 - um noun plural um
18:18 - spiders because if anyone knows the
18:21 - harry potter series they know ron and
18:23 - spiders have a thing
18:25 - verb i'm going to say
18:29 - you know keep it silly keep it fun a
18:31 - location
18:33 - um hogsmeade
18:37 - and names i'm going to say harry and
18:40 - hermione
18:42 - so i'm going to say now create lip
18:46 - and what does it say ron ran down the
18:48 - stairs to find what he feared most
18:51 - spiders they came at him too quickly
18:53 - they didn't know how to stop the spiders
18:55 - they swam to hogsmeade and when they got
18:58 - there they saw
18:59 - harry and hermione who helped them
19:00 - defeat the spiders then they all went to
19:03 - the great hall for dinner
19:05 - so basically what just happened is our
19:08 - index.html file took my
19:12 - text input ron made it a variable
19:16 - made that variable and called it person
19:20 - went into the javascript file said okay
19:23 - variable person
19:25 - equals dot get element by id
19:29 - person so we go to a document get the
19:33 - element
19:34 - by its identification which we called
19:36 - person
19:37 - person give it a value and then stick it
19:41 - back in when we need it at this given
19:44 - point
19:45 - does that make sense because that's the
19:48 - core
19:48 - coding lesson we're trying to teach
19:50 - today so does that make
19:52 - sense yes no maybe thumbs up thumbs down
19:55 - questions i understand if there's
19:57 - questions i know it's complicated
20:00 - i'm gonna go into the chat yes maybe
20:02 - kind of
20:03 - okay is there anything that i can do to
20:05 - help make the kind of a little bit
20:08 - not a kind of not really
20:13 - we're not coding anything right now i'm
20:14 - just trying to explain the code
20:17 - but if you want to fork it like if you
20:19 - are listening to me
20:20 - and you fork the replay and you're like
20:22 - this girl is telling me nothing new i
20:24 - already know everything she's saying
20:26 - then feel free like
20:27 - go play with the replit go have fun
20:30 - but if you wanna stick around i will be
20:33 - explaining it
20:34 - okay for the people who said kind of i
20:36 - want to make it a yes
20:38 - so is there anything that i can do to
20:40 - like
20:41 - help you understand it like is there a
20:42 - question we have is there
20:44 - is it just like we need to go over it
20:46 - again what's up
20:57 - i'm waiting for some chats but i don't
20:58 - see any
21:03 - okay chats the javascript part
21:07 - okay yeah for sure for sure so
21:12 - i'm going to go over the javascript
21:13 - first because that was the first request
21:14 - that came in
21:15 - so we're in our javascript file this is
21:19 - javascript
21:19 - this is no longer html this is no longer
21:22 - css this is javascript
21:24 - and it's in a javascript file
21:27 - now we're gonna go through each
21:30 - different part these if you've noticed
21:33 - is basically just the same thing over
21:34 - and over again with different things
21:36 - so i'm just gonna go through one of them
21:38 - and
21:39 - when you ran the tab and it brought the
21:41 - story yeah
21:43 - for sure okay so that's actually a
21:46 - different part of our code
21:48 - that's actually this so
21:53 - um basically the javascript basically
21:57 - this is a function in javascript so in
22:00 - javascript we have things called
22:01 - functions
22:02 - and what functions do is you can just
22:04 - make them do whatever you want to
22:07 - so this function is called madlibs this
22:10 - is the syntax for a java function you
22:12 - say it's a function
22:13 - we're gonna name it madlibs it's gonna
22:16 - well this is a null
22:17 - it's a void function because see if you
22:19 - see that it says
22:20 - it's a void function and that's because
22:22 - there's nothing in here so if you have
22:23 - that question come back i'm sharing my
22:25 - screen we're going through it again
22:26 - we're talking about which stuff we can
22:28 - touch what stuff we can't what stuff
22:30 - is for us to play around with
22:34 - okay so hopefully everyone can see my
22:36 - screen and everyone is here that needs
22:38 - to be here who wants to be here
22:40 - cool so this title
22:44 - basically anything in like black right
22:46 - now
22:47 - um this is the html file i'm gonna go
22:50 - through the javascript file separately
22:52 - um css like there's nothing really in
22:55 - css this just tells us like
22:57 - the container stuff um
23:01 - html anything so head
23:05 - don't touch this don't touch head title
23:08 - change title um this
23:12 - don't touch this don't touch the links
23:14 - to the
23:15 - s style sheet and at the bottom here
23:18 - you're going to see
23:18 - importing the web pages javascript file
23:21 - don't touch that either
23:23 - um button unless you
23:27 - know how to make a button again i
23:29 - wouldn't recommend touching this
23:32 - i really wouldn't um i know i said
23:34 - anything in the block this is an
23:35 - exception
23:36 - do not touch this unless you know how to
23:38 - make a button and can like
23:39 - redo that because if you just delete it
23:41 - and then don't remember how to make it
23:42 - again
23:43 - it won't work and there will be no
23:45 - button
23:46 - so um this
23:50 - body stuff up until that first divider
23:52 - is basically what we're going to be
23:54 - playing around with
23:54 - in the html file i saw there was a
23:56 - question on because i think that's
23:57 - really important
23:58 - okay so sure screen screen
24:01 - share what is div i saw that question
24:04 - right before
24:05 - divis stands for divider um so it just
24:08 - like divides up the sections of the code
24:10 - so it's not just like
24:11 - one long blurb um
24:15 - it's also just for like
24:18 - aesthetics sake too um
24:22 - yeah um i'm really hoping that wasn't a
24:24 - question because
24:25 - i can't like see the chat right now i
24:27 - don't know what's going on anyway
24:29 - so this change because that changes
24:33 - what shows up on screen here so change
24:34 - that um
24:36 - input type text unless you want to input
24:38 - numbers don't change that
24:40 - ids you need to change the ids unless
24:43 - you want it to be
24:44 - the same ids in the same spot you need
24:46 - to change the ids
24:48 - now if you touch the ids so say i change
24:51 - this to person one
24:54 - crazy i know if we go into the main
24:56 - javascript file
24:58 - we need to find person and we also need
25:00 - to change it
25:02 - this to person one and we need to change
25:06 - this to person one and we need to change
25:09 - this to person one they all need to
25:12 - match
25:13 - so if you change the ids write them down
25:16 - take a photo or whatever because they
25:18 - need to be the same in the javascript
25:19 - file
25:20 - if they're not the same you're gonna see
25:22 - an error that says like
25:23 - um void like javascript void cannot
25:26 - define
25:27 - function and that basically just means
25:29 - it's trying to define something that
25:31 - doesn't exist
25:32 - because if those things don't match it
25:34 - can't match them up and therefore it
25:36 - will think that they just don't exist
25:38 - and the compiler won't compile so you
25:41 - need to make sure that they match that's
25:42 - one of the most important things you can
25:43 - do
25:45 - um change the variable names if you want
25:49 - this document.getelementbyid don't touch
25:52 - that
25:52 - um it's a special tag don't don't touch
25:54 - it and this dot value don't touch it but
25:56 - anything
25:56 - that's like person one um person one
25:59 - like change these variable names
26:01 - and mystory.innerhtml equals don't touch
26:05 - this
26:06 - but anything else touch for this
26:10 - it's weird how you edit it basically if
26:12 - you want it put a variable in
26:14 - you get the variable name you put plus
26:17 - variable name plus anything in red
26:21 - is the words that were going to show up
26:23 - on the screen regardless and are not
26:25 - variables
26:26 - so yeah change the red stuff but if you
26:29 - want to insert one of your variables
26:31 - because it's mad libs
26:32 - you end your quotation marks so
26:36 - each red is in closing quotation marks
26:37 - you end your quotation marks
26:39 - you plus thing so plus variable name
26:43 - plus quotation marks again and then we
26:46 - can start our write again
26:47 - um yes we don't have class next week if
26:49 - you're coming back i will see you
26:51 - january 2nd
26:52 - have a great holiday everyone stay safe
26:55 - have a great holiday um avni if you're
26:59 - still here i will answer this question
27:02 - do we turn this in yeah you can turn
27:03 - this in if you want to it's in the
27:04 - google form it was in the original chat
27:06 - um but the link will also be in the
27:08 - discord
27:10 - yeah it's in a google form oh good omni
27:13 - you fixed it yeah
27:14 - so that's the error that happens when um
27:17 - the
27:19 - like you don't match up your variable
27:20 - names in the javascript and in the
27:22 - html so that's a really good it's a good
27:24 - error to have because it teaches you
27:26 - yeah hi thank you guys happy holidays
27:29 - have a good one
27:30 - see you in two weeks um stay if you have
27:32 - questions though because i'll be happy
27:33 - to answer them and i will stop recording
27:34 - now

Cleaned transcript:

first of all we're gonna talk about comments so this is html part two um there was a couple comments in the code last week there are a couple this week i mean i made the example so i'm trying to think um there's a few um you used to leave little notes in your html document um these do not affect the integrity of your code they don't add anything to your code except for a comment and only the person who wrote the code can see them so they're in your code they just are helpful little notes but they don't like make anything run so say if you wanted to add an image you can't do that in a comment because the comment doesn't affect the code um to do that carrot bracket exclamation point dash dash that's basically our syntax for comments so carat exclamation point um dash dash is your opening tag however fun thing to note i know that we just went over in a kahoot that the closing tag for html is slash care bracket um not for comments comments are a special one and we're just going to use dash dash carrot bracket so that's a fun one just remember but you will also notice that you're doing a comment correctly when the comment turns gray so a lot of your code it's like black or some elements turn blue or purple but comments are always gray so that's to know how comments have been initiated because they're always gray so inline scripting this is a little bit of a fun little thing inline scripting is contained directly in an html code so that basically means that our javascript functions are javascript but they're going to be in our html document um you don't see those a whole lot but they can be used for like little javascript things in an html website uh using it requires the script tag which we talked a little bit about earlier so this is to embed javascript within an html file um it's a little bit tricky but it's not for your entire javascript file it's for like little little things so this one shows an alert which pops up as like a little one of those like little web pages um but that's what this is for this is not for like making your website do all of its javascript functions this is for very very little details and i want to emphasize that because if you use this script tag and you paste your entire javascript file into there or at least the contents of it it will not it like it just won't work the way you want it to it might not even like function as code so i want you to make sure that you're only using this for like little things um if you want to use an alert you can also just be used the alert function but that's a javascript thing so this would be used to make this but in the javascript file i see a question what type of code is this again so this is actually two types of code um that we're seeing here on the web page this is javascript so this alert open bracket close bracket that is javascript and that's a javascript function which we'll get into later because you're going to see them in our example today but this chara bracket script um care bracket dash script that is html so it's really interesting but html javascript and css all go hand in hand so you're going to see all of them in web pages um inline styling so basically remember what we did with javascript where we said okay little things that we can do with javascript we can put them in our html file well we can do this exact same thing with css so um inline styling css code contained within the individual lines of html use the style attribute so remember how we use script for javascript well because style is css we use the word style but in this one we're not going to use the open bracket close bracket so remember how um we use open marker close bracket for this one we're going to use style equals and that's just because that's the syntax for css so in css we use style equals um or we use color equals um this is a little bit tricky it's like css formatted in html we're not going to get into it super today because we don't have our css lessons yet but when we get back into css i'll talk about this more but you don't need it for today um inline styling syntax explained so the style attribute declares what you're going to add to style so this tells us that it's going to be a css and this tells us what we're adding so it tells us it's going to be a css the color property is set to the value blue this is called declaration so declaration means that we're declaring so i'm sitting here and i'm saying the color is blue that's what's known as a declaration and that's what we're doing basically by saying the statement so we're saying the style of this is that the color is blue and that is our declaration and that's basically what from this semicolon forward means um properties are separated with a colon so this semicolon or sorry declarations are separated by the semicolon but properties are separated with a colon i don't like to think of this as separating a property um i just think of this as listing the attributes of the property so the color think of this as is so think of this semicolon as an is so color is blue break text align is center so we line our text in the center um that's an easier way to think about it if you think about it in like word blocks but yeah we're not going to use a whole lot of this today but it's an interesting feature um to know about so display information in a table format there are four tags associated with tables four table we define that we have a table tr divides a row within the table so tr think of it as table row th defines header so table header the first row should contain every single header so say if you wanted to have like a column that was like times of day and like the activity you were doing that first row would be like activities or it would be the times you know what i'm saying um and then td defines individual cells um why is it d i don't know but it it is um so this table right here this is the code that is this table so we have table tr so we have our tr here oh my gosh can that go away sorry i'm trying to let me make pointers so it maybe will go away okay so th header is the name age is the name or yes so name h we have that um sam 18 is our content in the cells of our table um again won't be using that today but it's interesting thing to look at um table examples this is our css so this tells us like the border width of these boxes and that we have boxes but this is the html code for this yeah thumbs up thumbs down yes no maybe any questions okay i see a chat do we need to merge the two different codes um okay yeah so there's nothing like merging really happening um when we go into the example i'll point out but basically how you do it is you like link your different sheets to your html sheet so in your html i'm going to look there and i'm going to have something that says like css sheet equals style.css is stylesheet very rough but that basically says that everything css in this html code is going to be found in this style sheet so that's basically how replied does it replit and like a lot of other programs have html css and javascript because they all have different syntax they're all different coding languages they all have different styles and while they work really really well together they're best friends they're all still different so by having all of these different things we just link them together in the html file and i can show you how to do that we're going to talk about that later so forms used to get user input such as text drop down um three important tags related to forms form enclosed all the different elements label use before input element to label it input an element with many different options for input so kinds of form inputs um see the inputs text radio button check box button number we're going to see a lot of these text inputs today because our project sneak peek is a mad libs and a lot of the mad libs questions are like input a noun here and those are examples of text inputs because they're words but if we want to say um say we wanted to make like a math problem in html or in css and javascript we would use a number input because we want to have a number input answer so they're different inputs and that's what they're used for they're using different circumstances um so this is a form example if you want to learn more about it check the link out below after class but it's definitely an interesting thing to do so like first name this would be a text input last name would also be a text input this would be a checkbox input because you're checking you're either checking it or you're not checking it um interesting but these are the ones we're going to talk about mostly today and you're going to see the examples of those in roughly so we're here at workshop mad libs i'm going to drop this in the chat but before i drop it in the chat i want to really emphasize the fact that we are not going to edit that reply we are going to fork it and then we are going to edit it we had a couple instances of people just going in and then editing that reply that replie is meant to be a pristine copy of code that is functioning and working and by editing that one we can't guarantee that it's going to work and then people want to go back check their work and we need to make sure that that one maintains integrity if you don't know how to fork it wait for me yeah i see some questions about forking if you don't know what forking is i will explain that right now but please be sure to fork it and if you don't have a replant account and you're like the person i talked to earlier stay and i will find a way for the code to work for you because i know i can format it in a couple different interfaces so i'm going to click this link to join it if you click that link when i put in the chat you're going to get taken to this that's probably christian um you're going to get taken to the code we're going to click this button this button so it's going to say willa html mad libs because i created it it's the html it's mad libs we're going to click that button i'm going to go all the way down here it's a little tiny teeny button it's a teeny teeny tiny button we're going to call it fork i'm going to click that it's going to say forking and then all of a sudden just going to take us to a new window and it's gonna say willa html mad libs dash one or like dash two or whatever it's gonna be a number but now you're gonna notice that the person that was here is no longer here because this is now my own copy of the code and i can edit it and nothing will happen to the original code which is good because you can always save the original code and if something happens to this code and whatever you can always go back to the original fork it and try again we good we good we good okay so now i'm gonna go through some really cool stuff in the code so first of all i want everyone to take a look just at my screen first because you're gonna have the exact same thing on your screen so my screen first just we know we're all at the same page this right here is an example of a comment so notice how it's gray and it's sort of a little bit lighter than the rest of the code this is an example of an html comment i know we talked about that a little bit earlier but i just wanted to give a nice example just so that everyone could be familiar with what that is um this is again our html opening bracket this is our our like utilitarian data do not touch this like just don't it just tells us our character set this is in english um it tells us that like our width should be our device with and like all of the other like just cody bits that we don't need to deal with so it's not content so just don't touch it um but yeah so harry potter mad libs that's what this is i made an example for harry potter i did a harry potter website last week i like harry potter um and it's also just easy to do so i just ran the code so you can see the output as well um so this imports the web pages style sheet i remember there was a question about linking two sites together if you notice on this side we're gonna have a index.html main.css main.javascript this says we're going to link our main.css file stylesheet and it's a type text is css so that basically means a css file in css controls this style elements of this web page and you can find it right here and that basically just links this file to this one you don't need to worry about that today we're not going to really do that much css today we're saving that for a couple weeks down the line i think we have one more week of html and then we get into css so if you're holding out to make some pretty like color web pages just hold out for two more weeks i know it's so much fun um but now we're going to get into the web pages html code so what are we going to use we're going to use these text input boxes i have a bunch of test stuff here that i was using from before ignore that but we have a bunch of test text input boxes here and that's what these are so if you see we have name input type text id person and now these all have different parts but i'm going to go through them one by one because they're the same for each of them name so this right here in between the paragraph tags is what shows up right here so whatever you put in between here is going to show up right here cool fun fresh fantastic that gives people what what about coding on a blank page are you going to cover that um what do you mean code like you just like open a rebel and it's completely blank is that what that question means yes okay so if you open up a replit if it's an html like okay if you have a replit account and you don't know this you can make a bunch of different styles of code so i can open up a reply and make a python file i can make a java file i can make a javascript file um html isn't really like that so html is going to give you like a lot of this stuff it's just not that fun to code um but i think like the final project in this course is like you guys make your own project and we're just here to help you so i think that comes up then but you need a lot more skill set stuff before we just get into like throwing you guys into an empty web page and saying make something awesome so i think that does get covered in this course but it's like way down the line because you need to learn javascript first you need to learn css stuff first you need to learn how to link it all together you need to know how it works together so that's way down the line but i think we do cover it anyway getting back to this name this is what shows up on screen input type text that basically just gives me an input box and it says what's going to go in this box is text i know we covered that a little bit but yeah this id and you're going to see it in each one so this one says id person id thing id verb id location id names this id tag is how this variable is going to be because it's a variable it's a none it's an unknown input into a web page it's called variable this id tag is going to be how the computer tells what that like how it identifies that input text variable i know that's just like a bunch of really weird code language but i will show you this in javascript so remember how we have this input file and it says id person so name says id person if we go into our javascript file variable person remember that so our name is actually a variable ver var called person and we id'd it as quote person so that the computer can identify it as quote person and make it a variable that is named person and therefore we can refer to that in our different web pages so notice how it says person is now a variable in a different part of our web page that's because we were able to ideate and initialize it in our html file it's really tricky and if you have some trouble with it let me know but basically it initializes it as a person and then we can use it here to set it again to person and then use it again here to put it in our story so as an example i think i'm gonna run the webpage because i think that's gonna make a little bit more sense so i'm gonna put a name it's a harry potter story so i'm going to say ron um noun plural um spiders because if anyone knows the harry potter series they know ron and spiders have a thing verb i'm going to say you know keep it silly keep it fun a location um hogsmeade and names i'm going to say harry and hermione so i'm going to say now create lip and what does it say ron ran down the stairs to find what he feared most spiders they came at him too quickly they didn't know how to stop the spiders they swam to hogsmeade and when they got there they saw harry and hermione who helped them defeat the spiders then they all went to the great hall for dinner so basically what just happened is our index.html file took my text input ron made it a variable made that variable and called it person went into the javascript file said okay variable person equals dot get element by id person so we go to a document get the element by its identification which we called person person give it a value and then stick it back in when we need it at this given point does that make sense because that's the core coding lesson we're trying to teach today so does that make sense yes no maybe thumbs up thumbs down questions i understand if there's questions i know it's complicated i'm gonna go into the chat yes maybe kind of okay is there anything that i can do to help make the kind of a little bit not a kind of not really we're not coding anything right now i'm just trying to explain the code but if you want to fork it like if you are listening to me and you fork the replay and you're like this girl is telling me nothing new i already know everything she's saying then feel free like go play with the replit go have fun but if you wanna stick around i will be explaining it okay for the people who said kind of i want to make it a yes so is there anything that i can do to like help you understand it like is there a question we have is there is it just like we need to go over it again what's up i'm waiting for some chats but i don't see any okay chats the javascript part okay yeah for sure for sure so i'm going to go over the javascript first because that was the first request that came in so we're in our javascript file this is javascript this is no longer html this is no longer css this is javascript and it's in a javascript file now we're gonna go through each different part these if you've noticed is basically just the same thing over and over again with different things so i'm just gonna go through one of them and when you ran the tab and it brought the story yeah for sure okay so that's actually a different part of our code that's actually this so um basically the javascript basically this is a function in javascript so in javascript we have things called functions and what functions do is you can just make them do whatever you want to so this function is called madlibs this is the syntax for a java function you say it's a function we're gonna name it madlibs it's gonna well this is a null it's a void function because see if you see that it says it's a void function and that's because there's nothing in here so if you have that question come back i'm sharing my screen we're going through it again we're talking about which stuff we can touch what stuff we can't what stuff is for us to play around with okay so hopefully everyone can see my screen and everyone is here that needs to be here who wants to be here cool so this title basically anything in like black right now um this is the html file i'm gonna go through the javascript file separately um css like there's nothing really in css this just tells us like the container stuff um html anything so head don't touch this don't touch head title change title um this don't touch this don't touch the links to the s style sheet and at the bottom here you're going to see importing the web pages javascript file don't touch that either um button unless you know how to make a button again i wouldn't recommend touching this i really wouldn't um i know i said anything in the block this is an exception do not touch this unless you know how to make a button and can like redo that because if you just delete it and then don't remember how to make it again it won't work and there will be no button so um this body stuff up until that first divider is basically what we're going to be playing around with in the html file i saw there was a question on because i think that's really important okay so sure screen screen share what is div i saw that question right before divis stands for divider um so it just like divides up the sections of the code so it's not just like one long blurb um it's also just for like aesthetics sake too um yeah um i'm really hoping that wasn't a question because i can't like see the chat right now i don't know what's going on anyway so this change because that changes what shows up on screen here so change that um input type text unless you want to input numbers don't change that ids you need to change the ids unless you want it to be the same ids in the same spot you need to change the ids now if you touch the ids so say i change this to person one crazy i know if we go into the main javascript file we need to find person and we also need to change it this to person one and we need to change this to person one and we need to change this to person one they all need to match so if you change the ids write them down take a photo or whatever because they need to be the same in the javascript file if they're not the same you're gonna see an error that says like um void like javascript void cannot define function and that basically just means it's trying to define something that doesn't exist because if those things don't match it can't match them up and therefore it will think that they just don't exist and the compiler won't compile so you need to make sure that they match that's one of the most important things you can do um change the variable names if you want this document.getelementbyid don't touch that um it's a special tag don't don't touch it and this dot value don't touch it but anything that's like person one um person one like change these variable names and mystory.innerhtml equals don't touch this but anything else touch for this it's weird how you edit it basically if you want it put a variable in you get the variable name you put plus variable name plus anything in red is the words that were going to show up on the screen regardless and are not variables so yeah change the red stuff but if you want to insert one of your variables because it's mad libs you end your quotation marks so each red is in closing quotation marks you end your quotation marks you plus thing so plus variable name plus quotation marks again and then we can start our write again um yes we don't have class next week if you're coming back i will see you january 2nd have a great holiday everyone stay safe have a great holiday um avni if you're still here i will answer this question do we turn this in yeah you can turn this in if you want to it's in the google form it was in the original chat um but the link will also be in the discord yeah it's in a google form oh good omni you fixed it yeah so that's the error that happens when um the like you don't match up your variable names in the javascript and in the html so that's a really good it's a good error to have because it teaches you yeah hi thank you guys happy holidays have a good one see you in two weeks um stay if you have questions though because i'll be happy to answer them and i will stop recording now
