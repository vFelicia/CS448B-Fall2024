With timestamps:

00:00 - hi everyone if you don't know my name is
00:01 - willa and today we're gonna start
00:03 - something really really exciting and
00:05 - that's
00:05 - css so does anyone know
00:08 - what css stands for um you can drop it
00:12 - in the chat you can drop it in
00:14 - anything dynamic cascading styles
00:18 - yes cascading well it's cascading style
00:21 - sheets
00:21 - but yes you were very close um and
00:24 - that's what we're gonna be talking about
00:24 - today so today's lesson
00:26 - is css part one so we talked about html
00:29 - that's what we've been doing for the
00:30 - last couple of weeks
00:31 - um so html is basically like
00:35 - the bones of our web page and css is
00:39 - like the skin the muscles like the
00:41 - physical attributes of our webpage so
00:43 - it's actually
00:43 - what makes a web page look really really
00:45 - pretty and gives it all of its different
00:47 - style attributes
00:49 - so what is css we got into this today
00:52 - um we talked about html but with css we
00:54 - can modify colors
00:56 - font types font sizes shadows images
00:58 - elements sizes
01:00 - everything if you want to make something
01:02 - look a different way that's how you're
01:04 - going to do it you're going to do it
01:04 - through css
01:06 - so um how to approach
01:09 - styling which is what we call coding in
01:11 - css
01:12 - um first of all you want to decide your
01:14 - general style of the website so every
01:17 - what kind of color scheme are we going
01:18 - for what kind of font family are we
01:20 - going for
01:21 - what kind of style are we going for what
01:23 - kind of images do we want to have
01:25 - all these things very important to
01:26 - establish this
01:28 - decide the theme so color mood something
01:30 - related to the website
01:32 - remember the key elements of graphic
01:33 - design so good principles of ux and ui
01:36 - user interface
01:37 - user experience what's going to enhance
01:39 - the user experience what's going to
01:42 - keep people wanting to enjoy the website
01:45 - so
01:45 - high contrast text background make it
01:47 - easy to use um
01:49 - yeah don't use annoying colors like
01:51 - don't have yellow text on a white
01:54 - background common sense things and
01:56 - utilize white space
01:57 - for good effect
02:00 - [Music]
02:01 - so selectors now we're going to get into
02:03 - the code part of it
02:04 - um css so a lot of times when we talk
02:08 - about code we talk about
02:09 - syntax and the syntax is like the
02:12 - special ways we
02:13 - encode instructions to the computer well
02:17 - good news for everyone css has very
02:20 - little syntax and it's a lot of like
02:22 - whole
02:23 - real english words with just like
02:25 - semicolons and brackets
02:27 - so it's actually really easy to use um
02:29 - selectors are used to select which
02:31 - elements you're gonna style
02:32 - so does anyone take a guess
02:36 - at which part is the selector so we're
02:38 - going to take this example this text box
02:40 - here i'm going to use my pointer
02:41 - i'm going to take this text box here
02:43 - what is the selector
02:44 - the p the csx declarations go here
02:50 - or this line eight text align center
02:52 - does anyone want to take a guess
02:54 - what is the selector
03:01 - i have a chat yes it is the p
03:05 - it is the p so a selector is
03:09 - the so like the selector is selecting
03:12 - what will be affected by the css code so
03:15 - the selector
03:16 - here gives the style attributes
03:20 - for anything within the brackets does
03:22 - that make sense yes no maybe
03:25 - html and we have h1
03:28 - so but does everyone remember when we
03:30 - had our care bracket
03:31 - h1 and there was all these words in it
03:33 - and then closing
03:35 - well this cascading style sheets or the
03:38 - css file is going to link to the
03:40 - original html file the html web page
03:43 - so when we have this selector the
03:46 - selector
03:48 - p is saying all of the paragraphs
03:51 - so everything with a p tag so the
03:54 - selectors correspond to the tags
03:56 - so everything with a p tag everything
03:58 - that's a paragraph is going to follow
04:01 - these set style attributes
04:05 - so every selector corresponds
04:09 - to the tags in the html so
04:12 - h1 in html is the same thing as
04:16 - h1 here p in html
04:19 - is talking about the paragraph the same
04:22 - paragraph that is being talked about
04:24 - here so the selectors are the same
04:27 - things as the tags
04:28 - and they help us to identify what helps
04:31 - the computer identify
04:33 - what is being changed by the styling
04:36 - code here
04:42 - so can i give it like a a real world
04:44 - example
04:45 - that might help so say i have a bunch of
04:49 - shapes i have squares i have triangles i
04:51 - have
04:52 - circles i have diamonds
04:55 - my selector in that case so that's my
04:58 - html file my html file is
05:00 - squares diamond circles penta pentagons
05:05 - my selector in that case would be
05:09 - triangle yes
05:12 - my attributes here would be
05:15 - triangle color colon
05:18 - red does that help people does that help
05:22 - us understand what that is
05:24 - yes no maybe thumbs up thumbs down
05:30 - thumbs up i'm liking that that's good
05:33 - hopefully
05:33 - that was like a good explanation
05:38 - yeah okay i only saw one thumbs up um
05:42 - maybe nope okay another one i'm looking
05:46 - through
05:48 - is there more questions about that do we
05:50 - need to go through it again do we
05:52 - want to move on
06:04 - okay
06:06 - okay so i don't okay the general
06:08 - selector is more like an indicator right
06:10 - it
06:11 - indicates what the points below change
06:13 - the selector
06:15 - is no the selector is more like an
06:17 - identifier
06:18 - for the computers the computer like the
06:21 - selector
06:22 - it's more just like an identified tag
06:24 - like it says like
06:25 - that's what the id selector
06:29 - this is the id selector the selector and
06:31 - the id select are the same things
06:39 - okay yeah okay we're gonna go to the
06:42 - next slide because i think when we see
06:43 - it in the example it will help
06:44 - us make some more sense of it so tags
06:49 - the tag elements and style in the html
06:53 - can be applied to elements but some cps
06:54 - will not work for certain tags
06:56 - okay so font style of an image
07:00 - selects the body elements remember this
07:03 - this is our selector
07:05 - and it's selecting the body element
07:10 - yes so here we're calling it tags but
07:14 - it's the same thing it's the selector so
07:16 - the selector
07:18 - selects the body element
07:21 - here we're selecting the selector
07:24 - is selecting everything that is a table
07:28 - a th or a td so everything that has a
07:31 - tag
07:32 - table everything that has a th
07:34 - everything that has a td
07:38 - now css is also kind of smart so
07:42 - it can be applied to all elements like
07:44 - you can do things
07:45 - but like it's smart in the sense that it
07:48 - won't let you do things that are
07:49 - physically impossible
07:51 - so this is a great example if you have
07:54 - an
07:55 - image so this tag would say img because
07:57 - it's an image
07:58 - and you said font family
08:01 - helvetica it would say that doesn't make
08:05 - sense to me
08:06 - because you're telling it that i want
08:08 - you to be
08:09 - font helvetica but it's an image so it
08:12 - knows that it can't be
08:14 - fought yes so it works for things that
08:17 - it knows works
08:18 - which is good because if you're playing
08:20 - around with it it will tell you what it
08:22 - knows works and what doesn't
08:25 - okay yes i know it's a little confusing
08:28 - but i think the example will help us
08:31 - so class and id the class and id
08:34 - selectors
08:34 - select elements based on class id and
08:37 - name
08:38 - so you have different classes
08:42 - and we haven't really got into this
08:44 - because
08:46 - this was more something that the
08:47 - advanced group got into but basically
08:49 - there's
08:50 - classes and there's like there's classes
08:55 - and there's different types of stuff
08:56 - so these are just some different ones
09:00 - that we didn't really get into
09:02 - you're not going to be needing them
09:03 - today if you have questions about them
09:05 - or you want to integrate them to your
09:06 - project
09:07 - come ask me later but it's basically the
09:10 - same kind of syntax
09:11 - so all p elements with the label class
09:16 - so all paragraphs that are under the
09:19 - label class and that basically means
09:21 - that all paragraphs that are defined
09:25 - in the class label so all paragraphs
09:28 - that are labels
09:30 - will have the color gray it's weird but
09:34 - it's a way of identifying
09:36 - certain elements in grouping them
09:39 - so if i have a whole bunch of headers
09:42 - and i want them to all be in like a top
09:45 - like header bar
09:46 - i would maybe use like a label tag
09:48 - because
09:49 - then i can group them all and use them
09:51 - all and give them all the same syntax
09:53 - without having to write five different
09:55 - css functions so it's a really good way
09:59 - of like grouping things together
10:01 - but our projects so far are not going to
10:04 - be that complex
10:05 - so you won't need to worry about
10:07 - grouping a bunch of things together
10:09 - because you're not creating web pages
10:11 - with 500 different things on them
10:14 - so it's an interesting concept but
10:18 - what's a class label
10:22 - um it's interesting so
10:26 - which one you like from the before class
10:29 - label
10:31 - this is class selectors a class label
10:37 - no the question was about class labels
10:39 - so okay
10:42 - you know how you have binders so like if
10:44 - you go to school or you have gone to
10:45 - school
10:46 - you know how you have binders and you
10:47 - might have a binder that has
10:49 - your math work your history work and
10:51 - your um
10:53 - your math work and your history work and
10:55 - your science work
10:56 - yes i'm gonna use a real world example
10:58 - for this because i think that might be
10:59 - easier
11:00 - you have a binder with all these
11:01 - different subjects in it
11:03 - what do you do to divide that work you
11:05 - use these like plastic divider thingies
11:08 - i don't know the word for them but i
11:09 - think they're called dividers but you
11:10 - use these
11:11 - plastic dividers and they say okay all
11:14 - the work
11:15 - from this divider to the next divider is
11:18 - my math work
11:20 - right so a class
11:23 - label is basically saying
11:26 - if we think about it in terms of like
11:28 - the computer we can say for this example
11:30 - right here
11:31 - p label i have a binder
11:35 - and they're full of paragraphs right
11:37 - they're full of paragraphs every single
11:39 - thing in here is a paragraph
11:42 - i put a divider i put a couple dividers
11:44 - in instead of having a divider that says
11:46 - all of these paragraphs are math
11:49 - paragraphs
11:50 - right we can just say all of these
11:52 - paragraphs are
11:53 - under this label we don't have to give
11:56 - the label a name
11:57 - we can say all of these paragraphs are
11:59 - under this label
12:00 - and then we can take that label and
12:03 - stick it in the css and we can say okay
12:05 - all of the paragraphs under this label
12:09 - are going to be gray that's their
12:11 - defining characteristic
12:12 - not that they're about math not that
12:14 - they're about science they're defining
12:15 - to characteristic
12:16 - is that they are gray so all of the
12:18 - paragraphs in
12:20 - that divider or also known as label
12:23 - are gray does that explanation help
12:27 - does that explanation make sense i tried
12:29 - to give it a real world example i saw a
12:31 - chat come up
12:32 - basically yeah it gives each paragraph
12:36 - an identity yeah and it gives each
12:39 - paragraph the identity but it gives all
12:41 - of them
12:41 - basically to the css the same identity
12:46 - i'm getting some kind of i'm getting
12:47 - some yes i'm
12:49 - okay so i think that might help i'm
12:51 - gonna try and use some more real world
12:52 - examples because i feel like those are
12:53 - resonating and that's good because
12:55 - it's what about makes sense for you
12:58 - so we also have pseudo classes
13:02 - so this is a little bit interesting
13:05 - you're going to see one in the example
13:07 - today
13:08 - you don't have to touch it if you don't
13:09 - want to but you're going to see one in
13:11 - the example today i put it in
13:13 - pseudo classes are selectors used to
13:15 - define the
13:16 - style of an element when it's in a
13:19 - certain state
13:22 - that's a really long and convoluted
13:23 - sentence right okay
13:25 - so let's take our example that said
13:29 - remember our binder our binder that had
13:31 - all the paragraphs in it
13:32 - and we had our label and our label said
13:34 - all of these paragraphs
13:36 - are gray right
13:40 - we got that so now we have this binder
13:42 - full of paragraphs
13:44 - and some of those paragraphs are gray
13:48 - now we're going to say okay all those
13:50 - paragraphs that are gray
13:53 - when we put our mouse over them they're
13:55 - going to change color
13:58 - so you're taking that class that class
14:02 - of all of the paragraphs that were gray
14:05 - and you're saying when this case happens
14:09 - when my mouse hovers over these
14:12 - paragraphs
14:13 - i want them to change colors so it's a
14:16 - very like
14:17 - if statement right so it's a
14:21 - it's a good example of an if else
14:22 - statement which is something you're
14:24 - going to see a lot in java and
14:25 - javascript
14:28 - these paragraphs are gray if
14:31 - my mouse is on these paragraphs they are
14:34 - red
14:35 - so they change color they become red
14:38 - else my mouse is not on these paragraphs
14:42 - they turn they are the same color they
14:44 - are gray
14:47 - that's a really tricky example but we're
14:48 - going to look at it visually here
14:50 - so dot label we have our label all these
14:53 - paragraphs are gray
14:54 - well change their color all these
14:56 - paragraphs are blue
14:58 - right when we hover
15:02 - over all of the paragraphs in this label
15:04 - with our mouse
15:05 - that's what this means when hover that's
15:07 - what this means
15:09 - they change their color to gray
15:12 - yes so all of these paragraphs
15:17 - yes all of these paragraphs are under
15:19 - this label
15:20 - when my mouse goes over these paragraphs
15:24 - they change their color to gray
15:27 - that is a pseudo class a pseudo class
15:30 - is a class for a special case
15:35 - yes no maybe on the explanation
15:38 - yes no maybe on the explanation
15:42 - i saw there was a chat i'm going to look
15:43 - at the chat
15:45 - i know in matlab you need to use the
15:46 - else if conditional but it's not by css2
15:49 - no it does not apply to css css
15:52 - you just have like a cascading like
15:55 - so this is the cx this is the dot label
15:59 - colon special case the special case here
16:02 - is the hover
16:03 - so the special case here is the hovering
16:05 - that's the syntax there's no
16:06 - if else that's not in css that's in java
16:09 - and that's in javascript we'll get to
16:11 - that
16:11 - in three weeks don't have to worry about
16:14 - that for now
16:15 - but that's where it at i saw some thumbs
16:17 - up i'm really glad that we're getting
16:18 - this i know it's a tricky concept
16:20 - okay so attribute selectors
16:25 - i know a lot of selectors it's crazy
16:27 - it's a lot of
16:28 - things but think of it as we want the
16:31 - computer to do exactly what we want it
16:32 - to do
16:33 - and having all of these special things
16:35 - to tell the computer what we want to do
16:37 - makes css really precise so attribute
16:40 - selectors
16:40 - select all the elements with a certain
16:42 - attribute
16:44 - so remember all of our remember our
16:46 - binder with the paragraphs
16:50 - yeah okay so i remember a binder with
16:52 - the paragraphs
16:53 - and we had a label and that said all of
16:55 - the paragraphs within this label
16:58 - are blue not all of the paragraphs in
17:00 - the binder are blue
17:01 - but all of the paragraphs within this
17:03 - certain label section
17:05 - are blue the attribute selector
17:09 - what it does it looks at your binder and
17:12 - it doesn't look
17:13 - as one certain it looks at the whole
17:15 - binder it goes through every single page
17:17 - of the binder
17:19 - and say your attribute selector your
17:22 - criteria is
17:23 - is the paragraph blue yes put in one
17:26 - pile
17:27 - no put it in the other so it looks at
17:29 - every single page
17:30 - every single paragraph and it says is
17:32 - this blue if the answer is yes
17:35 - stick it in one pile and if the answer
17:36 - is no it sticks in another pile
17:39 - according to your attribute selector it
17:42 - could be
17:42 - okay take all of these paragraphs that
17:44 - are blue
17:46 - here you wanted all the paragraphs that
17:49 - are blue to do something with them
17:50 - i don't know what you want to do with
17:52 - them but here
17:54 - because this is all of the things that
17:56 - were under the given attribute
17:58 - here do things with them and then under
18:01 - that you do things with them
18:03 - so in this example we're using images
18:07 - so this is one without an attribute
18:10 - selector the one that's on the left is
18:12 - one without an attribute selector
18:14 - so image height
18:17 - that's not an attribute every single
18:19 - image has height whether it's 1 pixel or
18:22 - 10
18:22 - 000 pixels they all have height
18:26 - image height equals 500 pixels
18:30 - that's an attribute because not every
18:32 - single image is going to have
18:34 - a height of 500 pixels so
18:38 - what this attribute selector did is it
18:40 - went to our binder full of images
18:42 - we went to the binder full of images and
18:44 - it said okay
18:46 - let me look at these images one at a
18:47 - time and if the image has a height of
18:49 - 500 i'm going to put it in this pile
18:52 - and if it doesn't i'm going to put it in
18:53 - this pile
18:55 - then i'm going to take all of these
18:56 - images that have attributes
18:59 - of 500 height and i'm going to give them
19:02 - to the person
19:03 - and the person is going to give me a
19:05 - style element for those
19:06 - specific images in this case that the
19:10 - border of these images
19:11 - is two pixels and it's gray
19:15 - doesn't mean that it adds a style
19:17 - attribute 500 pixels no it doesn't
19:19 - so it doesn't add a style attribute
19:23 - to the image it cannot add a style
19:26 - attribute
19:27 - well okay it adds a style attribute but
19:31 - it doesn't
19:33 - so okay we have our binder full of
19:36 - images
19:37 - not all of these images have 500 pixel
19:40 - height
19:41 - right so not every single one of them is
19:43 - going to have 500 pixel height
19:45 - what the attribute selector does is it
19:49 - takes the ones that fit the criteria
19:54 - so say we're looking at um
19:57 - okay say you're at the grocery store and
20:00 - you're in the cereal aisle
20:02 - and you want lucky charms there's
20:05 - there's frosted flakes there's cheerios
20:09 - there's um there's like the wheat bran
20:12 - cereal
20:13 - you don't want any of that you want
20:15 - frosted flakes
20:16 - but you don't want to go to the grocery
20:17 - store so you send the attribute selector
20:19 - to go for you and you tell the attribute
20:21 - selector
20:22 - i want lucky charms
20:25 - so the attribute selector goes and it
20:27 - goes to the grocery aisle and it looks
20:28 - at
20:29 - all of the cereal and it looks at every
20:31 - single box and what it does is it looks
20:33 - at every single box and it says
20:34 - are you lucky charms and if the answer
20:36 - is yes it takes the box
20:38 - and it gives it to you and the answer is
20:40 - no it leaves the box
20:42 - then what the attribute selector does is
20:44 - just gives you all the boxes
20:46 - that's all the attribute selector does
20:48 - the attributes lecture just gives you
20:50 - everything that fits your criteria
20:53 - what the css under that though which is
20:56 - this
20:56 - line 33 line 33 is not an attribute
20:59 - selector
21:00 - line 33 is the css under the attribute
21:04 - selector
21:04 - so the attribute selector just gave you
21:06 - all of your images that have height 500
21:08 - gave you all the lucky charms
21:10 - now you writing css
21:14 - tell it that all of the images have to
21:17 - point
21:18 - gray so it doesn't give it anything
21:21 - it just it doesn't give it any style
21:23 - elements it just gives you all of the
21:25 - things that fit your criteria
21:29 - yes no maybe i know that there was a
21:31 - comment that said we didn't understand
21:33 - it did that maybe help
21:35 - does that mean the attribute selector is
21:36 - also looking for that border along with
21:37 - 500 pixels
21:39 - no because borders are not inherent to
21:41 - images
21:43 - images do not have a border unless
21:45 - you're giving them a border
21:50 - so this gives it a border but it doesn't
21:52 - have a border until you give it a border
21:54 - so the two pixels
21:56 - happens after the attribute is done so
21:59 - once the attribute goes through the
22:01 - grocery aisle
22:02 - and picks out the lucky charms and okay
22:05 - picks out the image with 500
22:07 - pixel height once it found all of those
22:10 - then it gives every single one of them
22:12 - two pixel double gray
22:13 - border
22:17 - i know it's tricky stuff and i know it's
22:19 - hard but you will get through it just
22:21 - ask questions when you need to that's
22:22 - what i'm here for
22:24 - does the two pixels happen automatically
22:26 - by the coder the two pixels
22:29 - happens when you tell it two pixels
22:33 - i think you're focusing a little bit too
22:34 - much on the two pixels the two pixels
22:36 - this this border is not part of an
22:39 - attribute selector
22:41 - this line 32 is the attribute selector
22:44 - border two pixels double gray that's not
22:46 - an attribute selector
22:48 - that's just a styling element of css
22:50 - that's what css has
22:52 - css is telling the computer what we want
22:55 - things to look like
22:56 - this could be 10 pixels bright red
23:00 - this could be 5 pixels navy blue
23:06 - so it yeah so
23:09 - yeah so rgb that's a really great
23:12 - question
23:13 - okay yes some of you have looked down
23:15 - here rgb
23:17 - is a color code so um
23:20 - basically if you want to find a color
23:23 - and this is really useful for css you're
23:24 - going to see this in the example
23:26 - but you're going to use you're either
23:28 - going to use a predisposed list of
23:29 - colors
23:30 - or if you want a custom color which i
23:32 - suggest you do because they're really
23:33 - fun
23:34 - you're going to pull up a little color
23:35 - wheel and
23:37 - this happens in reply so be warned
23:39 - you're going to pull up a little color
23:40 - wheel
23:41 - and you're going to look and you're
23:42 - going to drag and you're going to find a
23:44 - color that you like
23:45 - and you're going to say i want that
23:46 - color and then computer's going to say
23:48 - okay and it's gonna give you a little
23:50 - square with that color and it's gonna
23:51 - say rgb
23:53 - three numbers or it's gonna give you a
23:55 - hex code
23:57 - rgb stands for red green blue and it's a
24:01 - code that we use to identify number like
24:03 - a code that we use to identify colors
24:06 - because in the computer's eyes all
24:08 - colors can be made
24:09 - with a certain amount of red green and
24:12 - blue
24:13 - so you know how you have a printer and
24:14 - the printer has black ink blue
24:17 - yellow and magenta i think it is well
24:20 - it's basically like that but with red
24:21 - green and blue
24:22 - so it says okay well this color here has
24:25 - 226 units
24:26 - of red for every 248 units of green for
24:29 - every 255 units of blue and if we mix
24:32 - that in our little mixing pot
24:33 - that's what we get so that's an rgb
24:36 - color code a hex code
24:38 - very similar except i do not understand
24:41 - how hex codes really work it's a it's a
24:44 - six
24:44 - it's a series of six letters and numbers
24:48 - um that identify colors just a different
24:51 - system
24:52 - but yeah rgb color codes are really
24:53 - interesting um you can play around with
24:55 - them today there's a there's a few in
24:57 - the example
24:58 - so i'm gonna move on to the next slide
25:00 - if that's okay with everyone
25:02 - um yeah
25:05 - declaration property and value okay so a
25:08 - declaration
25:09 - is a line of css which makes up the
25:11 - second part of a rule set
25:14 - crazy so that's what we were talking
25:16 - about before you can have
25:17 - multiple declarations in the rule set so
25:20 - each acceleration has a property which
25:22 - is then assigned value
25:24 - so property value for multiple
25:27 - decoration
25:28 - for rule set use semicolons okay
25:32 - that's a lot of coding garbage
25:35 - well not garbage but coding language
25:39 - remember this remember our little
25:41 - selector
25:43 - okay so this is a selector this is an
25:45 - attribute selector
25:47 - this is a thing that's not what we're
25:49 - talking about right now
25:51 - what we're talking about is these three
25:53 - lines
25:54 - text align color and padding and i want
25:56 - everyone to focus on just these three
25:58 - lines
26:00 - these three lines are examples of
26:02 - individual declarations
26:04 - so each line is its own declaration the
26:08 - three of them are not one
26:10 - there are three declarations here each
26:13 - declaration has its own line
26:14 - you cannot have two declarations in the
26:16 - same line
26:19 - what this does is a declaration says
26:21 - okay
26:22 - here here's my property and here's the
26:24 - value i want to give this property
26:26 - so it's basically like saying
26:29 - well property value here's my house and
26:32 - i want to assign a value of five hundred
26:34 - thousand dollars
26:35 - right that's a property that's a value
26:38 - here is my
26:39 - triangle and i want to make it red
26:43 - property value our examples here
26:46 - encoding
26:48 - well we have three here and i'm going to
26:49 - go through what each of them mean
26:52 - text align where do i want my text to be
26:56 - aligned
26:57 - this is a property you can have in css
26:59 - do i want my text line
27:01 - to be in the center do i want it to be
27:02 - to the left do i want to be the right
27:04 - you will have experienced this in google
27:07 - docs or word docs
27:08 - when you go and you say do i want my
27:10 - text line to be in the center
27:13 - to the left or to the right
27:16 - that's the example of text line we're
27:17 - talking about
27:20 - so i say okay property
27:24 - semicolon the value for that property
27:28 - so i'm saying i want my text line to be
27:31 - in the center
27:31 - so that means when my text is on my web
27:34 - page it will be
27:35 - in the center of my web page it's not
27:37 - going to be off to the left it's not
27:38 - going to be off to the right it's going
27:39 - to be in the center
27:41 - um before i get any questions about this
27:43 - yes it's american spelling
27:46 - css will not recognize canadian spelling
27:48 - or british spelling
27:49 - um i'm american so that makes sense for
27:51 - me but if you're
27:52 - in the uk or you're in canada or you're
27:54 - in another place that uses
27:56 - british spelling you're going to have to
27:57 - use america at least for reply
27:59 - at least the version i use um
28:02 - so we're gonna do property colon
28:06 - value for that property semicolon
28:11 - yes no maybe so how we so color
28:14 - what color do i want my font to be what
28:15 - color do i want this header to be
28:18 - right because these apply to this so
28:20 - what color do i want the header to be i
28:22 - want the header to be black
28:24 - padding that basically just says like
28:27 - it's a weird one but it's like how much
28:29 - space do i want around the thing
28:31 - that nothing else can be in so how much
28:33 - space do i want to devote on either side
28:36 - to that header and it's 10 pixels
28:39 - basically what that does is it
28:40 - draws a little line and that line is 10
28:43 - pixels long and it
28:44 - traces the header around and it draws a
28:46 - little rectangle around the header
28:48 - and it's like 10 pixels the padding
28:51 - it's a weird one you don't really have
28:52 - to worry about it now but it's more for
28:54 - spacing and aesthetics
28:56 - if you want help with that one let me
28:57 - know we can work through it in the
28:58 - example
28:59 - i see a question do the properties have
29:02 - to come into specific text like are
29:03 - there only certain words
29:05 - yeah so there's only certain words that
29:07 - css accept so like text align
29:10 - is the certain word color is the certain
29:14 - word
29:14 - you can't just say like you can't say
29:17 - like
29:18 - text color that's not a css word so
29:20 - these
29:21 - are specific words they are specific
29:24 - words
29:26 - um you can't just write whatever you
29:27 - want to write there's specific words
29:29 - but notice how it's not like weird
29:32 - coding word like it's
29:33 - pretty much english which is generally
29:36 - okay because you can
29:37 - kind of piece together what like what
29:39 - you want to say by just trying some
29:41 - things out
29:44 - property and values so um we're getting
29:47 - to the end here i know it's a lot
29:49 - a property is a characteristic that
29:51 - something possesses
29:52 - so such a color font weight background
29:55 - or color
29:56 - remember the properties we had remember
29:59 - these
30:00 - these are properties so these are
30:03 - examples of more property
30:04 - font weight you know how thick is my
30:07 - font do i want a really really skinny
30:08 - font do i want a thick bond
30:10 - that's basically the difference in
30:11 - microsoft word between regular and bold
30:15 - by going bold you increase font weight
30:17 - by doing regular
30:18 - you decrease font weight um background
30:21 - color
30:22 - what is the color of the background in
30:24 - this case purple
30:26 - well it says blue violet but it's purple
30:28 - um the value is given to the property
30:31 - not following a colon remember it's a
30:32 - colon not an equal sign
30:36 - very specific so
30:39 - a value can be a number that assigns
30:41 - font size or height remember
30:43 - pixels not inches not in feet
30:46 - not in centimeters in pixels and a word
30:50 - that assigns the color of the position
30:51 - of the object
30:52 - okay let's go through this example one
30:55 - by one
30:56 - body all of these are going to apply
31:01 - to the body element in the html
31:06 - for this body element we want our font
31:09 - size to be 14 pixels
31:12 - yes we want the color of this font
31:16 - so we want the color of the body to be
31:19 - white
31:19 - so so far we have a body we have a body
31:24 - anything within that body is going to
31:25 - have a size 14 pixels
31:27 - it's going to be white and its
31:28 - background color is going to be purple
31:33 - um today this is our project before i
31:36 - get into the project i'm gonna stop
31:37 - sharing my screen really quick
31:39 - um so this project is a little bit
31:40 - interesting it's supposed to be an about
31:42 - me web page and i know
31:43 - that in order to submit this you have to
31:46 - like in order to get the certificate you
31:47 - have to submit your projects
31:49 - and i want to be very open so if you
31:52 - don't want to put information on the web
31:54 - completely understand that my challenge
31:58 - for you
31:58 - is to make an ugly web page so that was
32:00 - one of my first challenges with css um
32:02 - that they always tell you it's like
32:03 - make an ugly web page that's what i want
32:05 - you to do i want you to title it my ugly
32:08 - webpage
32:08 - and you can put whatever words you want
32:10 - on it i mean no bad words like no curse
32:12 - words but um
32:15 - you can make the background color
32:17 - whatever you want you can make the text
32:18 - color whatever you want but i want you
32:19 - to play around with it and that's your
32:20 - challenge if you don't want to make a
32:21 - web page that's all about me
32:22 - you're going to make the ugliest web
32:23 - page you can so now i'm going to share
32:25 - my screen and we're going to go through
32:26 - the example for today
32:28 - um that is css oh and i'm also going to
32:31 - put the
32:32 - link in the chat um so that everyone can
32:35 - oops sorry um so that everyone
32:38 - can get moving on it
32:42 - if you know what's going on and you want
32:43 - to just get on with it
32:46 - um
32:50 - fork it first how do we fork it we go
32:52 - here and we go fork
32:54 - click the little arrow here and we fork
32:56 - we do not touch this one we fork
33:00 - yes everyone's gonna fork it before we
33:04 - touch it
33:07 - all right so i'm going to go through
33:09 - this pretty quick because i want to give
33:10 - you guys some time to just like play
33:12 - around with it and for you guys to ask
33:13 - me questions
33:14 - as always i'll be staying around behind
33:16 - um at the end
33:17 - to answer some any last-minute questions
33:19 - we have so this is my example i made an
33:21 - all about me webpage it's not super
33:23 - detailed but you'll get the gist of it
33:25 - so all about me um i want to tell you
33:28 - about me my name is willa
33:29 - and some of the things that i like to do
33:32 - is code bake cookies and hang out with
33:34 - my dog
33:34 - and i have an image here of some cookies
33:38 - what we're really interested here is
33:41 - style.css
33:42 - so this is our style element um this is
33:44 - our style.css sheet
33:46 - and this links to that so without
33:49 - this file this would just look like
33:53 - black text all to this side
33:57 - you know very boring but we have some
34:00 - background colors
34:01 - we have some different font colors we
34:03 - have this
34:05 - what what is this drop it in the chat go
34:08 - go go what is this what is this an
34:09 - example of i'm hovering my mouse
34:11 - over the list and it changes colors what
34:13 - is that an example of we talked about it
34:15 - today
34:16 - yes yes andrea it's a pseudo class it's
34:19 - a pseudo class
34:22 - so um basically
34:25 - um chat
34:28 - basically i'm gonna go through this css
34:31 - stuff a little bit
34:33 - body body is like a really large
34:36 - portion of our um
34:39 - stuff it applies to all of our headers
34:42 - all of our paragraphs so that's why i
34:43 - just try and make my body stuff pretty
34:44 - general
34:46 - my background color so you notice how
34:48 - that's the dominant background color of
34:49 - my web page
34:50 - it's like a nice cream color see this
34:53 - see how this is like a really really
34:54 - ugly
34:55 - thing it's not an rgb coat this is an
34:59 - example of a hex code
35:00 - so hex codes are what i said six digits
35:04 - letters and numbers in this case is just
35:06 - letters that correspond to a thing
35:09 - see this remember how i said oh if you
35:11 - want a custom color
35:12 - like reply will help you out with that
35:14 - and give you a little color selected
35:15 - wheel this is that
35:16 - so you can go around you can select
35:18 - different colors you know make it all
35:20 - pretty
35:21 - um and that's what this is this is a
35:23 - color selected wheel that will give you
35:25 - a hex color
35:26 - um replit does accept
35:29 - rgb codes but if you're doing the custom
35:31 - color selector
35:32 - in reply it's going to give you a hex
35:34 - code both of them work both of them are
35:36 - fine
35:36 - but i wanted to go over that um because
35:38 - there's a lot of
35:39 - a lot of hex codes in here so
35:43 - yeah let's go over that so body font
35:45 - family georgia garamond ariel
35:48 - these are all web safe fonts so if you
35:50 - have a font and you're like i want to
35:51 - use that i would recommend googling if
35:52 - it's web safe first and
35:54 - all you would do google ads is insert
35:57 - fondant here web safe
35:58 - because sometimes some operating systems
36:00 - don't support certain fonts don't ask me
36:02 - why they just don't
36:04 - um but like a lot of pretty standard
36:06 - ones are going to be supported
36:07 - so my font family is georgia garamond
36:10 - ariel
36:11 - that means if georgia isn't supported
36:13 - garamond
36:14 - it will go to garamond automatically and
36:16 - if garamond isn't supported it will go
36:18 - to ariel
36:20 - everything uses ariel like literally
36:23 - everything
36:23 - so you know if you can't think of a font
36:25 - just use ariel because it will be
36:26 - supported by everything
36:29 - margin 2em just gives me my margins on
36:34 - um the stuff and my background color
36:38 - is this hex code color that gives me all
36:41 - of my style attributes here
36:43 - yes h1 my first header if we go into the
36:46 - index.html
36:48 - we have where's my header i know i have
36:51 - it here
36:52 - here's my header h1 all about me right
36:55 - here
36:56 - same thing all about me so
36:59 - if we go into the style we see that h1
37:01 - text align
37:02 - center what does that mean my text is in
37:04 - the center of my web page it's not off
37:06 - to the
37:06 - left it's not off to the right bot style
37:09 - georgia that means the font of this
37:11 - is georgia the font is georgia the color
37:14 - is this custom color hex code thing
37:17 - right here
37:18 - it's an ugly thing but you know
37:21 - in the background color of the header
37:24 - see this
37:25 - notice how it's green notice how it's
37:27 - this d2f
37:28 - 3da that's this color and that's because
37:31 - you can select different background
37:32 - colors
37:33 - for different attributes so that's why i
37:34 - have green here i have a yellow here i
37:36 - have an orange here i have blue here
37:38 - because i selected different background
37:40 - colors for different
37:41 - parts of my web page this is my selector
37:46 - this is my property this is my attribute
37:49 - remember how we were looking at that in
37:50 - the slides
37:52 - selector h1 we're selecting
37:55 - the header one the header one is gonna
37:59 - have the property of text align
38:02 - its text align is gonna be in the center
38:05 - does that make more sense now that we're
38:06 - seeing it in like a real web page yes no
38:08 - maybe so
38:10 - yes no maybe so how do we feel about
38:12 - that
38:16 - i'm looking at the chat yes good good
38:19 - good i like to see that i like to see
38:21 - that okay so
38:23 - um oh just wanna make sure that's not a
38:25 - question how can i change the colors
38:27 - excellent question so i'm just gonna use
38:30 - this
38:30 - um header one for example if i want to
38:33 - change the color
38:34 - i'm gonna click right here notice how it
38:36 - comes up like that
38:37 - it's a little bit weird but you have to
38:38 - like hover over it see i just like i'm
38:40 - not clicking it
38:41 - i have it clicked there but i just hover
38:43 - over it
38:44 - it's a little finicky i don't like this
38:46 - but i hover over it and this pops up
38:49 - this nice little color wheel and
38:52 - say i want to change that to like um
38:56 - let's go with red red works it's not the
38:59 - most aesthetically pleasing but red
39:00 - works
39:01 - say i want to change my color to red see
39:03 - how you have this bar here it says my
39:05 - old color was this purple
39:06 - my new color is this red right so
39:09 - that's my new color and it does it
39:11 - automatically see it just changed the
39:13 - color code
39:14 - and if i click run again now it's red
39:18 - so you're going to do that with anything
39:20 - you want to change the color of
39:23 - that's how you change color
39:26 - yes no maybe so does that make sense to
39:27 - people
39:34 - okay so i'm gonna go and talk
39:37 - because these are basically all the same
39:40 - there
39:40 - is one thing i want to get into with the
39:42 - images and there's one thing because
39:44 - this is a new tag that we haven't talked
39:46 - about before so i'm going to go into
39:48 - that
39:49 - image display block
39:52 - basically i display it in a single block
39:54 - margin left auto
39:56 - margin right auto with 50 what do these
39:59 - things mean
40:01 - this is how you center an image
40:05 - i know i'm gonna get 500 questions about
40:06 - that you can't just do
40:08 - you know margin left auto margin right
40:12 - auto as soon as that happens
40:13 - the margins equalize themselves because
40:15 - the computer wants them to be equal
40:18 - so as soon as you put both of them at
40:19 - auto it equalizes them
40:22 - with 50 now we're probably looking at
40:25 - that and we're like
40:25 - that doesn't make sense oh
40:28 - have a good one um be sure to check out
40:30 - the video so
40:32 - um with 50 i know we're talking about
40:34 - this and we're like
40:35 - that doesn't make sense that's not a
40:36 - pixel value you're right
40:38 - it isn't with 50 well
40:42 - that tells us that the image width
40:45 - so this distance from this corner to
40:47 - this corner is going to be exactly
40:49 - 50 percent of the distance from this
40:51 - corner
40:52 - to this corner or no sorry
40:55 - this corner to this corner because we
40:58 - have our padding
41:00 - remember our padding margin
41:03 - sorry margin remember how we had our
41:04 - margin 2em that's
41:06 - this distance from this to there so
41:09 - our width for our image
41:13 - is this entire blue block distance and
41:15 - by saying with 50
41:16 - we're saying our image width is 50 of
41:19 - the image distance
41:20 - i could change that to 25
41:24 - and it would look like this right
41:28 - so i'm going to change it back to 50
41:30 - because it keeps it big
41:32 - but that's what that means
41:36 - and by doing margin left auto margin
41:38 - right auto we say okay
41:39 - the width is 50 gives me a given value
41:42 - and because the computer wants
41:44 - everything to be equal it's going to
41:45 - equalize it on both sides
41:46 - so we're going to have a centered image
41:49 - that's how we center an image
41:51 - ul and ul hover these are the pseudo
41:54 - classes
41:57 - yes does anyone want to tell me
42:01 - what we think ul is
42:05 - it's an interesting one it's not one
42:07 - that you would like guess
42:08 - so i know if we don't have any guesses
42:10 - that's that's okay
42:12 - does anyone want to guess what ul is i
42:14 - mean we're looking at it we have oh this
42:15 - is a background color
42:16 - and we have a red what do we think ul is
42:20 - it's no it's not under iron it's not
42:24 - ultimate label ul is actually list
42:28 - so if you want to make a list that looks
42:29 - like this with like the bullet points
42:30 - pretty standard list
42:31 - you're going to use the tag ul i'm going
42:33 - to go into my index.html show you guys
42:35 - so the tags for list are a little bit
42:38 - complicated you need two tags
42:41 - first one ul ul that tells me everything
42:44 - in here is part of the list
42:47 - now if i want to have different items on
42:49 - the list i can't just do
42:50 - like like code enter
42:54 - bake cookies enter hang out with my dog
42:56 - that's not how that works
42:58 - you need to use the li opening and
43:00 - closing tag so we see this
43:02 - li that seems more logically like list
43:04 - but that's just like
43:05 - a single item in the list so notice how
43:07 - i have ul
43:08 - ul everything in here is a list li
43:13 - item on list so code li first item on
43:16 - list
43:17 - second item bake cookies third item hang
43:19 - out with my dog so li is an item on a
43:21 - list and ul
43:22 - is encompassing the whole list it's an
43:25 - interesting one but it's a fun one to
43:26 - know
43:27 - yeah so the li is basically the
43:28 - equivalent of a bullet point
43:31 - yeah so it's an interesting one it's not
43:33 - one that you would like be familiar with
43:34 - we haven't talked about it yet but
43:36 - that's a fun one
43:37 - so ul is our list
43:40 - now remember we have pseudo classes so
43:42 - we have ul
43:43 - hover so that's our pseudo class so when
43:46 - ul is hovered on by our mouse remember
43:49 - here
43:51 - it changes its color to red so normally
43:53 - ul
43:55 - is this color this very dark black color
43:58 - but when we hover over it it's red and
44:00 - that's an example of how we would use
44:02 - our pseudo class
44:04 - so when something is hovered on it
44:06 - changes color
44:08 - yes no so if you want to get going
44:10 - that's totally fine i'm going to stay
44:11 - for an extra couple minutes
44:12 - answer questions go through them things
44:14 - with people if you want to
44:16 - and i'm going to stop the recording now
44:17 - so thank you everyone for coming if you
44:18 - are heading out

Cleaned transcript:

hi everyone if you don't know my name is willa and today we're gonna start something really really exciting and that's css so does anyone know what css stands for um you can drop it in the chat you can drop it in anything dynamic cascading styles yes cascading well it's cascading style sheets but yes you were very close um and that's what we're gonna be talking about today so today's lesson is css part one so we talked about html that's what we've been doing for the last couple of weeks um so html is basically like the bones of our web page and css is like the skin the muscles like the physical attributes of our webpage so it's actually what makes a web page look really really pretty and gives it all of its different style attributes so what is css we got into this today um we talked about html but with css we can modify colors font types font sizes shadows images elements sizes everything if you want to make something look a different way that's how you're going to do it you're going to do it through css so um how to approach styling which is what we call coding in css um first of all you want to decide your general style of the website so every what kind of color scheme are we going for what kind of font family are we going for what kind of style are we going for what kind of images do we want to have all these things very important to establish this decide the theme so color mood something related to the website remember the key elements of graphic design so good principles of ux and ui user interface user experience what's going to enhance the user experience what's going to keep people wanting to enjoy the website so high contrast text background make it easy to use um yeah don't use annoying colors like don't have yellow text on a white background common sense things and utilize white space for good effect so selectors now we're going to get into the code part of it um css so a lot of times when we talk about code we talk about syntax and the syntax is like the special ways we encode instructions to the computer well good news for everyone css has very little syntax and it's a lot of like whole real english words with just like semicolons and brackets so it's actually really easy to use um selectors are used to select which elements you're gonna style so does anyone take a guess at which part is the selector so we're going to take this example this text box here i'm going to use my pointer i'm going to take this text box here what is the selector the p the csx declarations go here or this line eight text align center does anyone want to take a guess what is the selector i have a chat yes it is the p it is the p so a selector is the so like the selector is selecting what will be affected by the css code so the selector here gives the style attributes for anything within the brackets does that make sense yes no maybe html and we have h1 so but does everyone remember when we had our care bracket h1 and there was all these words in it and then closing well this cascading style sheets or the css file is going to link to the original html file the html web page so when we have this selector the selector p is saying all of the paragraphs so everything with a p tag so the selectors correspond to the tags so everything with a p tag everything that's a paragraph is going to follow these set style attributes so every selector corresponds to the tags in the html so h1 in html is the same thing as h1 here p in html is talking about the paragraph the same paragraph that is being talked about here so the selectors are the same things as the tags and they help us to identify what helps the computer identify what is being changed by the styling code here so can i give it like a a real world example that might help so say i have a bunch of shapes i have squares i have triangles i have circles i have diamonds my selector in that case so that's my html file my html file is squares diamond circles penta pentagons my selector in that case would be triangle yes my attributes here would be triangle color colon red does that help people does that help us understand what that is yes no maybe thumbs up thumbs down thumbs up i'm liking that that's good hopefully that was like a good explanation yeah okay i only saw one thumbs up um maybe nope okay another one i'm looking through is there more questions about that do we need to go through it again do we want to move on okay okay so i don't okay the general selector is more like an indicator right it indicates what the points below change the selector is no the selector is more like an identifier for the computers the computer like the selector it's more just like an identified tag like it says like that's what the id selector this is the id selector the selector and the id select are the same things okay yeah okay we're gonna go to the next slide because i think when we see it in the example it will help us make some more sense of it so tags the tag elements and style in the html can be applied to elements but some cps will not work for certain tags okay so font style of an image selects the body elements remember this this is our selector and it's selecting the body element yes so here we're calling it tags but it's the same thing it's the selector so the selector selects the body element here we're selecting the selector is selecting everything that is a table a th or a td so everything that has a tag table everything that has a th everything that has a td now css is also kind of smart so it can be applied to all elements like you can do things but like it's smart in the sense that it won't let you do things that are physically impossible so this is a great example if you have an image so this tag would say img because it's an image and you said font family helvetica it would say that doesn't make sense to me because you're telling it that i want you to be font helvetica but it's an image so it knows that it can't be fought yes so it works for things that it knows works which is good because if you're playing around with it it will tell you what it knows works and what doesn't okay yes i know it's a little confusing but i think the example will help us so class and id the class and id selectors select elements based on class id and name so you have different classes and we haven't really got into this because this was more something that the advanced group got into but basically there's classes and there's like there's classes and there's different types of stuff so these are just some different ones that we didn't really get into you're not going to be needing them today if you have questions about them or you want to integrate them to your project come ask me later but it's basically the same kind of syntax so all p elements with the label class so all paragraphs that are under the label class and that basically means that all paragraphs that are defined in the class label so all paragraphs that are labels will have the color gray it's weird but it's a way of identifying certain elements in grouping them so if i have a whole bunch of headers and i want them to all be in like a top like header bar i would maybe use like a label tag because then i can group them all and use them all and give them all the same syntax without having to write five different css functions so it's a really good way of like grouping things together but our projects so far are not going to be that complex so you won't need to worry about grouping a bunch of things together because you're not creating web pages with 500 different things on them so it's an interesting concept but what's a class label um it's interesting so which one you like from the before class label this is class selectors a class label no the question was about class labels so okay you know how you have binders so like if you go to school or you have gone to school you know how you have binders and you might have a binder that has your math work your history work and your um your math work and your history work and your science work yes i'm gonna use a real world example for this because i think that might be easier you have a binder with all these different subjects in it what do you do to divide that work you use these like plastic divider thingies i don't know the word for them but i think they're called dividers but you use these plastic dividers and they say okay all the work from this divider to the next divider is my math work right so a class label is basically saying if we think about it in terms of like the computer we can say for this example right here p label i have a binder and they're full of paragraphs right they're full of paragraphs every single thing in here is a paragraph i put a divider i put a couple dividers in instead of having a divider that says all of these paragraphs are math paragraphs right we can just say all of these paragraphs are under this label we don't have to give the label a name we can say all of these paragraphs are under this label and then we can take that label and stick it in the css and we can say okay all of the paragraphs under this label are going to be gray that's their defining characteristic not that they're about math not that they're about science they're defining to characteristic is that they are gray so all of the paragraphs in that divider or also known as label are gray does that explanation help does that explanation make sense i tried to give it a real world example i saw a chat come up basically yeah it gives each paragraph an identity yeah and it gives each paragraph the identity but it gives all of them basically to the css the same identity i'm getting some kind of i'm getting some yes i'm okay so i think that might help i'm gonna try and use some more real world examples because i feel like those are resonating and that's good because it's what about makes sense for you so we also have pseudo classes so this is a little bit interesting you're going to see one in the example today you don't have to touch it if you don't want to but you're going to see one in the example today i put it in pseudo classes are selectors used to define the style of an element when it's in a certain state that's a really long and convoluted sentence right okay so let's take our example that said remember our binder our binder that had all the paragraphs in it and we had our label and our label said all of these paragraphs are gray right we got that so now we have this binder full of paragraphs and some of those paragraphs are gray now we're going to say okay all those paragraphs that are gray when we put our mouse over them they're going to change color so you're taking that class that class of all of the paragraphs that were gray and you're saying when this case happens when my mouse hovers over these paragraphs i want them to change colors so it's a very like if statement right so it's a it's a good example of an if else statement which is something you're going to see a lot in java and javascript these paragraphs are gray if my mouse is on these paragraphs they are red so they change color they become red else my mouse is not on these paragraphs they turn they are the same color they are gray that's a really tricky example but we're going to look at it visually here so dot label we have our label all these paragraphs are gray well change their color all these paragraphs are blue right when we hover over all of the paragraphs in this label with our mouse that's what this means when hover that's what this means they change their color to gray yes so all of these paragraphs yes all of these paragraphs are under this label when my mouse goes over these paragraphs they change their color to gray that is a pseudo class a pseudo class is a class for a special case yes no maybe on the explanation yes no maybe on the explanation i saw there was a chat i'm going to look at the chat i know in matlab you need to use the else if conditional but it's not by css2 no it does not apply to css css you just have like a cascading like so this is the cx this is the dot label colon special case the special case here is the hover so the special case here is the hovering that's the syntax there's no if else that's not in css that's in java and that's in javascript we'll get to that in three weeks don't have to worry about that for now but that's where it at i saw some thumbs up i'm really glad that we're getting this i know it's a tricky concept okay so attribute selectors i know a lot of selectors it's crazy it's a lot of things but think of it as we want the computer to do exactly what we want it to do and having all of these special things to tell the computer what we want to do makes css really precise so attribute selectors select all the elements with a certain attribute so remember all of our remember our binder with the paragraphs yeah okay so i remember a binder with the paragraphs and we had a label and that said all of the paragraphs within this label are blue not all of the paragraphs in the binder are blue but all of the paragraphs within this certain label section are blue the attribute selector what it does it looks at your binder and it doesn't look as one certain it looks at the whole binder it goes through every single page of the binder and say your attribute selector your criteria is is the paragraph blue yes put in one pile no put it in the other so it looks at every single page every single paragraph and it says is this blue if the answer is yes stick it in one pile and if the answer is no it sticks in another pile according to your attribute selector it could be okay take all of these paragraphs that are blue here you wanted all the paragraphs that are blue to do something with them i don't know what you want to do with them but here because this is all of the things that were under the given attribute here do things with them and then under that you do things with them so in this example we're using images so this is one without an attribute selector the one that's on the left is one without an attribute selector so image height that's not an attribute every single image has height whether it's 1 pixel or 10 000 pixels they all have height image height equals 500 pixels that's an attribute because not every single image is going to have a height of 500 pixels so what this attribute selector did is it went to our binder full of images we went to the binder full of images and it said okay let me look at these images one at a time and if the image has a height of 500 i'm going to put it in this pile and if it doesn't i'm going to put it in this pile then i'm going to take all of these images that have attributes of 500 height and i'm going to give them to the person and the person is going to give me a style element for those specific images in this case that the border of these images is two pixels and it's gray doesn't mean that it adds a style attribute 500 pixels no it doesn't so it doesn't add a style attribute to the image it cannot add a style attribute well okay it adds a style attribute but it doesn't so okay we have our binder full of images not all of these images have 500 pixel height right so not every single one of them is going to have 500 pixel height what the attribute selector does is it takes the ones that fit the criteria so say we're looking at um okay say you're at the grocery store and you're in the cereal aisle and you want lucky charms there's there's frosted flakes there's cheerios there's um there's like the wheat bran cereal you don't want any of that you want frosted flakes but you don't want to go to the grocery store so you send the attribute selector to go for you and you tell the attribute selector i want lucky charms so the attribute selector goes and it goes to the grocery aisle and it looks at all of the cereal and it looks at every single box and what it does is it looks at every single box and it says are you lucky charms and if the answer is yes it takes the box and it gives it to you and the answer is no it leaves the box then what the attribute selector does is just gives you all the boxes that's all the attribute selector does the attributes lecture just gives you everything that fits your criteria what the css under that though which is this line 33 line 33 is not an attribute selector line 33 is the css under the attribute selector so the attribute selector just gave you all of your images that have height 500 gave you all the lucky charms now you writing css tell it that all of the images have to point gray so it doesn't give it anything it just it doesn't give it any style elements it just gives you all of the things that fit your criteria yes no maybe i know that there was a comment that said we didn't understand it did that maybe help does that mean the attribute selector is also looking for that border along with 500 pixels no because borders are not inherent to images images do not have a border unless you're giving them a border so this gives it a border but it doesn't have a border until you give it a border so the two pixels happens after the attribute is done so once the attribute goes through the grocery aisle and picks out the lucky charms and okay picks out the image with 500 pixel height once it found all of those then it gives every single one of them two pixel double gray border i know it's tricky stuff and i know it's hard but you will get through it just ask questions when you need to that's what i'm here for does the two pixels happen automatically by the coder the two pixels happens when you tell it two pixels i think you're focusing a little bit too much on the two pixels the two pixels this this border is not part of an attribute selector this line 32 is the attribute selector border two pixels double gray that's not an attribute selector that's just a styling element of css that's what css has css is telling the computer what we want things to look like this could be 10 pixels bright red this could be 5 pixels navy blue so it yeah so yeah so rgb that's a really great question okay yes some of you have looked down here rgb is a color code so um basically if you want to find a color and this is really useful for css you're going to see this in the example but you're going to use you're either going to use a predisposed list of colors or if you want a custom color which i suggest you do because they're really fun you're going to pull up a little color wheel and this happens in reply so be warned you're going to pull up a little color wheel and you're going to look and you're going to drag and you're going to find a color that you like and you're going to say i want that color and then computer's going to say okay and it's gonna give you a little square with that color and it's gonna say rgb three numbers or it's gonna give you a hex code rgb stands for red green blue and it's a code that we use to identify number like a code that we use to identify colors because in the computer's eyes all colors can be made with a certain amount of red green and blue so you know how you have a printer and the printer has black ink blue yellow and magenta i think it is well it's basically like that but with red green and blue so it says okay well this color here has 226 units of red for every 248 units of green for every 255 units of blue and if we mix that in our little mixing pot that's what we get so that's an rgb color code a hex code very similar except i do not understand how hex codes really work it's a it's a six it's a series of six letters and numbers um that identify colors just a different system but yeah rgb color codes are really interesting um you can play around with them today there's a there's a few in the example so i'm gonna move on to the next slide if that's okay with everyone um yeah declaration property and value okay so a declaration is a line of css which makes up the second part of a rule set crazy so that's what we were talking about before you can have multiple declarations in the rule set so each acceleration has a property which is then assigned value so property value for multiple decoration for rule set use semicolons okay that's a lot of coding garbage well not garbage but coding language remember this remember our little selector okay so this is a selector this is an attribute selector this is a thing that's not what we're talking about right now what we're talking about is these three lines text align color and padding and i want everyone to focus on just these three lines these three lines are examples of individual declarations so each line is its own declaration the three of them are not one there are three declarations here each declaration has its own line you cannot have two declarations in the same line what this does is a declaration says okay here here's my property and here's the value i want to give this property so it's basically like saying well property value here's my house and i want to assign a value of five hundred thousand dollars right that's a property that's a value here is my triangle and i want to make it red property value our examples here encoding well we have three here and i'm going to go through what each of them mean text align where do i want my text to be aligned this is a property you can have in css do i want my text line to be in the center do i want it to be to the left do i want to be the right you will have experienced this in google docs or word docs when you go and you say do i want my text line to be in the center to the left or to the right that's the example of text line we're talking about so i say okay property semicolon the value for that property so i'm saying i want my text line to be in the center so that means when my text is on my web page it will be in the center of my web page it's not going to be off to the left it's not going to be off to the right it's going to be in the center um before i get any questions about this yes it's american spelling css will not recognize canadian spelling or british spelling um i'm american so that makes sense for me but if you're in the uk or you're in canada or you're in another place that uses british spelling you're going to have to use america at least for reply at least the version i use um so we're gonna do property colon value for that property semicolon yes no maybe so how we so color what color do i want my font to be what color do i want this header to be right because these apply to this so what color do i want the header to be i want the header to be black padding that basically just says like it's a weird one but it's like how much space do i want around the thing that nothing else can be in so how much space do i want to devote on either side to that header and it's 10 pixels basically what that does is it draws a little line and that line is 10 pixels long and it traces the header around and it draws a little rectangle around the header and it's like 10 pixels the padding it's a weird one you don't really have to worry about it now but it's more for spacing and aesthetics if you want help with that one let me know we can work through it in the example i see a question do the properties have to come into specific text like are there only certain words yeah so there's only certain words that css accept so like text align is the certain word color is the certain word you can't just say like you can't say like text color that's not a css word so these are specific words they are specific words um you can't just write whatever you want to write there's specific words but notice how it's not like weird coding word like it's pretty much english which is generally okay because you can kind of piece together what like what you want to say by just trying some things out property and values so um we're getting to the end here i know it's a lot a property is a characteristic that something possesses so such a color font weight background or color remember the properties we had remember these these are properties so these are examples of more property font weight you know how thick is my font do i want a really really skinny font do i want a thick bond that's basically the difference in microsoft word between regular and bold by going bold you increase font weight by doing regular you decrease font weight um background color what is the color of the background in this case purple well it says blue violet but it's purple um the value is given to the property not following a colon remember it's a colon not an equal sign very specific so a value can be a number that assigns font size or height remember pixels not inches not in feet not in centimeters in pixels and a word that assigns the color of the position of the object okay let's go through this example one by one body all of these are going to apply to the body element in the html for this body element we want our font size to be 14 pixels yes we want the color of this font so we want the color of the body to be white so so far we have a body we have a body anything within that body is going to have a size 14 pixels it's going to be white and its background color is going to be purple um today this is our project before i get into the project i'm gonna stop sharing my screen really quick um so this project is a little bit interesting it's supposed to be an about me web page and i know that in order to submit this you have to like in order to get the certificate you have to submit your projects and i want to be very open so if you don't want to put information on the web completely understand that my challenge for you is to make an ugly web page so that was one of my first challenges with css um that they always tell you it's like make an ugly web page that's what i want you to do i want you to title it my ugly webpage and you can put whatever words you want on it i mean no bad words like no curse words but um you can make the background color whatever you want you can make the text color whatever you want but i want you to play around with it and that's your challenge if you don't want to make a web page that's all about me you're going to make the ugliest web page you can so now i'm going to share my screen and we're going to go through the example for today um that is css oh and i'm also going to put the link in the chat um so that everyone can oops sorry um so that everyone can get moving on it if you know what's going on and you want to just get on with it um fork it first how do we fork it we go here and we go fork click the little arrow here and we fork we do not touch this one we fork yes everyone's gonna fork it before we touch it all right so i'm going to go through this pretty quick because i want to give you guys some time to just like play around with it and for you guys to ask me questions as always i'll be staying around behind um at the end to answer some any lastminute questions we have so this is my example i made an all about me webpage it's not super detailed but you'll get the gist of it so all about me um i want to tell you about me my name is willa and some of the things that i like to do is code bake cookies and hang out with my dog and i have an image here of some cookies what we're really interested here is style.css so this is our style element um this is our style.css sheet and this links to that so without this file this would just look like black text all to this side you know very boring but we have some background colors we have some different font colors we have this what what is this drop it in the chat go go go what is this what is this an example of i'm hovering my mouse over the list and it changes colors what is that an example of we talked about it today yes yes andrea it's a pseudo class it's a pseudo class so um basically um chat basically i'm gonna go through this css stuff a little bit body body is like a really large portion of our um stuff it applies to all of our headers all of our paragraphs so that's why i just try and make my body stuff pretty general my background color so you notice how that's the dominant background color of my web page it's like a nice cream color see this see how this is like a really really ugly thing it's not an rgb coat this is an example of a hex code so hex codes are what i said six digits letters and numbers in this case is just letters that correspond to a thing see this remember how i said oh if you want a custom color like reply will help you out with that and give you a little color selected wheel this is that so you can go around you can select different colors you know make it all pretty um and that's what this is this is a color selected wheel that will give you a hex color um replit does accept rgb codes but if you're doing the custom color selector in reply it's going to give you a hex code both of them work both of them are fine but i wanted to go over that um because there's a lot of a lot of hex codes in here so yeah let's go over that so body font family georgia garamond ariel these are all web safe fonts so if you have a font and you're like i want to use that i would recommend googling if it's web safe first and all you would do google ads is insert fondant here web safe because sometimes some operating systems don't support certain fonts don't ask me why they just don't um but like a lot of pretty standard ones are going to be supported so my font family is georgia garamond ariel that means if georgia isn't supported garamond it will go to garamond automatically and if garamond isn't supported it will go to ariel everything uses ariel like literally everything so you know if you can't think of a font just use ariel because it will be supported by everything margin 2em just gives me my margins on um the stuff and my background color is this hex code color that gives me all of my style attributes here yes h1 my first header if we go into the index.html we have where's my header i know i have it here here's my header h1 all about me right here same thing all about me so if we go into the style we see that h1 text align center what does that mean my text is in the center of my web page it's not off to the left it's not off to the right bot style georgia that means the font of this is georgia the font is georgia the color is this custom color hex code thing right here it's an ugly thing but you know in the background color of the header see this notice how it's green notice how it's this d2f 3da that's this color and that's because you can select different background colors for different attributes so that's why i have green here i have a yellow here i have an orange here i have blue here because i selected different background colors for different parts of my web page this is my selector this is my property this is my attribute remember how we were looking at that in the slides selector h1 we're selecting the header one the header one is gonna have the property of text align its text align is gonna be in the center does that make more sense now that we're seeing it in like a real web page yes no maybe so yes no maybe so how do we feel about that i'm looking at the chat yes good good good i like to see that i like to see that okay so um oh just wanna make sure that's not a question how can i change the colors excellent question so i'm just gonna use this um header one for example if i want to change the color i'm gonna click right here notice how it comes up like that it's a little bit weird but you have to like hover over it see i just like i'm not clicking it i have it clicked there but i just hover over it it's a little finicky i don't like this but i hover over it and this pops up this nice little color wheel and say i want to change that to like um let's go with red red works it's not the most aesthetically pleasing but red works say i want to change my color to red see how you have this bar here it says my old color was this purple my new color is this red right so that's my new color and it does it automatically see it just changed the color code and if i click run again now it's red so you're going to do that with anything you want to change the color of that's how you change color yes no maybe so does that make sense to people okay so i'm gonna go and talk because these are basically all the same there is one thing i want to get into with the images and there's one thing because this is a new tag that we haven't talked about before so i'm going to go into that image display block basically i display it in a single block margin left auto margin right auto with 50 what do these things mean this is how you center an image i know i'm gonna get 500 questions about that you can't just do you know margin left auto margin right auto as soon as that happens the margins equalize themselves because the computer wants them to be equal so as soon as you put both of them at auto it equalizes them with 50 now we're probably looking at that and we're like that doesn't make sense oh have a good one um be sure to check out the video so um with 50 i know we're talking about this and we're like that doesn't make sense that's not a pixel value you're right it isn't with 50 well that tells us that the image width so this distance from this corner to this corner is going to be exactly 50 percent of the distance from this corner to this corner or no sorry this corner to this corner because we have our padding remember our padding margin sorry margin remember how we had our margin 2em that's this distance from this to there so our width for our image is this entire blue block distance and by saying with 50 we're saying our image width is 50 of the image distance i could change that to 25 and it would look like this right so i'm going to change it back to 50 because it keeps it big but that's what that means and by doing margin left auto margin right auto we say okay the width is 50 gives me a given value and because the computer wants everything to be equal it's going to equalize it on both sides so we're going to have a centered image that's how we center an image ul and ul hover these are the pseudo classes yes does anyone want to tell me what we think ul is it's an interesting one it's not one that you would like guess so i know if we don't have any guesses that's that's okay does anyone want to guess what ul is i mean we're looking at it we have oh this is a background color and we have a red what do we think ul is it's no it's not under iron it's not ultimate label ul is actually list so if you want to make a list that looks like this with like the bullet points pretty standard list you're going to use the tag ul i'm going to go into my index.html show you guys so the tags for list are a little bit complicated you need two tags first one ul ul that tells me everything in here is part of the list now if i want to have different items on the list i can't just do like like code enter bake cookies enter hang out with my dog that's not how that works you need to use the li opening and closing tag so we see this li that seems more logically like list but that's just like a single item in the list so notice how i have ul ul everything in here is a list li item on list so code li first item on list second item bake cookies third item hang out with my dog so li is an item on a list and ul is encompassing the whole list it's an interesting one but it's a fun one to know yeah so the li is basically the equivalent of a bullet point yeah so it's an interesting one it's not one that you would like be familiar with we haven't talked about it yet but that's a fun one so ul is our list now remember we have pseudo classes so we have ul hover so that's our pseudo class so when ul is hovered on by our mouse remember here it changes its color to red so normally ul is this color this very dark black color but when we hover over it it's red and that's an example of how we would use our pseudo class so when something is hovered on it changes color yes no so if you want to get going that's totally fine i'm going to stay for an extra couple minutes answer questions go through them things with people if you want to and i'm going to stop the recording now so thank you everyone for coming if you are heading out
