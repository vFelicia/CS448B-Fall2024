With timestamps:

00:01 - okay
00:03 - so welcome thanks for joining us today
00:06 - to learn some python i hope you guys are
00:09 - as excited as i am
00:11 - um just for a brief introduction my name
00:14 - is rachel
00:15 - and i am an instructor for girls coded
00:18 - and i will be teaching this python
00:19 - course
00:22 - and i am also the other instructor and
00:23 - my name is moiseland
00:25 - and i'll also be teaching
00:28 - okay so this will be a um
00:32 - introductory course to python so if you
00:35 - do have experience with python
00:37 - then you might see some concepts that
00:40 - you've already learned before
00:44 - and um if you want some more information
00:47 - about our um if you want some more
00:50 - information about the course
00:52 - and our course content you can go on our
00:54 - website
00:55 - let's just get into the
00:58 - lesson today we'll be giving a basic
01:01 - introduction to python we'll just be
01:03 - going over some of the benefits and
01:05 - applications of python
01:07 - and then after we'll be writing a few
01:09 - lines of code
01:12 - um i will let morris take over
01:17 - after this loan
01:25 - okay so um what are the benefits of
01:27 - python python is very easy to learn
01:29 - because it has a clean syntax
01:30 - the code you'll be seeing later it's
01:32 - going to be very simple
01:33 - um hold on we'll give you an example
01:36 - later and it's very
01:37 - easy to understand which means that
01:39 - python is a good beginner
01:40 - python with a simple syntax can also get
01:43 - problem solved
01:44 - very fast because less lines are
01:45 - required to input a command
01:47 - um python also has a limited amount of
01:49 - libraries which means
01:50 - that python can be used for a variety of
01:52 - different ways such as
01:54 - graphing calculation and more also
01:57 - with python's massive support base this
02:00 - means that generally if you have any
02:01 - questions
02:02 - or problems you can always ask online
02:05 - for help because
02:06 - there are many people who knows how to
02:07 - use python's language
02:09 - also python is a good it's going to be
02:12 - used by
02:13 - a lot of companies which means that you
02:15 - can find a lot of jobs that have
02:16 - required python as a language
02:19 - and you will see why and how the
02:21 - language will be used in the next slide
02:30 - okay so um in web development python
02:33 - uses a server-sided coding which means
02:35 - that it can interact with databases and
02:37 - files that are within the website
02:39 - an example is if you take a website like
02:41 - amazon all the products when you click
02:43 - on them are always different
02:44 - but the layout stays the same this is
02:46 - where server-side coding comes to work
02:49 - and in back-end development is basically
02:51 - the same concept
02:52 - as web development which means like the
02:54 - code that operates behind the website
02:58 - so in software development um python is
03:00 - one of their many
03:01 - many languages that are supported so
03:04 - yeah and
03:04 - in data science in relation to web
03:07 - scripting works
03:08 - together because they both extract data
03:11 - and help display on the website for
03:13 - example a
03:14 - website called forecast watch extracts
03:16 - data from other sources
03:18 - and compiles all the data together which
03:20 - finally displays the collected data
03:22 - using a website code and in automation
03:25 - automation are
03:26 - kind of scripts where you can easily
03:27 - create to do very repetitive tasks
03:30 - or just save you some time an example
03:33 - this is
03:34 - creating a skip that a script that
03:35 - records a tv show
03:37 - that you like um during a certain time
03:39 - when it airs
03:41 - um in the last two mobile apps and
03:43 - artificial intelligence
03:44 - they both are they both um use python as
03:48 - one of their supportive languages
03:49 - and that'll be it and data science is
03:52 - definitely
03:53 - um one of the more common uses for
03:56 - python
03:57 - you can do a lot of things with data
03:59 - science such as creating libraries
04:02 - and there is actually there is a lot of
04:05 - free open source libraries that are open
04:08 - to the public
04:09 - so you could do a lot of cool things in
04:12 - data science like making graphs or
04:15 - data visualizations and yeah
04:18 - that's a really cool thing that we'll
04:19 - actually be going a little bit into
04:21 - later on in this course
04:27 - um now for some more general information
04:30 - on python
04:30 - python is an interpreted language so it
04:33 - is dynamic typed meaning that the
04:35 - reference type is determined on runtime
04:38 - and if you guys don't really get what
04:39 - this means um
04:41 - we will be going over it a little bit
04:43 - later on but basically what it means is
04:45 - that
04:46 - as you write the source code um it
04:49 - should
04:49 - the python will translate it into
04:52 - machine code
04:53 - so as an interpreted language this will
04:55 - do it when you run the program
04:57 - but if you compare it to something like
05:00 - java which is a static
05:02 - and compiled language then this the
05:04 - translation from
05:05 - the source code to the machine code
05:08 - will be before you actually run the
05:10 - program so a lot of people do use
05:13 - java because it is faster but python
05:15 - does have a lot of benefits as well
05:18 - python is also parsed through white
05:20 - space so this just means
05:22 - that it is really important that you
05:24 - make sure to
05:26 - indent and that you have the correct
05:27 - syntax or else
05:29 - python cannot read your code
05:32 - and what you're trying to do and again
05:36 - python is a super readable language
05:38 - since it has a really simple and clear
05:40 - syntax so the reader can
05:43 - really easily understand your code and
05:46 - your text
05:48 - and down here you will see these three
05:50 - arrows
05:51 - and this is what you call a chevron and
05:54 - this basically tells you that you
05:56 - are in the python interpreter and i can
05:59 - show you guys and rebel it really
06:01 - quickly
06:02 - which we'll be signing up for a little
06:04 - bit later in this lesson
06:07 - but um if you can see my cursor um
06:11 - can you guys see my cursor
06:15 - yeah okay so here this orange arrow
06:19 - in the interpreter side this is
06:21 - basically how replit
06:24 - writes the chevron it's just one arrow
06:26 - here
06:28 - but normally it is three arrows
06:38 - okay so this is just a comparison
06:41 - of the java versus the python syntax
06:44 - tags you can see that
06:46 - java is definitely much longer to just
06:48 - print out
06:49 - hello world into the console whereas
06:51 - python is just one line
06:58 - and um here are just some common types
07:01 - of errors
07:02 - what errors are are basically when
07:06 - python can't really understand or
07:07 - interpret your code say you made a type
07:10 - typo it doesn't mean that your
07:14 - program is bad at all it just means that
07:16 - python
07:17 - can't read what you're trying to say or
07:19 - can't understand what you're trying to
07:20 - say
07:22 - and usually these errors will pop up
07:24 - something like huge
07:25 - red letters you won't miss it and yeah
07:28 - the
07:29 - one of the more common types of errors
07:31 - is a syntax error which is basically
07:33 - when
07:34 - you write code that violates some of the
07:36 - grammatical errors
07:37 - so if you make some typos or you don't
07:40 - have the correct indentation
07:41 - as i mentioned before since python is a
07:44 - white space parse language
07:45 - um it will shoot you back an error if
07:48 - you're missing
07:48 - a quotation mark and as shown in the
07:52 - second line there's missing a quotation
07:53 - mark
07:54 - you will also get a syntax error message
07:58 - when you're on your code now for logic
08:01 - errors these are
08:02 - more difficult to debug
08:05 - this is when you think the program is
08:07 - right there aren't really any
08:09 - grammatical
08:10 - errors or syntax errors but the results
08:12 - just aren't what you expected they're
08:14 - really unpredictable
08:15 - and can sometimes make your program
08:18 - crash
08:19 - uh if you do have any problems with this
08:21 - as you go through the course
08:23 - please again go to our website fill out
08:25 - the
08:26 - tutoring request form and you can ask us
08:28 - any questions and
08:29 - the volunteers will try to get back to
08:31 - you as soon as possible
08:33 - now for exceptions these errors
08:36 - basically just indicate what happened
08:38 - they're not really fatal
08:40 - to your program but some examples are
08:43 - say you divided by zero which um
08:46 - you can't really do so it will just
08:48 - shoot you back an exception error
08:51 - um another thing could be if you try to
08:54 - print out a variable that you haven't
08:55 - declared before
08:56 - and that will also give you an exception
08:59 - error and these errors are
09:01 - usually handled with try and accept
09:03 - statements and we will be going over
09:05 - trying to accept statements later on in
09:06 - the
09:06 - course so you don't have to worry about
09:08 - that just yet
09:13 - and now we will just uh help you guys
09:15 - set up the replay account
09:17 - and morris will walk you through this
09:20 - okay so
09:20 - to um set up a reference account you
09:22 - want to click the link that rachel is
09:24 - going to link very soon or you can just
09:25 - go to
09:26 - repl ip and i'll give you some time for
09:30 - you guys
09:30 - to go to the website
09:40 - okay so once you're you are on the
09:41 - website you want to enter in your
09:43 - information that you want and yeah and
09:46 - make sure you
09:47 - are you log in for yeah
09:54 - so you're gonna get a pop-up where it's
09:56 - gonna ask you some
09:57 - questions about yourself it doesn't
09:59 - really matter what you put you just can
10:01 - fill it out based on who you are and
10:04 - once
10:05 - you're finished with that you're gonna
10:07 - um
10:08 - you'll get another pop-up where it's to
10:10 - um prompt you to ask
10:12 - it prompts you to select three languages
10:14 - you wanna
10:15 - of course put python as one of them and
10:17 - for the other
10:18 - two i suggest you guys to put java h
10:21 - and html css and js or javascript
10:24 - because
10:25 - you we will be teaching those in future
10:27 - courses
10:29 - and i'll just wait for you guys to
10:31 - photograph
10:33 - so on the very top right of your screen
10:35 - there's going to be a plus button
10:37 - and what you want to do is you're going
10:38 - to press the plus button to create a new
10:40 - replica
10:43 - and once you click on it you're going to
10:45 - prompt for a language so like
10:46 - to select python as plain language and
10:49 - once you click on language
10:50 - on the language you want you're going to
10:52 - there's going to be a randomly generated
10:54 - name it doesn't really matter what you
10:56 - click you can name it just any pretty
10:58 - much anything you want you can just
10:59 - leave
11:00 - it at the default meeting that is
11:01 - generated for you
11:03 - and i'll give you guys some time to do
11:04 - that
11:07 - everyone's done so now that we have our
11:10 - replay account
11:12 - all created we can start coding
11:16 - hope everyone's excited
11:27 - it's gonna be pretty difficult to switch
11:29 - between the tabs
11:30 - but make it work
11:41 - okay cool so replied will be the ide
11:43 - that we will be using
11:45 - um to run our code
11:49 - so we can just start by printing our
11:52 - first line of code um you guys can
11:54 - try this along with me just print out
11:58 - hello world and this this line basically
12:01 - just says
12:02 - um you will have to have the print
12:04 - function here with parentheses
12:06 - and then inside is whatever you want to
12:08 - print into the interpreter
12:10 - here and you guys will see once you
12:13 - press the
12:14 - green run button it will print hello
12:18 - world
12:18 - and this is a string
12:22 - you'll know this because um there are
12:24 - quotation marks around hello world
12:26 - but say you wanted to print something
12:28 - like
12:32 - an integer like one two three
12:36 - then you do not need to include the
12:38 - quotation marks
12:39 - around the numbers
12:44 - and this will just print one two three
12:46 - like so
12:47 - but you could also convert this into a
12:50 - string
12:53 - and it will print the same thing and
12:56 - don't worry too much about these data
12:57 - type strings and
12:59 - integers we will go over that more in
13:01 - the next lesson
13:06 - okay um i can just demonstrate how to
13:08 - print string again
13:11 - i want to print hi
13:16 - super high but say um you forgot a
13:19 - quotation mark
13:22 - then you will get the syntax error as i
13:23 - mentioned before and then it will try to
13:26 - guess um kind of what your error is
13:29 - and you can debug it and fix it like so
13:33 - it'll run saying hi
13:36 - and yeah python does not need a
13:38 - semicolon
13:40 - yeah python the syntax super clean no
13:43 - semicolon
13:44 - um no brackets really
13:48 - yeah really great language okay here
13:52 - this is
13:52 - um basically just saying um to print a
13:56 - variable so basically
14:01 - a equals 24 um the value
14:05 - 24 is being stored in the variable
14:08 - a so a is initialized that's 24 and if
14:12 - you want to
14:12 - print the value of a
14:16 - you can do so like this
14:20 - and it will print 24 in the interpreter
14:24 - and if you're not really sure what
14:25 - variables are and again if you don't
14:27 - really know what these data types are
14:28 - we will be going over it in our next
14:30 - lesson so don't worry too much about
14:32 - that
14:32 - now and now for input statements
14:37 - um this basically allows you to um
14:40 - print out a question and then have the
14:44 - user input their own response
14:47 - and then whatever the user inputs
14:50 - will be stored inside this variable a
14:54 - and then i will just show you guys how
14:56 - to do that
14:58 - oh yeah if i'm going too fast or if you
15:00 - guys have any questions please just let
15:02 - me know
15:03 - in the chat or you're going to need
15:05 - yourselves
15:08 - let me check the chat real quick
15:16 - okay that's cool i'll just show you guys
15:19 - the input statements
15:22 - equals what
15:25 - [Music]
15:33 - so here on the side here
15:37 - it printed what is your name into the
15:39 - editor and then it asks for your input
15:41 - so
15:41 - i would put rachel and then you can see
15:44 - that it was stored inside the variable
15:46 - ace as it was printed below here
15:49 - let's say you wanted to print something
15:50 - like hi with this variable a
15:54 - so it would say hi rachel then you can
15:56 - do
15:57 - hi and then comma a and this comma
16:00 - basically
16:01 - it concatenates the string together um
16:05 - but the comma uh creates a space between
16:08 - um hi and a
16:12 - show you guys here and i'll say hi
16:15 - rachel with this facebook team
16:17 - you could also do this with a
16:20 - plus sign but then the plus sign will
16:24 - not
16:26 - put any spacing in between so you'll
16:27 - have to manually do that yourselves
16:30 - and you can do any input here i can do
16:33 - morris
16:33 - and it will print high morphs
16:38 - is everyone good with that does anyone
16:41 - have any questions
16:43 - okay since we have um
16:46 - a lot more time for this lesson we could
16:49 - show a video
16:57 - and these will just give you a better
16:59 - idea of how you can
17:00 - apply python um
17:04 - yeah what how what applications you can
17:06 - do with python
17:07 - in this video i'm going to answer the
17:09 - top three questions my students asked me
17:11 - about
17:12 - python what is python what you can do
17:15 - with it
17:16 - and why is it so popular in other words
17:18 - what does it do
17:19 - that other programming languages don't
17:22 - python is the world's
17:23 - fastest growing and most popular
17:25 - programming language
17:26 - not just amongst software engineers but
17:28 - also amongst mathematicians
17:30 - data analysts scientists accountants
17:34 - network engineers and even kids because
17:37 - it's a very beginner friendly
17:38 - programming language
17:40 - so people from different disciplines use
17:42 - python for a variety of different tasks
17:44 - such as data analysis and visualization
17:47 - artificial intelligence and machine
17:49 - learning automation
17:50 - in fact this is one of the big uses of
17:52 - python amongst people who are not
17:54 - software developers
17:55 - if you constantly have to do boring
17:59 - repetitive tasks such as copying files
18:01 - and folders around
18:02 - renaming them uploading them to a server
18:05 - you can easily write a python
18:11 - sorry to automate all that and save you
18:15 - time and that's just one example if you
18:17 - continuously have to work with excel
18:19 - spreadsheets pdfs csv files download
18:23 - websites and parse them you can automate
18:25 - all that stuff with python
18:27 - so you don't have to be a software
18:28 - developer use python you could be an
18:30 - accountant
18:31 - a mathematician or a scientist and use
18:33 - python to make your life easier
18:36 - you can also use python to build web
18:38 - mobile
18:39 - and desktop applications as well as
18:41 - software testing or even hacking
18:43 - so python is a multi-purpose language
18:46 - now if you have some programming
18:47 - experience
18:48 - you might say but we can do all this
18:50 - stuff with other programming languages
18:52 - so what's the big deal about python here
18:55 - are a few reasons
18:56 - with python you can solve complex
18:58 - problems in less time with fewer lines
19:01 - of code
19:01 - here's an example let's say we want to
19:04 - extract
19:05 - the first three letters of the text
19:07 - hello world
19:08 - this is the code we have to write in c
19:10 - sharp this is how we do it in javascript
19:13 - and here's how we do it in python see
19:15 - how short and clean the language is
19:17 - and that's just the beginning python
19:20 - makes a lot of trivial things
19:21 - really easy with a simple yet powerful
19:23 - syntax
19:24 - here are a few other reasons why python
19:27 - is so popular
19:28 - it's a high level language so you don't
19:30 - have to worry about complex tasks such
19:32 - as memory management
19:33 - like you do in c plus plus it's cross
19:36 - platform which means
19:38 - you can build and run python
19:40 - applications on windows
19:42 - mac and linux it has a huge community
19:45 - so whenever you get stuck there is
19:46 - someone out there to help
19:48 - it has a large ecosystem of libraries
19:51 - frameworks and tools
19:52 - which means whatever you want to do it
19:54 - is likely that someone else has done it
19:56 - before
19:56 - because python has been around for over
19:59 - 20 years
20:00 - so in a nutshell python is a
20:02 - multi-purpose language with a simple
20:04 - clean and beginner friendly syntax all
20:07 - of that means
20:08 - python is awesome technically everything
20:11 - you do with python you can do with other
20:13 - programming languages
20:14 - but python simplicity and elegance has
20:16 - made it grow
20:17 - way more than other programming
20:19 - languages that's why it's the number one
20:21 - language
20:22 - employers are looking for so whether you
20:25 - are a programmer or an absolute beginner
20:27 - learning python opens up lots of job
20:29 - opportunities to you
20:31 - in fact the average python developer
20:33 - earns a whopping hundred and sixteen
20:35 - thousand dollars a year
20:37 - if you found this video helpful please
20:39 - support my hard work by liking it
20:43 - okay hope you guys enjoyed that video
20:48 - do have a lot more time left we could
20:52 - go over this workshop that is
20:55 - completely optional since there are a
20:57 - couple of
20:58 - concepts um that we haven't really
21:02 - gone too in depth with and we will be
21:04 - going more in depth about
21:05 - them in the next lesson
21:11 - but basically what this workshop entails
21:15 - is that um it is a mad libs workshop so
21:20 - you want to have like questions for the
21:22 - user
21:23 - to input their own answers so questions
21:25 - like what is your name
21:26 - what is your age and then let the user
21:30 - respond with anything that fits
21:34 - these conditions and then um whatever
21:37 - they respond will be inputted into this
21:40 - pre-prepared string that you guys will
21:42 - create and
21:45 - so here is an example say the user
21:47 - inputted
21:48 - taylor swift for a celebrity then
21:52 - it will be added into the string taylor
21:54 - swift is one of the best selling and
21:56 - then
21:57 - the same thing will happen for these so
21:58 - taylor swift is one of the best-selling
22:00 - gorillas
22:01 - as of hanukkah of 2020.
22:05 - yeah and i can give you guys an example
22:08 - about how this
22:09 - will work
22:20 - okay
22:24 - so you can initialize a variable
22:27 - called name with um
22:30 - actually yeah you can initialize it with
22:33 - the
22:33 - input what is your name
22:40 - and then you can do another one that is
22:43 - say
22:44 - age you can ask the user's input about
22:46 - what their age is
22:51 - i'm really sorry for the lag
22:55 - and then for the third variable you
22:57 - could put
22:58 - a pet and then you can ask the user
23:02 - name a pet
23:07 - and then below here you want to
23:11 - print out a string that utilized that
23:13 - and concatenates the variables with the
23:15 - string
23:16 - so you could say something like my name
23:19 - is and then you will
23:23 - assign and then you put in the variable
23:25 - you want to input so here would be name
23:29 - and then you could put i
23:34 - am i'm sorry i forgot to add another
23:37 - plus sign here
23:39 - but i am and another plus sign
23:43 - and then put in the variable age
23:48 - and then another plus sign and then you
23:50 - could say and i
23:51 - have a
23:57 - put in the variable
24:02 - x
24:04 - should run smoothly
24:07 - um what is your name i'll put rachel
24:10 - what is your age 16
24:16 - and then name a pet dog
24:21 - oh there was a spacing
24:24 - issue but here you can see it says
24:28 - my name is rachel i am 16 and i have a
24:30 - dog and that's generally what
24:32 - mad libs is and how you would do it um
24:35 - so if you guys want to try that out
24:37 - right now you guys could and if you have
24:39 - any questions you can ask us
24:47 - or we want i can do another one
24:50 - um if you guys have some fun
24:53 - variables you want to create first a fun
24:56 - story you guys want me to create
24:58 - and i can just visual give you guys a
25:00 - visualization of that
25:16 - the input function yes
25:20 - okay so we will be again going over this
25:24 - more in depth in the next lesson um
25:28 - so basically this input function here
25:32 - you type in the input function and then
25:34 - it prints out
25:36 - what is your name or whatever you put in
25:38 - between the parenthesis it prints it out
25:40 - into
25:40 - the interpreter here it prints it out
25:44 - into the interpreter what is your name
25:46 - here
25:46 - and the input function here asks
25:50 - the user to input whatever they want
25:53 - you could input a string an integer
25:56 - anything like that and then whatever the
25:59 - user
26:00 - inputs will be stored inside this
26:02 - variable
26:03 - you can create any type of variable
26:05 - we'll be going over variables more later
26:08 - but yeah it stores this input into the
26:11 - variable
26:12 - here in this case it'll be name and then
26:15 - since this input ratio is stored inside
26:19 - name you can call declare the variable
26:23 - um you can call the variable sorry you
26:25 - can call the variable in
26:26 - um this print function here
26:29 - if that makes sense um does that make
26:33 - sense
26:34 - oh yeah oh rachel um someone has a
26:36 - question of um whether
26:38 - the slides are going to be sent to the
26:39 - participant
26:41 - oh yeah so this um this
26:44 - uh lesson is being recorded and then we
26:46 - are going to be uploading it on our
26:48 - website so you guys can rewatch it
26:49 - as many times as you need
26:56 - okay yeah i can show how i name i added
26:58 - my name to the box
27:01 - so here it's just what is your name it
27:04 - asks for my input so here i can type
27:06 - anything i want
27:07 - i can type precontrol here or i can type
27:10 - in
27:10 - morris um you can type in anything
27:16 - and then from here you just press enter
27:18 - and it basically
27:19 - that's all you need to do to get this to
27:21 - be stored inside of
27:23 - the variable name
27:26 - is that did i answer your question liesl
27:30 - if that's how i pronounce it i'm sorry
27:32 - okay
27:33 - okay cool
27:36 - um i think i'll just be concluding this
27:40 - meeting thanks everyone for joining us
27:42 - today
27:43 - just to learn a little bit about python
27:45 - and coding
27:47 - um if you need any help
27:50 - please feel free to reach out to us you
27:53 - can go to
27:54 - you can email us at girlscodepv
27:57 - gmail.com or you can email
27:59 - me um with the email i sent you guys
28:01 - with the link with
28:03 - um or you can go on our website i will
28:06 - show you guys
28:07 - up here you will see on the bar the
28:09 - button free tutoring
28:12 - you can click that
28:17 - and then you can just scroll down to
28:19 - this button book
28:27 - and from here you just fill out the form
28:30 - and ask your questions and one of the
28:31 - volunteers will try to
28:33 - um answer them as soon as they see it
28:40 - yeah that concludes our lesson thanks
28:42 - everyone for coming
28:44 - i hope you guys enjoyed this lesson bye
28:50 - bye

Cleaned transcript:

okay so welcome thanks for joining us today to learn some python i hope you guys are as excited as i am um just for a brief introduction my name is rachel and i am an instructor for girls coded and i will be teaching this python course and i am also the other instructor and my name is moiseland and i'll also be teaching okay so this will be a um introductory course to python so if you do have experience with python then you might see some concepts that you've already learned before and um if you want some more information about our um if you want some more information about the course and our course content you can go on our website let's just get into the lesson today we'll be giving a basic introduction to python we'll just be going over some of the benefits and applications of python and then after we'll be writing a few lines of code um i will let morris take over after this loan okay so um what are the benefits of python python is very easy to learn because it has a clean syntax the code you'll be seeing later it's going to be very simple um hold on we'll give you an example later and it's very easy to understand which means that python is a good beginner python with a simple syntax can also get problem solved very fast because less lines are required to input a command um python also has a limited amount of libraries which means that python can be used for a variety of different ways such as graphing calculation and more also with python's massive support base this means that generally if you have any questions or problems you can always ask online for help because there are many people who knows how to use python's language also python is a good it's going to be used by a lot of companies which means that you can find a lot of jobs that have required python as a language and you will see why and how the language will be used in the next slide okay so um in web development python uses a serversided coding which means that it can interact with databases and files that are within the website an example is if you take a website like amazon all the products when you click on them are always different but the layout stays the same this is where serverside coding comes to work and in backend development is basically the same concept as web development which means like the code that operates behind the website so in software development um python is one of their many many languages that are supported so yeah and in data science in relation to web scripting works together because they both extract data and help display on the website for example a website called forecast watch extracts data from other sources and compiles all the data together which finally displays the collected data using a website code and in automation automation are kind of scripts where you can easily create to do very repetitive tasks or just save you some time an example this is creating a skip that a script that records a tv show that you like um during a certain time when it airs um in the last two mobile apps and artificial intelligence they both are they both um use python as one of their supportive languages and that'll be it and data science is definitely um one of the more common uses for python you can do a lot of things with data science such as creating libraries and there is actually there is a lot of free open source libraries that are open to the public so you could do a lot of cool things in data science like making graphs or data visualizations and yeah that's a really cool thing that we'll actually be going a little bit into later on in this course um now for some more general information on python python is an interpreted language so it is dynamic typed meaning that the reference type is determined on runtime and if you guys don't really get what this means um we will be going over it a little bit later on but basically what it means is that as you write the source code um it should the python will translate it into machine code so as an interpreted language this will do it when you run the program but if you compare it to something like java which is a static and compiled language then this the translation from the source code to the machine code will be before you actually run the program so a lot of people do use java because it is faster but python does have a lot of benefits as well python is also parsed through white space so this just means that it is really important that you make sure to indent and that you have the correct syntax or else python cannot read your code and what you're trying to do and again python is a super readable language since it has a really simple and clear syntax so the reader can really easily understand your code and your text and down here you will see these three arrows and this is what you call a chevron and this basically tells you that you are in the python interpreter and i can show you guys and rebel it really quickly which we'll be signing up for a little bit later in this lesson but um if you can see my cursor um can you guys see my cursor yeah okay so here this orange arrow in the interpreter side this is basically how replit writes the chevron it's just one arrow here but normally it is three arrows okay so this is just a comparison of the java versus the python syntax tags you can see that java is definitely much longer to just print out hello world into the console whereas python is just one line and um here are just some common types of errors what errors are are basically when python can't really understand or interpret your code say you made a type typo it doesn't mean that your program is bad at all it just means that python can't read what you're trying to say or can't understand what you're trying to say and usually these errors will pop up something like huge red letters you won't miss it and yeah the one of the more common types of errors is a syntax error which is basically when you write code that violates some of the grammatical errors so if you make some typos or you don't have the correct indentation as i mentioned before since python is a white space parse language um it will shoot you back an error if you're missing a quotation mark and as shown in the second line there's missing a quotation mark you will also get a syntax error message when you're on your code now for logic errors these are more difficult to debug this is when you think the program is right there aren't really any grammatical errors or syntax errors but the results just aren't what you expected they're really unpredictable and can sometimes make your program crash uh if you do have any problems with this as you go through the course please again go to our website fill out the tutoring request form and you can ask us any questions and the volunteers will try to get back to you as soon as possible now for exceptions these errors basically just indicate what happened they're not really fatal to your program but some examples are say you divided by zero which um you can't really do so it will just shoot you back an exception error um another thing could be if you try to print out a variable that you haven't declared before and that will also give you an exception error and these errors are usually handled with try and accept statements and we will be going over trying to accept statements later on in the course so you don't have to worry about that just yet and now we will just uh help you guys set up the replay account and morris will walk you through this okay so to um set up a reference account you want to click the link that rachel is going to link very soon or you can just go to repl ip and i'll give you some time for you guys to go to the website okay so once you're you are on the website you want to enter in your information that you want and yeah and make sure you are you log in for yeah so you're gonna get a popup where it's gonna ask you some questions about yourself it doesn't really matter what you put you just can fill it out based on who you are and once you're finished with that you're gonna um you'll get another popup where it's to um prompt you to ask it prompts you to select three languages you wanna of course put python as one of them and for the other two i suggest you guys to put java h and html css and js or javascript because you we will be teaching those in future courses and i'll just wait for you guys to photograph so on the very top right of your screen there's going to be a plus button and what you want to do is you're going to press the plus button to create a new replica and once you click on it you're going to prompt for a language so like to select python as plain language and once you click on language on the language you want you're going to there's going to be a randomly generated name it doesn't really matter what you click you can name it just any pretty much anything you want you can just leave it at the default meeting that is generated for you and i'll give you guys some time to do that everyone's done so now that we have our replay account all created we can start coding hope everyone's excited it's gonna be pretty difficult to switch between the tabs but make it work okay cool so replied will be the ide that we will be using um to run our code so we can just start by printing our first line of code um you guys can try this along with me just print out hello world and this this line basically just says um you will have to have the print function here with parentheses and then inside is whatever you want to print into the interpreter here and you guys will see once you press the green run button it will print hello world and this is a string you'll know this because um there are quotation marks around hello world but say you wanted to print something like an integer like one two three then you do not need to include the quotation marks around the numbers and this will just print one two three like so but you could also convert this into a string and it will print the same thing and don't worry too much about these data type strings and integers we will go over that more in the next lesson okay um i can just demonstrate how to print string again i want to print hi super high but say um you forgot a quotation mark then you will get the syntax error as i mentioned before and then it will try to guess um kind of what your error is and you can debug it and fix it like so it'll run saying hi and yeah python does not need a semicolon yeah python the syntax super clean no semicolon um no brackets really yeah really great language okay here this is um basically just saying um to print a variable so basically a equals 24 um the value 24 is being stored in the variable a so a is initialized that's 24 and if you want to print the value of a you can do so like this and it will print 24 in the interpreter and if you're not really sure what variables are and again if you don't really know what these data types are we will be going over it in our next lesson so don't worry too much about that now and now for input statements um this basically allows you to um print out a question and then have the user input their own response and then whatever the user inputs will be stored inside this variable a and then i will just show you guys how to do that oh yeah if i'm going too fast or if you guys have any questions please just let me know in the chat or you're going to need yourselves let me check the chat real quick okay that's cool i'll just show you guys the input statements equals what so here on the side here it printed what is your name into the editor and then it asks for your input so i would put rachel and then you can see that it was stored inside the variable ace as it was printed below here let's say you wanted to print something like hi with this variable a so it would say hi rachel then you can do hi and then comma a and this comma basically it concatenates the string together um but the comma uh creates a space between um hi and a show you guys here and i'll say hi rachel with this facebook team you could also do this with a plus sign but then the plus sign will not put any spacing in between so you'll have to manually do that yourselves and you can do any input here i can do morris and it will print high morphs is everyone good with that does anyone have any questions okay since we have um a lot more time for this lesson we could show a video and these will just give you a better idea of how you can apply python um yeah what how what applications you can do with python in this video i'm going to answer the top three questions my students asked me about python what is python what you can do with it and why is it so popular in other words what does it do that other programming languages don't python is the world's fastest growing and most popular programming language not just amongst software engineers but also amongst mathematicians data analysts scientists accountants network engineers and even kids because it's a very beginner friendly programming language so people from different disciplines use python for a variety of different tasks such as data analysis and visualization artificial intelligence and machine learning automation in fact this is one of the big uses of python amongst people who are not software developers if you constantly have to do boring repetitive tasks such as copying files and folders around renaming them uploading them to a server you can easily write a python sorry to automate all that and save you time and that's just one example if you continuously have to work with excel spreadsheets pdfs csv files download websites and parse them you can automate all that stuff with python so you don't have to be a software developer use python you could be an accountant a mathematician or a scientist and use python to make your life easier you can also use python to build web mobile and desktop applications as well as software testing or even hacking so python is a multipurpose language now if you have some programming experience you might say but we can do all this stuff with other programming languages so what's the big deal about python here are a few reasons with python you can solve complex problems in less time with fewer lines of code here's an example let's say we want to extract the first three letters of the text hello world this is the code we have to write in c sharp this is how we do it in javascript and here's how we do it in python see how short and clean the language is and that's just the beginning python makes a lot of trivial things really easy with a simple yet powerful syntax here are a few other reasons why python is so popular it's a high level language so you don't have to worry about complex tasks such as memory management like you do in c plus plus it's cross platform which means you can build and run python applications on windows mac and linux it has a huge community so whenever you get stuck there is someone out there to help it has a large ecosystem of libraries frameworks and tools which means whatever you want to do it is likely that someone else has done it before because python has been around for over 20 years so in a nutshell python is a multipurpose language with a simple clean and beginner friendly syntax all of that means python is awesome technically everything you do with python you can do with other programming languages but python simplicity and elegance has made it grow way more than other programming languages that's why it's the number one language employers are looking for so whether you are a programmer or an absolute beginner learning python opens up lots of job opportunities to you in fact the average python developer earns a whopping hundred and sixteen thousand dollars a year if you found this video helpful please support my hard work by liking it okay hope you guys enjoyed that video do have a lot more time left we could go over this workshop that is completely optional since there are a couple of concepts um that we haven't really gone too in depth with and we will be going more in depth about them in the next lesson but basically what this workshop entails is that um it is a mad libs workshop so you want to have like questions for the user to input their own answers so questions like what is your name what is your age and then let the user respond with anything that fits these conditions and then um whatever they respond will be inputted into this preprepared string that you guys will create and so here is an example say the user inputted taylor swift for a celebrity then it will be added into the string taylor swift is one of the best selling and then the same thing will happen for these so taylor swift is one of the bestselling gorillas as of hanukkah of 2020. yeah and i can give you guys an example about how this will work okay so you can initialize a variable called name with um actually yeah you can initialize it with the input what is your name and then you can do another one that is say age you can ask the user's input about what their age is i'm really sorry for the lag and then for the third variable you could put a pet and then you can ask the user name a pet and then below here you want to print out a string that utilized that and concatenates the variables with the string so you could say something like my name is and then you will assign and then you put in the variable you want to input so here would be name and then you could put i am i'm sorry i forgot to add another plus sign here but i am and another plus sign and then put in the variable age and then another plus sign and then you could say and i have a put in the variable x should run smoothly um what is your name i'll put rachel what is your age 16 and then name a pet dog oh there was a spacing issue but here you can see it says my name is rachel i am 16 and i have a dog and that's generally what mad libs is and how you would do it um so if you guys want to try that out right now you guys could and if you have any questions you can ask us or we want i can do another one um if you guys have some fun variables you want to create first a fun story you guys want me to create and i can just visual give you guys a visualization of that the input function yes okay so we will be again going over this more in depth in the next lesson um so basically this input function here you type in the input function and then it prints out what is your name or whatever you put in between the parenthesis it prints it out into the interpreter here it prints it out into the interpreter what is your name here and the input function here asks the user to input whatever they want you could input a string an integer anything like that and then whatever the user inputs will be stored inside this variable you can create any type of variable we'll be going over variables more later but yeah it stores this input into the variable here in this case it'll be name and then since this input ratio is stored inside name you can call declare the variable um you can call the variable sorry you can call the variable in um this print function here if that makes sense um does that make sense oh yeah oh rachel um someone has a question of um whether the slides are going to be sent to the participant oh yeah so this um this uh lesson is being recorded and then we are going to be uploading it on our website so you guys can rewatch it as many times as you need okay yeah i can show how i name i added my name to the box so here it's just what is your name it asks for my input so here i can type anything i want i can type precontrol here or i can type in morris um you can type in anything and then from here you just press enter and it basically that's all you need to do to get this to be stored inside of the variable name is that did i answer your question liesl if that's how i pronounce it i'm sorry okay okay cool um i think i'll just be concluding this meeting thanks everyone for joining us today just to learn a little bit about python and coding um if you need any help please feel free to reach out to us you can go to you can email us at girlscodepv gmail.com or you can email me um with the email i sent you guys with the link with um or you can go on our website i will show you guys up here you will see on the bar the button free tutoring you can click that and then you can just scroll down to this button book and from here you just fill out the form and ask your questions and one of the volunteers will try to um answer them as soon as they see it yeah that concludes our lesson thanks everyone for coming i hope you guys enjoyed this lesson bye bye
