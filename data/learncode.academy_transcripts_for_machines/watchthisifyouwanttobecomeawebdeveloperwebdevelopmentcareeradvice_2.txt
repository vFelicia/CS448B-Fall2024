hey there so I don't know what I'm going to title this video yet but as far as I'm concerned now the title is what I wish someone told me when I started web development um I have people ask me all the time hey I want to start web development what do I do what do I learn and uh at what point are employers going to say man I want to hire this guy and so I'm like oh you found the right video if that's you you've got to watch this video because I'm going to shortcut years off your learning experience and I'm going to tell you stuff that a lot of developers don't like to tell people cuz they like to keep it a secret cuz it makes them feel like they'll be easier to hire if nobody else knows this stuff but I don't think that way I'm just going to tell you everything so if you're wanting to learn web development I'm going to tell you this this is it I'm going to dump it all out into this video so track with me I've got a cogle mind map here that hopefully will make it easier to understand um and I'll show you what to learn and what order to learn it in and what course to take to actually be ready for a job description that someone is trying to find today looking to hire uh no matter what you do if you're going to go into web development you got to learn basic front end that's HTML CSS JavaScript this is your first step get comfortable in the basics of all three of these and here's the reason why is because no matter what browser you're using if you're using Internet Explorer Firefox Chrome iPhone iPad you know Android it's running these three languages in the browser it's opening up an HTML page with CSS Styles and JavaScript functionality everything runs this these are the three browser languages it used to be flash was on this list but thank God flash is dying out um just don't learn flash don't put it on your resume it doesn't help it doesn't really you know maybe there's a flash developer out there that's going to get mad at me for saying that but it's it's basically a dead technology um basic front end learn it learn HTML that's easy you'll learn it in a in a couple days uh CS s you don't have to become a CSS ninja just just learn how to do a basic layout on your own be comfortable with it JavaScript you don't have to do a whole bunch of crazy stuff but learn the concepts of how JavaScript talks to a server um which if you're if you're starting off learn jQuery and learn jQuery ajax jQuery ajax command that and then you're done I mean if if you want to go back and that's about all you need to learn at first uh just learn how to how to hit a web service get some information and spit it out on a page basic front end that's your first thing to learn um and then no matter which route you take I'll go into this next no matter which route you take you want to learn a few things basic terminal usage a lot of people avoid the command line or The Terminal because it terrifies them to just see a black screen with a prompt um it's not scary it's just scary because you don't know which five commands to use you're going to be locked into this realm of basic frontend until until you learn how to use the terminal no matter which route you take so you've got to learn it and then the next step is learn GitHub I got a video on these two uh basic level for this I'll put it in the description um and you know I also have a blog post that I will put the link to in the description that kind of is going to recap all this give you a link to this mind map because you're going to forget it probably um and I also strongly encourage you too uh to look into team Treehouse because they have lessons to learn most of these things and the first 15 days I have a link on the blog post for getting the first 15 days for free of video lessons and after that it's only like $20 a month a lot of people I talk to use Treehouse and they are learning the web stuff fast uh they're really really good lessons on Treehouse so check out that link no matter what you do uh get 15 days for free uh and so back to this you want to learn basic terminal in GitHub you want to learn about web services slash they're also called apis um specifically they can be called restful web services you don't have to learn how to make them but you want to kind of learn what these things are basically what a web service is is it's how the browser talks to a server real time and gets information it's how a server talks to another server and gets information to send to the browser that kind of thing just kind of be comfortable with the concept of what a web service is if you're doing jQuery ajax then you'll basically be using web services I'll leave it at that cuz we'll get into it later okay that's off the table for now and now you've got two choices you've learned basic run end you know how to use the command line in GitHub I'm ready to become like a fullon developer that people are hiring for people are hiring frontend developers and they're hiring backend developers and people are hiring people that know both uh but you want to pick one or the other and then you can get a job and so to kind of before I illustrate what those are let's say how does the internet work real quick just so you guys can understand what those two roles are we got these three things we got the client also called the front end and what that is is that's your web browser that's Chrome that's your iPhone that's whatever and how the internet works is is you say give me twitter.com and so the client the browser sends off twitter.com and it pulls up the twitter.com server and the server says okay they pulled up Twitter what do we do well we give them the homepage by default what's the homepage have on it it has the top hundred most popular tweets okay so then it talks to the database which is where all this information's stored it says give me the top most you know top most recent tweets or whatever that comes back to the server the server puts it together in HTML spits it back out to the client in the front end that makes it look all beautiful with their CSS and JavaScript and then you know the client does some smarter things as you scroll down and you're running out of tweets it's it real time talks to the server says okay I need 10 more tweets okay let's get 10 more let's send it back out to the JavaScript um and so that's kind of your Two Worlds you got your client which is called front end your server which is called backend and you kind of it used to be these were the only developers cuz if you think like 10 years ago for the internet the front end was ugly it was just information and links and it was this basic front end was front end that's all there was uh but that is not the case anymore things have to be slick and smart and they have to have cool user experiences fun user experiences you have to know where the mouse is on the page and do specific things based off of what the user's doing you have to let them log in and load up their profile without reloading a new page I mean that's basically frontend developer so if you're passionate about all that stuff go frontend you can always learn backend and add back end into it later and vice versa if you like data and you like budgeting and finances and you like organization and stuff like that you're not as much of you might not call yourself as much the the raw creative type who has to be into Indie music that nobody's heard of H you might want to go backend it first I'm not going to stereotype the two but um either way if you like development you'll like them both so that's kind of that's kind of might help you decide what to take so I'm going to get rid of you you're gone don't need you anymore let's say you've chosen to go frontend developer don't get overwhelmed there's not much on this it just looks complicated this is if you learn these things you are ripe and ready to go get a job as a front end developer and people are going to want to hire you so the first thing you want to do is you want to learn a JavaScript framework technically an MV MVC or MV whatever MV star JavaScript framework there's about 30 of them out there but I'll tell you what people are hiring mostly backbone JS developers and Angular JS developers right now used to be backbone is like the main one and then there's a decent bit of knockout uh but the majority of jobs um backbone or angular is what they're looking for uh and here's kind of why is is when you start writing thousands and thousands of lines of JavaScript to make this whole application that does your whole thing without ever navigating to another page you need a framework that helps you organize that code in a way that makes sense is not complicated and just works without breaking if the user does some random thing so that's where these Frameworks come in um they're JavaScript they're all JavaScript but they kind of have their own Dynamic to them like kind of their own language and their way of doing things if I was to pick one to learn I'd pick angular I I honestly think angular's backbone is barely ahead in terms of how many jobs are out there right now um but there's a lot of jobs a lot of people looking for angular developers now it's almost even and in the next couple years I think angular is just going to be more popular Google makes angular it's kind of one of the big reasons um but seriously if you learn one of these well people are looking for backbone JS developer that's an actual job title Angular JS developer um learn one of these learn how to make a single page web app with these things um and then if you want to learn both it'll just make you available for more jobs and then whichever one you learn I put knockout on there because it's it's kind of popular it's it's enough to be mentioned and there's a bunch of other ones that that are out there that sure they're great to learn Ember and other stuff but hey you're learning pick one of these two unit testing whatever you do learn how to write tests for your application and your framework it's going to look different for angular it's going to look different for backbone um this is kind of like phase two you can get a job without knowing unit testing uh it'll just kind of show that you're a true Pro if you know how to write tests for your application and I'll leave it at that this is not a video where I'm going to get into what that is so that's the that's going to be the toughest part right there learn a JavaScript framework um and learn jQuery you got to know jQuery but that's not really a framework uh that's just kind of kind of falls into basic front end um you got got to learn from there a CSS tool these are really easy these aren't languages they're tools SAS less stylist basically you're writing CSS for all intensive purposes but you can do some cool stuff like create variables and and have it reuse certain parts of your code so you don't have to write it for everything uh not going to go into it it's pretty easy to learn it in a few days SAS is the one to learn less is almost identical for all intents and purposes it's almost the exact same thing um and then you want to learn a CSS framework which is bootstrap or Foundation are pretty much the two most popular um bootstrap I have a video out for that I'll throw it in the description uh what these let you do is these let you write with very little code uh a responsive web app like a web app that just looks cool looks clean they give you a lot of builtin CSS rules to help you build widgets and build page layouts so you're not having to hand code all this and it also sets you up to where you can build it and tell the next developer hey I did this with bootstrap and they know how to go find information from bootstrap on how and why you did what you did um and that kind of falls into responsive design you need to know what this is and how to do it responsive design is I don't know if you've seen all the new web pages now if you resize your browser the layout of the page changes to fit the size of screen you have so if you pull it up on an iPad the page looks different um and if you have a small browser window it looks different um images are smaller or bigger that's called responsive design uh you got to know that now it's not it's not super complicated you can really learn it in a couple weeks um and bootstrap and Foundation are both responsive Frameworks so if you learn them you're kind of learning responsive design so that's a tool that's not really so much a language and then frontend build tools these are just little tools that you got to learn so remember how I mentioned if you're building a whole JavaScript application you're going to have thousands of lines of code sometimes and you don't want them all in one file that's a disaster so you got to split them up into a bunch of different JavaScript files maybe one for your header one for your footer one for your sidebar one for your profile one for your tweets listing um and then you want to be able to build those together into one compressed Javascript file so you're only sending your browser one file instead of 20 or 100 files and so that's kind of where your build tool runs in these all run on the command line which is why you got to learn the command line and that's going to run either grunt or gulp grunt is basically the popular big dog that's been out for Years everybody everybody uses grunt gulp is the new guy that's I think a lot easier to use and it's basically a replacement for grunt um learn grunt first take a look at gulp basically what this is going to do is you get a bunch of grunt will listen and as you save a Javascript file it'll then compress all the JavaScript files together and spit it out and reload your web page real time so that's kind of what grunt does um as you save your SAS file it'll process it and turn it into a CSS file that's kind of the what grunt does um and then Y.O yman uses grunt uh and that's just kind of a fun thing look into that Bower is package management package management is becoming a really big deal uh you don't want to have to give people a jQuery file and a backbone.js file you just want to say hey download the project the project has a package file that says you'll need jQuery backbone all that you got to learn basically what package management means um and so instead of putting all those files in your project you just put a package on it which is just usually three lines of code that says when you run install get backbone get jQuery get SAS get grunt get all these things and then your Project's ready to go on your machine so got to kind of learn about bow and package management and then browserify and requirejs learn how to use one or the other of these ideally both requirejs has been the popular guy for a while but browser fi is I think a lot better and a lot of people are going to be using this guy in the future and already are um I'll leave that for now so that's frontend developer hopefully I didn't freak you out so far but if you want to go front and develop a route this is stuff that I so wish somebody had told me years ago I had to figure this out over the course of time um let's say you're not that you want to go backend developer woohoo backend developer uh I want to do that I want to be that server guy that works with databases um here's basically a backend server is going to be running one of these Technologies it's going to be running Ruby on Rails node.js which is Javascript a lot of guys like that a lot of guys don't like that PHP python which python usually runs Jango umnet which is going to be the C language um and you'll be writing unit tests for whatever technology you pick if you're looking for jobs out there there's a ton of Ruby on Rails jobs absolute ton of Ruby on Rails jobs a growing number of node.js jobs because it's really cool to be able to write JavaScript on the front end and JavaScript on the back end um I love node node is my favorite uh because I started out as a frontend developer um node is super cool a lot of PHP jobs they don't tend to pay as well because it's uh a lot more people know PHP and uh it tends to not be as used for super highlevel super large sites some people are going to hate me for saying that but if you're looking for jobs and you're you're saying hey just tell me which one to pick I'd say go Ruby on Rails go Ruby on Rails um no JS if you already know JavaScript um and you like JavaScript a lot I I'd say pick one of these two uh learn some PHP learn WordPress learn um Symphony you know there's a lot of PHP has a ton of um Frameworks out there for it Ruby on Rails is the framework um and node.js is going to be writing JavaScript and you'll be writing it with express.js um I actually have a video for getting started on express.js it's not really for super beginners it's kind of for backend developers already but I'll put that in the description um once you pick your backend technology you're going to want to learn how to wire that up I'm going to move this out of the way here you're going to want to learn how to wire that up into different databases uh so say you picked Ruby on Rails yipp I want to be a Ruby on Rails developer learn how Ruby on Rails talks to a myql database once you've learned that uh learn how it talks to a mongodb database it's probably not going to be a world of difference they you're getting information or you're saving information to the database um then learn how it save stuff to a reddis database um those are kind of the big three to learn right now there's probably 10 or 20 you don't have to learn them all just get comfortable with more than one and get over the fear of of working with a database uh that's kind of you know you want to learn how to talk to a database and then you want to learn some other things is how do I build a restful service now how do I build an API so JavaScript can talk to me and say give me 10 tweets and I'm going to build an API a web service that JavaScript can talk to that will help them retrieve tweets through the database through my service learn how to build services um usually any tutorial on Ruby on Rails will teach you how to do this uh learn how to do security do some Googling on Ruby on rail security Ruby on Rails security best practices learn what stupid mistakes not to make with Ruby that will leave your website vulnerable uh next thing learn about ooth 2 uh have you ever seen those things that say Hey login with my Google account log in with my Facebook account that's called ooth uh that is so popular right now you want to know how someone can log into your application with their Google account with their Facebook account which brings us to authorization authentication you want to learn what those are what the differences between the two pretty easy straightforward learn how to make a username password login on Ruby and rails uh that's called um your authentication uh and then learn how to restrict people from certain parts of your site unless they're authenticated unless they're logged in that's called authorization learn how to restri them from getting uh two tweets unless they're logged in make sure learn how to restrict someone from posting to someone else's Twitter account unless they're logged in as that person that's all authorization stuff um so learn how that works and then the last thing on that is you want to learn caching learn um I won't go into it too much but learn memcached learn engine X too high level to leave for this conversation but you want to learn some of these caching things varnish and Squid are also good I threw those on there if you just want to learn a ton are you overwhelmed yet are you freaking out there's if you look at it you don't have to learn everything on here learn one pick one I picked Ruby on Rails learn how to tie it into one or more databases learn a couple things that's your learning curve for the next two years go for it and then you're going to be hired and people are going to love you because you know the right stuff um if you're a backend guy and you're super loving backend and you want to go to a higher level um look into Dev Ops Dev Ops is basically server management how do I manage I have such a big website that I have to have 20 different servers to handle all the traffic what do people use when they're doing that kind of stuff that's like devops world that's like backend part two I'm not going to go into that because most of you guys probably aren't anywhere near that world but if you are and you want to learn it there's your list of stuff to learn your different tools that you'll Le uh use in those Arenas so that's it I hope I didn't freak you out and overwhelm you it's okay if you have to watch this video four times to not get crazy overwhelmed but if you pick one of these tracks and learn the Technologies you're good to go you're going to get hired you're going to be a person that people want on their team because these are the technologies that people are using right now this is what it takes to be a web developer in 2014 and hope you liked it have an awesome day