hey in this video we are going to be covering responsive design what responsive design means is you want your website to look great on any size device from the smallest of mobile devices all the way up to the largest of desktop screens that's the concept of responsive design now we've got a website here that is not responsive we kind of just built out a website as a part of our tutorial for new beginners course if you'd like to see this course and how we got to here i'm going to put the link to the full course in the description and i'm also going to put in the description the link to the code as is now and the link to the code where we end up when we make this responsive so you can see right now that if you were to view this on a small screen we've got some stuff that starts breaking down this content starts bleeding off the page the menu gets weird and this background starts looping so at this point we're going to want to add responsive rules so when i'm approaching turning a website into a responsive website there's really two things that i think about phase one is let's work with the content let's make sure the responsive navigation or the net let's make sure the navigation looks good on mobile and desktop devices sometimes that means writing a completely new mobile navigation or sometimes that means just adjusting your navigation to look good on mobile technically you actually want to design mobile first these days because more people are probably going to hit your website statistically from a mobile device than a desktop device we started desktop first in this because it's a little easier to learn that way but you should actually design mobile first and then make adjustments for desktop devices so i'll start with the navigation make sure that looks good on all devices and then i'll go to my content blocks like this is a content block here and you can see that we've got some help that that this needs we got to give this area some love so that's what i'll do first content blocks navigation and then all my content blocks and then i will work on images i want to make sure that the images are optimized and we only load as big of an image as we really need to load and then also our actual content images so we deal with our background images the ones that are made in css and then we're going to want to deal with our images our img tags we're going to want to make sure that those are sharp and the correct size the most optimized size for every device that's going to be viewing it okay that's a mouthful wow let's get into this it's not actually as complicated as i may have just made it sound but that's the approach start with your content then move to your images and tada you have a responsive website so for our content let's go ahead and start with the navigation but before i do i want to introduce a new css thing to you and that is the media query you do a media query by doing at media screen and uh and then you open and close parens and open and close curly braces if what's in here is true we're going to add new css to the page so let's add some new css real quick let's say our features block which is this white background block here gets a background of red so nothing's going to happen because i have bad syntax here but if what's in here is true then this new css will get added to the page in the order i've declared it here so let's say a max width of 400 pixels if our screen is up to 400 pixels so 400 pixels or below then that new css gets added to the page and there you go you see it on a small device so let's then go ahead and maybe also add another rule here let's copy and paste this and say if your screen is up to 800 pixels let's make this pink and so yeah now you can see that it's pink if we go bigger then it's white and if we continue to shrink down it's oh no it never turns red why doesn't it turn red because well these both match are we below 400 pixels yes we are add this to the page are we below 800 pixels yes we are add this to the page and this overwrites this so it's a simple fix i've just defined my media queries in backwards order i need to go like this there we go and now you can see that it's going to say is it below 800 yes it is add pink is it below 400 yes it is add red so now it's going to match 400 overwrites and then 400 goes away leaving pink and then pink goes away leaving white so really this brings us to that first point of media queries is you want to make sure that you define them in the correct order i'm going in a desktop down version right now which is using max widths i'm starting with everything right all these rules apply to everything and then i'm saying well if you have something smaller than 800 pixels let's kind of add some pink to that and if you have something even smaller let's add even more edge case rules so that's a desktop down approach a mobile first approach is going to be using min width and it's going to go the opposite direction so if you have a min width these are going to apply to the smallest of devices on up and then as the device gets bigger we're going to add more rules and then as the device gets bigger we're going to add even more rules so that's kind of a mobile up approach you can see that i'm going to start off pink and then red and then it goes from there so that's a mobile first approach and that's how media queries work so let's go and get rid of these and actually write some media queries now to deal with our design now kind of some old school ways of thinking in terms of css media queries is where are my break points for mobile and where are my break points for tablet this is kind of when responsive design first became a thing people would think of it this way they think of well what's an average size mobile device let's call it there and let's make a break point there and then go out all the mobile rules and then where's an average sized tablet device let's make a break point there and then add all my media rules but that's really not the proper way of thinking of it nowadays because there's any size of device out there imaginable that could view your page you really need every size to look good so instead of saying where are my break points for different devices you need to say where does my design start breaking down and start to warrant a different approach so in this case you can see my design starts breaking down somewhere around this like six to eight hundred pixel mark that's when i lose my content down here that's when the menu starts wrapping around and doing weird stuff so what you really want to ask is where does my design break down let's add some media queries at those points and start addressing issues that's going to be way faster and it's also the proper way to think about a website so let's start with the navigation up here the design breaks down around here let's add some media queries to fix this i'm going to scroll up here to my header and then after my header i'm going to add a media query and you can do several things you can add completely big chunks of media query rules at the bottom of your css or you can add multiple small ones with each section i'm i think for the simplicity of this website i'm going to be able to go just fine by adding some responsive rules to the bottom of the header and then some responsive rules to the bottom of the features that way they're easy to find and easy to track so i'm just going to go make a comment uh responsive rules and then i'm going to go ahead and add a media query here media screen and and then open and close and then open and close so let's find out where our break point is here an easy way to do this is to open developer tools by clicking view developer developer tools and as soon as i do when i resize my screen yay i get these like little pixel dimensions here so let's find exactly where my design breaks down you see it's right around up there we go 715 pixels so it's 715 pixels i'm going to add my first rule i'm going to close out those developer tools i might not even need them there so for a max width of 715 pixels let's do something cool now we just need to figure out what we're going to do so let's go ahead and shrink this down a little bit i think what i'd like to do is actually make locations and contact up here for this full line of menu items and then drop this logo down below now there's a few different ways i could approach that let me go to my html some people will actually use javascript to remove this from the dom and then readd it down below you could totally do that you could write a completely new menu ul and so that would be this one and so this one goes away on desktop and this one appears on mobile that makes sense in a lot of situations especially if you have say a mobile menu up here with a hamburger menu that slides out sometimes the dom structure looks completely different in this case i want very similar dom structure i just want these two menu items up here so i'm just going to hack it in and go like this then i'm going to class equals mobile and i'm going to add a class equals desktop down there so class mobile and then class equals desktop and so i'm going to show these when i get bigger and i'm going to show these when i get smaller that's pretty easy to do so when i hit save i now have duplicate content there no problem at all let's just go over here and let's do header mobile against display none so by default my mobile things will just display none and then when i get over here then header mobile gets display inline block the way it should and header display or header let's close this header desktop gets display none so when this kicks in it's going to overwrite the two and there we go those two are showing and those two below are gone hey pretty cool that's that's working well right there let's go ahead and shrink this let's see nice everything is working so you can see that those two go away boom and then that one comes down excellent this is working my navigation is kind of solved with just those couple rules everything's looking good now this background image doesn't quite look right but everything looks good as well let's go ahead and change this um header height to be something more like 200. so there we go that kind of shrinks down as well so once you get to that break point it shrinks down the background image can use a little tweaking but i'm going to leave that for the next phase of this tutorial so there we go boom boom nice my navigation is working good let's move on to this content block we can go down here and add a responsive rule as well let's go add responsive rules and let's get a media query going here for that same breakpoint it looks like it's right around that 715 pixels as well so i'm just going to make the whole display kind of flip at 715 pixels and so we're going to do is we're going to go ahead and change this i'm going to make each one of these display block you can see that what we have right now is we've got our features and it's display flex but if i to change this to display block then it's not going to flex box display anymore each item is going to get its own row because they're all just going to be display block cool that's all i have to do so in here let's go features and so now when i come over here we're getting a flexbox layout and as soon as you go to there we're getting a display block that's pretty cool but i'm not super in love with it and also you might not need these rules at all what i can do is i can turn these off if you're actually smart with how you build your layouts you might not need those responsive display changes i can just turn flex wrap on and these will automatically wrap around so when this starts running out of space it'll wrap down to its own line so i'm just going to go flex wrap wrap and without any media queries i should be okay there we go you can see it actually looks nicer it starts wrapping around to a two in one display and if i get even smaller well now i get the one one one display so this is kind of a lesson to point out that you might not need media queries if you're just better with your design layouts if you can make your layouts by using flexbox or css grid in a little bit of a smarter way then the content each content block can kind of manage itself based on the space it has and you don't really need media queries to handle that about the only thing i want to do here is i noticed here when i came down a little smaller oh we're good this is nice i'm happy okay that's been very very easy so at this point we've kind of dealt with the content blocks and you just take them a block at a time and figure out what you want to do do you want to change these do you want to turn them from circles to squares when you got a small screen do whatever you want the the sky's the limit because you can add completely new chunks of css based on your screen size so now let's talk about images i'm actually not going to dive all the way into images into this tutorial because it's a pretty big conversation but in short you're going to deal with images in two ways you can go with the background images and then you can actually deal with the content images the img tags so the background images are a little bit more straightforward you can use your responsive rules to load in completely different background images you can have low you can have logo large you can have logo medium logo small and load in different ones based on different screen sizes and css is smart enough to load all the css and know which one image to go grab so that's kind of how you deal with background images and you also want to maybe change the position of them so here we have you can see that as we hit that first break and we kind of can't see the logo anymore i kind of want this little oatmeal loaf to kind of go down a little bit so let's make this background image what do we got here header background image you can see position is center let's come over here and go position we can go x and y so right now this would be like zero x and zero y uh let's make the y maybe something like 30 pixels oops sorry background position that's why nothing moved background position there you go so uh 30 pixels is bad we don't want that let's go negative 30 pixels there you go we're slowly kind of pulling it up negative 40 pixels and at that point i can kind of start realizing you know i actually want this to be 250 pixels tall and that's starting to feel a little better so let's make it negative 30 pixels 250 pixels it's a lot of tweaking that you have to do and then as we get even smaller i'm going to want that to adjust even more because now my 250 pixel height doesn't make sense so i'm going to add yet another media query here let's say under 500 pixels i want my height to be 200 now so there we go i've solved the header heights problem and i also want to bump this position down a little bit more at this point so background position and negative 10 pixels let's change it even more to zero there we go so i can kind of see the logo now so here i'm at a height of 200 pixels and my background position is zero or technically negative zero whatever that's all about and then boom i've bumped it to 250 and there i'm bumping it to the full 400. so now it's looking pretty good on each device and realistically users don't ever resize their browsers they're going to load up at this size or they're going to load up at this size or they're going to load up at this size they're just going to see what they see when they load up and so we've adjusted our background images that's working pretty well we could probably optimize and tell this to load in a different size of background image because right now it's loading in a background image that is this big so that's not very optimized for mobile especially if they're on a 3g connection so we could actually tell the background image to be a completely different url you know some image small and so it's going to load in something else that's kind of how you'd optimize those background images now let's talk about optimizing these actual content images which is anything with an img tag i'm not going to go into all the way to do this because it truly is its own conversation but i will tell you that there's two ways that you deal with it you deal with it with source set which is src sct a source set attribute and the source set attribute is when you have the exact same image in the exact same proportions but you just want to load larger or smaller versions of it so if it's a 4x6 and it's the exact same photo then source set is the approach that you want to use now if you want to actually crop an image differently or maybe show it square it one size and rectangular add another then you actually want to use the html5 picture tag so that's when you're going to want to use the picture tag there's a lot of dialogue and a little bit of a learning curve on each one of these so in the description i'm going to put two really awesome articles that tell you when to use which but again source set if the same picture with the same dimensions is getting loaded in just larger or smaller and then picture if you're actually going to do something different load a square image or rectangle image depending on the size of device and that's how you're going to deal with responsive images responsive images are kind of an optimization upgrade you don't have to fully know them as you're starting off you'll just want to know them as you get better and better so it's something for you to kind of add to your continuous learning set so anyway that's how you make a website responsive you can see that we look pretty darn good at any size now it's always going to work we could continue to tweak all the little details and spend as much time as we want here but i'm gonna end the lesson now i'm gonna put the code online you can play around with it and have yourself a great day thanks for watching you