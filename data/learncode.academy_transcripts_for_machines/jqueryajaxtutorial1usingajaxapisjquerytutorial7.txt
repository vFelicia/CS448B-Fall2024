all right I am super excited about this jQuery lesson because we are going to be doing what I think is the most fun part of JavaScript programming and that is doing Ajax uh we're going to be taking this flat page here which is a coffee orders application and right now we have some static content here that we're just kind of spitting out uh and we are going to be taking this and making it Dynamic we're going to be when you load the page we're going to load up the orders spit them out on the page and we're going to give you the ability to add a new order to the database and it shows up here right away without navigating yippe let's get into it and so the two technologies we're using is Ajax we're going to be using Ajax to access our API that our backend team gave us ah what do these two words mean uh well Ajax means asynchronous JavaScript and XML uh which technically means you're using JavaScript to get XML behind the scenes it's funny we don't use XML anymore we use Json but a is a terrible name and Ajax sounds cool so we still call it Ajax so this basically just means H we're using jQuery ajax and it's going to be talking to an API that our backend team built for us API is our application programming interface and so when the backend team builds the database and the structure to handle all the orders they give us some methods for accessing the orders uh and for posting new orders and so that's basically what the API is that's what the backin team builds is the API for us so let's kind of get into this so so here's our static content we want to our first step and what we're going to be doing in this video is covering how to do a get request to grab the content and replace this static content with quote unquote Dynamic content uh so let's go ahead and do that let's strike out this static content here our UL is called orders and so now when we refresh we have no orders right because we have not gotten them yet let's go ahead into our main.js do a document ready function probably don't need it because our javascript's at the bottom of the page but oh well we'll do it anyway and we're going to doing jQuery ajax and we're giving it an object of options here and so the first thing we need to do is we need to know what URL are we going to get and how are we going to get that information so let's look at our note from the backend team our backend team said here's the API we built for you if you send a get request to/ API orders you're going to get this sample response of all the orders awesome so let's go ahead and check that out we can go/ API orders which I've already done and you see awesome it actually gives me all the Json and I'm going to show you just a little bit more about what a git request is uh basically whenever you type anything into the URL it does a get request for it it gets that URL you can see if I look at my network tab I called SL API orders and it did a get method for that and here's my response it gave me that Json object of my orders it also I have these two get requests going on because I have a plugin that makes Json look pretty but technically the only git request that happened is this guy right here um if I actually refresh this page let me go to the network Tab and refresh this page you'll see that it does like five get requests it starts off by getting my Local Host here and my server is programmed to respond to Local Host Within HTML file uh so this is where the HTML file comes in uh my browser starts going through that HTML file finds out that I need to load a style sheet so it does a get request for my CSS file and there you go it responds with a CSS file it does a get request for my jQuery file that's jQuery library and a get request for my main.js which is currently just that so that's what's going on let's go ahead now and do a get request for API orders so we are also grabbing this um my type is going to be get which is actually the default I don't have to add that but I'm going to add that in the URL is/ API orders so now let me go ahead and refresh my page and you'll see now I hit API orders it was a get request and my response is the data that I need excellent so now all we have to do is take that data and spit it out onto our page so how we do that is with a success function success and give it a function and then the this will pass us our data right there so if I go console log data let me hit saveit refresh you see it says success and I have an array with two items my array has the will drink and the Laura drink awesome that is our information so now we just need to go through each item and spit out an for it so we're going to use the jQuery each function which is going to go each the first thing is the the array each is what each does with jcer is it goes through each item in an array and allows you to run a function based off of that item so data is an array and so we're going to pass data as the first one and then we're going to give it our function that we want to run is our second argument so for each item in data we're going to run a function and the the two arguments that it passes is I which is the index 0 1 2 3 4 and then the actual item you can call this whatever you want you can call it item you can call it order uh basically that's just what each item is so for each I'll just call this orders here make it a little clearer with the naming so our success orders go through each orders and give us an order and so what I'm going to do then is let's look at our UL this UL is where we want to spit it out to which has an ID of orders let's cach that up here cach the Dom so we only have to look at it once orders. append we're going to put a new Li in there let's just make sure this works there we go yep so now it put in two new orders and all we have to do is now populate the information into those Lis and so we can do this just by uh fixing this string here and then drink so under here I'm just going to cut that out order. name there we go and then drink is going to go order. drink so there we go I've added the name in I've added the drink in let's refresh haha we have hit our backend server and we have spit out An Li for each of our items that's awesome um and this is where we're going to end this video uh in the next video we're going to add in how to post things to the back end and we're going to get into this is messy right here so we're going to show you how to use templating engines to make that a lot cleaner so let's get into the next lesson