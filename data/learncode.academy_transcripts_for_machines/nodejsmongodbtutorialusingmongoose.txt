all right so in this video we're going to try to shortcut you through how to connect to a mongodb database with no. JS uh using expressjs and Mongoose uh which are two of the most popular Frameworks for doing this thing so that's what we're going to do uh if you missed my intro to node.js and expressjs I'll put that in the description uh and so what I've done is I've generated an expressjs app here pretty much straight up just has one route so far which says okay uh so let's go ahead and install Mongoose so npm install s because we want to save it to our package Mongoose there we go and Mongoose is kind of like your most popular om for uh so that's good Mongoose is installed I'm going to go nodon app.js uh so now it's going to be rebooting my appjs and should be good yep great okay so no Mongoose is installed in node modules saving it to the package awesome okay let's go ahead and then require Mongoose equals require there we go so now Mongoose is in the first thing we're going to do is create our connection I'm going to do this in development only since I'm just connecting to my development server here uh because you'll probably have a different database for different environments if not then just you know do it you don't have to do it in development here so doc connect very simple and my server is running locally at 55.55 55.5 and my DB is called probably could have come up with a better DB name but oh well I decided my test DB would be called so let's save that and I'm running no issues nothing broke excellent let's go ahead and move on now and actually create our first thing uh what we're going to do is we're going to create models kind of like you would with backbone JS if you're from a front end background you create a model and then you use that model the model also kind of doubles as a collection in a lot of ways so we're going to go we're defining a model right now as what we're doing so users and then here's where you give it your schema you can either give it an object right here you can actually create a new user schema for right now we're just going to go object so basically all we have is name and that's a string there you go and so now I've defined a model called users and what that's actually going to do is look for the users collection so if I go app doet users this kind of makes a little more sense here then I can go mongus model I can now access that model so even if this was defined in a different file I can access it find and then my function is going to have error and users if the users indeed are correct so once that's found them then I can res. send users let's see if that works oops cuz we're not going to users there you go and now I've got my three users me my wife and John Travolta so let's go ahead and make one for posts I have two schemas going on right now two collections I have a users and a posts which has completely basic posts going on uh so let's go ahead and Define our second model here which would be posts and this one has content and content is also a string so there we go and this will be Mongoose model posts now it's basically the exact same thing as you can see so now if I do get posts I'm going to access the model posts which I defined up there and on successful find we are going to send the posts so here we go let's check it out and I didn't save my file there you go so now I've got my two posts oh I also have a user on there so user um well let's before we go any further with the schema we'll go ahead and look at how to redo our app uh you'll notice I'm I'm doing all these routes right here in the appjs I'm just doing that for the Simplicity of the tutorial it's definitely a better idea to have your routes in their own routes file SL routes files uh same thing with models we do not want to be doing all this logic here in the app.js file so let's go ahead make a new folder we'll call this models everybody wants to work with models for a living uh let's see okay so this will be called users nope how about we just save it users. JS there we go so let's go ahead and take this out of here and let's go there we go and we're also going to go schema which we already loaded in with Mongoose there you go that'll help let generate a new schema so now we can do this we can go users schema new schema and then we just do the object exactly like we would have done and we go do model we're going to Define this and we're going to give it user schema so that's all we're going to do in the users model now and so the schema will be name String and then that's pretty much all we got for now name ha there you go so that's the users one and let's go ahead and copy and paste this create a new file and this one will be called what was that other one posts posts and then we'll call this post schema and so we have content which is a string and then we also in our posts we have a user field which is the user ID so this is going to go and we actually this type is not a string it's a object ID but you can't do object ID because JavaScript doesn't have that as a type but schema object has it as a type so we're going to go schema. object ID and that's how we can access that so this is our schema for our content right now literally all we have is the body and the user that wrote it so there we go that's our post file and now these aren't getting required anywhere I can dump those so now what we're going to want to do is we're going to want to write some sort of basic little file thing uh that helps us require in everything in the models folder so we're going to load in the fs which is the file system Library uh and we're just going to go down here fs. read drr sync it's okay to do sync because this is happening you know on the startup of our app it's only going to happen once durame is our current directory and then so that's loading the directory and then we're going to go Loop through it and that's going to grab our file name and so we're going to go if if it's a JS file probably Overkill but oh well we'll do it anyway have capital okay and there you go so that's loaded in um and then so that should go through our entire directory and load them all up let's make sure we don't have any errors here everything's still working awesome great so what we're going to do is if I flew through that too fast we're going to load up every model that's in our models directory when we load up our app um and now we can just access them because they're already registered in Mongoose so we can go posts and get our posts we can go users and get our users uh and so another thing you can do is you can access posts by ID I'm not going to go too much into how to use because that's definitely its own tutorial but let's say user ID here post by user ID we can do this instead user is uh user ID so let's see what's a user ID here uh there we go I can grab my user ID and then let's make sure I save this so now I can go posts by that ID and so I only have one post um I can't let me go back to users and grab Laura Stern's ID I think I made a fake post for her didn't make any F posts for John folta though did I missing out on that one okay another cool thing that we can do is we can actually attach uh with the entire user object here if we want to so say we're grabbing the posts and you know let's just trim it down let's also grab the user object on there well that's easily done um we can grab the user object by just going I will keep the post by user ID um there we go and so what I will do here is once we're done getting the posts Okay so we've gotten the posts I'm going to get this model again and I'm going to do do a populate and I'm going to give it the posts I'm populating which it comes from here I'm going to go full screen here for a second so you can see it so once my post finds once my posts are all found they're called posts right here then I'm going to actually populate my posts and the path I want to populate is called user and there we go and then same thing this is going to get into uh another call back you guys are probably noticing that there's a lot of callbacks starting to happen two levels of callbacks is about as far as I want to go because then you start getting what they call call back hell um and there's ways around that I'll probably do that in the next video here so now I'm grabbing posts and once I've have grabbed the posts I'm going to populate the user path as well let's save that see if it worked see if I made any mistakes and it says the user is null uh probably because I did not handle that schema correctly user is schema. object ID yeah I want to figure out what's up with that oh yeah I know what I know I did wrong here um user is actually an object sorry about that schemas aren't the things you write every day so every once in a while you forget what to do so the type is an object ID when you're doing an actual object and the ref you have to give it a ref there we go that should work there we are so I'll make sure uh I put this code on something and put it in the uh description so you guys can actually get a link to this so you can't forget it so there we go I've now grabbed my related user and that's about it so that's pretty much how you connect to a mongod DB database with Mongoose and thanks for watching