in this video we are going to set up continuous testing for node.js project using sema4ci now semaphore is one of my favorite continuous testing platforms of all time because they really excel at speed which is one of my number one concerns when it comes to continuous testing i want it to test fast and from the moment you push code to github to the moment your tests run and complete in my experience sema 4ci is by far the fastest continuous integration platform out there so here's my project it's the simple react plus mobx app that i've been using for my last two videos and i've since added some tests to it that i can now run using the jest command and the tests run in pass so if i run jest here then there's my three test suites they run and they pass now if you want to see what i did to get the tests up and running you can look at the source code or even better i wrote an article on it on some force community tutorials and so it basically covers everything i did and why so those are up and running the only thing i want to do at this point is i want to add that jest command to my npm test script so when i run npm test it also runs just there this isn't something you have to do but it does make your life ever so slightly easier so this is push to github and now i just want to get this thing continuously testing so when i create a pull request it adds those pretty little badges that testing is underway and testing is complete and whenever i make changes to master or any branch it's going to test those so let's go over to semaphore ci i have a brand new account here and i'm going to go ahead and add a new project i'm going to pick my account and i'm going to connect it to github this is an extremely simple process you can choose public or private since this is a public project i'm just going to do public i'm never going to test private projects here and i've gone ahead and i've authorized that application so i can go back to my account and i can see all my github projects so i can see this sem test semaphore test there we go semtest and i can start building off the master branch let's go and do that and it's going to kind of analyze my project and determine hey this is a node.js project let's kind of pull in some sane defaults for you and get things started so i should have that here in just a moment okay there we go language is javascript hey you're right on that let's go ahead pick my node.js version i'm using the latest and then is the setup npm install yes it is is the job npm test yep that's my job i could change that to jest but i'll leave it npm test just in case i switch to mocha later on one day let's go ahead and build with these settings so there we go and it's starting my build now for context if i were to run npm install on my local macbook pro npm install and then run npm test with this project it takes about 45 seconds so let's see what semaphore does okay check that out i skipped ahead and one minute on the dot which if you've used continuous testing before one minute is really fast for it to set up a testing environment with nodejs installed the correct version do an npm install and run the test if it takes me 45 seconds on my machine to run that a minute is really really fast but prepare to have your mind blown because it actually gets better let's go ahead and change our repo and see this thing retest i'm going to go ahead and get this badge here for my readme that seems nice let's go ahead and add that so now this cool build status and let's add our readme and push that so and push is complete let's go back to stem tests oh it already noticed it and queued it and it already started running the build so that was pretty much instantaneous which is really nice and let's see how long it takes to build this time around i'll give you a hint it's a lot faster there you go 16 seconds i cut a couple seconds of blank space out there for you but most likely due to npm caching that they've done on their side this thing created an environment for my test to run it did npm install it ran the test in 16 seconds which is just incredibly fast continuous integration incredibly fast test cases happening now obviously my tests happen really fast i'm doing them in node.js node.js is blazing fast for unit tests and even functional tests so i've got my act together with my project and semaphore has their act together it's a great combination tests are just flying through before we wrap things up let's go ahead and check out a pull request let's go back over to my repo you can see there we are build status passed awesome let's go and make a new branch and pull request that new branch and then let's go ahead and make some kind of change to something let's say i'll just change the readme again test we'll do the same thing get out readme we'll commit that and we'll get push so that's going up there there's my new branch let's go ahead pull request this let's go create that pull request and we can see that semaphore is now testing that okay sema4ci is running the build and we're going to get to see how long it takes for that to show up again to the pull request and it's going to happen really fast so there we go i cut out eight seconds and the tests have passed so again 15 seconds later i can see that this pull request is good to go let's go ahead and merge it confirm that merge and we are done i can go back to master you can see that it says it's pending because it's running tests against the master branch now and if i were to refresh then i will see this to be passed here any second there we are my tests have passed on master again so i can see that the pr worked fine and master obviously worked fine so there you have it that is sema4ci in an extremely fast nutshell it is a great platform and just darn fast and a huge thanks to sema4ci i reached out told them i'd be doing a video and they were willing to sponsor this as well which i was going to bring you guys this content regardless because i think they're a great platform but huge shout out of thanks to semaphore for being willing to sponsor it as well hope this helped you out and have an excellent day