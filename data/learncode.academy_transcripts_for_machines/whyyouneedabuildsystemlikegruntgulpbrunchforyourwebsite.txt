I'm going to cover in this video why you need a build system now I can remember the first time as a earlier web developer somebody said run a build system or run a build on your JavaScript and it totally freaked me out I was like what do you think I am I'm sort of fullon programmer here um and so I'm going to demystify that in this video talk about kind of what a build system is it's not a scary thing um what it does for you and you'll hopefully see why professional web developers all use build systems or should use build systems and kind of the advantage that it will give you so why you need a build system let's just look into what should a build system do first off it's going to do repetitive tasks uh things such as concatenating JavaScript say you don't want your browser to release a billion JavaScript files like this this is a bad idea uh because when your user wants to load your web page this is going to request this file from your server and this file from your server and this file it's going to open 20 requests to your server and your server has to go hit the hard drive 20 different times to return 20 different files that is not an efficient way it's so much faster to return one file where they're all just backtack added into each other as if you were to copy paste of course copy paste and save is a terrible way of doing it and you do not want to deploy a gigantic piece of code um so concatenating JavaScript um also CSS concatenating any kind of files that should go together into one file uh prefixing CSS you know like border radius uh border radius then Mo's border radius you don't have to do near as much of this stuff as you used to have to do uh but it that's something you shouldn't have to do day in in day out when you're writing code uh you can just write border radius and that should be Auto prefixed for you uh let's see we should run some utilities on our code like JS hint so when we save a JS file if there's a coding error in there JS hint can catch it for us a lot of times and we shouldn't have to put that into production or sniff it out in our console to find out that there's an error there when it's clearly a coding error so we should be able to run JS hint on our code we should be able to uglify it which is compress and Minify it and what that is is is here's like say I wrote this main JS I have a say name function and a say age function um I could put this file up there and that's I don't know how many bytes of data it is uh but but if I Minify it I run say uglifyjs on it that can Minify down let me turn word wrap on here that can Minify down to this piece of code which is literally half the file size uh this file will load twice as fast if I deploy this file uh because you'll notice what it did is instead of being called function say name it kind of crunched it down to function a and then later on it calls it as function a it says a right there wh come back to me and there you are so it'll run function a and it'll run function B because it renamed them the smallest possible things that they can be called and so that's minifi JavaScript we can also Minify CSS kind of the same way here's CSS it can be minifi minified down like this into a very ugly form uh the problem is you don't want to have to maintain this CSS that's that's a headache waiting to happen so we just want to deploy this we don't ever want to code this or even look at it with our physical I uh so there's utilities to do that we also want to run a local server in a lot of instances so that way we don't have to open this file by doing file opening Chrome that's an annoying way of doing it uh we want to be able to go to Local Host and just view it as if it was on the web without actually putting it up to the web so we know that if it works on our computer it's pretty much going to work when we push it to our website and then we also want to run live reloads whenever we save our file uh it'll automatically refresh our um not only our browser but also any devices like any iPhones or whatever that are connected to our server and so this all these things are done by a build system now common build systems are grunts grunt is probably the most popular still it was kind of like almost exclusively the most popular um gulp is the new guy on the Block and is very very popular um I'd say they're about equal right now uh brunch is a much more simplified one that's also out there as well but if you're going to learn one I'd say learn grunt first cuz it's still kind of the one that most companies are using gulp is the one that most companies starting up new projects are going to be using so gulp's going to be an important one to learn here very soon uh but start with grunt then go Gulp and then why is this good for you I kind of always mention already mentioned page speed is huge if you're loading if you're making 20 requests to the server just for your Javascript file that's going to slow things down um also if these things are not minified it's literally each one is taking twice as long to load as it has to so that's not a good thing you want to be able to load one or two maybe three JavaScript files that are compressed they're very small um and they have all the code that you need uh usually good idea is you're you want to load maybe one Javascript file for your they're called vendor vendor files that would be like jQuery bootstrap any code that you're not writing it's called vendor code so maybe a compressed vendor one and then another one that's your actual application code so whatever is for your website deploy one for that now if you have this massive application and there's a hundred different pages and you know maybe all the user profile Pages need code that the rest of the website doesn't need well then you can load another one that's just you know user uh and that would have all the stuff for you know that when the user's logged in and that stuff so but you don't want to deploy anything you don't have to deploy you don't want to make any requests you don't need to to make um and this is very common you look at a lot of web pages and you'll see just dozens of requests happening and their page is terribly slow compared to what it could be um and they don't actually have to change their code they just have to change the way their code is being deployed uh so page speed is huge a development workflow is really the big wi to me though um you can use cool Technologies like SAS um you know instead of having to write your CSS well if you don't know SAS SAS is a much more fun way uh for developers to write CSS you can break your code into multiple files uh back in the day we used to write CSS files that were gigantic and it would be such a pain you're scrolling and scrolling through literally thousands of lines and and that kind of code breaks easy that kind of code is terrible to maintain so now you can break break your code into a lot of little files that each have a name based off of what they do uh and you can just kind of concat concatenate them all together and then spit them all out as one file and that's also easier to avoid code conflicts uh if you have a team of multiple people working on the JavaScript files I touched this file uh there's a lot lower odds that somebody else touched this file they probably touched a different file if they're working on a different task um and once again you can avoid annoying repetitive tasks like PR fixing your CSS and stuff like that so that's what a build system is hopefully that makes sense to you and in the next videos we're going to get into building our first build system with Grunt and it is not as scary as you think the only thing you're going to want to do is watch my intro to nodejs to get a very very basic understanding of what nodejs is and if you've seen that or if you're kind of comfortable with running node on your machine then we're going to get into grunt here we go