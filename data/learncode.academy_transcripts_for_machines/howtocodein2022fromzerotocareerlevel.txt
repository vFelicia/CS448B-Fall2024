hey guys in this video we are going to be covering everything it takes in checklist form to learn web development from the very beginning to the point that you can get a job and consider yourself a professional web developer now in the past i've done this in mind map style and i've included every possible thing you could learn and all the options that are out there and the nice things to know but it was pretty confusing for new developers it was very useful for experienced and professional developers but it kind of confused and overwhelmed new developers so in this video i'm going to cover checklist form just what it takes to learn web development what course you should take what path you should take and what technologies you should learn in order to become a hireable professional web developer and we're going to give you about as much time as it takes now i'm going to point out this link here at the bottom this is the link to what i'm using in a more print friendly form and i'm also going to add many many more links to that as i start building out videos against these todo's because i'm going to start building out a lot of videos afresh for 2022 with all the checklist items you see here so let's get into it you are starting web development you want to become a professional software engineer make the big bucks what do i have to learn to not have people laugh at me in a job interview in the near future so you basically have three phases you're going to go through you're going to go through the 101 front end fundamentals you're going to go 102 which is where you become an intermediate front end engineer or developer and then you're going to learn advanced front end and at that point you're pretty confident hey companies are looking for the skill set that you have so let's get into 101 what are the things you need to learn 101 web development is basically three skills you're going to learn basic html basic css and your javascript fundamentals but i've broken them down to give you a little more detail about what you should google and what you should actually learn if you're learning these things of course you're going to want to install a code editor first you should use visual studio code that's from microsoft visual studio code it is super great super popular tons of professionals use it and of course it's free which is very nice everything we will do on here is free with the exception of where you host a web page when you're ready to actually publish it so basic html is something you want to learn it's really really simple you basically just learn tags and you learn about 20 tags then you're basically confident with basic html you can build an ugly page think craigslist craigslist is what you get when you code with html and use almost no css the biggest hang up you're going to have here is html folder structure how do you actually save your files in folders and then how do you add links to link to those specific files in the right folders this is where everybody seems to mess it up everybody seems to have a hard time getting this piece right of adding links and making sure those links go to the actual file or the actual web page you want them to go to so that's going to be the trickiest thing when you're starting off and then once you kind of have your basic tags down and a little bit html you're going to want to move right into basic css when you're barely confident with html learn html and css together you're going to learn how to add css to your page using style tags and link tags and inline style attributes and then you're going to learn how to create css rules what is the css selector how does the css selector work and how can you change some basic properties how can you change your font to red and your background page to blue which would be a super ugly page by the way and then you want to get really good and here's where a lot of people mess it up too the next thing you want to do is get really really good at drawing boxes on the screen with flexbox mostly and grid later on but first just flexbox can you draw a layout with flexbox any layout right a sidebar with a top header or can you do like a top header and then three boxes in a row side by side and then six boxes side by side if you learn how to draw boxes really really well you can become really good at building web pages quickly and easily because the most confusing part for people starting off is how do i draw the boxes that hold all the little pictures and text and things if you can draw the boxes well then the things that go in the boxes are usually pretty easy because if you think about any design any design is just boxes with stuff in them right the header of a web page is just kind of a box at the top and then inside of that there's a logo and a navigation and then the footer of a web page it's just a box with links in it right so if you can learn how to draw boxes really really well then you're set up to do really well with css basically you just want to learn how to draw boxes and then how to do the little tricks of the things that you put in there like how do i show a profile image but make it a circle not a square when the image i'm using is a square and how do i make sure make the button like fade to blue when i hover over it right these are just little tricks none of them are hard but you have to basically google and find the trick that you want to do next up you have like about a quarter of a day thing on learning what is a css reset and how do i use it that's really really easy checkbox to check off but an important one and then last you basically just want to get to the point where you can build an entire website look from just a design or a mockup and it's it's very intimidating at first because you barely know how to put a button on the page but eventually you learn okay a button is easy okay a blue button is easy okay a blue button that fades to red that has rounded corners and a shadow that's also pretty easy it's just these little tiny details that you learn and learn learn and that's what you're going to be spending two to six weeks doing how do i draw boxes and how do i do all the little tricks of making things look certain ways so that's html and basic css at this point you are going to move into javascript fundamentals now javascript is a programming language and this is the programming language that you use on the web so you're going to learn programming basics you're going to learn how to select these are by the way all these things i'm typing are things that are really good google searches querying dom elements working with dom elements in javascript right i'm trying to give you the actual official names even though it sounds confusing now javascript event listeners these are all the search phrases that you're going to search for when you're learning this stuff you're basically going to say how do i take code and interact with the web page right like so how do i say when the user clicks on this button i want to go out to twitter and fetch their latest tweets and show them right there in the webpage or when they hover over this button how do i show other content on the page that didn't exist before they hovered on the button this is what you use javascript for you use javascript for programming making actions and things on the page and that's basically when you're going to learn javascript because it's programming if you're new to programming concepts like variables functions and flow control like if those words sound intimidating to you they're not really scary concepts but if they sound intimidating that's what you're going to be learning you're going to be learning programming basics and that's why i put two to six weeks here if you already kind of know programming with python or something you're going to be closer to that two weeks mark but if you if programming is new to you you're going to want to give yourself several weeks of buffer to look at what a variable is or a function and feel intimidated by the fact that that didn't make sense and then learn it again and oh okay after three or four days of learning functions over and over again that makes perfect sense i get it now so that's where that buffer time is going to come in and then lastly there's a little bit of head knowledge that you want to learn so i put about a day here what is dns like you want to know what dns is how you register for a domain name you want to learn what a web server or web host does for you and when you point your domain name to a web host what's actually happening you don't really have to know this stuff but you got to learn it at some point this is a pretty good time to learn it like when i type somewebsite.com how do i get a webpage back what actually happens like you're going to spend years really understanding this stuff but at this point it's good to have a basic idea of what happens when i type in the name for a website and then as a web developer what part of that do i control uh kind of a hint here you're going to register for a domain name you're going to point that domain to a web host and that web host has all your html css and javascript files on it so that web host when you say mywebsite.com it's going to give you back your main html page to all your users so that's basically what you're going to be learning here and at this point how do you publish your website because you're going to want to publish your websites there's some things you'll do a little later as you learn more technologies but for now the easiest thing is you're going to go with an html web host hostgator has long been the easiest one of the cheapest ways to set this up when you know what you know at the 101 level it's also pretty inexpensive it's like three to five dollars a month depending on how many months you pay for up front i have a video on how to do it start to finish we have a website up in like eight or ten minutes it's very very simple and there's also a few coupon codes that you can use that may or may not save you some money i have an affiliate thing with hostgator which i reached out to because i have always recommended them to people so feel free to use those or not use those this is 101 should take you between one and three or so months to learn this and once you get here you're ready to move on to the intermediate level give yourself a pat on the back let's move on moving over to web dev 102 we're going to confront maybe what for many people is their biggest intimidation and that's using the terminal that's right you're going to stop being afraid of it now for lots of people they see that plain white or plain black screen and just kind of freak out what is this how do i do it yeah it's just it's not that bad guys it's only scary if you've never used it it's pretty simple so you're just going to learn how to navigate around your computer right just like you would on your computer you'll click into folders find the file you want you're going to do that in the terminal you've got to use it at some point or people are just going to laugh at you on the interviews why not start learning it now so you're pretty comfortable with it when you go interviewing for jobs so you're going to learn the basic terminal you're going to learn how to get around and use it and then you're going to learn how to install node.js packages now node.js means two things it means one little things that help you out in your front end development that you're going to install on your machine and then node.js also means a backend programming language that you use to make web servers with you are not going to do that ladder part you're going to do the first part you're going to use node.js to install things that help you code better so we're going to learn how to install npm packages which is like one command it's not hard to do and then we're going to learn how to use other people's code which is called a package to help us code less and accomplish more that's the whole point of it right packages somebody wrote this cool thing that they find very useful and they put it up on the internet for any coder to use they call it a no js package an npm package so you're going to learn how to install npm packages to accomplish cool things on your own machine very easily then you're going to learn about version control this is the other big new concept that's going to happen in this section now i only put one to two weeks because it doesn't take very long to learn version control but basically version control is how we handle a bunch of people on a team coding on the same project if you imagine three people coding on the same file how does that work do you say hey other guys don't touch this file i'm working on it today and when i hit save then i'll call you back on the phone and you can start working on it that's a terrible terrible workflow as you can imagine that does not scale well to big teams and big companies so what we have to do is we actually have to use version control version control is going to track what everybody does and it's going to automatically merge all the changes together ah it's going to be so much nicer so you'll see when you learn how to use git for version control why people do it and why every serious professional company uses it super super cool a little bit of a learning curve give yourself a little bit of time don't rush it don't try to learn getting day even though you can learn the basics of git in an hour or two don't rush it you know get really comfortable with it give yourself a little bit of time at this point you are going to want to move on to intermediate css intermediate css is where you learn how to do things like hey i want one web page but i want it to look different on mobile than on desktop that's called media queries and responsive layouts these allow you to have the same content display a little bit differently on different machines same thing with responsive images if you're on a huge desktop machine maybe you want to display this massive background image and if you're on a mobile maybe you just want to download a little bitty image to use less bandwidth and make the page load faster so these are two responsive features that you're going to learn and then you're going to use a npm package called sas to compile sas code into css what that means is you're going to write a language that's better than css and then you're going to turn that language that code you write in sas into css code which will work on all the web pages browsers don't read sas code they read css code but it's easier to write sas code and then turn it into css code using a npm package called sas if that confuses you well it's not so bad and then you're going to learn how to break your css code into different files a 3 000 line css code is terrible to work with it's so much easier to work with 10 or 15 files that are much smaller in terms of code so you're going to learn how to break this up and also use sas to compile all those files down into one file now it's going to start feeling like you're a professional with your css handling and then lastly you want to learn css frameworks like tailwind css or bootstrap these are kind of some things that many many companies will use to manage their css and they make life a lot more enjoyable in many many circumstances then you're going to move on to an intermediate javascript here's where you learn how to actually become a more serious programmer you're going to learn a checklist of things that i won't go through because it'll probably just confuse you but you're going to basically learn all these different things in javascript some people that are more creative and not as technical you're going to lean more towards the six week mark of this if you're highly technical and you love complex topics then it'll be a lot easier for you either way the complexity is not terrible it really isn't terrible but depending on how you're wired if you're drawn more towards the design aspect of web development this will take you probably a little longer and if you're highly highly technical mathematical detailed you might just latch onto this and catch it a little bit faster so give yourself some time there depending on how you're wired and then lastly you're going to come over here to code quality basics these are some npm packages that we run against our code to help us out this right here will catch javascript errors before we ever run it in the browser that's what eslint does prettier can format our code whenever you hit save and it can make sure that everybody's code on a whole team looks exactly the same and is formatted and spaced exactly the same eslint and prettier are super awesome typescript allows you to add some extra features to javascript that do not exist in javascript all three of these are pretty stinking popular and it'd be really good to at least know what they are familiarize yourself with what they are and you're also going to want to learn here basic testing for your code testing is how you actually write programming to prove that your programming did what it should do let's say you had a math program that took a and b and returned a plus b well then you could write a test and said hey if a is one and b is two then you should return three that way if you accidentally ever make a change to your code and break what it should do your test will say hey a plus b doesn't equal 3 anymore what did you do wrong in your code so that's basically what tests are as you're writing your code you're writing tests against your code to make sure that it does well as you make changes over time it still does what you intended it to do at this point you also have a lot more options because you know git and github on how you can deploy your code to websites you can use github pages netlify or versel vercell is my favorite although it's not necessarily the cheapest depending on how you do it but there are some great ways if you know how to push your code to github to deploy your website and really enjoy your life now you're done with 102 lots of people or maybe not lots of people used to be you could get a job at this point it's getting a little trickier to get a job at this point um so it's probably worth mentioning that you want to go to 103 before seriously pursuing a career however if you're in a large city like new york atlanta la there's there's a decent uh chance that you could get a job with the 102 skill set it just will be a little harder to find you're gonna have to find a company that has specific niches for 102 level developers uh 102 by the way is totally something i've made up this is basically a benchmark you're looking for for a complete skill set on how to build flat web pages very very well 101 is how you build flat pages fairly well the advanced css and javascript you get in the 102 level allow you to build them very well especially node packages git all these things really give you a complete skill set around building flat web pages so the 103 skill set is all about building web apps you're going to learn how to use static site generators to build a huge application that is all flat content and you're also going to learn how to use single page applications or build web applications uh if you think about it every social media website you use is not a flat web page right it's not the same every time you visit it like maybe a company's business card style website would be a web application is going to be different every time you visit it because it's going to pull in information from a database on the internet it's going to show that to you uh like if you're thinking about using twitter as people are using it you're getting notifications you're seeing the likes go up you're seeing new content appear on the page as people post this is a web application and you're going to learn how to build this now you're going to learn how to use it with just javascript to make a really really basic web application and you're going to learn how routing works and how to use urls to store the where you were what page you were at and that as soon as you learn this you're going to realize this would be really frustrating to do without a package that helps me do a lot more and that's why you're going to learn react react is going to help you build web apps with javascript it's going to give you a whole lot of structure and a whole lot of tools that allow you to do those crazy things i talked about without a whole lot of difficulty it would just be very complex to do them by yourself without a framework that's what react is called it's a framework it's a set of structure and rules that if you use that structure and use those tools and rules you can get a whole lot done very quickly so you're going to learn how to do a basic react application where you can fetch data from the internet and then post it in your page and maybe send data back off to the internet when the user does certain things like write posts or write todo's in a todo list then you're gonna learn how to use css in react applications it's still css it's still sas it's everything you've been doing but you're gonna use it just a little bit differently inside of react it doesn't take too long you'll notice i put one to two weeks here as the timeline but it is something that you want to give yourself a little bit of time aside to learn because there's some methodology that goes into it and there are several options you can use next up you're going to learn some frameworks for react i thought you said react was a framework yes react is a framework for how you do things in javascript but then there are also bigger things that help you organize your react code and that sounds complex but it's really not too bad these things just make your life easier is what it is if you're doing basic react these two things will make your life better next.js is the one i would go for although react router is very popular and useful as well if you're short on time just learn react learn next.js and move on with your life and then you're also going to learn advanced state management if you don't know react right now then that word doesn't make any sense but basically you're just going to learn how to control the data of your application in an easy to reproduce in a reliable way modbx is what i would use for that it's very very simple very straightforward you're going to like your life a lot with mobex redux is the most popular tool for doing this these days but i don't really recommend it i think it actually has a lot of weaknesses that frustrate people who use it but that being said if you're looking for a job it'd be a good idea to at least familiarize yourself with how redux works because more than likely a company is going to use or have some redex codes still in their code base so you're going to learn advanced state management and that's pretty much it at this point you're ready to go look for a job you have a rock solid skill set that lots of people are looking for hiring and you can do a lot of things and provide a lot of value to your company same thing here how to publish websites at this point doesn't really change except for vercell is awesome for deploying next js applications absolutely love it it's it's the company that is the people that make next js so it just works very very well if you stuck with me through this point you're dedicated you're in you're gonna love it and you should probably subscribe and thumbs up if you have not subscribed to me yet because i'm gonna be adding a lot of these videos in uh probably even at some point building full courses that teach all of this stuff for not too much money because a boot camp would cost you about 18 000 to learn all this stuff and i think people should be able to learn it for a lot less if they are driven and motivated people so hope you enjoy this video hope it helps you out in your web dev learning journey good luck to you go learn go build great stuff and have a good day