this video is going to get into the topic of machine learning and neural networks which sound a little intimidating to people so we're going to break it down make it really simple to get started in these concepts without feeling overwhelmed we're actually going to solve a common developer problem which i've had to face several times in over the years and we're going to solve it with machine learning in a couple lines of code so here's the problem which i've had to do several times is that as somebody's using a color picker to real time change their text or their background that text needs to change from white to black depending on whether that background is dark or light so we're going to make a machine learning program that determines whether any color a user picks is dark or light which when you get into kind of coding this programmatically with an algorithm the way you would normally do it it's not so straightforward because pure red needs light text pure green kind of needs dark text pure yellow definitely needs a dark text so these different hues actually are not so straightforward whether they need a light or dark uh piece of text so let's get into the machine learning piece of it and again it's not very intimidating uh we'll start by installing brain.js which is a very easy to use machine learning library for node so npm i already have it installed so this should be pretty quick here brain.js is installed again that's not brain it's brain dot js brain is an older deprecated no longer maintained version which there's a story behind that that you don't need to know so now we can kind of import that here again brain.js not brain and so what you want to do at this point is you just want to create a neural network and then run two commands against it so we're going to go network equals brain dot ner there we go we're actually going to do new brain.neural network and then we're going to network dot train we're going to give it some training data and then we're also going to go const results equals network dot run so once we've my goodness that autocorrect is failing me today so we're going to give it some training data so one of the differences between machine learning and traditional programming is traditionally if you wanted to determine if a color was light or dark you'd start by programming an algorithm you'd say hey let's take the rgb values and let's maybe i don't know add them together and if that number gets above a certain point let's say that that is a light background oh but then let's take the edge cases oh it's more of a yellow and we know that that needs to be dark so if it looks more yellow let's do this rule the neural network doesn't work that way at all you simply give it an array of values an array of inputs and each input has two things it has an input and an output so we give it historical data of hey for these values historically here's what the output has been think of it as like flash cards to teach a toddler the difference between cats and dogs you get a stack of flash cards of different cats and dogs and you show them this is a cat this is a dog this is a cat this is a dog and eventually their brain gets it and they can go see a new picture and know if that's a cat or a dog that's exactly what a neural network is going to do it simulates the behavior of a human brain so with brain.js it expects values between one and zero so an input can be one or more values and an output can be one or more values you know so we could say hey one equals one and train it a bunch of times and then we could train it to say hey when you give it a zero then that's an output of zero and then our neural network could tell the difference between ones and zeros okay that's kind of pointless something more useful might be hey let's try to tell the difference between children and adults so let's say we have a 60 inch 150 pound person the output will be one for positive for an adult let's say we have a 30 inch i don't know what a 30 inch person is 60 pounder maybe that's going to be a zero that's a child and then you give it a bunch of real world data and that's considered trained and then down here we could give it some other information let's say we got a 70 inch 200 pounder and that should tell us uh hey one that's an adult let's go ahead try actually running this here let's save that result there and let's go node app you can see hey we got a 31 chance that that's an adult now a 31 percent uh guesstimation or accuracy level that we're dealing with an adult that's not very good so let's say we gave it some more training data let's say we had a 73 incher 250 pounder and that was an adult let's let's see the difference here there we go now it's a 67 chance that we're dealing with an adult so our network became more accurate with the same data just because we gave it more historical data points so your network is only as good as you're able to create your data that's one very very important thing with machine learning most of the trick is coming up with data that can predict accurately what an output an outcome will be another thing here is we can also change this to objects which is a little more clear we could call this heights and we could call this weights and then your output here could be um we would say adults is one and so that's that's a little bit easier of a way uh to make it easy to read as you're doing these applications and they can pass heights and weight in and our result will look a little bit differently now it'll say adults 92 confidence that we're dealing with an adult so that's that's brain js now let's use it to solve our problem of is this a light color or is this a dark color the way we're going to do that is we're going to change our inputs to be rgb and then we're going to say is the output light one or is it dark one and so all we have to do is give it some training data by picking some of our own colors looking at the rgb values and we can easily convert rgb into something between 0 and 1 by dividing it by 255 because rgb colors are between 0 and 255. so if we divided by 255 255 becomes one zero stays zero and 120 is somewhere in between zero and one uh so i've gone ahead and done that i've made this rgb data set by just picking some colors and dividing all the numbers by 255 and saying is it a light color or a dark color so here's my data set now let's go ahead copy and paste this and i'll strip this last one off the list here so i know that this is light let's go ahead and comment that one out and let's go ahead and paste our new rgb value in here and let's see what we get node app it says hey 95 confident with just five training values 95 confident that you are giving me a light color right here awesome so my neural network is working good and it can predict whether a color is light or dark so now we can go over to our little html and plug in our code and we should be working here so let's go ahead copy all this code right here and so here's my app right now i have an input and a div example and i have an event listener for that input to change and whenever it changes i'm changing the background so now i need to also change the text so let's kind of bring our stuff in here let's uh make a const rgb equals i have this little helper function here that i got off stack overflow for how to convert to rgb so it's going to convert hex to rgb and i'm also dividing them all by 255 and rounding them to two decimal places that's what this is right here so basically just getting an rgb value so git rgb e dot target dot value so whenever you change that input right there i'm going to get the value in the rgb numbers let's console log that let's go take a look yep there's my rgb values excellent and so now all i need to do is create that neural network train it give it this rgb value and whatever the output is i'll know if it's light or dark so let's uh come in with my brain neural network i'm also importing brain.js right here from unpackaged.com which is basically npm so i am creating a new neural network i'm training the neural network and let's go ahead get our results by running rgb which is our rgb values let's go ahead and console log that console log that results so now i'm console logging the result of whether the color's light or dark and you can see that i'm getting all my outputs here so i could either say hey if light is larger than dark then we know it's light but i can also have brain js do that for me by saying brain dot likely give it rgb and give it the network that i'm dealing with and that will do that exact same thing for me so now let's go ahead and pull this up and you see now it says dark light dark light dark light excellent so all i have to do at this point is say example dot style dot color is results is dark if the result is dark then we're going to return white text otherwise we're going to return black text so it's going to set the text color determining if it's a dark or light background let's see how it goes oh there we go we've got dark we've got light dark excellent it's toggling right how it needs to let's check out some of these weird edge cases okay yellow seems to be doing some tricky stuff here so i'm going to take a data point that is wrong let's take that data point here let's let's console log the rgb values here let's go find that wrong data point here and we'll have our program finetuned here within just a moment let's find that data point so instead of adding more algorithm more to the algorithm more math more stuff like that i just have to go in here and add another use case with an outcome and just train it a little bit better so i'm going to give it this i'm going to say that that is a light background we want dark text so now it's trained let's let's see what we have now there we go much more how i would expect it to work uh so instead of solving some strange edge cases you can see i got another kind of weird quirky area there instead of solving edge cases i just try to find quirky spots in the data and train my data better okay i have this little quirky flash of light here maybe i'll just say that this data point here is a dark background let's do make that a darker background and within moments we've basically been able to solve this problem that would have been pretty frustrating to solve in code there we go quirkiness is gone looks like all those quirky possibilities are gone let's see what it does when you start it's pulling out the hues yeah it definitely does what we expect it to do so there you go that's how to get involved in machine learning how to use it to solve some issues that that might not be quite as fun to solve using traditional programming methods so hope this helped you out hope it gave you the confidence to get into machine learning and have a good day