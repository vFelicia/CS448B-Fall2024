in this video we are going to build a machine learning recommendation engine completely in the browser using javascript it's going to be a lot of fun and the problem we're going to solve is i want you to suggest to me good color themes for my text editor for me and as you can see i've got it going here and it's it's choosing some pretty nice themes if you've ever followed my videos before you can see that these look a lot like the themes that i choose to use day in and day out so it is definitely working and it works completely based on my ratings of randomly generated themes which oftentimes are ugly themes like this one yuck that's gross um but as i vote the neural network gets better and better and starts recommending better and better themes i have about 30 or 40 votes under my belt right here and it's really good so let's kind of walk you through what you have to do to make a recommendation engine it's pretty similar to what we did in the last step we're going to start by making a new network and i'll just kind of plunk out some code here and then we'll walk through the actual code that i've built so we'll make a new network and then we're going to train it with our data and the data is the color schemes that we have voted on and our voting response so it'll look something like this so we have an array of training data and each piece of training data will look like this it'll be an input and an output so the input is going to have 12 dimensions to it this time 12 inputs the input values are sometimes called input neurons in machine learning or sometimes they're called input dimensions so we're going to have 12 neurons we're going to have the rgb of our background color and then the rgb of our three colors with our color scheme you can see we basically have four colors background color one color two and color three so we're basically going to just do an array to keep it simple instead of doing a named object values so we're basically gonna have rgb of backgrounds i'll just use all zeroes for now color one color two and color three so that's what our input is going to look like these are going to be an rgb value between zero and fifty and these are gonna be an rgb value between 50 and 255. so i'm kind of giving it an initial parameter of we're doing a dark background in light text and then the output is going to be a score it's going to be what you clicked on with your stars which is going to be basically a score between zero and one uh so you're going to rate does this color scheme get a zero or a one or somewhere in between for me so we're going to build up that training data and then we have a trained network which is also called a model uh so once we once that network is trained we're going to generate a hundred thousand different possible color schemes which may sound like a lot but there's actually 10 septillion possible color schemes with the four colors we have so 100 000 is actually not very big of a sampling and again it's going to be completely random we're going to generate a hundred thousand of them and then we're going to do net.run and we're going to do each scheme at a time so we're going to run i will do a for loop and then we'll run that scheme or theme and we're going to get the results we're going to we're going to sort them all by results and we're going to give you the top 20 results so that's basically how you're going to make the recommendation engine we're going to train a model we're going to run a bunch of values through that model and we're going to pick the highest scoring values and return them to you you can see here we have the highest scoring values and let's go and get into the code i'm going to show you how it works we'll give you the code at the end of the video and you can have fun and play around with it so we've made this fake editor wrapper here and i basically copied some text some code and then i wrapped the different portions in spans they're going to get color 1 color 2 or color 3. class color 1 class color two class color three so this is just a fake editor here with text and so when we generate random colors we're just going to find everything color one give it color one find everything with class color two and color three so on here's our stars and then here's the themes id that we're going to pop all our themes into a little bit of css not too much just to kind of make this page a little more beautiful for you and then we're on to our theme generator code so we're going to do here is we start by just kind of grabbing all of those selectors on the page we initialize the training data in local storage yeah so that way if i refresh this page i still have all my training data yay so we started off by being an empty array unless it already exists and then we create this current colors object and we generate random colors into it so this object right here represents the colors of the scheme or the theme that you're voting on right now we have a background color and we have one two three color options you can see that when we generate random colors we get some ugly stuff i mean there's some bad color combinations out there if you're just doing it randomly so we generate a random theme which populates it here and then we predict theme combinations so basically all we do at this point is we listen to the stars and as you click on a star we're going to turn that into a score so if you click on star number 4 index four which is number five because they go zero one two three four um if you click on four that gets divided by four and turns into a one so these are going to be a score value of zero to one if you remember from the last video everything needs to be a value of 0 to 1. and here's what our training data looks like we're basically going to have an input array of the rgb values we've gone from having an input array of three values to an input array of 12 values rgb for our background rgb for color 1 2 and 3. in machine learning these are oftentimes called neurons input neurons or input dimensions so we have 12 input neurons 12 input dimensions and we only have one output dimension and that is our score so when you click on a star we take the current dimensions from here for our input dimensions and we take the star value that you just clicked on and that's our output dimension so there we have it we have our 12 input dimensions whenever you click on a star this save training data runs we save our 12 input dimensions and our one output dimension on to local storage and now we can go on to predict theme combinations so basically we create a new neural network here every time you click so we're going to make a new neural network we're going to train it with the data that we got off of local storage and then we're going to generate in this case we have 10 000 combinations here let's change that to 100 000. so we're going to create a hundred thousand random themes which is just a sampling of the possible themes out there again there's about 10 septillion possible themes out there with what we're doing here so we're going to take those colors and create our own input dimensions again we're going to run them through the network and get that score out of the output dimensions and then we're going to push those results all onto a results array we're going to sort them by score and then we're going to take the top 20 and add a new theme this is our add a new theme function here which just basically templates it out takes those colors and spits it out onto the page for you along with the score and the rgb values that it's using that's it so it took me about an hour to do most of the time i was spending figuring out the html the css and some of these helper methods here like generate a random rgb value and generate a random background rgb value also a helpful note here is the background is always going to be a number between 0 and 50 because i want dark backgrounds so that is one constraint that i put on the system and then the foreground colors are all going to be between 50 and 255 because i don't want black text on black background so i did kind of give it a heads up a leg up on the game we're doing dark background themes here but as you vote these recommendations just keep getting better and better for you and it's actually kind of surprising how if you just give it 10 negative votes because sometimes it takes 15 to 20 times for you to actually get a pretty random color combination but it was interesting to see that just by negatively voting the network started predicting some decent themes for me after five or ten clicks so there you go the the code's in the description go ahead tinker around with it have fun with it and that's how you make a basic prediction recommendation engine completely in the browser using javascript