all right we're going to learn javascript events today and javascript events in my opinion are really where javascript starts getting fun because you get to interact with the user as they interact with page so what an event is is that's anything that the user does to interact with a web webpage so if i were to click here that's a click event if i were to mouse over here that's a mouse enter and a mouse leave event when i leave so we can listen to these events it's called listening to these events and we can react and interact with the user so let's kind of get into what these events are i'm going to show you i basically have this add numbers here that's basically a paragraph with an input called num1 and an input with the idea of num id of num2 and then we have a paragraph with the idea of add sum so it's probably clear what we're going to be building here is whenever they change add 1 and add 2 we want to create the sum yay sounds easy enough so let's go ahead and build this out if you remember from our prior lesson we do selectors to actually grab an element so let's actually get num1 here num1 equals document dot gets elements by id and this is num dash one there we go and let's get number two as well up num2 there we go now let's go and get some while we're at it add some is add some i believe that's add dash sum let's make check yep add dash sum okay so we've gotten our elements here and to add a listener it's very simple you just take your element and do add event listener and then your first argument is the name of the event so let's do a click events and then this function will fire or execute every time that event takes place so let's just console.log hi there we go i have live reload going so let's just refresh so now when i click it console logs high there you go you can see it going let's show you let's actually make it alert high here hi hi okay let's do some other events here let's do a mouse enter so now whenever i enter it oh hi hi okay how about a mouse leave so i'm in and i left and then i get the high some other events are focus and that's going to be whenever i whoop focus on it there we go that's a focus event and now i can't get away and then a blur event not blue blur event is going to be whenever i leave that element let's see if i can get out here okay some of those events are actually tricky to get out of when you're doing alerts so there's a focus and let's blur blur hi there we go so here's kind of a list of events i got click mouse enter mouse leave mouse down is when your mouse clicks down mouse up is when you let it back up a click is when the browser actually registers that you clicked because you know if you hold it down real long and then you let go that's not going to register as a click so click is only when it's fast enough to be a click mouse up mouse move is when you're actually moving over it it will actually send your coordinates your mouse back key down key up those are actually your keyboard events blur and focus we already covered them here's your full list of events which i'll include in the description as you can see there are a lot of them the ones you'll probably want to focus on are the mouse events some of these are called mouse events and then some of them are called keyboard events and those are the ones you tend to use the most where those keyboard there you go keyboard events these are the ones you're going to use the most i'll put that in the description again and let's actually get into building this little addition program so what we want to do is we actually want to just add an input event which is whenever anything changes in the value of our input this will work all the way back to i think internet explorer 9. so on the input event we want to do some addition now it's generally not the best practice here to create a function it's usually a better practice to insert a function that's been created here like add and then this is just going to do ads so whenever the input event fires we're going to run the add function which is created right there that's good for several reasons which i can get into more later on one of the reasons is now i can fire that whenever either of these run so whenever the num1 has an input event i can run add and when num2 has an input event i can run at so that's one reason alone that it's great to pull it out so that way you can share this function between multiple elements that's kind of a good practice so we're going to do here is we're going to actually get our two values var1 equals num1 dot value that's going to be the actual value 2 equals num2 dot value let's console log both of these 1 2. abc d e f there we go we have our two values excellent um and then let's actually add some we want to change the inner html add sum enter html equals one actually we'll just uh see yeah one plus two so let's go check it out we got 12 and we have 24 and we got one two two four because anything that comes in from an input is a string type it's not a number type so how you convert that from a string type to a number is just go parse floats so that's going to parse it into a floating number floating integer floating number i forget exactly that's supposed to be called so let's do 12 and 35 okay 34. okay so that works but if you notice when this is empty it says non which means not a number that's because we just tried to parse undefined as a number so we can do here is we can do an or zero these little double bars mean or which means if this value is basically null undefined non which is not a number then it's going to say okay that doesn't exist let's use the or value instead so i could say null or zero then i could do null or zero and basically one would equate to zero and two would equate to zero so really how this pans out to be is if this doesn't create a number we're going to use 0 instead if this doesn't create a number we're going to use 0 instead so there we go let's try this now 34 excellent it did 34 plus 0 and then plus 1 for 35. all right there you go we did our little number addition and let's do a little maybe your sum is and of course this will actually do something tricky as well 3 4 plus 2 4. why did that do that well because as soon as we start adding a string to numbers then it can't do that so it adds a number plus a number so kind of the way you get around this is go sum equals 1 plus two ah two numbers together i can do that javascript says and now we can add sum in there so that'll work 34 plus two excellent um and another way that you could do that is you could just go parentheses like that one plus two and so that will do whatever's inside of the parentheses first so that's a number plus a number that'll work and then it will add that number plus the string in which case it will turn them all into one big string so i'll just leave it like that it's a little bit cleaner if i if you ask me excellent so there's our addition our edition is working thanks to click events so let's go ahead and do maybe one more example here i'm going to turn off this html and turn on this html so what i have here is i have a list of lis and i have a list of images now the images have a class of hide which means they're hidden up here my class hide in the css is display none so i basically want to be able to click on this a tag and then i want that to show an image actually show it and hide it so let me go ahead and save this to kind of see what we have here so we have simon cowell bruce willis and ben carson three great guys of course and then uh basically i want to click on one of those and so i've added an href of pound pound will just by default just reload your same page it doesn't really matter what we put in href because we're going to be returning false which means we're going to cancel this out it's never going to go anywhere so if that was google.com it's not going to go to google.com we're actually going to cancel that out but it's good to put something in there so by default if you have a link that you're going to be canceling with javascript just put pound in there so we have id of simon id of bruce id of ben and then our images we want to toggle are simon pick bruce pick and ben pick okay let's go and build this out let's get rid of this javascript uh i will put that in the description on maybe codepen or something for you for a little bit later but for now we'll get rid of that and let's go ahead and grab that simon element where simon equals document dot get element by id and then this is just simon there we go and let's get simon pick simon dash pick i believe yeah there we go so when simon is going to get an event listener click function so whenever simon gets clicked we're going to run this function if simon pick classname so if it has the hide class then we're going to remove it dot class name equals there we go so basically if it has a class name hide we're going to remove it so let's go and click hey there he is and then else we're going to put it back on there we go now it's going to toggle there he is there he isn't okay excellent so now let's do the same thing for bruce willis and ben carson and then we'll make this app a little bit cleaner so let's get everything that says simon and change it to bruce i'm using sublime text multiple cursors here sublime text and a lot of text editors have this control d or apple d or command d i guess that's going to automatically select all the same stuff so i can change it which is awesome what uh and we got ben carson so simon did that let's do bruce let's find everything in here that's called simon bruce it just makes it so much faster to do this stuff and then ben here we go we should have all three simon bruce ben let's see what happens if i click a couple of them and now they're both showing that's something we can deal with a little later okay so all three of them are in here but i don't like this for a lot of reasons one this is a lot of almost identical code there's this thing that coders talk about all the co all the things all the all the time called dry dry code don't repeat yourself i almost said do not don't repeat yourself dry dry coat this is not dry code because uh there's all this repeating this is basically exactly the same thing as this which is basically the exact same thing as this that's a really bad idea so we actually want to find a way that we can share all this so let's go ahead and create a new function here i'm just going to go ahead and mute you guys out and let's actually do a new function let's add event listener i'm just going to actually copy you let's get at one function that everybody can share that everybody can use we'll call it pick link there we go so now simon can listen to that and bruce can listen to that and ben can listen to this excellent so now piclink can kind of do all of this at once i'm going to go ahead and scroll down eyes there we go get you guys some space up there pick a link and then what we're gonna do here is we're actually going to get it one thing that's interesting about an event listener let me go ahead and just uh console log this for you basically when we start sharing stuff we don't know who got clicked on so we don't know if we clicked on simon bruce or ben when we fire this function so we have to look that up based off of this this will be the element that got clicked so this will be simon if you clicked on simon the value of this will be bruce if you clicked on bruce well here i'll just console.log it so you can see there we go so this is my a for simon if i click on bruce then i'm console logging this then that's going to be bruce willis b is going to be ben carson so what i've done here is you'll notice i've added this data dash img attribute so you're free to use with html four or five data dash anything you want so i just called it img because this is going to be the id of the image that i want to toggle when i click on simon you'll notice that this has the id of simon pick and so basically when i click on this link i want to toggle simon click so i add a data image of simon click data image of bruce pick sorry simon pick data image of ben pick so i'm actually going to snatch that out so here's kind of how that'll work i'll go very pick instead of before i was automatically looking at simon pick bruce pick or ben pick well now i don't know which pick it is so it's just going to be ver pick equals document.getelements by id and i actually want to snatch the attribute out there out of there so where pick id equals this dot attributes so this again is my a link that got clicked on and i want to look at my attributes list and i want to grab data dash img so i can't go data dash img that's bad syntax that's going to it's data minus img so there's another way that you can access attributes is i can do this and so that's going to be the data img so i can also do this attributes basically you can use it to access any value you want so i don't need to do that for attributes i can do the cleaner version which is this way this dot attributes dot data img is basically what i'm doing dot value so i'm going to get the value out of the data img attribute and so pick id let's go to console.log pick id make sure i got this runner right so there you go simon pick is the idea i'm getting bruce pick and ben pick awesome so now i just have to do pick id so i'm getting my element this is the pick that i want to show and now i just have to kind of copy and paste this code here let's copy and paste this get rid of my comments let me toggle it over a little bit so now i'm just doing pick i've picked up class name as hide get rid of it excellent this should totally work let's see simon's working bruce is working ben is working so now what we did is it took a little bit of figuring out a little bit of reworking but look how much shorter my code is now so i've added three listeners i don't need you i don't need you and i don't need you excellent that's a very simple code and this is good for several reasons one i'm only creating one function so i'm using a little less memory than if i created three different functions and now any future functionality i want to add into my program it's all i have to do is change this one function and all three of them will get the results so remember that problem i had earlier where if i click on several i see them all well what i want to do is i actually want to hide every image i want to actually hide every image that's in existence on the page first and then i want to show everything so i'm going to go document dot query selector image there we go and then i would basically loop through that i could go over image all images and then i could loop through all images and i could tell each image to have a class of hide and then i could run through the rest of the code and show the one that i want to show i might as well do it for you right since i just told you about it let's do a for loop var i equals zero remember that for loop and how annoying they are you just got to keep doing it to remember how to do it i is less than all images dot length i plus plus man it takes a while to remember that for loop basically i'm just going to go through i as many times as it takes all images i so i want to get the image that i'm looking for let's see dot class name equals hide so i'm going to add hide class name to every image on the page and then i'm going to go through with the rest of my program let's see if this works oh it works excellent excellent that is exactly what i wanted it to do am i only showing one yep i'm only showing one awesome there you go that's javascript's event listeners mixed in with some for loops and some selectors that's kind of tying some stuff together for you if it got a little complicated with this example don't worry just mess around with your math example for a while i'm going to post both of these on codepen and i'm going to put that link in the description have an excellent day