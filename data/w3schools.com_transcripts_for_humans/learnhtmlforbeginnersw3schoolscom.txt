With timestamps:

00:00 - Hello! So you want
to learn how to make websites.
00:03 - In that case you need to learn HTML!
00:08 - So let's start at the very beginning.
00:10 - What exactly is HTML?
00:13 - And why do I need it?
00:15 - Let's break it down from the basics,
and build our way up.
00:19 - HTML stands for HyperText Markup Language.
00:23 - It uses markup to describe
the structure of web pages.
00:27 - The structure is built up by elements,
and they are represented by tags!
00:33 - Tags label pieces of content
such as "heading"
00:37 - "paragraph" "table" and so on.
00:42 - These tags aren't shown on the page,
00:44 - but are used to display content
in different ways.
00:48 - That's a lot to digest!
00:50 - So let's go into it.
00:52 - First let's try it together.
00:55 - Don't worry about understanding,
it'll all click as we work through it.
01:00 - We start by declaring
that this is an HTML document.
01:04 - The  is the root
element of any HTML page.
01:10 - The  contains meta information
about the document.
01:14 - The  element specifies
a title for the document.
01:19 - The  contains
the visible page content.
01:24 - Finally, the  defines a large heading,
while  defines a paragraph.
01:30 - With everything set in the order, let's
01:33 - go into the explanation of how tags work.
01:37 - Tags typically come in pairs.
01:40 - A start tag, and the end tag.
01:43 - The end tag is written
just like the start tag,
01:46 - but with a forward slash inserted
before the tag name.
01:50 - Here we've got the tag name
and the forward slash tag name.
01:54 - And the contents of the element
in between them.
01:57 - So if this was a paragraph, we'd use
 ---  and some text in the middle.
02:06 - Let's play a game.
02:07 - See if we can correctly match start,
and end tags, together.
02:22 - So what turns HTML code and elements
into a viewable website?
02:28 - Well, that's where web browsers come in.
02:30 - The purpose of a web browser, be
it Chrome, Firefox, Edge,
02:34 - or Safari, is to read HTML documents
and display them.
02:39 - But, the browser
does not display the HTML code.
02:42 - Instead, it uses it, to determine
how to display the document.
02:47 - Let's see what kind of building blocks
are hidden behind this webpage.
02:53 - This is a visualization
of an HTML page structure.
02:57 - You can see the HTML,
the head, with the page title
03:00 - below that, and then the body under that.
03:04 - And that's the basics.
03:06 - Let's delve into this further.
03:10 - When you're creating and modifying web pages you can use any professional HTML editor
03:16 - But when you're learning HTML you  should start with a simple text editor
03:20 - like Notepad on PCs or Text edit on Macs
03:24 -  it's better to start simple before jumping into the deep end.
03:29 - Here are 4 steps to create your first web page:
03:32 - Step 1 open Notepad or Text edit
03:35 - In this video we will use notepad.
03:38 - Now it's time for step 2.
03:40 - Write some HTML.
03:43 - stretch your fingers and then either
03:45 - write or copy some HTML into notepad.
03:49 - Then comes step 3.
03:51 - Save your work as an HTML page.
03:55 - Look at you moving along so fast.
03:58 - To save it select file and then Save As.
04:02 - Name the file "index.html"
04:05 -  and set the encoding to utf-8 which 
is the preferred encoding for all HTML files
04:12 - HTML files can have .html or just .htm as file extension.
04:18 - And finally we reach Step 4.
04:21 - View the HTML page in a Browser.
04:25 - Open the saved HTML file in your favorite browser.
04:28 - The result should  look like this.
04:30 - And just like that you've created 
your first HTML page.
04:34 - You should feel very proud.
04:38 - Now that we know how to create HTML Pages,
let's see some coding in action.
04:43 - An HTML element usually consists 
of a start tag and an end tag,
04:48 - with the content inserted in between.
The HTML element is everything from
04:53 - the start tag
to the end tag.
04:56 - For example the HTML p 
element defines a paragraph.
05:01 - So if you want a paragraph on 
your page write the  start tag
05:05 - add content inside
and close it with the  end tag.
05:10 - This is now a HTML p element, 
also known as a paragraph element.
05:16 - All HTML documents consist 
of nested HTML elements.
05:21 - Nested elements are elements within elements.
For instance these two elements are nested
05:28 - within the body element, which in turn 
is nested within the HTML element.
05:35 - Let's  take a closer look at the different elements:
05:38 - First the HTML element defines the HTML document,
05:43 - it comes with a start tag and an end tag.
Inside the HTML element we have the body
05:50 - element which defines the document body.
It comes with a star tag and an end tag.
05:56 - The body element contains two other HTML elements:
The first one defines a heading,
06:02 - with the text "My First Heading".
The second one defines a paragraph
06:07 - with the text "My first paragraph".
Remember to always include the end tag,
06:13 - it might work without it but 
there's always a chance it will
06:16 - produce unexpected results or errors.
However, some HTML elements do not
06:22 - have content they're called empty 
elements and do not have end tags.
06:27 - An example of this is the br element 
which is an element with no content.
06:32 - It just defines a line break.
HTML tags are not case sensitive, both lowercase
06:38 - and uppercase works and means the same thing.
However it is recommended to use lowercase tags.
06:46 - And with that said, we've covered the 
basics of HTML elements and how to use them
06:53 - To provide additional 
information about HTML elements
06:57 - you need to get familiar with attributes.
07:00 - Attributes can provide more 
details about an element.
07:04 - They're always specified in 
the start tag of an element
07:07 - and usually come in name / value pairs like this.
07:14 - One type of attribute is 
href like in this example.
07:19 - Links are defined with the 
 tag and the link address,
07:23 - or URL, is specified in the href attribute.
07:29 - Another type of attribute is src.
07:32 - We call that Source, like in this example:
07:36 - HTML images are defined with the 
 tag and the image source,
07:41 - or URL, is defined by the src attribute.
07:46 - Images in HTML have a set of size attributes these
correspond to the width and height of an image.
07:52 - For instance an image size with a width 
of 500 equates to 500 pixels wide.
07:58 - If you change the width to 300 
the image will become smaller.
08:04 - The style attribute is used to specify 
the look or style of an element.
08:09 - This is called CSS and you'll learn 
about that in another chapter.
08:14 - For now you just need to know 
that CSS allows you to change
08:18 - colors, sizes, and set the layout of your page.
08:23 - The language of the document can be declared 
in the HTML tag with the lang attribute.
08:29 - This is important for screen 
readers and search engines.
08:34 - The title attribute specifies 
a title for an element.
08:37 - The value of this title is displayed as a tool 
tip when you move the mouse over the element.
08:42 - Double quotes around attribute values are the 
most common but single quotes can also be used,
08:48 - and sometimes you actually have to use both.
08:51 - For instance if an attribute 
value contains double quotes
08:55 - it is necessary to use single 
quotes around it or vice versa.
09:00 - So remember if you want to change something about 
an element you will probably need an attribute.
09:08 - Web pages are filled with a sea of words.
09:11 - If all the words look the same, 
your readers could get lost
09:14 - or worse: bored.
09:16 - in order to spice up the page and keep 
readers engaged you should use HTML headings.
09:23 - HTML headings make titles and subtitles 
stand out in the sea of words on a web page.
09:29 - Here's what a page looks like without headings.
Here's what it looks like with headings.
09:36 - You can see now why headings are a must.
09:39 - They appear bigger and with more 
space than normal paragraphs.
09:44 - There are six different heading levels.
09:46 - The levels range from h1 to h6
and each heading level has a rank.
09:52 - h1 is the largest and most important heading.
09:56 - h2 is the second and on and on to h6 
which is the least important heading.
10:02 - Each HTML heading has a default size.
10:05 - You can change the size with the style 
attribute, using the CSS font size property.
10:12 - And to change the color of the heading 
you can use the CSS color property.
10:17 - Headings are important for many reasons.
10:20 - People often skim a page by its headings.
10:23 - This way they can go right to 
the information they need.
10:27 - Search engines use the headings to index 
the structure and content of your web pages.
10:33 - See the search result shows 
the heading from the page.
10:37 - If you want to engage your readers and get indexed 
properly be sure to use headings correctly.
10:46 - Now let's take a closer look at HTML paragraphs
and how they are displayed.
10:51 - Paragraphs in HTML are defined by the p element.
10:56 - Here are three paragraphs.
10:58 - This is how they are written in the code,
and this is how they are displayed on the page.
11:03 - You can see that the browser 
automatically adds some white space,
11:06 - also known as margin,
before and after each paragraph.
11:11 - HTML can be a mystery.
You can never be sure how HTML will be displayed.
11:17 - Screen sizes, as well as resized 
windows, will create different results.
11:23 - With HTML you cannot change the output by 
adding extra spaces or lines in the HTML code.
11:29 - In fact the browser will remove any extra spaces 
or line brakes when the page is displayed.
11:34 - If you want a line brake use the HTML br element.
11:38 - This brakes a line without 
starting an entirely new paragraph.
11:45 - While default HTML Pages can be quite dull,
11:48 - to add some color and personality 
to the page you need style.
11:52 - Setting the style of an HTML element 
can be done with the style attribute.
11:57 - The style attribute contains 
CSS properties and values.
12:02 - CSS is the language we use to style HTML.
12:06 - Let's set the background color of a page.
12:09 - The CSS background-color property defines 
the background color of an HTML element.
12:15 - To add a background color to this page we add
12:17 - style="background-color: 
powderblue" to the body element
12:23 - Now the background color of 
this page is powder blue.
12:27 - Now let's change the color of the text.
12:30 - The CSS color property defines 
the text color of an HTML element.
12:34 - To add a text color to the heading we add
style="color:blue" to the h1 element.
12:42 - Now the text color of the heading is blue.
12:44 - Then we add a red color to the paragraph.
12:48 - Now let's change the font of the text.
12:51 - The font-family property defines the 
font to be used for an HTML element.
12:56 - See? You can simply change 
it to Verdana and Courier.
13:01 - The font-size property defines 
the text size for an HTML element.
13:06 - See? When the font-size value changes, 
the size of the text changes accordingly.
13:11 - The text-align property defines the 
horizontal text alignment for an HTML element.
13:17 - To center a text we use text-align: center
13:21 - So always make sure you add style to your work,
save beige for pants.
13:27 - In an earlier chapter we went 
over the HTML style attribute
13:31 - But did you know HTML also has elements 
for defining text with a special meaning?
13:37 - Of course not. That's why 
you're watching this video!
13:40 - See these HTML elements?
13:43 - They correspond to formatting output 
like, bold, or italic text respectively.
13:48 - But it goes beyond bold or italics.
13:50 - There are many different ways to 
display special types of text.
13:55 - Let's start with the b and strong elements.
13:59 - b defines a bold text 
without any extra importance.
14:04 - strong defines strong text. 
This indicates important text
14:08 - and is usually displayed as bold in the browser.
14:12 - Next is the i and em elements.
14:15 - i defines italic text while 
em defines emphasized text.
14:26 - One important thing to to note is that 
browsers display strong as b and em as i
14:33 - But there's a difference in the meaning of 
these tags b and i defines bold and italic text
14:39 - but strong and em means that 
the text is important as well.
14:45 - Next comes small.
14:47 - It does exactly what you're thinking,
makes text smaller.
14:50 - Then there's the mark element.
14:53 - This element defines marked or highlighted text.
14:56 - There are are also elements that 
define deleted and inserted text.
15:01 - Use the del element which 
defines deleted or removed text.
15:08 - Then there are subscripted 
text and superscripted text.
15:12 - sub is for subscripted and, sup is for 
superscripted, doesn't get much easier than that.
15:19 - Just to recap here are the different html
15:22 - text formatting elements and 
how they can change any text.
15:30 - Now we will learn about comments.
15:32 - Not the bottomless pit of YouTube comments
15:35 - but HTML comment tags
15:37 - which are used to insert 
comments in the HTML source code.
15:42 - You can add comments to your 
HTML source by using this syntax.
15:47 - Make sure to note that there 
is an exclamation point in
15:50 - the opening tag but not in the closing tag.
15:54 - Comments are not displayed in the browser,
15:56 - they're used to help document 
your HTML source code
16:01 - As you input comments you can use them to 
place notifications and reminders in your HTML
16:11 - See you next lesson
16:13 - Today's lesson will be perfect 
for you right brain thinkers.
16:17 - The topic: HTML colors!
16:20 - HTML colors can be specified using
16:23 - color names, RGB or hex values.
16:27 - HTML supports 140 predefined color names
16:34 - Let's try to use color names in our HTML.
16:37 - First set the background color like this:
16:42 - Then you can set the color of the text like this:
16:49 - If you want to give your text 
a border insert the following
16:52 - code
16:55 - But you can be more detailed 
than just picking a color name.
16:59 - Using RGB or hex you have more than 
16 million color possibilities.
17:05 - That means you can turn the 
color of this tomato from this:
17:09 - to that!
17:10 - All you did was increase the amount of green.
17:13 - Now let's learn about RGB values.
17:16 - RGB stands for Red Green and Blue.
Each parameter red, green,
17:25 - and blue defines the intensity 
of the color between zero and 255
17:32 - So if you need a real reds red 
then set the red parameter to 255,
17:38 - and the other two colors to zero.
17:40 - But what about displaying black or white?
17:44 - To get black, all color 
parameters must be set to zero.
17:49 - Alternatively to get white all 
color parameters must be set to 255.
17:55 - By using different combinations of red, green,
17:58 - and blue, you have over 16 
million color possibilities.
18:05 - And if you're trying to get gray use 
equal values of all three color sources.
18:10 - Now let's learn about 
hexadecimal color values or hex.
18:15 - The hex syntax starts with a 
hashtag followed by six characters.
18:20 - Just like the RGB color values, these 
characters represent red green and blue
18:26 - but now they are hex numbers and go from 00 to FF.
18:32 - So to get red set the value 
to the highest number which
18:36 - is FF and the other two to the lowest number 00.
18:41 - See?
18:51 - There is also an extension of RGB 
color values with an alpha channel,
18:55 - which specifies the opacity for a color.
18:57 - This is called RGBA.
19:01 - The alpha parameter is a number between 0.0
19:05 - which is fully transparent and 1.0 
which is not transparent at all.
19:11 - And there you are.
Now go out and add color to your HTML world!
19:18 - Greetings once again!
19:20 - I would like this lesson to center on style.
19:23 - Specifically CSS
19:25 - Now CSS stands for cascading style sheets
19:30 - and it describes how HTML elements 
are displayed on a web page
19:36 - This has the ability to save 
many hours because it controls
19:39 - the layout of multiple web pages all at once
19:43 - There are three ways to add CSS to HTML elements
19:48 - First there's inline which is done by 
using the style attribute in HTML elements
19:54 - The second is internal which is completed 
by using a style element in the head section
20:01 - Lastly there's external which 
means using an external CSS file
20:07 - Let's take a look at the three options in action
20:11 - An inline CSS is used to apply a 
unique style to a single HTML element
20:18 - This is done by using the style 
attribute of an HTML element
20:22 - Just like this:
20:23 - Here we set the text to "blue"
20:28 - Next is internal CSS,
20:30 - which is used to define a 
style for a single HTML page
20:35 - An internal CSS is defined in 
the head section of an HTML page
20:40 - within the style element
20:42 - Just like that
20:46 - And the last option is external CSS
20:49 - which is used to define the 
style for many HTML pages
20:54 - With external style sheets you can change the look 
of an entire website by changing only one file
21:01 - To use this option add a link to it 
in the head section of the HTML page
21:08 - An external stylesheet can 
be written in any text editor
21:12 - but the file must not contain any HTML code
21:15 - It also must be saved with a .css extension
21:20 - It should end up looking like this
21:23 - That was a short introduction to CSS but don't 
worry we'll cover more of the specifics later on
21:32 - Now today we're discussing something 
found in nearly all web pages: Links
21:38 - They allow users to easily click 
their way from page to page
21:42 - To start let's discuss what HTML links are
21:45 - All HTML links are hyper links,
21:49 - they are clickable links that 
jump you to another document
21:53 - When you move the mouse over the link the 
mouse arrow will turn into a little hand
21:59 - Remember a link doesn't have to 
be a text it could be anything
22:02 - an image, a button
22:04 - or even me
22:05 - Now let's go into syntax.
22:08 - Now in HTML all links are defined 
with the  tag like this
22:13 - The href attribute is like the road map it 
specifies the destination address of the link
22:20 - The link text is the visible part
22:23 - Clicking on the visible part then 
send you to the specified address
22:30 - Next we discuss local links
22:32 - The previous examples were using 
absolute URL, AKA a full web address
22:39 - A local link, AKA a link to the same 
website, is specified with a relative URL
22:45 - That means there's no www part like that
22:53 - By default a link will 
appear in one of three ways:
22:56 - An unvisited link is underlined and blue
22:59 - A visited link is underlined and purple
23:02 - An active link is underlined and red
23:06 - But you can change the default colors by using CSS 
to learn more about that head to the CSS tutorial
23:15 - Next let's cover the target attribute.
23:18 - The target attribute specifies 
where to open the linked document
23:22 - It can have one of the following values:
23:29 - "_blank" opens the linked 
document in in a new window or tab
23:35 - "_self" opens the linked document in 
the same window/tab as it was clicked,
23:41 - this is usually the default
23:46 - "_parent" opens the linked 
document in the parent frame
23:51 - "_top" opens the linked document 
in the full body of the window
23:55 - Lastly frame name opens the 
linked document in a named frame
24:02 - But what if you want to use images as links it's 
actually pretty common and should look like this:
24:09 - As you can see we simply wrap the img
element inside an a element
24:17 - You can add a title to a link 
using the title attribute
24:21 - The title attribute specifies 
extra information about an element
24:25 - The information is most often shown as a tool 
tip text when the mouse moves over the element
24:32 - Before we end class,
let's do a quick chapter summary
24:35 - The a element is used to define a link
24:39 - The hrf attribute is used 
to define the link address
24:43 - The target attribute is used to define 
where to open the linked document
24:48 - Using the img element inside an 
a, will define an image as a link
25:00 - Greetings! Today's lesson:
25:02 - Images
25:05 - Images can improve the design and 
the appearance of your web page
25:09 - Especially if they are pictures of majestic things
25:13 - See these?
25:14 - Well they actually look like this
25:17 - Let's take a look at what that means
25:20 - In HTML images are defined with the  tag
25:25 - The image tag has no closing tag 
and is what we call an empty tag
25:31 - But it should contain attributes
25:34 - The src attribute specifies 
the URL or source of the image
25:40 - Next let's go over the alt attribute
25:42 - It provides an alternative text for an image
25:45 - This is helpful if the user cannot view 
the image because of slow connection,
25:49 - error in the src attribute ,
25:52 - or the user has a screen reader
25:54 - The value of the alt attribute 
should describe the image.
25:59 - So if a browser cannot show the image it'll 
display the value of the alt attribute instead
26:05 - And the alt attribute is 
required for images in HTML
26:10 - A web page will not validate correctly without it
26:13 - Next, image sizes.
26:15 - When you start to deal with 
the image's width or height
26:18 - use the style attribute to specify it
26:21 - It should look like this
26:25 - Another way to handle this is to use 
the width and and height attributes
26:31 - Make sure to note that you should always 
specify the width and height of the image
26:36 - If they aren't specified the page 
might flicker while the image loads
26:41 - While the width height and style 
attributes are all valid in HTML5
26:46 - we suggest using the style attribute
26:50 - Now moving back to the src attribute and 
finding the specific location of an image
26:58 - If not specified the browser expects to find 
the image in the same folder as the web page
27:04 - But it's common to store images in a subfolder
27:07 - To do so you must include the 
folder name in the src attribute
27:12 - Another way to store images is on image servers
27:15 - You can access the images from 
any web address in the world
27:19 - You can also use animated images
27:21 - No matter how you pronounce them HTML 
allows animated gifs and gifs like this
27:28 - But what if you want to use an image as a link?
27:30 - Just put the  tag 
inside the  tag like this
27:39 - To make an image float to the right or 
left of a text use the CSS float property.
27:45 - Like this
27:48 - Want to learn more? Float 
over to the CSS float tutorial
27:54 - Sorry I couldn't help myself
27:57 - But what if you wanted your image to 
be less functional and more aesthetic?
28:02 - Namely a background image to be precise
28:05 - To do that on an HTML element use 
the CSS property background-image
28:10 - Which works like this.
28:13 - If you only want the background 
image on a paragraph specify the
28:17 - background-image property on the P element
28:20 - This is covered in depth in 
the CSS background tutorial
28:24 - Now we've covered a lot in this 
chapter but here's one final tip
28:29 - Loading images takes time, and large images 
can slow down your page so use them carefully
28:35 - But some are worth it
28:40 - In this lesson you will 
learn how to create a table
28:44 - No I don't mean the kind that needs chairs
28:48 - I mean the kind that arranges their 
data into rows and columns like this:
28:56 - So let's talk about the tools 
you need to build your tables
28:59 - You will use the HTML table 
element to define a table
29:05 - If you want to define table rows, use tr elements
29:08 - You'll need one tr element for each row
29:12 - Each row consists of one or more td elements,
also known as table data
29:18 - These act as columns inside the table 
and define data for each table cell
29:24 - You can also add headings for each 
column by using the th element
29:30 - phew did you get all that?
29:32 - Let's do a quick recap
29:34 - Define a table with the table element
29:38 - Define rows with the tr elements
29:41 - Add headings with the th elements
29:46 - And add table data with td elements
29:49 - Those are the basic tools 
you need to build HTML tables
29:54 - By the way you should note the table 
headings are bold and centered by default
30:01 - and borders won't just appear automatically so if
30:04 - you want to border on your 
table you must specify it
30:07 - Here's how:
30:08 - The CSS border property defines a border
30:13 - As you can see in the result this will 
display a table with double borders
30:18 - If you don't want that use the border-collapse 
property to display a single table border
30:25 - If you want to add a little extra padding 
to the cells use the CSS padding property
30:32 - If you want to change the alignment of text 
within the cell use the CSS text-align property
30:39 - Now let's say you want a cell 
to span over many columns
30:42 - For that you have to use the colspan attribute
30:47 - It should be added directly 
to the table cell like this
30:52 - Just like you would have to use the rowspan 
attribute to make a cell span over many rows
31:00 - Well there you have it
31:02 - Now you know how to add tables to your website
31:05 - Happy building
31:09 - People make lists for all sorts of things
31:12 - To-do lists
31:13 - Grocery lists
31:14 - Bucket lists
31:16 - You can make lists in HTML as well
31:20 - There are two main types of lists in HTML
31:23 - Ordered lists and unordered lists
31:26 - Ordered lists have numerical 
or alphabetical markers while
31:30 - unordered lists have bullet markers
31:34 - Let's start by building an ordered list
31:37 - As you can see the  tag represents 
the start and end of the ordered list
31:42 - and each list item is wrapped within  tags
31:46 - The list items are marked with numbers by default
31:50 - To change the marker style use 
the CSS list-style-type property
31:54 - For instance you can use the upper-alpha value 
to display A-B-C instead of 1-2-3 like this
32:02 - Or you could use the upper-roman 
value to use Roman numerals like this
32:08 - What about the other kind 
of list with bullet markers
32:12 - That's an unordered list and is 
built pretty much the same way
32:16 - But it uses the  tag to represent 
the start and end of the list
32:22 - Each list item is still wrapped within  tags
32:26 - and of course you can use the CSS list-style-type 
property to change the markers here as well
32:34 - You can use circles, squares, 
or even no marker at all
32:42 - Now you know how to make lists in HTML
32:48 - Now you will learn about the 
two main display types in HTML
32:53 - Block and Inline
32:56 - As you've learned from the previous chapters,
32:58 - HTML elements behave in different ways
33:02 - Block elements start on a new line 
and take up the full width available,
33:07 - they stretch out to the left 
and right as far as they can
33:12 - Examples of these are headings, 
paragraphs, tables, and div elements
33:18 - Inline elements only take up 
as much space as necessary
33:21 - Examples of these are hyperlinks, 
images, buttons, and span elements
33:28 - Okay let's look at a real life example
33:31 - You've learned that headings are block elements
33:34 - They take up the full width 
available and includes a line break
33:39 - The paragraph element is also a block element,
33:42 - but what about this hyperlink?
33:45 - Let's take a closer look
33:47 - See the hyperlink element is inside the paragraph 
and there are no line braks in the result
33:55 - That's the two main display types in HTML
33:58 - Block and Inline
34:05 - Hello class! Let's talk about the class attribute
34:09 - In HTML you have the opportunity to 
group or classify elements together
34:15 - This is helpful if you want to apply the same 
action for all elements in a specific group
34:20 - Look at this group of people
34:22 - What if we want all the people 
with red shirts to start jumping
34:26 - Hey! Red shirts! Start jumping!
34:31 - In HTML we can use the class 
attribute to group elements
34:37 - For example if we want this group 
of elements to have a red background
34:40 - we add the class attribute 
with the value "my-group"
34:44 - Now these two paragraphs belong to the same class
34:48 - We can use CSS to select these 
elements with the class selector
34:53 - The syntax for the class selector 
is a dot followed by the class name
34:57 - In our example the class name is "my-group"
35:02 - As you can see the two paragraphs 
now have a red background
35:05 - By the way different elements 
can share the same class
35:09 - See now the heading element 
also has a red background
35:14 - because it has the same 
class as the two paragraphs
35:19 - HTML elements can also 
belong to more than one class
35:24 - Just remember to separate 
them with a space like this
35:28 - Now the heading element belongs to both 
the "my-group" class and the "main" class
35:34 - and we'll get the CSS styles from both classes
35:39 - Now class you know about class
35:43 - Goodbye class
35:49 - Hello again!
35:50 - Today let's learn about the HTML id attribute
35:55 - This specifies a unique id for an HTML element
36:01 - The id is a way to reach a 
specific element in a page
36:05 - Kind of like shouting a name in a crowd
36:07 - Hey Bill!
36:11 - And it's very versatile too
36:14 - It can be used as an identifier 
for HTML, CSS, and JavaScript
36:20 - Let's look at an example for each of these:
36:23 - In CSS to select an element with a specified id
36:30 - write a hashtag character and 
then the id of the element
36:34 - Just like that
36:37 - Now let's see how we can use it in HTML
36:40 - In HTML you can use the id as a bookmark
36:45 - Anyway HTML bookmarks are used to allow 
readers to jump to specific parts of a web page
36:51 - This is very handy if your 
web page is very very long
36:55 - Want to make your own bookmark?
36:57 - First insert the id attribute 
and then add a link to it
37:01 - When that link is clicked the page will 
scroll right to the section of the bookmark
37:07 - You can even jump to a bookmark from another page
37:11 - But remember how I said you 
could use this in JavaScript?
37:15 - Let's go over to that
37:17 - JavaScript can access an element with a 
specified id by using the getElementById method
37:25 - See?
37:26 - You can use the id attribute to 
manipulate text with JavaScript
37:31 - Want to learn more about JavaScript then 
head on over to the JavaScript tutorial
37:37 - Before we finish this lesson let's go 
over some rules for the HTML id attribute
37:42 - 1: The ID attribute can be 
used on any HTML element
37:48 - 2: The ID value is case sensitive
37:52 - 3: The ID value must contain at least one 
character and must never contain white spaces and
37:59 - 4: Each ID must be unique within the page
38:03 - Two elements cannot share the same id
38:06 - That's all I have for the id attribute
38:09 - Say goodbye Bill
38:10 - Bye-bye!
38:16 - Hello again
38:17 - Now we'll be learning about HTML iframes
38:21 - No they aren't the latest gadget from Apple
38:24 - Iframes are used to display 
a web page within a web page
38:28 - So it looks like this
38:30 - But how do you do this?
38:32 - Let's start with the iframe syntax
38:36 - An HTML iframe is defined with the 
 tag which looks just like that
38:43 - See that src? The src attribute specifies 
the URL, or source, of the inline frame page
38:53 - Next let's tackle the height and width
38:56 - Use these two attributes to 
specify the size of the frame
39:01 - The attribute values are specified in pixels by
39:04 - default but you can also put them 
in percentages if you so choose
39:10 - Alternatively you can use CSS to set 
the height and width of the frame
39:16 - By default an iframe has a border around it
39:19 - To remove the border, add the style attribute
39:22 - and use the CSS border property
39:25 - Which looks like this
39:27 - Also with CSS you can change the size 
style and color of the iframes border
39:34 - Did you know that an iframe can be 
used as the target frame for a link?
39:40 - To do so, the target attribute of the link 
must refer to the name attribute of the iframe.
39:47 - Just like this. Simple right?
39:51 - Right.
39:58 - Today's lesson: JavaScript
40:04 - It has the ability to make HTML pages 
far more dynamic and interactive
40:10 - Let's learn how
40:11 - We will begin with the  tag
40:14 - which is used to define a client side script
40:17 - Now the script element either 
contains scripting statements
40:21 - or it points to an external script 
file through the src attribute
40:27 - So what are the common uses for JavaScript?
40:31 - Dynamic changes of content
40:34 - Image manipulation and
40:36 - form validation
40:40 - To select an HTML element JavaScript usually 
uses the document.getElementById method
40:48 - In this example the p element has an 
id attribute with the value of "demo"
40:54 - The getElementById method finds the p element
40:58 - Then we use the innerHTML property to change the 
content of the p element to "Hello JavaScript!"
41:08 - You can also change the style of an HTML element
41:11 - like this
41:20 - Or even change HTML attributes like this
41:28 - That was a small taste of what 
you can do with JavaScript
41:31 - Let's move on to more HTML
41:37 - Let's take a look inside the head element
41:40 - The head element is a container for metadata
41:44 - In HTML metadata is data about the HTML document
41:49 - A lot of what goes on inside the head 
element is not directly shown on the page
41:54 - much like the thoughts in your own head
41:57 - The head element is placed between 
the  tag and the  tag
42:04 - Metadata typically define 
the document title, styles,
42:08 - scripts, character set and other meta information
42:15 - Let's take a closer look at the title element 
which defines the title of the document
42:20 - The title is displayed in the 
browser's title bar, or tab, like this
42:26 - It also provides a title for the 
page when it is added to favorites
42:31 - and it displays a title for the 
page in search engine results
42:35 - Other important things found 
in the head section are:
42:38 - Styles, or links to external stylesheets,
42:42 - important keywords for search engines
42:44 - character encoding information
42:46 - and other things that make sure that your
42:49 - page behaves as expected on 
different devices or screens
42:54 - Phew! That was a lot to remember
42:57 - If you want to learn more about the specific
43:00 - head elements go to our HTML 
head section on w3schools.com
43:09 - You've been handed plenty of 
forms throughout your life
43:12 - At the doctor's office
43:13 - at school
43:14 - for activities and programs
43:16 - If you want to sign up or join something
43:18 - you're usually going to have to fill out a form
43:21 - In today's age these forms are usually 
on websites and built with HTML
43:27 - An HTML form is used to collect user input
43:30 - The user input is then sent 
to a server for processing
43:35 - The HTML form element is used to create a form
43:39 - The form element is a container 
for different types of elements
43:44 - One of the most used elements 
inside a form is the input element
43:48 - The input element can be displayed in several 
different ways depending on its type attribute
43:54 - We have textfields, checkboxes, 
radio buttons, submit buttons , etc.
44:07 - Let's look at a real life example
44:09 -  defines a 
single line input field for text
44:15 - "My name is Bill"
44:17 -  displays a radio button
44:20 - It lets a user select one 
option from a number of choices
44:26 - "This one, the burger"
44:28 -  displays a checkbox
44:31 - It lets a user select many 
options from a number of choices
44:35 - "Check! Check! Check! Check!"
44:38 - "I'll have all of those on my juicy burger!"
44:42 - There are many more input types you can use
44:45 - Here's a quick list:
44:50 - In addition to the input element there are 
several other elements we can use in forms
44:55 - The select element defines a drop- down list
44:59 - It's a partially hidden list that drops down 
with a list of options that you can choose from
45:05 - "I'll pick this up at 5:00"
45:08 - The text area element defines 
a multi-line input field
45:12 - where the user can input text 
with more than just a few words
45:16 - Like a comment field
45:18 - "I would like my burger super well done!"
45:22 - Finally let's add a submit button
so Bill can send in his order
45:26 -  defines a submit button
45:30 - "I'm so hungry!"
45:32 - When submitting a form the user input is 
sent to a file on a server for processing
45:38 - To become a form expert take a deeper 
dive into forms at w3schools.com
45:50 - So Bill can finally get his burger
45:53 - "Oh no! Don't make me fill out that form again!"
45:57 - "Take 34. Action!"
46:01 - document.getElephantBidy
46:03 - "Cut!"
46:05 - "Take 35. Action!"
46:09 - document.getElementByMe
46:13 - "Cut!"
46:16 - "Take 36. Action!"
46:20 - document.getElementById
46:24 - Yes! I nailed it!
46:30 - "Take 37. Action!"
46:34 - You've learned that headings .....
46:39 - Hey! Red shirts! Start jumping!
46:46 - Stop!
46:47 - Stop it Bill! We've been over this!
46:53 - Images can improve the design and 
the appearance of your web page
46:57 - Especially if they are pictures of majestic things
47:07 - Very funny
47:09 - Reeeeal mature

Cleaned transcript:

Hello! So you want to learn how to make websites. In that case you need to learn HTML! So let's start at the very beginning. What exactly is HTML? And why do I need it? Let's break it down from the basics, and build our way up. HTML stands for HyperText Markup Language. It uses markup to describe the structure of web pages. The structure is built up by elements, and they are represented by tags! Tags label pieces of content such as "heading" "paragraph" "table" and so on. These tags aren't shown on the page, but are used to display content in different ways. That's a lot to digest! So let's go into it. First let's try it together. Don't worry about understanding, it'll all click as we work through it. We start by declaring that this is an HTML document. The is the root element of any HTML page. The contains meta information about the document. The element specifies a title for the document. The contains the visible page content. Finally, the defines a large heading, while defines a paragraph. With everything set in the order, let's go into the explanation of how tags work. Tags typically come in pairs. A start tag, and the end tag. The end tag is written just like the start tag, but with a forward slash inserted before the tag name. Here we've got the tag name and the forward slash tag name. And the contents of the element in between them. So if this was a paragraph, we'd use and some text in the middle. Let's play a game. See if we can correctly match start, and end tags, together. So what turns HTML code and elements into a viewable website? Well, that's where web browsers come in. The purpose of a web browser, be it Chrome, Firefox, Edge, or Safari, is to read HTML documents and display them. But, the browser does not display the HTML code. Instead, it uses it, to determine how to display the document. Let's see what kind of building blocks are hidden behind this webpage. This is a visualization of an HTML page structure. You can see the HTML, the head, with the page title below that, and then the body under that. And that's the basics. Let's delve into this further. When you're creating and modifying web pages you can use any professional HTML editor But when you're learning HTML you should start with a simple text editor like Notepad on PCs or Text edit on Macs it's better to start simple before jumping into the deep end. Here are 4 steps to create your first web page Step 1 open Notepad or Text edit In this video we will use notepad. Now it's time for step 2. Write some HTML. stretch your fingers and then either write or copy some HTML into notepad. Then comes step 3. Save your work as an HTML page. Look at you moving along so fast. To save it select file and then Save As. Name the file "index.html" and set the encoding to utf8 which is the preferred encoding for all HTML files HTML files can have .html or just .htm as file extension. And finally we reach Step 4. View the HTML page in a Browser. Open the saved HTML file in your favorite browser. The result should look like this. And just like that you've created your first HTML page. You should feel very proud. Now that we know how to create HTML Pages, let's see some coding in action. An HTML element usually consists of a start tag and an end tag, with the content inserted in between. The HTML element is everything from the start tag to the end tag. For example the HTML p element defines a paragraph. So if you want a paragraph on your page write the start tag add content inside and close it with the end tag. This is now a HTML p element, also known as a paragraph element. All HTML documents consist of nested HTML elements. Nested elements are elements within elements. For instance these two elements are nested within the body element, which in turn is nested within the HTML element. Let's take a closer look at the different elements First the HTML element defines the HTML document, it comes with a start tag and an end tag. Inside the HTML element we have the body element which defines the document body. It comes with a star tag and an end tag. The body element contains two other HTML elements The first one defines a heading, with the text "My First Heading". The second one defines a paragraph with the text "My first paragraph". Remember to always include the end tag, it might work without it but there's always a chance it will produce unexpected results or errors. However, some HTML elements do not have content they're called empty elements and do not have end tags. An example of this is the br element which is an element with no content. It just defines a line break. HTML tags are not case sensitive, both lowercase and uppercase works and means the same thing. However it is recommended to use lowercase tags. And with that said, we've covered the basics of HTML elements and how to use them To provide additional information about HTML elements you need to get familiar with attributes. Attributes can provide more details about an element. They're always specified in the start tag of an element and usually come in name / value pairs like this. One type of attribute is href like in this example. Links are defined with the tag and the link address, or URL, is specified in the href attribute. Another type of attribute is src. We call that Source, like in this example HTML images are defined with the tag and the image source, or URL, is defined by the src attribute. Images in HTML have a set of size attributes these correspond to the width and height of an image. For instance an image size with a width of 500 equates to 500 pixels wide. If you change the width to 300 the image will become smaller. The style attribute is used to specify the look or style of an element. This is called CSS and you'll learn about that in another chapter. For now you just need to know that CSS allows you to change colors, sizes, and set the layout of your page. The language of the document can be declared in the HTML tag with the lang attribute. This is important for screen readers and search engines. The title attribute specifies a title for an element. The value of this title is displayed as a tool tip when you move the mouse over the element. Double quotes around attribute values are the most common but single quotes can also be used, and sometimes you actually have to use both. For instance if an attribute value contains double quotes it is necessary to use single quotes around it or vice versa. So remember if you want to change something about an element you will probably need an attribute. Web pages are filled with a sea of words. If all the words look the same, your readers could get lost or worse bored. in order to spice up the page and keep readers engaged you should use HTML headings. HTML headings make titles and subtitles stand out in the sea of words on a web page. Here's what a page looks like without headings. Here's what it looks like with headings. You can see now why headings are a must. They appear bigger and with more space than normal paragraphs. There are six different heading levels. The levels range from h1 to h6 and each heading level has a rank. h1 is the largest and most important heading. h2 is the second and on and on to h6 which is the least important heading. Each HTML heading has a default size. You can change the size with the style attribute, using the CSS font size property. And to change the color of the heading you can use the CSS color property. Headings are important for many reasons. People often skim a page by its headings. This way they can go right to the information they need. Search engines use the headings to index the structure and content of your web pages. See the search result shows the heading from the page. If you want to engage your readers and get indexed properly be sure to use headings correctly. Now let's take a closer look at HTML paragraphs and how they are displayed. Paragraphs in HTML are defined by the p element. Here are three paragraphs. This is how they are written in the code, and this is how they are displayed on the page. You can see that the browser automatically adds some white space, also known as margin, before and after each paragraph. HTML can be a mystery. You can never be sure how HTML will be displayed. Screen sizes, as well as resized windows, will create different results. With HTML you cannot change the output by adding extra spaces or lines in the HTML code. In fact the browser will remove any extra spaces or line brakes when the page is displayed. If you want a line brake use the HTML br element. This brakes a line without starting an entirely new paragraph. While default HTML Pages can be quite dull, to add some color and personality to the page you need style. Setting the style of an HTML element can be done with the style attribute. The style attribute contains CSS properties and values. CSS is the language we use to style HTML. Let's set the background color of a page. The CSS backgroundcolor property defines the background color of an HTML element. To add a background color to this page we add style="backgroundcolor powderblue" to the body element Now the background color of this page is powder blue. Now let's change the color of the text. The CSS color property defines the text color of an HTML element. To add a text color to the heading we add style="colorblue" to the h1 element. Now the text color of the heading is blue. Then we add a red color to the paragraph. Now let's change the font of the text. The fontfamily property defines the font to be used for an HTML element. See? You can simply change it to Verdana and Courier. The fontsize property defines the text size for an HTML element. See? When the fontsize value changes, the size of the text changes accordingly. The textalign property defines the horizontal text alignment for an HTML element. To center a text we use textalign center So always make sure you add style to your work, save beige for pants. In an earlier chapter we went over the HTML style attribute But did you know HTML also has elements for defining text with a special meaning? Of course not. That's why you're watching this video! See these HTML elements? They correspond to formatting output like, bold, or italic text respectively. But it goes beyond bold or italics. There are many different ways to display special types of text. Let's start with the b and strong elements. b defines a bold text without any extra importance. strong defines strong text. This indicates important text and is usually displayed as bold in the browser. Next is the i and em elements. i defines italic text while em defines emphasized text. One important thing to to note is that browsers display strong as b and em as i But there's a difference in the meaning of these tags b and i defines bold and italic text but strong and em means that the text is important as well. Next comes small. It does exactly what you're thinking, makes text smaller. Then there's the mark element. This element defines marked or highlighted text. There are are also elements that define deleted and inserted text. Use the del element which defines deleted or removed text. Then there are subscripted text and superscripted text. sub is for subscripted and, sup is for superscripted, doesn't get much easier than that. Just to recap here are the different html text formatting elements and how they can change any text. Now we will learn about comments. Not the bottomless pit of YouTube comments but HTML comment tags which are used to insert comments in the HTML source code. You can add comments to your HTML source by using this syntax. Make sure to note that there is an exclamation point in the opening tag but not in the closing tag. Comments are not displayed in the browser, they're used to help document your HTML source code As you input comments you can use them to place notifications and reminders in your HTML See you next lesson Today's lesson will be perfect for you right brain thinkers. The topic HTML colors! HTML colors can be specified using color names, RGB or hex values. HTML supports 140 predefined color names Let's try to use color names in our HTML. First set the background color like this Then you can set the color of the text like this If you want to give your text a border insert the following code But you can be more detailed than just picking a color name. Using RGB or hex you have more than 16 million color possibilities. That means you can turn the color of this tomato from this to that! All you did was increase the amount of green. Now let's learn about RGB values. RGB stands for Red Green and Blue. Each parameter red, green, and blue defines the intensity of the color between zero and 255 So if you need a real reds red then set the red parameter to 255, and the other two colors to zero. But what about displaying black or white? To get black, all color parameters must be set to zero. Alternatively to get white all color parameters must be set to 255. By using different combinations of red, green, and blue, you have over 16 million color possibilities. And if you're trying to get gray use equal values of all three color sources. Now let's learn about hexadecimal color values or hex. The hex syntax starts with a hashtag followed by six characters. Just like the RGB color values, these characters represent red green and blue but now they are hex numbers and go from 00 to FF. So to get red set the value to the highest number which is FF and the other two to the lowest number 00. See? There is also an extension of RGB color values with an alpha channel, which specifies the opacity for a color. This is called RGBA. The alpha parameter is a number between 0.0 which is fully transparent and 1.0 which is not transparent at all. And there you are. Now go out and add color to your HTML world! Greetings once again! I would like this lesson to center on style. Specifically CSS Now CSS stands for cascading style sheets and it describes how HTML elements are displayed on a web page This has the ability to save many hours because it controls the layout of multiple web pages all at once There are three ways to add CSS to HTML elements First there's inline which is done by using the style attribute in HTML elements The second is internal which is completed by using a style element in the head section Lastly there's external which means using an external CSS file Let's take a look at the three options in action An inline CSS is used to apply a unique style to a single HTML element This is done by using the style attribute of an HTML element Just like this Here we set the text to "blue" Next is internal CSS, which is used to define a style for a single HTML page An internal CSS is defined in the head section of an HTML page within the style element Just like that And the last option is external CSS which is used to define the style for many HTML pages With external style sheets you can change the look of an entire website by changing only one file To use this option add a link to it in the head section of the HTML page An external stylesheet can be written in any text editor but the file must not contain any HTML code It also must be saved with a .css extension It should end up looking like this That was a short introduction to CSS but don't worry we'll cover more of the specifics later on Now today we're discussing something found in nearly all web pages Links They allow users to easily click their way from page to page To start let's discuss what HTML links are All HTML links are hyper links, they are clickable links that jump you to another document When you move the mouse over the link the mouse arrow will turn into a little hand Remember a link doesn't have to be a text it could be anything an image, a button or even me Now let's go into syntax. Now in HTML all links are defined with the tag like this The href attribute is like the road map it specifies the destination address of the link The link text is the visible part Clicking on the visible part then send you to the specified address Next we discuss local links The previous examples were using absolute URL, AKA a full web address A local link, AKA a link to the same website, is specified with a relative URL That means there's no www part like that By default a link will appear in one of three ways An unvisited link is underlined and blue A visited link is underlined and purple An active link is underlined and red But you can change the default colors by using CSS to learn more about that head to the CSS tutorial Next let's cover the target attribute. The target attribute specifies where to open the linked document It can have one of the following values "_blank" opens the linked document in in a new window or tab "_self" opens the linked document in the same window/tab as it was clicked, this is usually the default "_parent" opens the linked document in the parent frame "_top" opens the linked document in the full body of the window Lastly frame name opens the linked document in a named frame But what if you want to use images as links it's actually pretty common and should look like this As you can see we simply wrap the img element inside an a element You can add a title to a link using the title attribute The title attribute specifies extra information about an element The information is most often shown as a tool tip text when the mouse moves over the element Before we end class, let's do a quick chapter summary The a element is used to define a link The hrf attribute is used to define the link address The target attribute is used to define where to open the linked document Using the img element inside an a, will define an image as a link Greetings! Today's lesson Images Images can improve the design and the appearance of your web page Especially if they are pictures of majestic things See these? Well they actually look like this Let's take a look at what that means In HTML images are defined with the tag The image tag has no closing tag and is what we call an empty tag But it should contain attributes The src attribute specifies the URL or source of the image Next let's go over the alt attribute It provides an alternative text for an image This is helpful if the user cannot view the image because of slow connection, error in the src attribute , or the user has a screen reader The value of the alt attribute should describe the image. So if a browser cannot show the image it'll display the value of the alt attribute instead And the alt attribute is required for images in HTML A web page will not validate correctly without it Next, image sizes. When you start to deal with the image's width or height use the style attribute to specify it It should look like this Another way to handle this is to use the width and and height attributes Make sure to note that you should always specify the width and height of the image If they aren't specified the page might flicker while the image loads While the width height and style attributes are all valid in HTML5 we suggest using the style attribute Now moving back to the src attribute and finding the specific location of an image If not specified the browser expects to find the image in the same folder as the web page But it's common to store images in a subfolder To do so you must include the folder name in the src attribute Another way to store images is on image servers You can access the images from any web address in the world You can also use animated images No matter how you pronounce them HTML allows animated gifs and gifs like this But what if you want to use an image as a link? Just put the tag inside the tag like this To make an image float to the right or left of a text use the CSS float property. Like this Want to learn more? Float over to the CSS float tutorial Sorry I couldn't help myself But what if you wanted your image to be less functional and more aesthetic? Namely a background image to be precise To do that on an HTML element use the CSS property backgroundimage Which works like this. If you only want the background image on a paragraph specify the backgroundimage property on the P element This is covered in depth in the CSS background tutorial Now we've covered a lot in this chapter but here's one final tip Loading images takes time, and large images can slow down your page so use them carefully But some are worth it In this lesson you will learn how to create a table No I don't mean the kind that needs chairs I mean the kind that arranges their data into rows and columns like this So let's talk about the tools you need to build your tables You will use the HTML table element to define a table If you want to define table rows, use tr elements You'll need one tr element for each row Each row consists of one or more td elements, also known as table data These act as columns inside the table and define data for each table cell You can also add headings for each column by using the th element phew did you get all that? Let's do a quick recap Define a table with the table element Define rows with the tr elements Add headings with the th elements And add table data with td elements Those are the basic tools you need to build HTML tables By the way you should note the table headings are bold and centered by default and borders won't just appear automatically so if you want to border on your table you must specify it Here's how The CSS border property defines a border As you can see in the result this will display a table with double borders If you don't want that use the bordercollapse property to display a single table border If you want to add a little extra padding to the cells use the CSS padding property If you want to change the alignment of text within the cell use the CSS textalign property Now let's say you want a cell to span over many columns For that you have to use the colspan attribute It should be added directly to the table cell like this Just like you would have to use the rowspan attribute to make a cell span over many rows Well there you have it Now you know how to add tables to your website Happy building People make lists for all sorts of things Todo lists Grocery lists Bucket lists You can make lists in HTML as well There are two main types of lists in HTML Ordered lists and unordered lists Ordered lists have numerical or alphabetical markers while unordered lists have bullet markers Let's start by building an ordered list As you can see the tag represents the start and end of the ordered list and each list item is wrapped within tags The list items are marked with numbers by default To change the marker style use the CSS liststyletype property For instance you can use the upperalpha value to display ABC instead of 123 like this Or you could use the upperroman value to use Roman numerals like this What about the other kind of list with bullet markers That's an unordered list and is built pretty much the same way But it uses the tag to represent the start and end of the list Each list item is still wrapped within tags and of course you can use the CSS liststyletype property to change the markers here as well You can use circles, squares, or even no marker at all Now you know how to make lists in HTML Now you will learn about the two main display types in HTML Block and Inline As you've learned from the previous chapters, HTML elements behave in different ways Block elements start on a new line and take up the full width available, they stretch out to the left and right as far as they can Examples of these are headings, paragraphs, tables, and div elements Inline elements only take up as much space as necessary Examples of these are hyperlinks, images, buttons, and span elements Okay let's look at a real life example You've learned that headings are block elements They take up the full width available and includes a line break The paragraph element is also a block element, but what about this hyperlink? Let's take a closer look See the hyperlink element is inside the paragraph and there are no line braks in the result That's the two main display types in HTML Block and Inline Hello class! Let's talk about the class attribute In HTML you have the opportunity to group or classify elements together This is helpful if you want to apply the same action for all elements in a specific group Look at this group of people What if we want all the people with red shirts to start jumping Hey! Red shirts! Start jumping! In HTML we can use the class attribute to group elements For example if we want this group of elements to have a red background we add the class attribute with the value "mygroup" Now these two paragraphs belong to the same class We can use CSS to select these elements with the class selector The syntax for the class selector is a dot followed by the class name In our example the class name is "mygroup" As you can see the two paragraphs now have a red background By the way different elements can share the same class See now the heading element also has a red background because it has the same class as the two paragraphs HTML elements can also belong to more than one class Just remember to separate them with a space like this Now the heading element belongs to both the "mygroup" class and the "main" class and we'll get the CSS styles from both classes Now class you know about class Goodbye class Hello again! Today let's learn about the HTML id attribute This specifies a unique id for an HTML element The id is a way to reach a specific element in a page Kind of like shouting a name in a crowd Hey Bill! And it's very versatile too It can be used as an identifier for HTML, CSS, and JavaScript Let's look at an example for each of these In CSS to select an element with a specified id write a hashtag character and then the id of the element Just like that Now let's see how we can use it in HTML In HTML you can use the id as a bookmark Anyway HTML bookmarks are used to allow readers to jump to specific parts of a web page This is very handy if your web page is very very long Want to make your own bookmark? First insert the id attribute and then add a link to it When that link is clicked the page will scroll right to the section of the bookmark You can even jump to a bookmark from another page But remember how I said you could use this in JavaScript? Let's go over to that JavaScript can access an element with a specified id by using the getElementById method See? You can use the id attribute to manipulate text with JavaScript Want to learn more about JavaScript then head on over to the JavaScript tutorial Before we finish this lesson let's go over some rules for the HTML id attribute 1 The ID attribute can be used on any HTML element 2 The ID value is case sensitive 3 The ID value must contain at least one character and must never contain white spaces and 4 Each ID must be unique within the page Two elements cannot share the same id That's all I have for the id attribute Say goodbye Bill Byebye! Hello again Now we'll be learning about HTML iframes No they aren't the latest gadget from Apple Iframes are used to display a web page within a web page So it looks like this But how do you do this? Let's start with the iframe syntax An HTML iframe is defined with the tag which looks just like that See that src? The src attribute specifies the URL, or source, of the inline frame page Next let's tackle the height and width Use these two attributes to specify the size of the frame The attribute values are specified in pixels by default but you can also put them in percentages if you so choose Alternatively you can use CSS to set the height and width of the frame By default an iframe has a border around it To remove the border, add the style attribute and use the CSS border property Which looks like this Also with CSS you can change the size style and color of the iframes border Did you know that an iframe can be used as the target frame for a link? To do so, the target attribute of the link must refer to the name attribute of the iframe. Just like this. Simple right? Right. Today's lesson JavaScript It has the ability to make HTML pages far more dynamic and interactive Let's learn how We will begin with the tag which is used to define a client side script Now the script element either contains scripting statements or it points to an external script file through the src attribute So what are the common uses for JavaScript? Dynamic changes of content Image manipulation and form validation To select an HTML element JavaScript usually uses the document.getElementById method In this example the p element has an id attribute with the value of "demo" The getElementById method finds the p element Then we use the innerHTML property to change the content of the p element to "Hello JavaScript!" You can also change the style of an HTML element like this Or even change HTML attributes like this That was a small taste of what you can do with JavaScript Let's move on to more HTML Let's take a look inside the head element The head element is a container for metadata In HTML metadata is data about the HTML document A lot of what goes on inside the head element is not directly shown on the page much like the thoughts in your own head The head element is placed between the tag and the tag Metadata typically define the document title, styles, scripts, character set and other meta information Let's take a closer look at the title element which defines the title of the document The title is displayed in the browser's title bar, or tab, like this It also provides a title for the page when it is added to favorites and it displays a title for the page in search engine results Other important things found in the head section are Styles, or links to external stylesheets, important keywords for search engines character encoding information and other things that make sure that your page behaves as expected on different devices or screens Phew! That was a lot to remember If you want to learn more about the specific head elements go to our HTML head section on w3schools.com You've been handed plenty of forms throughout your life At the doctor's office at school for activities and programs If you want to sign up or join something you're usually going to have to fill out a form In today's age these forms are usually on websites and built with HTML An HTML form is used to collect user input The user input is then sent to a server for processing The HTML form element is used to create a form The form element is a container for different types of elements One of the most used elements inside a form is the input element The input element can be displayed in several different ways depending on its type attribute We have textfields, checkboxes, radio buttons, submit buttons , etc. Let's look at a real life example defines a single line input field for text "My name is Bill" displays a radio button It lets a user select one option from a number of choices "This one, the burger" displays a checkbox It lets a user select many options from a number of choices "Check! Check! Check! Check!" "I'll have all of those on my juicy burger!" There are many more input types you can use Here's a quick list In addition to the input element there are several other elements we can use in forms The select element defines a drop down list It's a partially hidden list that drops down with a list of options that you can choose from "I'll pick this up at 500" The text area element defines a multiline input field where the user can input text with more than just a few words Like a comment field "I would like my burger super well done!" Finally let's add a submit button so Bill can send in his order defines a submit button "I'm so hungry!" When submitting a form the user input is sent to a file on a server for processing To become a form expert take a deeper dive into forms at w3schools.com So Bill can finally get his burger "Oh no! Don't make me fill out that form again!" "Take 34. Action!" document.getElephantBidy "Cut!" "Take 35. Action!" document.getElementByMe "Cut!" "Take 36. Action!" document.getElementById Yes! I nailed it! "Take 37. Action!" You've learned that headings ..... Hey! Red shirts! Start jumping! Stop! Stop it Bill! We've been over this! Images can improve the design and the appearance of your web page Especially if they are pictures of majestic things Very funny Reeeeal mature
