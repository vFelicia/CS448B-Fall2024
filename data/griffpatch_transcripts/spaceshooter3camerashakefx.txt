00:00 - [Music]
00:01 - hello fellow scratchers
00:03 - yes we are back for another fruity
00:05 - episode of lemonoid invasion
00:07 - i can't tell you how excited i got
00:09 - putting this particular tutorial
00:11 - together because well
00:12 - this one is all about special effects
00:14 - and game polish yes
00:16 - finally by the end of the episode we
00:18 - will have put together all the action
00:19 - you are seeing right here
00:21 - all the sounds all the flashes pops and
00:23 - lighting and of course
00:25 - the awesome camera shake oh man this is
00:27 - going to be fun
00:28 - are you ready so let's get juicing
00:33 - so here we are at the end of episode 2.
00:36 - oh wow it suddenly feels rather bland
00:39 - doesn't it
00:40 - the first thing i notice is how easy it
00:42 - is to break up these large lemons
00:44 - you'd expect it to take a little more
00:46 - firepower right
00:47 - we can address this by giving each lemon
00:50 - its own health level
00:51 - click into the lemon sprite and make a
00:53 - new variable named
00:55 - health for this sprite only yeah each
00:58 - lemon has its own health
01:00 - now just before we create a new clone
01:03 - set the health to 15.
01:05 - i'm intending that we have to shoot a
01:06 - lemon around 15 times before it splits
01:10 - find the define enemy hit script
01:14 - this runs whenever a lemon is hit by a
01:16 - laser
01:17 - we need to check how much health this
01:19 - lemon has
01:20 - so check if health is greater than zero
01:28 - if it is then we change health by minus
01:32 - one that's negative one
01:34 - this is a typical pattern if the lemon
01:36 - has health then we now take some away
01:39 - if it's hit enough it will have no
01:41 - health left
01:42 - but in the meantime what else do we want
01:44 - the hit lemon to do
01:46 - we want to show that the lemon was
01:47 - damaged this is often done in computer
01:49 - games by
01:50 - flashing the impacted object white just
01:53 - for a moment
01:55 - we can do the same by setting the
01:56 - sprite's brightness effect
01:59 - to 100 great that's all for now so drop
02:02 - in a stop this script otherwise the
02:05 - lemon will split right now
02:07 - and we don't want that yet okay let's
02:09 - give that a test
02:11 - here comes the first lemon if i shoot it
02:15 - yes the brightness effect is working
02:17 - lemon turns
02:18 - perfectly white but yeah we will have to
02:21 - tell them to go back to normal as we
02:22 - don't want them to stay this way
02:25 - we'll sort that out in a moment though
02:27 - after shooting a lemon 15 times it
02:29 - finally splits and then a single shot is
02:31 - all it takes to destroy the smaller
02:33 - lemons
02:34 - what i realized we are missing though is
02:36 - the sounds of those dramatic impacts to
02:38 - match up to the visuals
02:39 - do you still have the all audio sprite
02:42 - in your project from last time
02:44 - click in there and we'll look at the
02:45 - sounds okay
02:47 - these three explosions are what we are
02:50 - after
02:50 - copy all three into the lemon sprite
02:57 - if we have a quick listen explosion six
03:00 - is a small fuzzy boom explosion 2 is a
03:04 - softened version of that same sound it's
03:05 - made a little shorter
03:08 - an explosion 18 is a big boom
03:12 - cool click back into the lemon sprite
03:15 - and we'll start with the big lemon being
03:17 - shot
03:18 - but not destroyed and we'll want the
03:20 - short impact sound
03:22 - start sound explosion 2 just when we
03:26 - change health by -1
03:28 - okay we can test that yeah
03:32 - nice oh let's sort out those white
03:35 - lemons
03:36 - they don't want to stay white forever
03:37 - right the simplest way to stop this
03:39 - is to come back to when i start as a
03:41 - clone script
03:42 - and set the lemon's brightness to zero
03:45 - right at the top of the forever loop
03:47 - a brightness of zero resets it to its
03:49 - normal base level
03:51 - and setting it at the start of the
03:52 - repeat loop ensures each frame begins
03:55 - with no
03:56 - white lemons that is until they're hit
03:58 - by a laser testing again
04:03 - oh yes lemontastic i like those flashes
04:07 - [Music]
04:09 - how about those other explosion sounds
04:10 - then we have the big explosion and the
04:13 - smaller explosion sounds
04:15 - find the define enemy hit script again
04:19 - to tell the difference between a large
04:20 - and a small lemon
04:22 - we'll use an if else block and check for
04:24 - a size being greater than
04:26 - 250. our first lemon is size 300 after
04:29 - all
04:30 - so a big lemon has a size greater than
04:33 - 250
04:34 - so start the explosion 18 sound
04:37 - the small lemons can just start sound
04:40 - explosion 6.
04:42 - oh and since we know what size of lemon
04:45 - we just destroyed
04:46 - why not set health to four here so that
04:49 - we need to shoot the next largest lemons
04:51 - four times more to get their health down
04:53 - too
04:54 - that should work well it's because we
04:56 - don't give the split lemons any extra
04:59 - health
04:59 - that they otherwise only take a single
05:01 - shot to destroy now
05:04 - yeah coming along nicely but
05:07 - there's still not enough visual feedback
05:09 - from all this firepower
05:10 - we need particles explosions or
05:12 - something
05:13 - what i'm going to add is a small bright
05:16 - light flash
05:17 - white explosions if you will as these
05:20 - can look
05:20 - awesome in space games and are quite
05:22 - easy to draw in scratch
05:24 - now we could add the explosion costume
05:27 - to the lemon sprite and switch to it
05:29 - when it explodes
05:30 - but that would cause us trouble the
05:32 - reason is that the large explosion would
05:34 - then still count as a lemon sprite
05:36 - and all our lasers would continue to
05:38 - bump into it that would not be very
05:40 - professional looking
05:41 - so we'd be better making the explosions
05:43 - in a new sprite
05:45 - create a new sprite and name it boom
05:49 - do you like the name right let's get
05:52 - arty we're going to start by drawing a
05:54 - filled circle with a width and height of
05:56 - around 50 pixels
05:58 - now to do this i zoom in and start at
06:01 - the middle point
06:02 - count diagonally left and up by six grid
06:06 - squares then click and drag with the
06:08 - shift key held down
06:10 - remember that that makes a perfect
06:11 - circle and finish with my mouse six
06:14 - diagonal squares down and to the right
06:16 - of the middle
06:17 - if you check your size that should be
06:19 - around 50 pixels
06:21 - oh nice spot on now with the selection
06:24 - tool
06:25 - drag and snap the circle to the center
06:27 - of the drawing canvas
06:29 - brilliant i just need to change the fill
06:31 - color to white
06:32 - and its outlined too transparent
06:35 - that already looks quite cool on the
06:37 - stage but you wait
06:39 - till we add a light haze around it
06:42 - hold down the alt key and drag the
06:44 - previous circle
06:45 - to create a copy now snap it back to the
06:48 - center over the first circle
06:50 - and then holding down the alt key again
06:53 - drag the corner
06:54 - outwards to around double its current
06:56 - size
06:57 - i want a sprite size of around 110 from
07:00 - this
07:01 - okay this is the fun bit click into the
07:04 - fill color
07:05 - and switch to the circular gradient
07:07 - pattern
07:08 - we want to keep the center white which
07:10 - it already is
07:12 - so click the right hand black color swab
07:14 - and we can switch it to
07:16 - transparent yeah now the circle fades
07:20 - off to nothing at the edges
07:21 - we don't see the effect on the stage
07:23 - until we close the colour chooser
07:25 - oh yeah look at that cool that's
07:28 - beautiful
07:29 - we are going to have fun with this let's
07:31 - name the costume
07:32 - flash that will do for the smaller
07:34 - explosions
07:35 - but we need another more dramatic one
07:37 - too for the big lemon
07:39 - duplicate the flash costume and name
07:42 - this one
07:42 - god raise we are going to draw some
07:47 - big rectangles so select the rectangle
07:49 - tool and then we must remember to click
07:51 - into the fill color and switch back to a
07:53 - solid white fill
07:55 - now zoom right out as far as you can
07:58 - until you see the full canvas
08:00 - and beyond we need these god rays to be
08:02 - really
08:03 - long so start drawing at the far left
08:06 - and we finish over on the far right
08:09 - height wise it's
08:10 - roughly as tall as the original outer
08:13 - circle perhaps
08:14 - now using the shaping tool i can pull in
08:17 - one side
08:18 - to make it nice and narrow now these
08:21 - rays
08:21 - want to radiate out from the middle of
08:23 - the ball of light
08:25 - so drag it so the smaller end is right
08:27 - in the middle here like this
08:29 - next we will make another light ray by
08:31 - holding alt and dragging the first one
08:34 - rotate it and then position again with
08:37 - its pointed end at the middle of the
08:38 - light bulb
08:40 - do this a few more times making some
08:42 - thinner than others
08:43 - works well and hey presto one
08:47 - rather gorgeous light bulb explosion
08:48 - effect complete with god rays
08:51 - we now have an awesome sprite so we just
08:55 - need a way to make them appear
08:56 - where they are needed if you remember
08:59 - our laser sprite
09:00 - we were able to create a clone of the
09:02 - laser from
09:03 - the player's script
09:08 - could we do the same here create an
09:10 - explosion from the lemon perhaps
09:12 - that would be nice but sadly the clone
09:15 - would not be positioned
09:16 - at the lemon and neither would it know
09:18 - which lemon created it
09:21 - now we could store the position of the
09:22 - exploded lemon in a for all sprite
09:24 - variable then the new clone could take
09:27 - that position from that
09:29 - but that would limit us to one explosion
09:31 - at once
09:32 - and we may need more than one that
09:35 - points us to a better solution of using
09:37 - a for all sprites list
09:39 - we can then make a record of as many
09:41 - explosions as we want to be generated
09:44 - let's do that make a new list naming it
09:48 - bang tick for all sprites start by
09:51 - hiding the sprite
09:52 - by clicking the hide button and i'm
09:54 - going to add a simple script to allow us
09:56 - to test the explosion scripts as we work
09:59 - i want to clone a new boom sprite at the
10:03 - mouse position
10:04 - when i press t so when the t key is
10:07 - pressed
10:08 - that's a t for test of course start by
10:10 - adding one
10:11 - to the bang list this says our new clone
10:14 - will use costume one
10:16 - at least it will then we add the
10:18 - position of the clone
10:20 - so add mouse x and then add mouse
10:23 - y there we don't need to run the project
10:26 - to test this
10:27 - just position the mouse on the stage and
10:29 - press the t key
10:32 - see how the bang list now contains the
10:34 - costume and position of the mouse
10:36 - as the first three items in the list i
10:39 - can move the mouse
10:41 - and again press t and now i have a
10:43 - second set of three items
10:45 - added to the list two a costume number
10:47 - followed by an x and a y
10:48 - position good this repeats for as many
10:52 - explosion sprites as we need to clone
10:55 - now we just need to write the scripts to
10:57 - actually create the explosion clones
10:59 - from this list
11:00 - we'll begin as normal with a when green
11:02 - flag clicked hat block
11:04 - next keep things tidy by officially
11:07 - hiding the initial sprite
11:09 - you can also delete all from the bang
11:11 - list just in case it has stuff in it you
11:13 - never know
11:14 - and erroneous data can cause unexplained
11:16 - bugs later on
11:18 - so now down to business add a forever
11:22 - loop
11:22 - we're going to be looping around waiting
11:24 - for something to be added to the bang
11:26 - list
11:27 - so if the length of bang is greater than
11:30 - zero
11:31 - we will do something right
11:34 - we need to consider the first three
11:36 - items of the bang list
11:38 - the first item is the costume so switch
11:41 - the costume
11:42 - to item 1 of bang next up
11:45 - the x and the y positions so set x
11:48 - to item 2 of bang
11:52 - and set y position to can you guess yeah
11:55 - item three of bang i think that makes a
11:58 - lot of sense
12:00 - having read in these top three rows we
12:02 - should now delete them from the list
12:04 - otherwise we'd end up cloning even more
12:07 - explosions at the same position
12:09 - to do this we just delete item one three
12:12 - times in a row
12:13 - i know that doesn't sound right at first
12:15 - glance but once you realize that
12:17 - deleting item one
12:18 - causes the rest of the items in the list
12:20 - to shuffle up a row
12:22 - then you can see that deleting item one
12:24 - again makes sense
12:25 - and we can do this three times to remove
12:27 - the top three items
12:29 - cool now create the clone of myself to
12:33 - start off a new boom sprite clone
12:36 - with the costume and position we have
12:38 - just set
12:40 - if there are more items in the bang list
12:42 - then this loop will go around again and
12:44 - create another clone
12:46 - we can almost test this but we must make
12:49 - the new clone visible first
12:51 - when i start as a clone show
12:55 - now i want to test this but i won't run
12:58 - the project
12:59 - i'll just click this green flag script
13:01 - with my mouse to start it off
13:03 - so with my mouse over the stage i press
13:06 - t
13:07 - and yeah we've cloned a beautiful light
13:10 - bloom
13:10 - as i repeat this action you'll note that
13:13 - each successive bloom
13:14 - is getting lighter now that's odd why is
13:17 - that
13:18 - well this is the same issue we saw
13:20 - before when we have a key press event
13:22 - trigger
13:23 - on a sprite that has clones all the
13:25 - light bloom clones on the screen
13:27 - are adding explosions to the bang list
13:29 - when i press the t
13:31 - not to worry though as this was just a
13:33 - test key press and it won't be like this
13:35 - in the real game our next job is to get
13:37 - the explosions to fade out
13:39 - after being created start by pointing it
13:42 - in a random direction
13:43 - between -180 and 180
13:47 - this will be more useful later on though
13:51 - now we can use a weight 0 to ensure
13:54 - we see the sprite before we start to
13:57 - animate it
13:58 - make a quick fade using a repeat for
14:05 - and change ghost effect by 25
14:11 - after this the sprite will be completely
14:13 - invisible since 425s is 100.
14:16 - so we finish by deleting this clone
14:19 - i'll test again by carefully clicking
14:22 - the green flag hat script
14:24 - tapping the t key now flashes up the
14:26 - light effect
14:27 - and they do quickly fade away that's
14:30 - perfect
14:31 - almost like little popping fireworks
14:33 - that's going to look great in game
14:36 - so how about costume 2 the god rays
14:39 - we can switch to testing these by
14:41 - updating the when t key press script
14:43 - and setting the first item to a 2
14:46 - for costume 2. click the green flag
14:49 - script
14:50 - again and let's see what the tiki does
14:52 - now
14:53 - well that's as expected the god rays do
14:56 - look good
14:57 - but we can do better on a side note
15:00 - you can see why we pointed in a random
15:03 - direction now
15:04 - as it makes each god ray appear to look
15:06 - a bit different
15:07 - okay to improve the god rays we want
15:10 - them to stay
15:11 - on screen a bit longer and perhaps to
15:13 - have a bit of a rotation effect
15:16 - since this is only for the god rays that
15:19 - is costume 2
15:20 - add in an if after the initial weight
15:22 - zero
15:25 - and check whether costume number equals
15:27 - two
15:33 - repeat an extra four times now i think
15:39 - this time just turning right by one
15:41 - degree
15:42 - no fade out yet
15:46 - then in the second original repeat also
15:49 - add a turn by one to continue the effect
15:51 - let's test that again by clicking the
15:53 - green flag script here
15:55 - now press t oh yeah look at that
15:58 - that slow rotation really makes this
16:00 - effect stand out
16:02 - nice let's get this in game
16:06 - delete the testing script as we've done
16:07 - with that
16:10 - and click into the lemon sprite
16:17 - here's the define enemy hit script and
16:20 - we
16:21 - should be creating our boom sprites
16:23 - right here as we play the sounds
16:25 - so we need to add three rows to the bang
16:28 - list to create a clone right
16:30 - we'll start with the big lemon god rays
16:33 - set a costume number of two
16:35 - and then the position of the lemon to be
16:37 - exploded that is its x position
16:40 - and y position you can duplicate that
16:43 - and put the first stack here in the if
16:46 - and the other stack within the else
16:49 - since the else is for small explosions
16:51 - switch it to create a costume one
16:54 - explosion
16:55 - before we test this i spot that we can
16:58 - make an optimization
17:00 - see that both the if and the else end by
17:03 - adding the same two items to the boom
17:05 - list
17:06 - we can therefore remove these two lines
17:08 - from each if-else branch
17:10 - and place just one copy below instead
17:14 - that will do just the same thing in less
17:16 - blocks
17:18 - okay i am excited to give this a go
17:21 - let's run the project for real by
17:23 - smashing that green flag
17:25 - and we are off yes it's working the
17:29 - initial boom of the first lemon is
17:31 - really cool and then as we clean up all
17:34 - the smaller lemons
17:35 - we get these very satisfying pots
17:38 - so good now there's just
17:42 - one thing missing that would really just
17:45 - bring the whole
17:46 - thing together and what's that camera
17:49 - shake we've all seen it and perhaps it's
17:52 - overused in games
17:54 - no we really want it yeah so what's the
17:58 - theory behind this
17:59 - well imagine the shock of the blast from
18:01 - the exploding lemon
18:02 - is so great that it actually knocks and
18:05 - shakes the entire screen itself
18:07 - funnily enough this is much easier to do
18:10 - if your game is already a scrolling game
18:13 - because then we already have an easy way
18:15 - to move the entire screen around
18:17 - but in a game such as this we don't have
18:20 - that yet
18:21 - so let's try and work with what we've
18:23 - got
18:24 - we'll start by adding an event to
18:26 - trigger this motion
18:28 - broadcast a new message when the large
18:31 - lemon is destroyed
18:32 - here and name it shake
18:36 - now we'll start coding this in the
18:38 - player sprite
18:40 - we need to be able to move everything on
18:41 - the screen by the same amount
18:43 - to simulate a shake create a new
18:46 - variable naming it
18:47 - shake dx for all sprites this is the
18:50 - amount each sprite is to move
18:52 - in the x direction and of course we need
18:54 - a matching shake
18:55 - d y too again for all sprites
19:00 - set them both to zero after the green
19:02 - flag is clicked
19:04 - so like i said everything wants to move
19:06 - by this amount
19:07 - each frame of the game so find where we
19:10 - are moving this player sprite
19:11 - here in the move x and move y custom
19:14 - block scripts
19:15 - and add shake dx to speed x
19:21 - and shake d y to speed y
19:28 - nice okay we need to do the same
19:32 - for every sprite so click into the laser
19:34 - sprite next
19:36 - so where do we move this one yeah here
19:40 - add in a new change x and change y
19:45 - and just change them by shake dx and
19:47 - shake dy2
19:48 - that should do it next up is the lemon
19:52 - sprite
19:53 - okay um yes this movement scripts are
19:57 - here
19:57 - under the when i start as a clone we do
20:00 - exactly the same thing again
20:01 - change x by shake dx change y by shake
20:04 - dy
20:05 - super we can give that a test click the
20:08 - green flag
20:09 - now to see the shake valuables in action
20:11 - we can double click the shape
20:13 - dui reporter twice to change it to a
20:15 - slider
20:16 - this only works when not in full screen
20:19 - and now if i drag the slider around
20:21 - whoops everything just raises up the
20:23 - screen wow
20:25 - that was quicker than i expected and of
20:26 - course if we do the same for shake dx
20:29 - then everything rushes over to the right
20:32 - so where does that leave us i guess if
20:35 - we were to wiggle
20:37 - the shake dx and shake d y sliders left
20:39 - and right quickly we could imagine the
20:40 - screen would look to be shaking around
20:42 - right
20:43 - and yes indeed that is exactly what
20:45 - we're going to do
20:46 - the trick is being able to move it in a
20:48 - way that keeps things centered on the
20:50 - screen
20:51 - and looks like a nice impactful shake
20:54 - click back into the player sprite and in
20:56 - some free space
20:57 - pop in a when i receive shake
21:01 - so first we must decide on the initial
21:04 - direction
21:05 - of our shake i feel the shake should be
21:08 - away from the lemon we shot
21:10 - that should be roughly in the opposite
21:12 - direction to how our ship is facing
21:14 - if we were just shooting at the lemon so
21:16 - using those clever maths operators sine
21:19 - and cos again
21:20 - we covered that in the last episode set
21:23 - shake
21:23 - dx to the sine of our sprites direction
21:26 - and
21:26 - set d y to the cos of our direction
21:31 - now that will be a shake speed of just
21:34 - one pixel
21:35 - and towards the lemon that's really slow
21:38 - and in the wrong direction we should
21:41 - multiply it by a large
21:42 - negative number to fix that in fact
21:45 - we'll make a new custom block
21:46 - for just that name it shake and add
21:50 - two numeric inputs the x and d y
21:54 - that is how much we're going to multiply
21:55 - shape by
21:57 - note here we are not ticking the run
22:00 - without screen refresh block that's
22:02 - right
22:02 - don't tick it you'll see why soon
22:07 - set shake dx to itself that is shake dx
22:12 - multiplied by the new input dx
22:20 - and set check d y to shake d y
22:22 - multiplied by
22:24 - the input d y now the thing about
22:27 - our shake is we want it to take some
22:30 - time to occur
22:31 - but since we've only updated a variable
22:33 - in here this won't happen by itself
22:35 - we therefore add in a weight zero here
22:38 - to force a screen update before
22:40 - continuing that gives everything time to
22:43 - shift on the screen
22:44 - it's also why we didn't tick the run
22:46 - without screen refresh
22:47 - as that wouldn't allow us to do the
22:49 - weight in here
22:51 - and now i'm going to wait zero again
22:55 - why so that everything on screen will
22:57 - move by the same amount of shake dx and
22:59 - shake dy
23:00 - again that makes for a much more
23:02 - authentic shake as it amplifies the back
23:05 - and forward motion
23:06 - over two frames beautifully
23:09 - great so we said we wanted to multiply
23:11 - shake dx and dy by a large negative
23:14 - number
23:15 - let's do that now using our new custom
23:17 - shape block
23:18 - multiplying by minus 16 in both the x
23:21 - and y directions
23:23 - 16 pixels is a nice strong shake that
23:26 - will shake everything on screen
23:27 - by this much to about here
23:31 - now each time we shake we want to move
23:34 - in the opposite
23:35 - direction so the next shake wants to
23:37 - take us back through to the opposite
23:39 - side of where we just came from
23:41 - that would require us to move almost
23:43 - twice as far as the last time
23:46 - and again in a negative direction to
23:48 - achieve that we would multiply the
23:50 - original shake by
23:51 - just less than minus two i'm going to
23:54 - pick
23:55 - minus 1.8 for the x and y
23:58 - we use just less than two so that the
24:00 - shake will slowly get
24:02 - less over time okay so the shake has
24:05 - really begun now
24:06 - so we can create a repeat loop to
24:08 - continue the action back and forth
24:11 - repeat say 16 times should do and use a
24:14 - shake block again
24:16 - how much well now the shake is in full
24:18 - motion from side to side
24:20 - we want to multiply by just less than
24:23 - one
24:23 - a negative one that is to ensure the
24:25 - shake keeps decreasing
24:27 - but flips from left to right we'll use a
24:30 - random number
24:31 - pick random minus 0.5 to minus 0.8
24:36 - and the same for the second input too
24:41 - finally to clean up add a shake 0 0
24:44 - at the end to stop any further movement
24:47 - this is important as otherwise our whole
24:49 - game may slowly drift out of sight
24:52 - right let's spin it up and give it a
24:55 - final
24:56 - [Music]
24:58 - test
25:00 - this lemon oh this is great you dare to
25:03 - invade our galaxy not on my watch
25:06 - this shake just looks awesome and blends
25:09 - perfectly with all the other effects
25:10 - we've added too
25:14 - boom i shall single-handedly put a stop
25:17 - to this
25:17 - oh man so obviously you may have noticed
25:21 - i can't actually die yet in this game
25:23 - but i can tell you things are getting
25:25 - rather out of hand
25:26 - very quickly
25:30 - what i would suggest is we make the
25:32 - lemons begin spawning a lot slower than
25:34 - they are
25:35 - click into the lemon sprite and if you
25:36 - remember we can set the delay between
25:38 - lemons here
25:40 - in the green flag script set it to
25:42 - something like
25:43 - five seconds and the original pause
25:46 - before the first lemon appears
25:48 - that can now be two seconds and this
25:52 - this is it we have caught up with the
25:54 - game as i originally designed
25:56 - it for you in the first episode we have
25:58 - created lemonoids
26:00 - okay so it's by no means a finished game
26:03 - but
26:04 - i wanted it to be more of a catalyst to
26:06 - give you ideas of games you could make
26:08 - for yourselves
26:10 - there's so much left you could add not
26:12 - least a simple way for your player to
26:14 - end the game
26:15 - either by winning or more likely
26:17 - fighting until you were overcome by
26:19 - lemons
26:20 - now i may well be tempted to make a
26:22 - follow-up video to answer outstanding
26:24 - questions posed by my fellow scratchers
26:26 - so go to town make something amazing
26:29 - with what we've covered in these three
26:30 - episodes
26:31 - and then bring your questions and ideas
26:33 - back here in the comments
26:34 - and i'll try to pull it all together in
26:36 - a fresh new video for you all
26:38 - and that brings us to the end of this
26:40 - video if you've enjoyed it then please
26:42 - smash the like button
26:43 - and do please click to subscribe to the
26:45 - channel if you can
26:46 - that helps me a lot and i really do need
26:49 - your support
26:50 - making these videos takes a lot of time
26:51 - and effort and that's why i also opened
26:54 - up the channel membership
26:55 - supporting me financially will allow me
26:57 - to continue to create more great content
26:59 - for you and also
27:00 - you get some cool extra perks yep you
27:03 - can get early access to videos before
27:05 - everyone else priority access to me in
27:07 - the comments and well
27:08 - the projects themselves if you wish if
27:10 - you're an educator or parent then it's a
27:12 - super deal
27:13 - so please check that out right until
27:15 - next time though
27:16 - have a great week ahead and don't let
27:18 - the lemons bite
27:20 - scratch on guys