00:02 - hello fellow scratchers i'm griff patch
00:05 - and today wow today we are going to be
00:07 - doing some quite revolutionary scratch
00:09 - coding this is episode 17 of the tile
00:12 - scrolling platformer series but some of
00:14 - the ideas we'll be using today have
00:16 - possibly not been seen before
00:18 - maybe they have but well let me know
00:20 - because we are adding the green koopa
00:22 - troopers and getting their shells to
00:24 - collide with other enemy clones well i
00:27 - hope you've got your brains all fluffed
00:29 - up and ready to absorb i am so excited
00:33 - let's get scratching
00:36 - hopefully you caught episode 16 where we
00:38 - introduced the piranha plant if so
00:40 - you've probably got a good sense of how
00:42 - we're going to begin adding coopers
00:45 - click into the enemy sprite checking out
00:47 - the costumes we can see cooper is
00:49 - sitting here at costume 5 yeah 5 and 6.
00:52 - we'll need these numbers later but our
00:54 - first job is to copy the first cooper
00:56 - costume into the tile sprite this will
00:59 - allow us to place it in the level editor
01:01 - okay cool cooper has a tile number of
01:05 - 69.
01:07 - now often we need to tweak the position
01:09 - of the costume in the editor to make it
01:11 - display in a sensible position
01:13 - if we zoom right out select the entire
01:15 - costume by pressing ctrl a or just drag
01:18 - a box around it and then press the up
01:21 - arrow key four times that should do it
01:25 - there that's the costume done now we
01:27 - need to map an editor key to it
01:30 - click into the editor sprite and bring
01:32 - up the tile key map list
01:35 - remembering cooper is tile costume 69 we
01:38 - can scroll right down and enter a 9 at
01:41 - item 69
01:43 - yeah all the enemy tiles are being
01:45 - mapped to the number key 9 and koopa is
01:47 - no different
01:49 - do remember to click out to another list
01:51 - row to ensure scratch saves your last
01:53 - edit
01:54 - okay hide the list
01:56 - last step before we can test is to go
01:59 - into the enemy sprite and find the
02:01 - define spawn type custom block
02:04 - each enemy tile is spawned from here so
02:07 - duplicate one of these if blocks
02:10 - and check for a tile type of 69
02:14 - we can give this sprite a unique name
02:16 - cooper will do
02:18 - what was our enemy costume number
02:20 - five
02:21 - okay enter a costume of five
02:25 - and then for the size
02:27 - width is still 16 and height that's 24
02:31 - taller than the gumba but shorter than a
02:33 - piranha plant
02:35 - super that's the minimum we need to do
02:37 - to get the enemy to appear in the game
02:39 - so let's run the project
02:41 - right level editor with zero key and
02:44 - then press nine until we find koopa
02:47 - there they are excellent i'm going to
02:49 - pop one right up here no reason why i'm
02:52 - always glad to see the enemy appear
02:53 - though when i click the button
02:56 - and if i start the game by pressing zero
03:00 - there they remain in place this is great
03:03 - news the default action of an enemy is
03:05 - to stay still and turn to face the
03:07 - player we can't kill them and they can't
03:09 - do anything to us either
03:12 - our next goal then is to get cooper
03:15 - walking around
03:16 - the good news is that koopa troopa's
03:18 - basic movement is identical to gumbas so
03:21 - we can reuse lots of code
03:23 - find with me the when i receive move
03:26 - enemy script
03:28 - this script is getting quite long it
03:30 - contains many ifs to handle the
03:31 - different enemy types
03:33 - i'm going to duplicate the gumba if
03:38 - and put it on the end of the script
03:40 - i guess we could have just used an ore
03:43 - instead now that i think about it but
03:44 - never mind change the type check from
03:47 - goomba to koopa
03:49 - so let's see what this tic gumba script
03:52 - does
03:53 - so we have the movement in the x and y
03:56 - and then we set the costume ah okay so
03:58 - this costume 2 is goomba's initial
04:01 - costume number
04:02 - we can't use this for koopa they have a
04:05 - different root costume number
04:08 - i'm going to have to introduce a new
04:10 - variable to help us out name it root
04:13 - costume for this sprite only
04:16 - now where we had this costume 2 stuff in
04:20 - the root costume variable
04:22 - we just need to ensure we've set this
04:24 - variable to 2 for gumbas and 5 for
04:26 - coopers then if we look at the define
04:29 - spawn type custom block you can see when
04:32 - we spawn goombas using set type we are
04:35 - passing in a costume 2 here equally
04:38 - coopers already have a costume 5. so
04:40 - that sounds promising
04:44 - scroll down to the define set typescript
04:46 - below
04:47 - here
04:48 - here we are setting costume to this
04:50 - value so we already had a variable set
04:53 - to the correct value that's true but it
04:56 - doesn't stay on that number for very
04:57 - long and gets changed as we animate the
04:59 - sprite so now we can set root costume to
05:03 - costume as well
05:04 - great in which case let's give that a
05:06 - test to see whether the setting the root
05:08 - costume was enough
05:10 - oh yes here they come
05:13 - let me jump on them oh did you see that
05:16 - when they die they transform into a
05:18 - squished goomba
05:21 - let's add another one down here
05:27 - oh now did you see that the cooper down
05:29 - there didn't try to walk under the block
05:31 - he was too big that's cool
05:34 - so when her cooper is stamped on they
05:36 - obviously shouldn't be turning into
05:38 - gumbas no they should instead be
05:41 - retreating back into their shells
05:43 - this is a problem because we don't have
05:46 - any koopa shells in our enemy costumes
05:49 - but don't worry i have them all prepared
05:51 - for you so save your project now and
05:54 - come and find my tile scrolling tutorial
05:56 - asset project there's a link to it under
05:58 - the video if you can't find it
06:01 - click into the enemy sprite and check
06:03 - out these super new costumes yeah we
06:06 - have the green and red cooper shells
06:08 - awesome just backpack the entire enemy
06:11 - sprite that would be the easiest way to
06:13 - go
06:17 - now come back to your tile scrolling
06:19 - project and we can copy the back packed
06:21 - sprites in
06:23 - it appears magically as enemy 2 and
06:25 - that's fine so i can copy the new
06:28 - costumes into my enemy sprite starting
06:30 - at 26 and working all the way up to 33
06:40 - excellent work
06:42 - i'll just double check the costumes are
06:43 - present yep so we can delete the enemy 2
06:47 - sprite to tidy things up
06:51 - so when koopa is stamped on they
06:54 - currently show a squished goomba costume
06:56 - let's find out why
06:58 - in the enemy sprite find the defined
07:01 - tick goomba script since both goomba and
07:03 - cooper are using this
07:05 - now look further down here is the
07:07 - touching mario block and well there you
07:10 - go this is what causes the squished
07:12 - goomba to always appear we need to
07:14 - behave differently for goombas and
07:16 - koopas
07:17 - so use an if else block and check if
07:20 - type
07:21 - equals
07:23 - goomba
07:26 - now only the set type and the set
07:28 - costume are specific to goombas let's
07:30 - take the rest outside the if the add to
07:33 - particles can go below the bounce player
07:36 - can go above
07:37 - as we said type and costume these are
07:40 - goomba specific put those into the if
07:43 - and frame that can go above good
07:46 - this script can now be returned to where
07:48 - it came from under the point direction
07:50 - here
07:51 - so goomba should still work as before
07:54 - let's fix up cooper and switch him to
07:56 - his shell form
07:58 - i'll duplicate the if-else block
08:00 - stripping off those list blocks and we
08:02 - check for a type of yup cooper
08:06 - okay so now things get interesting we
08:09 - need to make up a new type for the
08:11 - shells
08:12 - let's have a type of cooper shell
08:16 - now for the costume we should look that
08:17 - up again
08:19 - yeah it's 26
08:21 - for the first green cooper shell
08:24 - set costume then to 26.
08:27 - ah but hold on it will make sense to set
08:30 - the root costume now so that we can
08:31 - handle red shells later on
08:34 - one more thing we should do is to set
08:36 - the height variable to 15. a cooper
08:39 - shell is distinctively shorter than a
08:41 - cooper trooper
08:42 - nice nice nice we're getting somewhere
08:45 - we have changed the sprite from a cooper
08:46 - to a so-called cubic shell but our
08:49 - project does not know how to handle such
08:51 - an enemy type yet we must scroll to the
08:53 - when i receive move enemy script
08:57 - and scrolling down again
08:58 - [Music]
09:00 - duplicate another if script
09:04 - for our new cooper shell type
09:08 - but no ticumba script for this one the
09:12 - movement is a bit more customized make a
09:14 - new block naming it tick shell
09:17 - run without screen refresh
09:22 - and pop it under our new if
09:25 - okay all i want to do is test that
09:27 - things are working so let's muddle
09:29 - together a simple script
09:32 - set costume to the root costume we set
09:35 - up a moment ago
09:38 - we could do with some gravity so change
09:40 - speed y by -1
09:44 - and then we use the move sprite y block
09:46 - to do the job
09:48 - nice
09:49 - that should be enough to let us test
09:51 - that the transition to the cooper shell
09:53 - works as planned
09:55 - so here we go
09:57 - and squish
09:59 - yeah that is really satisfying the
10:01 - transition worked great let's just try
10:04 - that again
10:05 - put some more enemies on the level
10:07 - [Music]
10:11 - and jump on them all ha ha take that
10:14 - great
10:16 - so
10:16 - what is missing it's the ability to walk
10:19 - into a shell and have it spin off away
10:22 - from you now all the interactions are
10:24 - quite straightforward we just need to be
10:26 - methodical first consideration when
10:29 - cooper becomes a shell we want a small
10:32 - delay before they can be kicked we'll
10:34 - give them three frame ticks if frame is
10:37 - less than three
10:38 - changing frame by one
10:41 - and then stopping this script
10:44 - that deals with that
10:45 - right then if we got here and frame is
10:48 - still three
10:55 - then this is a stationary shell so if
10:58 - the shell is not touching mario then
11:01 - again stop this script there's nothing
11:03 - we need to do we're waiting for mario to
11:06 - come along
11:07 - but if we are touching mario it's
11:10 - business time what direction do we want
11:12 - to send this shell off in
11:14 - if else
11:16 - when mario's x
11:24 - is less than the shell's x
11:27 - then mario should kick the shell off to
11:29 - the right so set direction to
11:32 - 90.
11:33 - in the else set direction to minus 90 to
11:37 - kick the shell left
11:39 - okay then we are off this shell should
11:42 - be animating we want quite a fast
11:44 - animation so let's change frame by
11:47 - perhaps
11:48 - 0.5 that will update the costume every
11:51 - other frame
11:53 - next we need to get the shell moving how
11:56 - about we set speed x to
11:58 - uh direction divided by nine
12:02 - now since direction is 90 or minus 90
12:04 - that would be a speed of 10 or minus 10.
12:08 - the move sprite x block will then move
12:10 - it so we should be in a place to give it
12:13 - a test green flag
12:18 - and dispatcher cooper and kik
12:21 - wow look at that shell go the move
12:22 - sprite spritex is doing a great job
12:24 - moving the shell and bouncing it off the
12:26 - walls too hey we forgot to add the
12:28 - change of costume animation
12:32 - we're already changing frame by 0.5 and
12:36 - all we need is to change the costume
12:38 - because we have already set costume to
12:40 - the base costume up here
12:42 - so we now change costume by
12:45 - and we use a floor to account for the
12:46 - half frame increments
12:50 - and then a mod
12:52 - of the frame to cycle through the four
12:54 - costumes
12:56 - you can see each shell has four costumes
12:58 - in its animation loop
13:00 - let's see that in action
13:06 - and there we go a spinning shell i'm
13:09 - very pleased with that
13:11 - i just wish it would do some damage to
13:12 - those enemies down there with it
13:14 - but i guess first off let's do the
13:17 - easier job and get it to do damage to
13:19 - mario
13:20 - [Music]
13:22 - we can borrow some goombas scripts for
13:24 - this
13:25 - find the define tick goomba
13:32 - and scroll down to find the touching
13:34 - mario check
13:37 - duplicate everything from the paint
13:39 - sprite down
13:40 - and bring it safely back down to the
13:42 - tick shell script
13:47 - i'm gonna pop it at the end here
13:50 - this script handles both mario jumping
13:52 - on the enemy sprite and being killed by
13:54 - it so we do need to handle both of these
13:56 - with a spinning shell as they are deadly
13:58 - to touch but can be stomped on to stop
14:01 - them spinning
14:03 - the first if is for when we jump on the
14:05 - koopa shell
14:07 - let's tidy it up get rid of the point in
14:09 - direction block and oh wow we can scrap
14:12 - the entirety of this if block and below
14:15 - goodbye
14:16 - that's a lot simpler looking
14:19 - let's give it a test
14:20 - [Music]
14:25 - get the shell spinning
14:27 - and now i just need it to hit me
14:30 - oh oh gosh i accidentally stamped on it
14:33 - well that's good in that it shows that
14:35 - that works too oh except jumping on it
14:38 - again seems a little off there
14:40 - boom
14:41 - that's it quite capable of putting an
14:43 - end to one of my lives that's good
14:46 - let's see that jumping glitch again
14:49 - bounce bounce bounce well that's awkward
14:53 - not to worry i know what it is when we
14:55 - touch a shell and begin it moving for
14:57 - the first time we don't have any cool
15:00 - down time before a second touch can stop
15:02 - it moving again let's address that by
15:05 - adding an and to this condition and
15:07 - checking that frame has to be bigger
15:09 - than say 10 before we can both die or
15:12 - stomp on the shell
15:14 - this is doubly useful as it's important
15:16 - that we can't be killed by the shell
15:17 - right after it has been kicked anyhow
15:20 - so here we go
15:22 - [Music]
15:25 - kick off the first shell
15:28 - one jump
15:30 - two jumps oh pants it came back so fast
15:34 - still that was looking good again bounce
15:37 - kick
15:38 - bounce and kick
15:43 - i just need to oh no not again
15:46 - i'm not timing this so well
15:47 - [Music]
15:51 - oh seriously why is it doing this to me
15:54 - oh well it worked we all saw it
15:57 - okay only one thing left to do to get
16:00 - these shells to kill the other enemies
16:03 - but hold on we have a problem the shell
16:06 - is an enemy sprite clone and the other
16:09 - enemies are
16:10 - yeah also enemy sprite clones the
16:13 - problem with this is that firstly try
16:16 - and add a touching block and look for
16:18 - the enemy sprite in the list
16:20 - nope it's not there
16:22 - why because scratch thinks we won't want
16:24 - to detect collisions with ourselves hmm
16:27 - well actually we do because we are using
16:30 - clones right
16:31 - well luckily this is easy to get around
16:33 - we just create the sensing block in
16:35 - another sprite and set it to touching
16:37 - enemy and then copy it over haha job
16:40 - done
16:41 - but that's not the end of our problems
16:43 - we want only the enemies that are
16:45 - spinning shells to damage the other
16:47 - enemies right
16:48 - how can we find that out from a touching
16:51 - enemy block it only tells us that we are
16:53 - touching an enemy not the type of enemy
16:56 - or the other details about it
16:58 - well this has been a problem as
17:00 - scratchers have had to suffer for as
17:01 - long as we've been scratching there are
17:04 - many solutions of varying complexity and
17:06 - successfulness the most obvious is to
17:08 - use lists and record positions of
17:10 - sprites in there
17:11 - then use this to do the collisions
17:13 - instead mathematically
17:15 - but well i have a rather novel idea that
17:19 - avoids all of that which i think you
17:21 - will rather like
17:22 - before i tell you how we achieve it
17:24 - because that in itself may not be
17:26 - obvious let's take a look at the theory
17:28 - of what i want to do
17:30 - we have many clones of the same enemy
17:33 - sprite some are deadly to other enemies
17:36 - and some are not
17:37 - what we want to do is have all the
17:39 - normal enemy clones be able to detect if
17:42 - they are touching any deadly ones
17:45 - that is the goal here
17:47 - if we use the sensing block from a
17:49 - normal enemy it will report true if it's
17:52 - touching a deadly enemy
17:54 - but it will also report true if it's
17:56 - touching another normal enemy too and
17:59 - that's the problem
18:01 - now interestingly the sensing block only
18:03 - detects sprites that are visible and
18:06 - well that makes sense right so if we
18:08 - were able to hide all the normal enemy
18:11 - sprites then that would only leave the
18:13 - deadly ones to be detected
18:15 - so far so good the next step is to one
18:18 - by one make a normal enemy visible and
18:21 - then ask if it's touching an enemy
18:24 - if not let me hide it again and go on to
18:26 - the next now if one is touching another
18:30 - enemy then it has to be a deadly
18:32 - collision since all the other normal
18:34 - enemies are still hidden
18:36 - and then before the game loop finishes
18:37 - we quickly show all the enemies once
18:40 - more so to the player of the game they
18:42 - were not even aware that we were hiding
18:43 - things at all
18:45 - so have i sold this idea to you perhaps
18:47 - that seems pretty straightforward but
18:50 - the next problem is how on earth do we
18:52 - get scratch to let us do this all within
18:54 - a single screen tick
18:56 - the reason it's hard is that we need
18:58 - great control over the order in which we
19:00 - hide clones check for collisions and
19:02 - then re-show them again
19:05 - luckily as i've been teaching you on and
19:07 - off throughout these tutorials we do
19:09 - already control the order of script
19:11 - execution in the main game loop
19:18 - here
19:19 - as a recap our main game loop this
19:22 - forever loop only contains broadcasts no
19:25 - weights here at all and as such the loop
19:28 - will repeat over and over 30 times a
19:30 - second
19:31 - you can imagine that the player of your
19:33 - game will see the screen update once all
19:36 - the above broadcasts have had their
19:38 - chance to run
19:39 - what is important is that the broadcast
19:42 - receivers through all the sprites of
19:44 - your project will run in the order that
19:46 - we broadcast them here
19:48 - so all the when i receive check control
19:50 - scripts will run on all the sprites
19:53 - before the move player script will start
19:56 - and these will run before the move enemy
19:58 - scripts the move player after enemy and
20:00 - finally the position tile scripts
20:03 - it's only after these last scripts have
20:05 - had their turn that scratch will refresh
20:07 - the screen to show where your sprites
20:09 - ended up
20:11 - the magic of this is that say in the
20:14 - move enemy script we could hide the
20:16 - normal enemy sprites
20:18 - but if we then show them again in the
20:20 - when i receive position tiles then the
20:22 - player would not even see that we had
20:24 - hidden them
20:26 - and importantly when the move player
20:28 - after enemy script is running
20:31 - none of the normal enemies will be
20:32 - visible will they
20:34 - now isn't that something
20:37 - so make sure we are looking at the enemy
20:39 - sprite
20:40 - one small issue we have to address is
20:42 - that we don't keep track of which clones
20:44 - are visible on the screen this is
20:46 - important to do so that we can restore
20:48 - things back to as they were intended
20:50 - when hiding and showing the enemies
20:53 - as such make a new variable naming it
20:56 - visible
20:57 - for this sprite only
21:01 - best to initialize it in the green flag
21:02 - script so we'll set it to the empty
21:04 - value
21:05 - also we need to find everywhere we did a
21:08 - show or hide and set this visible
21:10 - variable
21:12 - luckily that wasn't so many places
21:14 - find the define set type script here's
21:17 - where we show the sprite when the game
21:18 - starts up
21:20 - set visible to one and throw away this
21:22 - worthless show block
21:24 - now notice that we are cloning this
21:26 - sprite here at the bottom
21:28 - well to make things easier let's then
21:30 - assume we can set visible back to the
21:32 - empty value after that since the clone
21:34 - is the sprite that wants to be visible
21:36 - not this one cool
21:38 - the only other place we show the sprite
21:40 - is in the define tick life script this
21:43 - is for making the life power-up appear
21:45 - from behind the mystery block again
21:47 - stuff in a set visible to one and remove
21:49 - the old show block
21:52 - the reason we remove the show blocks is
21:54 - that making these visible here could
21:56 - cause the sprites to be mistaken for
21:57 - deadly clones and we don't want that
22:00 - well if we give that a test we should
22:02 - find that no enemies are to be found ha
22:05 - that makes for one easy mario game right
22:08 - serves them right for constantly killing
22:09 - me earlier
22:11 - okay
22:12 - let's start at the end we'll add in the
22:15 - script that will make all the enemy
22:17 - clones visible again
22:18 - when i receive position tiles this will
22:21 - let us test the sprites will come back
22:24 - if visible is greater than zero
22:28 - then show
22:29 - only the clones with visible set to a
22:31 - number greater than zero will now be
22:33 - shown
22:34 - so click the green flag
22:36 - yeah the enemies strike back
22:41 - i'm especially pleased to see that oh
22:43 - man
22:44 - as i was saying it's good to see the
22:46 - mushroom appearing correctly from behind
22:48 - the mystery block
22:49 - our next goal is to hide all non-deadly
22:53 - normal enemies
22:54 - and we would do this in the when i
22:56 - receive move enemy script but we want to
22:59 - ensure we hide it after it's done all
23:01 - its other work
23:02 - the easiest way to ensure this happens
23:04 - is to split off all the scripts under
23:06 - the initial if check and make a new
23:09 - custom block naming it move enemy when
23:12 - without screen refresh
23:15 - then all these scripts can go in there
23:18 - and we'll use this block right away
23:21 - there
23:22 - and of course we want to hide the sprite
23:25 - but
23:26 - and here is something we have not talked
23:28 - about we only want to hide
23:31 - non-deadly enemies
23:33 - how are we going to identify these
23:35 - we could use the enemy type
23:37 - but that would mean a lot of if checks
23:40 - instead we will reuse this visible
23:42 - variable a value of 1 means it's a
23:44 - normal visible sprite
23:46 - and a 2 will mean it's an always showing
23:50 - deadly sprite so i rotate in cooper
23:52 - shell for example
23:54 - so only if visible equals one
23:57 - a normal enemy
24:01 - then hide it that will leave the deadly
24:03 - enemies visible sweet
24:06 - let's test that to ensure it's all still
24:08 - hanging together
24:09 - [Music]
24:13 - right so deadly enemies
24:16 - find the define tick shell script
24:22 - here is where we make the shell spin off
24:24 - in a given direction after it's been
24:26 - touched
24:27 - so it's here we need to set visible to
24:29 - the new value of 2 it's now a deadly
24:33 - enemy
24:34 - conversely when it is stomped on a
24:36 - second time it stops moving and we can
24:38 - set visible back to 1 restoring it to a
24:41 - normal enemy state
24:44 - and now there's only the detection of
24:46 - collisions to code up
24:50 - we are going to code this in a new when
24:53 - i receive move player after enemy block
24:56 - check first that we are not in the
24:58 - editor
25:00 - editor is less than one
25:06 - and that this is a normal visible enemy
25:08 - visible equals one
25:12 - right so this will be a hidden enemy at
25:14 - present so we need to show it
25:17 - then we check for collisions using a
25:19 - touching enemy
25:21 - ah
25:22 - problem scratch doesn't allow us to do
25:24 - that does it we must go into another
25:26 - sprite scripts
25:28 - add the touching enemy block from there
25:32 - and then drag it into the enemy sprite
25:36 - the old touching block can be removed
25:38 - and then click back into the enemy
25:40 - sprite and drop it into our if
25:43 - bit of a work around but hey
25:46 - right perhaps we'll just delete this
25:48 - clone for the time being that will be
25:50 - enough to show us that it's working
25:52 - and then hide this enemy sprite again
25:55 - afterwards this is really important
25:57 - otherwise if left on the screen other
25:59 - normal enemies will be able to see it
26:00 - and think that it's a deadly enemy that
26:03 - would break our clever process
26:06 - wow that should be it then it's time to
26:08 - test
26:09 - first we need a cooper
26:11 - i select this one off goes a shell yes
26:14 - it destroyed the gumba and ticked off a
26:15 - cooper too perfect
26:18 - now just to check i'll try placing a
26:20 - shell down here and i'm seeing if goomba
26:22 - could walk safely over it yeah this is
26:24 - great and now
26:26 - boom this shell is activated and the
26:28 - enemies stand no chance no chance at all
26:32 - and neither do i sadly
26:34 - all i want to do then before we end this
26:37 - episode is to give the dispatched
26:38 - enemies a better end animation luckily
26:41 - we already have the required enemy
26:43 - flipping code we use it when we head but
26:45 - a block under an enemy
26:47 - let's find the script it's called define
26:50 - check flip
26:51 - all we need is the bottom scripts here
26:53 - from the set speed y to 14. i'll make a
26:56 - new custom block flip
27:01 - and replace the scripts with this new
27:04 - block
27:05 - now scroll back to our when i receive
27:08 - move player after enemy bit of a
27:09 - mouthful
27:11 - and replace the delete clone for the
27:13 - flip block
27:17 - that's it run the project let's go okay
27:21 - jump up here and kick the shell yeah
27:24 - there we go the goombas flip upside down
27:26 - and the cooper follows shortly after
27:28 - brilliant that is working exactly as
27:31 - planned who would guess the tricks that
27:33 - we've put in place behind the scenes to
27:34 - get this working i love it
27:37 - hmm i wonder if we can kill off a
27:40 - piranha plant with one of these
27:42 - oh wow yes we can ha not sure it should
27:45 - work quite like that or even look like
27:47 - that but hey it's pretty cool
27:50 - in mario there are further mechanics to
27:52 - these shells like being able to pick
27:54 - them up and throw them also not so
27:57 - difficult to add is that they should
27:58 - despawn when they go off screen i bet
28:01 - you could figure that one out without me
28:02 - right
28:03 - let me stick a load of gumballs in here
28:08 - go go cooper shell oh yes yes yes that's
28:11 - awesome
28:13 - oh wait that reminds me the shells are
28:15 - supposed to also collect coins as they
28:17 - move along
28:19 - well go on we have time just for that
28:22 - click into the mario sprite to find the
28:23 - define check around player at xy script
28:26 - this is a simple script at present that
28:28 - just collects coins so it is perfect for
28:31 - us
28:32 - just drag it into the enemy sprite
28:37 - then returning to the enemy sprite i'll
28:39 - just tidy it up a bit and then find the
28:41 - define tick shell script
28:44 - scroll right to the bottom here and
28:47 - we'll drop in a check around player x y
28:49 - block checking at the enemies x and y
28:52 - variables
28:55 - we should just make sure we have the
28:57 - coin sound ready to play too back into
29:00 - the player sprite and in the sounds tab
29:02 - copy the coin sound into the enemy
29:04 - sprite too
29:06 - and that should be it
29:09 - run the project for the last time then
29:11 - here we go jump on a cooper and let that
29:14 - shell fly
29:18 - it goes straight through the coins and
29:20 - even our coin counter goes up absolutely
29:22 - awesome
29:23 - well i think we can have a lot of fun
29:26 - with this we've covered some exciting
29:28 - new scripting ideas here and i hope they
29:31 - might open your minds to some amazing
29:32 - new scratch project ideas if it does
29:35 - then drop me a comment and let me know
29:37 - all about it
29:38 - this is the end of the video though if
29:40 - you've enjoyed it then smash the like
29:42 - button and don't forget to subscribe to
29:44 - the channel you're pushing ever onwards
29:45 - towards that hundred thousand
29:47 - subscribers and you can be one of them
29:49 - plus you'll then get notified as soon as
29:52 - my next video lands if you want to
29:54 - support the channel further then you can
29:55 - become one of my paid members who do get
29:58 - extra perks like priority replies and
30:00 - comments early access to videos and even
30:02 - the scratch projects themselves wow
30:05 - so thank you for watching and until next
30:07 - time scratch on guys