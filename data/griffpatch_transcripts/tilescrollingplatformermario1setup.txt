00:01 - hello fellow scratchers
00:03 - paper minecraft scratch napped epic
00:05 - ninja
00:06 - geometry dash and apple what have these
00:09 - all got in common apart from being
00:11 - scratch games made by me
00:14 - give up well they are all tile-based
00:16 - scrolling games
00:18 - that is games that have their levels
00:20 - constructed from a regular grid of tiled
00:22 - sprites
00:23 - creating levels in this manner has been
00:25 - an extremely common technique in video
00:27 - game creation for decades
00:29 - and one that i myself have used over and
00:32 - over again
00:34 - with the aid of this video we are going
00:36 - to be building together
00:37 - the basis for such a game engine what is
00:40 - exciting about this technique is that
00:42 - it is not only good at speeding up your
00:44 - projects
00:46 - but it makes challenges like having
00:48 - off-screen enemies
00:49 - far easier to manage as well as many
00:52 - other
00:52 - tricky things like built-in level
00:54 - designers and
00:56 - level saving systems you are of course
00:59 - absolutely free to create all your own
01:01 - custom sprites for this project
01:03 - but if you want a quick start take a
01:06 - look at the notes under this video
01:08 - for a link to a starter project you'll
01:10 - find it already set up with a number of
01:12 - pre-configured sprite costumes
01:14 - from a familiar mario game simply remix
01:17 - it
01:18 - and off we go
01:21 - so if you remixed my starter project
01:24 - you'll have three sprites the first
01:26 - named mario
01:27 - contains a simple mario sprite which is
01:29 - hidden for the time being
01:31 - the middle sprite is called tiles if we
01:33 - look at its costumes you'll see the
01:34 - first two
01:35 - are quite interesting one named big
01:38 - containing a large square
01:40 - the purpose of this i shall explain
01:41 - later the second is a blank costume
01:44 - useful for the blank areas of your level
01:46 - all the rest
01:47 - of the costumes are cool level tiles and
01:50 - if you look at their size they are all
01:52 - 16 by 16 pixels
01:54 - if you draw your own then make sure to
01:56 - keep to this size too to follow on for
01:58 - this tutorial
02:00 - if we look closely at one of these
02:01 - costumes you'll see how it is precisely
02:03 - lined up with scratch's checkerboard
02:05 - grid
02:06 - it's super useful to know that the
02:08 - squares in this grid are exactly four by
02:10 - four pixels in size
02:12 - so if our costume lines up with this
02:14 - then we are all good
02:16 - also the costumes are perfectly centered
02:18 - in the costume editor
02:20 - a tip for checking this is to press ctrl
02:22 - a
02:23 - to select the costume and then drag it
02:26 - it will snap back to the center by
02:28 - itself showing that it is
02:30 - already in the right place if you design
02:33 - your own costumes
02:34 - just make sure they are aligned and
02:36 - sized just like this
02:38 - okay let's talk about creating our tile
02:41 - grid
02:41 - i'll select the block gold costume
02:43 - because it's nicely outlined shape
02:46 - now click onto the coding tab notice how
02:49 - small
02:49 - our 16 by 16 sprite looks on the stage
02:53 - we're going to double its size add a
02:55 - when flag clicked block
02:57 - and under that set size to 200.
03:00 - for good measure add in a go to position
03:02 - x y
03:03 - 0 0. now run the project so our tiles
03:07 - become
03:07 - 32 by 32 pixels instead of the old 16x16
03:11 - pull out a crate clone of myself block
03:14 - into some free space
03:15 - and attach it to a new change y position
03:17 - by 32 block
03:20 - now this is cool click the clone and
03:22 - move block script
03:23 - and notice how a new clone of the tile
03:25 - is created
03:26 - while our original sprite skips up to
03:29 - perfectly sit above it
03:31 - right smash that script a few more times
03:33 - with your mouse and we can generate a
03:35 - very handsome looking column indeed
03:38 - right we can easily automate the process
03:40 - of colloding
03:41 - a whole column of tiles hit the green
03:44 - flag button to reset our project
03:46 - and then add a new repeat block around
03:48 - the crate clone and change y
03:49 - position blocks set it to repeat 5 times
03:53 - and click the script to run it perfect
03:57 - told you that would be easy but hold on
04:00 - one moment
04:01 - were you expecting six tiles in our
04:03 - column
04:04 - after all we asked for a five didn't we
04:07 - don't worry about this
04:08 - it's not a bug remember when our project
04:11 - starts we already have one tile on stage
04:13 - so after creating five more clones we do
04:16 - indeed expect there to be six
04:18 - sprites in total so let's move on
04:21 - we can improve our code by replacing the
04:23 - number five with a new variable
04:26 - create a new one named clone count y
04:30 - leaving it set 2 for all sprites and set
04:33 - it to 5
04:33 - under the green flag and drag the
04:35 - variable into the repeat loop
04:37 - replacing the number 5. now is a good
04:42 - time to click the green flag again to
04:44 - make sure that the variable gets set
04:46 - before we do any more testing
04:48 - now click our repeat loop to ensure it
04:50 - draws our column still
04:53 - now wouldn't it be nice to move this
04:55 - little column
04:56 - further down the screen perhaps so that
04:59 - it was centered
05:00 - we just introduce a set y position block
05:03 - from motion category
05:04 - before our repeat loop and set it to
05:07 - clone count y
05:08 - multiplied by minus sixteen
05:12 - y minus sixteen well sixteen
05:15 - is half of thirty two it's half a tile
05:17 - and minus means backwards
05:19 - so we're moving backwards by half a tile
05:22 - for every tile that we want to draw
05:24 - which is half the whole stack
05:27 - click the code to test it good work
05:30 - so we have a column of tiles how do we
05:33 - make this
05:34 - into an awesome grid well obviously we
05:37 - need to move a tile
05:38 - to the right to begin the next column so
05:42 - stick a change x by 32 at the end of our
05:44 - script
05:45 - now when we run this script you'll
05:47 - notice the extra sprite at the top
05:49 - has hopped to the right so click the
05:52 - script again
05:54 - and again yup mash away
05:57 - looking really good to automate this
06:00 - start by creating a new variable named
06:02 - clone count x
06:05 - and we'll set it to 5
06:09 - bringing in a new repeat block around
06:11 - our cloning script
06:14 - and set to clone tiles y
06:18 - then before this add a set x position
06:23 - to clone count y multiplied by minus 16.
06:28 - let's run this updated script and see
06:30 - what happens
06:31 - click the green flag to reset our
06:32 - project and then click the cloning
06:34 - scripts
06:36 - that's real nice you agree
06:39 - have you noticed that we still have a
06:41 - leftover sprite
06:42 - up at the top right of our grid let's
06:45 - just tidy that up
06:46 - by adding a hide block to the bottom of
06:48 - our script
06:49 - and of course a show block to the top to
06:51 - ensure that we still see the ones we
06:53 - want
06:54 - now green flag and run the scripts and
06:57 - that did it
06:58 - great all tidy we can make things look a
07:01 - little more interesting by switching
07:03 - costumes for each tile
07:05 - just add in a switch costume block
07:08 - before the crate clone block
07:09 - and drop in a pick random now what tile
07:13 - numbers can we use if we look in our
07:14 - costumes
07:15 - you can see our tiles run from number 3
07:18 - to 19.
07:19 - so go back to the code and insert the
07:21 - numbers 3 and 19 in our random
07:25 - now reset the project and run our
07:27 - scripts again to see
07:28 - a different pattern of costumes appear
07:30 - each time
07:34 - okay it's nice to see the clones
07:36 - appearing like this but
07:37 - i'm ready for it to run quicker from the
07:40 - my blocks category
07:42 - make a block and name it setup
07:45 - don't forget to tick the run without
07:47 - screen refresh
07:49 - now drag all our cloning scripts under
07:52 - the new define block
07:53 - and then drag the new setup block itself
07:56 - to the bottom of the green flag script
08:00 - simply hit the green flag now and the
08:02 - grid of tiles should appear
08:03 - instantly love the power of that run
08:06 - without screen refresher right
08:08 - now you'd be correct if you were
08:10 - thinking that a 5x5 grid is not
08:12 - very impressive and if you resisted the
08:15 - urge to stuff in some larger values
08:17 - already
08:18 - then you've been very well behaved but
08:20 - for now
08:21 - this smaller size will help us to ensure
08:23 - we pick up on any problems
08:25 - with the tile engine that we introduce
08:27 - as we get more scripts
08:30 - before we can move on we have a small
08:31 - problem to address
08:33 - to be able to keep track of scrolling
08:35 - tiles
08:36 - we are much better off switching from
08:38 - using scratches built in
08:40 - sprite position x and y variables and
08:42 - replacing them with our own
08:43 - tile x and y variables this is
08:45 - especially important
08:47 - as we begin to want to move sprites off
08:49 - screen
08:51 - let's create two new variables we call
08:53 - them tile x
08:54 - and tile y making sure to create them
08:56 - both for this sprite only
09:06 - now i'm going through the setup script
09:08 - replacing all references
09:10 - to position x and y with my variable x
09:12 - and y
09:14 - this includes any set or change blocks
09:17 - make sure to double check your script
09:19 - after doing this with mine
09:20 - on the screen as it's very easy to make
09:22 - a mistake while doing this
09:32 - now because we are no longer setting the
09:34 - sprite's position our code is no longer
09:36 - going to work
09:38 - try it and we'll find it's completely
09:39 - broken but not to worry
09:41 - although the clones are now all
09:43 - appearing in a single heap in the middle
09:45 - of the stage
09:46 - the good news is that their positions
09:48 - can be restored very quickly
09:50 - now by adding a new when i receive block
09:52 - with a new event of position
09:54 - tiles within this
09:58 - add a go to xy position block and
10:01 - fill in here the tilex and tile y
10:03 - variable
10:04 - then we broadcast this event after our
10:07 - call to the setup custom block
10:10 - this needs to be a broadcast not a
10:11 - custom block because we want to notify
10:14 - every single one of our clone tiles to
10:16 - position themselves all
10:18 - at once and the broadcast will do that
10:21 - run the project and hey presto things
10:23 - are working again
10:25 - phew so what about
10:28 - that scrolling add with me two new
10:30 - global availables
10:32 - named camerax for all sprites and camera
10:35 - y
10:36 - also for all sprites these are to track
10:39 - the position of the camera as it tracks
10:40 - around the level
10:42 - now right click the camera x and y
10:44 - available reporters
10:46 - in turn on the stage to change them into
10:49 - sliders
10:50 - and then right click them again and
10:52 - change the range
10:54 - to be 0 to 500 for them both
10:57 - now update that when i receive position
10:59 - tiles script
11:00 - subtract the camera x from the tilex
11:06 - and the camera y from the tile y
11:11 - and finally add a forever loop around
11:13 - the broadcast position tiles block
11:15 - so that the positions stay up to date as
11:17 - the project is running
11:19 - run the project again and we can play
11:21 - now with the camera x and y's sliders
11:23 - watching the game tiles scrolling left
11:25 - and right up and down
11:27 - yes and now comes
11:30 - an unfortunate scratch limitation the
11:33 - 300 clone limit
11:35 - you might be hoping to simply expand out
11:37 - the number of tiles to generate your
11:39 - entire level from tile clones but
11:42 - no no no we can't do this it will take
11:45 - over 200 tiles just to create one single
11:48 - screen of
11:48 - the level so that only leaves us 100
11:51 - more before we run out
11:53 - and we will need these other clones for
11:55 - other parts of the game like
11:56 - collectibles or enemies
11:58 - so what to do the solution is to only
12:01 - use clones for the tiles that are
12:03 - actually in view
12:04 - the tiles that are off screen will not
12:07 - create a clone for yet
12:08 - to demonstrate this let us pretend that
12:11 - our game viewport
12:12 - is actually only four by four tiles
12:15 - i will draw a dark border around the
12:17 - current stage to demonstrate this
12:19 - this is what i prepared earlier
12:22 - this is our viewport the area of the
12:24 - game that we will see
12:26 - at one time now i scroll the level using
12:29 - the camera x and y
12:30 - and things look good as they scroll off
12:32 - the screen but
12:34 - the problem is nothing is scrolling it
12:35 - back in on the right
12:37 - so the solution to this problem can be
12:39 - referred to as
12:40 - loop to scrolling
12:43 - as a tile clone moves out of the current
12:46 - viewport
12:47 - like this into this dark area of mine we
12:50 - recycle it by quickly moving it
12:52 - over to the right hand side of the
12:53 - viewport ready to scroll back into view
12:56 - on the other side
12:57 - filling up the gap if we do this quick
13:00 - enough the player will not even know
13:02 - that there was a gap at all to do this
13:05 - in code
13:06 - within the position tiles receiver add
13:08 - an if condition
13:10 - to check whether the position of the
13:11 - tile which is tilex
13:13 - minus camera x is less than
13:16 - the left side of the viewport which is
13:18 - clone tile x
13:20 - times by -16
13:23 - if it is less then we change the tilex
13:26 - by the width of the viewport
13:27 - which is clone tilex times 32
13:30 - and it should pop onto the other side of
13:33 - the viewport
13:35 - now slide camera x to zero and run the
13:37 - project and we can now
13:39 - scroll it to the right and success look
13:42 - how the tiles are jumping to the right
13:44 - hand side
13:44 - when they move out of the viewport but
13:47 - things are not so rosy when scrolling
13:49 - back to the left
13:51 - let's update the script to fix this
13:54 - we could write out the full script again
13:57 - but instead
13:58 - let's do something a little bit more
13:59 - clever insert the maths operator absorb
14:03 - around the tilex take away camera x
14:06 - and switch the less than symbol for a
14:09 - greater than symbol
14:10 - and finally change the negative 16 to be
14:13 - positive 16.
14:15 - now this abs function changes any
14:17 - negative values to positive ones
14:19 - so we are now effectively looking for
14:22 - when the tile moves
14:23 - out of the viewport both to the left and
14:25 - the right negative or positive
14:28 - then add an if-else condition block
14:30 - within and check whether
14:31 - tilex is less than camera x
14:36 - if it is then the tile has moved off the
14:38 - left side of the viewport
14:39 - and we need to move the tile to the
14:41 - right-hand side of the viewport
14:43 - otherwise it's moved off the right-hand
14:46 - side and we want to move it to the
14:48 - left-hand side
14:49 - by multiplying it this time by minus 32
14:53 - let's give that a quick test okay it's
14:56 - looking
14:57 - really good really promising
15:00 - we can make short work of implementing
15:02 - the same scripts for scrolling up and
15:04 - down too
15:05 - just duplicate the if condition
15:08 - and make sure to switch all the tile x's
15:10 - for tile wise
15:12 - and camera x's for camera wise
15:29 - okay finally let's expand out our
15:32 - viewport to fill the entire screen
15:38 - scroll to our green flag script and
15:40 - change the clone
15:41 - tiles variable from 5 to 10.
15:45 - run the project boy that was easy
15:48 - but exactly how big should we make these
15:50 - values to fill the entire screen
15:53 - we can do a quick bit of maths to work
15:55 - it out precisely
15:56 - scratch's stage is 480 pixels wide
16:00 - since our tiles are 32 pixels wide we
16:02 - divide 480
16:04 - by 32 and get exactly 15 tiles
16:08 - we can fill that in here the height of
16:11 - scratch's stage is 360 pixels
16:14 - 360 divided by 32 is ah
16:17 - 11 and a quarter well we always have to
16:20 - round up
16:21 - otherwise there will be a gap so that's
16:24 - 12
16:24 - tiles high i'll enter that value in here
16:28 - now if we run that we can see that
16:30 - things are looking
16:31 - really good but it's not quite right
16:35 - see a gap on the left and right
16:38 - well we did the math so what went wrong
16:41 - the reason for this
16:42 - is that we calculated how many tiles we
16:44 - needed to fill the whole screen
16:46 - but we didn't factor in that a tile can
16:49 - be half on and half off the screen on
16:51 - either end
16:52 - so we simply need to add one more tile
16:55 - to each of the figures that we came up
16:56 - with
16:57 - that makes the viewport 16 wide and 13
17:00 - high
17:02 - and now we have a very full screen of
17:05 - tiles
17:06 - wonderful but hold on
17:09 - are you seeing what i am seeing the
17:11 - tiles at the edge of the screen are
17:12 - getting stuck and not scrolling
17:14 - off the screen nicely at all we simply
17:17 - have to fix this
17:18 - this is obviously happening because of
17:20 - scratch's sprite fencing rules designed
17:22 - to stop us losing our sprites by moving
17:24 - them off screen
17:26 - sadly there are plenty of times when we
17:28 - do want to be able to move them off
17:29 - screen
17:30 - and this is one of them my favorite way
17:33 - of getting around this right now
17:35 - is to switch the costume of our sprite
17:37 - just before we position it
17:38 - to the costume named big remember that
17:42 - costume
17:42 - i told you we'd come back to that so
17:45 - this costume
17:46 - is larger than any of our tiles and
17:48 - scratch will allow this tile to be moved
17:50 - further off the screen than a smaller
17:53 - tile
17:54 - then once we've moved it to where we
17:56 - want it we switch back to the correct
17:59 - smaller tile ah problem we don't
18:02 - actually know what that was
18:04 - so let's add a new variable named tile
18:07 - ticking the
18:08 - for this sprite only and use this as the
18:10 - new costume identifier
18:12 - then in the define setup custom block
18:15 - replace the switch costume block with a
18:17 - set tile variable
18:19 - to replace the random number
18:22 - and we run the project again look
18:25 - at that so good we have a full screen of
18:29 - very well-behaved scrolling tiles
18:32 - well if you got this far then
18:34 - congratulations
18:35 - you should be very pleased with yourself
18:37 - look at how smoothly all those tiles are
18:39 - scrolling
18:40 - on and off screen this is the fabulous
18:42 - beginnings of
18:43 - so many exciting scratch projects just
18:46 - waiting to happen
18:47 - i don't know about you but i'm really
18:49 - looking forward to what lies ahead in
18:51 - part
18:52 - two of this tutorial if you are as
18:54 - excited as me then let me know in the
18:56 - comments below
18:58 - i hope you have enjoyed this video
19:00 - please smash that like button and
19:01 - subscribe to the channel if you want to
19:03 - see more with batch tutorials like this
19:05 - one
19:06 - thank you for watching and scratch on
19:10 - [Music]