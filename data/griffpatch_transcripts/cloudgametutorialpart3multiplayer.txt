00:00 - hi I'm Griff fetch and welcome to part 3
00:02 - of my series on creating multiplayer
00:03 - cloud games in scratch with the rather
00:06 - tricky part 2 out of the way we can now
00:08 - focus on getting more than one player in
00:10 - our multiplayer game if you missed out
00:12 - in part 1 or 2 then you'll want to go
00:14 - back and watch them as we're going to
00:16 - pick right up where we left off however
00:18 - I have shared the finished scripts from
00:20 - my part 2 on my growth patch shooter
00:22 - account and you can find a link under
00:24 - the video if it helps to feel free to
00:26 - remix that and then off we go okay let's
00:29 - just clean up our scripts from part 2 I
00:31 - don't need these test blocks but I'm
00:33 - going to remove the background costume
00:35 - the P 1 X and P 1 y cloud variables also
00:38 - no longer needed there we're ready to
00:40 - begin we were designing our scripts to
00:44 - allow for players to join our project
00:45 - and we'll use sprite cloning to do this
00:48 - as it avoids having to manually create 4
00:51 - copies of all the costumes and scripts
00:52 - that we will be designing to prepare our
00:55 - project for this change let's rename the
00:57 - player variable to my player number hash
01:01 - here and serve number this variable is
01:03 - used to let the game know which player
01:06 - we are controlling now let's introduce
01:07 - some new variables we already have the
01:10 - p1 cloud variable but let's add clown
01:12 - variables P 2 3 & 4 remembering to take
01:15 - the cloud variable box then for this
01:19 - sprite only the new variable play a hash
01:22 - or player number each player clone will
01:25 - have its own player number and one more
01:28 - variables needed we're going to call
01:29 - this max players all in uppercase
01:31 - because this is for all sprites ok let's
01:36 - set max players to 4 this is the maximum
01:39 - number of players we want to be able to
01:40 - join the game right now we'll set this
01:43 - right after the green flag is clicked
01:45 - and in case you are wondering yes we can
01:47 - make this cloud engine work for up to 9
01:49 - or 10 players if needed but right now
01:52 - let's stick to 4 I'm going to separate
01:54 - off the forever loop from the green flag
01:56 - stack but please don't delete it just
01:59 - leave it down here as we'll need it
02:00 - later right time to create our players
02:03 - clones start by setting player hash to 1
02:06 - that's for our first player player 1 we
02:09 - want a repeat block to loop around for
02:11 - each player so we'll use the max
02:13 - available within the loop we create a
02:16 - clone of myself and then change player
02:19 - hash by one to progress on to the next
02:21 - player
02:22 - now a quick explanation here when
02:24 - scratch creates a clone an exact copy of
02:27 - the sprite being cloned is created in
02:30 - this case the scratch cat with its
02:31 - costume position and all its variables
02:34 - that will include the player hash
02:36 - variable which we just set to one so at
02:40 - this point both the original sprite and
02:42 - the clone we've created have a player
02:44 - hash of one but right after creating a
02:47 - clone we immediately changed the
02:49 - original sprites player hash variable by
02:50 - one before continuing around the repeat
02:53 - loop what this means is that the cloned
02:55 - sprite remains as player one but the
02:58 - original sprite now becomes player to
03:00 - the next clone will then be created
03:02 - player two and the original sprite will
03:04 - move on to become player three and the
03:06 - loop continues okay join the new script
03:09 - to the green flag stack now to allow us
03:13 - to see this working let's temporarily
03:15 - add a script that repositions the clones
03:17 - as they are created otherwise they would
03:20 - all go on top of each other and we want
03:21 - me to see them when I start as a clone
03:24 - go to random position if we click the
03:27 - green flag now we should see that the
03:29 - player's clones appear in random
03:31 - positions great I cept those who can
03:34 - count may notice that we have five
03:36 - players whose match I'm not complaining
03:39 - but I thought you said the maximum
03:40 - players were four yes do not fear we
03:44 - asked for four new clones but don't
03:46 - forget we already had one player sprite
03:48 - before we created those clones and four
03:51 - plus one is five so to remedy this we
03:54 - simply take away one from the number of
03:56 - clones we create like so and there now
04:00 - the green flag rewards us with four
04:02 - players excellent but hold on
04:05 - slow-motion mode activated did you see
04:08 - how the players do not appear at once oh
04:11 - no that's just not professional this is
04:14 - because scratch always assumes that
04:16 - loops are being used to create moving
04:18 - animations and so slows down the scripts
04:21 - to allow us to see that animation which
04:23 - is all very nice but not here please
04:26 - we can remedy this with the Handy run
04:28 - without screen refresh feature of custom
04:31 - blocks make a new custom block and name
04:33 - it set up players tick run without
04:36 - screen refresh and click OK
04:38 - move into the new custom block all the
04:40 - scripts that we don't want to show as an
04:42 - animation and then use the new set of
04:45 - players block in its place now when the
04:48 - green flag is clicked pal all four
04:51 - players appear at once much better that
04:53 - makes me happy
04:54 - cool I'm going to delete the random
04:57 - positioning scripts now as we've seen
04:58 - that the cloning works to begin the game
05:01 - loops on all four players sprites
05:03 - dragged in a broadcast block click to
05:06 - create a new message and we'll name it
05:08 - begin drag out a when I receive block
05:11 - and select begin now bring back those
05:14 - scripts we separated off earlier and
05:15 - join it back up to the new begin
05:17 - receiver this script will now begin
05:20 - running on each of the four players
05:21 - sprites however we still have a bit of
05:25 - work ahead because we only designed this
05:27 - script to control player 1 we can
05:30 - quickly replace my player equals 1 with
05:32 - my player equals player number remember
05:35 - my player is the number of the player I
05:37 - am controlling in the game and player
05:39 - number is a number of this sprite so
05:42 - these variables will only be equal when
05:44 - the current sprite is the player I am
05:47 - controlling next depending on this
05:49 - sprites player number we need to set the
05:51 - right cloud variable p1 p2 p3 or p4
05:55 - start by creating a new custom block and
05:57 - name it
05:58 - set cloud hash add the input player
06:01 - another label 2 and an input named value
06:05 - tick run without screen refresh and ok
06:08 - we're going to do this the easy way for
06:11 - now so drag in an if/else block and
06:13 - compare the input player hash to the
06:15 - number 1 if it is the same then we set
06:18 - clown variable p1 to the input value now
06:21 - duplicate this up only change it to
06:24 - check for and set player 2 3 & 4
06:29 - if we like we can remove the last if as
06:32 - there's no player five at this time nice
06:35 - now we can use this in place of the set
06:38 - p1 block like this just plug in the
06:41 - sprites player hash and encoded
06:43 - variables and dispose of the old set
06:45 - block hmm
06:47 - our scripts are getting a bit crowded
06:48 - let me just make a little space okay
06:53 - we still need to replace this begin
06:55 - decode of p1 variable to fetch the
06:57 - correct cloud variable for this player
06:59 - sprite make a new custom block a name it
07:02 - available equals cloud hash at an input
07:05 - named player and choose to run without
07:07 - screen refresh ok let's simply duplicate
07:11 - the set cloud block scripts as this is
07:13 - going to work similarly but we change
07:16 - all the set blocks to be set value and
07:19 - then get the value from the
07:20 - corresponding cloud variable for each
07:22 - player P one two three and four great we
07:27 - now make use of this new custom block
07:29 - drag it into just above the begin decode
07:32 - block here and we'll feed it with the
07:34 - player hash variable
07:35 - this will set value to the corresponding
07:37 - players cloud variable so replace the
07:40 - variable p1 here with the variable value
07:42 - I'm feeling really good about where we
07:45 - are right now just a final touch we'll
07:47 - update the say block to include each
07:49 - player's number as well as their name we
07:51 - can do this with a couple of joins like
07:53 - so all that remains is to add a way of
07:55 - choosing which player we're controlling
07:57 - when we play the game let's just
07:59 - continue to do it manually for now by
08:00 - pressing the number keys 1 2 4 so
08:03 - duplicate the when key pressed hat
08:04 - blocked for players 2 3 & 4
08:06 - and while we're at it let's include a
08:09 - zero key to drop out of the game that's
08:11 - by setting my player to 0 and that my
08:14 - friends is it are you ready to see what
08:17 - we have created
08:17 - let's go fullscreen ahh looks like a
08:22 - scratcher I'm an or is it I'm an popular
08:26 - youtuber has been hit before me right
08:28 - I'm pressing the one key now and there I
08:30 - am with patch tutor has appeared and
08:32 - pressing number two and now I'm
08:34 - controlling cat number 2 you'll notice
08:37 - that each time I've changed to be a new
08:38 - player the previous player stops moving
08:41 - where I left it
08:42 - pressing three yep all looks good and
08:45 - four great now I can stop the project
08:49 - all the clones will be deleted
08:51 - clones do not exist once the project is
08:53 - stopped but if I click the green flag
08:55 - again our scripts recreate the clones
08:57 - read in the Cloud Data and reposition
08:59 - the players exactly where they left off
09:01 - neat but in reality when a player leaves
09:05 - a game you don't want them to hang
09:06 - around on the screen forever so how do
09:09 - you tell a player has left the game well
09:11 - you simply need to detect when they have
09:14 - stopped changing their players cloud
09:16 - variable to demonstrate this will make
09:19 - the player fade out when their cloud
09:20 - data stops changing add a new variable
09:23 - named last value for this sprite only we
09:27 - will use this to keep track of when the
09:29 - players cloud variable has changed place
09:31 - an if/else block here just after the
09:34 - value equals cloud number custom block
09:36 - and compare the variable named value
09:38 - with last value now we must be careful
09:41 - this really caught me out before I
09:44 - understood what was going wrong we must
09:46 - join value with a letter I'll use 30 a
09:50 - when a comparison is done on values made
09:52 - up of just digits scratch thinks it must
09:55 - be a number and attempts a numerical
09:57 - comparison but this can go wrong
10:00 - scratch can't accurately represent long
10:02 - numbers technically this is called a
10:04 - loss of precision the result of this is
10:07 - that scratch will say that the two
10:08 - numbers are the same even if they are
10:10 - slightly different this is not a problem
10:13 - when comparing long string values so
10:15 - adding a letter fixes the problem so
10:18 - when the current cloud value is the same
10:21 - as the previous value we change the
10:23 - ghost effect by one fading the player
10:26 - slowly away but when the cloud variable
10:28 - has changed we set the goat effect to
10:30 - zero bringing the player back into view
10:33 - we also set the last value variable to
10:36 - reflect the change remember to also join
10:39 - it with the letter A as before okay it's
10:42 - green flag time and look at this we see
10:45 - all four cats appear and then because no
10:48 - one is changing the cloud variables they
10:50 - slowly fade away but if I press one to
10:53 - take control of the first player then
10:54 - the change in the first place
10:56 - variables causes the goat effect to be
10:58 - removed and it pops into view so I am
11:02 - playing from the UK but my friend
11:04 - crystal keeper 7 has kindly connected
11:06 - from the US to help demonstrate this
11:08 - project in action and you can see as we
11:10 - switch players using a number keys the
11:12 - unused players are fading away and here
11:15 - we have three players at once this is
11:16 - working excellently well that's it for
11:20 - this video but I hope you're as excited
11:21 - as me as to where we will be going next
11:23 - with this series things are really
11:25 - coming together I'm especially looking
11:27 - forward to covering the subject of Auto
11:29 - game joining and ways of getting
11:31 - smoother movements from the other cloud
11:33 - players if you enjoyed watching this
11:35 - video please like the video and
11:37 - subscribe to my channel thanks for
11:39 - watching and I hope you will join us
11:41 - again soon for part 4 bye for now