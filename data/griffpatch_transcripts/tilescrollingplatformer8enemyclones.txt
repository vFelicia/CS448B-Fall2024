00:02 - hello fellow scratchers
00:04 - have your levels been feeling rather
00:05 - bereft of life well it's time to liven
00:08 - things up
00:08 - as we add adorable yet temptingly
00:10 - squishable enemies
00:12 - into our platformer i'm fifth patch and
00:14 - welcome back to part 8 of our series
00:16 - on creating a tiled scrolling platformer
00:18 - in scratch
00:19 - before diving into the code for those at
00:21 - the cutting edge
00:22 - following the tutorial as i'm sharing it
00:24 - you may not have enemy sprites and
00:26 - costumes in your project
00:28 - well do not fear i have updated my
00:30 - starter project on my griff patch tutor
00:32 - account
00:33 - with the new sprite and costumes and
00:35 - there is of course a link to it under
00:36 - the video
00:38 - if i jump there now you can see the new
00:39 - enemy sprite here contains a whole raft
00:41 - of exciting mario enemy costumes
00:44 - so drag the whole sprite into your
00:46 - backpack and then we are ready to begin
00:49 - so open your project from where we left
00:52 - off in episode 7
00:54 - and drag the enemy sprite out of the
00:55 - backpack into the sprite panel
00:58 - i'm going to reorder it to be the third
01:01 - sprite
01:02 - now if you're creating the sprite
01:04 - yourself then that's fine too
01:06 - it only contains costumes after all in
01:09 - this episode
01:10 - we are going to create the classic mario
01:12 - enemy goomba
01:14 - you'll need to be able to fall and move
01:16 - around colliding with the tiled level
01:19 - click into the mario sprite we put a lot
01:21 - of time into making these scripts
01:23 - and we certainly don't want to have to
01:25 - do it all over again for goomba
01:28 - luckily many of our scripts are
01:29 - perfectly reusable
01:31 - for those of you lucky enough to have my
01:33 - scratch browser extension installed
01:35 - scratch dev tools you can use the find
01:36 - bar to locate the scripts
01:38 - there's a link under the video but
01:40 - otherwise let's find them by hand
01:43 - firstly we want the define get tile xy
01:46 - script
01:46 - this is key to detecting collisions so
01:49 - drag it carefully until your mouse
01:50 - cursor is directly over the enemy sprite
01:53 - and drop it there next find the define
01:56 - fix collisions at point script
01:58 - we'll drag that over to being careful to
02:01 - let go directly over the enemy's sprite
02:03 - it can be quite tricky to see behind
02:05 - these huge scripts
02:07 - then we want the define fix collisions
02:09 - in direction script
02:11 - man i'm glad we can reuse all these and
02:13 - lastly we want the define
02:15 - move spritex script and the define
02:18 - movesprite y
02:20 - script awesome
02:23 - that covers a lot of the required sprite
02:25 - movement
02:26 - so let's click back into the enemy
02:28 - sprite and observe
02:29 - the dog's dinner scratch is made of
02:31 - laying out our copied scripts
02:33 - not the best so right click the
02:35 - scripting area and clean up the blocks
02:38 - there at least now they're readable
02:40 - let's just check they're all here
02:42 - we have the get tile at xy fix
02:44 - collisions at point
02:45 - fix collision in direction and move
02:48 - sprite x and move sprite y
02:50 - that's all of them great and look it's
02:53 - worth noting that scratch has kindly
02:54 - recreated all the variables that were
02:56 - used by these scripts
02:58 - specific to mario that's going to be
03:00 - very handy
03:02 - so we can get right down to business we
03:05 - intend to have
03:06 - many enemies on a level all at the same
03:08 - time so
03:09 - we of course will be using clones we
03:12 - therefore have to set things up with
03:14 - that in mind
03:16 - when green flag clicked set size to 200
03:19 - as we have been doing throughout and
03:21 - then hide this sprite
03:23 - this original sprite will be a dummy
03:25 - sprite from which all our other clones
03:27 - will be made
03:29 - now to identify this dummy sprite and
03:32 - what sort of enemy
03:33 - each other clone will be make a new
03:35 - variable named
03:37 - type for this sprite only and set it to
03:40 - the empty value
03:41 - this indicates that this is the dummy
03:43 - enemy we'll also set
03:45 - both speed x and speed y to zero
03:51 - now looking ahead to position goomba on
03:54 - the screen
03:54 - we'll need a new custom block named
03:56 - paint sprite
03:58 - run without screen refresh we code this
04:01 - in the usual way
04:02 - by first switching the costume too big
04:05 - to allow it to move off screen
04:08 - position the sprite using the go to xy
04:10 - of
04:11 - x minus camera x and y minus camera y
04:17 - then we'll switch the costume to the
04:18 - correct costume which
04:20 - we don't yet know so make a new variable
04:23 - named costume
04:24 - to hold the costume name or number then
04:26 - we can switch costume
04:28 - to that variable
04:32 - to trigger this paint sprite use a when
04:34 - i receive position
04:35 - tiles but to rule out the dummy sprite
04:40 - check if type is greater than the empty
04:42 - value
04:44 - only then do we paint the sprite oh man
04:48 - this
04:48 - is exciting i really want to test things
04:51 - but we haven't yet cloned any goombas
04:54 - now obviously we are going to want to
04:55 - work towards adding the goombas through
04:57 - the level editor
04:58 - but we are better off starting simple
05:00 - we'll add a when g key pressed
05:03 - g is obviously for gumba and then if
05:06 - type equals the empty value
05:08 - then create a clone of myself this is an
05:11 - important
05:11 - if condition because we only want the
05:13 - dummy enemy sprite to spawn the new
05:15 - clones
05:16 - this g key press will always trigger for
05:19 - each clone on the enemy sprite 2
05:21 - and they would be quite happy to create
05:23 - their own clones this leads to the
05:25 - common bug
05:26 - where clones create new clones and wow
05:28 - do they quickly multiply out of control
05:31 - this if will stop all of that so
05:34 - when i start as a clone set the clone's
05:36 - type to goomba
05:40 - also set the costume to 2. this is
05:43 - goomba's first costume number
05:46 - then set width and height to 14
05:49 - so that the collision scripts we copied
05:51 - over from mario know how large goomba
05:53 - should be
05:54 - for now we'll position this new goomba
05:56 - right at the same location as
05:58 - mario simply set x to the x
06:01 - of mario the off block is in the sensing
06:03 - category
06:04 - do make sure not to use x position of
06:08 - mario
06:08 - but just the plane x of mario instead
06:12 - we do the same for the y variable and
06:14 - bring in a point in direction
06:16 - direction of mario so that goomba faces
06:19 - the same way
06:20 - as us finish the clone off by using the
06:23 - paint sprite to set its position and
06:25 - costume
06:26 - and then use a show block oh thank
06:29 - goodness the moment has arrived
06:30 - we can run the project without waiting
06:33 - let's smash that g
06:34 - key to khloe nagumba and yay there he
06:37 - is right on cue let's drop a few more
06:41 - this is fun notice how the goombas can
06:43 - be happily scrolled off screen
06:45 - and when we return they are waiting for
06:47 - us exactly where we left them
06:49 - it's neat at least it's neat
06:52 - if you like legions of floating goombas
06:55 - personally
06:55 - i favor my goombas to be a little more
06:58 - lively perhaps we should proceed to get
07:00 - them to obey the law of gravity
07:03 - now before we can bring movement to our
07:05 - enemies our main mario game loop
07:07 - is in need of a minor upgrade click into
07:10 - the mario sprite and find the define
07:12 - game loop script now you're going to
07:15 - like this
07:16 - a number of people have asked how come
07:18 - my scratch has some extra features that
07:20 - you don't see in regular scratch
07:22 - well that's because i have the scratch
07:24 - add-ons and my scratch devtools
07:25 - extension installed
07:27 - and here's an option i added just two
07:29 - days ago that lets me add extra space
07:31 - around a script that i'm about to work
07:32 - on
07:33 - however just to be clear you do not need
07:35 - these tools to follow or complete
07:37 - any of my tutorials okay
07:40 - so we are going to create two new
07:42 - broadcast events
07:43 - the first we'll name move enemy and the
07:46 - second
07:46 - move player after enemy
07:51 - drop these in after the broadcast move
07:53 - player and before position tiles
07:56 - the order of these broadcasts is crucial
07:58 - for our program to run correctly
08:00 - this lets us move the player then move
08:02 - all the enemies
08:03 - and then perform more player movements
08:06 - and checks
08:07 - all in the same frame of our gameplay
08:09 - but across multiple sprites this was a
08:12 - real game changer when i learnt this
08:13 - trick
08:14 - we will use it now to split off the
08:16 - camera movement and final sprite
08:18 - positioning of the player
08:19 - and place it under the new when i
08:21 - receive new player after enemy
08:23 - like this enemies can now safely run
08:27 - their scripts before the level is
08:28 - scrolled
08:29 - just as the player already does this
08:32 - will help no end
08:33 - when we want to do sprite collisions
08:35 - later on
08:36 - i'll just test that things are still
08:37 - working after those game loop changes
08:40 - good let's switch back to the enemy
08:44 - sprite now
08:46 - and we'll look at making goomba fall to
08:48 - the ground
08:49 - find some free space and then drop in a
08:51 - new when i receive move
08:53 - enemy event receiver this sprite may or
08:56 - may not be a goomba
08:58 - so let's check if type equals goomba
09:03 - now make a new custom block naming it
09:06 - tick goomba
09:07 - run without screen refresh
09:10 - and drop the new block in the if
09:12 - followed by a stop this script
09:15 - so gravity we know what to do there
09:19 - change speed y by minus -1
09:23 - and then drop in our very own move
09:25 - sprite y block
09:27 - we can do that you betcha we can
09:30 - run the project and press g oh wow
09:33 - did you see what i saw i think you might
09:35 - have missed it hold on
09:36 - let me get more height oh yeah these
09:39 - goombas are hugging the floor
09:41 - like little floor hugging floor huggers
09:44 - that
09:44 - is most satisfying to see and a
09:46 - testament to reusable code
09:48 - so can goomba walking be as simple
09:51 - we want those little critters to have a
09:53 - bit of acceleration to their walk
09:55 - we'll assume that they are facing the
09:56 - direction they want to walk in so
09:58 - using an if else check if direction is
10:01 - greater than zero
10:02 - facing right if goomba's speed
10:06 - x is less than one one will be his top
10:09 - speed
10:10 - yep goomba is dog slow but they're cool
10:12 - don't worry
10:14 - then we change speed x by 0.1
10:18 - otherwise they must be facing left so if
10:20 - speed x
10:21 - is greater than minus 1 negative 1
10:25 - then change speed x by negative 0.1
10:29 - nice now bring in our move sprite x
10:31 - block to handle the movement and tile
10:33 - collisions for us
10:34 - oh yes we can run the project again
10:37 - pressing g
10:38 - to drop a goomba and off he toddles if i
10:40 - drop another one while facing left
10:42 - he goes off that way too so what if i
10:45 - drop one by a wall
10:47 - well he stops that's not quite right
10:50 - but he does look good falling off a
10:52 - cliff
10:53 - i like that hold on a sec i just noticed
10:56 - my mario sprite is behind the goomer
10:58 - sprite
10:59 - we can fix that at any time by going
11:01 - back into the project editor and
11:02 - dragging mario on the stage
11:04 - good so let's ensure that goomba
11:08 - does not get stuck while walking into
11:10 - walls instead we want him to change
11:12 - direction click back into the enemy's
11:14 - sprite and locate the define
11:16 - move sprite x we're going to have to
11:19 - make a minor change to this copied
11:21 - script
11:21 - specific to the enemy sprite this is
11:23 - where we have detected a collision
11:25 - where a solid is greater than zero we
11:28 - can simply add a set
11:30 - turn clockwise by 180 after setting the
11:33 - speed x to zero
11:35 - this will turn goomba right around
11:38 - testing this simple change
11:39 - i'll run over here and spawn a gumba
11:41 - expecting them to now turn around
11:43 - at the wall yup perfect and look all his
11:47 - friends want to join in the fun too
11:49 - i'm not surprised next up we will work
11:52 - on goomba's walking animation
11:54 - find the define tick goomba script and
11:57 - make a new variable named
11:59 - frame for this sprite only after the
12:01 - goomba moving code we change frame by
12:04 - 0.25 that will mean it takes 4 frames to
12:08 - change costume
12:09 - umber only has two frames in his walk
12:12 - cycle
12:13 - set the costume variable to two goomba's
12:15 - first costume is number two
12:17 - and then add the floor of
12:20 - frame mod 2. the mod 2
12:23 - keeps us within goomba's two frames of
12:26 - animation
12:27 - and the floor rounds down to the whole
12:28 - number
12:31 - run the project and we can confirm that
12:33 - it's looking good
12:35 - yep goomba is doing the goomba shuffle
12:37 - excellent
12:38 - but you know one better than the goomba
12:41 - shuffle is the goomba squish
12:43 - yep it's time to get mario some exercise
12:46 - and jump on a few heads
12:48 - switch to the mario sprite and find the
12:50 - when i receive move player
12:52 - script before we move mario right at the
12:55 - start of a game frame
12:56 - we want to check whether mario is primed
12:59 - to squish enemies
13:01 - in general this is when we are moving
13:03 - downwards
13:04 - add in an if else block and check if
13:07 - falling is greater than two
13:09 - that occurs as soon as we leave the
13:11 - ground and also
13:13 - then check that speed y is less than
13:16 - negative one
13:17 - this is triggering on downward movements
13:20 - only
13:21 - make a new variable named bop y for this
13:24 - sprite only
13:26 - and set bot y to y
13:30 - otherwise if we are not falling down set
13:33 - bop y
13:34 - to the empty value
13:38 - a quick test shows how bop y is set only
13:41 - when we are traveling downwards now
13:43 - so why do we set this at the start of
13:45 - the game frame before mario moves
13:48 - the reason is that after mario falls
13:50 - down it's possible
13:51 - that we will actually impact the ground
13:54 - before we check the collisions with
13:55 - goomba
13:56 - we really don't want that so with that
13:59 - setup
13:59 - switch back into the enemy sprite and
14:01 - scroll to the bottom of the define tick
14:03 - goomba script
14:05 - now we check if goomba is touching mario
14:08 - we must then decide if it is mario
14:10 - or goomba who is to lose a life add in
14:13 - an if else
14:14 - and check if bop y of mario
14:19 - is greater than the empty value this
14:22 - represents a mario win
14:24 - so goomba should be squished start by
14:27 - pointing in direction 90.
14:29 - set frame to 0 and i'll set type
14:32 - to squish all squished enemies will be
14:36 - identified as such
14:38 - now set the costume variable to the
14:39 - words goomba
14:41 - squish we can look up this costume name
14:45 - in the costumes list and just copy it
14:47 - from there to make sure it's exactly
14:49 - right
14:51 - okay we are not going to handle mario
14:53 - losing a life in this episode
14:55 - so let's just leave the else empty for
14:58 - now we'll test the scripts as they are
15:01 - drop a goomba and jump squish
15:04 - excellent and now a few more to squish
15:07 - squish squish squish
15:09 - working great i'm leaving rather a trail
15:11 - of destruction behind me
15:13 - these goomba remains should not be left
15:15 - to linger this long
15:17 - move over to the when i receive move
15:19 - enemy script and if type equals squish
15:24 - then we change frame by one
15:27 - and then once frame is greater than 10
15:32 - then delete this clone
15:35 - we can test this and when we dispatch a
15:37 - goomba
15:38 - he now only hangs around for a very
15:40 - short period of time before leaving this
15:42 - world for a better place
15:44 - to finish off this episode we should get
15:46 - mario to bounce off goomba's head
15:48 - that gives the player a nice feedback
15:50 - that we've pulled off a successful move
15:53 - back in the define tick goomba script we
15:56 - can create a new variable named
15:58 - bounce player for all sprites and when
16:01 - we squish goomba
16:02 - we also set bounce player to five
16:05 - we're going to use this to automatically
16:07 - simulate the player jumping for 5 frames
16:10 - after hitting the goomba now click into
16:14 - the mario sprite
16:15 - and under the when i receive move player
16:17 - after enemy
16:19 - we insert an if before the move camera
16:21 - block
16:22 - check if player bounce is greater than
16:25 - zero
16:26 - if it is then we change bounce by -1
16:31 - and then trigger a jump by firstly
16:33 - setting speed y
16:35 - to 13 also we set falling to 2
16:40 - so that we're counted as off the ground
16:42 - and then lastly set
16:43 - jumping to 1. keeping the jumping
16:46 - variable low will allow us to continue
16:48 - jumping
16:48 - up higher if we hold the jump key down
16:51 - after bouncing on goomba's head
16:53 - right that's it we're ready to test
16:57 - run the project drop a goomba and jump
17:00 - on his head
17:01 - yep did you see us bounce cool
17:04 - how about jumping high off a goomba
17:07 - woohoo
17:08 - that was higher hold on let me find
17:10 - somewhere i can test this extra height
17:12 - yeah this platform is too high for a
17:14 - standard jump but now if i spawn a
17:17 - goomba
17:17 - and then jumping on his head now brings
17:19 - the platform into reach
17:21 - that's great it opens up exciting level
17:23 - design
17:24 - especially for reaching secret passages
17:28 - well things are looking great we've
17:30 - managed to spawn many
17:32 - simple enemies in our game but we still
17:34 - have some work ahead of us
17:36 - in the next exciting episode we will
17:38 - work on bringing the enemies
17:40 - into the level editor and hopefully how
17:42 - to also add them to our save codes we
17:46 - also really need to balance things out
17:47 - for poor goomba
17:48 - and allow mario to lose a life too so
17:51 - please do keep me updated with how your
17:54 - projects are coming along
17:55 - and what features you are most looking
17:57 - forward to covering in future episodes
17:59 - if you've enjoyed this tutorial then
18:01 - please smash the like button
18:02 - and don't forget to subscribe to the
18:04 - channel to avoid missing my next
18:06 - exciting video
18:07 - thank you for watching and scratch on
18:12 - guys
18:14 - you