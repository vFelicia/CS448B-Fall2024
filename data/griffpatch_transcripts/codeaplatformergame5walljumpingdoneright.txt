00:02 - hello fellow scratchers are you ready
00:04 - for some wall jumping action i'm griff
00:07 - patch and i'm so excited to get started
00:09 - today on part five of our classic
00:10 - platformer series because we are adding
00:13 - not your bog standard scratch wall
00:15 - jumping where players go bouncing right
00:17 - at walls no indeed we'll be doing things
00:19 - the right way with superb wall sliding
00:22 - enhanced jumping and epic parkour style
00:24 - jumping between walls this is going to
00:27 - make your project so fun to play you
00:29 - wait and see
00:30 - well what are we waiting for let's get
00:33 - scratching
00:35 - picking up from where we left off on
00:36 - episode 4 save your projects as a new
00:38 - copy and change the name
00:41 - there episode 5 cool we'll begin by
00:45 - upgrading our jumping scripts the first
00:48 - jumping mechanic we're going to address
00:49 - is the perpetual jumping
00:52 - scroll in the code to find the define
00:54 - controls up and down script so as i hold
00:57 - down the jump key without releasing it
00:59 - my player bounces around like a jack in
01:02 - the box this can be kind of fun but it
01:04 - doesn't offer us much control and makes
01:06 - jumping far less purposeful to improve
01:09 - this we'll make it so that each jump
01:11 - requires an individual press of the jump
01:13 - key
01:15 - we can accomplish this by adding a new
01:17 - variable
01:19 - naming it jumping
01:22 - for this sprite only
01:26 - then with an and block we keep the check
01:29 - for falling being less than three the
01:31 - number three here means we can jump as
01:33 - long as we've touched the ground within
01:34 - the last three frames in other words
01:36 - very recently indeed
01:38 - but now we'll also require the jumping
01:40 - variable to equal zero
01:43 - then as soon as we jump we set jumping
01:46 - to one
01:48 - this will stop us jumping again until
01:50 - the variable goes back to zero
01:52 - if we test that we do indeed get just
01:55 - one good jump and then
01:57 - nope like a chocolate frog we're done no
02:00 - more jumping for us and here's the trick
02:02 - we need to swap this if for an if else
02:05 - block
02:08 - make sure the change speed y is
02:10 - underneath
02:11 - and the jump key press is here
02:15 - and the if goes back in the then branch
02:18 - okay sweet because now this else only
02:20 - triggers when the jump key is released
02:24 - so we can set jumping back to zero all
02:26 - ready for a fresh new jump let's test
02:29 - this now
02:31 - so i hold the jump key we get a single
02:34 - jump and the jumping variable stays on
02:36 - one when we release the jump key the
02:38 - jumping variable goes back to zero and
02:40 - then we are free to jump again excellent
02:42 - this is a very nice feature to have in
02:44 - your game but we have a problem did you
02:47 - notice our jumping is no longer as
02:49 - powerful as it used to be we're not
02:51 - getting the same height we used to get
02:53 - this is because in the past we not only
02:55 - set speed y to jump force when the jump
02:58 - key was first pressed but also kept
03:00 - doing this until the falling was no
03:02 - longer less than three
03:04 - this gave us a few extra frames of full
03:07 - jumping power it was nice as it also let
03:10 - us change how high we jump by holding
03:11 - the jump key slightly longer
03:14 - well we still want this feature let's
03:16 - try it to put it back in to do this
03:18 - we'll separate the jump trigger this
03:21 - script from the actual jumping action
03:23 - pull out the set speed y block we'll use
03:26 - this in a moment
03:28 - in its place we'll set falling to three
03:31 - every jump will start on a consistent
03:34 - falling value now
03:35 - now bring in a new if block
03:38 - we'll check for when we've started a
03:40 - jump
03:42 - that is when jumping is greater than
03:45 - zero
03:46 - but we want a limit on how long we jump
03:49 - for so with an and block also check for
03:52 - jumping being less than
03:57 - six
04:00 - so we can change jumping by one
04:05 - and finally bring back the set speed y
04:07 - block to power the player upwards
04:10 - shall we give that a test
04:12 - you should see us getting the full jump
04:14 - power for up to six frames as long as we
04:17 - keep the jump key held down however by
04:19 - tapping the jump key we only get one or
04:22 - two frames of thrust and the jump is
04:24 - much shorter excellent work this is a
04:26 - lot more stable than the system we had
04:28 - before
04:30 - before we proceed let's be good coders
04:33 - and wrap this six value in a variable
04:35 - constant make a new variable naming it
04:38 - jump duration
04:41 - use it in place of this number six
04:46 - then find the when green flag clicked
04:48 - wow our scripts are really building up
04:51 - and set jump duration to
04:54 - six
04:56 - as always don't just try one value why
04:59 - not stuff in some over the top value
05:01 - like uh 20 and try it out here we go
05:07 - that is one crazy jump that's hilarious
05:10 - i can still do those smaller jumps but
05:12 - if i hold down whee it's more like i
05:15 - don't know a jetpack joyride or
05:17 - something how fun
05:19 - okay i'll stop playing set that back to
05:22 - six and hide those variables
05:26 - let's move on this next design choice
05:28 - may be a little bit more contentious in
05:31 - many scratch platformers when the player
05:33 - jumps releasing the walk key while in
05:35 - the air causes them to slow down and
05:37 - stop even in mid-flight it's not very
05:40 - true to life but more than this for our
05:42 - wall jumping to work well we need the
05:45 - player to be able to soar through the
05:47 - air to pull off those awesome stunts
05:50 - find with me the define controls left
05:52 - and right scripts
05:56 - at the bottom of the script here we are
05:58 - slowing down the player movement this is
06:00 - fine for when we are on the ground but
06:02 - not so fine when in the air
06:05 - scroll back up to where we check for key
06:07 - x being equal to zero
06:10 - that is when the left and right arrow
06:12 - keys are not pressed down
06:14 - drag in a new if right at the top
06:21 - check for when we are in the air
06:24 - if falling is greater than two
06:27 - so we are in the air and not pressing
06:29 - left and right so how do we stop
06:31 - ourselves slowing down so much i'm going
06:34 - to duplicate the slowing down script the
06:36 - set speed x to speed x multiplied by and
06:39 - bring it up here
06:40 - but remove resistance this has a value
06:43 - of 0.8 in my project i'm going to use a
06:46 - value much closer to one
06:48 - say 0.98
06:51 - to slow the player down far less when in
06:53 - the air
06:54 - as always try some different values in
06:56 - here to have some fun
06:57 - finally we stop the script to prevent us
07:00 - slowing down further
07:02 - press the green flag i'm going to do the
07:04 - same jump releasing the run key
07:07 - oh wow yeah i'm not falling straight
07:09 - down anymore nope my player continues to
07:12 - sail onwards through the air until we
07:14 - land safely on the other side
07:16 - or slip off
07:18 - i guess we have to be a lot more careful
07:20 - with our jumps now i'm overestimating
07:22 - how much speed i need because i'm so
07:24 - used to just letting go of the key to
07:26 - slow down perhaps you may want to use a
07:28 - lower value than 0.98 after all
07:31 - this certainly is starting to make the
07:32 - game more of a challenge anyhow but as
07:34 - with any game the more you play it the
07:36 - more you get good at it and soon enough
07:38 - you've got it mastered
07:40 - right moving swiftly on
07:43 - wall sliding this is where the player
07:45 - can when in contact with a wall slowly
07:48 - slide down it
07:50 - we have to be careful to only activate
07:52 - this behavior at the right moment for
07:55 - example simply walking into a wall
07:57 - should not be enough instead we need to
08:00 - be in the air when the contact occurs
08:03 - and a slide shouldn't be triggered by
08:04 - just our head or feet touching a
08:06 - platform no we'll say it should be a
08:09 - central collision around the area of our
08:11 - player's waist
08:13 - lastly the slide must end when the
08:15 - player touches the ground or when they
08:17 - lose contact with the wall
08:19 - okay so we detect wall collisions in the
08:21 - clydex slope or wall script
08:24 - this seems a good place to begin
08:26 - make a new custom block for this naming
08:28 - it check can wall slide
08:33 - run without screen refresh
08:36 - just move it over here and drop the new
08:38 - block in as the first block in the clyde
08:40 - x script great so let's craft this new
08:43 - custom block
08:46 - we'll first rule out when we don't want
08:49 - a wall slide
08:50 - if falling
08:52 - is less than
08:54 - two
08:57 - then we're on the ground so no sliding
08:59 - is possible to record this fact make yet
09:02 - another new variable yeah i'm sorry
09:04 - about this it happens
09:06 - naming it wall slide for this sprite
09:09 - only
09:10 - so we're on the ground we set wall slide
09:13 - to
09:14 - zero
09:18 - then since we are not sliding stop this
09:20 - script
09:24 - next we want to check whether we are in
09:26 - the contact with a suitable wall for
09:28 - sliding down
09:29 - for this we'll use a new hitbox
09:32 - set costume to
09:35 - okay what do we have available
09:37 - look at the costumes hitbox version 2
09:40 - was costume 21
09:42 - and the very next one
09:45 - it's called hitbox wall slide
09:47 - that name gives it away doesn't it so
09:50 - look at how i've positioned it if i
09:52 - overlay it with the scratch cat you can
09:54 - see it's positioned to one side
09:57 - kind of like an arm reaching out to the
09:59 - right
10:00 - it's narrow so that it won't trigger for
10:02 - platforms above or below us but only
10:04 - when they're right in front
10:06 - you can move this around to find your
10:08 - sweet spot but this should do for right
10:10 - now
10:11 - back to the scripts switch the costume
10:14 - to hit box wall slide we just need to be
10:18 - careful though this hitbox requires us
10:20 - to set rotation style to left and right
10:24 - otherwise it will only detect walls to
10:25 - the right of us and that would be no
10:28 - good
10:29 - next check touching solid if the hitbox
10:32 - touched a wall in front of us then we
10:34 - now could test if touching is greater
10:36 - than zero but
10:38 - why not just set wall slide to the value
10:40 - of touching directly if there's a wall
10:42 - in front of us then wall slide will be
10:45 - set to 1 otherwise a 0 means no wall
10:47 - sliding
10:49 - nice
10:50 - with that done we should return the
10:52 - costume to hitbox version 2
10:57 - and the rotation mode back to don't
10:59 - rotate
11:01 - okay click the green flag and let's run
11:03 - into a wall
11:05 - good the wall slide variable stays at
11:07 - zero
11:09 - next we jump aha the wall slide variable
11:12 - changes to a one that's great oh but
11:15 - wait it remains on one long after we've
11:18 - moved away from the wall well not to
11:20 - worry we'll address this in a second as
11:23 - we code up the wall sliding scripts
11:26 - back to the code and find the define
11:28 - controls up and down this time
11:30 - the last block in this script is
11:32 - handling gravity this will be a great
11:35 - place to implement the wall sliding as
11:36 - we want to slow down the player as they
11:38 - slide down a wall
11:40 - if wall slide
11:42 - is greater than
11:44 - zero
11:46 - then we are indeed walls sliding but we
11:49 - should check again in case as we saw the
11:51 - wall slide has ended
11:54 - use another check can wall slide block
11:57 - now to slow the player down while on the
11:59 - wall
12:00 - set speed y
12:03 - to speed y multiplied by
12:08 - 0.6
12:10 - yet another value to play around with
12:12 - the closer to zero this value is the
12:14 - slower our player will slide down the
12:16 - wall
12:18 - testing
12:19 - so we jump into the first wall splat yes
12:22 - we have a very sticky face apparently
12:25 - brilliant
12:26 - and on this wall
12:28 - oh nice do you see how the wall slide
12:30 - finishes as we lose contact with the
12:32 - wall
12:33 - that's just what we were after
12:35 - but hold on there is an issue look what
12:38 - happens when i try to jump up a wall
12:40 - that i'm touching
12:42 - i can only manage a tiny jump
12:45 - that's no good the wall jump code is
12:48 - slowing down my upwards movement as well
12:50 - as my sliding down the simplest remedy
12:53 - is to wrap the set speed y in an if and
12:56 - check for speed y
12:58 - being less than
13:03 - zero
13:04 - that way it won't slow down any upwards
13:07 - movements and i should be free to jump
13:09 - up the wall still
13:11 - cool here we go jump up against the wall
13:14 - and now the upwards motion is restored
13:17 - and only the downward motion is slowed
13:20 - excellent
13:21 - so any more issues
13:24 - actually just one it's easy to show you
13:27 - if i make a little change to the level
13:28 - costumes
13:31 - we need one of the walls to be rotated
13:34 - to form a very steep incline
13:38 - okay now do you see how when i wall
13:40 - slide down this the player is being
13:42 - pushed away from the wall
13:44 - this is when i'm not pressing any keys
13:47 - do you know why
13:49 - find the define controls left and right
13:51 - scripts again
13:53 - so this is the code that lets us travel
13:55 - through the air without slowing down
13:58 - we just added this
13:59 - now the condition for this occurring is
14:02 - when we are not on the ground but it
14:05 - doesn't include when we are wall sliding
14:07 - the result is that we can now drift away
14:10 - from the wall too easily
14:12 - still easy to resolve add an and with
14:16 - the falling check on the left and now
14:18 - introduce a check for wall slide being
14:20 - less than
14:22 - one
14:23 - that ensures the script that keeps us
14:25 - moving in the air no longer applies when
14:27 - walls sliding
14:29 - just give it a test and ensure that we
14:31 - fixed that issue
14:32 - yep great
14:34 - the real joy of this platforming engine
14:36 - is that we are able to pull off these
14:38 - great moves even on uneven walls like
14:41 - this one it should mean we'll be able to
14:43 - design some really cool levels
14:45 - all we need to do now to complete this
14:47 - slide is to improve the visuals check
14:49 - out our costumes again
14:51 - scroll down to costume 19 it's named
14:54 - hang on 0-1
14:56 - this one is an interesting costume as
14:59 - you can see it's designed to give the
15:00 - impression of holding or sliding down a
15:02 - surface to the right
15:04 - interestingly that this is the only
15:06 - costume to be facing to the left
15:09 - but this is very purposeful remember as
15:11 - we touch a wall we will be facing
15:13 - towards it so now switching to this
15:16 - costume makes it appear to face away
15:18 - from the wall
15:19 - we'll give this a go and you'll see what
15:21 - i mean
15:22 - find the define set costume script
15:25 - we deal with all the player costumes in
15:27 - here
15:28 - right away after the first set rotation
15:30 - style check if
15:34 - wall slide is greater than
15:37 - zero
15:38 - this means we are wall sliding
15:41 - so switch costumes to hang on zero one
15:47 - and then stop this script we are done
15:50 - okay let's go
15:52 - jump against the wall
15:54 - and look at this slide oh it's beautiful
15:57 - i'm loving how this looks
15:59 - it's worth noting if you are still using
16:02 - a cube for your player costume then you
16:04 - may not need a new costume for wall
16:05 - sliding at all simply leave the set
16:08 - costume scripts as they were and it will
16:10 - look just fine
16:12 - so my goodness this is it we are ready
16:16 - to add the final step the actual wall
16:18 - jump itself for this we need to find our
16:21 - jumping code again
16:23 - it's in the define controls up and down
16:25 - script
16:27 - the first if where we are jumping is the
16:30 - trigger for a jump
16:31 - now we will add another one for wall
16:34 - jumping
16:35 - duplicate the first if block and place
16:38 - it above the others so it's the first
16:40 - action in the keypress script
16:42 - now rather than triggering when we jump
16:44 - from touching a surface that's what the
16:47 - falling lesson 3 does we look for a wall
16:49 - slide being greater than
16:52 - zero
16:53 - yeah this triggers a jump while we are
16:56 - sliding down a wall
16:59 - we start by setting wall slide back to
17:02 - zero since we are jumping off the wall
17:04 - now
17:05 - we will have to do more than this though
17:07 - but let's just give it a test to see how
17:09 - it looks right now
17:10 - if i begin a wall slide and then jump
17:13 - great did you see that i was able to
17:16 - jump but i went straight up and also got
17:19 - turned around to face back to the wall
17:21 - once more
17:22 - a proper wall jump should have had me
17:24 - launching away from the wall surface not
17:27 - bounding right up it
17:29 - right so let's turn the player around by
17:32 - 180 degrees that will have them facing
17:34 - the correct way away from the wall
17:37 - then
17:38 - launch them away from the wall by
17:40 - setting speed x to um
17:43 - okay we'll take the current direction
17:45 - that's 90 for right and minus 90 for
17:47 - left and divide that by 90. that will
17:50 - give us either a 1 or a minus 1
17:52 - depending which way they are facing then
17:54 - we are free to multiply that by our
17:56 - desired jump speed 7 will do i think oh
18:00 - yeah i am looking forward to this hit
18:02 - the green flag
18:04 - and woo hoo look at us go now jumping
18:08 - off a wall launches us across the level
18:10 - away from the wall and what's more if we
18:12 - land on the opposite wall we begin a new
18:14 - wall slide
18:16 - and can jump right back again that's
18:18 - really neat don't you agree
18:20 - so let's just check is there anything
18:22 - wrong with this
18:24 - okay yeah if we pull back towards the
18:27 - wall as we jump off it we can still
18:29 - change direction and land back on the
18:31 - same wall
18:32 - this lets us wall jump up and up a
18:35 - single wall of our game
18:37 - this is perhaps a gaming mechanic you
18:39 - actually quite enjoy in your game so
18:41 - don't feel bad if you want to keep it
18:43 - just like this but in our tutorial we
18:46 - are striving for excellence and as such
18:48 - we want to stop the player from pulling
18:50 - off this stunt
18:52 - to fix things we are going to force the
18:54 - player to jump further away from the
18:56 - wall before we allow them to turn back
18:58 - again
18:59 - make a new variable naming it long jump
19:02 - for this sprite only
19:06 - as soon as we've jumped away from the
19:08 - wall here set long jump to
19:11 - 12. so for a count of 12 game frames
19:15 - we'll stop the player changing their
19:16 - direction of travel
19:18 - find the define controls left and right
19:20 - scripts again
19:22 - stick in an if block right at the top
19:27 - and if
19:28 - long jump
19:31 - is greater than
19:32 - zero
19:34 - we want to prevent all changes of
19:36 - direction so start by changing long jump
19:39 - by -1 to count it backwards down to zero
19:42 - and then simply stop this script that
19:45 - will stop any further changes to the
19:47 - player's direction
19:48 - well that was a bit too easy right let's
19:51 - give it a test smash the green flag one
19:54 - last time so now i'm jumping off this
19:56 - left wall and i'm trying to pull back
19:58 - and no the game is having none of it i
20:01 - am completely unable to cheat my way
20:02 - back onto the original wall i jumped
20:04 - from
20:05 - but if i go with it and let myself land
20:08 - on the opposite wall then i'm quite free
20:10 - to wall jump back once more and again
20:12 - and again to jump up these walls in
20:14 - style yes this is just perfect for
20:17 - creating some epic level designs but
20:20 - just before we finish can we just be
20:23 - good coders and update our define reset
20:26 - and begin level script we have a few new
20:28 - variables that we should be resetting as
20:30 - the level begins
20:32 - set wall slide to zero
20:36 - set jumping
20:37 - to zero
20:39 - and set long jump to zero
20:43 - stuff them in after the rest of the set
20:45 - blocks
20:48 - great stuff so with that our episode is
20:52 - done time to start playing around with
20:55 - your level designs try to build out a
20:57 - fun park or course to jump your way
20:59 - across i simply cannot wait to see what
21:01 - you guys can put together i've included
21:04 - a link under the video to the scratch
21:05 - studio where you can submit your
21:07 - projects from episode 5. it's so fun
21:10 - looking through them and i hope to
21:12 - include a few in the next video to show
21:14 - off what you've been achieving they're
21:16 - already blowing my mind so go to town
21:19 - and let me see what you can do so
21:21 - awesome
21:22 - along with that we've also got some
21:24 - really exciting episodes ahead of us the
21:27 - fact we can now jump up and climb so
21:29 - high it's just begging us to add up and
21:31 - down scene changes but we also need
21:34 - those moving platforms dead excited for
21:36 - that and don't forget collectibles
21:38 - enemies danger sprites so much to look
21:41 - forward to
21:42 - okay well i do hope you've enjoyed
21:44 - watching today do smash the like button
21:46 - and don't forget to subscribe to my
21:48 - channel to catch the latest videos if
21:50 - you're a loyal fan or an educator then
21:52 - please consider joining the channel
21:54 - membership which helps support the
21:56 - channel further you can also get extra
21:58 - perks like prioritized comments channel
22:00 - emoji early access to videos and even
22:03 - the finished tutorial projects
22:05 - themselves how about that
22:07 - so thank you for watching have a great
22:10 - week ahead and scratch on guys
22:13 - [Music]