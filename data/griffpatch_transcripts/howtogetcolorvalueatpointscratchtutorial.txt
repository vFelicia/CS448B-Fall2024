00:01 - hello fellow scratchers
00:04 - question how do we detect the color of a
00:06 - pixel in scratch
00:09 - now sure if we know the color we are
00:11 - looking for we can just ask scratch
00:13 - directly using a tiny costume as a color
00:15 - detector position it at the mouse
00:17 - pointer when the space is pressed and
00:20 - then if we are touching the exact orange
00:22 - color we say orange otherwise
00:26 - excellent that works a treat and we can
00:29 - extend it to add in many more colors but
00:32 - what if we do not know what colors to
00:34 - expect did you know that scratch can
00:36 - display over 16 million unique colors i
00:39 - don't suppose you fancy adding an if
00:41 - check for each and every one right no
00:44 - me neither but there are times when we
00:47 - could really do with being able to do
00:49 - this like if i wanted to pick a color
00:51 - from an image and draw with it we'll be
00:53 - coding that up later today or if you
00:55 - want to scan and manipulate not a single
00:58 - pixel of color but an entire screen
01:00 - now things start to get wild just wait
01:03 - until episode 2 where i will show you
01:05 - some amazing new ideas that have
01:07 - recently revolutionized full screen
01:09 - image scanning in scratch it's
01:11 - mind-blowing but we must start simple
01:14 - are you ready for this
01:16 - great let's get scratching
01:19 - so a little bit of red green blue color
01:21 - theory take a look at this little pen
01:23 - project feel free to copy it and have a
01:25 - play i'll put a link to it in the video
01:27 - description you'll see we have these
01:30 - three sliders one for each of the red
01:32 - green and blue color values now when
01:35 - mixed together we can create any one of
01:38 - the 16 million different colors that
01:40 - scratch is capable of displaying
01:42 - you'll see the maths expression for
01:44 - calculating the combined color value is
01:46 - given here
01:47 - we add together the three values of red
01:50 - green and blue
01:51 - but ensure the first multiply red by 65
01:56 - 536
01:58 - that happens to be 256 squared and green
02:01 - by 256
02:03 - and the blue stays as it is
02:05 - once summed the resultant colour value
02:08 - can be used in the set pen colour block
02:10 - as we have here or as it happens in a
02:13 - touching colour block too
02:15 - and that is going to be very handy
02:18 - indeed
02:20 - so back to our color detection project
02:23 - we have this tiny sprite its costume is
02:26 - just a simple two by two pixel square
02:28 - centered on the drawing canvas
02:30 - when the space key is pressed this tiny
02:32 - costume goes to the mouse pointer ready
02:35 - to check for touching colors
02:37 - now we can use an if touching color
02:40 - block but instead of using the color
02:42 - picker to choose the color we can create
02:45 - a new variable named color
02:48 - for this sprite only
02:50 - and drop it right into the touching
02:52 - color block like that
02:54 - funky
02:55 - we start by setting this color to zero
02:58 - and then use a repeat loop to cycle
03:01 - through all possible colors 16 million
03:05 - right
03:06 - but we need to be accurate here multiply
03:08 - together the 256 shades of red with the
03:12 - 256 shades of green and the 256 shades
03:16 - of blue
03:18 - gosh yes 16 million 777
03:22 - thousand
03:23 - 216 colors to test against wow
03:27 - well here goes nothing drop in the
03:29 - touching color check and each time
03:32 - around this loop we change color by one
03:36 - so as to keep trying the next color
03:39 - that's the loop sorted let's drop in a
03:41 - say block for when we find the matching
03:44 - color
03:45 - why not just say the colour value for
03:47 - now
03:47 - and to finish it off we stop this script
03:51 - there's no point continuing this huge
03:53 - loop if the desired colour has already
03:55 - been found
03:56 - okay shall we give this a test
03:59 - mouse over the red hat
04:01 - and press space
04:04 - and it's off
04:05 - you can see the color variable simply
04:07 - flying through the possible colour
04:09 - values
04:10 - nothing has matched yet
04:18 - okay i'm skipping the video forwards
04:22 - and there success this was colour value
04:26 - 15 million seven hundred and thirty
04:28 - eight thousand eight hundred and ninety
04:30 - six haha and it took scratch a whole 59
04:34 - seconds to find it
04:36 - gotta say i'm very pleased we did find
04:39 - the color but a little disappointed at
04:42 - how long it took but gosh what could we
04:45 - do to speed this up
04:47 - well
04:48 - knowing how scratch's color detection
04:50 - works can guide us to some sweet
04:53 - optimizations
04:54 - it turns out that although scratch can
04:56 - display 16 million colors it cannot
04:59 - actually detect all 16 million of them
05:01 - at all it's not that sensitive therefore
05:04 - testing every color is actually wasteful
05:06 - and unnecessary to show this you'll find
05:10 - that we can still detect every color
05:11 - even if we skip along by 16 at a time
05:16 - let's give that a go
05:18 - trying a green
05:21 - oh wow did you see how fast that was
05:24 - perhaps i was lucky with the color try
05:26 - again with a bright red
05:29 - okay yeah do you think that was like
05:32 - four seconds or whatever it was it was
05:35 - much faster than the full minute it took
05:37 - last time
05:38 - so skipping is good for us
05:41 - so with that initial success and before
05:43 - we go any further let's make our scripts
05:45 - a little more official make a new custom
05:48 - block
05:49 - naming it get color and make sure to
05:52 - tick the run without screen refresh box
05:56 - we'll drop everything from the set color
05:58 - block under the new define script and
06:01 - drop the new get color block from where
06:03 - they came
06:04 - splendid
06:06 - and now that we are getting color values
06:08 - back from our get color script it would
06:10 - be nice to be able to see the color that
06:13 - we've picked
06:14 - we can do this by enabling the pen
06:16 - extension
06:18 - usefully the set pen color block accepts
06:20 - the same color values as the touching
06:22 - color block so we drop that variable in
06:25 - here to match the found color
06:28 - so we can set the pen size to 50. i want
06:31 - to draw a circle at the top right of the
06:33 - screen using the picked color
06:35 - go to x of 210 and a y of 150 should be
06:40 - good
06:41 - then we pen down to draw and straight
06:43 - away pen up
06:45 - so if i click the script
06:47 - there there we go it's drawn in the
06:49 - color we last picked
06:50 - and since we can now see that color we
06:52 - don't need this say block any longer
06:58 - whoops don't forget to join up these
07:00 - scripts
07:01 - and then let's give that a test
07:08 - ah super cool we can click around and
07:11 - yeah the colors are definitely the right
07:13 - ones it's nice to be able to confirm
07:15 - that now
07:17 - so back to our get color script
07:21 - when we skip by 16 here what we are
07:23 - doing is actually skipping just the blue
07:26 - color channel
07:27 - but the green and red channels are just
07:29 - as viable for skipping so i'm really
07:32 - positive we can get this running faster
07:34 - still
07:35 - but skipping the other channels is not
07:36 - quite so straightforward to explain
07:38 - without perhaps starting this script
07:40 - over again
07:42 - so
07:42 - create three new variables red for this
07:45 - sprite only
07:48 - green for this bright only
07:52 - and blue also for this sprite only
07:59 - we begin by setting red to zero
08:04 - and then we're going to loop through all
08:07 - 256 values of red
08:09 - with a change read by one
08:15 - cool
08:16 - we can do the same for green
08:22 - and again for blue
08:27 - great so let's put these together begin
08:31 - with the red outer loop
08:33 - then the green loop goes inside but
08:36 - above the change red block
08:38 - and blue inside that again above the
08:41 - change green block
08:43 - a loop within a loop within a loop
08:46 - if we run that we can see scratch
08:48 - blasting through all possible values of
08:50 - red green and blue and this will be once
08:53 - more cycling through all 16.7 million
08:55 - combinations of the three colors
08:58 - but the color variable is not yet being
09:01 - calculated we need this for our color
09:04 - checks so we need that color maths
09:07 - start by setting color to blue
09:10 - to this we then add
09:15 - green multiplied by 256
09:25 - and lastly to that we add the red
09:27 - variable
09:30 - multiplied by
09:32 - 256 multiplied by 256
09:35 - that's 256 squared or 65 536 if you like
09:41 - and that's it that will give us our
09:43 - color value so this will test the color
09:45 - as it was before
09:47 - but note we were previously skipping by
09:50 - 16 and now we've gone back to adding
09:52 - only one to our blue variable so this is
09:55 - why i said previously we were only
09:57 - skipping blue values blue is the
09:59 - innermost color in this loop
10:01 - once again then we should change blue by
10:04 - 16 and of course if we are skipping by
10:06 - 16 each time we don't want to be
10:08 - repeating 256 times any longer work out
10:12 - how many times to repeat by by dividing
10:14 - this 286 by the skip value 16
10:19 - and safely drop the detection script in
10:21 - before we change blue
10:24 - cool
10:25 - let's run the project
10:27 - now pressing space on a red color and we
10:30 - wait
10:31 - see the red green and blue variables
10:33 - spinning
10:34 - and there we found the color and you can
10:36 - certainly see it as expected that the
10:38 - red component of the color is much
10:40 - greater than the blue and green channels
10:42 - sweet
10:43 - let's try it on blue
10:45 - wow blue is always a lot quicker isn't
10:47 - it it's also nice seeing the color
10:49 - breakdowns
10:50 - so now that we have split apart the
10:53 - different color channels it's easier to
10:55 - put in the separate skips for each of
10:57 - the different colors
10:59 - i have a good feeling that this will
11:01 - really speed things up so i'm going to
11:03 - put in a stopwatch timer so that we can
11:05 - tell exactly how long it's taken
11:08 - just reset timer when key is pressed
11:11 - and then with a new variable
11:15 - time
11:17 - set time
11:19 - to timer at the end
11:22 - let's just confirm the speed for the
11:24 - color red
11:31 - yeah four and a half seconds
11:33 - so can we beat this by adding further
11:36 - skits
11:38 - come down to the bottom of the get color
11:39 - script
11:40 - so simple now
11:42 - we just need to change these two skips
11:45 - but be careful
11:46 - unlike the blue channel the red and
11:48 - green skips must be set to eight
11:52 - scratch is a little more sensitive to
11:54 - these colors than the blue as it turns
11:55 - out
11:57 - and we scroll back up and adjust the
11:59 - repeat loops
12:00 - these are now both 256 divided by eight
12:04 - skips
12:05 - yeah
12:06 - excited to give this a try
12:08 - so can this beat a time of four and a
12:11 - half seconds i'll press space on red and
12:14 - we wait for it
12:15 - wait hold on
12:17 - wait it's already finished uh i think i
12:19 - actually missed it the time is reading
12:21 - zero what the this is outrageous now
12:25 - don't get too excited this doesn't
12:26 - necessarily mean that it's running
12:28 - instantaneously it is still taking some
12:31 - time only the time of reporter is not
12:33 - detailed enough to give us the real
12:35 - speed readout however wow it is so much
12:39 - faster than before right so cool
12:42 - right then um let's talk further
12:44 - optimizations i guess everything we do
12:46 - in scratch takes a little time so these
12:48 - divisions we can simplify 256 divided by
12:52 - 8 is 32.
12:56 - same for this one
12:58 - and 256 divided by 16 is 16.
13:02 - then we have a 256 multiplied by 256
13:05 - here that ends up being 65 536.
13:10 - who could be careful to put the right
13:12 - number in there 65536
13:15 - now you may have already thought using
13:17 - the change color by blocks here wasn't
13:20 - that efficient we can replace these with
13:22 - additions the only reason i code them
13:24 - like this is to prevent my lines getting
13:26 - too long
13:27 - we'll need two new additions
13:30 - and then color is red multiplied by that
13:32 - 65
13:34 - 536
13:35 - and then the green is multiplied by 256
13:39 - and then finally we add on the blue
13:41 - so that's a little long but not too bad
13:44 - i guess stuff it back into the main
13:46 - script there so that's a little neater
13:50 - but i suspect it won't make it a whole
13:52 - lot faster
13:53 - to get this as fast as possible perhaps
13:56 - we could rearrange these loops to avoid
13:58 - having to do all this maths in the first
14:00 - place
14:01 - it may not be quite so obvious what it's
14:03 - doing but it's worth seeing so we'll go
14:06 - back to resetting the color variable at
14:08 - the top of this script
14:12 - next we bring in each of the three loops
14:14 - a repeat 32
14:18 - another repeat 32 and a repeat 16.
14:22 - then the color check comes next but
14:25 - instead of changing the blue variable we
14:27 - are going right back to changing the
14:29 - color variable again
14:31 - this is again by 16
14:33 - so as we now know this will be updating
14:36 - the blueness of the color
14:39 - now to be able to skip greens we will
14:41 - change color by and because greens are
14:44 - multiplied by 256 this would be the skip
14:47 - value of 8
14:49 - multiplied by 256
14:52 - except we've already changed color by 16
14:55 - 16
14:56 - that's 256 already
14:59 - so taking that into account we only move
15:01 - on by
15:02 - seven 256's
15:05 - splendid we can do just the same for the
15:08 - red channel too change color by 7
15:11 - multiply by sixty five thousand five
15:14 - hundred and thirty six
15:18 - if we test that now
15:22 - yeah that works just as well and it's
15:25 - far more conciser script without the
15:27 - need for any of the red green and blue
15:29 - variables
15:30 - pretty neat
15:31 - so that is our completed script it's
15:34 - perfect for coding up paint packages
15:36 - i'll quickly add some painting scripts
15:38 - now in fact just to show you what i mean
15:40 - we'll just have a when green flag
15:42 - clicked
15:44 - forever loop waiting for the mouse down
15:50 - and then we'll set the pen color to the
15:52 - color yep
15:54 - set the pen size
15:57 - and then pen down
16:00 - we are drawing we will now repeat until
16:03 - the mouse is no longer down
16:08 - and keep moving the mouse around to draw
16:11 - the lines
16:12 - then after the mouse button is released
16:15 - we pin up
16:16 - just before we test this though you may
16:18 - want to stuff a hide block at the top
16:21 - here to avoid accidentally dragging this
16:23 - sprite around the stage
16:24 - anyhow let's test full screen for now
16:28 - here we go i can paint in the current
16:30 - pen color
16:31 - and then pressing a space on a red color
16:34 - and now i can draw in red yay
16:37 - and blue
16:38 - yep any color we can see we can paint
16:42 - with kinda means we can touch up a photo
16:45 - by using our color matching like this
16:47 - it's very fun very fun indeed
16:49 - why don't you drop me a comment under
16:51 - the video to let me know what you could
16:53 - imagine doing with this get color block
16:56 - better still if you create something
16:58 - awesome then there's a scratch studio
17:00 - linked under the video description
17:02 - please comment your project in there and
17:04 - then we can all enjoy seeing what you
17:06 - have made so fun
17:08 - sadly that is where i need to finish
17:10 - this episode now that we have a working
17:13 - color detector we are all set to begin
17:15 - looking at image scanning taking the
17:18 - color of every pixel on the screen and
17:19 - storing it for use later on the problem
17:22 - is image scanning requires us to detect
17:24 - the color of every pixel on the stage
17:27 - and that's 172
17:29 - 000 screen pixels so even a fast color
17:32 - detector like this one will take a long
17:35 - long time to scan the whole screen
17:38 - but fear not we have some amazingly
17:41 - clever scripting ahead of us that will
17:43 - make scanning so much faster you will
17:45 - not believe it
17:47 - well i hope you enjoyed this episode it
17:50 - was really just a grounding and as i say
17:52 - the real fun is yet to come but if
17:54 - you're excited for part two then smash
17:56 - that like button and subscribe and why
17:58 - not click that bell icon so you don't
18:00 - miss the next episode the moment it
18:02 - comes out if like many other scratches
18:04 - you just can't wait to see what's next
18:06 - then you can join the early access
18:08 - channel membership there's all sorts of
18:10 - perks to be had and we'd love to have
18:12 - you on board with us okay that's it from
18:14 - me today i hope you have a great week
18:16 - ahead and scratch on guys
18:30 - [Music]
18:33 - you