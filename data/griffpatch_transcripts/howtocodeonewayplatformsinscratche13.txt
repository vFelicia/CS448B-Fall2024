00:02 - hello fellow scratchers thank you for
00:04 - dropping by today we are back talking
00:06 - about how to add jump through platforms
00:09 - to our sprite based platformers you know
00:11 - just what i'm talking about right the
00:13 - main premise is jump through platforms
00:15 - act just like fully solid platforms when
00:17 - you drop onto them from above but from
00:20 - below it's another story you can jump
00:22 - right up through them almost as if they
00:24 - were not there this can lead to all
00:26 - sorts of super creative level designs
00:29 - not only giving us a bit more variety to
00:31 - the scenes but since you can't drop back
00:33 - through these platforms we can make
00:35 - one-way entrances to certain level areas
00:37 - or even construct ladders so cool what
00:40 - else do you think you could do with
00:41 - these let me know in the comments below
00:44 - before we get into coding let's look a
00:46 - little deeper at these platforms to
00:48 - understand exactly how we are going to
00:49 - code them up
00:50 - here we are above the jump through
00:52 - platform this platform will be part of a
00:54 - completely new sprite so that we can
00:56 - detect when we are touching it
00:59 - gravity pulls us down and boom we are
01:01 - touching the jump through platform
01:03 - sprite now what determines whether we
01:06 - are blocked by this platform is the
01:08 - direction we enter the platform
01:10 - collision from above or below so at
01:14 - first guess we might consider using the
01:16 - player's speed y to decide this in other
01:18 - words a negative downward speed would
01:20 - cause the platform to act as solid
01:23 - sadly though if we consider the case
01:25 - when the player is running up an
01:27 - inclined drop through platform
01:29 - here the player's speed y is positive
01:31 - upwards and we obviously still want this
01:34 - platform to count as solid
01:36 - so speed y is not enough
01:39 - okay then so instead we perform a second
01:43 - collision check below the player
01:46 - if we continue to find a collision then
01:48 - yes the ground below is solid but if we
01:51 - were approaching from below then the
01:53 - second check will find no collision and
01:56 - this means we can treat the platform as
01:59 - non-solid excellent
02:01 - so are we done
02:03 - no
02:04 - not quite what happens when we jump up
02:07 - into a non-solid platform but don't
02:10 - fully pass through instead changing
02:12 - direction and dropping back out again
02:15 - we certainly don't want this to then
02:17 - trigger as a solid collision
02:19 - collision should only occur as we enter
02:22 - a platform
02:23 - that is go from not gliding to colliding
02:26 - well that's easy to solve we just need
02:29 - to keep a record of when we enter a
02:31 - non-solid platform and reset it again
02:33 - when we leave
02:34 - new solid collisions are then only
02:37 - triggered when we are not already inside
02:39 - a non-solid platform
02:41 - brilliant i think that's pretty much all
02:44 - there is to it so what are we waiting
02:46 - for guys let's get scratching
02:50 - so i'm opening up my project from where
02:53 - we left off in episode 12. but just to
02:55 - be sure our project is safe save this as
02:58 - a new copy for this is episode 13 yeah
03:03 - let's go
03:05 - my first scene hasn't got much room to
03:07 - play with so i'll just make some space
03:10 - click into the enemy sprite and to stop
03:12 - the enemies spawning at all i'll
03:14 - surround the entire scene one spawning
03:16 - scripts with an if block since it has no
03:19 - condition the scripts within won't run
03:22 - sometimes that's better than just
03:23 - deleting scripts if you might want them
03:25 - again later i'll just run that and yes
03:28 - the enemies are gone from the starting
03:30 - scene
03:31 - then clicking back into the level i'll
03:33 - just edit the costume and pull the main
03:35 - slope back a little
03:37 - great lots of space to work with okay so
03:40 - i'm going to add a new jump through
03:42 - platform just here
03:44 - we begin by duplicating the level sprite
03:51 - naming it jump through or jump through
03:53 - platform if you like
03:56 - then i'll delete all the scene costumes
03:59 - except scene 1.
04:03 - our new platform can be a simple
04:05 - rectangle i'll drop it in here like this
04:08 - before removing all the other parts of
04:10 - the scene that are not drop through
04:12 - platforms
04:14 - to indicate this is a special jump
04:16 - through platform we can make it a
04:18 - lighter color than the other platforms
04:19 - in the scene
04:21 - then let's smash that green flag and
04:23 - take a look
04:26 - okay the platform is there all right but
04:29 - what happened to the rest of the scene
04:31 - do you notice the nice outline and
04:33 - shadow is now only visible on the new
04:35 - platform what gives
04:38 - look at the change scene script in the
04:40 - jump through platform when the scene
04:42 - changes we erase all the pen drawn
04:45 - outlines and shadows and then draw the
04:47 - new ones
04:49 - but we do just the same in the level
04:51 - sprite too and that is the problem the
04:54 - level draws its outline and shadow
04:56 - and then the new platform sprite comes
04:58 - along and erases a level's drawing and
05:00 - draws its own instead but we want to
05:02 - keep both drawings the problem is that
05:05 - the erase all is done as part of this
05:07 - change scene
05:08 - luckily for us though we already have an
05:10 - event that is broadcast right before the
05:12 - change of scene in the level sprite
05:16 - when i receive about to change scene and
05:20 - simply move the erase all block under
05:22 - that event instead in case you are just
05:24 - wondering how i moved that one block
05:26 - just then it's a scratch add-on feature
05:29 - that i'll go into more in another video
05:32 - so to clean up click back into the jump
05:35 - through platform sprite and remove the
05:37 - erase all block from the change scene
05:39 - event excellent now the scene should be
05:42 - erased in advance before both change
05:44 - scene events draw their outline and
05:46 - shadow effects
05:48 - one thing i am going to tweak is to
05:50 - reduce the amount of shadow under the
05:52 - jump through platforms compared to the
05:54 - fully solid ones
05:55 - under the stamp shadow script
05:58 - change y by only negative 10 and then
06:01 - back to 10 afterwards
06:03 - and there subtle
06:05 - but really cool
06:08 - now it's not quite all sorted yet if we
06:10 - wander on scene 2 ah we've seen this
06:13 - problem before the platform is visible
06:16 - here as well
06:17 - that's not right can you remember when
06:20 - we had a similar issue before
06:22 - click into the danger sprite
06:24 - remember this special blank costume
06:26 - trick
06:27 - if we peek in the scripts we are
06:29 - cunningly setting the costume to the
06:30 - blank costume before we try switching to
06:34 - each scene's new costume
06:36 - and then if the scene doesn't have a
06:38 - matching costume the previous blank
06:40 - costume remains in place and that's just
06:42 - what we want a blank costume
06:45 - okay then we'll do just the same in the
06:48 - jump through platform sprite
06:50 - add a new blank costume
06:53 - naming it blank
06:56 - and then in the scripts under the change
06:59 - of scene event
07:00 - switch costume to blank before trying
07:03 - the new scene costume
07:05 - shall we give that a spin
07:08 - scene one is good
07:10 - and scene two
07:11 - perfect the jump through platform is
07:14 - gone yay right down to business
07:18 - we'll begin by making these new
07:20 - platforms fully solid click into the
07:23 - player sprite and find the define check
07:26 - touching sprite script
07:28 - this is responsible for all collisions
07:30 - with platforms in our game engine
07:33 - to make introducing the jump through
07:34 - platforms easier i'm going to rearrange
07:36 - this script just a little
07:38 - i'll swap this if else for a simple if
07:42 - block
07:43 - if we are touching anything solid
07:45 - then set touching to one
07:48 - this is a certain solid collision then
07:51 - there's no need to consider jump through
07:52 - platforms in this case so we stop this
07:55 - script
07:56 - literally then under this if we restore
08:01 - the set touching to zero
08:04 - okay that change should have no effect
08:06 - on how this script behaves but now we
08:09 - can drop a new if else block below to
08:12 - capture the jump through platform
08:15 - collisions
08:16 - check if we're touching the jump through
08:19 - platform sprite and then as i said to
08:22 - test this just set touching to one to
08:25 - make it act like any other solid
08:27 - platform cool smash that green flag and
08:31 - yeah we've got ourselves a nice solid
08:33 - platform i can stand on top of it and
08:36 - also jump and smash my head on it from
08:38 - below
08:39 - okay so thinking back to how i said we'd
08:42 - code this up we said we'd need to keep
08:45 - track of when we were within that is
08:47 - passing through a jump through platform
08:50 - for this we'll make a new variable
08:52 - call it jump through
08:54 - for this sprite only
08:58 - so one thing we can be sure of if we are
09:00 - not touching the jump through platform
09:02 - that'll be the case in this else
09:05 - then we can set jump through to zero
09:08 - great when jump through zero we are not
09:11 - within a platform then
09:13 - excellent we can use this when we detect
09:16 - we're touching a jump through platform
09:19 - we then use a new if and check if jump
09:22 - through is less than one what does this
09:25 - mean
09:26 - it means the script in here will only
09:28 - run if we are touching a jump through
09:30 - platform for the first time
09:33 - that is we're entering a new platform
09:37 - okay well once again to test that pop
09:40 - the set touching to one back in there
09:42 - and hit the green flag
09:44 - so no change yet to allow us to enter
09:47 - the jump through platform we need to
09:49 - know if we are entering from above or
09:51 - below
09:52 - for this we are going to check for a
09:54 - collision just below the last collision
09:58 - change y by negative six
10:03 - then we want an if else block
10:07 - if we are touching the jump through
10:08 - sprite then yes we do set touching to
10:12 - one as we are traveling down into the
10:14 - platform and that's not
10:16 - allowed but if there is no collision
10:19 - below us then we are traveling up into a
10:23 - platform so set jump through to one
10:26 - recording that we are beginning to pass
10:28 - through a jump through platform
10:31 - finally change y back up by 6 to restore
10:35 - our sprite's position to where it was
10:36 - before we shifted it
10:38 - this whole script can be dropped
10:40 - beautifully into the awaiting if block
10:42 - to complete that little bit of coding
10:45 - magic and oh my word i am pumped to give
10:48 - this a try
10:49 - so on top first
10:52 - yep no problem there but how about from
10:54 - below here we go
10:56 - oh wow look at that what do you know we
11:00 - went right through just as weird hoped
11:03 - amazing
11:04 - hold on
11:05 - what the how come i can't collect these
11:08 - apples anymore
11:09 - player level two how did my sprite get
11:12 - renamed as that that must be a scratch
11:15 - bug i believe it's caused by using the
11:17 - control zed undo shortcut i've seen it
11:20 - before but i think just renaming the
11:23 - sprite back to player should fix that
11:26 - hold on
11:28 - phew yes back to normal gosh i hope that
11:32 - gets fixed soon okay let's test some
11:35 - more does this code still work with
11:37 - angled jump through platforms
11:40 - if we approach from above can we run up
11:42 - a slope
11:43 - yes we can that's awesome and from below
11:46 - perfect still holding together really
11:49 - well
11:50 - so what about with two platforms
11:54 - angled different ways but perhaps
11:56 - running close together
11:58 - testing now
11:59 - jump on the first and straight on to the
12:02 - second
12:03 - looking good very good
12:05 - and if we walk into the narrow
12:08 - ah okay so did you expect this we find
12:12 - our path is blocked
12:14 - not perhaps what you would want why is
12:16 - this happening though even our jumping
12:19 - is prohibited
12:22 - if i stop the project and bring up the
12:24 - player's main hitbox costume hitbox
12:27 - version 2
12:29 - then look at how we are currently
12:30 - colliding since to walk right we collide
12:34 - both with the bottom and the top
12:36 - platforms at once the only way we could
12:38 - enter either of these platforms would be
12:40 - if we were considered to be entering
12:42 - from below
12:44 - but since we are touching both the
12:46 - second jump through platform check below
12:48 - the current position implies that we are
12:51 - trying to drop down through a platform
12:54 - so it's considered solid both the one
12:56 - below and the one above
12:59 - the truth is though we only ever want to
13:01 - consider our feet collisions for jump
13:04 - through platforms perhaps we can improve
13:06 - this by changing our hitbox to exclude
13:09 - our head
13:11 - yes i like this plan so duplicate the
13:14 - hitbox version 2 costume and change its
13:17 - name to be hitbox
13:19 - feet awesome
13:21 - then with the shape tool select the top
13:24 - points
13:25 - and click the delete button to create a
13:27 - much smaller hitbox super that's tiny
13:31 - see look
13:32 - that will easily slip through between
13:34 - these layered platforms
13:35 - so back to our code
13:37 - in our ever expanding script it's these
13:40 - touching jump through checks that need
13:43 - to use the new hitbox
13:45 - but we need to be careful to only switch
13:47 - to this costume when checking for normal
13:49 - hitbox collisions otherwise we'll mess
13:52 - up the feet leveling code and all sorts
13:55 - so we'll need an if block and within
13:58 - this we can switch to the costume hitbox
14:01 - feet
14:05 - what we'll look for is the current
14:07 - costume name
14:13 - checking that it equals the normal
14:15 - hitbox costume what was that called
14:17 - again
14:18 - here it is hitbox version 2. we need to
14:22 - be absolutely sure to get this name
14:23 - correct so i'm copying it to the
14:25 - clipboard and then paste it back in the
14:28 - comparison
14:30 - then we'll make sure to switch costumes
14:31 - before we check touching jump through
14:34 - okay nearly there one more problem is
14:37 - that if we've changed the costume we
14:40 - should make sure to change it back again
14:42 - at the end of this script
14:44 - tell you what let's make a new variable
14:47 - name it hit costume
14:50 - for this sprite only
14:53 - and before we do our little costume
14:55 - check up here
14:56 - set hit costume to the sprites costume
15:00 - name
15:01 - and since we now store that in this
15:03 - variable drop the variable into the
15:06 - comparison below
15:08 - and of course now that we have a record
15:10 - of what the costume was before we
15:11 - changed it at the end of this script we
15:14 - can just switch the costume back to hit
15:16 - costume variable
15:17 - eezy
15:19 - smash the green flag
15:22 - no problem then jumping up through these
15:24 - platforms as before but can we walk
15:26 - through the smaller gap yes we can much
15:29 - better that is looking very smooth
15:33 - now this is almost perfect but you may
15:35 - find that there are still minor issues
15:37 - when jumping towards platforms from the
15:39 - side the reason being that our wall
15:42 - jumping and sliding mechanics are all
15:44 - still active even on jump through
15:46 - platforms
15:47 - let's add in a vertical platform so that
15:50 - you can more easily see what i mean
15:53 - okay so we can jump on this as before
15:57 - but coming from the right
16:00 - ah there you go we wall slide if this is
16:03 - a jump through platform we really
16:05 - shouldn't be blocked here should we it
16:07 - feels wrong after all the rules about
16:09 - entering a jump through platform are
16:11 - that it is only solid from above and
16:14 - this is from the side right so probably
16:17 - should not be treated as solid
16:19 - the second hitbox check below the
16:21 - player's collision is responsible for
16:23 - making this distinction and because it
16:25 - only looks below then it finds a
16:27 - collision even on vertical walls
16:29 - we want this to not be the case so a
16:32 - solution i propose is to make the second
16:35 - check use an even narrower hitbox than
16:38 - the first tiny costume
16:40 - then we should only find a collision if
16:42 - there truly is a platform directly below
16:44 - us and side collisions will be excluded
16:48 - cool then find the hitbox feet costume
16:52 - and once again duplicate it we can keep
16:54 - the name feet 2 why not
16:57 - then we select the hitbox and while
17:00 - holding down the alt key drag the side
17:03 - of the shape inwards to roughly half its
17:05 - size
17:06 - we want to ensure we do all this without
17:08 - moving the actual shape that's so
17:11 - important with these hitboxes
17:13 - now back to the code since we are
17:15 - changing costumes again we again have to
17:18 - ensure only to do this when replacing
17:20 - the standard hitbox
17:22 - so duplicate that if check that switches
17:24 - costumes and make sure to leave the
17:26 - original one where it was
17:28 - this time we'll switch to the new hitbox
17:31 - feat 2 costume
17:34 - drop it in right before our second
17:36 - touching jump through platform check
17:38 - just after we changed y by negative 6
17:42 - checking below our player's feet
17:44 - splendid this is exciting hit the green
17:47 - flag and let's take a wander
17:49 - so jumping up here ah that's interesting
17:52 - so you'll notice that this fix does
17:54 - nothing to prevent us being stopped by a
17:56 - wall if we are still standing on a
17:58 - platform that's inevitable but
18:01 - this is looking better we can now jump
18:04 - right through the problematic platform
18:06 - from the right man this is fun we can do
18:09 - amazing things with this i think
18:12 - so what's left
18:14 - i guess something to consider is how do
18:16 - we want enemies to interact with these
18:18 - platforms hmm
18:20 - shall we have a quick look
18:22 - ah so do you remember this safe zone
18:25 - sprite
18:26 - this prevents an enemy walking into this
18:28 - area i should move it a little bit since
18:30 - the level has now been changed
18:32 - i wanted to stop an enemy walking off
18:34 - the top of this platform here
18:36 - now click into the enemy's sprite
18:39 - to position a new enemy click the show
18:41 - sprite button here and drag them on the
18:43 - stage to where we want them to appear
18:45 - and i'll still keep these old scripts
18:48 - here just in case i want to return to
18:50 - them but i'll duplicate a new spawn
18:52 - block
18:53 - the new position is x 101 and y of 50 or
18:57 - 60ish
19:00 - that'll do
19:01 - run the project and
19:04 - okay so you can see our enemies are
19:07 - completely unaware that these jump
19:09 - through platforms even exist and that is
19:11 - no surprise because if we find their
19:13 - define move down script they are only
19:17 - looking for collisions with the level
19:19 - sprite
19:20 - shall we fix that
19:22 - we just need an or operator
19:24 - and now check for both touching level or
19:27 - touching jump through
19:29 - yeah
19:30 - but hold on we also have to modify the
19:33 - move left right script below that
19:35 - to continue the pattern just duplicate
19:38 - the inner if check
19:39 - and we can now throw away the extra stop
19:42 - this script
19:44 - we only need one extra touching check so
19:46 - remove the ore
19:48 - and we check for not touching jump
19:51 - through
19:52 - okay it's testing time will the enemy
19:55 - now see the jump through platforms
19:58 - yes they do thank goodness of course
20:02 - they don't have all the extra clever
20:04 - coding we granted to our player but most
20:06 - of the time these enemies don't go
20:08 - jumping through platforms anyway but it
20:11 - wouldn't be beyond us to extend our code
20:12 - to introduce that feature too if we want
20:15 - it
20:16 - so we have all our code in place all
20:19 - that's left for us to do is have an
20:21 - absolute blast re-architecting our
20:23 - levels to make the most of this awesome
20:25 - new feature now i could have a one-way
20:29 - ladder up to the room above and then a
20:31 - special escape route back down to the
20:34 - level below i really like that idea
20:37 - i'll just give that a play through
20:43 - but actually
20:44 - no the wall jumping was much more fun
20:47 - what i'll do is keep the original wall
20:49 - jumping section but with the one-way
20:51 - platform at the top
20:55 - now the enemy can patrol fully back and
20:57 - forth and we save the player from that
20:59 - death fall to the spike on the climb up
21:01 - nice
21:02 - but since i like those stairs how about
21:05 - we try that out in the final area to the
21:07 - right of the level i'll remove the old
21:10 - wall jump since we already have a wall
21:12 - jump area and replace them with a ladder
21:14 - up to the section above
21:16 - yeah let's give that a play through
21:19 - here we go
21:21 - collect the huge apple and jump up onto
21:23 - the first platform
21:25 - ah whoops can i actually make that
21:29 - ah right okay i can't make it whoops
21:33 - hold on one extra platform should do
21:37 - yeah we made it
21:39 - you only find these things out by
21:41 - testing right
21:43 - brilliant and we are at the summit
21:46 - and we are also at the end of this
21:49 - tutorial i do hope you've enjoyed
21:51 - watching if you did then please smash
21:53 - the like button and subscribe to the
21:55 - channel so as not to miss the next
21:57 - exciting video
21:58 - and so you should because we've got
22:01 - exciting things coming up and i'm so
22:03 - stoked for the brand new series on
22:05 - coding an rpg engine woohoo
22:08 - it's going to be crazy cool
22:10 - just have to ensure i have it all
22:12 - planned out first
22:14 - it's been fun interacting with you in
22:15 - the youtube community especially those
22:17 - who have joined my griff match channel
22:19 - membership here as it comes with the
22:20 - priority comments so we get to have a
22:23 - lot more direct contact that way which
22:24 - is nice a shout out to my more active
22:26 - members like jensen daniel cassidy david
22:29 - was a goo sorry if i pronounced that
22:31 - wrong honest remix super and shark just
22:34 - to name a few and my awesome patrons
22:37 - creeper craft
22:39 - 55 male 18 35 and
22:43 - [Music]
22:44 - i think that probably sums that one up
22:46 - man you are the best thank you so much
22:49 - well that's it thank you for watching
22:51 - have a great week ahead and scratch on
22:54 - guys