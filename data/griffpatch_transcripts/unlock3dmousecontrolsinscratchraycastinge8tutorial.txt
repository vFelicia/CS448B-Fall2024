00:00 - foreign
00:03 - y Ray scratchers this is episode 8 of
00:07 - our raycasting series and by popular
00:09 - demand we are going to add Mouse control
00:11 - and support for looking up and down yes
00:15 - this is so cool making our game feel so
00:18 - much more immersive but this is going to
00:21 - be hard to code right well luckily for
00:23 - us no no it's not it's ridiculously
00:26 - straightforward looking up and down in a
00:28 - raycaster is just as simple as moving
00:30 - the entire scene up and down the hardest
00:33 - part of that will be catering for the
00:34 - otherwise static backdrop we'll get into
00:37 - that shortly as for the mouse the
00:39 - simplest control scheme is to use the
00:41 - mouse's position to guide our player's
00:43 - rotation the further right or left of
00:45 - the center the mouse moves the faster
00:47 - the player turns with a little practice
00:49 - we can get precise and yet smooth
00:51 - control of our movements but is this the
00:54 - best control scheme well almost I have
00:57 - some more advanced options we can try
00:59 - which I'll reveal later in this video so
01:01 - stay tuned dude for that okay guys are
01:04 - you ready let's get scratching we're
01:08 - gonna begin where we left off in episode
01:09 - seven only make sure to save this as a
01:12 - new copy for this is episode eight
01:16 - now you may have noticed as I record
01:18 - these videos that I'm constantly being
01:20 - rushed by Nanos and franks all very good
01:23 - but they don't half get in the way of
01:25 - what I'm trying to show you so we can
01:28 - temporarily separate off this move Block
01:30 - in the entity Sprite just to stop them
01:33 - running around for now sorry little guys
01:35 - but I assure you it's for the best and
01:37 - we'll need to remember to pop this back
01:39 - in again when we're done right then to
01:42 - work click back into the player Sprite
01:44 - and we'll add basic Mouse control
01:47 - under the player tick script follow that
01:49 - turn right that is clockwise block Mouse
01:52 - X is great as it tells us how far left
01:55 - or right the mouse is but the range from
01:58 - negative 240 to 240 is too large
02:00 - compared to the original turn of just
02:02 - three degrees so we divide it by 60.
02:07 - and then pop that all back together
02:11 - at the top here
02:13 - and that's it smash the green flag
02:15 - awesome that gives us control of the
02:18 - player's turns fast or slow and going
02:21 - for a run this makes for an Uber smooth
02:24 - experience granted it doesn't have the
02:26 - immediacy of dedicated Mouse lock more
02:29 - on what that is later but once you get
02:31 - used to it it works pretty well but once
02:35 - we are able to steer left and right with
02:37 - the mouse you do quickly start missing
02:39 - being able to look up and down too so
02:42 - that will be our next job
02:44 - we'll need a new variable to keep track
02:47 - of where we're looking name it camera Y
02:50 - and make it for all Sprites
02:53 - and we'll simply set it to the value of
02:55 - mouse y
02:56 - the plan is then to scroll the entire
02:59 - view up and down by this amount so click
03:02 - into the pen Sprite where all the
03:04 - drawing is done and find the draw row
03:07 - custom block
03:09 - you can see here this set Y and it's
03:12 - where we calculate the vertical position
03:14 - of each wall strip to scroll it we must
03:17 - offset this that is subtract camera y
03:20 - from the result
03:22 - carefully ensure the whole of this
03:24 - existing expression goes on the left of
03:26 - a new subtract block and subtract from
03:29 - that the new camera y variable
03:32 - great let's give that a run
03:34 - and look at this so cool you can already
03:37 - see it's having the desired effect on
03:39 - the level walls obviously we're not
03:41 - finished because we also need to offset
03:44 - these entities the enemies and stars to
03:46 - keep them in sync with the level
03:48 - the code for them is found under the
03:51 - stamp entity script over here
03:53 - currently the go to XY has left the Y as
03:57 - zero and now we're going to replace that
03:59 - with a subtract block and just drop in
04:01 - canva y into the right hand side that
04:04 - gives us negative camera y there's no
04:06 - need to put a zero on the left if you
04:07 - don't want to
04:08 - and that's better it's working great are
04:12 - we done then no not quite did you notice
04:15 - anything a bit off with this backdrop
04:18 - yeah the gradient backdrop also needs to
04:21 - scroll problem is we drew that on the
04:24 - stage backdrop and unlike pen and Sprite
04:27 - costumes stage backdrops can't be moved
04:29 - around in code well then we'll just have
04:32 - to copy this costume over to a Sprite
04:34 - instead just drag the backdrop costume
04:37 - into the pen Sprite
04:39 - and then we click into the pen Sprite
04:41 - and confirm that the costume is there
04:43 - and ready to use good so since this is
04:46 - no longer a backdrop but a Sprite
04:47 - costume we are going to need to paint or
04:50 - stamp this to the screen and we'll need
04:52 - to do this before drawing anything else
04:54 - as everything else will be layered on
04:56 - top of it so locate the draw custom
04:59 - block this is our entry point previously
05:01 - we began by erasing all to Clear the
05:04 - Stage we'll replace this with our
05:06 - backdrop stamp position it first with a
05:09 - go to XY of zero and the Y needs to be
05:12 - that offset so subtract camera y
05:16 - now pop in a clear graphic effects to
05:20 - ensure it's not tinted by previous
05:21 - brightness effects we may have used
05:24 - switch to that background costume
05:28 - and then set size to 100 so that it
05:30 - fills this screen width
05:32 - finally we stamp this allows our
05:35 - backdrop to still appear behind the
05:37 - raycast level and entity stamps
05:39 - smash that green flag
05:42 - variety oh what have we got here then is
05:45 - this what we hope to see the good news
05:48 - is that the main backdrop can be seen to
05:50 - scroll nicely up and down with the scene
05:53 - but something seriously wrong in the
05:55 - areas above and below are normal view
05:57 - we're getting some color banding the
06:01 - reason of course is that our backdrop
06:02 - costume is only the size of one screen
06:05 - if we move it up and down then we reveal
06:08 - what is behind and that is a mess to fix
06:11 - this we'll need our backdrop to be twice
06:13 - as tall as our screen no problem in the
06:17 - costume editor resize the whole costume
06:21 - to half its size using the canvas middle
06:24 - as a reference then Center it again I
06:27 - find it useful to create a duplicate
06:29 - using the ALT key held before dragging
06:32 - or the copy and paste and now reselect
06:35 - and stretch the middle pair vertically
06:37 - if you hold down the ALT key while
06:39 - you're dragging then it sizes around the
06:41 - middle point useful
06:43 - size up just a little bit larger than
06:45 - the canvas
06:47 - so this middle area is going to be sized
06:50 - up in code to the full screen
06:52 - therefore we want to change the gradient
06:55 - colors to match the original reference
06:57 - Shades to the right
07:00 - there we go that works the same for the
07:04 - floor
07:05 - only for a change I'm going to switch it
07:07 - to a green Hue matching the theme of my
07:10 - maze walls
07:11 - great clean up by removing the reference
07:14 - shapes to the right and all we need to
07:15 - do now is size this up to 200 and we'll
07:18 - do this in code set size to 200 percent
07:23 - sadly it isn't this easy scratch has
07:26 - unhelpfully prevented the size reaching
07:28 - our desired 200 percent as a Sprite
07:31 - would become too large for the screen
07:33 - except for that's what we want so we can
07:36 - work around this of course by switching
07:38 - to the large backdrop costume after
07:41 - sizing to 200 percent
07:43 - and instead switch temporarily to a
07:46 - small costume say a star beforehand
07:50 - let's see
07:51 - oh yes this is far better scratch let's
07:54 - assize a star costume to 200 and once
07:57 - there is happy to switch to the larger
07:59 - backdrop costume as long as we don't
08:01 - then size it again afterwards and we can
08:05 - look up and down and the floor and
08:06 - ceiling look marvelous love that green
08:08 - great job even though as we play we only
08:12 - tend to look up and down a little bit
08:14 - the effect is a whole other level of
08:16 - immersion that brings this 3D to life
08:19 - well I said we'd come back and talk
08:22 - about improving the mouse control
08:24 - to do this it might help us to First add
08:26 - a simple Crosshair
08:28 - create a new Sprite named Crosshair and
08:31 - we can draw it using a centered thick
08:33 - black line with a thin white line
08:35 - centered on top of that
08:37 - then duplicate them and keep them
08:40 - centered by holding the shift as you
08:41 - drag them down
08:43 - select all and then Center them again
08:45 - before duplicating and rotating using
08:48 - shift to snap to 90 degree angles
08:51 - and finally dragged a snap back to the
08:54 - center One Last Time ta-da we are done
08:58 - and it's looking pretty smart
09:01 - script wise when flag is clicked go to X
09:04 - Y of zero zero super easy so this is
09:08 - pretty standard first person shooter
09:10 - stuff but what are your feelings about
09:12 - seeing the Crosshair staying still in
09:14 - the center of the screen while our mouse
09:16 - cursor is still visible moving all over
09:18 - the place it's a little disorientating
09:20 - don't you think
09:22 - well outside of scratch this is overcome
09:24 - by a clever trick called Mouse lock the
09:27 - mouse cursor is hidden and yet Mouse
09:29 - movements still allow for turning
09:31 - Without Limits however in Native scratch
09:34 - we can't pull off this trick yet sadly
09:37 - so instead I prefer to make the
09:39 - Crosshair follow the mouse
09:41 - simply Loop forever and go to Mouse
09:45 - pointer
09:46 - this way the Corsair follows the mouse
09:48 - at all times and we can feel more in
09:51 - control of our aiming while still being
09:53 - able to use the mouse to move around
09:55 - nice
09:56 - okay so one more trick before we finish
09:59 - this episode and that is to fine tune
10:02 - the mouse control Just a Touch
10:04 - what I'd propose is to split the screen
10:07 - into regions and assign each region a
10:10 - different turning sensitivity the idea
10:12 - is that while in a central zone we are
10:15 - not turning much we just want to aim our
10:17 - Crosshair and then in the next Zone we
10:20 - apply a much stronger turn this is the
10:22 - normal turn area
10:23 - so why the outermost Zone that is for
10:27 - SNAP turns where we have to get away
10:29 - really quick to code this will no longer
10:32 - be able to turn by directly Mouse X so
10:35 - drag off the mouse divided by 60. this
10:38 - can be replaced by a new variable we'll
10:41 - name it Mouse turn for this Sprite only
10:45 - and we'll drop it into the left side of
10:48 - this multiply
10:49 - to calculate the value of this variable
10:51 - make a new custom block named get mouse
10:55 - term and this is useful We'll add in an
10:59 - input named ABS Mouse X this will be for
11:03 - the absolute that is the non-negative
11:06 - value of mouse X
11:08 - drop the new Block in above our turn
11:10 - block and as the input variable implied
11:13 - we'll pass in the ABS value of
11:16 - Mouse X
11:18 - and this is useful because now it
11:21 - doesn't matter if we are turning right
11:23 - or left we just have the magnitude or
11:26 - the strength of the turn as a positive
11:28 - number
11:29 - so we set Mouse turn to the ABS Mouse x
11:33 - divided by 60.
11:36 - but because we use the ABS of mouse X
11:39 - you'll find we've lost the ability to
11:40 - turn left
11:41 - no problem if the real Mouse X not the
11:45 - ABS Mouse X the real Mouse X is less
11:48 - than zero then we flip our turn variable
11:51 - set Mouse turn to
11:53 - negative using a subtract Mouse turn
11:58 - okay cool we are back in action
12:01 - let's begin by making the central region
12:03 - less sensitive two turns we'll divide by
12:07 - 100 instead of 60.
12:10 - try that out
12:12 - okay yeah this is good we only get a
12:15 - little movement now
12:16 - for the next band move the last if
12:19 - downwards so that we can place in a new
12:21 - if between
12:23 - if the ABS of mouse X is greater than
12:28 - 50 then we want to turn faster now but
12:32 - we have to be careful not to have a
12:34 - sudden jump in speed of turn we change
12:37 - Mouse turn by
12:39 - and we'll need that divide again but
12:41 - before that a subtract
12:44 - we can subtract the same 50 away from
12:47 - the ABS of mouse X
12:49 - do you see what this does when we get
12:51 - past a value of 50 we subtract 50 from
12:54 - it to bring it back down to zero this we
12:56 - add to the existing turn speed to speed
12:58 - it up
13:00 - to make it turn much faster divide it by
13:02 - 50.
13:04 - cool let's try it out
13:08 - so the middle zone is still less
13:09 - sensitive but move outwards to the right
13:12 - and
13:13 - now we're moving very nice we can have a
13:16 - bit of a run around and it's good but
13:19 - even now I'm having difficulty turning
13:21 - quite fast enough to take all the
13:23 - corners as I'd like and this is why we
13:25 - need a third band duplicate the middle
13:28 - if here
13:30 - and we'll check for an absent Mouse X
13:32 - being greater than 130.
13:36 - this needs balancing by subtracting the
13:38 - same 130 before we divide
13:41 - and that should do it I think finally
13:43 - smash that green flag
13:46 - let's see
13:48 - whoa wow yes that is a lot faster how
13:52 - does it feel on the road
13:54 - yeah this might take a little getting
13:56 - used to now as it turns much quicker if
13:59 - I push it too far
14:01 - yeah I think I'm getting used to it now
14:04 - whoopsie well nearly anyhow we can
14:08 - always tweak those numbers if you prefer
14:10 - to find the best region sizes and speeds
14:12 - that suit you it's pretty
14:14 - straightforward and yeah it's working
14:16 - great now really great and that my
14:19 - friends is where we draw this episode to
14:22 - a close it's been fun coming back to
14:24 - this project and there's plenty more to
14:26 - cover like jumping projectiles yeah if
14:30 - you guys want to see more then please
14:31 - smash that like button now and then
14:33 - comment under the video I need your
14:35 - likes and don't forget subscribe to the
14:37 - channel not to miss any future episodes
14:39 - and fun tutorials oh yeah and if you
14:42 - want to post your finished projects to
14:44 - my scratch Studio then you'll find a
14:46 - link to that in the description under
14:48 - the video so thank you for watching have
14:51 - a great week ahead and scratch on guys
14:55 - foreign