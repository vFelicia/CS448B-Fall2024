00:02 - hello fellow scratchers rotating
00:05 - platforms spinning turning rolling
00:07 - platforms of pure joy that's what they
00:10 - are people may have been wowed at seeing
00:12 - scratch games featuring moving platforms
00:14 - but man they will be simply blown away
00:17 - when they see these beauties indeed by
00:20 - the end of this episode 12 of our
00:22 - classic platformer series i'm confident
00:24 - we'll all be having awesome fun creating
00:26 - the most amazing levels you have ever
00:28 - seen
00:29 - now you may have noticed that these
00:31 - awesome demo scenes i'm flashing up
00:33 - often feature more than one platform on
00:35 - the screen at once if you've been
00:36 - following the series attentively then
00:38 - you'll know that this is something we
00:40 - haven't been able to do easily before
00:42 - but fear not we'll be addressing that
00:44 - problem today too oh yes this is going
00:47 - to be great now just before we dive in
00:50 - let's just wet your appetite did you
00:52 - know that when you stand on a rotating
00:54 - platform the movement of the player
00:56 - follows a perfect orbit around the
00:59 - rotating platform's center of rotation
01:02 - yeah look at that so just as moving
01:05 - platforms apply their movement to the
01:07 - player so a rotating platform applies
01:09 - their rotation to a player it's just
01:11 - going to take us a little more work to
01:13 - calculate the relative movement but hey
01:16 - that's what we're here to learn so what
01:18 - are we waiting for let's get scratching
01:22 - we begin where we left off in episode 11
01:25 - and make sure we save a new copy for
01:28 - this is episode 12.
01:31 - we'll start by trying to get two
01:33 - platforms on the same scene for that we
01:35 - could do with a new scene with lots of
01:37 - empty space to play with
01:39 - click into the level sprite and enter
01:42 - the costume editor
01:43 - here is scene one and i want to make a
01:46 - new passageway through to the left from
01:48 - here
01:49 - great
01:50 - now duplicate scene one yeah it's
01:52 - auto-named as scene six for me but since
01:56 - this wants to be to the left of scene
01:58 - one drag it up above scene one in the
02:00 - sprite ordering
02:02 - then i'll rename it to scene zero
02:05 - hey so who thought scene one was the
02:07 - lowest you could go no no not at all we
02:10 - can even go negative without any
02:12 - problems which can open up a lot of fun
02:15 - right i need more space i'll flip the
02:18 - level horizontally to match up with the
02:20 - entrance and then shift over the walls
02:23 - to open everything up oops i need my
02:26 - left wall back
02:27 - there we go
02:28 - let's just slap the green flag and check
02:30 - that out
02:31 - aha splendid lots of space for movement
02:35 - and since i fixed the wall jumping bug
02:36 - last week i'm evidently trapped in this
02:38 - room so we need these platforms
02:42 - click into the platform's sprite
02:45 - cool this is costume one and it's our
02:48 - basic movement platform we can use that
02:51 - if you haven't already then run over to
02:53 - scene 0
02:54 - stop the project and click the show
02:57 - button to make the platform sprite
02:59 - visible on the stage
03:00 - i'll position it at the highest point i
03:02 - want it to move to
03:04 - we'll be animating it down and then up
03:06 - from here in a loop but first we must
03:09 - set the start position
03:11 - under the when i receive change scene
03:13 - script
03:14 - we need a new if block checking if the
03:17 - scene hash is the new scene zero
03:20 - but we don't want this to be a door so
03:23 - chuck that away
03:24 - the previous scripts we used for
03:26 - animating a platform was the aptly named
03:29 - animate platform script although i
03:32 - haven't been using this since we last
03:33 - changed our level around
03:35 - let's just see what that script was
03:36 - doing
03:37 - okay so the way i left it we had it
03:40 - starting at a given position then
03:42 - animating through three different
03:44 - positions so yeah i'm going to change
03:46 - this to be a standard up and down
03:48 - movement for now
03:49 - if you want to keep your existing
03:50 - animation then just create a new custom
03:53 - block for this new platform animation
03:54 - and use that for this new platform
03:56 - instead
03:58 - the first change we make is to set the
03:59 - starting position of the platform here
04:01 - before we use the animating block
04:04 - go to xy and it kindly puts in the
04:07 - current position of the platform for us
04:09 - thanks scratch
04:10 - now the reason we do the go to before
04:14 - using this animate block is so each
04:16 - platform can start at a different
04:18 - position
04:19 - next find the define animate platform
04:22 - script again
04:23 - since we've already set the start
04:24 - position we can get rid of the initial
04:26 - go to xy block from in here
04:29 - now for the glide two blocks these need
04:32 - to move relative that is a fixed amount
04:35 - away from the current position
04:37 - the x positions can be simply replaced
04:40 - by the current x position
04:42 - i just want these platforms to move up
04:44 - and down without any side to side
04:46 - movement
04:47 - oh and look we don't want this third
04:49 - glide and weight this is just going to
04:51 - be a down and up movement now
04:54 - lastly the y's we first move down by 90
04:58 - pixels so that's y position subtract 90.
05:04 - then to move back up 90 pixels
05:06 - y position plus 90. sweet that's nice
05:11 - and straightforward
05:14 - let's run that
05:16 - oh man
05:17 - i forgot to show the sprite didn't i how
05:20 - many times do i do that you've no idea
05:22 - drop a show block first thing in the
05:25 - animate platform script and we'll try
05:27 - that again
05:29 - yes now we are onto something nice to
05:31 - have a working platform in my game once
05:34 - more
05:35 - but our biggest challenges still lie
05:37 - ahead what we would like to do is drop
05:39 - in a second moving platform
05:43 - like this
05:44 - and then just change the starting
05:46 - position to put it next to the existing
05:48 - one
05:50 - but stop right there this is not going
05:53 - to work because this animate platform
05:55 - contains a forever loop it's never going
05:58 - to finish running and proceed onto the
05:59 - next instruction and hey even if it did
06:02 - we'd only be telling this same platform
06:04 - to animate up and down not a new one so
06:07 - nope chuck that away what we need is to
06:11 - use a clone of this platform to position
06:13 - and animate it independently of the
06:15 - first and this is exactly what we did in
06:17 - the enemy sprite
06:19 - so perhaps we can borrow some scripts
06:21 - from there
06:22 - just before we do though scroll across
06:24 - to find some free space ready for any
06:27 - enemy sprite scripts we might drag in
06:29 - now click into the enemy sprite
06:34 - so to make use of clones we have hidden
06:36 - the original enemy sprite this is
06:38 - because the original sprite acts as a
06:40 - clone making factory the factory itself
06:43 - is hidden but the clones that pop out of
06:45 - it are visible
06:47 - then we have this new when i receive
06:49 - about to change scene the delete this
06:52 - clone within causes all the existing
06:54 - clones to be deleted all except the
06:56 - original sprite of course as that is not
06:58 - a clone doing this before a scene
07:00 - changes sets everything up ready for a
07:02 - clean start
07:04 - and here's the actual change scene event
07:06 - receiver now look this is doing exactly
07:09 - what we want to do in the platform
07:11 - sprite for any scene we can have
07:14 - multiple spawn blocks one for each enemy
07:16 - in a scene the reason this is possible
07:19 - in this enemy sprite is that unlike in
07:21 - the platform sprite these spawn blocks
07:24 - do not just animate the original sprite
07:26 - but they position and then clone a new
07:29 - sprite the downside of this is that the
07:31 - animation of each sprite cannot be
07:33 - controlled in the change scene script
07:36 - but instead that gets done under a when
07:38 - i start as clone script over here
07:41 - this is a tad more tricky as we then
07:43 - need to find a way of knowing what kind
07:45 - of enemy or platform we are trying to
07:46 - animate but yeah we'll get around to
07:49 - that shortly
07:50 - okay first we need to copy some of the
07:52 - scripts from here into the platform
07:54 - sprite
07:55 - locate first the when flag clicked block
07:58 - and we'll drag it carefully into the
08:00 - platform sprite
08:02 - next up we want the when i receive about
08:04 - change scene
08:07 - and finally find the define spawn type
08:10 - script this will be useful for cloning
08:12 - the new platforms so drag it into the
08:14 - platform sprite
08:16 - cool these are the three scripts we
08:18 - needed so click back into the platform
08:20 - sprite and uh scratch look at that pile
08:23 - of blocks come on tidy them up there we
08:26 - go that's better now i realized that as
08:29 - you've been working on your platformers
08:31 - you most likely have lots of your own
08:33 - changes and scripts hanging around in
08:35 - here but hopefully the changes we make
08:37 - here now will make enough sense that
08:40 - you'll be able to adapt your scripts to
08:41 - work in the same way as mine
08:44 - first thing to do is replace the old
08:46 - door at and animate platform scripts in
08:49 - here with spawn blocks that create the
08:51 - clones
08:52 - the first input is asking for the type
08:55 - of clone to create this one is a door
08:58 - but back in episode 8 we cleverly named
09:00 - the door costume as key 1. do you
09:02 - remember that this simplifies the
09:04 - scripting
09:05 - the x and y positions come next copy
09:08 - these directly in also
09:10 - now dir direction
09:12 - this is new to platforms so just stuff
09:15 - in 90 so that the platform faces right
09:19 - the door app script is responsible for
09:20 - animating the door we should keep that
09:22 - for later once we bring in the when i
09:25 - start as a clone hat block
09:27 - splendid next we do the same for the
09:29 - animate platform script
09:31 - copy over the position from the go to
09:34 - block below
09:35 - the costume
09:36 - well
09:37 - check out the costumes
09:39 - oh yes it was still named costume1
09:41 - that's original so if you haven't
09:43 - renamed it pop that in as the first
09:46 - input the direction can stay at 90.
09:49 - and then drag off the go to and animate
09:52 - scripts for later
09:54 - so far so good we just have one tweak to
09:57 - make i've noticed that the define spawn
09:59 - script is not doing anything with the
10:01 - type input guess our enemy sprite
10:03 - doesn't either yet then anyhow we need
10:06 - to be setting the costume to this value
10:08 - so that we can tell what sort of
10:09 - platform this is
10:11 - switch costume 2 and drop in the type
10:14 - input variable
10:16 - now this will become a door or a
10:18 - platform before it's cloned
10:21 - great so now to deal with these
10:23 - animating scripts like i said earlier
10:26 - these want to be triggered and a new
10:28 - when i start as clone block
10:32 - bring in an if
10:35 - and from the green operators category
10:37 - contains
10:39 - and what i suggest we do is use the
10:41 - costume name block on the left
10:46 - and on the right the word key
10:49 - you see this will now recognize any
10:51 - cloned platforms that is a door since
10:54 - they will have the word key in them for
10:57 - sure
10:58 - and therefore we pop the door app script
11:00 - under there to handle the door
11:02 - animations
11:03 - but you'll notice this door app block
11:05 - has its x and y and costume inputs
11:08 - already set
11:09 - but this new cloning strategy already
11:11 - has these details set up before the
11:13 - clone is created so how about for
11:16 - simplicity we just pass through the
11:18 - current x position
11:19 - y position
11:21 - and the costume name as it is unchanged
11:24 - this is getting a little bit messy let
11:26 - me just tidy this up
11:28 - right remember these animating scripts
11:31 - never end
11:32 - they are just forever loops after all so
11:34 - we don't need to worry about using an if
11:36 - else or a stop this script here
11:39 - okay if this isn't a door then under
11:42 - here for me it has to be a platform so
11:45 - i'll drop in the animate platform block
11:47 - right under there
11:49 - if you have different animation scripts
11:50 - for different scenes then you'll need to
11:52 - find a way to identify which script to
11:54 - run here you can always check the scene
11:56 - hash variable or the costume name or
11:59 - find any other way that works well for
12:01 - you
12:02 - let's give that a test
12:04 - it's good to check that the platforms
12:05 - are appearing
12:07 - yep there it is few and that it also
12:10 - disappears off screen yep good
12:13 - and finally i'm going to leg it all the
12:14 - way over to the right to ensure the door
12:16 - platform is also where i left it
12:19 - yes you'll want to test each type of
12:21 - platform you've got in your game good
12:23 - good good this is great news because now
12:26 - we can finally try putting these clones
12:28 - to good use how about we add in that
12:31 - second moving platform to scene zero
12:34 - find with me the when i receive change
12:37 - scene script here we go where scene is
12:40 - zero let's duplicate the spawn block and
12:43 - modify the x position to be negative 86
12:46 - that should be on the opposite side of
12:48 - the screen and i'll also change the y a
12:50 - little too okay so if everything works
12:54 - as planned
12:57 - oh
12:57 - boy yes look at this we finally have two
13:00 - moving platforms on the same screen
13:02 - that's so cool and opens up a lot more
13:05 - opportunity for really cool level design
13:08 - we could even add back in some lava
13:10 - pools doors and platforms all on the
13:12 - same screen right oh yeah
13:15 - and man that's really what this episode
13:18 - is all about opening up cool
13:20 - opportunities because now we can finally
13:23 - look at introducing a new type of moving
13:25 - platform
13:26 - the rotating platform yeah this is what
13:30 - we've all been waiting for let's just
13:32 - start by experimenting a little click
13:34 - into the platform costumes and duplicate
13:36 - the existing costume one only i'll size
13:39 - it up into a rough square this one is 86
13:42 - by 86 pixels
13:44 - let's see how that looks on stage
13:48 - yeah i like that having this rotating on
13:50 - the screen will look uber cool let's
13:53 - rename the costume as square
13:55 - splendid
13:56 - now knit back into the code and we can
13:58 - change the costume used by just one of
14:01 - these newly spawned platforms to square
14:04 - matching our new costume's name and case
14:07 - precisely
14:08 - so without any waiting around we can
14:10 - check that out in game
14:12 - hey hey there it is
14:14 - nice
14:15 - but enough of this up and down motion
14:18 - blah everyone's doing that the future is
14:21 - rotation first we need to decide how to
14:24 - tell the platform that it is a rotating
14:26 - platform
14:27 - we could use the costume name but to be
14:29 - honest we'll also need to store the
14:31 - direction and speed of rotation so
14:33 - what we can do is right-click the spawn
14:36 - block and we'll edit its definition
14:39 - adding in the new label
14:41 - turn
14:42 - followed by an input named degrees that
14:45 - will be how much will be turning the
14:47 - platform by each frame
14:50 - now each existing spawn block has the
14:53 - turn input set to the empty value by
14:55 - default and that's perfect as a blank
14:58 - turn can indicate the platform is not
15:00 - rotating
15:01 - but this square platform i'll enter a
15:04 - turn of one negative values will spin
15:07 - anti-clockwise and larger values spin
15:09 - faster just play around with this
15:11 - because it's super fun so where's our
15:13 - define spawn script
15:16 - here we go make a new variable to store
15:18 - the spin value
15:21 - name it
15:22 - turn and make it for this sprite only
15:24 - that's important otherwise all the
15:26 - blocks will end up spinning just the
15:28 - same
15:29 - then right at the top we set the turn
15:31 - variable
15:33 - to the value of the degrees input
15:36 - variable
15:37 - okay guys so now we have a way of
15:40 - identifying a rotating platform let's
15:42 - make it spin
15:44 - find the when i start as a clone script
15:47 - the doors are identified by the costume
15:48 - name containing the word key and
15:50 - everything else is up and down platforms
15:53 - so we now want to check for rotating
15:55 - platforms if turn is greater than the
15:58 - empty value
16:00 - that's the same as saying turn is not
16:02 - the empty value
16:03 - in which case this is a rotating
16:05 - platform so first set rotation style to
16:08 - all around so that we can see it
16:11 - actually rotating
16:12 - then bring in a forever loop
16:16 - in the loop we turn sprite clockwise by
16:23 - and drop in the turn variable
16:26 - oh whoops we also need a show block
16:31 - see i always forget and we wouldn't be
16:33 - seeing much at all let's give that a
16:35 - test
16:38 - and there we go a basic rotating
16:40 - platform very good but there's nothing
16:43 - like a little physical interaction to
16:44 - test things out
16:46 - and here we are standing on the pinnacle
16:48 - of our achievement and well you know
16:50 - something doesn't seem right do you see
16:53 - what it is the problem is that the
16:55 - surface of the platform is just sliding
16:57 - past under our feet and i'm not being
17:00 - carried along with it the good news at
17:02 - least is that our wonderful collision
17:03 - fixing code is successfully pushing us
17:06 - out of the ground at each point so if
17:07 - you didn't catch episode 8 for that then
17:10 - now is a good time to do so it will
17:12 - become even more important shortly so
17:15 - the problem we have is that our existing
17:17 - moving platform code simply takes the
17:19 - movement of the entire platform and
17:21 - applies that to the player using the
17:23 - platform dx and platform dy variables
17:26 - but for this rotating platform
17:30 - now this is more problematic because the
17:32 - platform's position as a whole is not
17:34 - changing nope it's just rotating
17:38 - so if the platform turns by say 45
17:40 - degrees clockwise then if the player is
17:43 - positioned here
17:44 - we need to move them to here
17:49 - but if they were standing over here
17:53 - then they need to be moved to here and
17:55 - that's completely different direction of
17:57 - movement
17:58 - welcome to the complex world of rotation
18:01 - maths
18:03 - what is super awesome though is that the
18:04 - movement of the player has nothing
18:06 - whatsoever to do with the size and shape
18:08 - of the platform being rotated be it a
18:10 - square a circle or a complex rotating
18:13 - maze it matters not one bit to know
18:16 - where we will rotate to we start at the
18:18 - center of rotation that's here find the
18:21 - direction and distance to the player and
18:23 - then simply rotate that direction by the
18:25 - same 45 degrees the distance stays the
18:28 - same and ta-da this is the new position
18:31 - of the player
18:33 - as you can see we could do this trick
18:35 - using a number of scratch readings
18:37 - movements and rotations and position
18:39 - resets but if you've been following my
18:41 - 3d raycasting tutorial recently we have
18:44 - already covered some exciting rotation
18:46 - maths that can also solve this problem
18:48 - in a concise way let's look at it again
18:51 - here it is
18:53 - so simply put given a position x and y
18:56 - relative to the center of rotation
18:59 - and an angle of rotation we'll name this
19:02 - ccw standing for counter-clockwise
19:05 - then the new position x2 y2 is given by
19:08 - this beautiful yet slightly scary
19:11 - formula
19:12 - if you do happen to understand this
19:14 - maths then hats off to you some of you
19:16 - though may feel uncomfortable about
19:18 - using something that you don't fully
19:20 - understand but let me just tell you
19:22 - don't sweat it in modern coding we make
19:25 - use of countless software libraries that
19:27 - we don't need or even want to understand
19:29 - how they work the important thing is
19:31 - that we know what they achieve and how
19:34 - to use them
19:35 - so where do we start can we find the
19:38 - when i receive tick platforms
19:41 - this script is where we record the
19:43 - movement of the platforms you'll see it
19:45 - calls the tick block just below and you
19:48 - can see it setting the platform dx and
19:50 - dy variables here this deals only with
19:53 - platforms that are changing position not
19:55 - rotating so pull the whole script over
19:58 - to the side and so that we can handle
20:00 - different platform types bring in an if
20:03 - else block
20:04 - just return this little go to xy to the
20:07 - bottom of the tick block that ensures
20:09 - that the platform's position is returned
20:11 - back to where it started before we did
20:13 - any collision detection
20:15 - so again we check if turn is greater
20:18 - than the blank value
20:20 - this is a rotating platform
20:23 - the else is therefore for the original
20:24 - moving platform so we can safely return
20:27 - those original scripts into there
20:30 - great it's rotation time firstly we must
20:33 - find out whether their player is
20:35 - actually standing on this rotating
20:37 - platform we do this as simply as
20:39 - possible by moving the platform up by
20:42 - four pixels change y by
20:45 - four
20:46 - and check for a collision
20:48 - if the platform is touching the player
20:51 - then
20:52 - okay now the tricky bit you ready oh yes
20:56 - a new custom block for the maths i think
20:59 - call it rotation maths ccw remember ccw
21:03 - stands for counter clockwise and add a
21:06 - numeric input also named ccw
21:10 - now naming it like this is useful so
21:12 - that we remember the direction of
21:13 - rotation needs to be inverted run
21:16 - without screen refresh and we are done
21:19 - we can make use of the block before we
21:21 - code it up if we are touching the player
21:23 - do the rotation maths by rotating by and
21:26 - remember to flip the direction 0
21:29 - subtract turn
21:34 - okay time to flesh out that define
21:37 - rotation math script
21:39 - to try to make this as simple as
21:41 - possible let's split the maths up using
21:43 - many variables
21:45 - we need a dx for this sprite only
21:50 - d y
21:52 - for this sprite only
21:56 - syn sin for this sprite only
22:01 - and cos you guessed it for this sprite
22:04 - only
22:05 - there few
22:06 - now we need the position of the player
22:09 - but relative to the rotation center of
22:11 - the platform
22:12 - set dx to the player's x position
22:16 - subtract the x position of this platform
22:28 - and do the same for the d y setting it
22:30 - to the player's y position
22:32 - subtract the y position of the platform
22:38 - great the next step is to notice that we
22:40 - use the sine and cos of ccw twice each
22:44 - so to simplify the maths we can
22:45 - pre-calculate these values set the
22:48 - variable syn to the operator sine of
22:52 - the input variable ccw counterclockwise
22:56 - similarly duplicate that and set cos
22:59 - to the cosine of ccw
23:03 - cool and now in one swoop we will set
23:06 - platform dx and platform d y so after
23:09 - calculating the rotated position we need
23:12 - to be left with just the change in
23:15 - position
23:16 - to get that we will simply end by
23:18 - subtracting dx like that
23:21 - set the platform dy just the same
23:24 - only subtracting d y
23:28 - okay now follow these next steps
23:30 - carefully so as not to make a mistake
23:33 - bring in a subtract operator and under
23:36 - that an addition yep one of each
23:40 - now we need four multiplications put
23:42 - them either side of the subtract blocks
23:48 - on the far left drop in two dx variables
23:53 - and on the far right
23:55 - two d y variables
23:59 - now for the cos variable carefully now
24:02 - one goes in the top left and the other
24:04 - goes in the bottom right
24:07 - and the sine variable
24:09 - to the top right
24:10 - and the other to the bottom left
24:13 - i just love the pattern of this maths
24:15 - it's so cool now we plug it all together
24:18 - the right hand block drops into the
24:20 - right hand input
24:22 - a quick tip when dragging a rounded
24:24 - block into the input of another block
24:26 - aim the top left corner of the dragged
24:28 - stack at the input rather than where
24:31 - your mouse pointer is the top left
24:33 - corner is what matters there like that
24:37 - do the same for the d y multiplied by
24:39 - cos
24:40 - and now bring in the left hand multiples
24:43 - to both of them
24:45 - great well done so now making sure to
24:48 - drag this by the middle drop the minus
24:51 - stack into the set platform dx and the
24:54 - addition stack into the set platform d y
24:58 - yay this is a thing of beauty and guys i
25:03 - am just bursting to try this out because
25:05 - if everything has gone to plan that
25:07 - really is all we needed okay here we go
25:13 - oh yes right away we can see a huge
25:16 - improvement in movement look at that
25:19 - now something you can't see here is how
25:22 - important episode 8 has been to the
25:24 - success of these rotating platforms the
25:27 - reason for this is as we calculate the
25:29 - new position of the player after a
25:30 - rotation it is almost certain that part
25:33 - of the player will end up colliding with
25:35 - the platform this would be a disaster
25:38 - except that in episode 8 we created the
25:41 - most wonderful script called find
25:43 - closest space 2. this script runs right
25:46 - after the moving platform changes the
25:48 - player's position and as such it
25:50 - searches out the closest spot nearby
25:52 - where the player is no longer colliding
25:55 - and moves us to there this little fix is
25:57 - an absolute lifesaver and we don't even
26:00 - see it happening here but without it
26:03 - boom this would just all fall apart so
26:06 - yay do go back and watch that episode
26:09 - episode 8 again if you need a refresh
26:12 - and so we can now have some fun with
26:15 - other platform ideas why not try making
26:17 - long thin rotating platforms and change
26:20 - the direction of rotation like so
26:22 - yeah this is looking fun the way
26:25 - surfaces move and the player can slide
26:27 - or wall jump off them is so cool how
26:29 - about we make an interesting container
26:31 - shape
26:36 - stuff it on the same scene and make it
26:37 - rotate faster
26:43 - oh my gosh that's manic how can we even
26:46 - interact with this i feel like if i time
26:49 - it right i might be able to jump inside
26:52 - yeah and i'm in the collisions are
26:54 - working really well
27:01 - and i wonder if i'll get squashed if um
27:03 - ah yep deadly
27:06 - so next i'm thinking what this rotating
27:08 - container would be like on scene two
27:10 - instead
27:15 - gotta time this right too
27:17 - now these spikes are really awkward oh
27:20 - man come on
27:21 - yeah
27:22 - that was so cool question is can i get
27:24 - back
27:27 - no no i can't ah
27:29 - you know the best way of coming up with
27:31 - ideas from amazing levels is to do this
27:33 - kind of thing just try placing things in
27:36 - a scene and play test it to see what's
27:38 - fun you never know what will come out of
27:40 - it until you give it a go it's such a
27:41 - laugh and my best ideas come out of just
27:44 - play testing like this
27:45 - and on that note we are drawing to an
27:48 - end but oh my gosh i can hardly contain
27:51 - my excitement to see how you guys make
27:53 - use of these new platforms in your
27:55 - scratch games as always there's a link
27:57 - to the scratch studio in the video
27:59 - description below submit your projects
28:01 - and myself or curator will add it to the
28:03 - studio
28:04 - i hope you've enjoyed today's episode if
28:06 - you did then smash that like button and
28:08 - don't forget to subscribe to the channel
28:10 - so as not to miss my next exciting
28:12 - tutorial
28:13 - if you are a tutor or a dedicated fan
28:15 - then you might consider joining the
28:17 - channel membership to help support the
28:18 - channel further plus you get some epic
28:20 - perks like priority replies to comments
28:23 - early access to videos or the projects
28:25 - themselves and of course those super
28:28 - channel emoji gotta love them right
28:30 - that's it from me thanks for watching
28:33 - have a great week ahead and scratch on
28:35 - guys
28:36 - [Music]
28:46 - foreign
28:52 - [Music]