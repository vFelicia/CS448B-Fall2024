00:00 - hi I'm drift patch and you're very
00:02 - welcome back to part two of my series on
00:04 - creating multiplayer cloud games in
00:06 - scratch today I'm going to show you how
00:08 - we can greatly improve upon the cloud
00:10 - scripts in our last episode we will be
00:12 - sharing a technique called encoding and
00:14 - decoding to squish all our available
00:16 - updates into a single cloud variable per
00:18 - player see the video comparison playing
00:21 - here I'm very excited to share with you
00:23 - the scripts that make this possible so
00:24 - stay tuned until the end of the video
00:27 - where we really get to put them into
00:28 - action
00:29 - encoding means to convert something into
00:31 - a coded form look at the simple code
00:34 - sheet here with this we can encode a
00:37 - word like bed
00:38 - into a string of numbers 11 14 13 since
00:42 - we can only store numbers in cloud
00:44 - variables this encoding is ideal let's
00:48 - add a new list called code and make it
00:51 - for all sprites and add 10 new rows by
00:54 - clicking on the little plus button add
00:56 - row 10 enter the letter a press ENTER
00:59 - and fill out letters b c d e and f each
01:03 - on a new line now in scratch 3 we have
01:06 - this new block called item number the
01:09 - hash symbol here stands for number we
01:12 - use it to look up the item number of a
01:14 - value in the list see here how we
01:18 - request for B comes back with a number
01:20 - 11 let's extend this to encode all three
01:23 - letters of the word bed create a new
01:26 - variable named encoded for this sprite
01:28 - only the variable starts empty and then
01:31 - we join each of the encoded letters in
01:33 - turn on to the end of this new variable
01:37 - click on the block stack to run it and
01:39 - hey presto you can see that the variable
01:41 - encoded has taken on the value 11 14 13
01:45 - just like our example cool
01:48 - so we now want to create a script that
01:49 - will do the same thing but for any word
01:51 - that it is given not just for the work
01:53 - bed let's start by completing our code
01:56 - list to include all the other letters
01:58 - that we will need we add the letters G
02:01 - through Z then add in the numbers 0 to 9
02:05 - and finally to support scratch user
02:08 - names we also add the symbols + - .
02:11 - space and on
02:13 - score remembering to press ENTER after
02:15 - each new letter added now make a new
02:18 - custom block label it right and then add
02:22 - an input named vowel and finally add
02:25 - another label to encoded so the full
02:29 - block becomes right Val - encoded take
02:33 - the run without screen refresh and click
02:35 - OK
02:36 - we need a new variable named letter hash
02:39 - meaning letter number here now hold on
02:43 - while I build this script up then I'll
02:45 - explain how it works if the input named
02:48 - Val is set to Griff patch then the
02:51 - length of vowel will be 10 as there are
02:53 - 10 letters in the word Griff patch so
02:56 - I'll repeat block loop around ten times
02:58 - once for each letter letter number
03:01 - starts as 1 and then each time round the
03:04 - loop we add one to it
03:05 - this means we can keep track of which
03:07 - letter we are looking at next finally we
03:10 - do the same thing we were doing earlier
03:11 - find the item number of the letter in
03:14 - the code list we were encoding and join
03:16 - it to the end of the variable encoded so
03:20 - once this repeat loop finishes we should
03:22 - have successfully encoded all the
03:24 - letters in the input file let's try it
03:27 - out first setting coded to empty and
03:30 - then write bed 2 encoded now click on
03:34 - this block stack should show no change
03:36 - in the value encoded because bed was
03:39 - also the last thing we tested our
03:41 - encoding on so let's change the word to
03:43 - encode to be glyph match ah much better
03:47 - it updates that's brilliant this is a
03:50 - good sign that it's all working now one
03:53 - final touch before we move on we will
03:56 - mark the end of our encoded word with a
03:59 - 0 0 to let us know that we've reached
04:01 - the end this will allow us to encode
04:03 - more than one value by marking the end
04:05 - of one word and the beginning of the
04:07 - next simply setting coded to join
04:10 - encoded with 0 0 great we have our
04:14 - encoding script and it creates values
04:16 - that the cloud system will happily
04:17 - transmit but this is useless without a
04:20 - script to decode the values again at the
04:22 - other end we'll break this up into two
04:25 - custom blocks want to begin the decode
04:27 - and the other to read out the values
04:30 - start by adding a new custom block
04:32 - called begin decode off and add an input
04:36 - of encoded one without screen refresh ok
04:40 - setting coded to the custom blocks
04:42 - encoded input and set letter number to
04:46 - one add a new second custom block called
04:52 - value equals read from encoded run
04:55 - without screen refresh and ok making you
04:58 - variable named value for this sprite
05:00 - only and add a second new variable named
05:03 - ID X and again make it for this sprite
05:06 - only as before let me quickly put this
05:09 - script together and then we can go over
05:11 - how it works ok the variable value
05:17 - begins empty but we are soon going to
05:19 - fill it up as we decode from the values
05:21 - held in the variable encoded we use a
05:24 - forever loop here but notice the stop
05:26 - this script block within the loop this
05:29 - ensures the loop will not actually run
05:31 - forever but stop what we wanted to the
05:33 - first thing we do in the forever loop is
05:35 - to take the first two letters from the
05:37 - variable encoded and stuff them into the
05:39 - Nouvelle port ID X this will give us the
05:42 - first pair of digits that represent a
05:45 - letter to be decoded we then move on our
05:48 - letter number available so that it will
05:50 - be ready to read the next pair of digits
05:52 - when we need them see how we're moving
05:55 - on by 2 not 1 because we are always
05:57 - reading the digits in pairs now we check
06:00 - to see whether we have finished reading
06:02 - in the full word ID X will be less than
06:05 - 1 both when it reaches 0 0 or if there's
06:09 - no more letters to decode so this is a
06:11 - very good safety net if we have reached
06:14 - the end then simply stop this script
06:17 - here make sure that it is not a stop all
06:19 - scripts lastly if we have not reached
06:23 - the end then we look up the letter
06:25 - represented by the two digits in our
06:27 - code list and join it the end of the
06:30 - variable named value the loop then
06:33 - repeats again reading in new letters
06:35 - until we do indeed reach the end of the
06:37 - word great
06:39 - let's test this decoder drag out the new
06:43 - custom block value week was read from
06:45 - encoded and put it under the begin
06:47 - decode block now click it yes you should
06:50 - be seeing the word bed appear in the
06:52 - value variable if so then I'm so happy
06:56 - well done for following the script so
06:58 - closely I know these are a bit tricky
07:01 - let's try to gain for another word goof
07:04 - match click to encode click the decode
07:08 - great
07:09 - but watch this there's more to these
07:12 - scripts than just encoding a single
07:14 - value let's duplicate the right block
07:17 - from our test and encode two different
07:19 - values one two three and then four five
07:22 - six one after the other and then we
07:25 - click to encode them both we have now
07:28 - encoded both these values into the same
07:30 - encoded variable to get these values
07:33 - back out we first separate the begin
07:36 - decoding from the value reader block
07:38 - here and click the begin decoding block
07:40 - next click the read from encoder block
07:43 - and we should find that the value has
07:45 - become one two three the first of our
07:47 - encoded values click the read lock again
07:50 - and we get four five six the second
07:53 - value we encoded perfect we are making
07:58 - great progress with these custom blocks
08:01 - defined we are well on our way to making
08:03 - a better multiplayer script let's clean
08:06 - it up a bit we don't need these of test
08:08 - blocks anymore now scroll back to our
08:12 - original cloud scripts let's have some
08:14 - fun I feel we've earned it so previously
08:17 - we were storing two values the mouse x
08:20 - and y in two cloud variables this is
08:23 - just not good as we've shown so instead
08:25 - we now use our encoder to write them
08:28 - into a single encoded value start by
08:31 - using our right two encoded block oops
08:34 - almost forgot don't forget to set
08:36 - encoded to blank before that and we want
08:39 - to write out two values to encode so
08:41 - duplicate the right block and we write
08:44 - the values of mouse X and Mouse Y now
08:48 - that we have these as a single encoded
08:50 - value we only need a single cloud
08:52 - variable to store
08:53 - let's create a new cloud verbal called
08:56 - just p1 for player 1 drag in a set block
09:00 - setting our cloud verbal p12 the value
09:03 - of encoded so let's swap out the old
09:05 - code for these four new lines
09:07 - that's the encoding taken care off we
09:10 - now need to rework the decoding script
09:12 - below bring in our begin decode of block
09:15 - and drop in the value of the cloud
09:17 - variable p1 for decoding now because we
09:19 - decode one value at a time it'll
09:22 - simplify the scripting if we now use a
09:24 - set X to block here let's decode the
09:27 - exposition from the cloud variable using
09:29 - our value equals read from encoded block
09:31 - and then set X to the decoded value now
09:35 - duplicate the last two blocks and we'll
09:37 - do the same for the Y position don't
09:40 - forget to swap the set X for a set Y
09:42 - block here now the first moment of truth
09:46 - has come if our scripts work then we
09:50 - should still be able to run this project
09:51 - and have the cat follow our mouse cursor
09:54 - we press the green flag with the mouse
09:56 - and then tap the number one key to
09:59 - assign us to be player one and look at
10:01 - that success we can see the player one
10:04 - cloud variable updating and more
10:05 - importantly right now the player
10:07 - position is correctly being decoded so
10:10 - that the cat is again following our
10:11 - mouse this is great news so our program
10:15 - is working so far but this is now the
10:17 - second moment of truth let's see if it
10:20 - works across web browsers as in my
10:23 - previous video I open a second incognito
10:26 - web browser I load up the same project
10:28 - in my Grif batch account click the green
10:31 - flag on both projects then clicking into
10:34 - the left-hand page I press with the one
10:36 - key to activate it as player one moving
10:40 - the mouse around you can see that the
10:41 - position of the player is mirrored far
10:43 - more accurately now than it was in the
10:45 - last episode in the second window we no
10:48 - longer have the problem where the cat
10:49 - jumps around and the framerate is
10:51 - definitely improved that's so much
10:53 - better
10:54 - we are now seeing the cat update every
10:56 - 1/10 of a second in that window this is
10:59 - as fast as cloud data can go if we want
11:02 - the cat to move smoother than this
11:03 - we'll have to employ some clever
11:05 - programming trick
11:06 - which I will cover in later videos okay
11:10 - so I want to squeeze in one more feature
11:12 - before I finish this episode let's hide
11:15 - all these debug values now add in
11:18 - another write block and drop in the
11:20 - players username then in the decoding
11:22 - section of our code we add another value
11:25 - we could read from encoded block and
11:27 - from the looks panel drag out a say
11:30 - block and in there drop the value
11:32 - variable and let's save the project 5
11:34 - another window again and give it a try
11:37 - when I press one after clicking in the
11:39 - left-hand window you can see my user
11:42 - name appears in both windows this is
11:44 - great it shows that player 1 on both
11:47 - screens is with branch tutor now if I
11:50 - press the green flag again for both
11:52 - projects and this time click the wonky
11:55 - on the right window you see that player
11:58 - 1 is now shown as Grif patch on both
12:00 - screens achievement unlocked guys
12:02 - awesome work and that is it for this
12:06 - video please subscribe love the video
12:08 - and watch out for part 3 in this series
12:10 - I am Griff patch and thank you for
12:12 - watching scratch on
12:21 - you