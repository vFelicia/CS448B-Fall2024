00:00 - [Music]
00:02 - hello fellow scratchers
00:04 - do you like car simulations ever
00:06 - wondered how to create
00:07 - simple yet realistic car mechanics in
00:09 - your own scratch games
00:11 - i'm griff patch and today we are going
00:13 - to learn how to do just that
00:15 - a basic front-wheel drive car not only
00:17 - steers from the front
00:19 - but also is powered by the front wheels
00:21 - too this means that the front of the car
00:23 - both points it
00:24 - where to go but also moves in that same
00:26 - direction
00:27 - the back wheels are lazy things and they
00:29 - just happily follow a car length behind
00:32 - wherever the front wheels take them this
00:34 - is a wonderfully simple concept
00:36 - and you absolutely must stay tuned until
00:38 - the very end because
00:39 - i have a real treat for you where we
00:41 - take this idea even further
00:43 - and you're gonna love it i know you will
00:45 - but first let's mock up the movement of
00:47 - these front wheels
00:49 - delete sprite one and create a new
00:51 - sprite naming it front wheels
00:53 - in the costume editor draw up a simple
00:55 - arrow to indicate where the wheels are
00:57 - pointing
00:58 - make sure the start of the arrow is
01:00 - positioned at the sprite
01:02 - center here this will allow it to rotate
01:05 - around this point
01:07 - we'll start when a green flag is clicked
01:10 - create a new variable named
01:11 - zoom for all sprites you'll find it
01:14 - useful to be able to set the size of the
01:16 - car
01:16 - using this later on set it to 2
01:20 - so we're zoomed in twice as big set
01:23 - size to 100 multiplied by zoom
01:26 - and position the sprite at an x y of
01:28 - zero by zero
01:31 - and in a forever loop and for now
01:32 - remembering the front wheel just points
01:34 - where we want it to go
01:36 - we point the wheel towards the mouse
01:38 - pointer
01:39 - we can test this and yeah that's working
01:42 - as expected
01:44 - so next we'll deal with the forward and
01:46 - back movement
01:47 - add a new custom block for this naming
01:49 - it acceleration
01:51 - with an input variable of joystick y
01:57 - we'll drop this new block into the
01:58 - forever loop and use a neat trick of
02:01 - key up arrow pressed minus key down
02:04 - arrow pressed
02:05 - to give a one for forward and a -1 for
02:07 - backwards
02:08 - watch my other videos for an explanation
02:10 - of this
02:12 - then under the define acceleration hat
02:14 - block simply
02:15 - move zoom multiplied by joystick y
02:19 - we multiplied by zoom here so that the
02:21 - car moves faster
02:22 - when we are zoomed in run the project
02:25 - and test that the forward and backwards
02:27 - arrow keys
02:27 - move the front wheel sprite arrow
02:30 - forward and backwards
02:32 - pretty standard stuff so far but you
02:34 - just wait
02:35 - this is about to get very exciting
02:38 - the front wheels are now maneuverable
02:40 - which is enough to allow us to
02:42 - experiment with adding the rest of the
02:43 - car
02:44 - make a new sprite naming it car body
02:47 - i'll draw a simple outline of the car
02:50 - mine is 58 by 35
02:52 - pixels but this is all pretty rough
02:55 - make sure it's centered by dragging it
02:57 - until it snaps to the middle
02:59 - i'll just paint on the back and front
03:01 - windows and a roof
03:03 - now select the whole car and while
03:05 - holding the shift key
03:07 - drag it to the right so the center of
03:09 - the costume is between where you would
03:11 - imagine the back wheels to be
03:13 - this is again where the back of the car
03:15 - is to rotate around now in the code
03:19 - when green flag is clicked set the size
03:22 - to 100 multiplied by zoom
03:24 - to allow the car body to be attached to
03:27 - the wheels
03:28 - we need to record how long the distance
03:30 - between the cars front
03:31 - and back wheels is make a new variable
03:34 - named
03:34 - body length and for my car i'll set it
03:37 - to around 34
03:39 - but you can try different values if
03:41 - things are slightly off
03:43 - more on that later go to front layer
03:46 - and enter a ferro loop now a car's body
03:49 - always follows its front wheels
03:51 - so start by pointing the car at the
03:53 - front wheels
03:54 - then move the car body up to the wheels
03:57 - using a go to front wheels but that will
04:00 - be too close
04:01 - so move back by the body length that is
04:04 - move
04:05 - zero minus body length multiplied by
04:08 - zoom
04:10 - now this is exciting run the project
04:13 - and look at that it's like magic oh cool
04:17 - with these few scripts we have a car
04:19 - that is following the front wheels
04:21 - perfectly i can even move backwards and
04:24 - the back end
04:25 - swings out so realistically you might
04:27 - already have deduced that this is
04:28 - actually the basis
04:30 - some really cool inverse kinesmatics
04:33 - anyhow i digress can you notice a slight
04:36 - lag
04:37 - in the connection between the front and
04:39 - back sprites where the arrow appears to
04:41 - stretch away
04:42 - from the car body this is caused by the
04:44 - car body scripts running before the
04:46 - front wheel scripts
04:47 - and so it is lagging one frame behind
04:50 - the movements
04:51 - to fix this we'll replace the green flag
04:54 - in the car body sprite
04:55 - with a when i receive block making a new
04:58 - event named
04:59 - car body and will get rid of the old
05:01 - green flag block
05:03 - then in the front wheel sprite broadcast
05:07 - car body just before the forever loop
05:10 - that will ensure the front wheel scripts
05:12 - run first then the car
05:14 - body next getting in first with the
05:16 - front wheel scripts is
05:18 - key to ordering the loop execution i
05:20 - will be making a more technical tutorial
05:22 - on this subject later
05:24 - so watch out for that run the project
05:26 - again
05:27 - and there the front wheel arrow is now
05:29 - firmly attached without any stretching
05:33 - okay so this is coming together really
05:36 - quickly now
05:37 - let's add some more realistic
05:38 - acceleration scripts
05:41 - to record the current car speed make a
05:43 - new variable
05:44 - named speed for all sprites and set it
05:48 - to zero
05:49 - then make another new variable named
05:51 - power to record the power of the car's
05:54 - engine and we'll set it to 0.3
05:57 - you can play with these values to suit
05:59 - your game one more new variable
06:01 - named break for controlling how quickly
06:04 - the car slows down
06:06 - and we'll set that to 0.96
06:09 - the closer to one this value is the
06:11 - longer the car takes to slow down
06:14 - right we're going to update the
06:16 - accelerate scripts over here
06:18 - we'll use the standard acceleration
06:20 - script so change
06:22 - speed by power multiplied by joystick y
06:25 - to accelerate the car but then set speed
06:28 - to speed multiplied by break to slow the
06:31 - car down
06:33 - the first one is a change the second one
06:35 - is a set
06:37 - don't forget to change the move block to
06:39 - use zoom multiplied by speed
06:43 - we can test this again now oh yeah this
06:45 - is cool
06:46 - the car is feeling much more nippy hmm i
06:49 - think we might need to zoom out a bit
06:51 - as we are quickly running out of space
06:53 - to drive select the front wheel sprite
06:55 - and set zoom to one ah that's a lot
06:59 - better
06:59 - we are much more zoomed out now we just
07:02 - need to make the steering more realistic
07:04 - too
07:04 - we want to simulate a steering wheel
07:06 - that can be turned left and right
07:08 - relative to the car
07:11 - in the front wheel sprite make a new
07:13 - variable named
07:14 - steer for this sprite only and we'll
07:17 - start by setting it to zero
07:20 - now create a new custom block naming it
07:22 - turn with an input of joystick x
07:26 - we'll use it right away with the value
07:30 - key right arrow pressed subtract key
07:33 - left arrow pressed within this define
07:35 - block
07:36 - we'll code steering like we coded
07:38 - acceleration
07:39 - so change steer by 4 multiplied by
07:42 - joystick x 4
07:45 - is the turning power a larger value
07:48 - gives a faster turn
07:50 - to bring the steering wheel back to the
07:51 - center set steer
07:53 - to steer times by 0.9
07:57 - okay we want the front wheels to
07:59 - initially point in the same direction as
08:01 - the car body
08:02 - so remove this old point towards mouse
08:05 - and then
08:05 - add in a point in direction careful not
08:08 - to use the point towards here
08:11 - and get the direction of the car body
08:14 - but then we add our new steer variable
08:17 - to this
08:17 - to give the effect of steering relative
08:20 - to the car body
08:21 - yay it's test time ah nice i can turn my
08:25 - steering wheel from the left and right
08:26 - arrows
08:28 - that feels pretty natural
08:31 - and if i use the forward and back keys
08:34 - oh
08:34 - yeah that's what i'm talking about we've
08:37 - suddenly got an
08:38 - awesome car under our control i just
08:40 - love the reversing it's so natural
08:42 - notice how the reverse turning circle is
08:44 - much tighter
08:45 - than when moving forward or it's so cool
08:48 - to play with
08:49 - this is cause for celebration a nice
08:52 - paint job perhaps
08:53 - ah beautiful sporty red
08:56 - so what next have you ever played one of
08:59 - those parking games
09:00 - you know where you have to maneuver a
09:02 - car into a parking slot
09:04 - how about we create something a bit like
09:06 - that start by making a new sprite and
09:09 - i'll name it target
09:11 - to gauge the required parking spot size
09:13 - we can copy
09:14 - in the car costume to our new sprite
09:17 - we'll draw a nice rectangle around it
09:19 - using it as a guide
09:22 - then delete the car
09:25 - and we can center the rectangle i'll
09:28 - name this sprite
09:29 - outline we need a second duplicate
09:32 - costume
09:33 - we'll name it phil that will be used to
09:35 - detect sprite collisions within the
09:37 - parking space
09:39 - draw a filled rectangle well within the
09:42 - first rectangle
09:43 - and then remove the outside rectangle
09:45 - when happy
09:47 - now when the green flag is clicked loop
09:50 - forever
09:51 - first switching to the filled costume
09:53 - and then
09:54 - with an if else check if this filled
09:57 - rectangle is touching the car body
10:00 - if it is say touching otherwise
10:04 - say nothing a quick test shows that this
10:07 - works great
10:08 - but what we really need to know is when
10:11 - the car is
10:12 - fully within the parking space not
10:14 - overlapping the edge of the costume like
10:16 - it currently can to do this
10:18 - duplicate the switch costume and the if
10:21 - nesting them within the first if
10:24 - this time we change the costume to
10:25 - outline so
10:27 - if we are touching the filled area and
10:29 - also touching the outline
10:32 - then we can say touching outline but if
10:35 - we are touching the fill
10:36 - and not touching the outline then we
10:39 - must be fully within the rectangle and
10:41 - we can say
10:42 - win we should remove this last say block
10:46 - now if we test again we get the touching
10:48 - outline as we enter the box
10:50 - but as soon as we are fully within it
10:52 - changes to win
10:53 - that's what we wanted success
10:58 - just switch costume to outline here to
11:00 - ensure it always looks good
11:02 - we don't ever want the filled rectangle
11:04 - to appear only the outline
11:08 - looking very good
11:11 - next up in our game should be adding
11:13 - obstacles to drive around
11:15 - before we create these it would help to
11:17 - better position the car
11:18 - at the start of a level to give us more
11:20 - room to play with
11:21 - in the front wheels sprite after setting
11:24 - zoom
11:26 - broadcast a new message of reset
11:32 - then when i receive reset
11:37 - split off the broadcast car body and add
11:40 - a new broadcast
11:41 - of game on and then when i receive game
11:44 - on
11:45 - continue the rest of the scripts now
11:47 - let's fix the starting position of the
11:49 - car
11:51 - go to minus 180 by minus 60.
11:56 - and point in direction zero that's up
11:58 - lastly
11:59 - we'll also add a stop other scripts in
12:01 - the sprite to the top
12:03 - of the reset receiver to allow us to
12:05 - break out of the game loop
12:07 - below when the level is reset
12:10 - we should do the same in the car body
12:12 - sprite when i receive reset
12:15 - stop other scripts in this sprite
12:19 - we'll also then go to -180 by
12:22 - -80 that's slightly below the other one
12:24 - and point in direction zero
12:26 - facing up then move the set size and
12:29 - body length
12:30 - up into the reset script everything else
12:33 - will leave in the when i receive car
12:35 - body
12:36 - this takes care of all the resetting
12:38 - things nicely
12:39 - if we run the project that should now
12:41 - position the car in the bottom left
12:43 - region of the screen
12:44 - that's a good place to start right
12:47 - now for those obstacles we'll create a
12:50 - new sprite
12:50 - named obstacles enter an xy position of
12:54 - zero to center the sprite
12:55 - and then draw some simple walls first to
12:58 - maneuver around
13:00 - okay so we could do with repositioning
13:02 - our parking space
13:03 - to fit the level so switch to the target
13:06 - sprite
13:07 - and if you can actually grab it i'm
13:09 - afraid it's a bit fiddly
13:10 - then position it to where you want it to
13:12 - be
13:13 - now in the target sprites code at a when
13:16 - i receive game on receiver
13:18 - we need to set up this level so make a
13:20 - new custom block named
13:21 - setup drag it under the receiver and for
13:24 - now we'll simply use
13:25 - a go to block if you are lucky it will
13:29 - be pre-populated with the position of
13:31 - the car's parking space
13:33 - otherwise enter the numbers in to match
13:35 - the x and y
13:36 - shown under the stage view we also need
13:39 - a point in direction
13:40 - to match its direction it's a good idea
13:43 - to set size to 100 times zoom
13:45 - so that the parking space matches our
13:47 - car's size
13:49 - right we won't need this green flag
13:51 - block anymore
13:52 - but before we move from the setup to
13:54 - looking for winds just add a small
13:56 - weight of 0.2 seconds to ensure the
13:59 - level fully resets
14:01 - we don't want to mistrigger a win until
14:04 - we are sure that the car and the parking
14:06 - space have been repositioned
14:08 - then join up the scripts
14:11 - i can just test that running the project
14:13 - does indeed reset the position
14:15 - and yeah it does spring back to where
14:16 - we'd expect
14:18 - to detect the collisions between the car
14:20 - and the obstacle sprite
14:22 - select the car body sprite and add an if
14:25 - touching obstacles
14:26 - at the bottom of the forever loop if we
14:29 - touch
14:29 - then simply broadcast reset that should
14:32 - put us right back to the start of the
14:34 - level
14:35 - we might as well check that out yep
14:37 - certainly can't get through these walls
14:39 - now
14:40 - and driving carefully around the course
14:42 - i should be able to get to the parking
14:44 - space
14:45 - yes i am a master driver i win
14:48 - that is already surprisingly fun
14:51 - so i'd expect now to be taken on to the
14:53 - next level
14:55 - in the front wheels sprite make a new
14:57 - variable named
14:58 - level for all sprites and set it to
15:01 - level 1
15:01 - after the green flag is clicked
15:06 - back in the target sprite we need to
15:08 - upgrade our winning scripts
15:10 - where we say win broadcast the new
15:13 - message
15:14 - win and we can safely remove all three
15:17 - of these say blocks now
15:19 - a new sprite is needed name it win
15:23 - using the pixel font i'm going to make
15:24 - an appropriate congratulatory message
15:27 - you win so when green flag is clicked
15:30 - go to zero zero
15:34 - then when i receive game on
15:36 - [Music]
15:38 - hide the sprite next when i receive
15:41 - win celebrate by stopping the other
15:44 - scripts in this sprite
15:45 - this will be useful later and show our
15:48 - winning message
15:49 - we should go to the front layer and
15:51 - we'll wait for two seconds
15:54 - now just in case the player is still
15:55 - holding down any keys
15:57 - wait until no keys are pressed we can do
16:00 - this using a
16:01 - not key any pressed
16:04 - before changing level by one that will
16:07 - take us to the next level
16:08 - and then we broadcast reset to set that
16:10 - level up
16:12 - if we test the project on reaching our
16:14 - goal
16:19 - the you win message appears and two
16:21 - seconds later
16:22 - the level resets and look we are on
16:25 - level two
16:26 - apparently only we don't have no level
16:29 - two yet
16:30 - quickly then to the obstacle sprite to
16:33 - design a second level
16:34 - just a little code here when i receive
16:37 - game on switch costume
16:38 - to the level variable then go to x y
16:42 - of 0 0 jump into the costume designer
16:45 - now and let's get drawing
16:47 - costume 2 will be a level of cones for
16:50 - me hmm
16:51 - i may have overdone this one keeping
16:54 - things simple is always a good idea
16:56 - don't just copy me here though do
16:57 - whatever you feel like and have
16:59 - fun now i need to reposition the parking
17:02 - space to match the level
17:04 - when happy click into the target sprite
17:07 - wrap the first scripts in an if and
17:10 - check for
17:10 - level of one now we can duplicate the if
17:14 - for level two
17:15 - and fill in the new positions and
17:16 - rotations something like this
17:20 - let's test i'll just whiz through the
17:22 - first level and wait for it
17:28 - yay we've made it to level two the level
17:31 - costume has switched and the parking
17:32 - space has moved
17:34 - excellent now you should have no
17:36 - difficulty in adding as many levels as
17:37 - takes your fancy
17:39 - hmm hold on though my car is too big to
17:42 - get around this level
17:43 - at all i knew that second level was
17:45 - going to cause me problems
17:47 - so we have a few options here we could
17:49 - redesign the level
17:51 - probably a good idea or perhaps we
17:53 - should shrink our car down
17:54 - even more in the front wheel sprite
17:58 - i'll set zoom to 0.75 and now
18:09 - oh yeah like a pro
18:14 - so to wrap things up quickly if you
18:17 - wanted a reset level key
18:19 - we could do that in the win sprite by
18:21 - adding a when r key pressed
18:22 - stop other scripts in sprite and
18:24 - broadcast reset
18:26 - a level skip key can be done in just the
18:28 - same way but from the l key for example
18:31 - and with a change level by one before
18:33 - the broadcast to reset
18:35 - if you wanted a timer well then i'm sure
18:38 - you could figure out a way but if you
18:39 - want a quick script then
18:41 - make a new timer variable for all
18:43 - sprites then make a new custom block
18:45 - named set
18:46 - timer with an input of time we'll set
18:49 - time to zero
18:50 - under the when i receive game on and
18:53 - within the custom block
18:54 - set the variable timer to time divided
18:57 - by
18:57 - 100. now i want this timer to only begin
19:00 - timing
19:01 - when the car moves forward or back
19:04 - so add a quick wait for 0.1 seconds for
19:07 - the setup to complete
19:09 - and then wait until speed is not equal
19:12 - to
19:12 - zero then reset scratch's timer
19:16 - and enter a forever loop in here we'll
19:19 - use our set timer block
19:21 - and pass in the floor of scratch's timer
19:23 - multiplied by 100
19:28 - give that a quick run now see the timer
19:30 - is not moving but we can wiggle our
19:32 - wheels around
19:33 - i like that then as soon as we start
19:36 - moving
19:36 - the timer begins crashing the car causes
19:40 - time to reset
19:41 - and then when we complete the level the
19:44 - timer stops
19:45 - it stops because we added a stop other
19:47 - scripts in sprite
19:48 - on the win receiver now
19:52 - one thing i'd like to change is that our
19:54 - car rolls on
19:55 - past the parking space when we win we
19:58 - should probably stop it moving
20:00 - but the choice is yours to stop it
20:03 - in the front wheel sprite under the game
20:05 - on receiver
20:06 - add a wait until before the forever loop
20:09 - waiting until no key is pressed this is
20:12 - actually to ensure the game doesn't
20:14 - accidentally begin
20:15 - after the level resets now add a when i
20:19 - receive
20:19 - win and we will stop other scripts in
20:22 - sprite
20:23 - this should end the main game loop when
20:25 - we have beaten a level and therefore
20:28 - stop the car i'll just complete the
20:30 - level and the car
20:31 - has stopped excellent but hold on
20:35 - shouldn't the level have progressed to
20:36 - level two by now oh gosh i think we have
20:40 - a bug
20:41 - okay after extensive debugging i have
20:43 - found the problem
20:44 - it's here in the target sprite we
20:47 - broadcast
20:48 - win here but this forever loop keeps
20:50 - running after the level is complete
20:52 - and so keeps broadcasting win over and
20:54 - over
20:55 - this in turn keeps the game from ever
20:57 - progressing easy fix though
20:59 - drop in and stop this script that's this
21:02 - script
21:02 - after the broadcast and here we go again
21:10 - and yeah job done but this second level
21:13 - is still
21:14 - a monster seriously this should not be a
21:17 - second level
21:18 - lol one might ragequit
21:21 - so where do we go from here well there
21:24 - are loads of options open to you
21:26 - and you can go to town with designing
21:27 - your levels you might even like to add
21:30 - something that says which way round the
21:31 - car needs to face to trigger the parking
21:34 - some in reverse for example or have
21:37 - flags to collect before you're allowed
21:39 - to park
21:40 - add a high score the best time for each
21:42 - level or even maybe
21:44 - moving obstacles on the level to get
21:46 - past
21:47 - but before we wrap up i want to show you
21:49 - something
21:50 - really really cool this is what i told
21:53 - you about
21:54 - at the beginning do you know we can also
21:56 - simulate
21:57 - articulated trucks with this car physics
22:00 - simulation
22:01 - watch this in the car sprite i'll just
22:04 - duplicate the first costume
22:05 - and redraw it as the front of a truck
22:08 - this is more of a european design with a
22:10 - flat front
22:11 - i need to update the body length
22:13 - variable to account for the shorter
22:15 - length 25 perhaps will do
22:18 - now duplicate the entire car body sprite
22:24 - naming it trailer for the trailer's
22:27 - costume we extend out the original car
22:29 - costume to the right
22:30 - mine is like 90 pixels long or so now
22:34 - this will link onto the back of the
22:35 - truck something like so
22:38 - i need to adjust its starting position
22:40 - to be lower than the car body was
22:42 - minus 150 will do the body length is
22:45 - much longer
22:47 - something like 70 but we can come back
22:50 - and tweak that
22:51 - add a new event receiver and i'll call
22:53 - it trailer
22:55 - update the point towards and go to to
22:57 - make them follow the car body instead of
22:59 - the car wheels
23:02 - lastly in the front wheel sprite add in
23:06 - a broadcast
23:07 - trailer after the other broadcast of car
23:09 - body
23:11 - and test hmm okay
23:15 - so the trailer's body length is too
23:17 - small
23:18 - click back into the trailer sprite and
23:20 - try a bigger value for body length maybe
23:22 - 90. oh no too long
23:25 - i'll go with 85.
23:29 - ah better
23:32 - let's give it a test drive
23:35 - oh man would you look at that that is so
23:38 - cool
23:39 - can you imagine what we could do with
23:40 - this we don't even have to stop at one
23:43 - trailer
23:44 - you could recreate a whole train anyway
23:47 - if you wanted to go on and make levels
23:49 - that work with this trailer then you
23:51 - probably want to make sure the parking
23:53 - space is bigger
23:54 - and longer and also trigger off touching
23:56 - the trailer
23:57 - not the car body any longer but that's
24:00 - up to you
24:01 - but today we will end here but i do have
24:04 - more to share on this subject so look
24:07 - out for a tutorial on that in the near
24:09 - future
24:10 - i do hope you've enjoyed this tutorial
24:12 - and that it's inspired you to create
24:13 - some awesome scratch projects
24:16 - please do smash the like button and
24:17 - don't forget to subscribe to the channel
24:19 - to avoid missing my next exciting video
24:22 - thank you for watching and scratch on
24:25 - [Music]
24:30 - guys
24:35 - [Music]
25:01 - you