00:00 - hey guys in this video I'm gonna give
00:02 - you a quick introduction to four loops
00:04 - in Python and to download the sample
00:06 - file for this video just go to CS loader
00:09 - dot io / Python 5 so suppose you have
00:12 - this lists a equals square brackets
00:15 - banana comma Apple and Microsoft then
00:20 - what if you wanted to iterate through
00:22 - each element of this list meaning what
00:24 - if you wanted to do something with each
00:26 - item of this lists so one way to do that
00:29 - for example if you wanted to print each
00:31 - element would be to say print a square
00:34 - brackets 1 which selects of course the
00:36 - first item banana and print a square
00:39 - brackets 1 and print a square brackets 2
00:42 - so this method works but it's kind of
00:45 - cumbersome because we need to repeat the
00:47 - same statement over and over again and
00:49 - that would be a lot of work for example
00:51 - if this list had 100 elements so instead
00:55 - we can use something called a for loop
00:57 - so you can write for element in a the
01:02 - lists : 4 spaces print element and this
01:07 - whole block says for each element in a
01:11 - do the following which is printing
01:14 - printing each element let's see if it
01:16 - works and it does it prints out banana
01:19 - Apple and Microsoft and you can have
01:22 - multiple statements in this for block as
01:24 - well by writing print element again and
01:28 - note that we have 4 spaces in front of
01:30 - this line as well
01:31 - just like we saw in an if block and when
01:34 - we run this so we see that each element
01:37 - is printed twice ok let's take a look at
01:40 - another example here we have B square
01:42 - brackets 20 comma 10 comma 5 2 print
01:46 - each element of this list we can write
01:49 - for element in B just like before print
01:53 - element and actually this word element
01:56 - is something we can choose so we can use
01:59 - pretty much anything we want
02:00 - so let's write for e in B print E and
02:06 - once we run the cell each almond is
02:08 - printed and what if you wanted to find
02:10 - the sum of this lists
02:13 - one way to do that would be to
02:15 - initialize a new variable called let's
02:18 - say total and let's initialize it to
02:20 - zero and in this for loop we want to add
02:24 - each element e to total we can do that
02:28 - for example with total equals total plus
02:31 - e
02:31 - let's get rid of this print statement
02:33 - and so what this four-block does is
02:37 - it'll go through each element in B so e
02:40 - will be initially 20 and then 10 and
02:43 - then 5 and then for each e
02:45 - we're going to add it to total so total
02:48 - will be originally 0 and when e is equal
02:51 - to 20 we'll have total the new value of
02:54 - total is equal to the old value of total
02:57 - which is their plus 20 so total will be
02:59 - 20 and when e is equal to 10 the old
03:03 - value of total will be 20 and E will be
03:05 - 10 so the new value will be 30 so at the
03:09 - end we should have total being equal to
03:12 - 35 which is some of these lists let's
03:15 - check that by printing total after the
03:17 - for loop and let's run this cell and we
03:19 - see 35 which is expected so what if
03:22 - instead you wanted to find the sum of 1
03:25 - 2 3 & 4 one way to do this would be to
03:29 - create a new lists with these four
03:32 - numbers but there's actually a better
03:34 - way of doing that and that is to use the
03:36 - range function in Python and to use it
03:39 - you can just write range parentheses 1
03:42 - comma 5
03:43 - this means create a range of numbers
03:46 - starting at 1 through 5 but not
03:50 - including 5 and this method is better
03:52 - for example if we wanted to find the sum
03:55 - of 1 to 100 you probably don't want to
03:59 - write 1 through 100 explicitly because
04:01 - that would be a lot of work so like I
04:04 - said range of 1 through 5 creates a
04:06 - range of numbers starting from 1 till 5
04:10 - but not including 5 and it's sort of
04:13 - like a list and to see what's inside you
04:16 - can actually convert it to a lists with
04:19 - the lists function so I just wrote lists
04:23 - parentheses and inside the parentheses
04:26 - of 1 comma 5 so we're creating a new
04:29 - range and then putting it into the list
04:32 - function to convert it to a list let's
04:34 - put it to a new variable C and then
04:37 - print what's inside C with print C as
04:40 - you can see range of 1 5 is sort of like
04:44 - the lists 1 2 3 and 4 and you can use
04:47 - this range in a for loop so you can just
04:50 - write for I in range 1 comma 5 : let's
04:56 - say print I and again this word I is
05:00 - something we chose so this should print
05:03 - each element in this range 1 2 3 and 4
05:07 - and it does so what if you wanted to
05:10 - find the sum of these four numbers you
05:13 - can do that just like before with total
05:16 - to equals 0 and that initializes this
05:20 - new variable called total 2 to 0 and
05:22 - then we can add each I these items 1 2 3
05:27 - and 4
05:28 - by writing total 2 equals total 2 plus I
05:32 - and actually there's a shortcut for it
05:34 - and that's total 2 plus equals I that
05:39 - says the new value of total 2 should be
05:42 - the sum of the old value of total 2 plus
05:45 - I and that way we'll be able to add 1 2
05:48 - 3 & 4 2 total 2 which is at the
05:51 - beginning 0 so we should get 10 because
05:54 - 1 plus 2 Plus 3 plus 4 is 10 so let's
05:57 - check that by printing total 2 and we
06:00 - have 10 okay let's take a look at
06:02 - another example here we're going to use
06:04 - range of 1 comma 8 so that's the range
06:09 - of numbers starting from 1 to 8 but not
06:13 - including 8 so if we convert it to a
06:16 - list with the lists function and then
06:19 - once we print it
06:21 - we'll see 1 to 7 now out of these
06:25 - numbers what if we wanted to find the
06:27 - sum of only the multiples of 3 so here
06:31 - the only multiples of 3 we have are 3 &
06:34 - 6 so we want to add them up and find the
06:39 - number 9
06:40 - it's kind of silly in this small example
06:42 - but it could be useful when the range is
06:45 - much larger so to do that we're going to
06:47 - define a new variable let's call it
06:50 - total 3 to 0 just like before and then
06:54 - we're gonna run a for loop with for I in
06:57 - range of 1 comma 8 and here we want to
07:01 - be able to say if I is a multiple of 3
07:05 - so we want to check for each number I if
07:09 - that number is a multiple of 3 and if
07:12 - that's true then add I to total three
07:16 - ways total 3 plus equals I and to check
07:19 - if something is a multiple of 3
07:22 - we need to learn something called a
07:24 - modulo operator here's an example of a
07:27 - modulo operator let's say print 4 % 3
07:32 - this says divide four-way 3 and this
07:37 - modulo operator % gives us the remainder
07:40 - of that division so 4 divided by 3 is of
07:45 - course 1 with the remainder 1 so we
07:48 - should be able to print the remainder
07:49 - which is 1 and we did what if you had
07:54 - print 5 mod 3 or 5 percent 3 this should
08:00 - give us 2 because the remainder is 2 and
08:03 - it did what if you had 1 mod 3 this will
08:09 - give us 1 because the remainder would be
08:11 - 1 and what if you had 6 mod 3 the
08:17 - remainder in this case is 0 so this will
08:19 - give us 0 ok so to check if I is a
08:23 - multiple of 3 we just need to do i % 3
08:28 - or I mod 3 if this is equal to 0 then I
08:34 - is a multiple of 3
08:35 - so then if that's the case add I to
08:38 - total 3 with total 3 plus equals I and
08:42 - then we're done let's print total 3 and
08:45 - just to remind ourselves range of 1
08:48 - comma 8 is the numbers 1 through 7 and
08:52 - the mall
08:53 - 4:03 are three and six so as the some of
08:56 - those which you get nine here and we
08:59 - just did okay here's a little task for
09:02 - you to practice where you just learn can
09:04 - you compute the sum of all multiples of
09:07 - three and five there are less than 100
09:13 - so to get all the positive integers that
09:16 - are less than 100
09:18 - you can just do range of 1 comma 100 and
09:22 - you can check what it looks like with
09:25 - the list function and you can print this
09:28 - list with the print function and you get
09:31 - the positive integers 1 through 99 so
09:34 - what you want to do here is add up 3
09:38 - which is a multiple of 3 5 6 and so on
09:42 - and you'll notice that there are some
09:45 - numbers that are both multiples of 3 and
09:48 - 5 for example 15 which is a multiple of
09:50 - 3 and 5 so if you're able to solve this
09:53 - problem just let me know in the comment
09:56 - below and if you're new here
09:58 - you should join dozer gang by
10:00 - subscribing to this channel and I didn't
10:03 - come up with this name those were gang
10:04 - one of my viewers did so thanks the
10:07 - anonymous for that and of course to
10:09 - download the sample file for this file
10:10 - you can just go to the CS dojo dot io /
10:13 - price of 5 and as usual I'm YK from CS
10:18 - dojo and I'll see you guys in the next
10:20 - video