00:00 - hey guys this is part two of my
00:02 - introduction to classes and objects with
00:05 - Python and in this video I'm going to
00:07 - talk about how multiple classes and
00:09 - objects can interact with each other in
00:12 - Python now if you're new to these
00:14 - concepts
00:15 - I'd recommend my introduction to classes
00:17 - and objects videos first and in this
00:19 - video I'm gonna use the same example as
00:22 - part two of those two videos so if you
00:25 - already watch that one you can just skip
00:27 - over to this time in this video to check
00:29 - out my Python code okay first of all
00:31 - here are the class on objects we created
00:34 - in the last video we have the robot
00:36 - class with three attributes named color
00:39 - and weight and one function introduce
00:41 - self and then out of this class we
00:43 - created these two objects or 1 and r2
00:46 - containing these attributes for example
00:49 - r1 had Tom as the name red as the color
00:53 - and 30 as the weight and on top of that
00:57 - we're gonna create this class called
00:59 - person representing a person of course
01:01 - and it's gonna have these attributes
01:04 - name which is going to be a string
01:06 - personality which is also going to be a
01:08 - string and is sitting which is going to
01:12 - be either true or false and then if this
01:15 - is true that means that this particular
01:17 - object this person is sitting and if
01:20 - it's false that means that this person
01:23 - is not sitting and then out of this
01:25 - class we're gonna create these two
01:27 - objects the first object will have the
01:30 - name Ali's personality aggressive and is
01:33 - sitting will be false and the second
01:36 - object will be Becky for the name and
01:39 - her personality will be talkative and is
01:43 - sitting will be true so this person will
01:46 - be sitting now just a quick side note in
01:49 - case you're not familiar with these
01:50 - values false and true they belong to a
01:54 - special data type called boolean so if
01:57 - you have numbers like these there are 4
02:00 - 1 - 13 and so on
02:02 - there are integers and they refer to as
02:05 - int in Python and if you have
02:08 - collections of characters like these
02:11 - enclosed in
02:13 - double quotes or single quotes there are
02:15 - strings of course worst STR in Python
02:18 - and if you have true or false
02:22 - they are boolean or the spool in Python
02:25 - okay back to my main point we're gonna
02:28 - put this person object in a variable
02:31 - called p1 and we're gonna put this other
02:34 - person object emp2 and the person class
02:38 - will have two methods as well the first
02:41 - one is gonna be called sit down when you
02:44 - run sit down for example on p1 the is
02:47 - sitting attribute will be turn true
02:50 - because this person will be sitting
02:53 - after running this function and then the
02:55 - standup method is exactly the opposite
02:58 - so for example if you run p2 that stand
03:01 - up the is sitting value of p2 will be
03:05 - false because this person will not be
03:07 - sitting after standing up and here how
03:10 - can we show the relationships between
03:12 - these two sets of objects for example
03:15 - what if we wanted to show that p1 this
03:18 - person owns this robot r2 we can do that
03:22 - by adding an extra attribute to the
03:25 - person class let's call it robot owned
03:27 - and then if you want to show that p1
03:30 - owns
03:31 - r2 we can set the robot own attribute of
03:36 - p1 2 or 2 and then if you want to show
03:39 - that p2 owns or 1 this robot named Tom
03:43 - you can set the robot own attribute of
03:47 - p2 to r1
03:49 - now let's see how we can do that in
03:51 - Python here we have the class that we
03:54 - defined in the last video called robot
03:56 - he had a constructor in it plus a
04:00 - function called introduce self and then
04:03 - we also learned how we can create
04:04 - objects out of that class just like that
04:06 - for example R 1 equals robot Tom red 30
04:11 - and then the same thing for our two and
04:13 - now let's create a new class here this
04:16 - is gonna be called person of course and
04:18 - then it's gonna have a constructor for
04:22 - that you can just write def to
04:23 - underscores in it two underscores again
04:27 - self and then let's have it take three
04:30 - additional arguments on top of self and
04:33 - pi/4 name personality and is sitting and
04:36 - then you can set this new object's name
04:39 - to n by writing self dot name equals n
04:43 - and then you can do the same thing for
04:45 - personality and is sitting and then this
04:50 - class will have two additional methods
04:52 - on top of the constructor like we saw
04:54 - earlier
04:55 - the first one is sit down this is not
04:59 - going to take any arguments
05:01 - except for self and to implement this
05:04 - you can just write self dot is sitting
05:08 - equals true and note here that true here
05:12 - is capitalized and then you can do the
05:14 - opposite for stand up stand up self and
05:19 - then itself that is sitting equals false
05:24 - again the word false is capitalized here
05:27 - and that's just how it works in Python
05:29 - let's run this cell to load this class
05:32 - once this class is loaded or once this
05:35 - block of the code is run you'll be able
05:37 - to create a new object out of this class
05:40 - you can do that by writing P 1 equals
05:44 - person note here that the word person is
05:47 - capitalized double quotes Alice comma
05:50 - double quotes aggressive comma false so
05:56 - this new object will have Alice as a
05:59 - name aggressive as the personality and
06:01 - false as is sitting that's the same
06:05 - thing for p2 by writing p2 equals person
06:09 - Becky
06:10 - comma talkative comma true let's execute
06:17 - this block of code and these two objects
06:20 - have been created now like I said
06:23 - earlier let's say we want to show that
06:25 - p1 owns the first person owns the second
06:29 - robot r2 to show that all you need to do
06:32 - is like I said earlier set the robot
06:35 - owned attribute of P 1 to R 2 you could
06:39 - do it in a couple different ways
06:41 - one way to do that would be to change
06:42 - the constructor and then have it take
06:45 - maybe an additional argument let's call
06:47 - it R and then here you can just say self
06:51 - dot robot own equals R that's one way to
06:55 - do it but you could just write here P 1
06:59 - dot robot own equals R 2 as well and
07:04 - that defines a new attribute in P 1
07:07 - called robot own and sets it to R 2
07:11 - let's just do that let's just do the
07:13 - same thing for P 2 as well let's say P 2
07:17 - owns R 1 so we're gonna write P 2 the
07:20 - robot own equals R 1 let's execute this
07:24 - piece of code and you'll be able to
07:26 - access this robot owned attribute and
07:29 - say P 1 just like you can use any other
07:32 - attributes so here if you write P 1 dot
07:36 - robot owned that will give us R 2 and
07:39 - then further if you right dot introduce
07:43 - self this is the same thing as saying R
07:46 - to the introduce self so this should
07:49 - print out my name is jeri because that's
07:53 - the name of our two let's see if that
07:55 - works by running this block of code and
07:58 - it does we see my name is Jerry right
08:00 - here ok you'll be able to find a link to
08:03 - my sample code in the description below
08:05 - both as a plain Python file and as a
08:08 - jupiter notebook file and actually i'm
08:11 - not sure how many Python videos I'll be
08:14 - able to make in the future because right
08:16 - now I'm really focused on my data
08:17 - structure series if you want to learn
08:19 - more Python though I personally
08:21 - recommend two of my online courses which
08:24 - you should be able to take for free the
08:26 - first one is called get ready for your
08:28 - coding interview and its own lynda.com
08:31 - this course is basically for practicing
08:33 - your problem-solving skills with Python
08:35 - and the second course I recommend is
08:38 - called introduction to data
08:40 - visualization with Python and this one
08:42 - is on this website called flora site and
08:45 - this one should be good if you're
08:47 - interested in things like their analysis
08:49 - data science or machine learning both of
08:52 - these courses are taught by me
08:54 - and you should be able to take them for
08:56 - free by signing up for their free trials
08:59 - for seven days or 30 days I'm gonna put
09:02 - links to those courses in the
09:03 - description below in case you're
09:05 - interested or you can just go to CS dojo
09:07 - dot IO to find those courses okay as
09:10 - usual thanks so much for watching my
09:12 - videos and I will see you in the next
09:14 - one