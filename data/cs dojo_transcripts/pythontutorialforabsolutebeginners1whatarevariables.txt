00:00 - Hey everyone, my name is YK. And i'm the founder of this YouTube channel CS
00:04 - Dojo, and i'm also a former software developer at
00:08 - Google and this is my, new
00:09 - series python
00:11 - Tutorial for absolute beginners and this is my video number 1: what are variables?
00:16 - So this series is gonna be good for complete beginners, who have never done any programming before as
00:22 - Well as someone who's done some programming before whether it's python or any other language but
00:28 - Wants to learn more about python. So in this video i'm going to go through a number of different things
00:33 - First of all what is python and what can
00:35 - you, do with it and then i'm gonna explain how. To install python on your computer and then set up a development environment.
00:43 - We're gonna use something called jupyter notebook throughout, this series and then i'm gonna explain how. To use the print function
00:49 - And what are variables and how to use them and by the end of this video if you have two variables
00:56 - Storing different things, you'll be able to swap the content within those two variables with
01:01 - Each other, and i'm gonna put on
01:03 - an outline of this video in the comment section below
01:05 - So you, don't have to watch the whole thing if you, don't want to. Oh and before we get started if you?
01:11 - Want to make sure that you don't, miss my future tutorial videos sign up to my, newsletter which is available in the description?
01:17 - Below so just quickly, what is python and what can?
01:21 - You, do with it it's one of the most popular programming languages out there and it's used at smaller companies as
01:27 - well as larger companies including google and many
01:31 - Universities use python as the introductory programming language in their computer science courses and one advantage of python
01:38 - Is that it's fairly easy to learn because it has fairly simple syntax
01:43 - It's used for many different applications
01:46 - Including websites back-end code which is the code that runs on your server as
01:51 - Opposed to the code that runs on your device whether it's a phone or a Laptop and it's
01:56 - also popular for their analysis and scientific research purposes, okay?
02:01 - So let's now go ahead and install python on your computer usually
02:05 - When people develop a program using python or any other language for that matter they usually
02:11 - Use something called ide which stands for integrated development environment. It's an environment that includes
02:18 - Everything you need pretty much to develop a program. It has a nice text editor in which you can
02:24 - Write your code and then the ability to run your program as, well as something called a debugger
02:30 - Which allows you to quickly get rid of all the bugs in your program and if you, want to use an IDE to follow
02:36 - My series i personally recommend park charms community edition so in this series instead of using a traditional
02:43 - IDE i decided to use something called jupyter notebook
02:47 - So jupyter notebook is an environment for writing and testing your program quickly and
02:52 - It's actually, popular with the scientific community and for data analysis purposes but i've decided to use jupiter notebook throughout
02:59 - This series because it's very simple and easy to install
03:03 - Jupyter notebook through something called anaconda and it's fairly easy to use as
03:08 - Well so here's the way, jupyter notebook, works there are two components to jupyter notebook
03:15 - First of all when you launch jupyter notebook on your computer you might see a command line interface like this
03:22 - This, represents the jupyter notebook server
03:25 - You can, think of it sort of like the core of jupyter notebook and you don't have to worry that much about how
03:31 - it works exactly
03:32 - But just remember that if you close this window. Maybe accidentally jupyter notebook might stop working so just be careful about that
03:41 - Now, when you launch jupyter on your computer you might?
03:44 - also
See a browser window or tab showing up whether it's Chrome, Firefox, Safari, or anything else and
03:51 - It'll probably be at the url
03:54 - Localhost call eight eight eight eight or something like that and it'll be connected to the jupyter notebook server
04:01 - this
04:01 - Browser window or tab is basically the user interface for jupyter notebook and you can write and execute your code
04:08 - Here but it's actually executed on the jupyter notebook server, again. You don't have to worry that much about, how
04:15 - It works exactly but this is just an overview
04:19 - Now to install python and jupyter notebook we're, going to use something called anaconda
04:24 - Anaconda is something called a package manager
04:27 - which allows you to install many programs at once
04:30 - This, particular package manager' anaconda is actually used for installing math and science libraries but
04:38 - You, don't have to worry, about that the only thing you need to know
04:40 - Is that when you install anaconda it comes with python and jupyter notebook so you
04:46 - Don't have to install python or jupyter notebook separately on your computer
04:50 - Let's now install python and jupyter through anaconda go to anaconda org, and then click download
04:58 - anaconda and
04:59 - Select whatever platform you're using whether it's windows mac or linux
05:04 - I'm using mac here so i'm gonna click mac os here and there are two options here
05:10 - Python, three-point-something or python 2 point something, make sure to use python 3 point something because we're
05:17 - going to use python 3 instead of python 2 throughout
05:20 - This, course so click download and then save this file wherever
05:24 - You, want to save it and once this file is downloaded just open it and then click continue continue continue
05:33 - Agree with everything and then select
05:37 - Install for me only or install on a specific disk it doesn't matter which one you choose and then click install and
05:44 - This, process will probably take a, while for you
05:47 - Once this process is done you should see something like the installation, was completed successfully
05:53 - Once you see that just click close and you're all set to launch jupyter you need to launch an application called
06:01 - Anaconda navigator
06:03 - Just launch that in the usual way you launch any other application, and then find jupyter notebook and click launch
06:14 - Like i said before you see a browser tab or window. Opening up and it should be at the url
06:21 - Localhost colon 8080 8th 8th or something like that
06:25 - Ok, let's now. Create our first program
06:28 - First go to whatever the folder you, want to create. Your first program, in i'm going to go to desktop
06:36 - And once you click it you can see that my current location is desktop because it's at the top right here
06:43 - Before you create. Your first program here i personally recommend that you create a
06:48 - New folder so i just went to my desktop i clicked right click and then, new
06:54 - Folder i'm gonna call this folder
06:56 - python, tutorial 1 and
07:00 - once you create that folder you should see in the jupyter notebook interface to click that and you see that the current location is
07:08 - Python, tutorial one within desktop right here at the top to create a, new, file or a, new?
07:15 - notebook, file as i say just click new at the top right hand corner and then click python 3
07:23 - So a new notebook has been created, here change the name of this notebook from untitled to
07:29 - Let's say, what are our?
07:31 - variables click rename and
07:34 - Once you, do that if you go back to desktop and the folder that
07:38 - we just created python tutorial 1 you'll see a, new
07:41 - File what our variables dot i pi and b and that i pi and b is just an extension for algebra notebook?
07:49 - Now in jupyter notebook there's something called a
07:52 - Cell each cell represents a set of code and the box you're looking at right now is one cell
07:59 - So you can, type in any python code here for example print
08:04 - Parentheses double quotes hello world and when you run, this? Cell
08:09 - Using this button at the top it executes all the code within the. Cell, so let's run, this. Cell and
08:17 - You, see that the string hello, world, is printed so this text hello?
08:22 - World is something called a string it's usually enclosed by either double quotes or single
08:27 - Quotes and it's basically just a set of characters so
08:31 - Assuming that this is your first time coding in your life i'm going to explain
08:35 - this, line a little bit more carefully so this says print whatever is in the parentheses these two parentheses and
08:43 - that happens to be
08:45 - Hello, world a string and when you run it again it's printed right below. This
08:50 - Cell how the world and the important thing to note here
08:52 - Is that if you
08:53 - Don't type in the exact set of characters that you see on the screen it might
08:58 - Not go right so for example if you forget to close the parentheses and run the
09:03 - Cell you'll get an error and if you use
09:06 - for example
09:08 - Curly, brackets instead of regular
09:11 - Parentheses you, also get an error and if you forget to close the
09:15 - Quotation, marks it's the same thing so
09:18 - Let's try, using this print function. A little bit more in
09:21 - This, cell that you see right here in the green, box you can, type in print double quotes more string and
09:30 - Actually instead of using double quotes you can, also use single quotes in python and then you can run this. Cell and
09:38 - The string more string is printed
09:41 - So you can, use single quotes and double quotes pretty much interchangeably in python and then you can
09:47 - Also, print not just a string but, also a number so you can, say print parenthesis 3 and then when you run
09:55 - The, cell the number 3 is printed and you could, also have multiple lines within the same cell as, well
10:02 - So in this. Cell you can, write print
10:06 - let's use double quotes here more string and
10:10 - then print 3
10:12 - So when you run, this. Cell these two lines are executed one by, one
10:18 - so you see more string and
10:21 - Three print it just one after another
10:24 - So let's now dive into our main topic here namely, what are variables
10:29 - Before i explain, what our variables exactly in python i'm going to show. You some sample code you can write a
10:36 - Equals 1. And what this means?
10:39 - Is that assign this value 1 this number to the variable named a
10:45 - You can, think of it it sort of like the variable a
10:49 - Containing the value 1 that's not 100%
10:52 - Technically accurate, as i'll explain later but that's one way to think, about it so when you run this
10:57 - Cell you, won't see anything printed this time but the variable a now
11:02 - Contains the value 1 or a more technically accurate, way of thinking about it is that the bar a
11:10 - Refers to the value one and you can. Check, what's inside the variable a
11:15 - by
11:15 - Printing the variable with print parentheses a and note here that there are no double quotes or single quotes around
11:23 - This character. A, and that's because a is not a string it's a variable and when you run, the?
11:29 - Cell you see the value a is referring to which is one and you can
11:34 - Do the same thing with different variables so you
11:37 - Can write b equals two so the convention here is you write b space and then
11:44 - Equal space and to
11:46 - This, line says, assign the value 2 to the variable b and when you run, the
11:52 - cell again the variable b refers to the value 2 now so if you haven't for example c in this code and
12:00 - If you, want to know, what's inside the variable or what the variable refers to you, can, write just like before print
12:07 - Parentheses be no single quotes or double quotes
12:10 - Run this. Cell with this button right here and then you'll see the value b is referring to
12:17 - Just like before, we can, write multiple lines within a single cell right here
12:21 - By, writing print parentheses a
12:24 - print
12:25 - Parentheses b and when you run, this, cell
12:29 - You'll see one and two so one is what a is referring to and two is what b is referring to?
12:37 - So a variable doesn't necessarily refer to a, number it could refer to a
12:43 - String so if you write for example c equals either double quotes or single quotes hello
12:50 - there
12:51 - And when you run the, cell?
12:54 - C now, we first see the value or the string hello there and when you print c?
13:00 - You should see how low. They're printed
13:04 - So i just ran this. Cell and the string hello, there has been printed, so let's now
13:09 - Quickly, talk about
13:09 - What variables are in python when you write a equals one in a different language for example c or c++
13:17 - The correct, way to think, about it might be as a, box so you have a, box a
13:24 - Containing the value one but in python this is not the accurate, way to think about it the more accurate way to think
13:30 - About it is that a is more like a name tag and this can refer to any value you
13:36 - Want and when you say a equals one you're saying a refers to the value one now. These two
13:43 - Ways of thinking, about it they might not seem that different right now but it's
13:47 - Going, to be more important later and in python you can create a, new variable, by writing as
13:52 - We saw b equals 2 and this says the name b or the variable b now
13:59 - We first see the value 2 and just like you saw
14:03 - A variable can refer to a string as, well so if you write c
14:07 - Equals hello, there you're, saying the variable c refers to the string. Hello
14:12 - There once you master that basic concept you'll be able to move on to a slightly more advanced topic
14:19 - Let's say you run, these lines of code and then you, want to run more code for example d equals 2
14:26 - Then what happens is the variable d of course refers to the value to
14:32 - Which the variable b also refers to
14:35 - so it's totally possible for two or more variables in
14:39 - Python to point to the same value in this case 2 and then it's
14:44 - Also possible for you to reassign an existing variable to another value so if you
14:50 - write b equals 1 after
14:54 - executing this line of code b equals 2 after this line b refers to two of course but, after writing b equals 1
15:02 - B refers to 1, which a, also refers to and you can
15:07 - Even reassign an existing variable for example b which once referred to a number
15:14 - One right here to something else for example a string so if you, write for example b equals double quotes ah
15:22 - The string the variable b now refers to
15:26 - The string ah
15:28 - So let's see how, this actually works out in code
15:31 - Okay, we're gonna continue on the code, we had earlier earlier, we had b equals
15:38 - so if you print be
15:40 - the variable
15:41 - We get the value to and you can reassign
15:45 - This variable to another value for example 1. By writing b equals 1 and then when you run the. Cell, and
15:53 - print b again
15:56 - you get
15:58 - One printed the new value and what happens if we try to print a variable that doesn't exist yet
16:04 - So if you try to print print
16:07 - Parenthesis, a what happens let's run, this
16:10 - Cell and see what happens it'll actually give you an error because he doesn't exist yet and the error says
16:16 - Name error name e is not defined yet so that makes sense let's fix that. By writing e
16:23 - equals this is a string and
16:26 - This, way the value this is a string is assigned to the variable e and the variable e exists in the system
16:34 - So if you print e with print parenthesis e and when you run this
16:39 - Cell you, don't get the error anymore and let's address another question
16:43 - You might have here is it possible for us to assign a variable
16:48 - to
16:49 - Another one the answer is yes so here if you write
16:53 - Equals 1 a of course refers to 1. And then c equals hello, world c refers to
17:00 - hello world
17:01 - What happens if you write f equals a?
17:05 - What happens then is this, means the variable f the name f refers to?
17:12 - The value a is referring to so f refers to one now and so f?
17:20 - doesn't refer to the variable a
17:23 - Instead it refers to the value a is referring to and this is important for example when you do a
17:31 - Equals two if you write that a now refers to
17:35 - the value 2 instead of 1 but f
17:40 - Stays at the value 1 and this might not be the case if f was referring to the variable a
17:46 - Let's take a look at another example here if you write g iko see the variable g will refer to
17:54 - Whatever the value c refers to which is how it world and then once you write
18:00 - C equals, hello c will refer to the new value
18:05 - Hello, right here
18:07 - But the variable g will, stay at the value hello world
18:12 - Okay, let's go back into the demo earlier in the demo, we had a
18:17 - equals one and
18:19 - Then c equals hello there
18:23 - So once we print a and c. With print parenthesis a, and print parenthesis c
18:29 - We should see one for a and hello there for see what happens if we write f?
18:36 - equals a
18:38 - F should now refer to whatever a refers to
18:42 - So if we print f?
18:45 - We should see the number one printed and?
18:49 - What happens if we assign a to two?
18:52 - then
18:53 - The value of a should, now be two and then the value of f should, stay as i said earlier
19:02 - at one
19:03 - Okay, now i'm gonna give you a quick practice problem to work on in order to solidify your understanding of variables and to do that
19:10 - Go, back to the previous tab of jupyter notebook the navigation
19:14 - Menu and if you already, close the tab
19:17 - Just open localhost colon 8080 eight eight or just relaunched
19:21 - jupyter notebook
19:22 - And then go back to the same folder as before we had python tutorial one click new in the top right corner click
19:30 - python 3, again and
19:32 - Let's rename this notebook. By clicking untitled and by changing it to
19:38 - swapping two variables and
19:42 - Here's the problem you're given two variables let's say
19:47 - V1 equals first string in double quotes and v2
19:51 - Equals second string, again in double quotes how
19:54 - Can you, swap the values within, these two variables with
19:57 - Each other the easiest way to solve this problem is just to write v1 equals second string and
20:04 - Then b2 equals
20:06 - First string, but this might not be the best solution
20:11 - Because if you had a much longer string it would be kind of cumbersome to repeat these strings and
20:17 - Then if one of the strings changes so if first string becomes first two strings
20:23 - That you need to rewrite your code right here to
20:27 - Match that to write first two strings again
20:30 - So ideally you, want to be able to solve this problem without repeating the strings think
20:36 - About it for a second and then i'm gonna show
20:38 - You, what a good solution might look, like, when you see this problem you might say, well it's actually pretty simple
20:44 - Once we have b1 equal to first string and v2 equal to
20:50 - Second string, so that's v1 referring to this string and v2 referring to this string, we can just write
20:58 - V1 equals v2 and then v2 equals v1 and we're done but actually this solution is wrong
21:05 - Because when we execute this line v1 equals v2
21:10 - V1 now refers to whatever v2 refers to of course, which is second string and then when?
21:16 - We write v2 equals v1?
21:19 - V2 will now refer to what v1 refers to now
21:22 - Which is second string so at the end of these lines of code?
21:27 - Will have v1 and v2 both refer to the second string which is not what, we want?
21:33 - Let's now see what a? Good solution might look, like
21:36 - I'm going to give you a few different options here the first option is to use two temporary variables we're
21:43 - Gonna call them temp 1 and temp
21:45 - 2 temp 1 will be equal to
21:48 - What v1 refers to so that's first string and then temp, 2 will be equal to what v2 refers to
21:56 - Which is of course second string and then we'll just need to swap them together
22:02 - So v1 will be equal to temp 2, which refers to second string so v1 will now refer to
22:10 - Second string
22:11 - After this line right here and then v2 will be equal to temp 1 which of course first string
22:19 - So v2 will refer to
22:22 - First string, after these lines so this is one potential solution but actually
22:27 - We don't have to use two temporary variables
22:30 - Okay, here's a solution that only uses one temporary variable instead of two the first thing we're gonna do is we're gonna set a
22:37 - New, temporary variable called temp - what v1 refers to
22:42 - so temp
22:44 - will be this string right here and
22:48 - After that we'll set v1 to v2
22:51 - So v1 will no longer refer to first string. And then it will refer to second string instead and at
22:58 - This point note that the first string this string is not lost yet because
23:03 - We have a variable pointing to that value so after that all you need to do is
23:08 - Refer v2 back to whatever temp refers to which, is first string so v2
23:15 - Will refer to first string, after these lines of code and the v1 will refer to second string and
23:22 - this, little pattern of using a single variable to switch the values of two variables is
23:29 - Actually really important to know because it's a very common pattern to use for any programmer
23:34 - Okay, let's now test that pattern with our python code so in the second sale we're going to write our solution
23:40 - We're gonna create a, new variable called temp, which refers to whatever v1 refers to which
23:46 - Is first string, and then we'll set v1 to be v2
23:51 - So v1 at this point is second string and then we'll set v2 to whatever
23:57 - Temporary first - which is first string so at this point
24:00 - Once we print v1, we should be able to print second string?
24:05 - We do and then if we print v2 which would see first string and?
24:11 - We do okay, to download the files i created, throughout, this video just go to cs. Dojo io
24:18 - Python 1 or if you just, want to subscribe to my, newsletter so that you don't
24:23 - Miss my future tutorial videos just go to cs. Dojo dot io
24:27 - News and as always let, me know in comment below, when you thought of this video i'm? Yk, from cs
24:34 - Dojo, and i'll see you in the next video?