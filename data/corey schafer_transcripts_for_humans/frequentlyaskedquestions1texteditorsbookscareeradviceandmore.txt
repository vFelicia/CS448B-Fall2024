With timestamps:

00:00 - hey there how's it going everybody in
00:01 - this video I'd like to answer some of
00:02 - the most common questions that I get on
00:04 - this channel so if you've ever looked at
00:06 - the comment section of my videos then
00:07 - you may have seen some of these because
00:09 - they tend to pop up a lot I also get a
00:11 - lot of these within personal messages as
00:13 - well now if you'd like to jump forward
00:15 - to any specific question and answer then
00:17 - I'll go ahead and put each question in
00:19 - the description section below and also
00:21 - the time that you can jump to for each
00:22 - answer so let's go ahead and get started
00:25 - okay so first of all the most common
00:26 - question that I get is what text editor
00:29 - that I'm using in my videos and the text
00:31 - editor that I'm using is sublime text
00:33 - with a custom theme and this is sublime
00:36 - text here and if you watch my videos
00:38 - this probably looks familiar now the
00:40 - custom theme that I use is called pre
00:42 - Don now I've been using sublime text for
00:44 - some time now and I really like it now I
00:46 - do have a video where I walk through how
00:48 - I installed and set up my sublime text
00:50 - now the packages that I go over in that
00:53 - video are kind of focused more around
00:55 - web development than Python programming
00:56 - but if you just want to see how I set up
00:59 - the color theme and things like that and
01:01 - that's a good one to watch now I've been
01:03 - meaning to create another video where I
01:05 - walk through a Python specific set up
01:08 - using sublime text but I haven't quite
01:10 - got around to that yet
01:11 - and speaking of sublime text another
01:15 - common question that I get is how I'm
01:16 - running my Python code from within
01:18 - sublime text so sublime text has these
01:21 - build systems that they use to execute
01:23 - code from different programming
01:25 - languages and you can see the build
01:27 - systems if I go to tools and build
01:30 - system here and you can see that they
01:32 - list all of these languages here now you
01:34 - might notice that your sublime text has
01:36 - this set to automatic now depending on
01:39 - how you're using python and sublime you
01:42 - may need to create a custom build system
01:44 - I always make custom build systems
01:46 - because I like to be able to quickly
01:48 - switch between different versions of
01:50 - Python and also between different Python
01:53 - virtual environments now I have a
01:54 - separate separate video on specifically
01:56 - how I set up these build systems if
01:58 - anyone is curious how I did that
02:03 - okay now another
02:04 - that's along the same lines as those
02:06 - first two is which ibe our text editor I
02:09 - recommend for other people to use
02:11 - so just because I use sublime text in my
02:13 - videos that doesn't necessarily mean
02:15 - that I recommend that other people use
02:16 - it the reason that I use sublime text in
02:18 - my videos is because it has this very
02:20 - and simple clean layout that allows me
02:23 - to hide just about everything except for
02:25 - the code and the output so it really
02:28 - allows the viewer on the videos to focus
02:31 - on just the code and nothing else
02:33 - but with that said I don't necessarily
02:35 - think sublime text is superior to the
02:37 - other options that are out there so I've
02:39 - heard great things about the atom text
02:41 - editor which is kind of similar to
02:43 - sublime text but apparently it comes
02:45 - with some package management stuff
02:47 - that's built-in as far as IDs go there's
02:50 - a lot of good reasons someone would
02:52 - prefer an IDE over a text editor because
02:55 - most IDs have great code hinting and
02:58 - pop-up documentation that allows you to
03:00 - quickly find what you're looking for
03:01 - instead of needing to get on Google and
03:04 - Google method names and things like that
03:07 - also they have a lot more in-depth
03:09 - debugging features that allow people to
03:11 - pause the code in the middle of its
03:13 - execution and inspect exactly each
03:16 - variable and what it's assigned to and
03:18 - things like that now as far as IDs go it
03:21 - sounds like most people enjoy using
03:23 - PyCharm now I have PyCharm installed on
03:26 - this machine but I haven't really had a
03:28 - chance to learn how to navigate through
03:30 - it yet so I can't really speak with much
03:32 - experience as to how good it is but uh
03:34 - I've heard it praised by so many people
03:36 - that I think it's safe to assume that
03:38 - it's one of the best IDs out there for
03:40 - Python programmers now at my current
03:42 - full-time job we all use the Eclipse IDE
03:47 - here with the pydev plugin for python
03:50 - development now I know a lot of people
03:52 - kind of have some mixed feelings about
03:53 - Eclipse some people love it and some
03:56 - people hate it I'm kind of indifferent
03:58 - to to eclipse so I don't necessarily
04:01 - love it or hate it I think it can be
04:03 - overly complicated as far as the layout
04:05 - goes but once you learn how to use it
04:07 - then it can have some useful features so
04:10 - I do have a separate video on how I set
04:12 - up my anklets environment with the pydev
04:14 - plugin so that you can run Python code
04:16 - now some people have asked
04:18 - me to do a similar video on how to
04:20 - install and set up pycharm but the only
04:23 - reason I haven't done that is because I
04:25 - really feel like the videos that the
04:27 - creators of PyCharm have put put
04:29 - together are way better than anything
04:31 - that I could do myself so instead I
04:34 - usually try to point people in the
04:35 - direction of those videos but uh you
04:37 - know honestly whenever it comes to text
04:39 - editors or these IDs I think it really
04:41 - comes down to personal preference I
04:44 - found a balance that I like but there's
04:46 - still some people out there who love
04:47 - using Emacs or vim or things like that
04:51 - I would say whatever allows you to write
04:52 - code at a faster pace without things
04:54 - getting in your way and that's what I
04:56 - would recommend so if you something that
04:59 - has a lot of features and you then
05:01 - you're gonna want to make sure that
05:02 - those features are helping you write
05:04 - your code more quickly and just aren't
05:06 - getting in the way so I'm not sure if
05:08 - that fully answers that question but
05:11 - really I just think that it depends on
05:12 - personal preference and that you should
05:14 - just try out different ones and get
05:16 - familiar with them and see exactly what
05:18 - you like okay and another common
05:20 - question that I get whenever I do videos
05:21 - like this is how I get these slideshows
05:24 - to work like this within the browser now
05:26 - this is a project called reveal j/s and
05:29 - I'm on the website here you can see that
05:31 - they have a test presentation and things
05:33 - like that but really this just is for
05:37 - the presentation but if you actually
05:39 - want to go to the project then that's
05:41 - over here on github it's a github comm
05:44 - slash ha camel reveal dot j/s now I
05:48 - started using this because I saw a
05:50 - couple of people who are using it in
05:52 - some conference videos and I thought the
05:53 - concept seemed pretty interesting now it
05:55 - does have a slight learning curve
05:57 - because your entire slide show is in
05:59 - HTML but it has a lot of features that I
06:01 - like so I've started using it for almost
06:03 - all of my slide show presentations now
06:06 - if you do look at the github page here
06:08 - for that project then it does give you a
06:10 - good walkthrough for how you can
06:11 - download this and get started with
06:13 - installing it and using it okay another
06:17 - question that I get a lot is what Python
06:19 - books that I recommend so I don't really
06:21 - have a terrific answer for this because
06:22 - I've always been the kind of person who
06:24 - learns better from watching videos and
06:26 - looking through documentation and
06:28 - examples and things like that but I have
06:30 - read to Python books that help me
06:32 - a lot so those are about the only two
06:34 - that I can recommend so when I first
06:36 - started writing Python I got the book
06:39 - learning Python by Mark Lutz
06:41 - now this is a really big book I've never
06:44 - read the entire thing but it has so much
06:46 - information that if you ever had any
06:48 - questions or anything that you didn't
06:49 - quite understand then I could always
06:51 - just go to the table of contents and
06:53 - there was usually like an entire chapter
06:55 - devoted to the concept that was giving
06:57 - me trouble so I'd say that this book is
07:00 - for beginners to intermediate so if you
07:02 - already consider yourself an
07:03 - intermediate programmer then you may
07:05 - learn things from this book but you may
07:08 - get more out of this second book that I
07:10 - recommend and that second book is fluent
07:13 - Python by Luciano Ramon who now this is
07:17 - more of an intermediate to advanced
07:19 - level book he gets more into data types
07:22 - design patterns good pythonic code and
07:25 - things like that now I know that there
07:28 - are likely a ton of other great Python
07:30 - books out there but like I said I'm kind
07:32 - of the person who learns more from
07:34 - videos and walkthroughs so I haven't
07:36 - really read through a lot of books that
07:37 - are out there but I did find that these
07:40 - two books were very useful for me but if
07:42 - you have any book recommendations that
07:44 - helped you out a lot then feel free to
07:46 - mention those in the comment section
07:47 - below and maybe I'll post a link to
07:49 - those in the description section ok so
07:53 - another question that I get a lot is why
07:55 - I don't answer more comments now I
07:58 - wanted to bring this up because I wanted
08:00 - everyone to know that YouTube has been
08:02 - having some trouble with their comment
08:05 - system for some time now and now I read
08:07 - pretty much every comment that I get and
08:09 - will usually try to respond to as many
08:11 - as possible but lately I've been running
08:14 - into this problem where I'll write out a
08:16 - long response and I have a screenshot of
08:19 - some of these but I'll write out a
08:21 - really long response to a comment and
08:23 - then I go to post it and then you can
08:26 - see down here this little red air here
08:28 - comment failed to post now that's really
08:30 - frustrating for me too because sometimes
08:32 - it'll take me a lot of time to write out
08:34 - a response and sometimes I can't even
08:37 - post it now sometimes it'll work if I
08:39 - reload the page and try again and
08:41 - sometimes it doesn't so this is an issue
08:44 - that I suspect will
08:46 - sorted out with YouTube in the near
08:47 - future but for now if you write me a
08:50 - comment and I don't answer then there's
08:53 - a chance that I tried to respond and
08:55 - that I got this comment failed to post
08:57 - err so hopefully that'll get sorted out
09:00 - soon and I won't run into those issues
09:02 - as often now another common question
09:05 - that I get a lot is people asking how
09:08 - they can get a job working in Python and
09:10 - this sudden isn't only for Python I
09:12 - guess it goes for any programming
09:14 - language but I guess the best advice
09:16 - that I can give is to have some sample
09:18 - code or projects available on you know
09:21 - something like github or on a personal
09:23 - website so that you can point potential
09:25 - employers to some of your work now if
09:28 - you already have something like that
09:30 - then I would say that the next step
09:31 - would be to get in touch with the
09:33 - employers so I'd recommend you know
09:36 - trying out websites like hired comm now
09:38 - I've never personally used hired but I
09:40 - have heard that they do a good job of
09:42 - getting people in touch with employers
09:43 - and they even offer signing bonuses if
09:46 - you do get a position now if there's a
09:48 - specific company or organization that
09:49 - you're interested in then I would check
09:51 - out their website specifically for a
09:53 - list of open positions or you can email
09:55 - their HR department for possible
09:57 - positions that might not even be open
09:58 - yet now I do have a video on how to
10:01 - prepare for an entry-level Python
10:03 - interview it just goes over some of the
10:05 - basics of what to expect in a first
10:07 - interview I have had some requests to
10:09 - put together a video on how to prepare
10:11 - for a more advanced Python position and
10:14 - I marked that down as a video that I'd
10:16 - like to put together in the future okay
10:19 - so next question
10:20 - so should I learn Python instead of you
10:23 - know fill in the blank whatever language
10:25 - so I get a lot of questions about people
10:28 - asking for career advice so people will
10:30 - ask me whether they should learn Python
10:32 - over JavaScript or C++ or Java or if
10:36 - they should do front-end development or
10:38 - back-end development and all kinds of
10:39 - questions like that so really this just
10:44 - isn't a question that anyone can answer
10:45 - but you everyone likes different things
10:48 - I used to program in JavaScript
10:51 - full-time as a front-end developer
10:52 - making web applications and then I
10:55 - started programming in Python doing more
10:58 - server-side development and
11:00 - like that a lot more but that was my
11:02 - experience and my own personal
11:03 - preference I'm sure that a lot of people
11:05 - out there would have had opposite
11:07 - feelings so my best advice here would be
11:10 - to do your best to get exposed to as
11:12 - much as you can and not be afraid to get
11:14 - out of your comfort zone it's really
11:16 - easy to just stick to what you know but
11:19 - maybe someday you know you'll have to
11:21 - set up a web server or something like
11:23 - that
11:23 - and just really realize that you love
11:25 - Linux system ins system administration
11:28 - you'll never know unless you're exposed
11:30 - to it at some point and the field of
11:32 - computer science is growing so fast and
11:35 - quickly and it's so broad that it's
11:37 - difficult to even give a starting point
11:39 - to these types of questions I mean I had
11:42 - trouble deciding exactly which path I
11:44 - wanted to go down also and I still
11:46 - consider switching focus to different
11:48 - areas at some point so again I would
11:50 - just say to try a little of everything
11:52 - that computer science has to offer and
11:54 - see if anything really ignites a passion
11:57 - that you didn't know that you had so
11:59 - some of the more exciting and growing
12:01 - fields within computer science right now
12:02 - you know you have machine learning
12:05 - artificial intelligence data science
12:07 - systems administration front-end
12:09 - development back in development and
12:11 - there's just a ton of others and you can
12:13 - even find a lot of jobs where you're
12:14 - going to be responsible for multiple
12:16 - roles and positions like that can be
12:18 - intimidating because you know you have
12:21 - to learn more but it can also help with
12:23 - exposing you to those areas that you
12:25 - later discover that you did want to
12:28 - focus on now one thing that I always try
12:29 - to emphasize is that no matter which
12:31 - path you take it will always be
12:34 - beneficial to have a firm grasp on some
12:36 - computer science fundamentals so things
12:38 - like algorithms and data structures and
12:40 - design patterns and things like that and
12:42 - also one more thing is that if you ever
12:45 - do choose a field that doesn't make you
12:47 - happy then don't let yourself stay there
12:49 - for too long
12:50 - you should definitely move on and try
12:52 - something else because you're gonna be
12:54 - most happy when you find something that
12:55 - you're really passionate about and
12:57 - something that you're proud to be
12:58 - working on ok so this will be the last
13:01 - question of the video it's another one
13:04 - that's kind of focused on career advice
13:05 - and I'm kind of surprised that I get
13:07 - this one as often as I do but I get
13:09 - asked by a lot of people on here whether
13:11 - they are too old
13:13 - programming or if they're too old to get
13:15 - a full-time job in programming now I
13:17 - wanted to answer this one because this
13:18 - is pretty common thing for people to ask
13:20 - themselves so sometimes it's easy to
13:23 - believe that everyone in computer
13:24 - science got started when they were young
13:26 - like if you listen to programming
13:29 - podcasts and things like that it seems
13:31 - like every guest mentions how they got
13:33 - started with programming when they were
13:35 - like eight years old by taking apart
13:38 - calculators and reprogramming them into
13:40 - computer games and crazy things like
13:43 - that so then you kind of get stuck with
13:45 - this feeling that you just don't have a
13:47 - chance of catching up to these people
13:48 - when you're just getting started at your
13:51 - age so if you're in your 20s or your 30s
13:54 - or your 40s or even older it always
13:56 - feels like you're playing catch-up to
13:57 - everyone else so I wanted to tell you a
13:59 - little bit about how I got started
14:01 - because I wasn't one of these people who
14:03 - started when I was super young I went to
14:05 - college for computer science but I
14:07 - really only did enough to get by and
14:09 - passed the test I wasn't really taking
14:11 - it all in at the time now I'm not gonna
14:14 - give my exact age now but it wasn't
14:16 - really until my late 20s that I really
14:18 - buckled down and got serious about
14:20 - learning programming in depth and after
14:23 - I really started to get serious about
14:24 - learning these things I always kicked
14:26 - myself for not taking it more serious at
14:28 - a younger age so I'd be like man if I'd
14:30 - only been this dedicated back in college
14:32 - and I'd be so much better than I am
14:35 - right now but I found that after I
14:37 - started making these videos that I would
14:40 - get messages from people who were in
14:42 - high school and they would be asking if
14:44 - it was too late for them to learn
14:45 - because everyone that they know started
14:47 - out like before they were teenagers and
14:49 - I was always amazed that these high
14:51 - school kids would think that they were
14:53 - too far behind so at about that point
14:55 - that's when I kind of realized that
14:56 - you're always gonna find people who
14:58 - started out younger or who have more
15:00 - experience and there's nothing that you
15:02 - can do about that but that doesn't mean
15:03 - that it's too late for you to get
15:05 - started so if programming is something
15:07 - that you enjoy and you keep at it then
15:09 - after a while you're just gonna start to
15:11 - pick up more and more so when I really
15:13 - buckled down and started trying to learn
15:15 - this stuff it really only took me about
15:17 - a year or two to get to the point where
15:18 - I felt like I could really contribute to
15:20 - projects that I cared about so it
15:23 - doesn't take very long to reach that
15:25 - initial stage to where you
15:26 - and you know get a job and start doing
15:28 - some good work so I usually tell people
15:30 - of any age that if they really enjoy
15:33 - programming that it's almost never too
15:35 - late to get started so let's say that
15:38 - you're you know somebody who's 50 years
15:39 - old well if you dedicate yourself and
15:42 - push yourself to learn these things and
15:44 - I honestly think that you could get an
15:45 - entry-level job
15:47 - by the time you turn 51 and that's not
15:49 - to say that you get that entry-level
15:50 - position and you're completely done I
15:52 - mean it's a job that requires constant
15:55 - learning and adapting and when you take
15:57 - a job like this you're signing yourself
15:59 - up for a lifetime of learning new skills
16:01 - and technologies hopefully that's part
16:03 - of the reason that you love it and why
16:05 - you want to do it for a living so I know
16:06 - that was a long answer to that question
16:08 - but I do get that a lot so I kind of
16:10 - wanted to give some encouragement there
16:11 - so I think that's gonna do it for this
16:13 - video if anyone has any additional
16:16 - questions or if I didn't answer any of
16:17 - these adequately then just feel free to
16:20 - comment down below and I'll do my best
16:21 - to answer any additional questions and
16:24 - if you enjoy these tutorials and would
16:25 - like to support them then there are
16:27 - several ways you can do that the easiest
16:29 - way is to simply like the video and give
16:31 - it a thumbs up and also it's a huge help
16:33 - to share these videos with anyone who
16:34 - you think would find them useful and if
16:36 - you have the means then you can
16:37 - contribute through patreon and there's a
16:39 - link to that page in the description
16:40 - section below be sure to subscribe for
16:42 - future videos and thank you all for
16:43 - watching

Cleaned transcript:

hey there how's it going everybody in this video I'd like to answer some of the most common questions that I get on this channel so if you've ever looked at the comment section of my videos then you may have seen some of these because they tend to pop up a lot I also get a lot of these within personal messages as well now if you'd like to jump forward to any specific question and answer then I'll go ahead and put each question in the description section below and also the time that you can jump to for each answer so let's go ahead and get started okay so first of all the most common question that I get is what text editor that I'm using in my videos and the text editor that I'm using is sublime text with a custom theme and this is sublime text here and if you watch my videos this probably looks familiar now the custom theme that I use is called pre Don now I've been using sublime text for some time now and I really like it now I do have a video where I walk through how I installed and set up my sublime text now the packages that I go over in that video are kind of focused more around web development than Python programming but if you just want to see how I set up the color theme and things like that and that's a good one to watch now I've been meaning to create another video where I walk through a Python specific set up using sublime text but I haven't quite got around to that yet and speaking of sublime text another common question that I get is how I'm running my Python code from within sublime text so sublime text has these build systems that they use to execute code from different programming languages and you can see the build systems if I go to tools and build system here and you can see that they list all of these languages here now you might notice that your sublime text has this set to automatic now depending on how you're using python and sublime you may need to create a custom build system I always make custom build systems because I like to be able to quickly switch between different versions of Python and also between different Python virtual environments now I have a separate separate video on specifically how I set up these build systems if anyone is curious how I did that okay now another that's along the same lines as those first two is which ibe our text editor I recommend for other people to use so just because I use sublime text in my videos that doesn't necessarily mean that I recommend that other people use it the reason that I use sublime text in my videos is because it has this very and simple clean layout that allows me to hide just about everything except for the code and the output so it really allows the viewer on the videos to focus on just the code and nothing else but with that said I don't necessarily think sublime text is superior to the other options that are out there so I've heard great things about the atom text editor which is kind of similar to sublime text but apparently it comes with some package management stuff that's builtin as far as IDs go there's a lot of good reasons someone would prefer an IDE over a text editor because most IDs have great code hinting and popup documentation that allows you to quickly find what you're looking for instead of needing to get on Google and Google method names and things like that also they have a lot more indepth debugging features that allow people to pause the code in the middle of its execution and inspect exactly each variable and what it's assigned to and things like that now as far as IDs go it sounds like most people enjoy using PyCharm now I have PyCharm installed on this machine but I haven't really had a chance to learn how to navigate through it yet so I can't really speak with much experience as to how good it is but uh I've heard it praised by so many people that I think it's safe to assume that it's one of the best IDs out there for Python programmers now at my current fulltime job we all use the Eclipse IDE here with the pydev plugin for python development now I know a lot of people kind of have some mixed feelings about Eclipse some people love it and some people hate it I'm kind of indifferent to to eclipse so I don't necessarily love it or hate it I think it can be overly complicated as far as the layout goes but once you learn how to use it then it can have some useful features so I do have a separate video on how I set up my anklets environment with the pydev plugin so that you can run Python code now some people have asked me to do a similar video on how to install and set up pycharm but the only reason I haven't done that is because I really feel like the videos that the creators of PyCharm have put put together are way better than anything that I could do myself so instead I usually try to point people in the direction of those videos but uh you know honestly whenever it comes to text editors or these IDs I think it really comes down to personal preference I found a balance that I like but there's still some people out there who love using Emacs or vim or things like that I would say whatever allows you to write code at a faster pace without things getting in your way and that's what I would recommend so if you something that has a lot of features and you then you're gonna want to make sure that those features are helping you write your code more quickly and just aren't getting in the way so I'm not sure if that fully answers that question but really I just think that it depends on personal preference and that you should just try out different ones and get familiar with them and see exactly what you like okay and another common question that I get whenever I do videos like this is how I get these slideshows to work like this within the browser now this is a project called reveal j/s and I'm on the website here you can see that they have a test presentation and things like that but really this just is for the presentation but if you actually want to go to the project then that's over here on github it's a github comm slash ha camel reveal dot j/s now I started using this because I saw a couple of people who are using it in some conference videos and I thought the concept seemed pretty interesting now it does have a slight learning curve because your entire slide show is in HTML but it has a lot of features that I like so I've started using it for almost all of my slide show presentations now if you do look at the github page here for that project then it does give you a good walkthrough for how you can download this and get started with installing it and using it okay another question that I get a lot is what Python books that I recommend so I don't really have a terrific answer for this because I've always been the kind of person who learns better from watching videos and looking through documentation and examples and things like that but I have read to Python books that help me a lot so those are about the only two that I can recommend so when I first started writing Python I got the book learning Python by Mark Lutz now this is a really big book I've never read the entire thing but it has so much information that if you ever had any questions or anything that you didn't quite understand then I could always just go to the table of contents and there was usually like an entire chapter devoted to the concept that was giving me trouble so I'd say that this book is for beginners to intermediate so if you already consider yourself an intermediate programmer then you may learn things from this book but you may get more out of this second book that I recommend and that second book is fluent Python by Luciano Ramon who now this is more of an intermediate to advanced level book he gets more into data types design patterns good pythonic code and things like that now I know that there are likely a ton of other great Python books out there but like I said I'm kind of the person who learns more from videos and walkthroughs so I haven't really read through a lot of books that are out there but I did find that these two books were very useful for me but if you have any book recommendations that helped you out a lot then feel free to mention those in the comment section below and maybe I'll post a link to those in the description section ok so another question that I get a lot is why I don't answer more comments now I wanted to bring this up because I wanted everyone to know that YouTube has been having some trouble with their comment system for some time now and now I read pretty much every comment that I get and will usually try to respond to as many as possible but lately I've been running into this problem where I'll write out a long response and I have a screenshot of some of these but I'll write out a really long response to a comment and then I go to post it and then you can see down here this little red air here comment failed to post now that's really frustrating for me too because sometimes it'll take me a lot of time to write out a response and sometimes I can't even post it now sometimes it'll work if I reload the page and try again and sometimes it doesn't so this is an issue that I suspect will sorted out with YouTube in the near future but for now if you write me a comment and I don't answer then there's a chance that I tried to respond and that I got this comment failed to post err so hopefully that'll get sorted out soon and I won't run into those issues as often now another common question that I get a lot is people asking how they can get a job working in Python and this sudden isn't only for Python I guess it goes for any programming language but I guess the best advice that I can give is to have some sample code or projects available on you know something like github or on a personal website so that you can point potential employers to some of your work now if you already have something like that then I would say that the next step would be to get in touch with the employers so I'd recommend you know trying out websites like hired comm now I've never personally used hired but I have heard that they do a good job of getting people in touch with employers and they even offer signing bonuses if you do get a position now if there's a specific company or organization that you're interested in then I would check out their website specifically for a list of open positions or you can email their HR department for possible positions that might not even be open yet now I do have a video on how to prepare for an entrylevel Python interview it just goes over some of the basics of what to expect in a first interview I have had some requests to put together a video on how to prepare for a more advanced Python position and I marked that down as a video that I'd like to put together in the future okay so next question so should I learn Python instead of you know fill in the blank whatever language so I get a lot of questions about people asking for career advice so people will ask me whether they should learn Python over JavaScript or C++ or Java or if they should do frontend development or backend development and all kinds of questions like that so really this just isn't a question that anyone can answer but you everyone likes different things I used to program in JavaScript fulltime as a frontend developer making web applications and then I started programming in Python doing more serverside development and like that a lot more but that was my experience and my own personal preference I'm sure that a lot of people out there would have had opposite feelings so my best advice here would be to do your best to get exposed to as much as you can and not be afraid to get out of your comfort zone it's really easy to just stick to what you know but maybe someday you know you'll have to set up a web server or something like that and just really realize that you love Linux system ins system administration you'll never know unless you're exposed to it at some point and the field of computer science is growing so fast and quickly and it's so broad that it's difficult to even give a starting point to these types of questions I mean I had trouble deciding exactly which path I wanted to go down also and I still consider switching focus to different areas at some point so again I would just say to try a little of everything that computer science has to offer and see if anything really ignites a passion that you didn't know that you had so some of the more exciting and growing fields within computer science right now you know you have machine learning artificial intelligence data science systems administration frontend development back in development and there's just a ton of others and you can even find a lot of jobs where you're going to be responsible for multiple roles and positions like that can be intimidating because you know you have to learn more but it can also help with exposing you to those areas that you later discover that you did want to focus on now one thing that I always try to emphasize is that no matter which path you take it will always be beneficial to have a firm grasp on some computer science fundamentals so things like algorithms and data structures and design patterns and things like that and also one more thing is that if you ever do choose a field that doesn't make you happy then don't let yourself stay there for too long you should definitely move on and try something else because you're gonna be most happy when you find something that you're really passionate about and something that you're proud to be working on ok so this will be the last question of the video it's another one that's kind of focused on career advice and I'm kind of surprised that I get this one as often as I do but I get asked by a lot of people on here whether they are too old programming or if they're too old to get a fulltime job in programming now I wanted to answer this one because this is pretty common thing for people to ask themselves so sometimes it's easy to believe that everyone in computer science got started when they were young like if you listen to programming podcasts and things like that it seems like every guest mentions how they got started with programming when they were like eight years old by taking apart calculators and reprogramming them into computer games and crazy things like that so then you kind of get stuck with this feeling that you just don't have a chance of catching up to these people when you're just getting started at your age so if you're in your 20s or your 30s or your 40s or even older it always feels like you're playing catchup to everyone else so I wanted to tell you a little bit about how I got started because I wasn't one of these people who started when I was super young I went to college for computer science but I really only did enough to get by and passed the test I wasn't really taking it all in at the time now I'm not gonna give my exact age now but it wasn't really until my late 20s that I really buckled down and got serious about learning programming in depth and after I really started to get serious about learning these things I always kicked myself for not taking it more serious at a younger age so I'd be like man if I'd only been this dedicated back in college and I'd be so much better than I am right now but I found that after I started making these videos that I would get messages from people who were in high school and they would be asking if it was too late for them to learn because everyone that they know started out like before they were teenagers and I was always amazed that these high school kids would think that they were too far behind so at about that point that's when I kind of realized that you're always gonna find people who started out younger or who have more experience and there's nothing that you can do about that but that doesn't mean that it's too late for you to get started so if programming is something that you enjoy and you keep at it then after a while you're just gonna start to pick up more and more so when I really buckled down and started trying to learn this stuff it really only took me about a year or two to get to the point where I felt like I could really contribute to projects that I cared about so it doesn't take very long to reach that initial stage to where you and you know get a job and start doing some good work so I usually tell people of any age that if they really enjoy programming that it's almost never too late to get started so let's say that you're you know somebody who's 50 years old well if you dedicate yourself and push yourself to learn these things and I honestly think that you could get an entrylevel job by the time you turn 51 and that's not to say that you get that entrylevel position and you're completely done I mean it's a job that requires constant learning and adapting and when you take a job like this you're signing yourself up for a lifetime of learning new skills and technologies hopefully that's part of the reason that you love it and why you want to do it for a living so I know that was a long answer to that question but I do get that a lot so I kind of wanted to give some encouragement there so I think that's gonna do it for this video if anyone has any additional questions or if I didn't answer any of these adequately then just feel free to comment down below and I'll do my best to answer any additional questions and if you enjoy these tutorials and would like to support them then there are several ways you can do that the easiest way is to simply like the video and give it a thumbs up and also it's a huge help to share these videos with anyone who you think would find them useful and if you have the means then you can contribute through patreon and there's a link to that page in the description section below be sure to subscribe for future videos and thank you all for watching
