With timestamps:

00:00 - hey there how's it going everybody in
00:01 - this series of videos we're going to be
00:03 - learning how to use the pandas library
00:04 - and Python so pandas is a data analysis
00:07 - library that allows us to easily read in
00:09 - and work with different types of data so
00:12 - we can use this to analyze CSV files
00:14 - Excel files and other similar formats so
00:17 - if you're getting into the data science
00:18 - field then this library is going to be
00:20 - essential to learn it's one of the most
00:22 - downloaded packages for Python and
00:24 - that's for a great reason so not only
00:26 - does it allow us to easily read in and
00:28 - analyze data but it also has great
00:30 - performance since it built on top of
00:32 - numpy and we'll be learning how to do
00:34 - different types of an analysis or if
00:36 - data analysis in this series so in this
00:38 - video we're going to be going over how
00:40 - to get pandas installed how to download
00:42 - the data that I'll be using for most of
00:44 - this series and also how to get all of
00:47 - this open in a jupiter notebook so that
00:49 - we're ready to do some coding and
00:50 - analysis now i'd also like to mention
00:52 - that we do have a sponsor for the series
00:54 - of videos and that is brilliant org so i
00:57 - really want to thank brilliant for
00:58 - sponsoring this series and it would be
01:00 - great if you all can check them out
01:01 - using the link in the description
01:02 - section below and support the sponsors
01:04 - and I'll talk more about their services
01:06 - in just a bit so with that said let's go
01:08 - ahead and get started so first of all
01:10 - let's install pandas so I'm using a
01:13 - clean virtual environment for this
01:14 - series but you don't have to use a
01:16 - virtual environment if you don't want to
01:17 - if you don't know what a virtual
01:19 - environment is and would like to learn
01:21 - more about those then I'll be sure to
01:23 - leave a link to my video on that topic
01:25 - in the description section below if
01:27 - anyone is interested so it's really easy
01:30 - to install pandas here all we need to do
01:32 - is say pip install pianist and we will
01:37 - let this run through and once we have
01:40 - pandas installed then let's also install
01:43 - Jupiter so that we can use Jupiter
01:45 - notebooks now I was a bit hesitant to
01:48 - use Jupiter for this series because some
01:50 - people find it difficult to get the hang
01:52 - of but honestly if you're going to be
01:54 - doing a lot of work with pandas then
01:56 - it's definitely a nice tool to use for
01:58 - this so now it's not necessary so you
02:01 - should be able to follow along with this
02:02 - series just fine if you're using a
02:04 - regular editor but Jupiter notebooks
02:06 - allows us to actually see our data more
02:09 - easily by using the browser to print out
02:11 - our data and tables that make it
02:13 - year to visualize so I'm gonna use it in
02:16 - the series but you don't have to in
02:18 - order to follow along so to install
02:20 - Jupiter I want to say pip install and
02:24 - this is going to be Jupiter lab and this
02:28 - is spelled Ju py ter la B Jupiter lab so
02:34 - we'll get that installed now I'm not
02:36 - going to go into a deep dive and how to
02:38 - use Jupiter in this series I'm mainly
02:40 - going to focus on pandas but if you'd
02:42 - like a detailed overview of how to use
02:44 - Jupiter then I do have a video on how to
02:46 - use Jupiter in depth and I'll leave a
02:48 - link to that video in the description
02:49 - section below if anyone would like to
02:52 - learn more about the details of using
02:54 - that ok so now we have pandas and
02:56 - Jupiter notebooks installed now we're
02:58 - going to need to download the data that
03:00 - I'll be using for most of this series
03:02 - now for anyone who's been watching my
03:04 - latest videos you know that I like to
03:06 - use the stackoverflow developer survey
03:08 - for different kinds of data analysis now
03:10 - the reason that I like to use this data
03:12 - is because it's real world data and it
03:15 - has a lot of data in there that I think
03:16 - would be interesting to most people who
03:18 - are watching these types of videos I've
03:20 - seen some other tutorials where the data
03:22 - just seems kind of unrealistic and not
03:24 - very relatable
03:26 - so hopefully using this data will keep
03:28 - people interested and also give you a
03:30 - good idea of what it's like to actually
03:32 - download download real data from a
03:35 - source and start analyzing it with
03:37 - pandas so to download this data I have
03:40 - this pulled up here in the browser we
03:42 - can go over to the Stack Overflow survey
03:45 - results page now this is easy to find if
03:47 - you just google it but just to keep
03:49 - things easy I'll have a link to this
03:51 - download page in a description section
03:53 - as well ok now on this page you can
03:57 - download the data in CSV form for any
04:00 - year that they have available and now
04:02 - I'm going to go ahead and download the
04:04 - 2019 data which is the top data here so
04:08 - I'm going to download this CSV here and
04:12 - then we'll click on download again and
04:15 - this should go ahead and download this
04:18 - for us ok it did and now I'm going to
04:22 - open this in my finder here and I'm
04:25 - going to unzip this data it comes
04:27 - zip drive and once that data is
04:29 - downloaded and unzipped I'm going to go
04:32 - ahead and drag that folder to a folder
04:34 - here on my desktop and that's where
04:37 - we'll also create a notebook and analyze
04:39 - this data so real quick I don't have
04:42 - this open let me open up this pandas
04:48 - demo folder and this will open this and
04:51 - find her and now I will take the data
04:54 - and drag this into this pandas demo
04:56 - folder that is on my desktop so your
04:59 - projects can be anywhere but I just had
05:02 - I just created a project folder here on
05:05 - my desktop called pandas demo and it's
05:07 - completely empty except for the data
05:09 - that we just dragged in here so now I'm
05:12 - going to rename this since this is kind
05:14 - of a long name here I'm just going to
05:16 - rename this to data that was named
05:19 - developer survey 2019 but I'm just gonna
05:21 - call that data so that it's easy for us
05:23 - to find that within our script okay so
05:26 - what files do we have here in the
05:28 - directory that we unzipped in this data
05:30 - directory let me make this a little
05:32 - larger here okay so first of all if you
05:36 - download data that comes with a readme
05:39 - then this is usually helpful we have a
05:41 - readme file right here it tells you what
05:43 - these other files are going to be so in
05:46 - this case we have this survey results
05:48 - public dot CSV and that contains the
05:51 - main survey results one respondent per
05:54 - row and one column per answer and the
05:57 - survey results schema here has the
06:00 - questions that correspond to each column
06:02 - name and the results now if any of this
06:05 - doesn't make sense now then then it will
06:07 - once we open up this data in Jupiter so
06:10 - I'm just given a broad overview here
06:12 - don't let this overwhelm you by
06:15 - everything that I'm saying here this
06:17 - will make a lot more sense once we open
06:18 - this up in Jupiter so let's go ahead and
06:21 - do that so to open this in a Jupiter
06:23 - notebook I'm going to go back to my
06:26 - terminal so I'm going to go ahead and
06:27 - close these Finder windows open here go
06:30 - back to my terminal and now within here
06:33 - I'm going to navigate to my folder where
06:35 - I place that data and this should be the
06:38 - same command on Mac
06:39 - and windows so I'm gonna say CD and I'm
06:43 - gonna go to my desktop this is going to
06:45 - be wherever your project directory is
06:47 - but mine is in this pandas demo on my
06:50 - desktop and once I am navigated to that
06:53 - directory to start up a Jupiter notebook
06:55 - we just need to say Jupiter notebook and
06:59 - run that and we should see a server
07:02 - start up here
07:03 - and it seems like it's taking a second
07:05 - ok there we go
07:06 - now back in our terminal here this will
07:10 - run a Jupiter server and you will need
07:13 - to leave that terminal open while you're
07:15 - working in Jupiter so Jupiter rum runs
07:18 - in the browser so if you shut down this
07:20 - server then you won't be able to access
07:22 - our notebook okay so let's go back here
07:27 - to the browser and this is where we have
07:30 - our Jupiter notebooks so let me zoom in
07:32 - here so that we can so that everybody
07:34 - can read this fairly well okay I'll zoom
07:38 - in to about right there I think is good
07:39 - okay so we can see our data folder here
07:42 - that we downloaded and placed in our
07:44 - Jupiter demo folder a little bit ago but
07:47 - now let's create a new notebook so to
07:50 - create a new notebook I'm going to click
07:51 - on new up here at the top right and then
07:54 - I'm going to use Python 3 and now we can
07:59 - name our notebook so up here where it
08:01 - says untitled I'm going to click here
08:03 - and I'm just going to call this pandas
08:06 - demo and rename that ok so now we're
08:09 - ready to start using pandas so we can
08:12 - import this by saying import pandas as
08:16 - PD now importing pandas as PD is just a
08:21 - common convention when using pandas so
08:23 - let's run that and I ran that cell by
08:27 - pressing Shift + Enter and again I'm not
08:30 - going to go into the specifics of
08:31 - working here within Jupiter in this
08:33 - series but if you'd like a rundown of
08:35 - the features and shortcuts that I'll be
08:37 - using then I do have a link to my
08:39 - Jupiter video in the description section
08:41 - below ok so for the rest of this video
08:43 - we'll see how to load in our data and
08:46 - look at some information about that data
08:48 - so our data is in a CSV format so in
08:53 - order to
08:53 - in that CSV we can simply say DF which
08:57 - is going to stand for data frame we
08:59 - learn about all about data frames here
09:00 - and a bit we're going to say DF is equal
09:02 - to PD dot read underscore CSV we're
09:07 - going to use the read CSV method from
09:10 - pandas here and now we just want to pass
09:13 - in a path to our CSV file now mine was
09:16 - within that data folder and that was
09:19 - within the file survey underscore
09:22 - results under score public dot CSV so
09:26 - now if I hit shift enter then that will
09:30 - run that cell so right off the bat we
09:33 - can see that this is pretty simple to
09:34 - work with so when using native Python in
09:37 - order to read in a CSV file we need to
09:40 - use the CSV module to create a CSV
09:42 - reader and things like that but here
09:45 - we're just doing this all in one line so
09:48 - when it reads this in it's going to read
09:50 - it in as a data frame so data frames are
09:53 - pretty much the backbone of pandas and
09:55 - we'll go more into what go over data
09:58 - frames and series objects in depth in
10:01 - the next video but for the basics a data
10:04 - frame is basically just rows and columns
10:07 - of data we can see what a data frame
10:09 - looks like but just by printing it out
10:11 - and this is the great thing about using
10:13 - Jupiter notebooks because it allows us
10:15 - to visualize these things in ways that
10:19 - we can't do in other editors so here in
10:22 - Jupiter I can simply just say DF and run
10:25 - that and it will print out our data
10:29 - frame here so we didn't even need to
10:31 - wrap this here in a print function now
10:34 - if you're using a normal editor then you
10:37 - can still print out data frame in from
10:39 - information but it's not going to look
10:42 - as good as it does here in Jupiter where
10:45 - we get this interactive table so this is
10:48 - a small look at our data now this is
10:51 - actually 85 columns here but if I scroll
10:55 - through these then it doesn't look like
10:57 - there's actually 85 columns printed out
11:00 - here so this is actually concatenated by
11:04 - default just to give us a broad overview
11:07 - of the
11:07 - data so by default Jupiter is displaying
11:10 - 20 columns from our data frame now how
11:14 - did I know that there was 85 columns for
11:17 - this data frame well there are a few
11:19 - attributes and methods that we can use
11:21 - to get an idea of what our data looks
11:24 - like so first we have the shape
11:26 - attribute and shape gives us the number
11:31 - of rows and columns in a tuple form so
11:35 - let's look at this so in our next cell
11:37 - down here I'm gonna say DF dot shape and
11:40 - I will run that now this is an attribute
11:44 - here it's not a method so you don't want
11:47 - to put parentheses so DF dot shape and
11:50 - we can see that we have 88 thousand rows
11:55 - and 85 columns now if you wanted a bit
12:00 - more information then we can use the
12:02 - info method the info method will give us
12:04 - the number of rows and columns and also
12:07 - all of the data types of all the columns
12:09 - as well
12:10 - now before I run that it looks like my
12:14 - text is getting cut off here a little
12:16 - bit sometimes this happens whenever I'm
12:19 - within Jupiter in order to fix this I
12:22 - usually just come up here and restart
12:25 - and run all my cells again that usually
12:28 - takes care of the problem let's see if
12:31 - that works okay so that seemed to work
12:33 - another thing that you can do here is
12:35 - just to totally reload the page and the
12:38 - browser and when you reload the page I
12:41 - think it's just because of how my I have
12:44 - this text enlarged so it's kind of
12:47 - messing with how these look but now we
12:49 - can see these just fine
12:50 - okay so like I was saying we can see
12:54 - here that we have eighty eight thousand
12:55 - eight hundred and eighty three rows and
12:58 - eighty five columns now if you wanted
13:01 - more information then we can use the
13:03 - info method and that will give us the
13:06 - number of rows and the number of columns
13:08 - but also all of the data types of the
13:11 - columns so let's run that so if I do D F
13:14 - dot info whoops
13:16 - D F dot info now this actually is a
13:19 - method so we do want to
13:21 - you put the parentheses there and let me
13:24 - run this and now let's go over this
13:27 - output so we can see here that it says
13:29 - that we have eighty-eight thousand eight
13:31 - hundred and eighty three entries so
13:33 - those are our rows we have a total of
13:35 - eighty five columns and then it lists
13:38 - all of our columns here for our data so
13:40 - these are all the columns in our CSV
13:43 - file that we have loaded in now it also
13:46 - gives us the data types of each of these
13:48 - columns and we're going to go over data
13:50 - types in a future video but for the most
13:54 - part objects usually mean strings and
13:57 - then we have other things as well so int
14:00 - 64 is just an integer float is a float
14:04 - so a probably a decimal number and there
14:08 - are no other data types in this data set
14:12 - but there are more data types in general
14:14 - so I will be sure to do a video on data
14:18 - types specifically in the near future
14:21 - okay so now that we know the number of
14:23 - rows and columns let's change a setting
14:26 - here within Jupiter so that we can see
14:28 - all of the columns so I think it would
14:31 - be useful to see all of these if we'd
14:33 - like to even if there are a lot of these
14:36 - to scroll through so to do this we can
14:39 - at change a setting and I'm gonna come
14:41 - down here to the bottom here and I'm
14:44 - gonna change a setting by saying PD dot
14:46 - set underscore option and within here I
14:50 - will say display dot max underscore
14:55 - columns and I will set that equal to 85
15:00 - so that we can see all of our columns
15:02 - and I will run that and now if we print
15:06 - out our data frame so I'm going to go
15:08 - back up here to where we print it out
15:10 - this data frame and I will rerun that
15:14 - cell and now if I scroll through these
15:16 - columns then we can see that now it
15:19 - looks like we actually have these 85
15:21 - different columns here so I can keep
15:24 - scrolling and keep scrolling and it
15:26 - didn't just chop us off at that 20 like
15:28 - it was before
15:28 - now obviously the rows are also being
15:31 - concatenated here and we definitely
15:33 - don't want to print
15:34 - all 89 thousand of these rows but there
15:39 - probably are some examples with certain
15:41 - datasets where you might want to see all
15:43 - of the rows as well so for example I
15:46 - said that the survey results schema CSV
15:49 - file that was included in our download
15:52 - gives the matching questions for all of
15:55 - these column names here so if we wanted
15:58 - to see what these column names here mean
16:02 - for this data then we can load in that
16:04 - schema CSV file as well so let me do
16:08 - this I'll go down to the bottom of our
16:10 - notebook and I will just load this in by
16:13 - saying schema underscore D F now I don't
16:16 - want to just call this D F because we
16:18 - don't want to overwrite our other data
16:20 - frame and I will load this in just like
16:23 - we saw before by saying PD dot read
16:25 - underscore CSV and this is within the
16:29 - data folder and this was called survey
16:32 - underscore results under score schema
16:37 - CSV so I will run this and now let's
16:41 - look at this schema data frame that we
16:46 - just loaded in so here we on this column
16:51 - column here this gives us all of the
16:53 - columns in our other data frame so we
16:57 - have respondent main branch hobbyist and
16:59 - if I scroll up to that data frame here
17:01 - I'm gonna delete this info here since we
17:04 - no longer need that if I scroll up to
17:07 - this data frame here then we can see
17:09 - respondent main branch hobbyist so if we
17:13 - want to know what these mean then that's
17:15 - what we use the schema for so we can see
17:17 - that main branch or hobbyist means d-u
17:21 - code as a hobby main branch means which
17:24 - of the following options best describes
17:25 - now it actually concatenates the text
17:28 - too in order to actually see this to the
17:31 - full text we could either change an
17:34 - option or we could just access this
17:36 - value directly and I will be showing you
17:38 - how to do that in the next video but for
17:41 - now we can see that we can't see all of
17:44 - the rows to the questions that correlate
17:48 - to each column name here remember we
17:50 - have 85 columns but for here we can only
17:53 - see the first five and then we get this
17:56 - ellipses here and then we can see the
17:58 - last five so let's set this up so that
18:02 - we can view 85 rows and then reprint
18:06 - this so that we can see all of these so
18:08 - back in the same cell where we set our
18:11 - max columns now let's also add one four
18:17 - rows as well so I'm just going to copy
18:19 - and paste that but instead of max
18:21 - columns here I'm gonna have this be max
18:23 - rows and I will run that and now we will
18:27 - rerun this schema here and now we can
18:31 - see that we can see all of the columns
18:33 - and the corresponding question text so
18:37 - if you wanted to know what any of these
18:38 - columns mean then this is how we do it
18:42 - so we can see IT person the question was
18:44 - are you the IT support person for your
18:47 - family so that's probably a yes or no
18:49 - question so that is what those mean so
18:52 - if you're going through this data on
18:54 - your own then you can use this as a
18:55 - reference anytime you don't know what a
18:58 - certain column means in our survey data
19:00 - and if you don't know or if you don't
19:03 - want to look through all of these to
19:05 - find a specific row or a specific column
19:09 - name then in a future video we're going
19:11 - to learn about filtering data frames and
19:14 - see how we can just grab a specific row
19:16 - where the column equals a certain value
19:19 - okay so now we have all 85 rows visible
19:23 - of our schema data frame here but you
19:26 - might be thinking well that's nice but I
19:29 - don't want to see eighty five rows of my
19:31 - survey data every time I want to look at
19:34 - it but there are a couple of methods
19:36 - that we can use to only see a certain
19:39 - number of rows which you'll most likely
19:41 - use a lot just to get an idea that your
19:44 - filters and data frames seem to be
19:46 - working correctly so we can see the
19:49 - first five rows by saying instead of
19:51 - doing a DF here we can say D F dot head
19:55 - and if I run that then we just get the
19:58 - first five rows here okay and you can
20:01 - pass
20:02 - value if you want to see a certain
20:03 - number of values so if you wanted to see
20:05 - the first ten rows then we could pass in
20:08 - a ten to D F dot head and this gives us
20:11 - the first ten rows so we can see it goes
20:13 - all the way down zero through nine there
20:16 - now if you'd like to see the last rows
20:18 - instead of the first rows then we can
20:20 - use the tail method instead
20:23 - so if we say DF tail and
20:26 - we could use it without a number also
20:28 - but if we pass in a number just like
20:31 - with head then now we're going to say
20:32 - that we want the last ten entries here
20:36 - in our data so those are the last ten
20:38 - items of our data okay so this is a
20:41 - brief overview of getting pandas
20:44 - installed and then downloading our data
20:47 - and loading our data in to Jupiter and
20:50 - how to read this in now before we end
20:54 - here I'd like to mention the sponsor of
20:56 - this video and that is brilliant org so
20:59 - in this series we've been learning about
21:01 - pandas and how to analyze data and
21:03 - python and brilliant would be an
21:05 - excellent way to supplement what you
21:06 - learn here with their hands-on courses
21:08 - they have some excellent courses and
21:10 - lessons that do a deep dive on how to
21:11 - think about and analyze data correctly
21:13 - for data analysis fundamentals I would
21:16 - really recommend checking out their
21:17 - statistics course which shows you how to
21:19 - analyze graphs and determine
21:20 - significance in the data and I would
21:22 - also recommend their machine learning
21:24 - course which takes data analysis to a
21:26 - new level
21:26 - well you'll learn about the techniques
21:28 - being used that allow machines to make
21:30 - decisions where there's just too many
21:32 - variables for a human to consider so to
21:34 - support my channel and learn more about
21:36 - brilliant you can go to brilliant org
21:38 - Forge slash CMS to sign up for free and
21:40 - also the first 200 people they go to
21:43 - that link will get 20% off the annual
21:45 - premium subscription and you can find
21:47 - that link in the description section
21:48 - below
21:49 - again that's brilliant org forge slash
21:52 - CMS
21:54 - okay so I think that is going to do it
21:56 - for our first pandas video I hope you
21:58 - feel like you've got a good introduction
21:59 - on how to install pandas and load in
22:01 - your data to a jupiter notebook in the
22:03 - next video we're going to be learning
22:05 - more about data frames and also learn
22:07 - about the series data type so we'll
22:10 - learn how we can think about data frames
22:12 - in a way that's easier to understand and
22:14 - also see how we can
22:16 - grab certain elements columns and rows
22:18 - from these as well so be sure to stick
22:21 - around for that but if anyone has any
22:23 - questions about will be covered in this
22:24 - video then feel free to ask in the
22:26 - comment section below and I'll do my
22:27 - best to answer those and if you enjoyed
22:29 - these tutorials and would like to
22:30 - support them then there are several ways
22:32 - you can do that the easiest ways to
22:34 - simply like the video and give it a
22:35 - thumbs up and also it's a huge help to
22:37 - share these videos with anyone who you
22:38 - think would find them useful and if you
22:40 - have the means you can contribute the
22:41 - patreon and there's a link to that page
22:43 - in the description section below
22:44 - be sure to subscribe for future videos
22:46 - and thank you all for watching
22:58 - you

Cleaned transcript:

hey there how's it going everybody in this series of videos we're going to be learning how to use the pandas library and Python so pandas is a data analysis library that allows us to easily read in and work with different types of data so we can use this to analyze CSV files Excel files and other similar formats so if you're getting into the data science field then this library is going to be essential to learn it's one of the most downloaded packages for Python and that's for a great reason so not only does it allow us to easily read in and analyze data but it also has great performance since it built on top of numpy and we'll be learning how to do different types of an analysis or if data analysis in this series so in this video we're going to be going over how to get pandas installed how to download the data that I'll be using for most of this series and also how to get all of this open in a jupiter notebook so that we're ready to do some coding and analysis now i'd also like to mention that we do have a sponsor for the series of videos and that is brilliant org so i really want to thank brilliant for sponsoring this series and it would be great if you all can check them out using the link in the description section below and support the sponsors and I'll talk more about their services in just a bit so with that said let's go ahead and get started so first of all let's install pandas so I'm using a clean virtual environment for this series but you don't have to use a virtual environment if you don't want to if you don't know what a virtual environment is and would like to learn more about those then I'll be sure to leave a link to my video on that topic in the description section below if anyone is interested so it's really easy to install pandas here all we need to do is say pip install pianist and we will let this run through and once we have pandas installed then let's also install Jupiter so that we can use Jupiter notebooks now I was a bit hesitant to use Jupiter for this series because some people find it difficult to get the hang of but honestly if you're going to be doing a lot of work with pandas then it's definitely a nice tool to use for this so now it's not necessary so you should be able to follow along with this series just fine if you're using a regular editor but Jupiter notebooks allows us to actually see our data more easily by using the browser to print out our data and tables that make it year to visualize so I'm gonna use it in the series but you don't have to in order to follow along so to install Jupiter I want to say pip install and this is going to be Jupiter lab and this is spelled Ju py ter la B Jupiter lab so we'll get that installed now I'm not going to go into a deep dive and how to use Jupiter in this series I'm mainly going to focus on pandas but if you'd like a detailed overview of how to use Jupiter then I do have a video on how to use Jupiter in depth and I'll leave a link to that video in the description section below if anyone would like to learn more about the details of using that ok so now we have pandas and Jupiter notebooks installed now we're going to need to download the data that I'll be using for most of this series now for anyone who's been watching my latest videos you know that I like to use the stackoverflow developer survey for different kinds of data analysis now the reason that I like to use this data is because it's real world data and it has a lot of data in there that I think would be interesting to most people who are watching these types of videos I've seen some other tutorials where the data just seems kind of unrealistic and not very relatable so hopefully using this data will keep people interested and also give you a good idea of what it's like to actually download download real data from a source and start analyzing it with pandas so to download this data I have this pulled up here in the browser we can go over to the Stack Overflow survey results page now this is easy to find if you just google it but just to keep things easy I'll have a link to this download page in a description section as well ok now on this page you can download the data in CSV form for any year that they have available and now I'm going to go ahead and download the 2019 data which is the top data here so I'm going to download this CSV here and then we'll click on download again and this should go ahead and download this for us ok it did and now I'm going to open this in my finder here and I'm going to unzip this data it comes zip drive and once that data is downloaded and unzipped I'm going to go ahead and drag that folder to a folder here on my desktop and that's where we'll also create a notebook and analyze this data so real quick I don't have this open let me open up this pandas demo folder and this will open this and find her and now I will take the data and drag this into this pandas demo folder that is on my desktop so your projects can be anywhere but I just had I just created a project folder here on my desktop called pandas demo and it's completely empty except for the data that we just dragged in here so now I'm going to rename this since this is kind of a long name here I'm just going to rename this to data that was named developer survey 2019 but I'm just gonna call that data so that it's easy for us to find that within our script okay so what files do we have here in the directory that we unzipped in this data directory let me make this a little larger here okay so first of all if you download data that comes with a readme then this is usually helpful we have a readme file right here it tells you what these other files are going to be so in this case we have this survey results public dot CSV and that contains the main survey results one respondent per row and one column per answer and the survey results schema here has the questions that correspond to each column name and the results now if any of this doesn't make sense now then then it will once we open up this data in Jupiter so I'm just given a broad overview here don't let this overwhelm you by everything that I'm saying here this will make a lot more sense once we open this up in Jupiter so let's go ahead and do that so to open this in a Jupiter notebook I'm going to go back to my terminal so I'm going to go ahead and close these Finder windows open here go back to my terminal and now within here I'm going to navigate to my folder where I place that data and this should be the same command on Mac and windows so I'm gonna say CD and I'm gonna go to my desktop this is going to be wherever your project directory is but mine is in this pandas demo on my desktop and once I am navigated to that directory to start up a Jupiter notebook we just need to say Jupiter notebook and run that and we should see a server start up here and it seems like it's taking a second ok there we go now back in our terminal here this will run a Jupiter server and you will need to leave that terminal open while you're working in Jupiter so Jupiter rum runs in the browser so if you shut down this server then you won't be able to access our notebook okay so let's go back here to the browser and this is where we have our Jupiter notebooks so let me zoom in here so that we can so that everybody can read this fairly well okay I'll zoom in to about right there I think is good okay so we can see our data folder here that we downloaded and placed in our Jupiter demo folder a little bit ago but now let's create a new notebook so to create a new notebook I'm going to click on new up here at the top right and then I'm going to use Python 3 and now we can name our notebook so up here where it says untitled I'm going to click here and I'm just going to call this pandas demo and rename that ok so now we're ready to start using pandas so we can import this by saying import pandas as PD now importing pandas as PD is just a common convention when using pandas so let's run that and I ran that cell by pressing Shift + Enter and again I'm not going to go into the specifics of working here within Jupiter in this series but if you'd like a rundown of the features and shortcuts that I'll be using then I do have a link to my Jupiter video in the description section below ok so for the rest of this video we'll see how to load in our data and look at some information about that data so our data is in a CSV format so in order to in that CSV we can simply say DF which is going to stand for data frame we learn about all about data frames here and a bit we're going to say DF is equal to PD dot read underscore CSV we're going to use the read CSV method from pandas here and now we just want to pass in a path to our CSV file now mine was within that data folder and that was within the file survey underscore results under score public dot CSV so now if I hit shift enter then that will run that cell so right off the bat we can see that this is pretty simple to work with so when using native Python in order to read in a CSV file we need to use the CSV module to create a CSV reader and things like that but here we're just doing this all in one line so when it reads this in it's going to read it in as a data frame so data frames are pretty much the backbone of pandas and we'll go more into what go over data frames and series objects in depth in the next video but for the basics a data frame is basically just rows and columns of data we can see what a data frame looks like but just by printing it out and this is the great thing about using Jupiter notebooks because it allows us to visualize these things in ways that we can't do in other editors so here in Jupiter I can simply just say DF and run that and it will print out our data frame here so we didn't even need to wrap this here in a print function now if you're using a normal editor then you can still print out data frame in from information but it's not going to look as good as it does here in Jupiter where we get this interactive table so this is a small look at our data now this is actually 85 columns here but if I scroll through these then it doesn't look like there's actually 85 columns printed out here so this is actually concatenated by default just to give us a broad overview of the data so by default Jupiter is displaying 20 columns from our data frame now how did I know that there was 85 columns for this data frame well there are a few attributes and methods that we can use to get an idea of what our data looks like so first we have the shape attribute and shape gives us the number of rows and columns in a tuple form so let's look at this so in our next cell down here I'm gonna say DF dot shape and I will run that now this is an attribute here it's not a method so you don't want to put parentheses so DF dot shape and we can see that we have 88 thousand rows and 85 columns now if you wanted a bit more information then we can use the info method the info method will give us the number of rows and columns and also all of the data types of all the columns as well now before I run that it looks like my text is getting cut off here a little bit sometimes this happens whenever I'm within Jupiter in order to fix this I usually just come up here and restart and run all my cells again that usually takes care of the problem let's see if that works okay so that seemed to work another thing that you can do here is just to totally reload the page and the browser and when you reload the page I think it's just because of how my I have this text enlarged so it's kind of messing with how these look but now we can see these just fine okay so like I was saying we can see here that we have eighty eight thousand eight hundred and eighty three rows and eighty five columns now if you wanted more information then we can use the info method and that will give us the number of rows and the number of columns but also all of the data types of the columns so let's run that so if I do D F dot info whoops D F dot info now this actually is a method so we do want to you put the parentheses there and let me run this and now let's go over this output so we can see here that it says that we have eightyeight thousand eight hundred and eighty three entries so those are our rows we have a total of eighty five columns and then it lists all of our columns here for our data so these are all the columns in our CSV file that we have loaded in now it also gives us the data types of each of these columns and we're going to go over data types in a future video but for the most part objects usually mean strings and then we have other things as well so int 64 is just an integer float is a float so a probably a decimal number and there are no other data types in this data set but there are more data types in general so I will be sure to do a video on data types specifically in the near future okay so now that we know the number of rows and columns let's change a setting here within Jupiter so that we can see all of the columns so I think it would be useful to see all of these if we'd like to even if there are a lot of these to scroll through so to do this we can at change a setting and I'm gonna come down here to the bottom here and I'm gonna change a setting by saying PD dot set underscore option and within here I will say display dot max underscore columns and I will set that equal to 85 so that we can see all of our columns and I will run that and now if we print out our data frame so I'm going to go back up here to where we print it out this data frame and I will rerun that cell and now if I scroll through these columns then we can see that now it looks like we actually have these 85 different columns here so I can keep scrolling and keep scrolling and it didn't just chop us off at that 20 like it was before now obviously the rows are also being concatenated here and we definitely don't want to print all 89 thousand of these rows but there probably are some examples with certain datasets where you might want to see all of the rows as well so for example I said that the survey results schema CSV file that was included in our download gives the matching questions for all of these column names here so if we wanted to see what these column names here mean for this data then we can load in that schema CSV file as well so let me do this I'll go down to the bottom of our notebook and I will just load this in by saying schema underscore D F now I don't want to just call this D F because we don't want to overwrite our other data frame and I will load this in just like we saw before by saying PD dot read underscore CSV and this is within the data folder and this was called survey underscore results under score schema CSV so I will run this and now let's look at this schema data frame that we just loaded in so here we on this column column here this gives us all of the columns in our other data frame so we have respondent main branch hobbyist and if I scroll up to that data frame here I'm gonna delete this info here since we no longer need that if I scroll up to this data frame here then we can see respondent main branch hobbyist so if we want to know what these mean then that's what we use the schema for so we can see that main branch or hobbyist means du code as a hobby main branch means which of the following options best describes now it actually concatenates the text too in order to actually see this to the full text we could either change an option or we could just access this value directly and I will be showing you how to do that in the next video but for now we can see that we can't see all of the rows to the questions that correlate to each column name here remember we have 85 columns but for here we can only see the first five and then we get this ellipses here and then we can see the last five so let's set this up so that we can view 85 rows and then reprint this so that we can see all of these so back in the same cell where we set our max columns now let's also add one four rows as well so I'm just going to copy and paste that but instead of max columns here I'm gonna have this be max rows and I will run that and now we will rerun this schema here and now we can see that we can see all of the columns and the corresponding question text so if you wanted to know what any of these columns mean then this is how we do it so we can see IT person the question was are you the IT support person for your family so that's probably a yes or no question so that is what those mean so if you're going through this data on your own then you can use this as a reference anytime you don't know what a certain column means in our survey data and if you don't know or if you don't want to look through all of these to find a specific row or a specific column name then in a future video we're going to learn about filtering data frames and see how we can just grab a specific row where the column equals a certain value okay so now we have all 85 rows visible of our schema data frame here but you might be thinking well that's nice but I don't want to see eighty five rows of my survey data every time I want to look at it but there are a couple of methods that we can use to only see a certain number of rows which you'll most likely use a lot just to get an idea that your filters and data frames seem to be working correctly so we can see the first five rows by saying instead of doing a DF here we can say D F dot head and if I run that then we just get the first five rows here okay and you can pass value if you want to see a certain number of values so if you wanted to see the first ten rows then we could pass in a ten to D F dot head and this gives us the first ten rows so we can see it goes all the way down zero through nine there now if you'd like to see the last rows instead of the first rows then we can use the tail method instead so if we say DF tail and we could use it without a number also but if we pass in a number just like with head then now we're going to say that we want the last ten entries here in our data so those are the last ten items of our data okay so this is a brief overview of getting pandas installed and then downloading our data and loading our data in to Jupiter and how to read this in now before we end here I'd like to mention the sponsor of this video and that is brilliant org so in this series we've been learning about pandas and how to analyze data and python and brilliant would be an excellent way to supplement what you learn here with their handson courses they have some excellent courses and lessons that do a deep dive on how to think about and analyze data correctly for data analysis fundamentals I would really recommend checking out their statistics course which shows you how to analyze graphs and determine significance in the data and I would also recommend their machine learning course which takes data analysis to a new level well you'll learn about the techniques being used that allow machines to make decisions where there's just too many variables for a human to consider so to support my channel and learn more about brilliant you can go to brilliant org Forge slash CMS to sign up for free and also the first 200 people they go to that link will get 20% off the annual premium subscription and you can find that link in the description section below again that's brilliant org forge slash CMS okay so I think that is going to do it for our first pandas video I hope you feel like you've got a good introduction on how to install pandas and load in your data to a jupiter notebook in the next video we're going to be learning more about data frames and also learn about the series data type so we'll learn how we can think about data frames in a way that's easier to understand and also see how we can grab certain elements columns and rows from these as well so be sure to stick around for that but if anyone has any questions about will be covered in this video then feel free to ask in the comment section below and I'll do my best to answer those and if you enjoyed these tutorials and would like to support them then there are several ways you can do that the easiest ways to simply like the video and give it a thumbs up and also it's a huge help to share these videos with anyone who you think would find them useful and if you have the means you can contribute the patreon and there's a link to that page in the description section below be sure to subscribe for future videos and thank you all for watching you
