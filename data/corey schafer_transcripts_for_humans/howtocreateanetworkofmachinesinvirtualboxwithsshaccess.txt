With timestamps:

00:00 - hey there how's it going everybody so
00:01 - there are a lot of system administration
00:02 - videos I'd like to do in the near future
00:04 - on topics like ansible and setting up
00:07 - web servers and running a Jenkins server
00:09 - and things like that and in order to do
00:11 - that I'd like to have some virtual
00:13 - machines set up that we can have SSH
00:15 - access to so in a previous video we
00:17 - already saw how to create snapshots of
00:19 - certain machine States and in this video
00:22 - we'll be learning how to clone virtual
00:24 - machines add these machines to a network
00:26 - so that they can communicate with each
00:27 - other and make sure that they have
00:29 - internet access and also set up SSH so
00:32 - that we're able to SSH into these
00:34 - machines from our host machine so this
00:36 - will allow us to pretty much build an
00:38 - entire virtual lab that we can use to
00:41 - test all kinds of different stuff so
00:42 - after we're done this will give us the
00:44 - ability to quickly spin up a new virtual
00:46 - machine that behaves just like a real
00:48 - machine on our network so if you do want
00:50 - to follow along with those future videos
00:51 - and don't currently have a machine that
00:53 - you can run experiments on then you
00:55 - should probably follow along with this
00:57 - video so that you have a virtual machine
00:58 - that you can SSH into and we'll be using
01:01 - VirtualBox for this video and in a few
01:03 - previous videos we looked at how to
01:05 - install a couple of different operating
01:06 - systems in VirtualBox so we learned how
01:08 - to install Ubuntu desktop and Kali Linux
01:10 - so if you'd like to see how I got these
01:12 - machines installed then you can go back
01:14 - and watch either of those videos and
01:16 - I'll put a link to that in the
01:17 - description section below so in this
01:19 - video we're going to go ahead and create
01:20 - two clones of this Boonton machine and
01:23 - get them set up to where we can SSH into
01:25 - them from our host machine so let's go
01:27 - ahead and get started so first of all
01:29 - I'd like to point out that the virtual
01:31 - machines that we've created so far are
01:32 - pretty fresh installations so the only
01:34 - thing that we've done is installed the
01:36 - operating system and some guest
01:37 - additions now I also went in and added
01:40 - some code to the bash RC files and made
01:42 - the text a little larger so that you
01:44 - could see but other than that it should
01:46 - be just about the same so those changes
01:48 - aren't going to affect if you're
01:49 - following along but if you notice that
01:51 - my prompt looks different than yours
01:53 - when you log into these machines then
01:54 - that's the reason and if you do get
01:56 - those machines set up how you like I
01:57 - usually like to create a snapshot of
01:59 - that machine so that you can go back to
02:01 - the fresh install or anyplace else if
02:03 - anything gets changed by mistake and
02:05 - like I said if you would like to learn
02:06 - more about how to do snapshots then I do
02:08 - have a video on specifically just that
02:10 - and I'll put a link to that video in the
02:12 - description section also
02:13 - personally one thing that I also like to
02:15 - do is after I get all my operating
02:16 - systems set up then I like to rename
02:19 - these to base at the beginning here so
02:21 - that I know that these are machines that
02:23 - I want to clone from so now that I have
02:25 - these set up to where I want to clone
02:26 - from these machines I'm not going to
02:28 - change anything on these machines
02:29 - anymore and then I'll just work with the
02:30 - clones so let's go ahead and do that now
02:32 - and get started on creating our machines
02:34 - that we're going to be able to SSH into
02:36 - so to start let's check out our
02:38 - VirtualBox preferences so we want to go
02:41 - up here to VirtualBox and hit
02:43 - preferences and from here let's go to
02:45 - Network and now let's choose host only
02:48 - network and we want to be sure that we
02:51 - have a host only network in here so you
02:54 - can see that I have one you might have
02:55 - to but you want to be sure that you at
02:57 - least have one and if you need to create
03:00 - one then you can click this Add button
03:01 - over here so now I'm going to double
03:04 - click on this VBox net zero and look at
03:07 - its settings so you can see that we have
03:09 - an ipv4 address of 192 168 56.1 and
03:15 - we're going to need to remember that IP
03:16 - for later and our subnet mask is 255 255
03:20 - 255 0 and if we click on the DHCP server
03:24 - settings here then I'm just going to
03:26 - leave this unchecked because we're going
03:28 - to be assigning static IPS to our
03:31 - machines and once we're sure that we
03:32 - have that host only network and we need
03:34 - to change the network settings for our
03:36 - base machine so let's go ahead and do
03:38 - that now so I'll close out of this and
03:40 - then for our base machine I'm going to
03:43 - open up select the base machine and then
03:45 - open up its settings now let's go over
03:47 - here to network and within Network we're
03:51 - going to go to adapter 1 which should be
03:53 - the default and we're going to have this
03:55 - set to NAT n 80 and this will allow our
03:58 - guest to connect to the internet through
04:00 - our host connection and now let's go
04:02 - over here to adapter 2 and let's enable
04:04 - this network adapter also and for this
04:07 - adapter we're going to choose this drop
04:09 - down here and let's choose host-only
04:11 - adapter now just a quick side note if
04:15 - you want to view these different network
04:17 - options on the VirtualBox page they have
04:20 - a good rundown of what each of these
04:22 - options mean and I'll leave a link to
04:23 - that in the description section below I
04:25 - have it pulled up right here it's
04:27 - just this website here and I'll leave a
04:29 - link to this but they have what all of
04:30 - these different Network possibilities
04:33 - are so I'm going to go ahead and
04:34 - minimize this again be sure that we have
04:37 - host-only adapter selected there and
04:39 - once we select host only you also want
04:41 - to make sure that it's set to the
04:43 - specific network that we just made sure
04:45 - existed okay so now that we have our
04:48 - different based Linux system set up how
04:49 - we'd like let's look at how fast we can
04:51 - get up and running with creating
04:53 - multiple clones that we can SSH into so
04:56 - now that clone that machine I'm just
04:58 - going to right click on our machine and
04:59 - hit clone you can see we could all you
05:01 - also use command o and within here I'm
05:05 - going to rename this to this first clone
05:07 - here I'm just going to name a boon 2-1
05:10 - and we do want to reinitialize the MAC
05:12 - address of the network cards so let's go
05:14 - ahead and continue and we'll do a full
05:17 - clone for this one and we will do the
05:19 - current machine State
05:22 - and once that clone is finished I'm
05:24 - going to go ahead and create a second
05:25 - clone here and I'm going to call this
05:27 - one a boon - - and we'll reinitialize
05:31 - the MAC address and continue and full
05:34 - clone and current machine State is fine
05:38 - okay so once both of those are created
05:41 - let's go ahead and start up both of
05:43 - those machines and login to each one so
05:46 - I'll just grab a boon - - and put it on
05:48 - the right side of the screen and boom -
05:50 - one I will put on the left side of my
05:52 - screen now since we clone these from a
05:54 - machine that already had guest additions
05:56 - installed we already have destined
05:58 - ditions installed for these clones as
06:00 - well so that's the benefit of cloning
06:02 - machine that's already been at setup so
06:04 - now I'll log in to both of these Shane
06:05 - machines and then as soon as they log in
06:08 - here I'm going to open up terminal so
06:10 - open up terminal on boom - one here and
06:13 - also on a boon - - so first let's make
06:18 - sure that we can access the Internet on
06:20 - both of our machines and to do that I'm
06:22 - just going to go ahead and ping
06:23 - google.com and I'll do that on the
06:27 - second machine here as well so you can
06:29 - see that we are pinging google.com so it
06:31 - does have network access and the reason
06:34 - that has that access is because we're
06:36 - using that n80 as our first adapter and
06:39 - that gives us internet access through
06:41 - our host machine so now let's set up the
06:43 - host names of both of our machines so I
06:47 - have my prompt set up to display the
06:49 - host name here in the prompt and you can
06:51 - see that currently these are both the
06:53 - same because it has the same host name
06:56 - as our base machines since that's what
06:58 - we clone from so to do this to change
07:01 - these host names we're going to have to
07:02 - edit two different files and you can use
07:04 - them to edit these files but if you're
07:06 - unfamiliar with them then you may want
07:07 - to use an editor like Nano so let's edit
07:10 - this file so we're going to do sudo nano
07:13 - and the first file that we want to edit
07:15 - is under e.t.c slash etc' slash host
07:21 - name and we'll open that up and put in
07:23 - our credentials here and for the first
07:25 - machine we will just call this a boon
07:28 - 2-1 and we'll also do this over here on
07:32 - the second machine so we'll do sudo nano
07:34 - slash
07:35 - ET c / hosting and put in our
07:38 - credentials and we will call this one a
07:41 - boon - - - and in nano to save this you
07:45 - hit ctrl X and then Y to save and over
07:49 - here we'll hit control X and then Y to
07:52 - save and now another file to change that
07:55 - host name we need to open up our host
07:58 - file so /et see slash hosts and right
08:02 - here on the first line where we had the
08:05 - old host name I'm just going to erase
08:07 - that and this one was called a boon 2-1
08:11 - so we will save that and then over here
08:14 - on this machine will do the same thing
08:16 - sudo nano that's - ET c / host and on
08:22 - the second line here we're going to
08:25 - erase the old host name and the new one
08:28 - for this machine was a boon - - so ctrl
08:31 - XY to save okay so now that we have that
08:35 - done let's run a command I F config and
08:39 - dash a and we'll do that on this machine
08:42 - as well ifconfig - a it looks like I
08:46 - missed a space there so I have config
08:48 - space - eh okay so now we should be able
08:51 - to see our network interfaces now this
08:53 - first one here with the eye net address
08:56 - is bound to our first adapter and we're
08:59 - going to bind this second one here to an
09:02 - IP address on our host only network that
09:05 - we specified before so keep the name of
09:07 - this second interface in mind here
09:10 - because it may be different than what is
09:12 - on my machine so for you this may be
09:14 - something like eth1
09:17 - or something like that so be sure that
09:20 - you keep in mind the second adapter name
09:22 - here so mine is enp 0 s 8 so I'm going
09:27 - to remember that and while remembering
09:29 - that now I'm going to change one more
09:31 - file here to change our network
09:33 - interfaces so this file is going to be
09:36 - sudo nano and the file is slash etc'
09:40 - slash network slash interfaces and we'll
09:46 - open this up in our second machine
09:48 - here as well so that's /et c slash
09:52 - network slash interfaces and within this
09:57 - file I'm going to come down here to the
10:00 - bottom I'll do it on my first machine
10:01 - first and this is going to be a kind of
10:05 - along here but just bear with me so
10:07 - we're going to say Auto and then the
10:08 - name of that interface and mine was EMP
10:11 - 0 s 8 then on the next line we're going
10:15 - to do I face and then the name of that
10:17 - interface again now we're going to tell
10:20 - this that we want it to be a static IP
10:21 - address so it's AI net static and now we
10:26 - want to specify what this address is so
10:29 - we'll say address and I'm going to set
10:31 - the address for this machine to 192.168
10:34 - got five six dot 100 and now this
10:39 - 192.168 six remember that was the first
10:43 - part of our host-only adapter address
10:47 - okay and what that said let's also do
10:50 - our subnet mask so we'll do net mask and
10:53 - we're going to set this this to 255 255
10:56 - dot 255 dot 0 okay and now we're going
10:59 - to have to do the same thing on our
11:01 - second machine here so I'll go ahead and
11:03 - speed this up so that you don't have to
11:05 - watch me type all this again
11:08 - okay so once we get to this point on our
11:10 - second machine now we want to be sure
11:12 - that we choose a different static IP
11:14 - address for each of these machines
11:16 - because we have to know which machine
11:18 - that we're going to be SS aging into so
11:20 - for this one instead of 192.168.1
11:25 - hundred let's do one hundred and one and
11:29 - now the subnet mask is going to be the
11:30 - same so we'll do a net mask of
11:33 - 255.255.255.0 and you'll want to check
11:38 - your typing at this point because it's
11:40 - easy to make typos whenever you're
11:41 - typing all this stuff out so let's go
11:44 - ahead and save both of these so ctrl x
11:46 - and y ctrl X and yes to save okay so now
11:53 - once we've made it to that point I'm
11:54 - going to go ahead and reboot my machine
11:56 - so I'm going to do a sudo reboot and
11:59 - we'll do this on the second machine as
12:01 - well sudo reboot now I think we could
12:05 - have activated those changes without a
12:07 - reboot but since it doesn't take too
12:09 - long I just like to go ahead and reboot
12:11 - at that point just in case okay so once
12:13 - our reboot is complete let's go ahead
12:15 - and log back in to each of our machines
12:18 - and once we're logged into each of our
12:21 - machines let's pull back up the terminal
12:23 - and we'll run a couple of checks here
12:27 - okay so first of all we can see that it
12:29 - has the new hostname for each machine so
12:31 - this is now a boon to one and this is
12:33 - now a boon to two so now if we rerun the
12:37 - ifconfig command ifconfig - a and over
12:42 - here we'll do is config - a now if we
12:47 - look at our second adapter here we can
12:50 - see that now it has an IP address that
12:52 - we set in our network interfaces file
12:55 - and over here let's do the same check so
12:58 - we have our second adapter here and we
13:00 - have a static IP address that's set to
13:03 - the IP address that we specified in that
13:05 - file so now that we have these machines
13:08 - set up on the same network they should
13:11 - be able to communicate with each other
13:13 - and we can test this by pinging their IP
13:15 - addresses so from the first machine we
13:18 - can say I want to ping
13:24 - 192.168.0.101 because that's our second
13:27 - machine is 101 so if I run that you can
13:31 - see that we're getting some ping
13:32 - responses back and from the second
13:34 - machine we can try to ping the first
13:37 - machine so we can say ping 192.168 6.1
13:41 - hundred and that's our first machine so
13:43 - if we run that we can see that we're
13:45 - getting a ping response back from that
13:47 - as well so now I'll go ahead and kill
13:49 - those and clear our screens okay so
13:53 - that's nice that those machines can talk
13:55 - to each other but also the good thing
13:57 - about this is that if we open up a
13:59 - terminal on our host machine then we
14:01 - should also be able to hit both of those
14:03 - guest machines from our host machine as
14:06 - well so to try this we can do a ping
14:11 - 192.168.1 hundred for our first machine
14:13 - and we can see that we're getting a
14:16 - response back from that and if I do a
14:19 - ping on the second machine then we can
14:22 - see that we're getting a response back
14:23 - from that as well so I'll go ahead and
14:25 - clear that out okay so we can ping those
14:28 - machines but now let's try to SSH into
14:31 - those machines so instead of a ping
14:33 - command here I'm going to do an SSH and
14:36 - then the user that we want to SSH as so
14:40 - core EMS at the IP address so we're
14:43 - going to try to log in to and I'll try
14:46 - to log in to the first machine here so
14:48 - I'll make that a 100 so we're trying to
14:49 - SSH as core EMS on this machine so if I
14:54 - run this now at this point that may have
14:56 - worked for you and it may not have so it
14:58 - didn't work for me so if it doesn't work
15:01 - for you then you might not have OpenSSH
15:04 - installed so if it doesn't work for you
15:06 - then we need to go to our virtual
15:08 - machine and install your SSH server so
15:11 - to do this let's go to each of our
15:13 - machines here and we're just going to do
15:15 - a sudo apt-get update and type in our
15:20 - credentials here and we'll do that on
15:22 - this machine as well and type in our
15:26 - credentials and that just updates our
15:29 - packages list so now I'll clear those
15:32 - out and now we want to install
15:34 - ssh server so to do this we will do sudo
15:38 - apt-get install and this is open ssh all
15:43 - one word with a dash and then server and
15:46 - then it will ask you to continue again
15:48 - you can just hit yes there and we'll do
15:50 - the same thing on our second machine so
15:52 - sudo apt-get install open and then -
15:57 - server and then it'll ask us to continue
16:01 - and we'll hit yes now I should also
16:03 - point out that those commands may be
16:05 - different depending on which version of
16:07 - Linux that you're using so now I'm going
16:09 - to clear our screens here now if you
16:12 - already had OpenSSH server installed and
16:15 - it still wasn't working then one thing
16:17 - that you can try is just restarting that
16:19 - service and to do that you can restart
16:21 - the service by saying sudo service SSH
16:23 - restart and we'll do that over here as
16:26 - well so sudo service SSH restart so now
16:31 - if those changes work correctly then we
16:33 - should be able to SSH into our machine
16:35 - now from our host machine so let's go
16:38 - ahead and try that so that same command
16:40 - that failed a little bit ago if we try
16:42 - this again so now we've got a little
16:44 - further it's asking us if we want to
16:46 - continue connecting and we'll type yes
16:48 - and then for the passphrase I'm just
16:50 - going to leave that blank and hit enter
16:51 - and now it's asking us for our password
16:53 - so we'll put in our password and now we
16:56 - can see here that from our host machine
16:58 - we are on the boon to one machine so the
17:01 - SSH was successful so if I do an LS then
17:06 - this is the home directory of my virtual
17:08 - machine if I do au name - a then we can
17:12 - see that it says that it's Linux Ubuntu
17:13 - so we actually our SSH into that machine
17:17 - so let's try to do the same thing with
17:20 - our second machine so instead of 100
17:23 - there as the one that we're SSA Qing in
17:25 - - let's do 101 if I hit enter okay so at
17:29 - this point that may have worked for you
17:30 - but also wanted to show you what this
17:32 - looked like as well so if you have been
17:35 - messing around with a few different
17:36 - machines and trying this with a few
17:38 - different machines then it may get to
17:40 - the point where you need to remove your
17:42 - keys belonging to a hostname from a
17:45 - known host file because that's what this
17:47 - error is he
17:48 - so basically with that first machine
17:50 - when we typed in yes and added
17:51 - information to that known host file and
17:53 - if you do this with multiple machines
17:55 - then that can get confusing so to do
17:58 - this and to remove that key from the
18:01 - known host file all we have to do is do
18:05 - ssh-keygen and then a - capital R option
18:09 - and then the IP address and the IP
18:11 - address for this is 192.168.10.10 and
18:25 - I'll clear my screen here now so now
18:27 - let's try to SSH into that second
18:29 - machine again so now it says that it
18:31 - didn't find it and if we want to
18:32 - continue connecting and we'll type yes
18:34 - and then again for the passphrase we'll
18:36 - just leave that blank and now it's
18:38 - asking for our password okay so now we
18:41 - can see that we're SSH into that boom to
18:45 - machine that second aboon to machine ok
18:47 - so once I get the machines to this point
18:49 - where I can login via SSH I usually like
18:52 - to create a snapshot of that virtual
18:55 - machine at this point so I can revert
18:57 - back to that state if I ever mess
18:58 - anything up by experimenting because
19:00 - that's what we want to do within these
19:02 - machines is experiment with different
19:04 - software's so I will go ahead and create
19:07 - two snapshots so on a boon to one here
19:10 - I'll go in and create a snapshot and for
19:13 - the snapshot description I'm just going
19:15 - to say SSH setup and in the snapshot
19:19 - description I usually like to add the
19:22 - static IP address just in case I forget
19:25 - in the future I can look in the
19:26 - description so I'm just going to say
19:29 - 192.168.1 hundred for that one and I
19:33 - will copy that for the next one and for
19:35 - a bun to two machine I'll take a
19:37 - snapshot and again I will just afford
19:41 - the name I'll do SSH set up and down
19:45 - here I will paste in the IP address and
19:47 - that was 1 0 1 and hit OK there oh and
19:52 - actually I just realized that I made a
19:53 - mistake when creating these snapshots if
19:55 - you have watched my snapshot video then
19:58 - you'll remember that you don't want to
20:00 - take snapshots of running
20:01 - machines unless you need to because
20:03 - it'll save the exact state of that
20:06 - machine and takes up way more space so
20:09 - I'm going to shut down these machines
20:12 - first and then create a snapshot and
20:14 - I'll go ahead and skip forward here so
20:16 - that you don't have to see this entire
20:18 - process okay with those snapshots
20:22 - created now I'm going to power these
20:24 - machines back up so that we can SSH back
20:28 - into them one last time okay and lastly
20:42 - let's set this up so that we can SSH
20:44 - into these machines by their hostname so
20:46 - currently if I was to say SSH as core
20:50 - EMS at a boon to one for our first
20:53 - machine and hit enter then it says that
20:56 - it doesn't know that hostname so even
20:58 - though we can SSH into that machine
21:01 - using the IP address it would be nice if
21:03 - we could SSH into it using the hostname
21:05 - as well so to get this working we're
21:08 - going to have to update our hosts file
21:09 - on our host machine so that it knows
21:12 - that that hostname is associated with
21:14 - that IP address and I'll just use Nano
21:16 - again so I'll do sudo nano and this host
21:19 - file is in slash etc' slash hosts and
21:24 - we'll need to put in our password okay
21:28 - and at the bottom of this file I'm going
21:30 - to go down to the very bottom here and
21:31 - first we're going to put in the IP
21:33 - address so we'll put in 192.168.1
21:37 - hundred and then we'll have a space
21:40 - actually instead I will do a tab and now
21:44 - we want the host name associated with
21:46 - that IP address so I'll do a boom 2-1
21:49 - and now let's do that same thing for the
21:51 - second one here so 192.168.1 o1 tab and
21:56 - this one is a boom - - and we'll hit
21:59 - control x + y to save that okay so now
22:02 - let's clear our screen and try that
22:04 - again so I'll try to SSH in as a boon
22:07 - 2-1 and we will add that to our hosts
22:11 - file no passphrase now it's asking for
22:13 - our password okay
22:15 - we can see that we're in there and just
22:17 - to double-check let's exit out of that
22:20 - machine and let's try to ssh into a boom
22:23 - - - so we'll type in yes there no
22:26 - passphrase type in our password and we
22:28 - can see that we can SSH into both of
22:30 - those using the hostname okay so I think
22:34 - that is going to do it for this video
22:36 - now I know that that seems like a lot to
22:38 - setup these machines that can
22:39 - communicate with each other and that we
22:41 - can SSH into but really the process
22:43 - isn't that long from start to finish if
22:45 - you do it a few times and like I was
22:47 - saying before this is going to allow us
22:49 - to test a lot of different things in a
22:50 - sandbox environment that we can just
22:53 - scrap and recreate if we mess anything
22:55 - up now one thing that I wanted to
22:57 - mention is that there are a lot of
22:58 - different ways that I've seen other
23:00 - people set this up and this is just my
23:02 - preferred method for several reasons
23:04 - that I'm not going to go into here now
23:07 - there are ways to do this similar thing
23:09 - using port forwarding or bridged network
23:11 - connections or using docker
23:14 - but those are all slightly different
23:15 - behaviors and from my testing needs this
23:18 - method has worked well okay so now that
23:20 - we have some fresh machines set up that
23:22 - we can SSH into maybe I'll try to put
23:24 - together some tutorials on tools like
23:26 - ansible where we can automate the
23:27 - provisioning of multiple machines or we
23:30 - can do something like Jenkins where we
23:32 - can walk through how to get started with
23:33 - continuous integration or anything like
23:35 - that but if you have any questions about
23:37 - what we covered in this video then feel
23:39 - free to ask in the comment section below
23:40 - and I'll do my best to answer those and
23:42 - if you enjoy these tutorials and would
23:44 - like to support them then there are
23:45 - several ways you can do that the easiest
23:46 - ways are simply like the video and give
23:48 - it a thumbs up and also it's a huge help
23:50 - to share these videos with anyone who
23:51 - you think would find them useful and if
23:53 - you have the means you can contribute
23:54 - through patreon and there's a link to
23:55 - that page in the description section
23:57 - below be sure to subscribe for future
23:58 - videos and thank you all for watching
24:02 - Oh
24:11 - you

Cleaned transcript:

hey there how's it going everybody so there are a lot of system administration videos I'd like to do in the near future on topics like ansible and setting up web servers and running a Jenkins server and things like that and in order to do that I'd like to have some virtual machines set up that we can have SSH access to so in a previous video we already saw how to create snapshots of certain machine States and in this video we'll be learning how to clone virtual machines add these machines to a network so that they can communicate with each other and make sure that they have internet access and also set up SSH so that we're able to SSH into these machines from our host machine so this will allow us to pretty much build an entire virtual lab that we can use to test all kinds of different stuff so after we're done this will give us the ability to quickly spin up a new virtual machine that behaves just like a real machine on our network so if you do want to follow along with those future videos and don't currently have a machine that you can run experiments on then you should probably follow along with this video so that you have a virtual machine that you can SSH into and we'll be using VirtualBox for this video and in a few previous videos we looked at how to install a couple of different operating systems in VirtualBox so we learned how to install Ubuntu desktop and Kali Linux so if you'd like to see how I got these machines installed then you can go back and watch either of those videos and I'll put a link to that in the description section below so in this video we're going to go ahead and create two clones of this Boonton machine and get them set up to where we can SSH into them from our host machine so let's go ahead and get started so first of all I'd like to point out that the virtual machines that we've created so far are pretty fresh installations so the only thing that we've done is installed the operating system and some guest additions now I also went in and added some code to the bash RC files and made the text a little larger so that you could see but other than that it should be just about the same so those changes aren't going to affect if you're following along but if you notice that my prompt looks different than yours when you log into these machines then that's the reason and if you do get those machines set up how you like I usually like to create a snapshot of that machine so that you can go back to the fresh install or anyplace else if anything gets changed by mistake and like I said if you would like to learn more about how to do snapshots then I do have a video on specifically just that and I'll put a link to that video in the description section also personally one thing that I also like to do is after I get all my operating systems set up then I like to rename these to base at the beginning here so that I know that these are machines that I want to clone from so now that I have these set up to where I want to clone from these machines I'm not going to change anything on these machines anymore and then I'll just work with the clones so let's go ahead and do that now and get started on creating our machines that we're going to be able to SSH into so to start let's check out our VirtualBox preferences so we want to go up here to VirtualBox and hit preferences and from here let's go to Network and now let's choose host only network and we want to be sure that we have a host only network in here so you can see that I have one you might have to but you want to be sure that you at least have one and if you need to create one then you can click this Add button over here so now I'm going to double click on this VBox net zero and look at its settings so you can see that we have an ipv4 address of 192 168 56.1 and we're going to need to remember that IP for later and our subnet mask is 255 255 255 0 and if we click on the DHCP server settings here then I'm just going to leave this unchecked because we're going to be assigning static IPS to our machines and once we're sure that we have that host only network and we need to change the network settings for our base machine so let's go ahead and do that now so I'll close out of this and then for our base machine I'm going to open up select the base machine and then open up its settings now let's go over here to network and within Network we're going to go to adapter 1 which should be the default and we're going to have this set to NAT n 80 and this will allow our guest to connect to the internet through our host connection and now let's go over here to adapter 2 and let's enable this network adapter also and for this adapter we're going to choose this drop down here and let's choose hostonly adapter now just a quick side note if you want to view these different network options on the VirtualBox page they have a good rundown of what each of these options mean and I'll leave a link to that in the description section below I have it pulled up right here it's just this website here and I'll leave a link to this but they have what all of these different Network possibilities are so I'm going to go ahead and minimize this again be sure that we have hostonly adapter selected there and once we select host only you also want to make sure that it's set to the specific network that we just made sure existed okay so now that we have our different based Linux system set up how we'd like let's look at how fast we can get up and running with creating multiple clones that we can SSH into so now that clone that machine I'm just going to right click on our machine and hit clone you can see we could all you also use command o and within here I'm going to rename this to this first clone here I'm just going to name a boon 21 and we do want to reinitialize the MAC address of the network cards so let's go ahead and continue and we'll do a full clone for this one and we will do the current machine State and once that clone is finished I'm going to go ahead and create a second clone here and I'm going to call this one a boon and we'll reinitialize the MAC address and continue and full clone and current machine State is fine okay so once both of those are created let's go ahead and start up both of those machines and login to each one so I'll just grab a boon and put it on the right side of the screen and boom one I will put on the left side of my screen now since we clone these from a machine that already had guest additions installed we already have destined ditions installed for these clones as well so that's the benefit of cloning machine that's already been at setup so now I'll log in to both of these Shane machines and then as soon as they log in here I'm going to open up terminal so open up terminal on boom one here and also on a boon so first let's make sure that we can access the Internet on both of our machines and to do that I'm just going to go ahead and ping google.com and I'll do that on the second machine here as well so you can see that we are pinging google.com so it does have network access and the reason that has that access is because we're using that n80 as our first adapter and that gives us internet access through our host machine so now let's set up the host names of both of our machines so I have my prompt set up to display the host name here in the prompt and you can see that currently these are both the same because it has the same host name as our base machines since that's what we clone from so to do this to change these host names we're going to have to edit two different files and you can use them to edit these files but if you're unfamiliar with them then you may want to use an editor like Nano so let's edit this file so we're going to do sudo nano and the first file that we want to edit is under e.t.c slash etc' slash host name and we'll open that up and put in our credentials here and for the first machine we will just call this a boon 21 and we'll also do this over here on the second machine so we'll do sudo nano slash ET c / hosting and put in our credentials and we will call this one a boon and in nano to save this you hit ctrl X and then Y to save and over here we'll hit control X and then Y to save and now another file to change that host name we need to open up our host file so /et see slash hosts and right here on the first line where we had the old host name I'm just going to erase that and this one was called a boon 21 so we will save that and then over here on this machine will do the same thing sudo nano that's ET c / host and on the second line here we're going to erase the old host name and the new one for this machine was a boon so ctrl XY to save okay so now that we have that done let's run a command I F config and dash a and we'll do that on this machine as well ifconfig a it looks like I missed a space there so I have config space eh okay so now we should be able to see our network interfaces now this first one here with the eye net address is bound to our first adapter and we're going to bind this second one here to an IP address on our host only network that we specified before so keep the name of this second interface in mind here because it may be different than what is on my machine so for you this may be something like eth1 or something like that so be sure that you keep in mind the second adapter name here so mine is enp 0 s 8 so I'm going to remember that and while remembering that now I'm going to change one more file here to change our network interfaces so this file is going to be sudo nano and the file is slash etc' slash network slash interfaces and we'll open this up in our second machine here as well so that's /et c slash network slash interfaces and within this file I'm going to come down here to the bottom I'll do it on my first machine first and this is going to be a kind of along here but just bear with me so we're going to say Auto and then the name of that interface and mine was EMP 0 s 8 then on the next line we're going to do I face and then the name of that interface again now we're going to tell this that we want it to be a static IP address so it's AI net static and now we want to specify what this address is so we'll say address and I'm going to set the address for this machine to 192.168 got five six dot 100 and now this 192.168 six remember that was the first part of our hostonly adapter address okay and what that said let's also do our subnet mask so we'll do net mask and we're going to set this this to 255 255 dot 255 dot 0 okay and now we're going to have to do the same thing on our second machine here so I'll go ahead and speed this up so that you don't have to watch me type all this again okay so once we get to this point on our second machine now we want to be sure that we choose a different static IP address for each of these machines because we have to know which machine that we're going to be SS aging into so for this one instead of 192.168.1 hundred let's do one hundred and one and now the subnet mask is going to be the same so we'll do a net mask of 255.255.255.0 and you'll want to check your typing at this point because it's easy to make typos whenever you're typing all this stuff out so let's go ahead and save both of these so ctrl x and y ctrl X and yes to save okay so now once we've made it to that point I'm going to go ahead and reboot my machine so I'm going to do a sudo reboot and we'll do this on the second machine as well sudo reboot now I think we could have activated those changes without a reboot but since it doesn't take too long I just like to go ahead and reboot at that point just in case okay so once our reboot is complete let's go ahead and log back in to each of our machines and once we're logged into each of our machines let's pull back up the terminal and we'll run a couple of checks here okay so first of all we can see that it has the new hostname for each machine so this is now a boon to one and this is now a boon to two so now if we rerun the ifconfig command ifconfig a and over here we'll do is config a now if we look at our second adapter here we can see that now it has an IP address that we set in our network interfaces file and over here let's do the same check so we have our second adapter here and we have a static IP address that's set to the IP address that we specified in that file so now that we have these machines set up on the same network they should be able to communicate with each other and we can test this by pinging their IP addresses so from the first machine we can say I want to ping 192.168.0.101 because that's our second machine is 101 so if I run that you can see that we're getting some ping responses back and from the second machine we can try to ping the first machine so we can say ping 192.168 6.1 hundred and that's our first machine so if we run that we can see that we're getting a ping response back from that as well so now I'll go ahead and kill those and clear our screens okay so that's nice that those machines can talk to each other but also the good thing about this is that if we open up a terminal on our host machine then we should also be able to hit both of those guest machines from our host machine as well so to try this we can do a ping 192.168.1 hundred for our first machine and we can see that we're getting a response back from that and if I do a ping on the second machine then we can see that we're getting a response back from that as well so I'll go ahead and clear that out okay so we can ping those machines but now let's try to SSH into those machines so instead of a ping command here I'm going to do an SSH and then the user that we want to SSH as so core EMS at the IP address so we're going to try to log in to and I'll try to log in to the first machine here so I'll make that a 100 so we're trying to SSH as core EMS on this machine so if I run this now at this point that may have worked for you and it may not have so it didn't work for me so if it doesn't work for you then you might not have OpenSSH installed so if it doesn't work for you then we need to go to our virtual machine and install your SSH server so to do this let's go to each of our machines here and we're just going to do a sudo aptget update and type in our credentials here and we'll do that on this machine as well and type in our credentials and that just updates our packages list so now I'll clear those out and now we want to install ssh server so to do this we will do sudo aptget install and this is open ssh all one word with a dash and then server and then it will ask you to continue again you can just hit yes there and we'll do the same thing on our second machine so sudo aptget install open and then server and then it'll ask us to continue and we'll hit yes now I should also point out that those commands may be different depending on which version of Linux that you're using so now I'm going to clear our screens here now if you already had OpenSSH server installed and it still wasn't working then one thing that you can try is just restarting that service and to do that you can restart the service by saying sudo service SSH restart and we'll do that over here as well so sudo service SSH restart so now if those changes work correctly then we should be able to SSH into our machine now from our host machine so let's go ahead and try that so that same command that failed a little bit ago if we try this again so now we've got a little further it's asking us if we want to continue connecting and we'll type yes and then for the passphrase I'm just going to leave that blank and hit enter and now it's asking us for our password so we'll put in our password and now we can see here that from our host machine we are on the boon to one machine so the SSH was successful so if I do an LS then this is the home directory of my virtual machine if I do au name a then we can see that it says that it's Linux Ubuntu so we actually our SSH into that machine so let's try to do the same thing with our second machine so instead of 100 there as the one that we're SSA Qing in let's do 101 if I hit enter okay so at this point that may have worked for you but also wanted to show you what this looked like as well so if you have been messing around with a few different machines and trying this with a few different machines then it may get to the point where you need to remove your keys belonging to a hostname from a known host file because that's what this error is he so basically with that first machine when we typed in yes and added information to that known host file and if you do this with multiple machines then that can get confusing so to do this and to remove that key from the known host file all we have to do is do sshkeygen and then a capital R option and then the IP address and the IP address for this is 192.168.10.10 and I'll clear my screen here now so now let's try to SSH into that second machine again so now it says that it didn't find it and if we want to continue connecting and we'll type yes and then again for the passphrase we'll just leave that blank and now it's asking for our password okay so now we can see that we're SSH into that boom to machine that second aboon to machine ok so once I get the machines to this point where I can login via SSH I usually like to create a snapshot of that virtual machine at this point so I can revert back to that state if I ever mess anything up by experimenting because that's what we want to do within these machines is experiment with different software's so I will go ahead and create two snapshots so on a boon to one here I'll go in and create a snapshot and for the snapshot description I'm just going to say SSH setup and in the snapshot description I usually like to add the static IP address just in case I forget in the future I can look in the description so I'm just going to say 192.168.1 hundred for that one and I will copy that for the next one and for a bun to two machine I'll take a snapshot and again I will just afford the name I'll do SSH set up and down here I will paste in the IP address and that was 1 0 1 and hit OK there oh and actually I just realized that I made a mistake when creating these snapshots if you have watched my snapshot video then you'll remember that you don't want to take snapshots of running machines unless you need to because it'll save the exact state of that machine and takes up way more space so I'm going to shut down these machines first and then create a snapshot and I'll go ahead and skip forward here so that you don't have to see this entire process okay with those snapshots created now I'm going to power these machines back up so that we can SSH back into them one last time okay and lastly let's set this up so that we can SSH into these machines by their hostname so currently if I was to say SSH as core EMS at a boon to one for our first machine and hit enter then it says that it doesn't know that hostname so even though we can SSH into that machine using the IP address it would be nice if we could SSH into it using the hostname as well so to get this working we're going to have to update our hosts file on our host machine so that it knows that that hostname is associated with that IP address and I'll just use Nano again so I'll do sudo nano and this host file is in slash etc' slash hosts and we'll need to put in our password okay and at the bottom of this file I'm going to go down to the very bottom here and first we're going to put in the IP address so we'll put in 192.168.1 hundred and then we'll have a space actually instead I will do a tab and now we want the host name associated with that IP address so I'll do a boom 21 and now let's do that same thing for the second one here so 192.168.1 o1 tab and this one is a boom and we'll hit control x + y to save that okay so now let's clear our screen and try that again so I'll try to SSH in as a boon 21 and we will add that to our hosts file no passphrase now it's asking for our password okay we can see that we're in there and just to doublecheck let's exit out of that machine and let's try to ssh into a boom so we'll type in yes there no passphrase type in our password and we can see that we can SSH into both of those using the hostname okay so I think that is going to do it for this video now I know that that seems like a lot to setup these machines that can communicate with each other and that we can SSH into but really the process isn't that long from start to finish if you do it a few times and like I was saying before this is going to allow us to test a lot of different things in a sandbox environment that we can just scrap and recreate if we mess anything up now one thing that I wanted to mention is that there are a lot of different ways that I've seen other people set this up and this is just my preferred method for several reasons that I'm not going to go into here now there are ways to do this similar thing using port forwarding or bridged network connections or using docker but those are all slightly different behaviors and from my testing needs this method has worked well okay so now that we have some fresh machines set up that we can SSH into maybe I'll try to put together some tutorials on tools like ansible where we can automate the provisioning of multiple machines or we can do something like Jenkins where we can walk through how to get started with continuous integration or anything like that but if you have any questions about what we covered in this video then feel free to ask in the comment section below and I'll do my best to answer those and if you enjoy these tutorials and would like to support them then there are several ways you can do that the easiest ways are simply like the video and give it a thumbs up and also it's a huge help to share these videos with anyone who you think would find them useful and if you have the means you can contribute through patreon and there's a link to that page in the description section below be sure to subscribe for future videos and thank you all for watching Oh you
