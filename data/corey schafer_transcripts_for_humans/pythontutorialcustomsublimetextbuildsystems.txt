With timestamps:

00:00 - hey everybody how's it going in this
00:01 - video we'll be learning how to create
00:03 - multiple Python build systems within
00:05 - sublime text so that we can run Python 2
00:08 - or Python 3 now this can be extremely
00:11 - useful if you're working on multiple
00:12 - projects and need to switch between
00:14 - different versions of Python so if we
00:16 - look at my sublime text here up here in
00:18 - tools and build systems you can see that
00:21 - I have two custom-built systems one for
00:23 - Python 2:7 and one for Python 3.5 so
00:27 - depending on the project I'm working on
00:29 - it's as easy as coming in here and
00:32 - choosing a different version if I want
00:33 - to run the program with that different
00:35 - version so let's go ahead and recreate
00:37 - both of these build systems from scratch
00:39 - so that we can see how we did this so to
00:42 - create a new build system we just come
00:44 - to this exact same location and instead
00:46 - of selecting a build system we can come
00:48 - down here to new build system to create
00:51 - a new one now this is going to open up a
00:53 - new file called untitled dot sublime
00:55 - build but before we make a new build
00:58 - system let's actually see where this is
01:00 - going to get saved too
01:02 - because some people create these build
01:04 - systems by accident and they don't know
01:06 - where to go in order to delete them so
01:09 - these are actually going to get saved to
01:10 - our packages folder so to view where
01:13 - your packages folder is if I click here
01:15 - on sublime text and the top left go to
01:19 - preferences then I can go to browse
01:21 - packages is it this is going to open up
01:23 - the location of my packages folder now
01:25 - I'm on a Mac and we can see that on a
01:27 - Mac it's within our home folder library
01:30 - application support sublime text and
01:33 - then packages so within this packages
01:35 - folder I'm going to navigate within this
01:37 - user folder here and now we can see our
01:40 - custom build systems so I have this
01:42 - Python to seven sublime build and I have
01:45 - this Python 3 5 sublime build so now
01:47 - let's just go ahead and delete both of
01:49 - these and will recreate both of them
01:51 - from scratch so I'm just going to open
01:53 - up the sublime text documentation online
01:56 - here and they have an example of a
01:59 - Python build system and we're just going
02:02 - to go ahead and modify this to the
02:03 - versions that we want to use now if you
02:06 - want to know where this documentation is
02:07 - online then just google sublime text
02:09 - build systems and it's one of the first
02:11 - results that pops up ok so let's go
02:13 - ahead and paste
02:14 - this into our custom-built system and
02:16 - then I'll explain exactly what's going
02:18 - on there so I'm going to go ahead and
02:20 - highlight all of this and paste that in
02:22 - okay so first of all we have this
02:24 - command statement now what this is doing
02:26 - is it's just like let me open up my
02:28 - terminal here this is just like typing
02:31 - in a command in the terminal so this
02:33 - Python and then - U and then file would
02:36 - be the same as doing Python
02:39 - - you and then the path to whatever file
02:42 - that we want to run with Python now
02:43 - that's going to use our system's default
02:45 - Python so in order to explicitly set the
02:49 - specific version that we want to use
02:51 - then we have to know the path to that
02:53 - Python interpreter so first let's go
02:55 - ahead and create our Python 2:7 build
02:57 - system now my operating system shipped
03:00 - with Python 2.6 and Python 2.7 and
03:03 - that's located within user bin Python 2
03:07 - 6 and python 2 7 now if you want to
03:10 - check the location of a specific Python
03:13 - interpreter then what you can try is you
03:15 - can go to your terminal and type which
03:18 - and then try something like python 2.6
03:21 - or python 2.7 and that will show you the
03:24 - location of that command so now I'm just
03:27 - going to go ahead and grab this location
03:29 - here and instead of this default Python
03:31 - I'm just going to go ahead and paste in
03:34 - the user bin Python and instead of 2 6
03:37 - there I'm actually gonna use 2 7 I'm
03:39 - gonna go ahead and save this file now
03:40 - and I don't want to overwrite the entire
03:43 - file name here I want to leave this dot
03:45 - sublime build but I'm just going to
03:47 - replace untitled with Python - 2.7 and
03:51 - let's go ahead and save that so now if I
03:54 - go back to our user folder here now we
03:57 - should see this Python - 7 sublime build
04:00 - in our users folder and if I go to tools
04:02 - and build systems now we should see that
04:05 - Python - 7 build system available okay
04:08 - so before we make our Python 3 build
04:11 - system let's go ahead and take a look at
04:13 - exactly what this other stuff is doing
04:15 - so first of all what is this - you
04:17 - option doing here now I'm not going to
04:19 - go too in depth in this video but
04:21 - basically what this has to do is with
04:24 - our output buffers so just to quickly
04:26 - show what this is
04:27 - good for I'm going to remove this - you
04:30 - option and come over here to this test
04:33 - file called buff pie and within this
04:36 - code what we're done is we are printing
04:38 - out hello world once every second for 5
04:42 - seconds now without that vashu option if
04:45 - I run this you can see that we don't
04:47 - have any output and then after 5 seconds
04:50 - you can see that all that output comes
04:52 - at once so in order to correct that and
04:55 - get it the war to work the way that we
04:56 - expected to work then I can put back in
04:58 - that - you option and save that and now
05:01 - if I go back to that Python file and run
05:04 - that now you can see that the output is
05:06 - like we would expect it so that is what
05:08 - the - you option is good for there now
05:11 - as far as the file regex and the
05:13 - selector I just usually leave these
05:15 - alone so the file regex
05:18 - has to do with how our output is
05:20 - displayed and the selector has to do
05:23 - with if we go to tools and build systems
05:25 - it has to do with how this automatic
05:29 - build system works but I'm going to go
05:31 - ahead and just leave those as is so now
05:33 - to make our Python 3 build system I'm
05:37 - just going to copy all of those lines of
05:39 - code there I'm gonna go to tools build
05:42 - system new build system and let's go
05:44 - ahead and just paste all of that into
05:47 - this file here now just like we did with
05:49 - Python 2 I'm going to go over here to
05:51 - our terminal and first you have to have
05:53 - Python 3 installed and after you install
05:56 - it then it will most likely put it in a
05:59 - position if we do a which python 3.5
06:01 - it'll mostly likely put it in your user
06:04 - local bin folder so I'm just going to go
06:06 - ahead and copy this location here and
06:08 - put this in instead of our Python 2.7
06:10 - I'm going to use this Python 3.5 now I'm
06:14 - going to go ahead and save that and
06:16 - again be sure not to overwrite that
06:18 - sublime build I'm just gonna call this
06:21 - Python
06:22 - - 3.5 and let's go ahead and save that
06:25 - so now if I go to my tools and build
06:28 - systems now you can see that we have
06:29 - both of those custom build systems
06:31 - available so I have a couple of files
06:34 - here that we can test this out with so
06:36 - I'm going to use this file here to check
06:38 - the Python to build system
06:41 - if I run this I'm printing out the
06:43 - executable and you can see that this is
06:46 - a little bit different than what we had
06:48 - in our build system file this user bin
06:52 - Python 2 7 is what you would expect to
06:54 - print out when we print out that
06:55 - executable but really on the Mac that's
06:58 - really just a symlink to this location
07:00 - so that worked fine and now if I go to
07:03 - tools and build system and choose Python
07:06 - 3.5 and run this now you can see that I
07:10 - get an error and that's because in this
07:12 - file I'm using Python 2 code so let's go
07:15 - over to this other file which uses
07:17 - Python 3 and now if I run this file now
07:20 - you can see that it printed out the
07:22 - Python 3 interpreter there so now
07:24 - depending on which project you're
07:26 - working on you can just come in here and
07:28 - go to build system and switch between
07:30 - python 2 and python 3 just at the click
07:33 - of a button
07:33 - so i think that's going to do it for
07:35 - this video I hope that helped if you
07:36 - ever need to run multiple versions of
07:39 - Python within sublime text but if you do
07:41 - have any questions just feel free to ask
07:43 - in the comment section below
07:44 - be sure to subscribe for future videos
07:46 - and thank you all for watching

Cleaned transcript:

hey everybody how's it going in this video we'll be learning how to create multiple Python build systems within sublime text so that we can run Python 2 or Python 3 now this can be extremely useful if you're working on multiple projects and need to switch between different versions of Python so if we look at my sublime text here up here in tools and build systems you can see that I have two custombuilt systems one for Python 27 and one for Python 3.5 so depending on the project I'm working on it's as easy as coming in here and choosing a different version if I want to run the program with that different version so let's go ahead and recreate both of these build systems from scratch so that we can see how we did this so to create a new build system we just come to this exact same location and instead of selecting a build system we can come down here to new build system to create a new one now this is going to open up a new file called untitled dot sublime build but before we make a new build system let's actually see where this is going to get saved too because some people create these build systems by accident and they don't know where to go in order to delete them so these are actually going to get saved to our packages folder so to view where your packages folder is if I click here on sublime text and the top left go to preferences then I can go to browse packages is it this is going to open up the location of my packages folder now I'm on a Mac and we can see that on a Mac it's within our home folder library application support sublime text and then packages so within this packages folder I'm going to navigate within this user folder here and now we can see our custom build systems so I have this Python to seven sublime build and I have this Python 3 5 sublime build so now let's just go ahead and delete both of these and will recreate both of them from scratch so I'm just going to open up the sublime text documentation online here and they have an example of a Python build system and we're just going to go ahead and modify this to the versions that we want to use now if you want to know where this documentation is online then just google sublime text build systems and it's one of the first results that pops up ok so let's go ahead and paste this into our custombuilt system and then I'll explain exactly what's going on there so I'm going to go ahead and highlight all of this and paste that in okay so first of all we have this command statement now what this is doing is it's just like let me open up my terminal here this is just like typing in a command in the terminal so this Python and then U and then file would be the same as doing Python you and then the path to whatever file that we want to run with Python now that's going to use our system's default Python so in order to explicitly set the specific version that we want to use then we have to know the path to that Python interpreter so first let's go ahead and create our Python 27 build system now my operating system shipped with Python 2.6 and Python 2.7 and that's located within user bin Python 2 6 and python 2 7 now if you want to check the location of a specific Python interpreter then what you can try is you can go to your terminal and type which and then try something like python 2.6 or python 2.7 and that will show you the location of that command so now I'm just going to go ahead and grab this location here and instead of this default Python I'm just going to go ahead and paste in the user bin Python and instead of 2 6 there I'm actually gonna use 2 7 I'm gonna go ahead and save this file now and I don't want to overwrite the entire file name here I want to leave this dot sublime build but I'm just going to replace untitled with Python 2.7 and let's go ahead and save that so now if I go back to our user folder here now we should see this Python 7 sublime build in our users folder and if I go to tools and build systems now we should see that Python 7 build system available okay so before we make our Python 3 build system let's go ahead and take a look at exactly what this other stuff is doing so first of all what is this you option doing here now I'm not going to go too in depth in this video but basically what this has to do is with our output buffers so just to quickly show what this is good for I'm going to remove this you option and come over here to this test file called buff pie and within this code what we're done is we are printing out hello world once every second for 5 seconds now without that vashu option if I run this you can see that we don't have any output and then after 5 seconds you can see that all that output comes at once so in order to correct that and get it the war to work the way that we expected to work then I can put back in that you option and save that and now if I go back to that Python file and run that now you can see that the output is like we would expect it so that is what the you option is good for there now as far as the file regex and the selector I just usually leave these alone so the file regex has to do with how our output is displayed and the selector has to do with if we go to tools and build systems it has to do with how this automatic build system works but I'm going to go ahead and just leave those as is so now to make our Python 3 build system I'm just going to copy all of those lines of code there I'm gonna go to tools build system new build system and let's go ahead and just paste all of that into this file here now just like we did with Python 2 I'm going to go over here to our terminal and first you have to have Python 3 installed and after you install it then it will most likely put it in a position if we do a which python 3.5 it'll mostly likely put it in your user local bin folder so I'm just going to go ahead and copy this location here and put this in instead of our Python 2.7 I'm going to use this Python 3.5 now I'm going to go ahead and save that and again be sure not to overwrite that sublime build I'm just gonna call this Python 3.5 and let's go ahead and save that so now if I go to my tools and build systems now you can see that we have both of those custom build systems available so I have a couple of files here that we can test this out with so I'm going to use this file here to check the Python to build system if I run this I'm printing out the executable and you can see that this is a little bit different than what we had in our build system file this user bin Python 2 7 is what you would expect to print out when we print out that executable but really on the Mac that's really just a symlink to this location so that worked fine and now if I go to tools and build system and choose Python 3.5 and run this now you can see that I get an error and that's because in this file I'm using Python 2 code so let's go over to this other file which uses Python 3 and now if I run this file now you can see that it printed out the Python 3 interpreter there so now depending on which project you're working on you can just come in here and go to build system and switch between python 2 and python 3 just at the click of a button so i think that's going to do it for this video I hope that helped if you ever need to run multiple versions of Python within sublime text but if you do have any questions just feel free to ask in the comment section below be sure to subscribe for future videos and thank you all for watching
