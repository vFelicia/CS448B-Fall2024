With timestamps:

00:00 - hey there how's it going everybody in
00:01 - this video we're going to be learning
00:02 - how to get started with using Python and
00:04 - the YouTube API so this will allow us to
00:07 - connect to YouTube's API to gather
00:09 - information from YouTube and do some
00:11 - analysis from within Python now there
00:13 - are a lot of things that I've used us
00:15 - for in the past so for example I've used
00:17 - this API to tally up the total duration
00:20 - of specific playlists to track channel
00:22 - subscriptions to do some analysis on
00:25 - trending videos and also to grab the
00:28 - most popular video from specific
00:30 - playlists and things like that and I'll
00:32 - make videos for all of those topics in
00:34 - the near future but before we do that
00:36 - we'll need to get started by creating an
00:39 - API key and connecting to Google
00:41 - Google's API in Python so that's what
00:44 - we're going to be doing in this video
00:45 - well learn how to create an API key how
00:48 - to find all the information that we need
00:50 - in the documentation and also make some
00:53 - simple API requests to make sure that
00:55 - everything is working properly so with
00:57 - that said let's go ahead and get started
00:58 - so first of all we're going to need to
01:01 - sign up for an API key in order for for
01:03 - us to use the YouTube API so to do this
01:06 - I'm going to navigate to my developers
01:08 - console over here on Google to get setup
01:11 - with all of this information so this is
01:14 - at console dot developers.google.com and
01:18 - I'll have links to all of these sites in
01:21 - the description section below
01:22 - now when you navigate to this page it
01:24 - could look slightly different than mine
01:26 - depending on whether or not you've
01:28 - already created a project I've deleted
01:30 - my previous project before this video so
01:32 - that I can start from scratch
01:34 - so if you haven't created a project yet
01:36 - then you should see a page that looks
01:37 - something like this so we should see a
01:40 - prompt over here on the far right for
01:42 - creating a new project and all you need
01:45 - to do is click on that and then give
01:48 - your project a name so for my name here
01:50 - I'm just going to type in YouTube API
01:53 - and then I will create and once we have
01:57 - a project created it should look
01:58 - something like this so first of all
02:00 - Google has a lot of API s and if this
02:03 - video is interesting to all of you then
02:06 - we can explore some of the other API is
02:07 - available to us through Google as well
02:09 - but we're wanting to use the YouTube API
02:12 - for this video
02:13 - so we need to enable this API before
02:15 - creating our key so to do this we can
02:18 - see that it says we don't have any API
02:20 - is available yet to use and that we need
02:23 - to enable one so I'm just going to go to
02:25 - their API library here and now we can
02:28 - search for an API so I'm just going to
02:30 - search for YouTube and we can see that
02:33 - we get a few different results here the
02:35 - one that I'm going to be using is going
02:36 - to be the YouTube data API so I'm going
02:39 - to click on that and then we will enable
02:42 - this and now that we've enabled the use
02:45 - of this API for our project now we can
02:47 - create an API key to do this it's
02:50 - linking us to a page up here that says
02:52 - create credentials so I'm going to go
02:54 - ahead and click on that and then it's
02:57 - going to ask us a couple of questions
02:59 - here about our what kind of credentials
03:02 - we need so which API are we're using
03:04 - we've only enabled one so I'm going to
03:06 - choose YouTube data API where will you
03:09 - be calling the API from I am going to be
03:13 - using let's see I'm just gonna pick
03:15 - other non-ui cron job daemon here at the
03:19 - bottom since I'm just gonna be running
03:21 - this from a Python script but if you're
03:23 - running it from a web browser or a web
03:25 - server then you can select whatever
03:28 - option you're going to be using it for
03:29 - but I'm gonna go for non UI here and now
03:32 - we have this question what data will you
03:34 - be accessing so now it's going to ask us
03:38 - what type of credentials we don't want
03:39 - to create we can either create an API
03:42 - key which is used to access public
03:44 - information from YouTube and that's what
03:47 - we'll be doing in this video or we can
03:49 - create an OAuth client which is used for
03:52 - accessing private information from an
03:54 - account if a user is properly
03:56 - authenticated but so that would be user
03:59 - data here now in this video we're just
04:01 - accessing public information that anyone
04:03 - can find on YouTube so I'm gonna click
04:05 - on public data and now we can click on
04:08 - what credentials do I need and it should
04:11 - go ahead and tell us that we just need
04:13 - an API key and go ahead and give us our
04:16 - API key here now you can see here that
04:18 - there's also that they recommend
04:20 - restricting this key before it's used in
04:22 - production so you can restrict a key to
04:25 - like a single IP address
04:27 - or a couple of different other options
04:29 - there I'm not gonna do that in this
04:30 - video because I'm just going to delete
04:33 - this API key after this video is done
04:34 - but for now I'm gonna go ahead and copy
04:36 - that and now I'm going to click on done
04:39 - okay so now we've created our API key
04:42 - and on this page it will show us all of
04:44 - the keys I have available for this
04:45 - project so we can see that I have one
04:48 - API key here and that if I need to copy
04:51 - this again then I can just click this
04:54 - right here to copy this key and again
04:56 - don't worry I'm going to delete this API
04:58 - key after this video so you don't have
05:00 - to worry about anyone stealing this or
05:02 - anything like that now I know that I'm
05:04 - gonna be using this API key later within
05:06 - my Python script so I'm gonna go ahead
05:08 - and paste this into my empty script for
05:11 - later use and this is the script that
05:13 - I'm going to be using to write the code
05:18 - to connect to the API later so I'm going
05:20 - to just paste that here within a string
05:23 - now for the purpose of making things
05:25 - easy for this video I'm just gonna have
05:27 - this API key directly in my script here
05:29 - but when you work with api's you
05:31 - definitely want to keep the secret if
05:34 - someone gets ahold of your API key then
05:36 - they'll be able to access the API
05:38 - service on your behalf so if you ever
05:40 - think that an API key is lost or stolen
05:42 - then you'll need to delete it and create
05:44 - a new one now one way to keep these
05:46 - tokens and passwords safe is to put them
05:48 - in an environment variable or a secret
05:51 - configuration file that isn't committed
05:53 - to any of your repositories and I have a
05:56 - video on using environment variables for
05:58 - secret keys so if you'd like to see what
06:01 - that looks like then I'll leave a link
06:02 - to that video in the description section
06:04 - below okay so now that we have our API
06:06 - key we're ready to use the YouTube API
06:09 - using Python now I mentioned this in my
06:12 - last video when I worked with the
06:13 - patreon API but the documentation for
06:16 - these api's are going to be our best
06:18 - friend when developing anything like
06:20 - this luckily Google has some terrific
06:22 - documentation for their YouTube API now
06:25 - to find this you could just do a Google
06:27 - you know a simple google search for
06:29 - YouTube API but instead of the first
06:32 - result that you'd find on Google that
06:34 - takes you to their official
06:35 - documentation I'm instead going to open
06:38 - their Python client github
06:41 - imitation for now now I find this to be
06:44 - extremely useful since it has all the
06:46 - methods and arguments that we're going
06:49 - to be able to use within Python and
06:51 - they're all listed here now I've got
06:53 - this page pulled up in my browser
06:55 - already but like I said I'll be sure to
06:57 - link all of these pages and the
06:59 - description section below so that you
07:00 - can find them all right okay so this is
07:03 - the github page here and you can see
07:05 - that this is the Google API user and
07:08 - this is the Google API client for Python
07:10 - and I think they did a great job of
07:12 - documenting everything here so that it
07:14 - allows us to work with this API easily
07:16 - now if we scroll down then it will give
07:19 - us some installation instructions here
07:21 - if I scroll down to installation then
07:24 - it's going to tell us what we need to
07:26 - pip install in order to work with this
07:28 - API so this is the package that we need
07:31 - to install here Google API Python client
07:33 - and that's the same on Windows now
07:36 - they're showing you how to activate a
07:37 - virtual environment now you don't have
07:40 - to use a virtual environment in order to
07:42 - install this but I always recommend
07:44 - using these since it's just a good
07:46 - practice to use a different environment
07:47 - for each project now if you'd like to
07:50 - learn more about virtual environments
07:51 - then I'll be sure to leave a link to my
07:52 - video on that topic in the description
07:55 - section below as well okay so I'm going
07:57 - to go ahead and install this Google API
08:00 - Python client using pip now I've already
08:04 - got a virtual environment activated here
08:07 - so I'm just going to say pip install and
08:10 - install this Google API Python client so
08:14 - let's go ahead and install that okay so
08:16 - once that's finished installing let's go
08:18 - back to the browser and I'll show how we
08:20 - can use the documentation to see exactly
08:23 - what we need in order to work with this
08:26 - API correctly so I've got the browser
08:28 - back open here now I'm gonna scroll up
08:30 - here to the top and we can see here that
08:34 - it says to get started see the docs
08:36 - folder so I'm gonna open up this Doc's
08:39 - folder and a new tab here and then I'm
08:42 - going to scroll down here to the bottom
08:44 - and click on getting started and now
08:48 - let's take a look at what we need to get
08:51 - started using this API so we can see
08:54 - here that we've already
08:55 - done some of this so it tells us that if
08:57 - we don't have a Google account that we
08:58 - need to create one that we need to go to
09:01 - our Google API console and create a
09:04 - project and things like that
09:06 - we need to create an API key we've
09:10 - already done all of this so now that we
09:12 - have our API key we can go down here to
09:15 - building and calling a service this is
09:17 - the step that we are currently at so let
09:19 - me go ahead and read this real quick so
09:21 - it says that this section describes how
09:23 - to build an API specific service object
09:26 - make calls to the service and process
09:28 - the response whether you are using a
09:30 - simple or authorized API access you can
09:33 - use the build function to create a
09:35 - service object it takes an API name and
09:38 - API version as arguments you can see the
09:41 - list of all API versions at the
09:43 - supported api's page the service object
09:46 - is constructed constructed with methods
09:49 - specific to that given API so to create
09:51 - it you can do the following ok so we can
09:54 - see that we need to use this build
09:55 - function here and we need to pass in the
09:58 - API name and the API version let me go
10:01 - ahead and open up this build function
10:04 - here and see what this looks like
10:05 - so let me make this browser a little
10:08 - larger so that you all can see so we can
10:11 - see that we have this build function
10:13 - here and we need the service name we
10:15 - need the version for that service and
10:17 - then we can see here that it also takes
10:19 - in a developer key so the developer key
10:22 - is our API key so let me go back here so
10:27 - we need to know our service name and
10:29 - version an order to get to connect to a
10:31 - specific API and to find this they have
10:34 - the supported api's page listed here for
10:37 - us so that we can find the one that
10:38 - we're looking for so I'm going to open
10:40 - this up in a new tab and if I look at
10:44 - this then these are all their API s and
10:46 - API versions now instead of searching
10:48 - through this entire thing I'm just going
10:50 - to do a search for YouTube here so
10:52 - YouTube is the service name and we can
10:55 - see that it's all lowercase and Version
10:58 - three is the version now if I click on
11:00 - this v3 here I'm going to open this up
11:03 - in a new tab these are actually all of
11:05 - the instance methods available to us one
11:08 - we connect to this YouTube service so
11:10 - I'm going to leave this page open here
11:12 - so that we can reference this later but
11:15 - now I'm going to go back here to this
11:18 - building the service object so they
11:21 - actually show us here how to connect to
11:23 - a service by importing this build
11:25 - function and then passing in all of that
11:29 - information that we just saw within the
11:30 - documentation and we'll need to pass in
11:33 - our API key into that function as well
11:35 - so I'm gonna copy this import statement
11:38 - here and paste this into our script so
11:41 - I'm gonna copy that go back to the
11:42 - script and let's import this at the top
11:46 - okay and now from reading that
11:48 - documentation we know that we can
11:51 - connect to the YouTube service by using
11:53 - this build function so I'm gonna call
11:55 - this service YouTube and then I will
11:58 - pass in the build function and that was
12:03 - the first we need to pass in the service
12:05 - name which was YouTube all lowercase and
12:07 - then the version was v3 and then it also
12:13 - took in developer key as an argument as
12:17 - well and that is our API key and again
12:20 - if you're ever working with an API and
12:22 - forget any of this information then you
12:24 - can always go back to the documentation
12:26 - just to be sure okay so we have our
12:28 - YouTube service here and if we typed
12:30 - everything in correctly then this should
12:32 - be ready to use so real quick let's test
12:35 - this by making a very simple API request
12:38 - so I'm just going to fetch my channel
12:41 - information from YouTube and see if I
12:43 - get a response now in order to know how
12:45 - to do this we can go back to the
12:48 - documentation and look at the instance
12:50 - methods available to us with this
12:52 - YouTube service so I'm going to go back
12:55 - to the documentation here and open back
12:58 - up where we had where we clicked on this
13:01 - YouTube version 3 and it gave us all of
13:04 - our instance methods here that are
13:06 - available to us and we can see here
13:08 - towards the top of these instance
13:09 - methods that we have one called channels
13:12 - so we have this channels method and that
13:14 - returns a resource for that API route so
13:18 - if I open this in a new tab then
13:21 - can see that we that the resource that
13:24 - we have a few more methods here now the
13:26 - one that I'm going to be interested in
13:28 - is this list method so that we can list
13:30 - specific channels and we can see the
13:33 - arguments that this list method takes so
13:36 - we need to pass in this part argument
13:38 - here which is basically the information
13:40 - that we want included in the response
13:43 - now look I know that we're probably sick
13:46 - of looking at documentation instead of
13:48 - actually writing some code here but I'm
13:50 - trying to give a realistic example of
13:52 - what it's like to actually learn how to
13:54 - work with these api's there's a lot of
13:57 - different information to track down so
13:59 - the last bit of information that we need
14:01 - right now is what we can actually pass
14:04 - in as an argument for this part
14:07 - parameter here and then we'll be able to
14:09 - make our first API request so to find
14:12 - this information I'm just going to open
14:14 - up the official API documentation so
14:18 - right now we're on the Google API for
14:21 - Python github documentation but I'm
14:25 - going to open up the official YouTube
14:27 - documentation now and I already have
14:29 - this open in the browser but if you
14:32 - google YouTube API then this will be the
14:34 - first result okay so to find more
14:36 - information about what we can pass in to
14:39 - that channels resource and what we can
14:42 - get back we're going to need to click on
14:44 - references up here and then we want to
14:47 - go down to this channels reference and
14:50 - remember I was wanting to list channels
14:53 - so we could either go to an overview to
14:54 - see an overview of this API route or I
14:57 - could go to list which is specifically
15:00 - the route that I'm looking for and then
15:02 - we can see that it gives us common use
15:04 - cases we can even take a look at some
15:08 - code here and they have some Python code
15:09 - examples here so they did a really good
15:12 - job of documenting all this now what I
15:15 - need is I need to scroll down to
15:17 - parameters to see what exactly we can
15:20 - pass in to this part which is a required
15:24 - parameter so right here we can see all
15:26 - the strings that we can pass in to this
15:28 - part parameter so let's say that I want
15:31 - the statistics of a certain Channel
15:35 - then I can just pass in statistics here
15:37 - as an argument so let me go back to our
15:40 - script and I'll try this out so I'm
15:43 - going to go back to our script here and
15:45 - now in order to do this I can create a
15:48 - request and then I'm going to use this
15:51 - YouTube service here and remember we saw
15:54 - those YouTube that YouTube resource
15:57 - earlier and all those instance methods
15:59 - that we had available and one of those
16:01 - was the channels instance method and
16:04 - within there we want to list the
16:07 - channels and now we need to pass in a
16:10 - couple of required parameters so first
16:13 - we need to pass in that part and I said
16:16 - that I was going to look up the
16:17 - statistics for a channel and finally how
16:23 - do we find our what channel we're
16:26 - actually getting statistics for so if I
16:29 - go back to the documentation one more
16:31 - time and look at our list method that
16:37 - we're using up here at the top we can
16:39 - see one here that is a four username so
16:44 - we could either pass in like a channel
16:46 - ID or we could pass in a channel
16:49 - username using the for username
16:51 - parameter so that's what I'm going to
16:53 - use so I'm going to just say for
16:56 - username and that was a capitalized do I
16:59 - believe in that documentation and now my
17:03 - channel username is actually Schaefer
17:07 - five okay so that should create a
17:10 - request to the YouTube API but now in
17:14 - order to get a response we're going to
17:17 - have to execute that request so I'll say
17:21 - request dot execute and now let's just
17:24 - print out our response here so if I save
17:28 - this and run it then we see that we did
17:32 - get a response here so if I look at this
17:35 - response then we can see that I get my
17:37 - that we had one total result and that it
17:41 - is a of kind of a YouTube channel gives
17:45 - me my channel ID and things like that
17:48 - I look down here at my video count it
17:50 - says 226 so that sounds about right for
17:53 - my channel so it does seem like our API
17:56 - connection is working so if we wanted to
17:59 - see stats for another YouTube channel
18:00 - then all we need to do is pass in their
18:03 - username here into this function now a
18:07 - username might be different than their
18:10 - display name on YouTube so for example
18:12 - my display name is Cory Schafer but my
18:14 - username is Schaefer 5 to find the
18:17 - username you'd actually have to go to
18:19 - their YouTube page and then look in the
18:21 - URL so for example let's say that I
18:24 - wanted to look up let's do some Texas
18:27 - channel so if I I think his username is
18:30 - probably syntax but let's go ahead and
18:33 - see if that is correct I'll save this
18:35 - and run it and we can see that yeah this
18:40 - is probably him because he has eight
18:42 - hundred and ninety thousand subscribers
18:44 - and he's definitely blowing me out of
18:46 - the water with the video count there he
18:48 - has over 1200 video so that's very
18:50 - impressive ok so now that we know that
18:53 - we have this API working here within
18:55 - Python now we can use this API to grab
18:58 - just about any public information that
18:59 - we'd want and that's what we're going to
19:01 - be doing in the next few videos so I'll
19:04 - show how we can use this API to do some
19:06 - really useful things that aren't
19:08 - directly available from within YouTube
19:10 - itself so for example in the next video
19:13 - we're gonna learn how to write a script
19:15 - that calculates the duration of videos
19:18 - in a specific playlist and I think this
19:20 - is extremely important information to
19:22 - know and I'm honestly surprised that
19:25 - Google hasn't added this information to
19:27 - the actual playlist data on the actual
19:29 - website so for example if you wanted to
19:32 - watch one of my playlists then you'd
19:34 - likely want to know how long that
19:35 - playlist is so that you can get an idea
19:37 - of how long it would take you to learn
19:39 - that certain topic but currently YouTube
19:42 - doesn't have that information directly
19:43 - on their site so I use scripts like this
19:46 - all the time when I'm trying to
19:48 - calculate information like this to make
19:50 - my life a little bit easier so
19:52 - definitely be sure to check out that
19:53 - next video when it's released if that
19:56 - sounds like something you'd be
19:57 - interested in ok so I think that is
19:59 - going to do it for this video hopefully
20:01 - now you
20:02 - have a pretty good idea for how you can
20:04 - get started with the YouTube API and
20:06 - accessing this information within Python
20:08 - but if anyone has any questions about
20:10 - what we covered in this video then feel
20:12 - free to ask in the comment section below
20:13 - and I'll do my best to answer those and
20:15 - if you enjoy these tutorials and would
20:17 - like to support them then there are
20:18 - several ways you can do that these these
20:20 - ways to simply LIKE the video and give
20:22 - it a thumbs up and also it's a huge help
20:23 - to share these videos with anyone who
20:25 - you think would find them useful and if
20:27 - you have the means you can contribute
20:28 - through patreon or YouTube and there are
20:30 - links to those pages and the description
20:32 - section below be sure to subscribe for
20:34 - future videos and thank you all for
20:35 - watching
20:47 - you

Cleaned transcript:

hey there how's it going everybody in this video we're going to be learning how to get started with using Python and the YouTube API so this will allow us to connect to YouTube's API to gather information from YouTube and do some analysis from within Python now there are a lot of things that I've used us for in the past so for example I've used this API to tally up the total duration of specific playlists to track channel subscriptions to do some analysis on trending videos and also to grab the most popular video from specific playlists and things like that and I'll make videos for all of those topics in the near future but before we do that we'll need to get started by creating an API key and connecting to Google Google's API in Python so that's what we're going to be doing in this video well learn how to create an API key how to find all the information that we need in the documentation and also make some simple API requests to make sure that everything is working properly so with that said let's go ahead and get started so first of all we're going to need to sign up for an API key in order for for us to use the YouTube API so to do this I'm going to navigate to my developers console over here on Google to get setup with all of this information so this is at console dot developers.google.com and I'll have links to all of these sites in the description section below now when you navigate to this page it could look slightly different than mine depending on whether or not you've already created a project I've deleted my previous project before this video so that I can start from scratch so if you haven't created a project yet then you should see a page that looks something like this so we should see a prompt over here on the far right for creating a new project and all you need to do is click on that and then give your project a name so for my name here I'm just going to type in YouTube API and then I will create and once we have a project created it should look something like this so first of all Google has a lot of API s and if this video is interesting to all of you then we can explore some of the other API is available to us through Google as well but we're wanting to use the YouTube API for this video so we need to enable this API before creating our key so to do this we can see that it says we don't have any API is available yet to use and that we need to enable one so I'm just going to go to their API library here and now we can search for an API so I'm just going to search for YouTube and we can see that we get a few different results here the one that I'm going to be using is going to be the YouTube data API so I'm going to click on that and then we will enable this and now that we've enabled the use of this API for our project now we can create an API key to do this it's linking us to a page up here that says create credentials so I'm going to go ahead and click on that and then it's going to ask us a couple of questions here about our what kind of credentials we need so which API are we're using we've only enabled one so I'm going to choose YouTube data API where will you be calling the API from I am going to be using let's see I'm just gonna pick other nonui cron job daemon here at the bottom since I'm just gonna be running this from a Python script but if you're running it from a web browser or a web server then you can select whatever option you're going to be using it for but I'm gonna go for non UI here and now we have this question what data will you be accessing so now it's going to ask us what type of credentials we don't want to create we can either create an API key which is used to access public information from YouTube and that's what we'll be doing in this video or we can create an OAuth client which is used for accessing private information from an account if a user is properly authenticated but so that would be user data here now in this video we're just accessing public information that anyone can find on YouTube so I'm gonna click on public data and now we can click on what credentials do I need and it should go ahead and tell us that we just need an API key and go ahead and give us our API key here now you can see here that there's also that they recommend restricting this key before it's used in production so you can restrict a key to like a single IP address or a couple of different other options there I'm not gonna do that in this video because I'm just going to delete this API key after this video is done but for now I'm gonna go ahead and copy that and now I'm going to click on done okay so now we've created our API key and on this page it will show us all of the keys I have available for this project so we can see that I have one API key here and that if I need to copy this again then I can just click this right here to copy this key and again don't worry I'm going to delete this API key after this video so you don't have to worry about anyone stealing this or anything like that now I know that I'm gonna be using this API key later within my Python script so I'm gonna go ahead and paste this into my empty script for later use and this is the script that I'm going to be using to write the code to connect to the API later so I'm going to just paste that here within a string now for the purpose of making things easy for this video I'm just gonna have this API key directly in my script here but when you work with api's you definitely want to keep the secret if someone gets ahold of your API key then they'll be able to access the API service on your behalf so if you ever think that an API key is lost or stolen then you'll need to delete it and create a new one now one way to keep these tokens and passwords safe is to put them in an environment variable or a secret configuration file that isn't committed to any of your repositories and I have a video on using environment variables for secret keys so if you'd like to see what that looks like then I'll leave a link to that video in the description section below okay so now that we have our API key we're ready to use the YouTube API using Python now I mentioned this in my last video when I worked with the patreon API but the documentation for these api's are going to be our best friend when developing anything like this luckily Google has some terrific documentation for their YouTube API now to find this you could just do a Google you know a simple google search for YouTube API but instead of the first result that you'd find on Google that takes you to their official documentation I'm instead going to open their Python client github imitation for now now I find this to be extremely useful since it has all the methods and arguments that we're going to be able to use within Python and they're all listed here now I've got this page pulled up in my browser already but like I said I'll be sure to link all of these pages and the description section below so that you can find them all right okay so this is the github page here and you can see that this is the Google API user and this is the Google API client for Python and I think they did a great job of documenting everything here so that it allows us to work with this API easily now if we scroll down then it will give us some installation instructions here if I scroll down to installation then it's going to tell us what we need to pip install in order to work with this API so this is the package that we need to install here Google API Python client and that's the same on Windows now they're showing you how to activate a virtual environment now you don't have to use a virtual environment in order to install this but I always recommend using these since it's just a good practice to use a different environment for each project now if you'd like to learn more about virtual environments then I'll be sure to leave a link to my video on that topic in the description section below as well okay so I'm going to go ahead and install this Google API Python client using pip now I've already got a virtual environment activated here so I'm just going to say pip install and install this Google API Python client so let's go ahead and install that okay so once that's finished installing let's go back to the browser and I'll show how we can use the documentation to see exactly what we need in order to work with this API correctly so I've got the browser back open here now I'm gonna scroll up here to the top and we can see here that it says to get started see the docs folder so I'm gonna open up this Doc's folder and a new tab here and then I'm going to scroll down here to the bottom and click on getting started and now let's take a look at what we need to get started using this API so we can see here that we've already done some of this so it tells us that if we don't have a Google account that we need to create one that we need to go to our Google API console and create a project and things like that we need to create an API key we've already done all of this so now that we have our API key we can go down here to building and calling a service this is the step that we are currently at so let me go ahead and read this real quick so it says that this section describes how to build an API specific service object make calls to the service and process the response whether you are using a simple or authorized API access you can use the build function to create a service object it takes an API name and API version as arguments you can see the list of all API versions at the supported api's page the service object is constructed constructed with methods specific to that given API so to create it you can do the following ok so we can see that we need to use this build function here and we need to pass in the API name and the API version let me go ahead and open up this build function here and see what this looks like so let me make this browser a little larger so that you all can see so we can see that we have this build function here and we need the service name we need the version for that service and then we can see here that it also takes in a developer key so the developer key is our API key so let me go back here so we need to know our service name and version an order to get to connect to a specific API and to find this they have the supported api's page listed here for us so that we can find the one that we're looking for so I'm going to open this up in a new tab and if I look at this then these are all their API s and API versions now instead of searching through this entire thing I'm just going to do a search for YouTube here so YouTube is the service name and we can see that it's all lowercase and Version three is the version now if I click on this v3 here I'm going to open this up in a new tab these are actually all of the instance methods available to us one we connect to this YouTube service so I'm going to leave this page open here so that we can reference this later but now I'm going to go back here to this building the service object so they actually show us here how to connect to a service by importing this build function and then passing in all of that information that we just saw within the documentation and we'll need to pass in our API key into that function as well so I'm gonna copy this import statement here and paste this into our script so I'm gonna copy that go back to the script and let's import this at the top okay and now from reading that documentation we know that we can connect to the YouTube service by using this build function so I'm gonna call this service YouTube and then I will pass in the build function and that was the first we need to pass in the service name which was YouTube all lowercase and then the version was v3 and then it also took in developer key as an argument as well and that is our API key and again if you're ever working with an API and forget any of this information then you can always go back to the documentation just to be sure okay so we have our YouTube service here and if we typed everything in correctly then this should be ready to use so real quick let's test this by making a very simple API request so I'm just going to fetch my channel information from YouTube and see if I get a response now in order to know how to do this we can go back to the documentation and look at the instance methods available to us with this YouTube service so I'm going to go back to the documentation here and open back up where we had where we clicked on this YouTube version 3 and it gave us all of our instance methods here that are available to us and we can see here towards the top of these instance methods that we have one called channels so we have this channels method and that returns a resource for that API route so if I open this in a new tab then can see that we that the resource that we have a few more methods here now the one that I'm going to be interested in is this list method so that we can list specific channels and we can see the arguments that this list method takes so we need to pass in this part argument here which is basically the information that we want included in the response now look I know that we're probably sick of looking at documentation instead of actually writing some code here but I'm trying to give a realistic example of what it's like to actually learn how to work with these api's there's a lot of different information to track down so the last bit of information that we need right now is what we can actually pass in as an argument for this part parameter here and then we'll be able to make our first API request so to find this information I'm just going to open up the official API documentation so right now we're on the Google API for Python github documentation but I'm going to open up the official YouTube documentation now and I already have this open in the browser but if you google YouTube API then this will be the first result okay so to find more information about what we can pass in to that channels resource and what we can get back we're going to need to click on references up here and then we want to go down to this channels reference and remember I was wanting to list channels so we could either go to an overview to see an overview of this API route or I could go to list which is specifically the route that I'm looking for and then we can see that it gives us common use cases we can even take a look at some code here and they have some Python code examples here so they did a really good job of documenting all this now what I need is I need to scroll down to parameters to see what exactly we can pass in to this part which is a required parameter so right here we can see all the strings that we can pass in to this part parameter so let's say that I want the statistics of a certain Channel then I can just pass in statistics here as an argument so let me go back to our script and I'll try this out so I'm going to go back to our script here and now in order to do this I can create a request and then I'm going to use this YouTube service here and remember we saw those YouTube that YouTube resource earlier and all those instance methods that we had available and one of those was the channels instance method and within there we want to list the channels and now we need to pass in a couple of required parameters so first we need to pass in that part and I said that I was going to look up the statistics for a channel and finally how do we find our what channel we're actually getting statistics for so if I go back to the documentation one more time and look at our list method that we're using up here at the top we can see one here that is a four username so we could either pass in like a channel ID or we could pass in a channel username using the for username parameter so that's what I'm going to use so I'm going to just say for username and that was a capitalized do I believe in that documentation and now my channel username is actually Schaefer five okay so that should create a request to the YouTube API but now in order to get a response we're going to have to execute that request so I'll say request dot execute and now let's just print out our response here so if I save this and run it then we see that we did get a response here so if I look at this response then we can see that I get my that we had one total result and that it is a of kind of a YouTube channel gives me my channel ID and things like that I look down here at my video count it says 226 so that sounds about right for my channel so it does seem like our API connection is working so if we wanted to see stats for another YouTube channel then all we need to do is pass in their username here into this function now a username might be different than their display name on YouTube so for example my display name is Cory Schafer but my username is Schaefer 5 to find the username you'd actually have to go to their YouTube page and then look in the URL so for example let's say that I wanted to look up let's do some Texas channel so if I I think his username is probably syntax but let's go ahead and see if that is correct I'll save this and run it and we can see that yeah this is probably him because he has eight hundred and ninety thousand subscribers and he's definitely blowing me out of the water with the video count there he has over 1200 video so that's very impressive ok so now that we know that we have this API working here within Python now we can use this API to grab just about any public information that we'd want and that's what we're going to be doing in the next few videos so I'll show how we can use this API to do some really useful things that aren't directly available from within YouTube itself so for example in the next video we're gonna learn how to write a script that calculates the duration of videos in a specific playlist and I think this is extremely important information to know and I'm honestly surprised that Google hasn't added this information to the actual playlist data on the actual website so for example if you wanted to watch one of my playlists then you'd likely want to know how long that playlist is so that you can get an idea of how long it would take you to learn that certain topic but currently YouTube doesn't have that information directly on their site so I use scripts like this all the time when I'm trying to calculate information like this to make my life a little bit easier so definitely be sure to check out that next video when it's released if that sounds like something you'd be interested in ok so I think that is going to do it for this video hopefully now you have a pretty good idea for how you can get started with the YouTube API and accessing this information within Python but if anyone has any questions about what we covered in this video then feel free to ask in the comment section below and I'll do my best to answer those and if you enjoy these tutorials and would like to support them then there are several ways you can do that these these ways to simply LIKE the video and give it a thumbs up and also it's a huge help to share these videos with anyone who you think would find them useful and if you have the means you can contribute through patreon or YouTube and there are links to those pages and the description section below be sure to subscribe for future videos and thank you all for watching you
