With timestamps:

00:00 - hey there how's it going everybody in
00:01 - this video I'm gonna show you how I set
00:02 - up a new development machine from
00:04 - scratch now I just got a new MacBook and
00:06 - I haven't done anything to this yet so
00:09 - it's right out of the box so the only
00:11 - thing that I've done is go through the
00:12 - initial setup of creating a new user
00:14 - connecting to my home Wi-Fi so that I
00:17 - can access the Internet and also I
00:19 - installed the software to record this
00:21 - video but that's it I don't have any of
00:23 - my development software installed on
00:25 - here or any of my personal preferences
00:27 - setup so for those of you have watched
00:29 - my videos before you've probably seen
00:31 - that I have my terminal set up in a
00:33 - certain way I have my editor customized
00:35 - how I like it and I also just have a lot
00:38 - of other different applications that I
00:39 - like to use so in this video I'm going
00:42 - to show you how I use scripts to
00:43 - automate the installation and setup for
00:45 - a large portion of this process and
00:48 - that's going to cut down on the time all
00:50 - of this takes pretty significantly so I
00:52 - used to not have any scripts like this
00:54 - and any time I got a new machine it
00:57 - would take me an entire day's worth of
00:58 - work to install all of the software and
01:01 - change all the settings to get it set up
01:02 - the way that I like it so this should
01:04 - definitely be something that you have
01:06 - scripted out so that you know everything
01:08 - gets set up exactly how you like it in
01:10 - as little time as possible so that's
01:12 - what we're going to do in this video now
01:14 - this is going to be Mac specific since
01:16 - that's what I use as my main development
01:18 - machine but you can likely create some
01:21 - sort of automation scripts like this for
01:23 - whatever operating system that you use
01:25 - so with that said let's go ahead and get
01:27 - started so first of all I'm going to
01:29 - install homebrew so I released a video
01:31 - last week on how to use homebrew for the
01:34 - Mac and I won't go into the deep details
01:36 - on that here but basically it's a
01:38 - package manager for the Mac operating
01:40 - system and it's going to allow us to
01:42 - install a lot of software from the
01:44 - command line in this case we're actually
01:46 - going to install a lot of software from
01:48 - scripts so if anyone is interested in
01:51 - learning more about how to use homebrew
01:52 - then you can go and watch that video
01:54 - from last week now before we install
01:56 - homebrew and we're going to make a quick
01:58 - change to my terminal so that it looks a
02:01 - little more like how I usually have it
02:03 - and also make the font larger so you can
02:05 - see it better
02:06 - so I'm going to open up my terminal here
02:09 - and if you've seen my videos before then
02:13 - you can probably tell this looks a lot
02:14 - different than how my terminal was
02:16 - usually set up but that's alright my
02:18 - scripts will get all of this set up here
02:19 - soon but first let me tweak the
02:22 - preferences here just a little so that
02:24 - we can see this a bit better so I'm
02:26 - going to open up my terminal preferences
02:29 - here and I'm going to go to profiles
02:31 - down here to Pro and set that as the
02:35 - default so that we have a dark
02:36 - background I'm also going to change the
02:39 - font here and I'm going to change the
02:41 - font to a size of 30 and also I'm going
02:47 - to select this anti-alias text and for
02:50 - the background I think that the pro is a
02:53 - little bit too transparent so instead of
02:56 - that being 85% transparent I'm going to
02:58 - put it up in the 90s so I'll set that to
03:01 - 92 okay so now let me close that down
03:04 - and reopen it and now we can see that
03:08 - that looks a little better we've got a
03:10 - dark background here and the text is
03:12 - larger so that everyone can see that
03:15 - okay so now let's install homebrew so to
03:17 - do that I'm just going to open a browser
03:19 - here and go to home brews home page so
03:22 - that we can get this installed now I
03:24 - don't have any other browsers installed
03:25 - so I'm going to use Safari here and I'm
03:28 - just going to search for homebrew Mac
03:31 - and go to their home page and right at
03:35 - the top of their home page they have the
03:37 - command for how to install homebrew so
03:39 - this is a ruby command and we're going
03:41 - to run this within our terminal so I'm
03:43 - just going to copy that and then let me
03:46 - minimize the browser and I'm going to
03:48 - paste that into my terminal so now I'm
03:51 - going to run that and then says to hit
03:54 - enter to return and now we also need to
03:57 - put in our password so now that's going
03:59 - to install homebrew so I am going to
04:03 - pause the video and then pick this back
04:05 - up whenever that finishes okay so that
04:08 - homebrew installation was successful it
04:10 - says here now I should have said this as
04:12 - I was installing homebrew but you have
04:15 - to be an administrator on your machine
04:16 - to install some of these things now I'm
04:19 - the sole user on my new laptop so I'm
04:21 - already an administrator but if you're
04:22 - not an administrator then you need to be
04:24 - on your machine
04:25 - okay so now that we have homebrew
04:27 - installed now I'm going to pull down my
04:30 - automation scripts from my github page I
04:32 - put my scripts up on github so that I
04:34 - can pull them down on to any machine but
04:37 - first let me make sure that git is
04:38 - actually installed so that we can clone
04:40 - that repository so if I run git then it
04:44 - looks like it displays the git commands
04:46 - so that works well sometimes it will ask
04:48 - you to install the command line
04:50 - developer tools but I believe that
04:52 - installed those command line developer
04:53 - tools for us whenever we installed
04:55 - homebrew
04:56 - okay so git seems to be working so now
04:58 - I'm going to pull down everything that I
05:00 - use to automate my software
05:02 - installations and preferences now these
05:04 - are in a repository on my github called
05:06 - dot files now that repository name is a
05:09 - bit misleading because it started out as
05:11 - just a repository for my dot files and
05:13 - now it's a repository for a few
05:15 - additional scripts as well but that's no
05:18 - big deal
05:18 - so let me go to that repository I'm just
05:21 - going to open it up in the browser so
05:23 - I'm going to do a search here for Cori
05:26 - Schaefer github and that should take me
05:29 - to my github page okay so now within
05:33 - here I'm going to open my dot files
05:36 - repository and let me make the screen a
05:40 - little larger here so that you can see
05:42 - now I'm just going to click on this
05:45 - section here where it says clone or
05:47 - download and now I'm going to copy that
05:49 - URL that it says to clone the repository
05:52 - so now I will go back to my terminal and
05:57 - I'm just going to simply say git clone
06:00 - and I'm going to clone that repository
06:03 - right inside of my home directory so I
06:06 - am in my home directory and you should
06:08 - be too so I'm going to run that and now
06:12 - if I do an LS then we can see that we
06:15 - have a dot files directory here on or
06:18 - within my home folder so that created my
06:21 - dot files directory in my home folder
06:23 - and that dot files folder has all of my
06:25 - dot files and scripts that will automate
06:28 - a lot of this setup so let me give you a
06:30 - quick overview of these scripts and what
06:33 - they're going to do now a lot of these
06:34 - are bash scripts so let me go back to
06:37 - github to look at these scripts
06:39 - and this dot files directory so I'm
06:42 - going to open up my github here and this
06:46 - is the dot files repository that we just
06:49 - cloned and now we can take a look at
06:50 - some of these files so first I'm going
06:53 - to open this install dot Sh script here
06:56 - and if I scroll down to take a look at
06:59 - this let me walk through this script and
07:02 - again let me make this text just a
07:04 - little larger here so that everyone can
07:06 - see okay so at the very top we can see
07:08 - that this is a bass script and the
07:10 - comment here says this script creates
07:12 - symlinks from the home directory to any
07:15 - desired dot files in the home directory
07:17 - ford slash dot files and it also
07:20 - installs homebrew packages and sets
07:23 - sublime preferences so the first line
07:26 - here is basically just telling us how to
07:29 - use this script so we're going to say
07:30 - install dot SH and then point our home
07:34 - directory or pass in our home directory
07:36 - as an argument and if it doesn't then
07:38 - it'll just echo that out saying that
07:40 - that saying that we need to do that so
07:42 - we're going to set a couple of variables
07:44 - here our home directory is going to be
07:46 - equal to that first argument and then
07:48 - we're setting our dot file directory
07:50 - here to that home directory forward
07:52 - slash dot files and now we have a list
07:55 - of files and folders here and these are
07:58 - the dot files that I have within that
08:00 - dot files repository so we have bash
08:02 - profile bash RC bash prompt aliases and
08:06 - this one's private and now we CD into
08:11 - that dot files directory and then we
08:13 - create symlinks and it says here it will
08:15 - overwrite the old dot files we're
08:17 - creating symlinks for all of those dot
08:20 - files within that files list so we are
08:24 - echoing out that we're creating a
08:26 - symlink for these different files and
08:28 - here is where we're actually creating
08:30 - that symlink so this is the target dot
08:33 - file here and that is the file that is
08:36 - actually within our dot files repository
08:38 - and we're creating a symlink
08:40 - in our home directory called dot and
08:43 - then the file so dot bash RC dot bash
08:47 - underscore profile and so on so after
08:49 - that we are doing a little something
08:53 - extra
08:53 - we're downloading a get auto-completion
08:55 - script so that we have get auto
08:58 - completion within our terminal and then
09:00 - I'm running this homebrew script and
09:02 - then I'm running this sublime script so
09:05 - that is the installation script now let
09:08 - me go back here and we can take a look
09:10 - at some more of these files so now we
09:12 - could take a look at some of these dot
09:14 - files here so these dot files can figure
09:16 - a lot of what I like to have in my
09:18 - terminal so for example bash prompt that
09:21 - will change the colors of my username
09:24 - and show me what directory I'm in and
09:26 - things like that and I have a separate
09:28 - video going in-depth as to what some of
09:31 - these dot files are doing so I'll leave
09:33 - a link to that video in the description
09:34 - section below if anyone is interested to
09:37 - see more details about how this stuff
09:39 - works but in this video we're just going
09:41 - to focus more on finishing the setup of
09:43 - this machine so the alias is dot file
09:46 - here just has a bunch of aliases that I
09:48 - have while using my command line so for
09:52 - example let's see what one of these dot
09:53 - files look like I'm going to open up the
09:55 - aliases here and we can see that we just
09:57 - have a bunch of shortcuts so I have one
09:59 - here called CH that I use for commit
10:03 - history and what that'll do is just run
10:05 - the history command and then pipe in
10:07 - that output and search for get commits
10:11 - in the history so if I just type CH it's
10:14 - going to show me all the all my latest
10:15 - get commits hg is just history grep so
10:19 - if i want to search my history for
10:21 - something then i can just say you know
10:23 - if i wanted to look at the latest brew
10:25 - installed and i could just say hg brew
10:27 - and it'll show me all of the history
10:30 - commands that have brew in the command
10:32 - and just things like that that's
10:34 - basically what these dot files are doing
10:36 - so i'm going to go back here and the
10:39 - best profile is actually what gets run
10:40 - when you open up your terminal and
10:42 - within here it just sources all of the
10:45 - files so I say for file in bash prompt
10:49 - aliases private just source those files
10:52 - and it also does the get auto completion
10:54 - there as well so that is how those
10:57 - aliases and the prompt gets set from
11:00 - that bash profile so the dot file
11:02 - section of that install script that we
11:04 - saw just links all of those dot files in
11:06 - to my home phone
11:07 - so that all of that works now the
11:09 - applications for my machine are all
11:12 - going to get installed in this homebrew
11:14 - script and that's called Brutus H so let
11:17 - me take a look at that so if I scroll
11:20 - down here so we can see at the top here
11:22 - that I'm installing a couple of brew
11:24 - packages so we're installing Python by
11:26 - default Mac doesn't have Python 3
11:29 - installed and that's what brew will
11:30 - install here
11:31 - I'm also installing the tree command and
11:33 - those are the only command line
11:35 - applications that I'm installing for now
11:37 - now here are the Mac OS applications
11:40 - that I'm installing using brew cask and
11:43 - again if you don't know the difference
11:44 - between brew install and brew cask
11:46 - install then I would just recommend
11:48 - going going to watch that homebrew
11:50 - tutorial that I did a week ago but this
11:53 - is really what's gonna save me a lot of
11:55 - time here this is where we're installing
11:57 - all kinds of applications so I'm
11:59 - installing Chrome Firefox sublime text
12:01 - VirtualBox source tree Spotify discord
12:04 - my Google Drive backup and sync Skype
12:08 -  VLC hyper doc Divi hyper doc and
12:12 - Divi are applications that help you
12:14 - organize different applications on your
12:17 - desktop and then down here at the bottom
12:20 - I'm also installing the font that I like
12:22 - so I like this source code Pro font so I
12:25 - can install that using brew cask as well
12:28 - and I also had to tap tap a different
12:30 - repository here to install that ok so
12:33 - now I'm going to go back here now
12:35 - normally I would install more software
12:37 - in those scripts such as docker and
12:39 - ansible and things like that but I'm
12:41 - going to try to put a video on those
12:42 - subjects together in the near future so
12:45 - I want to show how to install those from
12:47 - scratch in those videos but you can add
12:49 - any additional software that you'd like
12:51 - to scripts like this ok and lastly if
12:53 - you remember in that install script I'm
12:56 - also running this sublime dot Sh script
12:59 - here at the bottom so let's take a look
13:02 - at that so I'm going to open that up and
13:03 - scroll down here a little bit and I'm
13:06 - doing a couple of things here so this
13:08 - downloads the package control package
13:11 - from their website and then it's putting
13:14 - it into my settings and it's calling it
13:17 - package control dot sublime package and
13:19 - then
13:21 - I am copying from those settings and
13:22 - putting those into we're sublime text
13:26 - has these installed on the operating
13:29 - system so it should be in this location
13:32 - here in my home folder for slash library
13:35 - forward slash applications support
13:38 - sublime text 3 and installed packages
13:41 - and these have spaces in here so these
13:43 - back spaces kind of make this look a
13:45 - little weird they'll really were just
13:46 - escaping those spaces there now this two
13:50 - forged slash def and all here at the end
13:52 - just means that we're ignoring any
13:54 - errors so if that directory doesn't
13:57 - exist then it's just going to ignore
13:59 - that and not display it to the screen I
14:01 - the reason I put that in is because
14:03 - maybe sublime text will change this
14:05 - install location at some point okay so
14:08 - I'm also installing my own custom
14:10 - sublime text settings here by copying
14:13 - from my settings directory and that's
14:15 - also in my dot files repository we'll
14:16 - take a look at that here in a second and
14:18 - these are my sublime settings and we're
14:21 - just putting those where sublime text
14:23 - expects those as well and also I'm
14:25 - creating some Python build systems here
14:28 - I'm creating one for Python 2 and Python
14:30 - 3 and I'm putting those where python or
14:33 - where sublime text expects those build
14:35 - systems and lastly I'm creating a sim
14:38 - link here to the su BL command so
14:41 - sublime text has an su BL command where
14:44 - you can use PI or use sublime text
14:47 - within the command line but they don't
14:49 - put it in your path automatically so
14:51 - that's what I'm doing here ok and just
14:54 - to show you one last thing here let me
14:56 - also show you what some of those
14:58 - settings look like so this is my
14:59 - settings folder here and we can see that
15:02 - I have some different things set up here
15:04 - so I have my sublime settings here my
15:07 - anaconda settings these are my build
15:09 - systems here and I also have my keyboard
15:12 - shortcuts here that I prefer as well now
15:15 - I don't think I had those keyboard
15:17 - shortcuts in that sublime script so that
15:20 - might be a mistake on my part so I'll
15:23 - have to actually add that in manually
15:25 - but after this video I'll probably add
15:27 - it to that sublime script so that that
15:29 - gets automated as well but I'm not going
15:30 - to worry about it for this video now one
15:33 - thing I haven't been able to get work
15:34 - in terms of automating sublime text is
15:36 - for my desire packages to get installed
15:39 - automatically so if I open up my sublime
15:43 - settings here I looked it up online and
15:46 - apparently if I have this setting set
15:49 - here these installed packages and have
15:51 - my preferred packages in here then
15:54 - whenever we start up sublime it should
15:56 - look at those and if they're not
15:58 - installed then it should install those
16:00 - automatically but I've never got that to
16:02 - work so if anyone from sublime sublime
16:04 - maintainer sees this video or if someone
16:06 - who knows what I'm doing wrong there
16:08 - then I'd be interested to know because
16:10 - it would be nice to automate that
16:11 - portion as well okay and lastly one more
16:15 - thing about these scripts here is that
16:18 - they need to be executable so mine were
16:21 - committed as executables so they
16:23 - shouldn't need to be changed but if
16:25 - you're creating scripts like this on
16:26 - your own then you could let me make this
16:30 - smaller and go back to the command line
16:32 - here let me CD in to dot files if I do
16:36 - an LS - la then these are executable
16:40 - here but if they weren't and you were
16:42 - creating your own then you could just do
16:44 - something like this
16:45 - chmod whoops chmod plus X and then the
16:50 - name of your script so that's how you
16:52 - make something executable okay so now
16:54 - let me actually run this installation
16:56 - script to set up this machine now I know
16:58 - I've been talking a good bit in this
17:00 - video to show you what these scripts are
17:02 - going to do but if you imagine this
17:04 - process without me explaining everything
17:06 - along the way then it actually goes
17:08 - extremely quickly to run these scripts
17:10 - and get this machine set up so let me
17:12 - run these scripts and get these
17:14 - installations started so I can do that
17:17 - by saying first let me get my home
17:20 - directory here so I'm going to do a PWD
17:22 - and just grab my home directory
17:25 - I'm not going to grab the dot files part
17:27 - because remember I need to pass in the
17:29 - home directory as an argument to that
17:31 - installation script so I'm going to say
17:33 - dot Forge slash install dot SH and then
17:37 - pass in that home directory so I'm going
17:40 - to run that and we can see that this
17:42 - starts downloading a few things here but
17:45 - I'm going to scroll up here to the top
17:46 - and it says changing to the
17:48 - the dot files directory and then it
17:51 - created those symlinks there and then it
17:55 - went out and started downloading a few
17:57 - things here so now we can see homebrew
17:59 - is installing a few different things so
18:01 - let me scroll down here to the bottom
18:04 - and so it's getting Python three seven
18:07 - at the moment okay so this script has a
18:10 - lot to do so I am going to pause this
18:14 - video and then pick this back up once
18:17 - it's finished okay so that script just
18:19 - completed and installed a lot of
18:21 - software and that took I believe that
18:24 - started at 3:37 and now it is 346 so in
18:29 - less than 10 minutes
18:31 - we installed a ton of different software
18:33 - and changed a lot of different settings
18:35 - on our machine now there was one
18:37 - installation in there that required me
18:39 - to enter a password so if you do
18:41 - something like this then you might have
18:42 - to watch for that so that it doesn't
18:44 - hold up your scripts okay so that's a
18:47 - lot less time than it would have taken
18:48 - to do all of that manually in just a few
18:51 - minutes we installed let me look back at
18:54 - the software here so we installed Python
18:56 - 3 Google Chrome Firefox sublime text
18:59 - VirtualBox source trees Spotify discord
19:02 - Google Drive Skype VLC different
19:07 - fonts and changed all kinds of different
19:09 - settings so a script like this can save
19:11 - you a ton of time so let's see what this
19:15 - did so first of all I'm going to shut
19:17 - down my terminal here and I'm going to
19:21 - open back up my terminal and we can see
19:25 - here that now my terminal looks more
19:26 - like it does in my normal videos because
19:29 - those dot files are now changing my
19:31 - preferences here to where I have the
19:34 - colors and settings that I like now this
19:36 - is still using this other font I'm
19:38 - hoping that my source code pro font was
19:41 - installed through that homebrew script
19:43 - so let's test that out if I go to
19:45 - preferences here and then try to change
19:48 - the font let's see if that font let me
19:54 - go to all fonts and see if source code
19:57 - Pro was installed and it was perfect ok
19:59 - so there it is got the source
20:02 - profond that i want and now that has
20:06 - changed now let's also look at our
20:07 - applications to make sure it looks like
20:10 - a lot of these applications were
20:11 - installed so we have backup and sync
20:14 - from Google that's the same as Google
20:16 - Drive the replacement we have discord
20:18 - Divi Firefox Google Chrome and all
20:22 - of those it looks like all of those were
20:24 - installed correctly so that's great okay
20:27 - so now let's see if some of those Google
20:30 - whoops let me see if some of those
20:33 - homebrew packages that I wanted to stall
20:35 - install actually got installed so by
20:38 - default Python 3 isn't installed on a
20:40 - new Mac but it should have been
20:42 - installed through homebrew since it was
20:43 - in my script so if I say python 3 then
20:47 - we can see that now I have Python 3 on
20:49 - this machine so that's great
20:51 - so also and installed some other
20:53 - commands that aren't available by
20:55 - default and one of those was the tree
20:57 - command so if I clear my screen here and
21:00 - I say tree I'm going to do a tree on
21:02 - that dot files directory if I run that
21:04 - then we can see that tree works as well
21:06 - and that now we have a nice tree
21:09 - directory structure of my dot Files
21:11 - directory here within my command line
21:13 - now I'm not going to go over every
21:15 - little thing that was installed but I
21:17 - would like to check sublime text and
21:18 - make sure that it was installed as well
21:20 - so our sublime script should have
21:23 - created a command line shortcut for us
21:26 - to open sublime with the SU BL command
21:29 - so I should be able to open the dot
21:33 - files directory within sublime simply by
21:35 - saying SUV L dot files so let's try that
21:39 - ok and it looks like that works as well
21:41 - so whenever you first install some
21:44 - applications it might ask you if you're
21:46 - sure you want to open it I'll just say
21:48 - open there and now we have sublime text
21:52 - opened up here and instead of making
21:54 - this full screen let me actually just in
21:57 - large this instead whoops let me just
22:02 - enlarge this here now like I was saying
22:04 - before sublime it should look at my
22:06 - settings and see that installed packages
22:08 - setting and go out and automatically
22:11 - install those packages but I've never
22:13 - actually got that to war
22:15 - so before I check if that worked let me
22:18 - instead just make sure that I have my
22:20 - settings file where it should be so if I
22:22 - go to settings okay it doesn't look like
22:24 - I have my sublime text settings here for
22:27 - some reason so let me check why this is
22:29 - if I go to browse packages here let me
22:32 - see where this is actually located on my
22:35 - machine so what I can do is drag this
22:38 - into my terminal okay so I'm actually
22:41 - not sure why that didn't work because it
22:43 - looks like that is the correct path that
22:46 - I would expect
22:48 - let me instead try to run that script
22:51 - manually because maybe it didn't work
22:54 - for some reason so I'm going to CD into
22:56 - my dot files and let me try to run that
22:59 - sublime @sh script manually so if I run
23:03 - that then let me go back to my sublime
23:07 - text here okay and it looks like that
23:10 - worked now so now I have all of my
23:12 - custom settings here let me restart
23:15 - sublime and see if it picks up any of
23:19 - those changes now sometimes these
23:21 - automation scripts I mean they can save
23:23 - you a ton of time but sometimes you run
23:26 - into things like this where you need to
23:28 - make some minor tweaks okay so let me
23:31 - close that down and I'm getting some
23:34 - errors here because it's saying that it
23:35 - can't find the installed packages so
23:38 - that is a problem that I've always had
23:41 - it before so we should at least have
23:44 - package control installed so we do and
23:46 - if I do that then we can try to install
23:50 - some of those packages manually so for
23:52 - example predawn is the theme and that's
23:56 - already looking a bit better and also if
23:59 - I install a package for the meat
24:04 - material theme let me install that and
24:08 - once that is installed then it should
24:12 - clear up some of this okay so now that
24:15 - that material theme is installed then
24:17 - this is looking a bit better here and we
24:19 - can see that this looks more like how I
24:22 - normally have it set up but there are
24:25 - some differences here so I'm going to
24:26 - have to go in and install all of my
24:28 - other package
24:29 - is manually because I've never been able
24:31 - to get those to install automatically so
24:34 - I'm going to close down sublime text
24:37 - there for a second now I'm still not
24:39 - sure why that sublime script didn't run
24:42 - if I look at my installed Sh script so
24:49 - we have sublime dot SH is that the same
24:53 - name yeah so I'm not sure why that
24:55 - didn't run at the end of our
24:56 - installation but for some reason it
24:58 - seems like it didn't so I'm gonna have
24:59 - to go back and take a look at that and
25:01 - see exactly why that didn't install
25:05 - correctly so let me exit that out for
25:09 - now and also quit my terminal here okay
25:11 - but basically that's how I go about
25:13 - setting up a new development machine so
25:16 - we can see that these scripts carried a
25:18 - lot of the weight for us and did a ton
25:20 - of work that would have taken us a long
25:21 - time to do manually and not only does it
25:24 - take a long time to do stuff like this
25:25 - manually but if you don't have it
25:27 - scripted out then it's also prone to
25:29 - mistakes so for example I could you know
25:32 - forget to install that sublime text
25:34 - shortcut with the su BL command and then
25:37 - a couple of days later just have to do
25:39 - that and go out and figure that out and
25:42 - then I could realize that one of my
25:44 - settings are off and that I need to fix
25:46 - that you know having it automated like
25:47 - this just takes a lot of the headache
25:49 - out of the equation now that's usually
25:52 - as much as I oughta mate I'm constantly
25:54 - adding to these scripts and settings and
25:56 - also making corrections so the fact that
25:59 - it didn't run that sublime script is
26:00 - something that I'm gonna need to go in
26:02 - and fix and once I have that fixed I'll
26:04 - upload it to my github so that next time
26:06 - it works properly but I don't actually
26:08 - try to automate every little process if
26:11 - I think that it's going to be too
26:12 - difficult there are some things that I
26:14 - do manually so for example I'm going to
26:17 - manually sign-in to the programs that I
26:19 - installed so I need to go and sign in to
26:22 - Chrome and my Google Drive I need to log
26:25 - in to Spotify and things like that I'm
26:28 - going to you know manually rearrange my
26:31 - dock down here at the bottom now one
26:33 - thing that I usually do there is just
26:34 - take a snapshot of my dock from my last
26:37 - development machine and put it into my
26:39 - Google Drive so that I know that I have
26:41 - it how I had it
26:43 - now I also have my preferred desktop
26:45 - background saved in my Google Drive as
26:47 - well so after I sign in to that backup
26:50 - and sync from Google and once those
26:53 - files are actually synced to this
26:54 - computer then I can go in and change my
26:56 - desktop background as well but all of
26:59 - that stuff is just really minor and
27:01 - doesn't take much time at all all of the
27:03 - big time-consuming items that I have
27:04 - scripted like all of the applications
27:07 - that we installed those go nice and
27:09 - quick
27:09 - like I was saying earlier before I had
27:12 - scripts like this it could really take
27:14 - me an entire day to get all of this
27:16 - software installed manually and set up
27:19 - all these preferences how I like them
27:20 - and now I've got that down to just a
27:22 - fraction of the time okay so I think
27:24 - that's gonna do it for this video
27:26 - hopefully you found this video
27:27 - interesting and learned a bit about how
27:29 - you can automate the setup of a new
27:31 - development machine even if you don't
27:33 - have as many personal preferences as I
27:35 - have even just using homebrew to install
27:37 - things like Chrome and the other
27:39 - applications that you use a lot will
27:41 - save you a lot of time but if anyone has
27:43 - any questions about what we covered in
27:45 - this video then feel free to ask in the
27:46 - comment section below and I'll do my
27:48 - best to answer those and if you enjoy
27:49 - these tutorials and would like to
27:50 - support them then there are several ways
27:52 - you can do that the easiest way is to
27:54 - simply like the video and give it a
27:55 - thumbs up and also it's a huge help to
27:57 - share these videos with anyone who you
27:58 - think would find them useful and if you
28:00 - have the means you can contribute
28:01 - through patreon and there's a link to
28:02 - that page in the description section
28:04 - below be sure to subscribe for future
28:06 - videos and thank you all for watching
28:18 - you

Cleaned transcript:

hey there how's it going everybody in this video I'm gonna show you how I set up a new development machine from scratch now I just got a new MacBook and I haven't done anything to this yet so it's right out of the box so the only thing that I've done is go through the initial setup of creating a new user connecting to my home WiFi so that I can access the Internet and also I installed the software to record this video but that's it I don't have any of my development software installed on here or any of my personal preferences setup so for those of you have watched my videos before you've probably seen that I have my terminal set up in a certain way I have my editor customized how I like it and I also just have a lot of other different applications that I like to use so in this video I'm going to show you how I use scripts to automate the installation and setup for a large portion of this process and that's going to cut down on the time all of this takes pretty significantly so I used to not have any scripts like this and any time I got a new machine it would take me an entire day's worth of work to install all of the software and change all the settings to get it set up the way that I like it so this should definitely be something that you have scripted out so that you know everything gets set up exactly how you like it in as little time as possible so that's what we're going to do in this video now this is going to be Mac specific since that's what I use as my main development machine but you can likely create some sort of automation scripts like this for whatever operating system that you use so with that said let's go ahead and get started so first of all I'm going to install homebrew so I released a video last week on how to use homebrew for the Mac and I won't go into the deep details on that here but basically it's a package manager for the Mac operating system and it's going to allow us to install a lot of software from the command line in this case we're actually going to install a lot of software from scripts so if anyone is interested in learning more about how to use homebrew then you can go and watch that video from last week now before we install homebrew and we're going to make a quick change to my terminal so that it looks a little more like how I usually have it and also make the font larger so you can see it better so I'm going to open up my terminal here and if you've seen my videos before then you can probably tell this looks a lot different than how my terminal was usually set up but that's alright my scripts will get all of this set up here soon but first let me tweak the preferences here just a little so that we can see this a bit better so I'm going to open up my terminal preferences here and I'm going to go to profiles down here to Pro and set that as the default so that we have a dark background I'm also going to change the font here and I'm going to change the font to a size of 30 and also I'm going to select this antialias text and for the background I think that the pro is a little bit too transparent so instead of that being 85% transparent I'm going to put it up in the 90s so I'll set that to 92 okay so now let me close that down and reopen it and now we can see that that looks a little better we've got a dark background here and the text is larger so that everyone can see that okay so now let's install homebrew so to do that I'm just going to open a browser here and go to home brews home page so that we can get this installed now I don't have any other browsers installed so I'm going to use Safari here and I'm just going to search for homebrew Mac and go to their home page and right at the top of their home page they have the command for how to install homebrew so this is a ruby command and we're going to run this within our terminal so I'm just going to copy that and then let me minimize the browser and I'm going to paste that into my terminal so now I'm going to run that and then says to hit enter to return and now we also need to put in our password so now that's going to install homebrew so I am going to pause the video and then pick this back up whenever that finishes okay so that homebrew installation was successful it says here now I should have said this as I was installing homebrew but you have to be an administrator on your machine to install some of these things now I'm the sole user on my new laptop so I'm already an administrator but if you're not an administrator then you need to be on your machine okay so now that we have homebrew installed now I'm going to pull down my automation scripts from my github page I put my scripts up on github so that I can pull them down on to any machine but first let me make sure that git is actually installed so that we can clone that repository so if I run git then it looks like it displays the git commands so that works well sometimes it will ask you to install the command line developer tools but I believe that installed those command line developer tools for us whenever we installed homebrew okay so git seems to be working so now I'm going to pull down everything that I use to automate my software installations and preferences now these are in a repository on my github called dot files now that repository name is a bit misleading because it started out as just a repository for my dot files and now it's a repository for a few additional scripts as well but that's no big deal so let me go to that repository I'm just going to open it up in the browser so I'm going to do a search here for Cori Schaefer github and that should take me to my github page okay so now within here I'm going to open my dot files repository and let me make the screen a little larger here so that you can see now I'm just going to click on this section here where it says clone or download and now I'm going to copy that URL that it says to clone the repository so now I will go back to my terminal and I'm just going to simply say git clone and I'm going to clone that repository right inside of my home directory so I am in my home directory and you should be too so I'm going to run that and now if I do an LS then we can see that we have a dot files directory here on or within my home folder so that created my dot files directory in my home folder and that dot files folder has all of my dot files and scripts that will automate a lot of this setup so let me give you a quick overview of these scripts and what they're going to do now a lot of these are bash scripts so let me go back to github to look at these scripts and this dot files directory so I'm going to open up my github here and this is the dot files repository that we just cloned and now we can take a look at some of these files so first I'm going to open this install dot Sh script here and if I scroll down to take a look at this let me walk through this script and again let me make this text just a little larger here so that everyone can see okay so at the very top we can see that this is a bass script and the comment here says this script creates symlinks from the home directory to any desired dot files in the home directory ford slash dot files and it also installs homebrew packages and sets sublime preferences so the first line here is basically just telling us how to use this script so we're going to say install dot SH and then point our home directory or pass in our home directory as an argument and if it doesn't then it'll just echo that out saying that that saying that we need to do that so we're going to set a couple of variables here our home directory is going to be equal to that first argument and then we're setting our dot file directory here to that home directory forward slash dot files and now we have a list of files and folders here and these are the dot files that I have within that dot files repository so we have bash profile bash RC bash prompt aliases and this one's private and now we CD into that dot files directory and then we create symlinks and it says here it will overwrite the old dot files we're creating symlinks for all of those dot files within that files list so we are echoing out that we're creating a symlink for these different files and here is where we're actually creating that symlink so this is the target dot file here and that is the file that is actually within our dot files repository and we're creating a symlink in our home directory called dot and then the file so dot bash RC dot bash underscore profile and so on so after that we are doing a little something extra we're downloading a get autocompletion script so that we have get auto completion within our terminal and then I'm running this homebrew script and then I'm running this sublime script so that is the installation script now let me go back here and we can take a look at some more of these files so now we could take a look at some of these dot files here so these dot files can figure a lot of what I like to have in my terminal so for example bash prompt that will change the colors of my username and show me what directory I'm in and things like that and I have a separate video going indepth as to what some of these dot files are doing so I'll leave a link to that video in the description section below if anyone is interested to see more details about how this stuff works but in this video we're just going to focus more on finishing the setup of this machine so the alias is dot file here just has a bunch of aliases that I have while using my command line so for example let's see what one of these dot files look like I'm going to open up the aliases here and we can see that we just have a bunch of shortcuts so I have one here called CH that I use for commit history and what that'll do is just run the history command and then pipe in that output and search for get commits in the history so if I just type CH it's going to show me all the all my latest get commits hg is just history grep so if i want to search my history for something then i can just say you know if i wanted to look at the latest brew installed and i could just say hg brew and it'll show me all of the history commands that have brew in the command and just things like that that's basically what these dot files are doing so i'm going to go back here and the best profile is actually what gets run when you open up your terminal and within here it just sources all of the files so I say for file in bash prompt aliases private just source those files and it also does the get auto completion there as well so that is how those aliases and the prompt gets set from that bash profile so the dot file section of that install script that we saw just links all of those dot files in to my home phone so that all of that works now the applications for my machine are all going to get installed in this homebrew script and that's called Brutus H so let me take a look at that so if I scroll down here so we can see at the top here that I'm installing a couple of brew packages so we're installing Python by default Mac doesn't have Python 3 installed and that's what brew will install here I'm also installing the tree command and those are the only command line applications that I'm installing for now now here are the Mac OS applications that I'm installing using brew cask and again if you don't know the difference between brew install and brew cask install then I would just recommend going going to watch that homebrew tutorial that I did a week ago but this is really what's gonna save me a lot of time here this is where we're installing all kinds of applications so I'm installing Chrome Firefox sublime text VirtualBox source tree Spotify discord my Google Drive backup and sync Skype VLC hyper doc Divi hyper doc and Divi are applications that help you organize different applications on your desktop and then down here at the bottom I'm also installing the font that I like so I like this source code Pro font so I can install that using brew cask as well and I also had to tap tap a different repository here to install that ok so now I'm going to go back here now normally I would install more software in those scripts such as docker and ansible and things like that but I'm going to try to put a video on those subjects together in the near future so I want to show how to install those from scratch in those videos but you can add any additional software that you'd like to scripts like this ok and lastly if you remember in that install script I'm also running this sublime dot Sh script here at the bottom so let's take a look at that so I'm going to open that up and scroll down here a little bit and I'm doing a couple of things here so this downloads the package control package from their website and then it's putting it into my settings and it's calling it package control dot sublime package and then I am copying from those settings and putting those into we're sublime text has these installed on the operating system so it should be in this location here in my home folder for slash library forward slash applications support sublime text 3 and installed packages and these have spaces in here so these back spaces kind of make this look a little weird they'll really were just escaping those spaces there now this two forged slash def and all here at the end just means that we're ignoring any errors so if that directory doesn't exist then it's just going to ignore that and not display it to the screen I the reason I put that in is because maybe sublime text will change this install location at some point okay so I'm also installing my own custom sublime text settings here by copying from my settings directory and that's also in my dot files repository we'll take a look at that here in a second and these are my sublime settings and we're just putting those where sublime text expects those as well and also I'm creating some Python build systems here I'm creating one for Python 2 and Python 3 and I'm putting those where python or where sublime text expects those build systems and lastly I'm creating a sim link here to the su BL command so sublime text has an su BL command where you can use PI or use sublime text within the command line but they don't put it in your path automatically so that's what I'm doing here ok and just to show you one last thing here let me also show you what some of those settings look like so this is my settings folder here and we can see that I have some different things set up here so I have my sublime settings here my anaconda settings these are my build systems here and I also have my keyboard shortcuts here that I prefer as well now I don't think I had those keyboard shortcuts in that sublime script so that might be a mistake on my part so I'll have to actually add that in manually but after this video I'll probably add it to that sublime script so that that gets automated as well but I'm not going to worry about it for this video now one thing I haven't been able to get work in terms of automating sublime text is for my desire packages to get installed automatically so if I open up my sublime settings here I looked it up online and apparently if I have this setting set here these installed packages and have my preferred packages in here then whenever we start up sublime it should look at those and if they're not installed then it should install those automatically but I've never got that to work so if anyone from sublime sublime maintainer sees this video or if someone who knows what I'm doing wrong there then I'd be interested to know because it would be nice to automate that portion as well okay and lastly one more thing about these scripts here is that they need to be executable so mine were committed as executables so they shouldn't need to be changed but if you're creating scripts like this on your own then you could let me make this smaller and go back to the command line here let me CD in to dot files if I do an LS la then these are executable here but if they weren't and you were creating your own then you could just do something like this chmod whoops chmod plus X and then the name of your script so that's how you make something executable okay so now let me actually run this installation script to set up this machine now I know I've been talking a good bit in this video to show you what these scripts are going to do but if you imagine this process without me explaining everything along the way then it actually goes extremely quickly to run these scripts and get this machine set up so let me run these scripts and get these installations started so I can do that by saying first let me get my home directory here so I'm going to do a PWD and just grab my home directory I'm not going to grab the dot files part because remember I need to pass in the home directory as an argument to that installation script so I'm going to say dot Forge slash install dot SH and then pass in that home directory so I'm going to run that and we can see that this starts downloading a few things here but I'm going to scroll up here to the top and it says changing to the the dot files directory and then it created those symlinks there and then it went out and started downloading a few things here so now we can see homebrew is installing a few different things so let me scroll down here to the bottom and so it's getting Python three seven at the moment okay so this script has a lot to do so I am going to pause this video and then pick this back up once it's finished okay so that script just completed and installed a lot of software and that took I believe that started at 337 and now it is 346 so in less than 10 minutes we installed a ton of different software and changed a lot of different settings on our machine now there was one installation in there that required me to enter a password so if you do something like this then you might have to watch for that so that it doesn't hold up your scripts okay so that's a lot less time than it would have taken to do all of that manually in just a few minutes we installed let me look back at the software here so we installed Python 3 Google Chrome Firefox sublime text VirtualBox source trees Spotify discord Google Drive Skype VLC different fonts and changed all kinds of different settings so a script like this can save you a ton of time so let's see what this did so first of all I'm going to shut down my terminal here and I'm going to open back up my terminal and we can see here that now my terminal looks more like it does in my normal videos because those dot files are now changing my preferences here to where I have the colors and settings that I like now this is still using this other font I'm hoping that my source code pro font was installed through that homebrew script so let's test that out if I go to preferences here and then try to change the font let's see if that font let me go to all fonts and see if source code Pro was installed and it was perfect ok so there it is got the source profond that i want and now that has changed now let's also look at our applications to make sure it looks like a lot of these applications were installed so we have backup and sync from Google that's the same as Google Drive the replacement we have discord Divi Firefox Google Chrome and all of those it looks like all of those were installed correctly so that's great okay so now let's see if some of those Google whoops let me see if some of those homebrew packages that I wanted to stall install actually got installed so by default Python 3 isn't installed on a new Mac but it should have been installed through homebrew since it was in my script so if I say python 3 then we can see that now I have Python 3 on this machine so that's great so also and installed some other commands that aren't available by default and one of those was the tree command so if I clear my screen here and I say tree I'm going to do a tree on that dot files directory if I run that then we can see that tree works as well and that now we have a nice tree directory structure of my dot Files directory here within my command line now I'm not going to go over every little thing that was installed but I would like to check sublime text and make sure that it was installed as well so our sublime script should have created a command line shortcut for us to open sublime with the SU BL command so I should be able to open the dot files directory within sublime simply by saying SUV L dot files so let's try that ok and it looks like that works as well so whenever you first install some applications it might ask you if you're sure you want to open it I'll just say open there and now we have sublime text opened up here and instead of making this full screen let me actually just in large this instead whoops let me just enlarge this here now like I was saying before sublime it should look at my settings and see that installed packages setting and go out and automatically install those packages but I've never actually got that to war so before I check if that worked let me instead just make sure that I have my settings file where it should be so if I go to settings okay it doesn't look like I have my sublime text settings here for some reason so let me check why this is if I go to browse packages here let me see where this is actually located on my machine so what I can do is drag this into my terminal okay so I'm actually not sure why that didn't work because it looks like that is the correct path that I would expect let me instead try to run that script manually because maybe it didn't work for some reason so I'm going to CD into my dot files and let me try to run that sublime @sh script manually so if I run that then let me go back to my sublime text here okay and it looks like that worked now so now I have all of my custom settings here let me restart sublime and see if it picks up any of those changes now sometimes these automation scripts I mean they can save you a ton of time but sometimes you run into things like this where you need to make some minor tweaks okay so let me close that down and I'm getting some errors here because it's saying that it can't find the installed packages so that is a problem that I've always had it before so we should at least have package control installed so we do and if I do that then we can try to install some of those packages manually so for example predawn is the theme and that's already looking a bit better and also if I install a package for the meat material theme let me install that and once that is installed then it should clear up some of this okay so now that that material theme is installed then this is looking a bit better here and we can see that this looks more like how I normally have it set up but there are some differences here so I'm going to have to go in and install all of my other package is manually because I've never been able to get those to install automatically so I'm going to close down sublime text there for a second now I'm still not sure why that sublime script didn't run if I look at my installed Sh script so we have sublime dot SH is that the same name yeah so I'm not sure why that didn't run at the end of our installation but for some reason it seems like it didn't so I'm gonna have to go back and take a look at that and see exactly why that didn't install correctly so let me exit that out for now and also quit my terminal here okay but basically that's how I go about setting up a new development machine so we can see that these scripts carried a lot of the weight for us and did a ton of work that would have taken us a long time to do manually and not only does it take a long time to do stuff like this manually but if you don't have it scripted out then it's also prone to mistakes so for example I could you know forget to install that sublime text shortcut with the su BL command and then a couple of days later just have to do that and go out and figure that out and then I could realize that one of my settings are off and that I need to fix that you know having it automated like this just takes a lot of the headache out of the equation now that's usually as much as I oughta mate I'm constantly adding to these scripts and settings and also making corrections so the fact that it didn't run that sublime script is something that I'm gonna need to go in and fix and once I have that fixed I'll upload it to my github so that next time it works properly but I don't actually try to automate every little process if I think that it's going to be too difficult there are some things that I do manually so for example I'm going to manually signin to the programs that I installed so I need to go and sign in to Chrome and my Google Drive I need to log in to Spotify and things like that I'm going to you know manually rearrange my dock down here at the bottom now one thing that I usually do there is just take a snapshot of my dock from my last development machine and put it into my Google Drive so that I know that I have it how I had it now I also have my preferred desktop background saved in my Google Drive as well so after I sign in to that backup and sync from Google and once those files are actually synced to this computer then I can go in and change my desktop background as well but all of that stuff is just really minor and doesn't take much time at all all of the big timeconsuming items that I have scripted like all of the applications that we installed those go nice and quick like I was saying earlier before I had scripts like this it could really take me an entire day to get all of this software installed manually and set up all these preferences how I like them and now I've got that down to just a fraction of the time okay so I think that's gonna do it for this video hopefully you found this video interesting and learned a bit about how you can automate the setup of a new development machine even if you don't have as many personal preferences as I have even just using homebrew to install things like Chrome and the other applications that you use a lot will save you a lot of time but if anyone has any questions about what we covered in this video then feel free to ask in the comment section below and I'll do my best to answer those and if you enjoy these tutorials and would like to support them then there are several ways you can do that the easiest way is to simply like the video and give it a thumbs up and also it's a huge help to share these videos with anyone who you think would find them useful and if you have the means you can contribute through patreon and there's a link to that page in the description section below be sure to subscribe for future videos and thank you all for watching you
