With timestamps:

00:00 - hey guys how's it going in this video
00:02 - we're going to be taking a look at how
00:03 - to understand binary and heximal numbers
00:07 - I think the best way to understand how
00:09 - binary and heximal uh numbers work is to
00:13 - First understand how our base 10 system
00:16 - works that we use on a daily basis and
00:18 - whenever I say base 10 I mean that if I
00:21 - was to write out 1 2 3 4 then you can
00:25 - look at that number and you know that
00:26 - it's
00:28 - 1,234
00:30 - um but let's look at why that is and how
00:34 - we get that number um so if we look at
00:38 - this we know that the four is in the
00:39 - ones place there's a three in the T
00:41 - place two in the hundreds and a one in
00:43 - the thousands so if I write this out to
00:49 - where you can see that the four is in
00:51 - the ones place three in the 10 two in
00:54 - the 100 one in the
00:55 - Thousand so to get our result down here
00:59 - of
01:01 - 1,234 what's really happening is we are
01:04 - taking the value that's in the
01:06 - thousand's position here and we're
01:08 - multiplying it by a th so let
01:13 - me erase that so we have 1 * a th000
01:18 - which is a
01:20 - th000 and then we're adding that to the
01:23 - next position which is the hundred's
01:24 - position and the value in that position
01:27 - is 2 so 2 * 100 is 200
01:32 - and then we move on to the next position
01:33 - 10 3 * 10 is
01:37 - 30 and then down to the ones position 4
01:41 - * 1 is
01:43 - 4 and when we add all those up we get
01:48 - 1,234 now this might seem
01:50 - self-explanatory to you guys because the
01:52 - base 10 system is what we use on a daily
01:54 - basis uh but let me show you how it
01:56 - relates to understanding binary and
01:58 - heximal um
02:00 - so our positions here the thousands
02:02 - position the hundreds position the 10
02:04 - and the one they can actually be
02:07 - Rewritten um to make these shorter
02:10 - because if we were to you know expand
02:12 - this out to the millions position then
02:14 - that'd be a lot of zeros to write in
02:15 - there um so we can actually rewrite that
02:18 - using exponents and let me copy this and
02:22 - paste this up
02:24 - here okay so now these are the exact
02:28 - same values but using exponents instead
02:30 - so 10 to the zeroth power is 1 10 to the
02:34 - 1 power is 10 10 to the second power
02:37 - which is 10 2ar or 10 * 10 is 100 and 10
02:42 - the 3 power 10 * 10 * 10 is
02:46 - 1,000 and so now we could calculate this
02:48 - just the same way that we did before
02:50 - this would be 1 * 10 3r + 2 * 10 2 + 3 *
02:56 - 10 1st + 4 * 10 10 the 0o um so the
03:02 - reason that this is called base 10 is
03:05 - because if you look um at the base of
03:09 - the exponents uh there's a 10 here so um
03:14 - that's how it relates to Binary and hex
03:16 - aimal is uh whenever we do binary we
03:19 - just switch out this base 10 for a base
03:22 - two um so let me go down here and grab
03:26 - these so you can understand this a
03:29 - little bit better here let me paste
03:30 - these
03:32 - in
03:35 - okay and then two to the zeroth power is
03:38 - still one two to the first power is two
03:43 - two to the second power is 2 * 2 which
03:46 - is four 2 to the 3 power 2 * 2 * 2 is
03:51 - 8 okay and so let's go ahead and look at
03:55 - a binary number here let's do 10 10 and
03:59 - then let me me fill in these spots here
04:01 - 1 0 1
04:04 - 0 and now we just calculate this the
04:07 - exact same way that we calculated uh our
04:12 - uh base 10 number we do one * 10 3 which
04:17 - is equal to 8 so we have 8 plus and now
04:21 - this is a zero here so no matter what we
04:23 - multiply this with it's going to be zero
04:25 - so 8 + 0 plus 1 time 2 to the 1st which
04:32 - is 2 so 8 +
04:35 - 2 which is 10 and then 10 + 0 um is zero
04:41 - so this 10 10 in decimal or base 10 is
04:47 - equal to 10 okay and let's do one more
04:50 - quick example here uh this time let's do
04:53 - 1 one one one and let me fill these
04:58 - in okay so now when we calculate this
05:00 - out it is 1 * 2 3r which is 8 + 1 * 2 2
05:08 - which is 4 1 uh + 1 * 2 the 1st which is
05:12 - 2 + 1 * 2 to the zeroth power which is 1
05:18 - so we have 8 + 4 + 2 + 1 so 1 1 1 1 in
05:26 - decimal see that' be 12 14
05:31 - 15 now once you understand how to do
05:33 - these calculations then you can plug in
05:36 - any number here for your base so for
05:38 - example heximal is base 16 um what's
05:43 - confusing about heximal and what trips
05:45 - people up whenever they're looking at it
05:46 - for the first time is that uh base 16 uh
05:51 - how do you represent 16 numbers using
05:54 - only a single digit um because we only
05:58 - have 0 through 9 and what they do is
06:01 - they carry over into the alphabet so for
06:04 - example here if I had eight 9 and then
06:09 - instead of starting back at zero uh in
06:12 - heximal it carries over to a which is 10
06:15 - B 11 C 12 D 13 e 14 f is 15 and then it
06:23 - carries back over to zero because it's
06:25 - base 16 so then it goes to zero um so
06:29 - let's take take a look at this how we
06:30 - would calculate um a heximal value so
06:34 - let me copy
06:36 - this so now we're using base 16 instead
06:40 - and now these values here I already got
06:44 - them copied out
06:48 - here okay so 16 to the zeroth power is 1
06:53 - 16 to the 1 power is 16 16 squar is 256
06:58 - and 16 * 16 * 16 is
07:03 - 4096 and let's go ahead and work through
07:05 - an example so we can see what this is
07:06 - like so say we had a heximal value that
07:10 - was B
07:12 - a55 so let's go ahead and write this out
07:15 - up here
07:16 - b a
07:19 - 55 okay so now to start off we have B
07:25 - which if you remember a was 10 B is 11
07:29 - so B which is 11 * 16 3r which is
07:34 - 4096
07:37 - so 11 *
07:42 - 496 plus a which is 10 * 16 sared which
07:48 - is 256 so
07:51 - 10 *
07:55 - 256
07:57 - plus 5 * 16 to the 1st which is 16
08:03 - so 5 * 16 and then plus 5 * 16 to the
08:11 - zeroth power which is 1 so 5 * 1 which
08:14 - is 5
08:16 - so + 5 =
08:21 - 47701 so just to make sure that we got
08:24 - that right let's go to our programming
08:28 - calculator and and let's go to base 16
08:30 - here we'll type in ba
08:33 - a55 and then we will switch back over to
08:36 - our
08:37 - decimal and it gives us
08:40 - 47701 so uh so that was
08:44 - right so by now you should be able to
08:46 - convert pretty much any number from B
08:49 - from binary or hexad decimal over into
08:52 - uh base 10 um one that uh one example
08:56 - that you might see a lot is whenever you
08:58 - see uh RGB color values online um so say
09:03 - for example here um if you have the
09:06 - color white that is FF FF FF and this is
09:13 - calculated these first two values here
09:16 - are the red value uh the second two
09:18 - values here are the green value and the
09:21 - last two values are the blue value um
09:25 - so if you were to convert these over
09:27 - into uh base 10
09:31 - then it would just look
09:34 - like this here
09:37 - so we have F which is 15 so 15 * 16 to
09:44 - the 1 power which is 16 so 15 * 16 equal
09:52 - 240 and then F which is 15 * 1 which is
09:58 - 15 15 so 240 + 15 = 255 so a white RGB
10:06 - color value is
10:09 - actually 255 255
10:13 - 255 um so hopefully this tutorial was
10:16 - useful for you guys uh hopefully you're
10:19 - now able to convert values from uh
10:22 - binary or hex decimal or base eight uh
10:25 - whatever Base number it is hopefully now
10:27 - you feel comfortable um converting that
10:30 - number into base 10 and you understand
10:33 - how all these uh calculations work but
10:35 - if you guys do have any questions you
10:37 - know feel free to ask in the comments uh
10:39 - be sure to subscribe for uh future
10:41 - videos and thanks for watching

Cleaned transcript:

hey guys how's it going in this video we're going to be taking a look at how to understand binary and heximal numbers I think the best way to understand how binary and heximal uh numbers work is to First understand how our base 10 system works that we use on a daily basis and whenever I say base 10 I mean that if I was to write out 1 2 3 4 then you can look at that number and you know that it's 1,234 um but let's look at why that is and how we get that number um so if we look at this we know that the four is in the ones place there's a three in the T place two in the hundreds and a one in the thousands so if I write this out to where you can see that the four is in the ones place three in the 10 two in the 100 one in the Thousand so to get our result down here of 1,234 what's really happening is we are taking the value that's in the thousand's position here and we're multiplying it by a th so let me erase that so we have 1 * a th000 which is a th000 and then we're adding that to the next position which is the hundred's position and the value in that position is 2 so 2 * 100 is 200 and then we move on to the next position 10 3 * 10 is 30 and then down to the ones position 4 * 1 is 4 and when we add all those up we get 1,234 now this might seem selfexplanatory to you guys because the base 10 system is what we use on a daily basis uh but let me show you how it relates to understanding binary and heximal um so our positions here the thousands position the hundreds position the 10 and the one they can actually be Rewritten um to make these shorter because if we were to you know expand this out to the millions position then that'd be a lot of zeros to write in there um so we can actually rewrite that using exponents and let me copy this and paste this up here okay so now these are the exact same values but using exponents instead so 10 to the zeroth power is 1 10 to the 1 power is 10 10 to the second power which is 10 2ar or 10 * 10 is 100 and 10 the 3 power 10 * 10 * 10 is 1,000 and so now we could calculate this just the same way that we did before this would be 1 * 10 3r + 2 * 10 2 + 3 * 10 1st + 4 * 10 10 the 0o um so the reason that this is called base 10 is because if you look um at the base of the exponents uh there's a 10 here so um that's how it relates to Binary and hex aimal is uh whenever we do binary we just switch out this base 10 for a base two um so let me go down here and grab these so you can understand this a little bit better here let me paste these in okay and then two to the zeroth power is still one two to the first power is two two to the second power is 2 * 2 which is four 2 to the 3 power 2 * 2 * 2 is 8 okay and so let's go ahead and look at a binary number here let's do 10 10 and then let me me fill in these spots here 1 0 1 0 and now we just calculate this the exact same way that we calculated uh our uh base 10 number we do one * 10 3 which is equal to 8 so we have 8 plus and now this is a zero here so no matter what we multiply this with it's going to be zero so 8 + 0 plus 1 time 2 to the 1st which is 2 so 8 + 2 which is 10 and then 10 + 0 um is zero so this 10 10 in decimal or base 10 is equal to 10 okay and let's do one more quick example here uh this time let's do 1 one one one and let me fill these in okay so now when we calculate this out it is 1 * 2 3r which is 8 + 1 * 2 2 which is 4 1 uh + 1 * 2 the 1st which is 2 + 1 * 2 to the zeroth power which is 1 so we have 8 + 4 + 2 + 1 so 1 1 1 1 in decimal see that' be 12 14 15 now once you understand how to do these calculations then you can plug in any number here for your base so for example heximal is base 16 um what's confusing about heximal and what trips people up whenever they're looking at it for the first time is that uh base 16 uh how do you represent 16 numbers using only a single digit um because we only have 0 through 9 and what they do is they carry over into the alphabet so for example here if I had eight 9 and then instead of starting back at zero uh in heximal it carries over to a which is 10 B 11 C 12 D 13 e 14 f is 15 and then it carries back over to zero because it's base 16 so then it goes to zero um so let's take take a look at this how we would calculate um a heximal value so let me copy this so now we're using base 16 instead and now these values here I already got them copied out here okay so 16 to the zeroth power is 1 16 to the 1 power is 16 16 squar is 256 and 16 * 16 * 16 is 4096 and let's go ahead and work through an example so we can see what this is like so say we had a heximal value that was B a55 so let's go ahead and write this out up here b a 55 okay so now to start off we have B which if you remember a was 10 B is 11 so B which is 11 * 16 3r which is 4096 so 11 * 496 plus a which is 10 * 16 sared which is 256 so 10 * 256 plus 5 * 16 to the 1st which is 16 so 5 * 16 and then plus 5 * 16 to the zeroth power which is 1 so 5 * 1 which is 5 so + 5 = 47701 so just to make sure that we got that right let's go to our programming calculator and and let's go to base 16 here we'll type in ba a55 and then we will switch back over to our decimal and it gives us 47701 so uh so that was right so by now you should be able to convert pretty much any number from B from binary or hexad decimal over into uh base 10 um one that uh one example that you might see a lot is whenever you see uh RGB color values online um so say for example here um if you have the color white that is FF FF FF and this is calculated these first two values here are the red value uh the second two values here are the green value and the last two values are the blue value um so if you were to convert these over into uh base 10 then it would just look like this here so we have F which is 15 so 15 * 16 to the 1 power which is 16 so 15 * 16 equal 240 and then F which is 15 * 1 which is 15 15 so 240 + 15 = 255 so a white RGB color value is actually 255 255 255 um so hopefully this tutorial was useful for you guys uh hopefully you're now able to convert values from uh binary or hex decimal or base eight uh whatever Base number it is hopefully now you feel comfortable um converting that number into base 10 and you understand how all these uh calculations work but if you guys do have any questions you know feel free to ask in the comments uh be sure to subscribe for uh future videos and thanks for watching
