With timestamps:

00:00 - hey there how's it going everybody in
00:01 - this video we're gonna take a quick look
00:03 - at the random module and how we can use
00:04 - this to get some random data so I use
00:06 - this a lot to create dummy data that I
00:08 - use within my videos so I figured I'd
00:10 - make a short video showing how you can
00:12 - use this to do something similar so
00:13 - we'll be taking a look at how to create
00:15 - random numbers and grabbing random
00:18 - values from a list of values and things
00:20 - like that now one thing that I want to
00:21 - mention before we get started is that
00:23 - this shouldn't be used for security
00:24 - purposes or cryptography and Python
00:27 - mentions this in their documentation and
00:29 - suggests using the secrets module
00:31 - instead if that's what you're trying to
00:32 - do but for most cases the random module
00:34 - works great so if you just want to
00:36 - generate some random data or have a game
00:38 - where you need some random values or
00:40 - shuffle some values or something like
00:42 - that then this is perfect for those
00:44 - types of things so with that said let's
00:46 - go ahead and get started
00:47 - so first to use the random module we're
00:48 - gonna need to import it and this is
00:50 - included in the standard library so you
00:52 - don't have to install any third-party
00:54 - packages so you can just say import
00:56 - random now the first two methods that
00:58 - are usually covered are the random and
01:00 - uniform methods now I hardly ever use
01:02 - these myself but let's take a quick look
01:04 - at these just to see what they do so we
01:06 - can use the random method to get a
01:08 - random value between 0 and 1 and the 0
01:11 - is going to be inclusive and the 1 is
01:14 - going to be non inclusive and what this
01:16 - means is that you can get an exact value
01:17 - of 0 but you can't get an exact value of
01:20 - 1 and you can only get you know 0.999
01:24 - but never all the way up to 1 so if we
01:27 - say value is equal to random dot random
01:31 - and then we print out this value now if
01:35 - I run this a couple of times then each
01:38 - time we should get a value between 0 and
01:41 - 1 now the reason I never really use this
01:43 - is because I usually want random values
01:45 - between a certain range and we could
01:47 - multiply this random value to get values
01:49 - between a certain range but the other
01:51 - methods already provide this
01:52 - functionality for us so for example if
01:55 - we wanted a random floating point value
01:57 - between let's say 1 and 10 then we could
02:00 - use the uniform method to do this so we
02:03 - can say uniform and then the range of
02:06 - values and so if we run this we should
02:09 - get a random floating point value
02:12 - between 1
02:13 - and 10 every time we run this now if you
02:16 - want random floating-point values
02:17 - between the different range then you can
02:19 - just change the arguments that you pass
02:20 - into that method now I personally don't
02:23 - use this method too often either because
02:25 - usually when I need random values I
02:27 - usually need whole numbers or integers
02:29 - now to get random integers we can use
02:32 - the Rand int method so for example let's
02:35 - say that we wanted to simulate the role
02:37 - of a six-sided die now to do this we'll
02:40 - just want to use the rand int method and
02:43 - we're gonna want a random number between
02:46 - a 1 and 6 and 1 in 6 should be inclusive
02:49 - so this includes both 1 and 6 in the
02:53 - random values that you get so if we run
02:56 - this a few times then we should see
02:58 - random values between 1 and 6 pop up and
03:01 - so there we got 1 and 6 and a bunch of
03:04 - values in between now if you just wanted
03:06 - to simulate like something like a coin
03:08 - toss for example then you could just do
03:10 - a random integer between let's say 0 & 1
03:13 - and you could just pretend that 0 is
03:16 - heads or 1 is tails so if you do that
03:18 - and run this a few times and each time
03:20 - you get a random value between 0 & 1 so
03:23 - that Rand int method is a method that I
03:25 - tend to use a lot now another random
03:28 - method that I personally end up using a
03:31 - lot is the choice method now the choice
03:33 - method picks a random value from a list
03:36 - of values so for example let's say that
03:38 - we had a list of greetings and that we
03:40 - want to grab a random greeting so let me
03:44 - create a list of greetings here
03:51 - and now let's say that we wanted to grab
03:53 - a random greeting so I'll do that with
03:56 - random dot choice and I will pass in
03:59 - that greetings
04:00 - list there and now whenever our print
04:03 - these out I'll print out that random
04:06 - greeting followed by my name so now if I
04:10 - run this a few times then we should see
04:13 - that it grabs a random greeting from
04:15 - that greetings list every time that we
04:17 - run this now it's also possible to get
04:20 - multiple random values from a list and
04:22 - to do that instead of using choice will
04:24 - use choices so to do this let's say that
04:27 - we wanted to simulate some Rowlett
04:29 - results and whether it lands on red
04:32 - black or green so to do this let's
04:35 - create a list of colors here and we will
04:39 - create that list of colors that the
04:42 - outcomes can be so the outcomes can be
04:45 - red black or green now I actually
04:48 - grabbed this example from the Python
04:50 - documentation because I thought they did
04:51 - a good job of showing what we can do
04:53 - with this so now let's say that we
04:55 - wanted to simulate like 10 rounds of the
04:58 - roulette wheel spinning so we could do
05:00 - this by saying I'll just call this
05:02 - results and we'll say random dot choices
05:05 - to grab a list of random values here and
05:08 - we want to choose random values from
05:11 - colors and then we can set our K value
05:13 - and our K value is just how many times
05:16 - we want to pick a random value so let's
05:19 - do this 10 times to simulate 10 wheel
05:22 - spins and we'll pass in the results to
05:25 - print out so let's save that and run it
05:26 - and we can see that it returns a list of
05:29 - ten random results since we passed in 10
05:32 - for K and we can see that for each value
05:35 - in this list it grabbed a random value
05:38 - from our colors list now right now every
05:40 - color is equally likely to be randomly
05:43 - selected so we can see here that it's
05:46 - that there are two greens and the
05:48 - results here so the greens and the reds
05:50 - and the blacks are all just as likely to
05:52 - be randomly selected but if you've ever
05:55 - seen a row let will there are actually
05:57 - 18 red pockets 18 black pockets and only
06:00 - two green pockets so it's actually a lot
06:02 - less likely that a ball will land on
06:05 - so really what we want to do is wait
06:07 - these so that our random choices take
06:09 - these odds into consideration and we can
06:11 - set these weights of our choices by
06:13 - passing in an extra value here so we can
06:16 - pass in another argument called weight
06:18 - and this weights is going to be a list
06:21 - of what we want to weight these so we
06:23 - want to weight the red as 18 the black
06:27 - as 18 and the green as 2 so here's how
06:31 - these weights work so our total weights
06:33 - here add up to 38 so we have 18 plus 18
06:36 - which is 36 and then 2 which is 38 so
06:40 - red has an 18 out of 38 chance of being
06:42 - randomly selected and so does black but
06:45 - green only has a 2 out of 38 chance of
06:48 - being selected so we have two green
06:50 - results here in our current results but
06:53 - now if we run this then we'll see that
06:55 - green is a lot less likely to be
06:57 - selected so if we run this twice we can
07:00 - see that we got one green value here run
07:03 - through this a few more times and green
07:05 - just very rarely pops up so those
07:07 - weights seem to be working properly okay
07:09 - so now let's take a look at how we can
07:11 - randomly shuffle a list of values so
07:13 - let's say that we have a list of values
07:15 - from 1 to 52 now we can think of these
07:18 - as a deck of cards since there are 52
07:20 - cards in a deck
07:21 - so first let's create a range so I will
07:25 - call this deck and set this equal to
07:27 - range of 1 and 53 and that's because the
07:32 - 53 is non inclusive so this will be a
07:34 - range between 1 and 52 now just so that
07:37 - we can print these out I'm going to
07:39 - convert this range to a list and we can
07:42 - see what this looks like so now let me
07:45 - print out this deck so if I run that you
07:48 - can see that we get a list of values
07:50 - between 1 and 52 so now let's use the
07:53 - random module to shuffle this list
07:55 - so this shuffles the list in place so we
07:58 - don't have to set another variable or
08:00 - anything like that we can just say
08:03 - random dot shuffle and then pass in the
08:07 - list that we want to shuffle so if we
08:09 - run this then we can see that now our
08:11 - list of 52 numbers was randomly shuffled
08:13 - around so now let's say that we wanted
08:16 - to get 5 random call
08:18 - from this deck now you might think that
08:20 - we should use the choices method that we
08:22 - saw a little bit ago but this wouldn't
08:24 - really work because with the choices
08:26 - method it could randomly grab the same
08:29 - cards multiple times so for example it
08:31 - could randomly select the one card
08:34 - multiple times and we only want unique
08:37 - cards so to do this we're going to use
08:39 - the sample method now it'll make sure
08:41 - that it only grabs unique cards from our
08:43 - sequence so to do this I'm just going to
08:45 - create another variable here and I'll
08:47 - call this hand and I'll set this equal
08:49 - to random dot sample and we want to get
08:54 - a sample from the deck and we want five
08:58 - random unique values so we'll pass in K
09:01 - as five and now let's print out our hand
09:04 - so let's run that so now we should get a
09:06 - random sample of five cards from our
09:08 - fifty-two card deck and if we run this a
09:11 - few more times then we can see that we
09:13 - never get the same card twice because
09:15 - these the sample method will make sure
09:17 - that it's only unique values okay so now
09:20 - that we've seen some random methods let
09:22 - me show you a practical use case for
09:24 - what we've learned so for my videos I
09:25 - usually need some sample data so for
09:28 - example with my CSV tutorial I created a
09:31 - lot of fake names and email addresses
09:33 - and things like that and I used the
09:35 - random module to do this so let's I have
09:38 - opened a sample file here where I'm
09:40 - creating a lot of fake names and phone
09:42 - numbers addresses and email addresses
09:44 - now there are some more advanced
09:45 - packages online that create fake data
09:48 - for you but I didn't really need
09:50 - anything too complicated so I just went
09:51 - ahead and wrote my own but we have a
09:55 - bunch of lists here at the top of our
09:57 - module that just has a lot of common
09:59 - first names and last names and street
10:02 - names and fake cities and states now
10:04 - normally you'd want to break these into
10:06 - different lines to be pepp eight
10:07 - compliant but this is just something for
10:09 - personal use and I don't like all the
10:12 - extra space that they take up on the
10:14 - extra lines so I just keep these on one
10:16 - line here so those are my lists and I'm
10:18 - gonna be getting random values from and
10:20 - then if we go down here just a bit then
10:22 - here I'm just creating a loop for
10:24 - however much fake data that I want so if
10:26 - I loop through this 100 times then it
10:29 - will create 100 fake names and for
10:31 - numbers and addresses and emails so
10:33 - within the loop you can see that we're
10:35 - grabbing the first random name from the
10:40 - first names and then we're setting this
10:42 - last variable to a random dot choice
10:44 - from the last names now here for the
10:47 - phone number it's a little bit more
10:48 - complicated so we're using an EPS string
10:51 - now if you don't know what an EPS string
10:52 - is then you can watch my video on
10:53 - strings to learn more about that but
10:56 - basically within the F string here our
10:58 - first value we are getting a random
11:01 - three-digit number between 100 and 999
11:05 - and then we are doing a dash and then a
11:08 - 5 5 5 since I want this to be a fake
11:11 - number
11:11 - and then another dash and then a random
11:13 - four-digit number between 1000 and 9999
11:18 - and then for the rest of the values here
11:20 - it's basically everything that we've
11:21 - seen before so the street number is just
11:25 - a random integer between 100 and 999 the
11:28 - street is a random choice from our list
11:31 - of street names the city is a random
11:33 - choice from our list of fake cities the
11:36 - state is a random choice from our states
11:38 - and the zip code is a random 5 digit
11:41 - integer between 10,000 and 9 9 9 9 9 and
11:46 - then for the address we're just using
11:47 - another F string to combine all of those
11:50 - together so we have the street number of
11:52 - the street then just a street with a
11:54 - period and a comma the city state and
11:56 - zip code now for the email address we're
11:58 - not using any random values here we're
12:00 - just using this first variable which was
12:02 - a random first name from our list plus
12:05 - the lower last name and then just
12:08 - tagging on this @ bogus email com to the
12:12 - end and then lastly this print statement
12:14 - I can print this out and any format that
12:16 - I want to print these random values out
12:18 - so I'm printing out the first and last
12:21 - name and then a new line and then the
12:23 - phone number and a new line then the
12:25 - address and a new line and then the
12:27 - email and then a new line to separate
12:28 - all those out so now if I scroll up here
12:31 - to the top and I run this then we can
12:34 - see what these random values kind of
12:36 - look like so we can see that just in you
12:38 - know about 30 lines of code here with
12:40 - the random module that we're able to
12:43 - generate a lot of fake names
12:44 - to fake phone numbers and addresses and
12:46 - emails so this can be pretty useful if
12:48 - you need some dummy data to practice
12:50 - against or anything like that okay so I
12:53 - think that's going to do it for this
12:54 - video now I hope that now you have a
12:56 - pretty good idea for some different ways
12:57 - that you can use the random module but
12:59 - if anyone has any questions about what
13:01 - we covered in this video then feel free
13:02 - to ask in the comment section below and
13:04 - I'll do my best to answer those and if
13:06 - you enjoyed these tutorials and would
13:07 - like to support them then there are
13:08 - several ways you can do that the easiest
13:10 - ways to simply like the video and give
13:11 - it a thumbs up and also it's a huge help
13:13 - to share these videos with anyone who
13:15 - you think would find them useful and if
13:16 - you have the means you can contribute
13:17 - through patreon and there's a link to
13:19 - that page in a description section below
13:20 - be sure to subscribe for future videos
13:22 - and thank you all for watching
13:34 - you

Cleaned transcript:

hey there how's it going everybody in this video we're gonna take a quick look at the random module and how we can use this to get some random data so I use this a lot to create dummy data that I use within my videos so I figured I'd make a short video showing how you can use this to do something similar so we'll be taking a look at how to create random numbers and grabbing random values from a list of values and things like that now one thing that I want to mention before we get started is that this shouldn't be used for security purposes or cryptography and Python mentions this in their documentation and suggests using the secrets module instead if that's what you're trying to do but for most cases the random module works great so if you just want to generate some random data or have a game where you need some random values or shuffle some values or something like that then this is perfect for those types of things so with that said let's go ahead and get started so first to use the random module we're gonna need to import it and this is included in the standard library so you don't have to install any thirdparty packages so you can just say import random now the first two methods that are usually covered are the random and uniform methods now I hardly ever use these myself but let's take a quick look at these just to see what they do so we can use the random method to get a random value between 0 and 1 and the 0 is going to be inclusive and the 1 is going to be non inclusive and what this means is that you can get an exact value of 0 but you can't get an exact value of 1 and you can only get you know 0.999 but never all the way up to 1 so if we say value is equal to random dot random and then we print out this value now if I run this a couple of times then each time we should get a value between 0 and 1 now the reason I never really use this is because I usually want random values between a certain range and we could multiply this random value to get values between a certain range but the other methods already provide this functionality for us so for example if we wanted a random floating point value between let's say 1 and 10 then we could use the uniform method to do this so we can say uniform and then the range of values and so if we run this we should get a random floating point value between 1 and 10 every time we run this now if you want random floatingpoint values between the different range then you can just change the arguments that you pass into that method now I personally don't use this method too often either because usually when I need random values I usually need whole numbers or integers now to get random integers we can use the Rand int method so for example let's say that we wanted to simulate the role of a sixsided die now to do this we'll just want to use the rand int method and we're gonna want a random number between a 1 and 6 and 1 in 6 should be inclusive so this includes both 1 and 6 in the random values that you get so if we run this a few times then we should see random values between 1 and 6 pop up and so there we got 1 and 6 and a bunch of values in between now if you just wanted to simulate like something like a coin toss for example then you could just do a random integer between let's say 0 & 1 and you could just pretend that 0 is heads or 1 is tails so if you do that and run this a few times and each time you get a random value between 0 & 1 so that Rand int method is a method that I tend to use a lot now another random method that I personally end up using a lot is the choice method now the choice method picks a random value from a list of values so for example let's say that we had a list of greetings and that we want to grab a random greeting so let me create a list of greetings here and now let's say that we wanted to grab a random greeting so I'll do that with random dot choice and I will pass in that greetings list there and now whenever our print these out I'll print out that random greeting followed by my name so now if I run this a few times then we should see that it grabs a random greeting from that greetings list every time that we run this now it's also possible to get multiple random values from a list and to do that instead of using choice will use choices so to do this let's say that we wanted to simulate some Rowlett results and whether it lands on red black or green so to do this let's create a list of colors here and we will create that list of colors that the outcomes can be so the outcomes can be red black or green now I actually grabbed this example from the Python documentation because I thought they did a good job of showing what we can do with this so now let's say that we wanted to simulate like 10 rounds of the roulette wheel spinning so we could do this by saying I'll just call this results and we'll say random dot choices to grab a list of random values here and we want to choose random values from colors and then we can set our K value and our K value is just how many times we want to pick a random value so let's do this 10 times to simulate 10 wheel spins and we'll pass in the results to print out so let's save that and run it and we can see that it returns a list of ten random results since we passed in 10 for K and we can see that for each value in this list it grabbed a random value from our colors list now right now every color is equally likely to be randomly selected so we can see here that it's that there are two greens and the results here so the greens and the reds and the blacks are all just as likely to be randomly selected but if you've ever seen a row let will there are actually 18 red pockets 18 black pockets and only two green pockets so it's actually a lot less likely that a ball will land on so really what we want to do is wait these so that our random choices take these odds into consideration and we can set these weights of our choices by passing in an extra value here so we can pass in another argument called weight and this weights is going to be a list of what we want to weight these so we want to weight the red as 18 the black as 18 and the green as 2 so here's how these weights work so our total weights here add up to 38 so we have 18 plus 18 which is 36 and then 2 which is 38 so red has an 18 out of 38 chance of being randomly selected and so does black but green only has a 2 out of 38 chance of being selected so we have two green results here in our current results but now if we run this then we'll see that green is a lot less likely to be selected so if we run this twice we can see that we got one green value here run through this a few more times and green just very rarely pops up so those weights seem to be working properly okay so now let's take a look at how we can randomly shuffle a list of values so let's say that we have a list of values from 1 to 52 now we can think of these as a deck of cards since there are 52 cards in a deck so first let's create a range so I will call this deck and set this equal to range of 1 and 53 and that's because the 53 is non inclusive so this will be a range between 1 and 52 now just so that we can print these out I'm going to convert this range to a list and we can see what this looks like so now let me print out this deck so if I run that you can see that we get a list of values between 1 and 52 so now let's use the random module to shuffle this list so this shuffles the list in place so we don't have to set another variable or anything like that we can just say random dot shuffle and then pass in the list that we want to shuffle so if we run this then we can see that now our list of 52 numbers was randomly shuffled around so now let's say that we wanted to get 5 random call from this deck now you might think that we should use the choices method that we saw a little bit ago but this wouldn't really work because with the choices method it could randomly grab the same cards multiple times so for example it could randomly select the one card multiple times and we only want unique cards so to do this we're going to use the sample method now it'll make sure that it only grabs unique cards from our sequence so to do this I'm just going to create another variable here and I'll call this hand and I'll set this equal to random dot sample and we want to get a sample from the deck and we want five random unique values so we'll pass in K as five and now let's print out our hand so let's run that so now we should get a random sample of five cards from our fiftytwo card deck and if we run this a few more times then we can see that we never get the same card twice because these the sample method will make sure that it's only unique values okay so now that we've seen some random methods let me show you a practical use case for what we've learned so for my videos I usually need some sample data so for example with my CSV tutorial I created a lot of fake names and email addresses and things like that and I used the random module to do this so let's I have opened a sample file here where I'm creating a lot of fake names and phone numbers addresses and email addresses now there are some more advanced packages online that create fake data for you but I didn't really need anything too complicated so I just went ahead and wrote my own but we have a bunch of lists here at the top of our module that just has a lot of common first names and last names and street names and fake cities and states now normally you'd want to break these into different lines to be pepp eight compliant but this is just something for personal use and I don't like all the extra space that they take up on the extra lines so I just keep these on one line here so those are my lists and I'm gonna be getting random values from and then if we go down here just a bit then here I'm just creating a loop for however much fake data that I want so if I loop through this 100 times then it will create 100 fake names and for numbers and addresses and emails so within the loop you can see that we're grabbing the first random name from the first names and then we're setting this last variable to a random dot choice from the last names now here for the phone number it's a little bit more complicated so we're using an EPS string now if you don't know what an EPS string is then you can watch my video on strings to learn more about that but basically within the F string here our first value we are getting a random threedigit number between 100 and 999 and then we are doing a dash and then a 5 5 5 since I want this to be a fake number and then another dash and then a random fourdigit number between 1000 and 9999 and then for the rest of the values here it's basically everything that we've seen before so the street number is just a random integer between 100 and 999 the street is a random choice from our list of street names the city is a random choice from our list of fake cities the state is a random choice from our states and the zip code is a random 5 digit integer between 10,000 and 9 9 9 9 9 and then for the address we're just using another F string to combine all of those together so we have the street number of the street then just a street with a period and a comma the city state and zip code now for the email address we're not using any random values here we're just using this first variable which was a random first name from our list plus the lower last name and then just tagging on this @ bogus email com to the end and then lastly this print statement I can print this out and any format that I want to print these random values out so I'm printing out the first and last name and then a new line and then the phone number and a new line then the address and a new line and then the email and then a new line to separate all those out so now if I scroll up here to the top and I run this then we can see what these random values kind of look like so we can see that just in you know about 30 lines of code here with the random module that we're able to generate a lot of fake names to fake phone numbers and addresses and emails so this can be pretty useful if you need some dummy data to practice against or anything like that okay so I think that's going to do it for this video now I hope that now you have a pretty good idea for some different ways that you can use the random module but if anyone has any questions about what we covered in this video then feel free to ask in the comment section below and I'll do my best to answer those and if you enjoyed these tutorials and would like to support them then there are several ways you can do that the easiest ways to simply like the video and give it a thumbs up and also it's a huge help to share these videos with anyone who you think would find them useful and if you have the means you can contribute through patreon and there's a link to that page in a description section below be sure to subscribe for future videos and thank you all for watching you
