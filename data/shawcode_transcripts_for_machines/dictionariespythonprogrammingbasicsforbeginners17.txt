hello everyone welcome back to show code today I am going to be teaching you how to make use and change dictionaries in Python I have lots of experience in Python and by the end of this video you will have a really good understanding of what dictionaries are and how to use them so a dictionary is the last collection type that we have to cover in this series in the previous videos we looked at three other collection types in Python there are lists tuples and sets a dictionary is changeable ordered and indexed but they use key value pairs and this is what makes them different to lists I'll explain what keys and values are when we get into some examples let's start coding so I've just got open a new python file all right let's make a dictionary so let's do computer equals some curly brackets and then this is we're going to define our key here so let's have processor go on a core i5 comma ram 16 gigabytes ddr4 i've been if we print computer and say that and then if we run it we just get our dictionary here so this processor right here this string is our key and this right here is our value and this together is called our key value pair and we separate our p.m. value with this and then we separate key value pairs with commas so this is a key value pair this is a key value pair this is a key this is a value key value we can access the values of a dictionary by referring to the key so we do processor and we get core i5 let's change this to like motherboard or something and we get an error kierra motherboard because motherboard doesn't exist here but all we can do is you can do computer don't get motherboard and we just get none so this get method doesn't raise an error it just if it can't find it it'll just return non instead of an error so there are two ways to access values from a dictionary we can use the square brackets method or we can use a get method we can change values by referring to the key computer RAM equals 32 gigabytes ddr4 say that and then if we print out computer as you can see the RAM value has now been changed to 32 gigabytes ddr4 if you're enjoying the video or are finding it useful be sure to give this video like it really does help me out also subscribe I make Python content almost every day anyways you can add items to a dictionary by defining a key and setting the value to something so if I just clear this and then if we do compute computer let's just get something that doesn't exist like I don't know SSD and then set that equal to Sam so one terabyte and very food printout computer as you can see we've added this new key value pair onto the end SSD is the key and the value is Samsung one terabyte to remove values we can use the pop method so computer dot pop SSD benefit from computer we've added on the SSD right here but then we've popped it and removed it and we no longer have the SSD in our computer and we can also have nested dictionaries what I mean by this is for a dictionary can contain other dictionaries let's create a dictionary called employees so employees equals and ye one and then open open up a new dictionary and then let's expand these onto different lines here we can have dictionaries over multiple lines so then we can do name Col on J comma job go on programmer go on age 34 okay so that's one dictionary done and then if we put a comma here we're returning back to the original dictionary so then we can have employee to cuddle on another dictionary and then let's drop down a bit I'm just going to copy and paste all this stuff here named Jill job PC builder age 31 okay and then let's just put a comment or come over and then there we go we've created a dictionary here called employees and then the first key of that is called employee one and Pemba value of employee one is another dictionary with keys and values named Jeff job programmer age 34 and then we've closed out of that dictionary and then moving on to the second key value pair the key of the second one is employee two and the value is this dictionary with multiple key value pairs in there let's just move this back here and then we can print employees and as you can see we get quite a long and complicated print out statement here but what we can do is you can print employees employee one and we get the value which is are nested dictionary and then to access the values inside that nested dictionary we do name and then we get Jeff because it's looking inside the value of employee one then it's looking inside of the value of name and it's printing out Jeff because that's the value of the name so we could change this to job and we'd get programmer okay so that's nested dictionaries there are a few dictionary methods but I think may be useful for you to know but I won't go into detail with them because they're similar to other collection methods we have already learned so we have to Claire so let's just create another dictionary called my depth equals what do you do and then we have the clear method so you could do my dick doc clear print my Dick's run it and we get an empty dictionary because this dictionary has been completely wiped then this copy so we could do x equals my dick's dot copy and I'll just remove easier and then print X we need the parentheses on the end here and we just get a copy of the dictionary my dick's then we also have the items methods we can print my dict dar items and then this returns a list containing a tuple for each key value pair so if we run it we get a list here and then inside this we get multiple tuples for each key and value so then we can also get the keys of a dictionary with the keys method and then we just get a west of keys which is key one and key too you can also get values then we'll get a list of values value one value to a few extra ones as well we can completely delete a dictionary with Dell with the Dell keyword so Dell my dict print my dick's and we're going to get an error because my dick's doesn't exist anymore because we've just throw at it here then of course we can always just get the length of the dictionary so it prints when my dick's and we get to because it counts a key value purse so first element second element okay that's pretty much it for dictionaries they are really useful in certain situations really because of how they use key value pairs that's for last collection type in Python next video we will be learning about for loops and how we can iterate through these collection types that we have learnt about if you have any questions or comments be sure to leave them down below I'll be sure to reply to them if you would like to support me and what I do you can give this video a like it really does help me out a lot also it would be great if you subscribe I post Python content almost every day that's it from me Cheers and goodbye