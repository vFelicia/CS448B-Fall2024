hello everyone welcome back to shaw code today i'm going to be teaching you how to make and apply tuples in python i have lots of experience in python and by the end of this tutorial you will have a really good understanding of python tuples okay now a tuple is another collection type last video we learned about lists if you haven't seen that video there is a link to the playlist in the description or you can click on the card in the top right of the screen a tuple is a collection that is ordered but it's unchangeable you are unable to modify them part way through the program this is what makes them different to lists you may be thinking why would i use a tuple instead of a list when i can't change it why don't i just create a list and not change it well tuples are actually faster than lists what i mean by this is they take less time to access it's only by a few milliseconds usually when you start getting into huge tuples and lists in big programs the difference is quite noticeable tuples are also safer and you can't accidentally change them during a program so to recap they are unchangeable and they are ordered now let's move on to making some tuples so just open up idle and just bring up a new file so what we want to do first is just set up a tuple so my tuple equals and make some round brackets and let's just have in here uh just names of people so george separated by commerce jack jeff and calton okay so fat solar tuple is it's just you set it out the exact same way as you do with a list apart from instead of square brackets you use round brackets and we can just print out as usual my tuple and let's save this and if we run it we just print out the tuple and you separate them with commas like lists it's exactly the same apart from these parentheses right here you can access them the same way as lists so let's print my tuple one and that will print out jack yep there we go because remember zero one two three you just print out the index we can also do negative indexing it's just the same so we'll print out column with negative indexing yep there we go i'm going to go a bit faster on this accessing because we already covered it last video so if you haven't seen that make sure you go check it out and you can also do ranges so print my tuple uh let's just go to three i'll just print out judge jack and jeff you can do index ranges negative index ranges it's all just the same now what i said earlier about tuples being unchangeable there is actually a way you can bypass this although it is a bit pointless because you might as well just have a list but if you want to do it you can so what we do is i'm just going to get rid of all this first bitkeeper tuple so if we just make a new variable called y and we do list my tuple it just creates a new variable called y it copies all of that data from my tuple and turns it into a list and then we can do y like zero equals modified and then we do my tuple equals tuple y so that basically just copies out y and converts it back to a tuple then if we print out my tuple as you can see we've actually modified for tuple there's not much point in doing it you might as well just use a list it's a lot easier than writing out what four lines three lines of code just to change it we can also check if an item is in a tuple so if you're george in tube in my tuple print george is in my tuple okay save it and run it as we can see george is in my tuple it's literally just the same uh in operator as we learned last video it's basically just the same thing as with lists with the if and in it's the exact same thing apart from it's with the tuple i'm just showing you that tuples and lists are very similar in functionality and how you can access them one thing i forgot to mention in the previous video is how to get the length of something so this applies to tuples as well as lists to see how many items your tuple or your list has you can use a length function so i'm going to print when my tuple run it we get four because it has four items in this and if we create a quick list my list let's just create a list of numbers let's actually get five in there uh print the length of my list it works just the same print out five because there's five items in the list if you are enjoying the video so far or have learned something new be sure to give this video a like it really does help me out anyway as i was saying if you want to create a tuple with just one item you need to have a comma after the first item this way python will read it as a tuple and not just a number or a string or whatever your data is so if we call it one tuple equals hello we need to have a comma after it to show that it is a tuple otherwise python will just think that it's a string that is a string that is a tuple another thing that i forgot to mention in the last video if it applies to both tuples and lists is that you can join uh multiple tuples or lists together so if we make another table called second tuple uh hello there then we could do my tuple plus equals second tuple and then print my tuple it's hard typing and speaking at the same time um so as you can see we've concatenated two tuples together so as you can see we got the first one but we've also added the items from the second tuple there are a couple of tuple methods to talk about as well uh there is a count method i'm just gonna get rid of this quick what that does is it returns the number of times a value appears in his hoople for example if i had a two pool that had three lots of the same value the count method would return free so let's just create a another two pull so count to full equals hi hi hi and then if we do count tuple.count searching for hi sorry we need to print this out actually print yeah as you can see we get free because there's three lots of high and we're searching for how many times high appears in that tuple and then the final method we should learn is um the index method this searches the tuple for a value and returns the position of where it was found or it returns the index of that value all right so let's just get an example of that so print my tuple dot index jeff and we'll get to because it's looking where does jeff appear in this tuple oh it appears at index 2 let's print out index 2. as a quick side note guys make sure to leave a comment about whether you prefer lists or tuples i will reply to as many comments as i can okay that's all there is to do with tuples they are slightly different to lists the main thing being that tuples are unchangeable they're also faster but you are losing out on the option to change them what i recommend you do now is get some practice tuples and try some stuff out yourself that we have learnt today that way you will have a great understanding of tuples and how they operate now i'm going to end the video here next video we will have a break from collections and do a little bit more on strings they have a couple of extra things to learn about and you should find them easy to pick up after watching this video and the last video if you have any questions or comments be sure to leave them down below also give this video a big fat thumbs up if it was useful or you enjoyed it doing that really does help me out a lot make sure you subscribe for more python tutorials so you don't miss out on any that's it from me cheers goodbye