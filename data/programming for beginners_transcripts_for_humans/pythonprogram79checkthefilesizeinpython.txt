With timestamps:

00:00 - welcome to another video in which we are
00:02 - going to write Python program to check
00:04 - the file size so guys basically there
00:06 - are two ways to find the file size in
00:08 - Python the first way is by using the OS
00:11 - module that we are going to check with
00:12 - the help of example as well and the
00:14 - second way is by using the path lab
00:16 - module so guys let us check both these
00:19 - ways in the vs code over here so the
00:21 - very first thing is we are going to
00:23 - import the OS module so we say import
00:25 - followed by OS and then guys what we
00:28 - have to do is we need to Define a
00:30 - variable that is file state over here
00:32 - that we will be using and it is equal to
00:34 - we will be using the OS module followed
00:37 - by Dot and then we have something called
00:39 - as stat function over here so it is
00:42 - going to take the entire directory path
00:44 - of the file for which we need to find
00:46 - the file size so guys for example
00:48 - purpose we will be using this test file
00:50 - over here that is test.txt so we will
00:53 - copy this directory path over here and
00:55 - then paste this inside the double quotes
00:57 - inside the parenthesis so over here we
00:59 - need to escape the backslash character
01:02 - as well so I'm going to provide another
01:04 - backslash character at all the instances
01:06 - and then after this in the end we are
01:08 - going to provide the name of the file
01:09 - that is test dot txt over here so guys
01:13 - we have defined with a variable that is
01:15 - file state now simply we can use this
01:17 - file state variable in order to get the
01:19 - statistics of this file which includes
01:22 - the file size as well so we are going to
01:24 - use the print function over here and
01:26 - then we will say file size in this case
01:28 - so we say file size followed by colon
01:31 - and then we use comma and then we have
01:33 - the file stat variable that we have just
01:36 - created followed by Dot and then we will
01:39 - be using the St size over here so as you
01:41 - can see we have St underscore size
01:43 - attribute so this is the property that
01:46 - will return us the integer which will be
01:48 - probably the file size over here for
01:51 - this particular file that we have
01:52 - mentioned so guys we are going to use
01:54 - this let me just save this file now and
01:56 - try running this code once again so as
01:58 - you can see we have got file size which
01:59 - is equal to 126 this is in bytes now
02:02 - over here so if we hover over this file
02:05 - as you can see we have got the size that
02:07 - is 126 over here so guys this is one way
02:09 - in order to get the file size by using
02:12 - OS module so we will say by using OS in
02:16 - this case now guys next what we will be
02:18 - doing is we will also use the path lab
02:20 - module in order to get the file size
02:22 - over here so we will be importing the
02:24 - path layer and then let's say again we
02:26 - will be using the firestat variable and
02:29 - this time we will reassign it to some
02:30 - other values over here we will be using
02:33 - the pathlib module followed by Dot and
02:36 - then we have the path class over here
02:38 - and inside this path class we will be
02:40 - providing this parameter that is the
02:42 - entire directory path of the file along
02:45 - with the file name so I'm going to copy
02:47 - this and paste this inside the double
02:49 - quotes over here so guys basically we
02:51 - have defined the file set over here once
02:53 - again by using the path lab module now
02:56 - next once again we will be using the
02:58 - print function so we say end and then
03:01 - this time we will say file size by using
03:06 - path lab so we will get the file size
03:08 - once again but this time we have used
03:10 - the pathway module and using that we
03:13 - have created the file state variable we
03:15 - have reassigned it to some other value
03:17 - that pathlab is providing us using this
03:19 - file name over here now guys we will be
03:21 - using the file state once again and then
03:24 - followed by Dot and then we have
03:26 - something called as stat function over
03:28 - here as you can see we will be using the
03:30 - stat function so since this is a
03:32 - function we have to provide the open and
03:34 - close parent assets followed by Dot and
03:36 - then once again we will be using the St
03:38 - followed by underscore and then we have
03:41 - something called as size over here so it
03:43 - is St underscore size parameter once
03:46 - again that we will be using so guys this
03:48 - is another attribute that belongs to
03:50 - this function so we will be using this
03:52 - attribute so let me just save this file
03:54 - now and try running this code once again
03:57 - so as you can see we have got file size
03:59 - by using OS it is 126 and once again we
04:02 - are getting file size by using pathlet
04:05 - 126 once again so Guys these are the two
04:08 - ways using which we can get the file
04:10 - size of any file that we mentioned
04:12 - inside this as a parameter by using Os
04:15 - or path lab module please make sure that
04:17 - you practice on your own so that on
04:19 - different inputs you get different
04:20 - outputs make sure that you like this
04:22 - video so that it reaches to more people
04:24 - and subscribe to the channel so that you
04:26 - get the notifications on upcoming videos
04:28 - as well the next video that we are going
04:30 - to talk about is Python program to
04:32 - reverse a number so stay tuned

Cleaned transcript:

welcome to another video in which we are going to write Python program to check the file size so guys basically there are two ways to find the file size in Python the first way is by using the OS module that we are going to check with the help of example as well and the second way is by using the path lab module so guys let us check both these ways in the vs code over here so the very first thing is we are going to import the OS module so we say import followed by OS and then guys what we have to do is we need to Define a variable that is file state over here that we will be using and it is equal to we will be using the OS module followed by Dot and then we have something called as stat function over here so it is going to take the entire directory path of the file for which we need to find the file size so guys for example purpose we will be using this test file over here that is test.txt so we will copy this directory path over here and then paste this inside the double quotes inside the parenthesis so over here we need to escape the backslash character as well so I'm going to provide another backslash character at all the instances and then after this in the end we are going to provide the name of the file that is test dot txt over here so guys we have defined with a variable that is file state now simply we can use this file state variable in order to get the statistics of this file which includes the file size as well so we are going to use the print function over here and then we will say file size in this case so we say file size followed by colon and then we use comma and then we have the file stat variable that we have just created followed by Dot and then we will be using the St size over here so as you can see we have St underscore size attribute so this is the property that will return us the integer which will be probably the file size over here for this particular file that we have mentioned so guys we are going to use this let me just save this file now and try running this code once again so as you can see we have got file size which is equal to 126 this is in bytes now over here so if we hover over this file as you can see we have got the size that is 126 over here so guys this is one way in order to get the file size by using OS module so we will say by using OS in this case now guys next what we will be doing is we will also use the path lab module in order to get the file size over here so we will be importing the path layer and then let's say again we will be using the firestat variable and this time we will reassign it to some other values over here we will be using the pathlib module followed by Dot and then we have the path class over here and inside this path class we will be providing this parameter that is the entire directory path of the file along with the file name so I'm going to copy this and paste this inside the double quotes over here so guys basically we have defined the file set over here once again by using the path lab module now next once again we will be using the print function so we say end and then this time we will say file size by using path lab so we will get the file size once again but this time we have used the pathway module and using that we have created the file state variable we have reassigned it to some other value that pathlab is providing us using this file name over here now guys we will be using the file state once again and then followed by Dot and then we have something called as stat function over here as you can see we will be using the stat function so since this is a function we have to provide the open and close parent assets followed by Dot and then once again we will be using the St followed by underscore and then we have something called as size over here so it is St underscore size parameter once again that we will be using so guys this is another attribute that belongs to this function so we will be using this attribute so let me just save this file now and try running this code once again so as you can see we have got file size by using OS it is 126 and once again we are getting file size by using pathlet 126 once again so Guys these are the two ways using which we can get the file size of any file that we mentioned inside this as a parameter by using Os or path lab module please make sure that you practice on your own so that on different inputs you get different outputs make sure that you like this video so that it reaches to more people and subscribe to the channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is Python program to reverse a number so stay tuned
