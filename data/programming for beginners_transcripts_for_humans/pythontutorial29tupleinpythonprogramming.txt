With timestamps:

00:00 - hey what's up guys welcome to another
00:02 - video in which we are going to learn
00:03 - about Tuple in Python Programming so
00:06 - guys a tuple in Python is similar to a
00:08 - list basically the difference between
00:10 - the two is that we cannot change the
00:12 - elements of a tuple once it is assigned
00:15 - whereas we can change the elements of
00:16 - our list so previously in the examples
00:19 - of the list that we have seen we were
00:21 - able to change the elements inside the
00:23 - list but the same thing cannot be done
00:25 - with the elements that are present
00:27 - inside the Tuple so how do we create a
00:29 - tuple a tuple is created by placing all
00:31 - the items that is elements inside the
00:34 - parent asset so we have this open and
00:36 - close parenthesis whereas in the list we
00:38 - were using open and close square
00:40 - brackets now these are supposed to be
00:42 - separated by commas over here the
00:44 - parentheses are optional however it is a
00:46 - Code Practice to use them so a tuple can
00:49 - have any number of items and they may be
00:51 - of different types that is integer of
00:53 - load list string Etc so guys let us
00:56 - check this with the help of example now
00:58 - over here as you can see we have my
01:00 - Apple which is the name of the variable
01:01 - that we have given and one two three
01:03 - these are the elements that is present
01:05 - inside the Tuple if you notice we have
01:08 - this open and closed parenthesis instead
01:10 - of the square brackets and that is the
01:12 - difference between the list and the
01:13 - Tuple over here so let us move to the vs
01:16 - code and simply we will provide a tuple
01:18 - one as the variable name over here equal
01:21 - to followed by open and close
01:22 - parenthesis and let's say we Define five
01:24 - elements one to five over here so this
01:27 - is nothing but we have defined the Tuple
01:29 - and we can simply print this Tuple by
01:31 - using the variable name Tuple one over
01:33 - here so let me just save this file and
01:36 - try running this code now as you can see
01:37 - we are getting all the elements that is
01:39 - one two three four five and in this way
01:41 - we have easily created and printed the
01:44 - Tuple elements over here now guys an
01:46 - important thing over here let's say you
01:48 - want to create a python Tuple with only
01:50 - one element so in this case what happens
01:52 - is let's say if you provide where one
01:54 - that is variable one over here and you
01:56 - provide double quotes that is hello with
01:58 - this open and close parent synthesis in
02:01 - this case this will be considered as a
02:03 - string whereas in the variable 2 what
02:05 - you do is after this hello you provide a
02:08 - comma so in this case it will be
02:10 - considered as a tuple so this is very
02:12 - important thing if you want to create a
02:14 - tuple with just a one element you have
02:16 - to use the comma after providing that
02:19 - element over here let us check this with
02:21 - the help of examples now over here let's
02:23 - say I provide where one in this case and
02:26 - then open and close parenthesis and then
02:29 - let's say we have hello over here and
02:31 - then I'll just copy this line of code
02:33 - and paste this and I'll simply provide
02:35 - comma after this element so what we will
02:38 - do is I'll just name this variable name
02:40 - as where2 so let us now confirm the data
02:42 - types of both the variables so we will
02:44 - say print and then inside this we will
02:47 - use the type function in order to find
02:49 - the data type of where one so we provide
02:52 - where one over here and I'll simply copy
02:54 - and paste this line of code and we
02:56 - provide where 2 over here so let me just
02:59 - save this file now enter try running
03:00 - this code so as you can see first one it
03:02 - is showing us that it is a string and
03:04 - the second thing is showing us that it
03:06 - is a tuple now in case if we simply
03:08 - remove this comma from this Tuple so
03:10 - what happens so let me just save this
03:12 - file and try running this code once
03:14 - again as you can see it has become
03:15 - string now both are strings right now if
03:18 - we provide comma over here and comma
03:20 - over here as well so both the variables
03:23 - will be turned to the Tuple data type so
03:25 - guys this is very important if you want
03:27 - to have only one element inside the
03:29 - Tuple make sure that that element is
03:32 - followed by a comma over here in order
03:34 - to make that data type as a tuple now
03:36 - guys moving to next section how do we
03:38 - access the python Tuple elements so
03:40 - there are multiple ways in order to
03:42 - access the elements over here first of
03:44 - all is indexing so this we have already
03:46 - seen previously by using the index
03:48 - number we can access the elements of the
03:51 - Tuple so let's say we have Tuple one
03:53 - over here and we have five elements one
03:55 - two three four five so how do we access
03:58 - these elements by using the indices so
04:01 - we simply have to provide the couple one
04:04 - that is the variable name and Then
04:06 - followed by open and close square
04:07 - brackets this time and let's say we want
04:10 - to print the element that is 3 over here
04:12 - every time remember guys that the index
04:15 - it starts from zero so this first
04:17 - element that is number one it is at the
04:19 - index 0 and then the second element that
04:21 - is number two it is at the index 1 and
04:24 - then the third element that is number
04:25 - three it is at the index 2 over here so
04:28 - we provide the number that is 2 which is
04:30 - the index number in this case so this
04:33 - will tell the python interpreter to
04:35 - access the element that is at the index
04:38 - number 2 for this variable that is Tuple
04:40 - one so over here what will happen is the
04:43 - index number 0 is this and then index
04:45 - number one is this and then we have
04:47 - index number two which is 3 over here
04:49 - and this element should be printed so
04:51 - let me just save this file and try
04:52 - running this code now so as you can see
04:54 - 3 is getting printed similarly let's say
04:56 - if you want to print this number two
04:58 - which is at the index 1 in this case so
05:01 - we have to provide 1 inside this open
05:03 - and close square brackets so let me save
05:05 - this file and try running this code now
05:07 - so 2 is getting printed this time so
05:10 - guys this is one way in order to access
05:12 - the elements by using the indexing we
05:14 - also have something called as negative
05:16 - indexing so let's say if you don't know
05:18 - the number of elements that are present
05:20 - inside the Tuple whereas there is a way
05:22 - in order to find the length of the Tuple
05:25 - but in case you want to access the last
05:27 - element of this Tuple over here so you
05:30 - already know that the first element is
05:31 - at the index 0 so let me just print that
05:34 - so over here we provide Tuple 1 followed
05:37 - by the index number that is 0 in this
05:39 - case I'll save this file and try running
05:41 - this code so one is getting printed now
05:43 - let's say you want to print the last
05:45 - element but you don't know at which
05:47 - index it is so we have something called
05:49 - as negative indexing in which case
05:51 - before the zeroth index the index that
05:53 - is minus 1 it will point to the last
05:56 - element of this double that is 5 over
05:58 - here so when we provide minus 1 in this
06:01 - case this element that is 5 should get
06:03 - printed so let me save this file and try
06:05 - running this code now so 5 is getting
06:07 - printed similarly if you want to get the
06:10 - second last element of this Tuple you
06:13 - can simply provide minus 2 over here so
06:15 - when we provide minus 2 and run this
06:18 - code so 4 is getting displayed which is
06:20 - the second last element so this is like
06:22 - a cycle over here when you use the
06:24 - negative indexing the last elements of
06:27 - this Tuple will start getting printed
06:29 - over here and then guys you can also use
06:30 - the slicing functionality as we have
06:33 - already seen with the list so basically
06:35 - let's say if you want to print the
06:36 - subset of this Tuple between 2 to 4 so
06:40 - what you can do is what is the index of
06:42 - this element that is 2 it is 0 and then
06:44 - one so at the first Index this 2 is
06:46 - present so we will provide one over here
06:49 - followed by a colon and then what is the
06:52 - index of the element that we want that
06:54 - is 4 so the index is it is 0 1 2 and
06:58 - then this index is 3 but we don't want
07:01 - to specify 3 because this is excluded so
07:03 - the next index which is 4 we have to
07:05 - specify that index which will be not
07:07 - included in our slicing operator so when
07:09 - we provide 4 over here always remember
07:11 - that this index on the left hand side
07:13 - will be considered but this index will
07:16 - not be considered the fourth index will
07:18 - not be considered but before this that
07:20 - is the third index will be considered
07:21 - while printing the statement so let me
07:24 - just save this file and try running this
07:25 - code now so as you can see 2 3 and 4 is
07:28 - getting printed the last index it is 4
07:30 - which is having the element 5 this will
07:33 - not be considered because it is not
07:34 - included in the slicing operator so
07:37 - these are some of the ways that you can
07:38 - use in order to access the python Tuple
07:41 - elements over here now python Tuple
07:43 - methods there are two methods only that
07:45 - is count and index over here what is
07:48 - count so basically in order to get the
07:50 - number of occurrences of a particular
07:52 - element you can use the count method so
07:55 - over here while using the count function
07:57 - we have to use the variable name
07:58 - followed by I taught and then as you can
08:01 - see count and index these are the only
08:03 - two methods the other methods such as
08:05 - appending or removing or deleting the
08:07 - elements are not present that's because
08:09 - as I have already told you the Tuple
08:11 - inside python are not mutable which
08:13 - means we cannot change the elements once
08:16 - they are assigned over here so when we
08:18 - provide count we have to provide one of
08:20 - the elements inside that Tuple so let's
08:22 - say we want to find the occurrence of
08:24 - the element that is 2 over here in this
08:26 - case that means how many times this
08:28 - number 2 is occurring so let me save
08:30 - this file now and try running this code
08:32 - so as you can see the count is 1 over
08:34 - here that's because only one occurrence
08:36 - of number two is present let's say I
08:38 - provide some more occurrences over here
08:39 - so I provide the number 2 2 times over
08:42 - here so the total count becomes 3 in
08:44 - this case over here we have 2 and then
08:46 - two more twos are present so basically
08:48 - the total count is three let me just run
08:50 - this code once again so number of tools
08:53 - that are present over here inside the
08:54 - Tuple is three and that is what we are
08:56 - getting over here and this is the main
08:58 - functionality of the account function
09:00 - now the another function that is index
09:02 - so if you want to get the index of a
09:05 - particular element you can use the index
09:07 - function so after this dot we have
09:09 - something called as index and then
09:11 - inside the open and close parenthesis we
09:14 - have to provide the element for which we
09:16 - want to find the index so let's say I
09:18 - want to find the index of this element
09:20 - that is number 5 over here so it is 4
09:22 - basically let me just save this file and
09:24 - try running this code and confirm so as
09:27 - you can see 4 that is the index of this
09:29 - element is getting printed over here so
09:31 - Guys these functions you can use based
09:32 - on your requirements as far as Tuple is
09:34 - concerned now one very important thing
09:36 - iterating through a tuple in Python so
09:39 - we can use the for Loop to iterate over
09:41 - the elements of a tuple so basically we
09:43 - have seen this in the previous video as
09:44 - well so far we have printed the elements
09:46 - of the Tuple by using the variable name
09:48 - in this way so let me save this file now
09:50 - and try running this code as you can see
09:52 - all the elements are getting printed but
09:54 - there is a problem over here we are
09:56 - getting this open and close parenthesis
09:58 - also while printing these elements what
10:01 - if we only want to print single element
10:03 - at a time so we can simply use the for
10:05 - Loop and iterate through all the
10:07 - elements over here inside the Tuple so
10:09 - we use the for keyword followed by let's
10:12 - say the temporary variable as the item
10:14 - and then we have the in keyword and then
10:16 - the name of the variable that is the
10:18 - sequence which is Tuple 1 in this case
10:20 - and then we simply have to print this
10:23 - item that is item variable now what will
10:26 - happen is all the items will be printed
10:28 - on separate lines over here because by
10:31 - default the end parameter of this print
10:33 - function is having the slash n character
10:35 - so let me just save this file and try
10:37 - running this code now as you can see all
10:39 - the elements are getting printed on the
10:41 - new line what if we want all the
10:43 - elements to be present on the same line
10:45 - separated by comma over here so we
10:47 - simply have to provide comma and then
10:49 - there is something called as end
10:50 - parameter for this print function so we
10:53 - use that and inside the double quotes we
10:55 - provide the comma over here which will
10:57 - be kind of a separator for all those
11:00 - Elements which will be printed on the
11:01 - terminal so let me just save this file
11:03 - now and try running this code so as you
11:06 - can see all the elements now are getting
11:07 - printed on the same line and they are
11:10 - separated with a comma if you want a
11:12 - space character after comma that can
11:13 - also be done you provide comma followed
11:16 - by the space character let me just save
11:18 - this file now and try running this code
11:19 - so all the elements are separated with a
11:22 - comma character and then a space
11:24 - character additionally for a better
11:25 - readability so guys this is another way
11:27 - you can use the for Loop in order to
11:30 - iterate through all the elements of the
11:32 - Tuple now let us understand what are the
11:34 - different advantages of a tuple over
11:36 - less than python so we generally use
11:38 - tuples for heterogeneous that is
11:40 - different data types and list for
11:42 - homogeneous which means similar data
11:44 - types so in a tuple you can have the
11:46 - different data types as well so
11:48 - basically the Tuple is being used for
11:50 - that purpose only and we cannot change
11:52 - the elements inside the Tuple so since
11:55 - tuples are immutable which means you
11:57 - cannot change the data inside the Tuple
11:59 - once they are assigned iterating through
12:01 - a tuple is faster than with a list so
12:03 - behind the scenes what is happening is
12:05 - the program already knows that the Tuple
12:07 - elements will not be changed and for
12:09 - this reason the Tuple is little bit
12:11 - faster compared to the list so there is
12:13 - a slight performance boost over here now
12:15 - tuples that contain immutable elements
12:18 - can be used as a key for a dictionary as
12:20 - well with the list this is not possible
12:23 - so inside a dictionary as you must be
12:25 - knowing that a key value Pairs and the
12:27 - elements of the Tuple can be considered
12:29 - as keys for the dictionary if you have
12:31 - data that doesn't change implementing it
12:33 - as a tuple will guarantee that it
12:35 - remains right protected so nobody can
12:38 - change the elements of a tuple if you
12:40 - want some data to be fixed whenever you
12:42 - are implementing the list of elements
12:45 - that should be present in a sequence and
12:47 - that must not be changed so Guys these
12:49 - are certain advantages of a tuple over a
12:51 - list in Python Programming please make
12:53 - sure that you practice on your own so
12:54 - that on different inputs you get
12:56 - different outputs please make sure that
12:58 - you like this video so that it it
12:59 - reaches to more people and subscribe to
13:01 - this channel so that you get the
13:02 - notifications on upcoming videos as well
13:04 - the next video that we are going to talk
13:06 - about is string in Python Programming so
13:09 - stay tuned

Cleaned transcript:

hey what's up guys welcome to another video in which we are going to learn about Tuple in Python Programming so guys a tuple in Python is similar to a list basically the difference between the two is that we cannot change the elements of a tuple once it is assigned whereas we can change the elements of our list so previously in the examples of the list that we have seen we were able to change the elements inside the list but the same thing cannot be done with the elements that are present inside the Tuple so how do we create a tuple a tuple is created by placing all the items that is elements inside the parent asset so we have this open and close parenthesis whereas in the list we were using open and close square brackets now these are supposed to be separated by commas over here the parentheses are optional however it is a Code Practice to use them so a tuple can have any number of items and they may be of different types that is integer of load list string Etc so guys let us check this with the help of example now over here as you can see we have my Apple which is the name of the variable that we have given and one two three these are the elements that is present inside the Tuple if you notice we have this open and closed parenthesis instead of the square brackets and that is the difference between the list and the Tuple over here so let us move to the vs code and simply we will provide a tuple one as the variable name over here equal to followed by open and close parenthesis and let's say we Define five elements one to five over here so this is nothing but we have defined the Tuple and we can simply print this Tuple by using the variable name Tuple one over here so let me just save this file and try running this code now as you can see we are getting all the elements that is one two three four five and in this way we have easily created and printed the Tuple elements over here now guys an important thing over here let's say you want to create a python Tuple with only one element so in this case what happens is let's say if you provide where one that is variable one over here and you provide double quotes that is hello with this open and close parent synthesis in this case this will be considered as a string whereas in the variable 2 what you do is after this hello you provide a comma so in this case it will be considered as a tuple so this is very important thing if you want to create a tuple with just a one element you have to use the comma after providing that element over here let us check this with the help of examples now over here let's say I provide where one in this case and then open and close parenthesis and then let's say we have hello over here and then I'll just copy this line of code and paste this and I'll simply provide comma after this element so what we will do is I'll just name this variable name as where2 so let us now confirm the data types of both the variables so we will say print and then inside this we will use the type function in order to find the data type of where one so we provide where one over here and I'll simply copy and paste this line of code and we provide where 2 over here so let me just save this file now enter try running this code so as you can see first one it is showing us that it is a string and the second thing is showing us that it is a tuple now in case if we simply remove this comma from this Tuple so what happens so let me just save this file and try running this code once again as you can see it has become string now both are strings right now if we provide comma over here and comma over here as well so both the variables will be turned to the Tuple data type so guys this is very important if you want to have only one element inside the Tuple make sure that that element is followed by a comma over here in order to make that data type as a tuple now guys moving to next section how do we access the python Tuple elements so there are multiple ways in order to access the elements over here first of all is indexing so this we have already seen previously by using the index number we can access the elements of the Tuple so let's say we have Tuple one over here and we have five elements one two three four five so how do we access these elements by using the indices so we simply have to provide the couple one that is the variable name and Then followed by open and close square brackets this time and let's say we want to print the element that is 3 over here every time remember guys that the index it starts from zero so this first element that is number one it is at the index 0 and then the second element that is number two it is at the index 1 and then the third element that is number three it is at the index 2 over here so we provide the number that is 2 which is the index number in this case so this will tell the python interpreter to access the element that is at the index number 2 for this variable that is Tuple one so over here what will happen is the index number 0 is this and then index number one is this and then we have index number two which is 3 over here and this element should be printed so let me just save this file and try running this code now so as you can see 3 is getting printed similarly let's say if you want to print this number two which is at the index 1 in this case so we have to provide 1 inside this open and close square brackets so let me save this file and try running this code now so 2 is getting printed this time so guys this is one way in order to access the elements by using the indexing we also have something called as negative indexing so let's say if you don't know the number of elements that are present inside the Tuple whereas there is a way in order to find the length of the Tuple but in case you want to access the last element of this Tuple over here so you already know that the first element is at the index 0 so let me just print that so over here we provide Tuple 1 followed by the index number that is 0 in this case I'll save this file and try running this code so one is getting printed now let's say you want to print the last element but you don't know at which index it is so we have something called as negative indexing in which case before the zeroth index the index that is minus 1 it will point to the last element of this double that is 5 over here so when we provide minus 1 in this case this element that is 5 should get printed so let me save this file and try running this code now so 5 is getting printed similarly if you want to get the second last element of this Tuple you can simply provide minus 2 over here so when we provide minus 2 and run this code so 4 is getting displayed which is the second last element so this is like a cycle over here when you use the negative indexing the last elements of this Tuple will start getting printed over here and then guys you can also use the slicing functionality as we have already seen with the list so basically let's say if you want to print the subset of this Tuple between 2 to 4 so what you can do is what is the index of this element that is 2 it is 0 and then one so at the first Index this 2 is present so we will provide one over here followed by a colon and then what is the index of the element that we want that is 4 so the index is it is 0 1 2 and then this index is 3 but we don't want to specify 3 because this is excluded so the next index which is 4 we have to specify that index which will be not included in our slicing operator so when we provide 4 over here always remember that this index on the left hand side will be considered but this index will not be considered the fourth index will not be considered but before this that is the third index will be considered while printing the statement so let me just save this file and try running this code now so as you can see 2 3 and 4 is getting printed the last index it is 4 which is having the element 5 this will not be considered because it is not included in the slicing operator so these are some of the ways that you can use in order to access the python Tuple elements over here now python Tuple methods there are two methods only that is count and index over here what is count so basically in order to get the number of occurrences of a particular element you can use the count method so over here while using the count function we have to use the variable name followed by I taught and then as you can see count and index these are the only two methods the other methods such as appending or removing or deleting the elements are not present that's because as I have already told you the Tuple inside python are not mutable which means we cannot change the elements once they are assigned over here so when we provide count we have to provide one of the elements inside that Tuple so let's say we want to find the occurrence of the element that is 2 over here in this case that means how many times this number 2 is occurring so let me save this file now and try running this code so as you can see the count is 1 over here that's because only one occurrence of number two is present let's say I provide some more occurrences over here so I provide the number 2 2 times over here so the total count becomes 3 in this case over here we have 2 and then two more twos are present so basically the total count is three let me just run this code once again so number of tools that are present over here inside the Tuple is three and that is what we are getting over here and this is the main functionality of the account function now the another function that is index so if you want to get the index of a particular element you can use the index function so after this dot we have something called as index and then inside the open and close parenthesis we have to provide the element for which we want to find the index so let's say I want to find the index of this element that is number 5 over here so it is 4 basically let me just save this file and try running this code and confirm so as you can see 4 that is the index of this element is getting printed over here so Guys these functions you can use based on your requirements as far as Tuple is concerned now one very important thing iterating through a tuple in Python so we can use the for Loop to iterate over the elements of a tuple so basically we have seen this in the previous video as well so far we have printed the elements of the Tuple by using the variable name in this way so let me save this file now and try running this code as you can see all the elements are getting printed but there is a problem over here we are getting this open and close parenthesis also while printing these elements what if we only want to print single element at a time so we can simply use the for Loop and iterate through all the elements over here inside the Tuple so we use the for keyword followed by let's say the temporary variable as the item and then we have the in keyword and then the name of the variable that is the sequence which is Tuple 1 in this case and then we simply have to print this item that is item variable now what will happen is all the items will be printed on separate lines over here because by default the end parameter of this print function is having the slash n character so let me just save this file and try running this code now as you can see all the elements are getting printed on the new line what if we want all the elements to be present on the same line separated by comma over here so we simply have to provide comma and then there is something called as end parameter for this print function so we use that and inside the double quotes we provide the comma over here which will be kind of a separator for all those Elements which will be printed on the terminal so let me just save this file now and try running this code so as you can see all the elements now are getting printed on the same line and they are separated with a comma if you want a space character after comma that can also be done you provide comma followed by the space character let me just save this file now and try running this code so all the elements are separated with a comma character and then a space character additionally for a better readability so guys this is another way you can use the for Loop in order to iterate through all the elements of the Tuple now let us understand what are the different advantages of a tuple over less than python so we generally use tuples for heterogeneous that is different data types and list for homogeneous which means similar data types so in a tuple you can have the different data types as well so basically the Tuple is being used for that purpose only and we cannot change the elements inside the Tuple so since tuples are immutable which means you cannot change the data inside the Tuple once they are assigned iterating through a tuple is faster than with a list so behind the scenes what is happening is the program already knows that the Tuple elements will not be changed and for this reason the Tuple is little bit faster compared to the list so there is a slight performance boost over here now tuples that contain immutable elements can be used as a key for a dictionary as well with the list this is not possible so inside a dictionary as you must be knowing that a key value Pairs and the elements of the Tuple can be considered as keys for the dictionary if you have data that doesn't change implementing it as a tuple will guarantee that it remains right protected so nobody can change the elements of a tuple if you want some data to be fixed whenever you are implementing the list of elements that should be present in a sequence and that must not be changed so Guys these are certain advantages of a tuple over a list in Python Programming please make sure that you practice on your own so that on different inputs you get different outputs please make sure that you like this video so that it it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is string in Python Programming so stay tuned
