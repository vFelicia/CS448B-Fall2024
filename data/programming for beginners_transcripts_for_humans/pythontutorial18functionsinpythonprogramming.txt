With timestamps:

00:00 - hey what's up guys welcome to another
00:02 - video in which we are going to learn
00:03 - about functions in Python Programming so
00:06 - guys we will learn about the python
00:07 - function and the function expressions
00:09 - with the help of examples so basically a
00:12 - function is a block of code that
00:14 - performs a specific task so it can be
00:17 - any task that you want to implement
00:19 - based on your requirements but it is the
00:21 - block of code that you can put inside
00:23 - the function and that block of code will
00:26 - have your implementation of the logic
00:28 - now suppose you need to create a program
00:30 - to create a circle and color it so there
00:33 - are two tasks over here that is first of
00:35 - all in order to create a circle and the
00:37 - second thing is to color it so you can
00:39 - create two functions to solve this
00:41 - problem that is the first function will
00:43 - be to create a circle and that will be
00:46 - one function and another function will
00:48 - be to create a color over here so
00:50 - basically what we have done is we have
00:51 - divided a complex problem into smaller
00:54 - chunks which makes it easier to
00:56 - understand the program and reuse the
00:58 - functions as well so so there are two
01:00 - types of functions so first of all we
01:02 - have already seen some standard Library
01:04 - functions as well one of the example is
01:06 - the print statement that is the print
01:08 - function so these are built-in functions
01:10 - in Python that are available to use so
01:13 - let us check some examples of standard
01:14 - Library functions over here so
01:16 - previously we have seen the print
01:18 - statement so this is nothing but one of
01:20 - the built-in functions which take
01:22 - multiple parameters so one of the
01:24 - parameters is the value so when we are
01:27 - providing programming for beginners the
01:29 - string which is the name of the YouTube
01:31 - channel as well which you should
01:33 - definitely subscribe so this is the
01:35 - string that we have provided to the
01:37 - print function and this string is being
01:39 - passed to the print built-in method and
01:42 - behind the scenes this print function is
01:44 - having some sort of code that will help
01:47 - us in order to print the statement on
01:49 - the terminal so when we save this file
01:51 - and try running this code now basically
01:53 - this programming for beginners is
01:54 - getting printed what we have done we
01:56 - have just called that function and the
01:58 - implementation is B behind the scenes so
02:01 - this is one example of a built-in
02:03 - function similarly we have another
02:04 - built-in function that is range which
02:07 - helps us in order to have the list of
02:09 - numbers from 0 up to the number that we
02:12 - have provided so let's say we provide
02:13 - the number 10 so it will provide us all
02:16 - the numbers before 10 starting from 0.
02:18 - so this is another built-in function so
02:20 - similarly we have other standard Library
02:22 - functions as well now you can also have
02:25 - the user defined functions so in case
02:27 - your requirement is not fulfilled by
02:30 - using one of the standard functions that
02:32 - is being provided by python you can have
02:34 - your own user defined functions also so
02:37 - we can create our own functions based on
02:40 - our requirements and this is the syntax
02:42 - that is first of all we have this
02:43 - keyword that is Def which means Define
02:46 - and then we have the function name so
02:48 - this function name will be the name of
02:50 - the function like this range is the name
02:52 - of the function then the print function
02:54 - the print name is the function name over
02:56 - there so similarly we can have our own
02:58 - function name and after after that we
03:00 - have the list of arguments we can have
03:02 - any number of arguments over here inside
03:04 - that we will have the function body
03:06 - where our implementation code will be
03:09 - present and then we can also have the
03:11 - optional return statement which means it
03:13 - will return some value so over here as
03:15 - you can see this is the example we have
03:17 - the Define keyword and Then followed by
03:19 - the grid function over here so it is not
03:22 - taking any arguments for now it is
03:24 - simply printing some statement that is
03:25 - inside create function now how do we
03:28 - call this function simply we use the
03:30 - function name that is grid followed by
03:32 - open and close parenthesis and then we
03:34 - call the print function and we say
03:36 - outside function so guys let us check
03:38 - this with the help of example over here
03:39 - so simply we will have the Define
03:41 - keyword so t e f and let's say we have
03:44 - sum and then underscore numbers so
03:47 - basically what we are doing over here is
03:49 - we will be adding two numbers so over
03:52 - here we have the open and close
03:53 - parenthesis and then after that we have
03:55 - a colon and let's say we have the number
03:58 - a it is equal to 10 n and then we have
04:01 - number P it is equal to 20 we want to
04:03 - print the sum of these numbers so we
04:06 - simply provide a print function inside
04:08 - this and we say a plus b and then we can
04:12 - also have the string over here let's say
04:14 - we have sum of A and B and then we have
04:19 - colon and then after this we have comma
04:21 - and then we have a plus b over here so
04:24 - guys this is the function that we have
04:25 - already defined we have two numbers that
04:27 - is a is equal to 10 and B is equal to
04:30 - 20. now if we Simply Save this file and
04:32 - try running this code we will not get
04:34 - anything so as you can see there is no
04:36 - print statement which is helping us in
04:38 - order to print something on the terminal
04:40 - why so because this code is present
04:42 - inside a function which is not called
04:44 - yet so we need to call this function
04:46 - that is some numbers so how do we call
04:48 - it by simply calling the name so we
04:51 - simply have to provide some numbers over
04:53 - here and then open and close parenthesis
04:56 - and that's it we have simply called this
04:58 - function which will make the control
04:59 - approach low code to this particular
05:01 - function over here and inside it will go
05:03 - it will check that a value is 10 B value
05:06 - is 20 and it will print sum of A and B
05:09 - it will carry out this operation that is
05:11 - a plus b so let me just save this file
05:13 - and try running this code now so as you
05:15 - can see sum of A and B it is equal to 30
05:18 - and that is how we can simply provide
05:20 - the function now guys why do we write
05:22 - this function just to add two numbers so
05:24 - let's say you have a scenario you have 8
05:27 - is equal to 10 and then we have B it is
05:29 - equal to 20 and you want to print the
05:31 - sum so you can simply provide print a
05:34 - plus b so you will get the answer as 30.
05:37 - now with the same requirement you have
05:39 - another requirement as well in the same
05:41 - code that is with this particular
05:43 - Edition you want to add more two numbers
05:45 - so what you will do is you will simply
05:47 - copy and paste these lines of code once
05:50 - again that is the three lines of code
05:51 - over here but this time the age value is
05:53 - something else so let's say we have
05:55 - something like 50 and then 60 over here
05:57 - so what will happen is with this print
05:59 - statement it will print the sum of these
06:01 - two numbers now let's say there is
06:02 - another requirement in which case all
06:04 - the sum needs to be printed at once and
06:07 - you have two more numbers so you will
06:09 - again copy these lines of code and then
06:11 - again paste this over here and then
06:13 - let's say the numbers are 100 and then
06:15 - 200 over here that is B is 200 so let me
06:18 - just save this file and try running this
06:19 - code now so what is happening is all the
06:22 - sum is getting printed once that is 30
06:24 - 110 and 300 but let's say similarly if
06:27 - you have 10 sets of A and B values in
06:30 - this way and you want to print all the
06:32 - sum of those numbers so what you will do
06:35 - so your code will become little bit
06:36 - complicated and it will be little bit
06:38 - lengthy as well so in order to avoid
06:41 - this what you can do is you can simply
06:43 - have the function and inside the
06:45 - function you can have those variables
06:46 - and have the sum of those variables so
06:49 - in order to achieve your task that is
06:51 - have the sum of multiple numbers over
06:53 - here in one screen and using the
06:55 - function what you can simply do is you
06:57 - can pass these values that is 10 20 50
07:01 - 60 and 120 while calling the function
07:04 - that is some number so I'll just remove
07:06 - these lines of code now over here and
07:08 - what we will do is I will simply provide
07:10 - the parameters that is the arguments
07:12 - over here that is a and Then followed by
07:14 - comma and then we have B now these A and
07:17 - B are not required because the values
07:19 - will come whenever this function is
07:21 - being called so I'll just remove these
07:23 - lines of code over here you will simply
07:25 - have one print statement inside the
07:27 - function and the sum of A and B it is a
07:30 - plus b so this sum will get printed over
07:32 - here while calling the function you are
07:34 - supposed to provide the A and B value so
07:36 - what we will simply do is I will simply
07:38 - call this some numbers over here and I
07:41 - will provide the values of A and B so
07:43 - what we had provided we had provided 10
07:46 - and 20 and then again we had the
07:48 - requirement that is to add the other two
07:50 - numbers which were 50 and 16. so again I
07:53 - will just copy paste the sum numbers
07:55 - function and provide the different
07:57 - values this time and then again I will
07:59 - copy and paste this once again with some
08:02 - different values so hundred and two
08:04 - hundred so as you can see our code has
08:07 - become little bit cleaner instead of
08:08 - having three lines of code in order to
08:11 - add two numbers every time for which our
08:13 - code has also become lengthy we have a
08:16 - very short code and it is very clean as
08:18 - well it is very readable as well so let
08:20 - me just save this file now and try
08:21 - running this code so as you can see we
08:23 - are getting sum of A and B it is 30 sum
08:26 - of A and B it is 110 and sum of A and B
08:29 - it is equal to 300 you can also
08:31 - customize your function in order to have
08:34 - the values of A and B over here so we
08:36 - can simply say over here we have the
08:39 - double quotes and then we have comma and
08:42 - then we have a over here and then we
08:44 - have double quotes and then we have and
08:46 - keyword double quotes and then B value
08:49 - and then comma and then double quotes
08:51 - over here before the colon so as you can
08:54 - see A and B values can also be printed
08:56 - so let me just save this file and try
08:58 - running this code now so as you can see
09:00 - 10 and 20 were passed first time so it
09:02 - is saying sum of 10 20 it is 30 then sum
09:04 - of 15 and 68 is 110 and then sum of 100
09:07 - and 200 is 300. you can call this
09:09 - function any number of times with
09:11 - different values in order to get the
09:13 - different sum over here I'll say 200
09:16 - plus 300 again and then let's say I
09:19 - provide 400 and 500 over here let me
09:22 - just save this file and try running this
09:24 - code all the sums are getting printed
09:25 - and our code is also very clean over
09:27 - here so guys this is the main
09:29 - functionality of using python functions
09:31 - you can simply have the Define keyword
09:33 - followed by the function name and then
09:35 - this arguments list is optional over
09:37 - here you can pass it or if you don't
09:39 - want to pass it there is no need to pass
09:41 - so as you can see over here python
09:43 - function arguments this we have already
09:45 - covered that is in order to pass the
09:46 - argument now one last thing is return
09:48 - statement so guys we have not checked
09:51 - any return statement over here so return
09:53 - is nothing but it will return some value
09:55 - so let's say instead of having the print
09:57 - statement over here we want the print
09:59 - statement outside the function so what
10:02 - we can simply do is we can simply return
10:04 - the expression that is a plus b so we
10:07 - can have the return keyword over here so
10:10 - it will say return a plus b so simply
10:12 - whatever value were being passed over
10:14 - here that is 10 and 20 it will return
10:17 - the sum that is 10 plus 28 is equal to
10:19 - 30 to this code and over here we should
10:22 - have something in order to catch that
10:24 - value so I'll just remove these lines of
10:26 - code for now and then let's say in order
10:28 - to catch the value I provide the sum
10:31 - variable so this sum variable is
10:33 - assigned the value that is being
10:34 - returned from the sum numbers over here
10:37 - which is equal to the sum of these two
10:39 - numbers and then simply we can have the
10:41 - print statement in order to print the
10:43 - sum value so some variable can be
10:46 - printed so let me just save this file
10:47 - and try running this code now so as you
10:49 - can see 30 is getting printed that's
10:51 - because we have passed 10 and 20 over
10:53 - here also to make it more short what we
10:55 - can do is instead of storing the value
10:58 - inside this variable we can simply have
11:00 - the print statement and inside the print
11:02 - statement we can simply call the sum
11:04 - numbers function so as you can see we
11:06 - have the print statement inside this we
11:08 - are calling the sum numbers 10 and 20 so
11:11 - it will return 10 plus 20 it is equal to
11:13 - 30 so let me just save this file and try
11:15 - running this code now so 30 is being
11:17 - printed let's say I change the numbers
11:18 - to 20 and 50 over here so 20 plus 50
11:22 - should be 70 let me just run this code
11:24 - so 70 is getting printed and based on
11:27 - the requirement you can format the print
11:28 - function that is you can have any
11:30 - statements being printed over here along
11:32 - with the sum of the numbers so guys this
11:34 - is one of the examples of how you can
11:36 - Define the functions and use them you
11:39 - can have any other logic inside the
11:41 - functions that you want to implement
11:42 - based on your requirements so guys
11:44 - practice on your own so that on
11:45 - different inputs you get different
11:47 - output the important benefits of using
11:49 - these functions are the code reusability
11:51 - that means you can reduce the lines of
11:53 - code that you want to implement and the
11:56 - code readability as well it becomes very
11:58 - important when someone else reads your
12:00 - code and he or she understands it more
12:02 - appropriately so guys please make sure
12:04 - that you like this video so that it
12:06 - reaches to more people and subscribe to
12:08 - this channel so that you get the
12:09 - notifications on upcoming videos as well
12:11 - the next video that we are going to talk
12:12 - about is function arguments in Python
12:15 - Programming so stay tuned

Cleaned transcript:

hey what's up guys welcome to another video in which we are going to learn about functions in Python Programming so guys we will learn about the python function and the function expressions with the help of examples so basically a function is a block of code that performs a specific task so it can be any task that you want to implement based on your requirements but it is the block of code that you can put inside the function and that block of code will have your implementation of the logic now suppose you need to create a program to create a circle and color it so there are two tasks over here that is first of all in order to create a circle and the second thing is to color it so you can create two functions to solve this problem that is the first function will be to create a circle and that will be one function and another function will be to create a color over here so basically what we have done is we have divided a complex problem into smaller chunks which makes it easier to understand the program and reuse the functions as well so so there are two types of functions so first of all we have already seen some standard Library functions as well one of the example is the print statement that is the print function so these are builtin functions in Python that are available to use so let us check some examples of standard Library functions over here so previously we have seen the print statement so this is nothing but one of the builtin functions which take multiple parameters so one of the parameters is the value so when we are providing programming for beginners the string which is the name of the YouTube channel as well which you should definitely subscribe so this is the string that we have provided to the print function and this string is being passed to the print builtin method and behind the scenes this print function is having some sort of code that will help us in order to print the statement on the terminal so when we save this file and try running this code now basically this programming for beginners is getting printed what we have done we have just called that function and the implementation is B behind the scenes so this is one example of a builtin function similarly we have another builtin function that is range which helps us in order to have the list of numbers from 0 up to the number that we have provided so let's say we provide the number 10 so it will provide us all the numbers before 10 starting from 0. so this is another builtin function so similarly we have other standard Library functions as well now you can also have the user defined functions so in case your requirement is not fulfilled by using one of the standard functions that is being provided by python you can have your own user defined functions also so we can create our own functions based on our requirements and this is the syntax that is first of all we have this keyword that is Def which means Define and then we have the function name so this function name will be the name of the function like this range is the name of the function then the print function the print name is the function name over there so similarly we can have our own function name and after after that we have the list of arguments we can have any number of arguments over here inside that we will have the function body where our implementation code will be present and then we can also have the optional return statement which means it will return some value so over here as you can see this is the example we have the Define keyword and Then followed by the grid function over here so it is not taking any arguments for now it is simply printing some statement that is inside create function now how do we call this function simply we use the function name that is grid followed by open and close parenthesis and then we call the print function and we say outside function so guys let us check this with the help of example over here so simply we will have the Define keyword so t e f and let's say we have sum and then underscore numbers so basically what we are doing over here is we will be adding two numbers so over here we have the open and close parenthesis and then after that we have a colon and let's say we have the number a it is equal to 10 n and then we have number P it is equal to 20 we want to print the sum of these numbers so we simply provide a print function inside this and we say a plus b and then we can also have the string over here let's say we have sum of A and B and then we have colon and then after this we have comma and then we have a plus b over here so guys this is the function that we have already defined we have two numbers that is a is equal to 10 and B is equal to 20. now if we Simply Save this file and try running this code we will not get anything so as you can see there is no print statement which is helping us in order to print something on the terminal why so because this code is present inside a function which is not called yet so we need to call this function that is some numbers so how do we call it by simply calling the name so we simply have to provide some numbers over here and then open and close parenthesis and that's it we have simply called this function which will make the control approach low code to this particular function over here and inside it will go it will check that a value is 10 B value is 20 and it will print sum of A and B it will carry out this operation that is a plus b so let me just save this file and try running this code now so as you can see sum of A and B it is equal to 30 and that is how we can simply provide the function now guys why do we write this function just to add two numbers so let's say you have a scenario you have 8 is equal to 10 and then we have B it is equal to 20 and you want to print the sum so you can simply provide print a plus b so you will get the answer as 30. now with the same requirement you have another requirement as well in the same code that is with this particular Edition you want to add more two numbers so what you will do is you will simply copy and paste these lines of code once again that is the three lines of code over here but this time the age value is something else so let's say we have something like 50 and then 60 over here so what will happen is with this print statement it will print the sum of these two numbers now let's say there is another requirement in which case all the sum needs to be printed at once and you have two more numbers so you will again copy these lines of code and then again paste this over here and then let's say the numbers are 100 and then 200 over here that is B is 200 so let me just save this file and try running this code now so what is happening is all the sum is getting printed once that is 30 110 and 300 but let's say similarly if you have 10 sets of A and B values in this way and you want to print all the sum of those numbers so what you will do so your code will become little bit complicated and it will be little bit lengthy as well so in order to avoid this what you can do is you can simply have the function and inside the function you can have those variables and have the sum of those variables so in order to achieve your task that is have the sum of multiple numbers over here in one screen and using the function what you can simply do is you can pass these values that is 10 20 50 60 and 120 while calling the function that is some number so I'll just remove these lines of code now over here and what we will do is I will simply provide the parameters that is the arguments over here that is a and Then followed by comma and then we have B now these A and B are not required because the values will come whenever this function is being called so I'll just remove these lines of code over here you will simply have one print statement inside the function and the sum of A and B it is a plus b so this sum will get printed over here while calling the function you are supposed to provide the A and B value so what we will simply do is I will simply call this some numbers over here and I will provide the values of A and B so what we had provided we had provided 10 and 20 and then again we had the requirement that is to add the other two numbers which were 50 and 16. so again I will just copy paste the sum numbers function and provide the different values this time and then again I will copy and paste this once again with some different values so hundred and two hundred so as you can see our code has become little bit cleaner instead of having three lines of code in order to add two numbers every time for which our code has also become lengthy we have a very short code and it is very clean as well it is very readable as well so let me just save this file now and try running this code so as you can see we are getting sum of A and B it is 30 sum of A and B it is 110 and sum of A and B it is equal to 300 you can also customize your function in order to have the values of A and B over here so we can simply say over here we have the double quotes and then we have comma and then we have a over here and then we have double quotes and then we have and keyword double quotes and then B value and then comma and then double quotes over here before the colon so as you can see A and B values can also be printed so let me just save this file and try running this code now so as you can see 10 and 20 were passed first time so it is saying sum of 10 20 it is 30 then sum of 15 and 68 is 110 and then sum of 100 and 200 is 300. you can call this function any number of times with different values in order to get the different sum over here I'll say 200 plus 300 again and then let's say I provide 400 and 500 over here let me just save this file and try running this code all the sums are getting printed and our code is also very clean over here so guys this is the main functionality of using python functions you can simply have the Define keyword followed by the function name and then this arguments list is optional over here you can pass it or if you don't want to pass it there is no need to pass so as you can see over here python function arguments this we have already covered that is in order to pass the argument now one last thing is return statement so guys we have not checked any return statement over here so return is nothing but it will return some value so let's say instead of having the print statement over here we want the print statement outside the function so what we can simply do is we can simply return the expression that is a plus b so we can have the return keyword over here so it will say return a plus b so simply whatever value were being passed over here that is 10 and 20 it will return the sum that is 10 plus 28 is equal to 30 to this code and over here we should have something in order to catch that value so I'll just remove these lines of code for now and then let's say in order to catch the value I provide the sum variable so this sum variable is assigned the value that is being returned from the sum numbers over here which is equal to the sum of these two numbers and then simply we can have the print statement in order to print the sum value so some variable can be printed so let me just save this file and try running this code now so as you can see 30 is getting printed that's because we have passed 10 and 20 over here also to make it more short what we can do is instead of storing the value inside this variable we can simply have the print statement and inside the print statement we can simply call the sum numbers function so as you can see we have the print statement inside this we are calling the sum numbers 10 and 20 so it will return 10 plus 20 it is equal to 30 so let me just save this file and try running this code now so 30 is being printed let's say I change the numbers to 20 and 50 over here so 20 plus 50 should be 70 let me just run this code so 70 is getting printed and based on the requirement you can format the print function that is you can have any statements being printed over here along with the sum of the numbers so guys this is one of the examples of how you can Define the functions and use them you can have any other logic inside the functions that you want to implement based on your requirements so guys practice on your own so that on different inputs you get different output the important benefits of using these functions are the code reusability that means you can reduce the lines of code that you want to implement and the code readability as well it becomes very important when someone else reads your code and he or she understands it more appropriately so guys please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is function arguments in Python Programming so stay tuned
