With timestamps:

00:00 - so now we will see display property in
00:02 - CSS so guys basically the display
00:04 - property is used to specify how an
00:07 - element is displayed on the web page so
00:10 - every HTML element has a default display
00:13 - value and depending on what type of
00:16 - element it is the display value will be
00:18 - set on the web page Now the default
00:21 - display value for most of the elements
00:23 - is either block or inline and this we
00:26 - are going to check with the help of
00:27 - examples as well now the display proper
00:30 - is used to change the default display
00:32 - behavior of the HTML elements guys over
00:35 - here the first display value is the
00:37 - Block Level elements in this case so
00:40 - basically a block level element always
00:42 - starts on a new line and takes up the
00:45 - full width that is available on the
00:47 - screen which means it stretches out to
00:49 - the left and the right as far as it can
00:52 - and basically these are certain examples
00:54 - of the Block Level elements over here we
00:57 - have already seen that the div tag take
00:59 - takes the entire width of the screen
01:02 - also the H1 up to H6 tags which are the
01:05 - header tags will take the entire width
01:07 - of the screen so let us check these with
01:09 - the help of examples over here in the
01:11 - VSS code so I'm going to Simply remove
01:14 - the previous lines of code in the HTML
01:17 - and the style. CSS files so guys over
01:19 - here inside the HTML file inside the
01:22 - body tag simply we are going to have the
01:24 - div tag in this case so basically we are
01:26 - going to say this is a test div with
01:29 - block and Then followed by hyphen and we
01:31 - will say block element so guys basically
01:34 - we are going to identify that this is
01:36 - the block element over here and apart
01:39 - from this we will also have the
01:40 - paragraph tag and we will say this is a
01:44 - paragraph and again we will say this is
01:46 - the block element so guys let me just
01:49 - save this file now and try reloading
01:51 - this page on the browser so as you can
01:53 - see we have this is a test D which is a
01:55 - block element and it is taking the
01:58 - entire width of the screen and then
02:00 - again we have the paragraph tag which is
02:02 - taking the entire width of the screen
02:04 - now guys to understand this more clearly
02:07 - let us have the background color as well
02:09 - so that it looks like this is already
02:11 - taking the entire width of the screen
02:14 - over here so in the style. CSS file in
02:17 - this case simply we are going to have
02:19 - the div tag followed by the P tag as
02:21 - well so both the tags we have separated
02:23 - using the comma since we are going to
02:25 - have the background color over here and
02:28 - the same color we are going to apply so
02:30 - let's say we provide the background
02:31 - color of yellow in this case so guys
02:34 - when you want to apply certain CSS
02:36 - property that is the same CSS property
02:38 - to the multiple tags or the multiple IDs
02:41 - of the tags or any other CSS selectors
02:44 - of the tags you can use these comma
02:47 - separated tag names or the other CSS
02:50 - selectors as well so let me just save
02:52 - this file now and try reloading this
02:54 - page once again on the browser so now as
02:56 - you can see the div element and the
02:59 - paragraph element is taking the entire
03:01 - width of the screen and this can be
03:03 - proved by seeing that we have the
03:05 - background color up to the width of the
03:07 - screen over here right from the left up
03:10 - to the right of the screen so guys this
03:12 - is the way that the Block Level elements
03:14 - work and these are certain examples
03:16 - apart from this we also have the headers
03:18 - which are the Block Level elements and
03:20 - then we have the form tag header tag
03:22 - footer tag and the section tag over here
03:25 - so you can try these tags as well as a
03:27 - homework for you and check how these
03:29 - Block Level elements work and apart from
03:31 - this we also have the second display
03:33 - element that is the inline element in
03:36 - this case now guys before moving to
03:37 - inline elements let us verify the CSS
03:40 - properties of both these HTML tags so
03:43 - simply I'm going to right click over
03:45 - here and click on the inspect option to
03:48 - see the CSS property so as you can see
03:50 - already for the div tag over here we
03:53 - have the display as block that is the
03:55 - default display value that is getting
03:57 - displayed and let us check for the
03:59 - paragraph tag that is the P tag over
04:01 - here so again we have the background
04:04 - color that is yellow for the P tag and
04:06 - then we also have the display equal to
04:09 - block for the P tag in this case and
04:12 - automatically we also have the margins
04:14 - that are getting implemented over here
04:16 - so guys this is the default behavior for
04:19 - these tags that is the div tag and the
04:21 - paragraph tag and the other list of tags
04:23 - that we have seen in which case the
04:25 - display CSS property will be provided
04:28 - with the block value by default now guys
04:30 - apart from this let us see the other
04:32 - inline elements over here so an inline
04:35 - element does not start on a new line and
04:37 - it only takes up as much width as
04:40 - necessary so guys over here we have seen
04:42 - that the block element is taking the
04:44 - entire width of the screen but in case
04:47 - of the inline element it will only take
04:50 - the width as much as required by the
04:52 - content of that particular HTML tag so
04:55 - guys let us check that as well some of
04:57 - the examples are the span tag and then
05:00 - we also have the hyperlink that is the
05:02 - anchor tag over here and then we also
05:04 - have the image tag so guys let us check
05:07 - the example of the span tag in this case
05:09 - so what I'm going to do is simply inside
05:12 - the HTML file over here we are going to
05:14 - define the span tag in this case and
05:17 - simply we are going to say this is a
05:19 - span tag and Then followed by hyphen and
05:23 - then we will say inline element so guys
05:25 - let me just save this file now and try
05:28 - reloading this page once again on the
05:29 - browser so as you can see the content is
05:32 - getting displayed currently we cannot
05:34 - see any difference between the span tag
05:36 - and the paragraph tag and the diff tag
05:38 - but the background color has made it
05:40 - more clear that both these tags are
05:42 - taking the entire width of the screen we
05:45 - can also see whether this particular
05:46 - span tag is taking the entire width of
05:49 - the screen let us check that so simply
05:51 - we can go to the style. CSS file over
05:53 - here and let's say we want the same
05:55 - background color that is yellow color to
05:57 - be displayed for the span tag as well so
06:00 - after the P tag we are going to provide
06:02 - comma and then simply we are going to
06:04 - provide the span tag in this case so
06:06 - guys all the three tags are having the
06:08 - same background color but let us see
06:10 - what will be the difference so let me
06:12 - just save this file now and try
06:14 - reloading this page once again on the
06:16 - browser so as you can see the background
06:19 - color for this pen tag is only applied
06:22 - up to this particular point where the
06:24 - content is getting displayed so guys
06:26 - basically it is not taking the entire
06:28 - width of the screen over here right now
06:31 - but it is only taking this much space
06:34 - inside which the content is getting
06:36 - displayed now guys let us provide
06:38 - another span tag after this first span
06:40 - tag over here inside our code so what we
06:43 - can do is let's say we provide a full
06:45 - stop over here and then we have a space
06:48 - character at the end of the span tag and
06:51 - let us Define the other span tag and we
06:53 - will say this is another span tag so
06:57 - guys basically we are defining another
06:59 - span tag over here and if you notice the
07:02 - content will be continued on the same
07:05 - line that's because the span tags are
07:07 - defined as the inline elements over here
07:10 - and whatever element that we Define
07:12 - after the inline element and if we have
07:15 - another inline element after the first
07:17 - inline element then both the HTML
07:20 - elements that is the content will be
07:22 - displayed on the same line so let me
07:24 - just save this file now and try
07:26 - reloading this page once again on the
07:27 - browser so as you can see see the
07:29 - content of both the span tags are
07:31 - getting displayed on the same line
07:33 - that's because these tags are the inline
07:36 - tags over here let us provide the other
07:38 - example that is of the anchor tag as
07:41 - well so simply I'm going to come on the
07:43 - next line after the full stop over here
07:45 - and then we have the anchor tag in this
07:47 - case and for the hrf attribute simply we
07:50 - are going to provide the hash character
07:52 - over here and we will say click here as
07:55 - the text of the link so guys let me just
07:57 - save this file now and try reloading
07:59 - this page once again on the browser so
08:02 - as you can see the a tag is also the
08:04 - inline element tag over here and it is
08:07 - getting displayed on the same line
08:09 - rather than displaying it on the next
08:11 - line but let's say if we have another
08:13 - block element after this a tag so so
08:16 - let's say we have the header tag over
08:18 - here so simply we are going to define
08:19 - the H3 tag in this case and we will say
08:22 - this is heading three so guys basically
08:25 - since this is the Block Level element
08:28 - then the h three tag content should be
08:31 - displayed on the next line over here
08:33 - after providing certain spacing on the
08:35 - top and the bottom so let me just save
08:37 - this file now and try reloading this
08:40 - page once again on the browser so as you
08:42 - can see automatically The Heading
08:44 - content is getting displayed on the next
08:46 - line after this inline element so guys
08:49 - this is the difference between the Block
08:51 - Level element and the inline elements
08:53 - over here basically the Block Level
08:55 - element takes the entire width of the
08:57 - screen and it also provides the
08:59 - automatic spacing to the top and the
09:01 - bottom of the HTML element whereas the
09:04 - inline element only takes the required
09:06 - space as far as its content is concerned
09:09 - now guys apart from this we also have
09:11 - something called as display none over
09:12 - here so guys to understand this more
09:14 - clearly what we can do is let's say this
09:17 - click here that is the anchor tag we get
09:19 - it in between both these span tags in
09:22 - this case so inside this HTML code over
09:25 - here simply I'm going to cut this line
09:26 - of code and paste it in between the span
09:29 - tags so let me just save this file now
09:31 - and try reloading this page once again
09:33 - on the browser so as you can see we have
09:35 - the first span tag over here followed by
09:38 - the a tag that is the anchor tag and
09:41 - Then followed by another span tag in
09:43 - this case now guys let's say we want to
09:45 - provide display none property for the a
09:48 - tag now guys what is the meaning of
09:49 - display none basically it is going to
09:52 - hide this particular HTML element from
09:54 - the web page so let us check that as
09:57 - well so inside the style. Cs s file over
10:00 - here specifically for the a tag we want
10:02 - the display property to be set as none
10:05 - so in this case we are going to provide
10:07 - the display CSS property and the value
10:10 - will be none over here so let me just
10:12 - save this file now and try reloading
10:14 - this page once again on the browser if
10:16 - you notice currently we have the click
10:18 - here text which is the anchor tag in
10:21 - this case now when we reload this page
10:23 - as you can see now it is no longer
10:25 - present so guys we use the display none
10:28 - property in such cases where we don't
10:30 - want to display the HTML element or we
10:32 - want to temporarily hide the HTML
10:35 - element from the user in order to
10:37 - achieve certain functionality so if you
10:39 - go to the inspect option over here let
10:42 - us go to the inspect option in this case
10:45 - and we will be seeing that there is the
10:46 - a tag over here but it is having the
10:49 - display property as none so when we
10:51 - uncheck this property so again it is
10:53 - getting displayed right now and then
10:55 - when we check this property it is
10:57 - getting hidden and one important thing
10:59 - that you can notice is there is no space
11:02 - that is left for that particular a tag
11:04 - and the other inline element is taking
11:07 - the space for that particular anchor
11:09 - text over here so guys this is the
11:11 - functionality of the display none
11:13 - property now apart from this we also
11:15 - have something called as visibility is
11:17 - equal to Hidden so guys we have the
11:19 - visibility CSS property that we can use
11:22 - in order to hide the HTML element but
11:24 - there is a difference between the
11:26 - display none property and the hidden
11:28 - value of of the visibility CSS property
11:31 - so let us check that as well so instead
11:33 - of providing display none over here let
11:35 - me just comment out this line of code
11:37 - and what we will do is simply we are
11:39 - going to say visibility CSS property in
11:42 - this case and we will say hidden so guys
11:44 - let me just save this file now and try
11:46 - reloading this page once again on the
11:48 - browser so now if you see instead of
11:51 - display property since we are using
11:53 - visibility hidden so the space that is
11:55 - required by that particular anchor text
11:58 - is still getting reserved over here and
12:00 - the next inline element is getting
12:02 - displayed after the space that is
12:04 - reserved for this particular inline
12:06 - element over here so guys this is the
12:08 - main difference when we use the display
12:11 - none property so if we check the display
12:13 - none property over here the space is no
12:16 - longer present for that particular HTML
12:18 - element but when we use the visibility
12:21 - hidden property then the space will be
12:23 - reserved so when we check this
12:25 - particular CSS property over here so the
12:28 - HTML element is hidden but the space is
12:30 - reserved for that HTML element So based
12:33 - on your requirements if you want to hide
12:35 - any of the whether it is a inline
12:37 - element or the block element you can
12:39 - either use display none property if you
12:42 - don't want to reserve the space for that
12:44 - particular element and if you want to
12:46 - reserve that space then you can use the
12:48 - visibility is equal to Hidden property
12:50 - over here now guys apart from this we
12:52 - also have something called as inline
12:54 - block so we have seen the Block Level
12:56 - element and the inline element as well
12:58 - well what is the meaning of inline block
13:01 - so guys let's say we remove the display
13:03 - and the visibility CSS property in this
13:05 - case so guys after removing the display
13:07 - and the visibility properties over here
13:10 - let's say we want to apply certain
13:12 - height to this anchor tag so we provide
13:15 - the height CSS property and for this
13:17 - height let's say we want the 50 pixels
13:20 - value to be provided so let me just save
13:22 - this file now and try reloading this
13:24 - page once again on the browser so guys
13:26 - as you can see we have provided the
13:28 - height of 50 pixels over here but let us
13:31 - say we want to provide certain
13:32 - background color as well so that we can
13:35 - see that height of 50 pixels so in this
13:37 - case let us say we provide the
13:39 - background color and this color will be
13:41 - aqua color over here so let me just
13:44 - reload this page once again on the
13:45 - browser so as you can see we have
13:47 - provided the aqua background color as
13:49 - well but guys this particular height
13:52 - property is not getting implemented over
13:54 - here and we have this little icon in
13:56 - this case and it says the display inline
13:59 - property prevents height from having an
14:01 - effect try setting display to something
14:04 - other than inline guys in this specific
14:06 - example whenever you want to set the
14:08 - width and height of the inline elements
14:11 - you can make the display property of
14:13 - that inline element as inline block so
14:16 - guys let us check that as well so simply
14:18 - inside the anchor tag we will have the
14:21 - display CSS property by default it is
14:23 - set to the inline value for this
14:25 - particular anchor tag but in this case
14:28 - we will say in line hyphen block so guys
14:31 - this is the value that we are going to
14:33 - use and this value will help us in order
14:36 - to set the height and width for that
14:38 - particular HTML element so let me just
14:41 - save this file now and try reloading
14:43 - this page once again on the browser so
14:45 - now if you see we have the height of 50
14:48 - pixels that is getting displayed and it
14:50 - can be proved since we are getting the
14:52 - background color as Aqua for this
14:54 - particular link tag which is having the
14:56 - height of 50 pixels over here and now
14:58 - now there is no longer any icon that is
15:00 - getting displayed over here so we can
15:02 - uncheck the height as well so by default
15:04 - it is taking the required height in this
15:07 - case and when we check this option so it
15:09 - is taking the 50 pixels height in this
15:11 - case so guys basically you can use the
15:13 - inline block display value in order to
15:17 - set the height and width of a particular
15:19 - HTML element specifically for those
15:21 - elements for which the display value is
15:24 - in line so guys in this way you can use
15:26 - the inline and the Block Level elements
15:28 - over here based on your requirements
15:30 - comment in the comment section below
15:31 - whether you have learned something out
15:33 - of this video please make sure that you
15:35 - like this video so that it reaches to
15:37 - more people and subscribe to this
15:38 - channel so that you get the
15:39 - notifications on upcoming videos as well
15:42 - the next video that we are going to talk
15:43 - about is going to be an exercise to
15:46 - create the navigation bar in CSS so stay
15:50 - tuned

Cleaned transcript:

so now we will see display property in CSS so guys basically the display property is used to specify how an element is displayed on the web page so every HTML element has a default display value and depending on what type of element it is the display value will be set on the web page Now the default display value for most of the elements is either block or inline and this we are going to check with the help of examples as well now the display proper is used to change the default display behavior of the HTML elements guys over here the first display value is the Block Level elements in this case so basically a block level element always starts on a new line and takes up the full width that is available on the screen which means it stretches out to the left and the right as far as it can and basically these are certain examples of the Block Level elements over here we have already seen that the div tag take takes the entire width of the screen also the H1 up to H6 tags which are the header tags will take the entire width of the screen so let us check these with the help of examples over here in the VSS code so I'm going to Simply remove the previous lines of code in the HTML and the style. CSS files so guys over here inside the HTML file inside the body tag simply we are going to have the div tag in this case so basically we are going to say this is a test div with block and Then followed by hyphen and we will say block element so guys basically we are going to identify that this is the block element over here and apart from this we will also have the paragraph tag and we will say this is a paragraph and again we will say this is the block element so guys let me just save this file now and try reloading this page on the browser so as you can see we have this is a test D which is a block element and it is taking the entire width of the screen and then again we have the paragraph tag which is taking the entire width of the screen now guys to understand this more clearly let us have the background color as well so that it looks like this is already taking the entire width of the screen over here so in the style. CSS file in this case simply we are going to have the div tag followed by the P tag as well so both the tags we have separated using the comma since we are going to have the background color over here and the same color we are going to apply so let's say we provide the background color of yellow in this case so guys when you want to apply certain CSS property that is the same CSS property to the multiple tags or the multiple IDs of the tags or any other CSS selectors of the tags you can use these comma separated tag names or the other CSS selectors as well so let me just save this file now and try reloading this page once again on the browser so now as you can see the div element and the paragraph element is taking the entire width of the screen and this can be proved by seeing that we have the background color up to the width of the screen over here right from the left up to the right of the screen so guys this is the way that the Block Level elements work and these are certain examples apart from this we also have the headers which are the Block Level elements and then we have the form tag header tag footer tag and the section tag over here so you can try these tags as well as a homework for you and check how these Block Level elements work and apart from this we also have the second display element that is the inline element in this case now guys before moving to inline elements let us verify the CSS properties of both these HTML tags so simply I'm going to right click over here and click on the inspect option to see the CSS property so as you can see already for the div tag over here we have the display as block that is the default display value that is getting displayed and let us check for the paragraph tag that is the P tag over here so again we have the background color that is yellow for the P tag and then we also have the display equal to block for the P tag in this case and automatically we also have the margins that are getting implemented over here so guys this is the default behavior for these tags that is the div tag and the paragraph tag and the other list of tags that we have seen in which case the display CSS property will be provided with the block value by default now guys apart from this let us see the other inline elements over here so an inline element does not start on a new line and it only takes up as much width as necessary so guys over here we have seen that the block element is taking the entire width of the screen but in case of the inline element it will only take the width as much as required by the content of that particular HTML tag so guys let us check that as well some of the examples are the span tag and then we also have the hyperlink that is the anchor tag over here and then we also have the image tag so guys let us check the example of the span tag in this case so what I'm going to do is simply inside the HTML file over here we are going to define the span tag in this case and simply we are going to say this is a span tag and Then followed by hyphen and then we will say inline element so guys let me just save this file now and try reloading this page once again on the browser so as you can see the content is getting displayed currently we cannot see any difference between the span tag and the paragraph tag and the diff tag but the background color has made it more clear that both these tags are taking the entire width of the screen we can also see whether this particular span tag is taking the entire width of the screen let us check that so simply we can go to the style. CSS file over here and let's say we want the same background color that is yellow color to be displayed for the span tag as well so after the P tag we are going to provide comma and then simply we are going to provide the span tag in this case so guys all the three tags are having the same background color but let us see what will be the difference so let me just save this file now and try reloading this page once again on the browser so as you can see the background color for this pen tag is only applied up to this particular point where the content is getting displayed so guys basically it is not taking the entire width of the screen over here right now but it is only taking this much space inside which the content is getting displayed now guys let us provide another span tag after this first span tag over here inside our code so what we can do is let's say we provide a full stop over here and then we have a space character at the end of the span tag and let us Define the other span tag and we will say this is another span tag so guys basically we are defining another span tag over here and if you notice the content will be continued on the same line that's because the span tags are defined as the inline elements over here and whatever element that we Define after the inline element and if we have another inline element after the first inline element then both the HTML elements that is the content will be displayed on the same line so let me just save this file now and try reloading this page once again on the browser so as you can see see the content of both the span tags are getting displayed on the same line that's because these tags are the inline tags over here let us provide the other example that is of the anchor tag as well so simply I'm going to come on the next line after the full stop over here and then we have the anchor tag in this case and for the hrf attribute simply we are going to provide the hash character over here and we will say click here as the text of the link so guys let me just save this file now and try reloading this page once again on the browser so as you can see the a tag is also the inline element tag over here and it is getting displayed on the same line rather than displaying it on the next line but let's say if we have another block element after this a tag so so let's say we have the header tag over here so simply we are going to define the H3 tag in this case and we will say this is heading three so guys basically since this is the Block Level element then the h three tag content should be displayed on the next line over here after providing certain spacing on the top and the bottom so let me just save this file now and try reloading this page once again on the browser so as you can see automatically The Heading content is getting displayed on the next line after this inline element so guys this is the difference between the Block Level element and the inline elements over here basically the Block Level element takes the entire width of the screen and it also provides the automatic spacing to the top and the bottom of the HTML element whereas the inline element only takes the required space as far as its content is concerned now guys apart from this we also have something called as display none over here so guys to understand this more clearly what we can do is let's say this click here that is the anchor tag we get it in between both these span tags in this case so inside this HTML code over here simply I'm going to cut this line of code and paste it in between the span tags so let me just save this file now and try reloading this page once again on the browser so as you can see we have the first span tag over here followed by the a tag that is the anchor tag and Then followed by another span tag in this case now guys let's say we want to provide display none property for the a tag now guys what is the meaning of display none basically it is going to hide this particular HTML element from the web page so let us check that as well so inside the style. Cs s file over here specifically for the a tag we want the display property to be set as none so in this case we are going to provide the display CSS property and the value will be none over here so let me just save this file now and try reloading this page once again on the browser if you notice currently we have the click here text which is the anchor tag in this case now when we reload this page as you can see now it is no longer present so guys we use the display none property in such cases where we don't want to display the HTML element or we want to temporarily hide the HTML element from the user in order to achieve certain functionality so if you go to the inspect option over here let us go to the inspect option in this case and we will be seeing that there is the a tag over here but it is having the display property as none so when we uncheck this property so again it is getting displayed right now and then when we check this property it is getting hidden and one important thing that you can notice is there is no space that is left for that particular a tag and the other inline element is taking the space for that particular anchor text over here so guys this is the functionality of the display none property now apart from this we also have something called as visibility is equal to Hidden so guys we have the visibility CSS property that we can use in order to hide the HTML element but there is a difference between the display none property and the hidden value of of the visibility CSS property so let us check that as well so instead of providing display none over here let me just comment out this line of code and what we will do is simply we are going to say visibility CSS property in this case and we will say hidden so guys let me just save this file now and try reloading this page once again on the browser so now if you see instead of display property since we are using visibility hidden so the space that is required by that particular anchor text is still getting reserved over here and the next inline element is getting displayed after the space that is reserved for this particular inline element over here so guys this is the main difference when we use the display none property so if we check the display none property over here the space is no longer present for that particular HTML element but when we use the visibility hidden property then the space will be reserved so when we check this particular CSS property over here so the HTML element is hidden but the space is reserved for that HTML element So based on your requirements if you want to hide any of the whether it is a inline element or the block element you can either use display none property if you don't want to reserve the space for that particular element and if you want to reserve that space then you can use the visibility is equal to Hidden property over here now guys apart from this we also have something called as inline block so we have seen the Block Level element and the inline element as well well what is the meaning of inline block so guys let's say we remove the display and the visibility CSS property in this case so guys after removing the display and the visibility properties over here let's say we want to apply certain height to this anchor tag so we provide the height CSS property and for this height let's say we want the 50 pixels value to be provided so let me just save this file now and try reloading this page once again on the browser so guys as you can see we have provided the height of 50 pixels over here but let us say we want to provide certain background color as well so that we can see that height of 50 pixels so in this case let us say we provide the background color and this color will be aqua color over here so let me just reload this page once again on the browser so as you can see we have provided the aqua background color as well but guys this particular height property is not getting implemented over here and we have this little icon in this case and it says the display inline property prevents height from having an effect try setting display to something other than inline guys in this specific example whenever you want to set the width and height of the inline elements you can make the display property of that inline element as inline block so guys let us check that as well so simply inside the anchor tag we will have the display CSS property by default it is set to the inline value for this particular anchor tag but in this case we will say in line hyphen block so guys this is the value that we are going to use and this value will help us in order to set the height and width for that particular HTML element so let me just save this file now and try reloading this page once again on the browser so now if you see we have the height of 50 pixels that is getting displayed and it can be proved since we are getting the background color as Aqua for this particular link tag which is having the height of 50 pixels over here and now now there is no longer any icon that is getting displayed over here so we can uncheck the height as well so by default it is taking the required height in this case and when we check this option so it is taking the 50 pixels height in this case so guys basically you can use the inline block display value in order to set the height and width of a particular HTML element specifically for those elements for which the display value is in line so guys in this way you can use the inline and the Block Level elements over here based on your requirements comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is going to be an exercise to create the navigation bar in CSS so stay tuned
