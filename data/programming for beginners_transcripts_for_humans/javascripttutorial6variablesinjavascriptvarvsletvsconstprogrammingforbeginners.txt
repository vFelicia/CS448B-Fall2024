With timestamps:

00:00 - so now we will see variables in
00:02 - JavaScript and we are going to see what
00:03 - is the difference between where let and
00:05 - const keywords in JavaScript so guys
00:08 - basically variables are containers in
00:10 - order to store the data in JavaScript
00:13 - and basically these JavaScript variables
00:15 - can be declared in four ways so first of
00:17 - all the variable can be automatically
00:19 - declared when we don't use any of these
00:22 - keywords over here and by default behind
00:24 - the scenes the where keyword is used
00:26 - internally in order to declare that
00:29 - particular variable a able so guys let
00:30 - us check this with the help of example
00:32 - in vs code over here so we have the
00:34 - test.js file that we have already
00:37 - created and let us say we provide the
00:39 - variable name as X over here followed by
00:41 - equal to operator and then let us say we
00:44 - provide the number that is 10 in this
00:46 - case so guys in this way we can define a
00:48 - variable which is storing the value that
00:50 - is 10 over here and basically we can use
00:52 - the variables in order to complete
00:55 - different arithmetic operations as well
00:57 - and many other functionalities can be
00:59 - achieved so guys over here the variable
01:01 - name is X so what we can do is simply we
01:03 - can access this variable inside the
01:05 - console. log statement so over here
01:08 - inside the parenthesis simply we are
01:10 - going to have the ptic and then we are
01:12 - going to say the value of x is and Then
01:15 - followed by dollar and then after this
01:18 - we are going to say open and close curly
01:20 - braces inside which we can provide the
01:22 - name of the variable that is x in this
01:24 - case so guys basically this is the
01:26 - format that we use in order to print the
01:29 - value inside the console.log statement
01:31 - inside the back Tex over here now guys
01:33 - remember that this particular format
01:35 - will not work when you use the double
01:37 - quotes or the single codes inside the
01:39 - console.log statement so let me just
01:41 - save this file now and let us open the
01:43 - terminal over here and let us run this
01:45 - Javascript file with the help of the
01:47 - node keyword in this case so guys
01:49 - basically when you are running the
01:50 - Javascript file as a standalone file
01:53 - over here you need to use the node
01:54 - keyword and you also have to install the
01:56 - nodejs software in this case but in case
01:59 - you are running the Javascript file
02:00 - along with the HTML and the CSS files in
02:03 - order to achieve some functionality on
02:05 - your web page then nodejs is not
02:07 - required so guys always remember in
02:09 - order to run the JavaScript as the
02:11 - backend program you need to have the
02:13 - nodejs installed on the machine and this
02:16 - is the way that you can run the
02:17 - Javascript file in this case so when we
02:19 - press enter as you can see the value of
02:21 - x is 10 in this case and this is the way
02:24 - that you can assign certain value to a
02:26 - variable inside JavaScript now guys
02:28 - always remember it is very important
02:31 - that you have some sensible name over
02:33 - here so simply we can say number one in
02:35 - this case which is having the value that
02:37 - is 10 so instead of having the variable
02:39 - name that is X over here simply we can
02:42 - have number one in this case and the
02:44 - strings can also be updated over here so
02:46 - as you can see this is looking more
02:48 - decent over here any other programmer
02:50 - who is going to review your code will
02:52 - find it helpful in order to read these
02:54 - variable names in this case so guys this
02:56 - particular string will be displayed on
02:58 - the console so let me just save this
03:00 - file now and try running this code once
03:02 - again over here as you can see the value
03:04 - of number one is 10 now guys this is as
03:06 - far as the automatic variable
03:08 - declaration is concerned in which case
03:10 - behind the scenes the we keyword is
03:12 - being used internally guys whatever
03:14 - value we provide over here that value
03:16 - will be provided to the variable so
03:18 - instead of having the number we can also
03:20 - have another string over here so let us
03:22 - say we provide programming for beginners
03:24 - that is the name of this YouTube channel
03:26 - which you should definitely subscribe so
03:28 - guys over here we have provided the
03:30 - string in this case as the value to this
03:32 - particular variable that is number one
03:34 - so when we save this file now and try
03:36 - running this code once again over here
03:38 - as you can see the value of number one
03:40 - is programming for beginners so guys
03:42 - whatever value we provide on the right
03:44 - hand side of the assignment operator
03:46 - that value will be provided to the
03:48 - variable on the left hand side that we
03:50 - have declared so you don't have to
03:51 - provide any of the data types such as
03:54 - string or integers like how you provide
03:56 - in the c or C++ programming language
03:58 - also if you're using Java you have to
04:00 - provide the data type over there but in
04:02 - JavaScript you don't have to provide any
04:04 - of the data type now guys apart from
04:06 - this you can also use the we keyword
04:08 - over here which is going to have the
04:09 - global scope in this case so guys what
04:11 - we will do is instead of having the
04:13 - number one variable name before that we
04:15 - can simply have the wear keyword over
04:17 - here so guys this is another way in
04:19 - order to declare the variable by using
04:21 - the wear keyword in JavaScript so guys
04:23 - if you print the same statement once
04:25 - again it is not going to change anything
04:27 - so when we save this file now and try
04:29 - running this code once again over here
04:31 - as you can see the value of number one
04:32 - is programming for beginners so guys
04:34 - basically this is another way in order
04:36 - to declare the variables in JavaScript
04:39 - now guys there is a difference between
04:40 - this wear keyword and the other two
04:42 - keywords that we are going to see so
04:44 - guys basically this where keyword is
04:46 - having the global scope in this case now
04:48 - what is the meaning of global scope so
04:50 - guys over here sometimes you are going
04:52 - to create some functions inside the
04:54 - JavaScript or you are simply going to
04:56 - have the block scope in this way in
04:58 - which case you are going to have the two
05:00 - curly braces over here inside which you
05:02 - are going to have some more variables
05:03 - that is x y and then let us say we have
05:06 - Zed in this case so guys whatever
05:08 - variables you define by using the wear
05:10 - keyword those variables can be accessed
05:12 - within this particular curly braces and
05:15 - outside of these curly braces as well
05:17 - and that is the meaning of global scope
05:19 - so guys over here this XY Z variables
05:21 - will be accessed inside the curly braces
05:24 - when we are going to print them and also
05:26 - outside of these curly braces when we
05:28 - are going to print them by using the
05:30 - console.log statement but guys that is
05:32 - not the case with the other two keywords
05:34 - that is let and cons so guys basically
05:37 - the let keyword was added in 2015 which
05:40 - is going to have the block scope over
05:42 - here what is the meaning of blog scope
05:44 - so guys let us say we have this
05:45 - particular block that is from the line
05:47 - number four up to line number six and
05:49 - when we Define the variables by using
05:51 - the let keyword over here so these XY Z
05:54 - variables will only be accessed within
05:57 - these particular curly braces you won't
05:59 - be able to access them outside of these
06:01 - curly braces and that is the meaning of
06:03 - blog scope in this case and similarly if
06:05 - you are defining them within the
06:07 - function they will be accessible within
06:09 - that function itself and not outside of
06:12 - that function but this limitation is not
06:13 - present with the we keyword when you
06:15 - decare the variables and similarly you
06:17 - can use the con keyword over here which
06:20 - is again going to have the block scope
06:22 - which means when you define the
06:24 - variables by using the const keyword in
06:26 - this case they will be accessed within
06:28 - this particular block scope only and not
06:30 - outside of this block scope so guys what
06:32 - is the difference between the let and
06:34 - the const keywords over here when you
06:36 - declare the variables so guys basically
06:38 - whatever variables you define by using
06:40 - the let keyword can have another value
06:42 - and you can reassign another value to
06:44 - that particular variable but this is not
06:46 - the case with the const keyword over
06:48 - here so guys basically const meaning
06:50 - constant in this case and whatever value
06:52 - you provide with this particular
06:54 - variable it cannot be changed throughout
06:56 - the code so we will check the example of
06:58 - this const key keyword as well so what
07:00 - we will do is in order to understand the
07:02 - difference between the where let and
07:04 - const keyword let us take certain
07:06 - examples over here so guys let us say we
07:08 - have the we keyword in this case and we
07:10 - provide the variable that is X and it is
07:12 - having the value that is 10 in this case
07:15 - and then we are going to have another
07:16 - scope by using the curly presses and let
07:18 - us say we Define another variable once
07:21 - again that is variable y this time and
07:23 - we are going to have the value that is
07:24 - 20 in this case so guys let us try
07:27 - accessing the value of y over here so so
07:29 - simply we are going to have the BX in
07:31 - this case and we will say y it is equal
07:33 - to we will say dollar and then inside
07:35 - the curly braces we will say Y in this
07:38 - case and then apart from this again we
07:39 - are going to access the value of y over
07:42 - here outside of the curly braces over
07:44 - here we will make certain changes so let
07:46 - us say we provide outside y over here
07:48 - and in this case we will say inside Y in
07:51 - this case so guys let me just save this
07:53 - file now and try running this code once
07:55 - again over here on the terminal so as
07:56 - you can see inside y it is equal to 20
07:59 - and outside y it is equal to 20 once
08:01 - again so guys what does this mean so
08:03 - basically the variable that is y it is
08:05 - being declared by using the Vare keyword
08:08 - over here which means it can be accessed
08:10 - within this particular curly braces and
08:12 - it is happening over here that is this
08:14 - inside Y is getting printed over here on
08:17 - the terminal but it can also be accessed
08:19 - outside of these curly braces and that
08:21 - is the reason why we are also able to
08:23 - see outside y it is equal to 20 once
08:26 - again now guys what will happen if we
08:28 - provide the let keyword over here
08:30 - instead of where keyword so when we say
08:32 - let y it is equal to 20 we have already
08:35 - discussed that it is having the block
08:36 - scope over here which means this
08:38 - particular y variable can be accessed
08:41 - only within this particular block scope
08:43 - which means the inside y will be printed
08:45 - but when we come over here that is
08:47 - outside y this particular y variable is
08:49 - not present outside of these curly
08:51 - braces we are having X over here but not
08:54 - y this time so when we save this file
08:56 - now and run this code once again over
08:58 - here as you can see we are are getting
08:59 - the error so first of all we are getting
09:01 - the string that is inside y it is equal
09:03 - to 20 so this thing is getting printed
09:06 - over here but when the control flow
09:07 - comes over here outside of the block
09:09 - scope that is the curly braces it is
09:11 - throwing the error it says why is not
09:14 - defined that's because we have provided
09:16 - the Y variable inside of this curly
09:18 - braces and we have used the let keyword
09:21 - over here which is not allowing this
09:23 - particular variable name to be accessed
09:25 - outside of these curly braces and guys
09:27 - that is the difference between the leg
09:29 - and the wear keyword in this case and
09:31 - then apart from this let us also provide
09:33 - the const keyword over here so when we
09:35 - say constant y it is equal to 20 so
09:38 - again we will be getting the same output
09:40 - so let me just save this file now and
09:42 - try running this code once again over
09:43 - here as you can see we are getting the
09:45 - inside y it is equal to 20 but it says
09:48 - outside y y is not defined over here
09:51 - that's because we have defined the Y
09:52 - variable with the cons keyword in this
09:55 - case which is again having the block
09:56 - scope over here now guys the difference
09:58 - between the let and the const keyword in
10:00 - this case is basically we cannot
10:02 - reassign the value to the variable which
10:04 - is defined with the const keyword over
10:06 - here so what we will do is simply I'm
10:08 - going to comment out this line of code
10:10 - and we will say let's say why it is
10:12 - equal to 30 this time so basically we
10:14 - are assigning another value to the
10:16 - variable y over here which is being
10:18 - declared by using the constant keyword
10:20 - and this thing is going to throw the
10:22 - error that's because we cannot assign it
10:24 - another value once we have assigned the
10:26 - value to the constant variable for the
10:28 - first time so let me just save this file
10:30 - now and try running this code once again
10:32 - on the terminal so as you can see again
10:34 - we have CAU the error over here why it
10:36 - is equal to 30 assignment to constant
10:39 - variable so basically this is the error
10:41 - that we are getting so instead of having
10:43 - the const keyword over here simply we
10:45 - will say let keyword this time and let
10:47 - me just save this file now and if you
10:48 - want to reassign a variable with some
10:50 - other value so that is the time that you
10:52 - should use the let keyword over here so
10:54 - when we run this code once again so as
10:57 - you can see inside y it is equal to 30
10:59 - first of all we had assigned the value
11:01 - of 20 to the variable that is y and then
11:03 - again we have reassigned the value of 30
11:06 - to the variable y so it is having the
11:08 - latest value as 30 and that is the value
11:10 - that is getting printed over here inside
11:12 - the console.log statement so guys in
11:14 - this way you can use the be keyword or
11:17 - the let keyword or the con keyword in
11:19 - order to define the variables so guys it
11:21 - is a good practice in order to always
11:23 - declare the variables before you use and
11:25 - it is always recommended that you use
11:27 - the con keyword in in case you are
11:29 - defining any of the variables and let's
11:31 - say if you want them to change the
11:33 - values in future then you should use the
11:35 - let keyword over here it is always
11:37 - recommended to avoid the we keyword
11:40 - because it might lead to unexpected
11:42 - results so guys what can be the
11:43 - unexpected results so what we will do is
11:45 - let us say we provide the variable that
11:48 - is X once again over here and we provide
11:50 - the value of 20 this time so let me just
11:53 - provide the inside X it is equal to the
11:55 - value of x over here and then similarly
11:58 - we will say outside X X once again
12:00 - outside of this block this time so guys
12:02 - over here we have the variable that is X
12:04 - outside which is having the value of 20
12:06 - and inside the block as well we are
12:08 - having the variable X which is having
12:10 - the value 20 over here both these
12:12 - variables are using the rare keyword
12:14 - over here now guys what do you think
12:16 - will be the output as far as the inside
12:18 - X and the outside X is concerned so guys
12:20 - let us check that so when we save this
12:22 - file now and try running this code once
12:24 - again over here as you can see inside X
12:26 - it is equal to 20 which is correct over
12:28 - here that's because we have provided the
12:30 - variable X in this case inside the curly
12:33 - bra and the same value is getting
12:35 - printed over here but guys the same
12:37 - variable X is being used outside of this
12:39 - particular block scope and we are again
12:41 - having the outside x value as 20 this
12:44 - time so guys this is the unexpected
12:46 - result we were expecting that this
12:47 - particular value that is 10 which was
12:49 - assigned to the variable X over here
12:52 - outside of the blog scope must have been
12:54 - printed over here when we said outside X
12:56 - but that is not the case this particular
12:58 - value was taken and that is why when we
13:00 - use the wear keyword it might lead to
13:02 - unexpected results when your JavaScript
13:04 - code is becoming more and more complex
13:06 - so guys there are certain important
13:08 - points that you should know when to use
13:10 - where let or con so guys it is very
13:12 - important to note that you should always
13:14 - declare the variables apart from this
13:16 - always use cons if the value should not
13:18 - be changed and then always use cons if
13:20 - the type should not be changed such as
13:22 - the arrays and objects which we are
13:23 - going to check in the upcoming videos as
13:25 - well only use let if you cannot use cons
13:28 - keyword and only use wear keyword if you
13:31 - must support the old browsers so guys
13:33 - currently there are certain old browsers
13:35 - which are still supporting the wear
13:36 - keyword in which case you have to use
13:38 - the we keyword in order to declare the
13:40 - variable so these are some of the best
13:42 - practices that you must follow while you
13:44 - are declaring the variables so guys
13:46 - comment in the comment section below
13:47 - whether you have learned something out
13:49 - of this video please make sure that you
13:50 - like this video so that it reaches to
13:52 - more people and subscribe to this
13:53 - channel so that you get the
13:55 - notifications on upcoming videos as well
13:57 - I'll see you in the next video in which
13:58 - we are are going to see the arithmetic
14:00 - operators in JavaScript so stay tuned

Cleaned transcript:

so now we will see variables in JavaScript and we are going to see what is the difference between where let and const keywords in JavaScript so guys basically variables are containers in order to store the data in JavaScript and basically these JavaScript variables can be declared in four ways so first of all the variable can be automatically declared when we don't use any of these keywords over here and by default behind the scenes the where keyword is used internally in order to declare that particular variable a able so guys let us check this with the help of example in vs code over here so we have the test.js file that we have already created and let us say we provide the variable name as X over here followed by equal to operator and then let us say we provide the number that is 10 in this case so guys in this way we can define a variable which is storing the value that is 10 over here and basically we can use the variables in order to complete different arithmetic operations as well and many other functionalities can be achieved so guys over here the variable name is X so what we can do is simply we can access this variable inside the console. log statement so over here inside the parenthesis simply we are going to have the ptic and then we are going to say the value of x is and Then followed by dollar and then after this we are going to say open and close curly braces inside which we can provide the name of the variable that is x in this case so guys basically this is the format that we use in order to print the value inside the console.log statement inside the back Tex over here now guys remember that this particular format will not work when you use the double quotes or the single codes inside the console.log statement so let me just save this file now and let us open the terminal over here and let us run this Javascript file with the help of the node keyword in this case so guys basically when you are running the Javascript file as a standalone file over here you need to use the node keyword and you also have to install the nodejs software in this case but in case you are running the Javascript file along with the HTML and the CSS files in order to achieve some functionality on your web page then nodejs is not required so guys always remember in order to run the JavaScript as the backend program you need to have the nodejs installed on the machine and this is the way that you can run the Javascript file in this case so when we press enter as you can see the value of x is 10 in this case and this is the way that you can assign certain value to a variable inside JavaScript now guys always remember it is very important that you have some sensible name over here so simply we can say number one in this case which is having the value that is 10 so instead of having the variable name that is X over here simply we can have number one in this case and the strings can also be updated over here so as you can see this is looking more decent over here any other programmer who is going to review your code will find it helpful in order to read these variable names in this case so guys this particular string will be displayed on the console so let me just save this file now and try running this code once again over here as you can see the value of number one is 10 now guys this is as far as the automatic variable declaration is concerned in which case behind the scenes the we keyword is being used internally guys whatever value we provide over here that value will be provided to the variable so instead of having the number we can also have another string over here so let us say we provide programming for beginners that is the name of this YouTube channel which you should definitely subscribe so guys over here we have provided the string in this case as the value to this particular variable that is number one so when we save this file now and try running this code once again over here as you can see the value of number one is programming for beginners so guys whatever value we provide on the right hand side of the assignment operator that value will be provided to the variable on the left hand side that we have declared so you don't have to provide any of the data types such as string or integers like how you provide in the c or C++ programming language also if you're using Java you have to provide the data type over there but in JavaScript you don't have to provide any of the data type now guys apart from this you can also use the we keyword over here which is going to have the global scope in this case so guys what we will do is instead of having the number one variable name before that we can simply have the wear keyword over here so guys this is another way in order to declare the variable by using the wear keyword in JavaScript so guys if you print the same statement once again it is not going to change anything so when we save this file now and try running this code once again over here as you can see the value of number one is programming for beginners so guys basically this is another way in order to declare the variables in JavaScript now guys there is a difference between this wear keyword and the other two keywords that we are going to see so guys basically this where keyword is having the global scope in this case now what is the meaning of global scope so guys over here sometimes you are going to create some functions inside the JavaScript or you are simply going to have the block scope in this way in which case you are going to have the two curly braces over here inside which you are going to have some more variables that is x y and then let us say we have Zed in this case so guys whatever variables you define by using the wear keyword those variables can be accessed within this particular curly braces and outside of these curly braces as well and that is the meaning of global scope so guys over here this XY Z variables will be accessed inside the curly braces when we are going to print them and also outside of these curly braces when we are going to print them by using the console.log statement but guys that is not the case with the other two keywords that is let and cons so guys basically the let keyword was added in 2015 which is going to have the block scope over here what is the meaning of blog scope so guys let us say we have this particular block that is from the line number four up to line number six and when we Define the variables by using the let keyword over here so these XY Z variables will only be accessed within these particular curly braces you won't be able to access them outside of these curly braces and that is the meaning of blog scope in this case and similarly if you are defining them within the function they will be accessible within that function itself and not outside of that function but this limitation is not present with the we keyword when you decare the variables and similarly you can use the con keyword over here which is again going to have the block scope which means when you define the variables by using the const keyword in this case they will be accessed within this particular block scope only and not outside of this block scope so guys what is the difference between the let and the const keywords over here when you declare the variables so guys basically whatever variables you define by using the let keyword can have another value and you can reassign another value to that particular variable but this is not the case with the const keyword over here so guys basically const meaning constant in this case and whatever value you provide with this particular variable it cannot be changed throughout the code so we will check the example of this const key keyword as well so what we will do is in order to understand the difference between the where let and const keyword let us take certain examples over here so guys let us say we have the we keyword in this case and we provide the variable that is X and it is having the value that is 10 in this case and then we are going to have another scope by using the curly presses and let us say we Define another variable once again that is variable y this time and we are going to have the value that is 20 in this case so guys let us try accessing the value of y over here so so simply we are going to have the BX in this case and we will say y it is equal to we will say dollar and then inside the curly braces we will say Y in this case and then apart from this again we are going to access the value of y over here outside of the curly braces over here we will make certain changes so let us say we provide outside y over here and in this case we will say inside Y in this case so guys let me just save this file now and try running this code once again over here on the terminal so as you can see inside y it is equal to 20 and outside y it is equal to 20 once again so guys what does this mean so basically the variable that is y it is being declared by using the Vare keyword over here which means it can be accessed within this particular curly braces and it is happening over here that is this inside Y is getting printed over here on the terminal but it can also be accessed outside of these curly braces and that is the reason why we are also able to see outside y it is equal to 20 once again now guys what will happen if we provide the let keyword over here instead of where keyword so when we say let y it is equal to 20 we have already discussed that it is having the block scope over here which means this particular y variable can be accessed only within this particular block scope which means the inside y will be printed but when we come over here that is outside y this particular y variable is not present outside of these curly braces we are having X over here but not y this time so when we save this file now and run this code once again over here as you can see we are are getting the error so first of all we are getting the string that is inside y it is equal to 20 so this thing is getting printed over here but when the control flow comes over here outside of the block scope that is the curly braces it is throwing the error it says why is not defined that's because we have provided the Y variable inside of this curly braces and we have used the let keyword over here which is not allowing this particular variable name to be accessed outside of these curly braces and guys that is the difference between the leg and the wear keyword in this case and then apart from this let us also provide the const keyword over here so when we say constant y it is equal to 20 so again we will be getting the same output so let me just save this file now and try running this code once again over here as you can see we are getting the inside y it is equal to 20 but it says outside y y is not defined over here that's because we have defined the Y variable with the cons keyword in this case which is again having the block scope over here now guys the difference between the let and the const keyword in this case is basically we cannot reassign the value to the variable which is defined with the const keyword over here so what we will do is simply I'm going to comment out this line of code and we will say let's say why it is equal to 30 this time so basically we are assigning another value to the variable y over here which is being declared by using the constant keyword and this thing is going to throw the error that's because we cannot assign it another value once we have assigned the value to the constant variable for the first time so let me just save this file now and try running this code once again on the terminal so as you can see again we have CAU the error over here why it is equal to 30 assignment to constant variable so basically this is the error that we are getting so instead of having the const keyword over here simply we will say let keyword this time and let me just save this file now and if you want to reassign a variable with some other value so that is the time that you should use the let keyword over here so when we run this code once again so as you can see inside y it is equal to 30 first of all we had assigned the value of 20 to the variable that is y and then again we have reassigned the value of 30 to the variable y so it is having the latest value as 30 and that is the value that is getting printed over here inside the console.log statement so guys in this way you can use the be keyword or the let keyword or the con keyword in order to define the variables so guys it is a good practice in order to always declare the variables before you use and it is always recommended that you use the con keyword in in case you are defining any of the variables and let's say if you want them to change the values in future then you should use the let keyword over here it is always recommended to avoid the we keyword because it might lead to unexpected results so guys what can be the unexpected results so what we will do is let us say we provide the variable that is X once again over here and we provide the value of 20 this time so let me just provide the inside X it is equal to the value of x over here and then similarly we will say outside X X once again outside of this block this time so guys over here we have the variable that is X outside which is having the value of 20 and inside the block as well we are having the variable X which is having the value 20 over here both these variables are using the rare keyword over here now guys what do you think will be the output as far as the inside X and the outside X is concerned so guys let us check that so when we save this file now and try running this code once again over here as you can see inside X it is equal to 20 which is correct over here that's because we have provided the variable X in this case inside the curly bra and the same value is getting printed over here but guys the same variable X is being used outside of this particular block scope and we are again having the outside x value as 20 this time so guys this is the unexpected result we were expecting that this particular value that is 10 which was assigned to the variable X over here outside of the blog scope must have been printed over here when we said outside X but that is not the case this particular value was taken and that is why when we use the wear keyword it might lead to unexpected results when your JavaScript code is becoming more and more complex so guys there are certain important points that you should know when to use where let or con so guys it is very important to note that you should always declare the variables apart from this always use cons if the value should not be changed and then always use cons if the type should not be changed such as the arrays and objects which we are going to check in the upcoming videos as well only use let if you cannot use cons keyword and only use wear keyword if you must support the old browsers so guys currently there are certain old browsers which are still supporting the wear keyword in which case you have to use the we keyword in order to declare the variable so these are some of the best practices that you must follow while you are declaring the variables so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video in which we are are going to see the arithmetic operators in JavaScript so stay tuned
