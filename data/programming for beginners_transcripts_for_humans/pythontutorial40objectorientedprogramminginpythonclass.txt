With timestamps:

00:00 - hey what's up guys welcome to another
00:02 - video in which we are going to learn
00:03 - about object oriented programming in
00:05 - Python so guys we are going to check the
00:07 - classes and objects with the help of
00:09 - examples python is a versatile
00:12 - programming language that supports
00:13 - various programming Styles including
00:16 - object-oriented programming through the
00:18 - use of objects and classes which we are
00:20 - going to see with the help of examples
00:22 - as well now an object is any entity that
00:25 - has attributes and behaviors so for
00:28 - example a parrot is an object and it has
00:31 - multiple attributes as you can see there
00:34 - are multiple attributes that can be
00:35 - present which is name then we have age
00:37 - color and so on apart from that it also
00:40 - has certain behaviors such as whether it
00:43 - can dance or not so dancing is one of
00:45 - the behavior whether it can sing or not
00:47 - so singing is another behavior I'm not
00:49 - sure whether a parrot can really dance
00:51 - or not but these are certain behaviors
00:53 - that we can consider in order to
00:55 - understand classes and objects now guys
00:57 - similarly a class is a blueprint for
00:59 - that object so basically these objects
01:02 - are having the attributes and behaviors
01:04 - and the values will be stored in these
01:06 - objects but the blueprint will be
01:08 - present inside the class so basically
01:10 - this class can be created as a template
01:12 - which has certain attributes and
01:14 - behaviors being defined over here and we
01:17 - can create multiple objects related to
01:19 - that class so we are going to check with
01:21 - the help of example how do we create a
01:23 - class parent with the attributes as name
01:25 - and age so let us move to the vs code
01:27 - over here the very first thing that we
01:29 - have to create is the class so basically
01:31 - we have to provide the class keyword
01:33 - followed by the name of the class so
01:36 - let's say the parrot is the name of the
01:38 - class over here and then we have a colon
01:41 - and then we can have different
01:42 - attributes so one of the attributes is
01:44 - name over here we will assign it with a
01:46 - empty string and then we have age as
01:49 - well we will assign it as 0 over here as
01:51 - the initial value now Guys these are the
01:53 - two attributes that we have defined for
01:55 - this class that is parent now we can
01:57 - create different objects out of this
01:59 - class now this class is acting as a
02:02 - blueprint or we can say as a template in
02:04 - order to create multiple objects so we
02:06 - will come out of this class and what we
02:09 - will do is we will create the objects
02:11 - for this class so let's say we have
02:13 - parrot 1 followed by equal to operator
02:15 - and then we can simply provide the name
02:18 - of the class that is parrot followed by
02:20 - the open and close parenthesis so this
02:22 - is the way that we can initialize an
02:24 - object for this class that is parrot and
02:27 - then we can use this object in order to
02:29 - initialize these attributes it is name
02:32 - and age so over here what we will do is
02:34 - we will use this parrot one object
02:37 - followed by Dot and as you can see we
02:39 - are getting this name and age being Auto
02:41 - suggested by the vs code that's because
02:43 - we have already defined these attributes
02:46 - inside this blueprint that is class
02:48 - parrot so over here we are going to
02:50 - provide the name as the name of the
02:53 - parrot1 object so let's say we provide
02:55 - the name as blue over here and then
02:57 - let's say we also want to provide the
02:58 - age of this parrot object so again we
03:01 - will provide parrot 1 followed by Dot
03:03 - and then we have the age attribute let's
03:05 - say it is two years old so we have two
03:07 - as the parrot's age now guys let's say
03:10 - we want to create another object with
03:12 - another name and age so again we will
03:14 - copy these lines of code and paste this
03:17 - over here what I will do is instead of
03:19 - parrot one we will say parrot two
03:21 - because this is another object so this
03:24 - is the second object that we are
03:25 - creating by using this parrot class and
03:28 - over here again we will say parrot two
03:30 - dot name and parrot 2 dot h so let's say
03:33 - the name of the parrot 2 is woo and it's
03:36 - ages 5 over here so five years so guys
03:39 - over here we have created two objects
03:41 - for this class that is parrot similarly
03:43 - we can create any number of objects that
03:45 - we want it's very important to note that
03:47 - while creating the objects we provide
03:49 - this variable name on the left hand side
03:51 - and on the right hand side we provide
03:53 - the name of the class followed by the
03:55 - open and close parenthesis and then we
03:58 - can call the different attributes of
03:59 - that class in order to initialize them
04:01 - now guys after these objects are being
04:03 - initialized with their names and age we
04:06 - can simply print them on the console so
04:08 - what we can do is we can have the print
04:10 - statement with the formatting being
04:12 - enabled so over here inside the print
04:14 - statement we can have the F followed by
04:16 - the double quotes and then what we can
04:18 - do is open and close curly braces inside
04:20 - this we can have the parent one dot name
04:23 - over here is and Then followed by curly
04:26 - braces parrot1 dot h and then we can
04:30 - have ears hold so guys basically what is
04:33 - happening over here is inside the open
04:35 - and close curly braces we can provide
04:37 - the variable names in order to get their
04:40 - values being printed inside the print
04:42 - statement so this parrot one dot name
04:45 - will give us the value of this variable
04:47 - that is blue over here and then followed
04:49 - by is and then again we will get parrot
04:52 - 1 dot 8 which is 2 in this case so blue
04:56 - is two years old so this is a statement
04:58 - that should get printed and then
05:00 - similarly we can copy this line of code
05:02 - and paste this over here and inspired
05:04 - one we can simply say parrot two so we
05:07 - have parrot2 dot name and then parrot2.h
05:10 - so guys let me just save this file now
05:12 - and try running this code as you can see
05:14 - blue is two years old this is what is
05:17 - getting printed by using the first print
05:19 - statement and over here again we are
05:21 - getting who is 5 years old so this is
05:24 - the second print statement that is
05:26 - helping us in order to print this
05:27 - particular statement so guys this is the
05:29 - way that we can easily create a class in
05:32 - this case we have created the parrot
05:33 - class and we have two attributes that is
05:35 - name and age you can have any number of
05:37 - attributes for the class based on your
05:39 - requirements and apart from that while
05:41 - creating the objects you can have the
05:43 - values for those attributes based on
05:45 - those particular individual objects and
05:48 - then you can call those attributes by
05:50 - using the objects that you have just
05:51 - initialized by using this statement that
05:54 - is the object on the left hand side
05:55 - followed by equal to operator and then
05:58 - we have the class name followed by the
06:00 - open and close parenthesis this is
06:02 - called instantiating of the object or we
06:04 - can also call it as initializing an
06:06 - object in Python Programming so guys
06:08 - that's it in this video practice on your
06:10 - own so that on different inputs you get
06:12 - different outputs please make sure that
06:13 - you like this video so that it reaches
06:15 - to more people and subscribe to the
06:17 - channel so that you get the
06:18 - notifications on upcoming videos as well
06:20 - the next video that we are going to talk
06:22 - about is inheritance in Python
06:24 - Programming so stay tuned

Cleaned transcript:

hey what's up guys welcome to another video in which we are going to learn about object oriented programming in Python so guys we are going to check the classes and objects with the help of examples python is a versatile programming language that supports various programming Styles including objectoriented programming through the use of objects and classes which we are going to see with the help of examples as well now an object is any entity that has attributes and behaviors so for example a parrot is an object and it has multiple attributes as you can see there are multiple attributes that can be present which is name then we have age color and so on apart from that it also has certain behaviors such as whether it can dance or not so dancing is one of the behavior whether it can sing or not so singing is another behavior I'm not sure whether a parrot can really dance or not but these are certain behaviors that we can consider in order to understand classes and objects now guys similarly a class is a blueprint for that object so basically these objects are having the attributes and behaviors and the values will be stored in these objects but the blueprint will be present inside the class so basically this class can be created as a template which has certain attributes and behaviors being defined over here and we can create multiple objects related to that class so we are going to check with the help of example how do we create a class parent with the attributes as name and age so let us move to the vs code over here the very first thing that we have to create is the class so basically we have to provide the class keyword followed by the name of the class so let's say the parrot is the name of the class over here and then we have a colon and then we can have different attributes so one of the attributes is name over here we will assign it with a empty string and then we have age as well we will assign it as 0 over here as the initial value now Guys these are the two attributes that we have defined for this class that is parent now we can create different objects out of this class now this class is acting as a blueprint or we can say as a template in order to create multiple objects so we will come out of this class and what we will do is we will create the objects for this class so let's say we have parrot 1 followed by equal to operator and then we can simply provide the name of the class that is parrot followed by the open and close parenthesis so this is the way that we can initialize an object for this class that is parrot and then we can use this object in order to initialize these attributes it is name and age so over here what we will do is we will use this parrot one object followed by Dot and as you can see we are getting this name and age being Auto suggested by the vs code that's because we have already defined these attributes inside this blueprint that is class parrot so over here we are going to provide the name as the name of the parrot1 object so let's say we provide the name as blue over here and then let's say we also want to provide the age of this parrot object so again we will provide parrot 1 followed by Dot and then we have the age attribute let's say it is two years old so we have two as the parrot's age now guys let's say we want to create another object with another name and age so again we will copy these lines of code and paste this over here what I will do is instead of parrot one we will say parrot two because this is another object so this is the second object that we are creating by using this parrot class and over here again we will say parrot two dot name and parrot 2 dot h so let's say the name of the parrot 2 is woo and it's ages 5 over here so five years so guys over here we have created two objects for this class that is parrot similarly we can create any number of objects that we want it's very important to note that while creating the objects we provide this variable name on the left hand side and on the right hand side we provide the name of the class followed by the open and close parenthesis and then we can call the different attributes of that class in order to initialize them now guys after these objects are being initialized with their names and age we can simply print them on the console so what we can do is we can have the print statement with the formatting being enabled so over here inside the print statement we can have the F followed by the double quotes and then what we can do is open and close curly braces inside this we can have the parent one dot name over here is and Then followed by curly braces parrot1 dot h and then we can have ears hold so guys basically what is happening over here is inside the open and close curly braces we can provide the variable names in order to get their values being printed inside the print statement so this parrot one dot name will give us the value of this variable that is blue over here and then followed by is and then again we will get parrot 1 dot 8 which is 2 in this case so blue is two years old so this is a statement that should get printed and then similarly we can copy this line of code and paste this over here and inspired one we can simply say parrot two so we have parrot2 dot name and then parrot2.h so guys let me just save this file now and try running this code as you can see blue is two years old this is what is getting printed by using the first print statement and over here again we are getting who is 5 years old so this is the second print statement that is helping us in order to print this particular statement so guys this is the way that we can easily create a class in this case we have created the parrot class and we have two attributes that is name and age you can have any number of attributes for the class based on your requirements and apart from that while creating the objects you can have the values for those attributes based on those particular individual objects and then you can call those attributes by using the objects that you have just initialized by using this statement that is the object on the left hand side followed by equal to operator and then we have the class name followed by the open and close parenthesis this is called instantiating of the object or we can also call it as initializing an object in Python Programming so guys that's it in this video practice on your own so that on different inputs you get different outputs please make sure that you like this video so that it reaches to more people and subscribe to the channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is inheritance in Python Programming so stay tuned
