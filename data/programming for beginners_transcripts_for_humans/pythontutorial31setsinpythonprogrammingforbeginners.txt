With timestamps:

00:00 - hey what's up guys welcome to another
00:02 - video in which we are going to learn
00:03 - about sets in Python Programming so guys
00:06 - a set is a collection of a unique data
00:09 - which means that the elements in a set
00:12 - cannot be duplicate elements so over
00:14 - here you can easily create a set in the
00:16 - python basically in Python we create the
00:18 - sets by placing all the elements inside
00:21 - the curly braces separated by comma so
00:24 - guys previously we have seen that for
00:26 - the list we are using the open and close
00:28 - square brackets for the Tuple we use the
00:30 - open and close parenthesis and over here
00:33 - for sets we are using the open and close
00:35 - curly braces so we will check this with
00:37 - the help of examples as well a set can
00:39 - have any number of items and they may be
00:42 - of different types so as you can see it
00:44 - can be of the integer float Tuple or
00:47 - string data type or any other data type
00:49 - but a set cannot have mutable elements
00:52 - like list sets or dictionaries as its
00:54 - elements so guys this is very important
00:56 - you cannot have another list set or a
00:59 - dictionary array which we are going to
01:01 - see in the upcoming videos over here we
01:03 - cannot have these kinds of data types
01:05 - inside a particular set now let us check
01:07 - the creation of set with the help of
01:09 - example now over here so let's say I
01:11 - provide set 1 as the variable name and
01:14 - then we provide the equal to symbol
01:16 - followed by the open and closed curly
01:18 - braces so inside these braces we have to
01:20 - provide the elements of the set so let's
01:22 - say we have the set of integers we have
01:25 - one two three four and then five so guys
01:27 - we have five elements over here one to
01:29 - five which are the elements of this set
01:32 - and simply we can print all these
01:34 - elements inside the set by using the
01:36 - print function over here and then we can
01:38 - say set elements
01:42 - R and then colon and then we can have
01:45 - set one that is the variable name so
01:48 - guys let me just save this file and try
01:49 - running this code now so as you can see
01:51 - we are getting set elements are we are
01:53 - getting all the elements that is one two
01:55 - three four five and guys this is the way
01:57 - that we can create a set in the Python
01:59 - Programming now guys it is very
02:01 - important that we cannot have the
02:03 - duplicate items in this set so let's say
02:05 - I provide some more numbers over here
02:07 - which are already present in this set so
02:09 - let's say 2 and 3 are already present I
02:12 - provide this 2 and 3 once again so when
02:14 - we do this so right now we have seven
02:16 - number of elements but let me just save
02:18 - this file now and try running this code
02:20 - to see how many elements get printed so
02:22 - as you can see only five elements are
02:24 - getting printed so those two elements
02:26 - that is two and three will not be
02:27 - considered once again while printing
02:29 - them because we cannot have duplicate
02:31 - elements we can only have the unique
02:34 - elements inside the set and guys this is
02:36 - the main functionality of having the set
02:39 - data structure in Python Programming So
02:41 - based on your required environment if
02:42 - you don't want the duplicate elements to
02:44 - be present you can use the set data
02:46 - structure in the Python programming
02:48 - language now guys how do we create an
02:50 - empty set in the python so basically
02:52 - creating an empty set is a bit tricky so
02:55 - empty curly braces if we use then it
02:57 - will make a empty dictionary in Python
03:00 - so basically when we create a dictionary
03:02 - we again use the curly braces so let us
03:04 - check this with the help of example now
03:06 - over here what happens if we create the
03:08 - empty set so let's say we provide set 1
03:11 - it is equal to open and close curly
03:13 - braces as you can see we have not
03:15 - provided any element and this is the
03:17 - empty set but let me just print the type
03:19 - of this variable over here so we will
03:22 - simply use the type function and then
03:24 - provide the set 1 as the variable name
03:27 - so guys what will be the type of this
03:29 - set one variable so let me just save
03:31 - this file now and try running this code
03:32 - as you can see it is saying that class
03:35 - it is a dictionary data type so this set
03:37 - one variable is of the data type
03:39 - dictionary by default when we provide
03:41 - are the open and close curly braces how
03:44 - do we make it as a empty set data type
03:47 - so what we have to do is instead of
03:49 - using the open and close curly braces we
03:52 - have to use the set function so there is
03:54 - something called a set function over
03:56 - here as you can see vs code is
03:58 - suggesting us so this set function
03:59 - followed by the open and close
04:01 - parenthesis will help us to create a new
04:04 - empty set over here so let me just save
04:06 - this file now and try running this code
04:08 - over here what we are trying to do is
04:09 - again we are trying to print the type of
04:12 - this set one but this time it should be
04:14 - of the set data type so let me just run
04:17 - this code now
04:18 - so as you can see we are getting the set
04:20 - data type over here previously we were
04:22 - getting the dictionary so in order to
04:24 - have the empty set in Python Programming
04:26 - we can use the set function over here
04:28 - now very important question how do we
04:30 - add the set items in Python so basically
04:33 - sets are mutable which means we can add
04:35 - and remove items from this set however
04:38 - since they are unordered indexing has no
04:41 - meaning so guys basically if you must
04:43 - have noticed there is no one order in
04:45 - which the set items were printed
04:48 - previously so let us check this once
04:49 - again over here we provide set one it is
04:52 - equal to and let's say we provide some
04:54 - elements that is 3 2 4 1 5 and then let
04:59 - me just print this set one over here so
05:03 - we provide set 1 inside the print
05:05 - function let me just run this code as
05:07 - you can see we are getting one two three
05:09 - four five this is not of the same order
05:11 - in which we have provided these elements
05:13 - inside the set so we cannot use index
05:16 - numbers over here as well in order to
05:18 - access these elements one at a time
05:20 - since the way in which the elements
05:22 - inside the set are printed are not in a
05:25 - particular order now guys how do we add
05:27 - new elements to this set so basically we
05:30 - cannot access or change an element of a
05:32 - set using the indexing or slicing but we
05:35 - can use the add method to add an item to
05:38 - a set so let us say I want to add
05:40 - another element over here so basically
05:43 - what we will do is we will say initial
05:46 - set and then colon and then we provide
05:49 - set one and then let's say we provide
05:51 - set one dot we have something called as
05:54 - ADD over here as you can see this is a
05:56 - function that we can use in order to add
05:59 - elements inside the set so let's say we
06:01 - provide 10 as the number to be added to
06:04 - this particular set that is set one and
06:06 - then again we want to print that set one
06:08 - so I'll just copy this and paste this
06:10 - over here and then we have updated set
06:13 - over here so we have updated set and
06:15 - then set one being printed so let me
06:17 - just save this file and try running this
06:19 - code now so as you can see initial set
06:21 - it is one two three four five and then
06:24 - after adding this element we are getting
06:26 - the updated set as one two three four
06:28 - five and then the last element that is
06:30 - 10 over here which is being added by
06:32 - using the add method and this is the way
06:35 - that we can add the elements inside the
06:37 - set remember that the order in which
06:39 - they are added will not be followed
06:41 - while printing them so you cannot rely
06:43 - on the order in which the set elements
06:45 - will be printed it on Console now guys
06:47 - another important thing how do we remove
06:49 - an element from the set so we can use
06:52 - the discard method to remove the
06:54 - specified element from a set so let us
06:56 - say after adding this we want to remove
06:58 - the element that is 3 from this set so
07:01 - what we can do is we can provide set one
07:04 - and then followed by Dot and then we can
07:06 - have discard method in order to remove
07:09 - the element we need to provide the
07:11 - element which needs to be removed so
07:13 - over here we provide the number 3 which
07:15 - will be removed from the set one and
07:17 - then again let me just copy this line of
07:20 - code and paste this over here so that we
07:22 - can print the updated set after removing
07:24 - so over here we say updated set after
07:28 - removing three
07:30 - and then let me just save this file and
07:32 - try running this code now so as you can
07:34 - see we are getting 1 2 4 5 and then ten
07:37 - so the element 3 is being removed after
07:40 - using the discard method over here and
07:42 - guys this is the way that we can remove
07:44 - the elements from the set now guys there
07:46 - is another way in order to access the
07:48 - elements inside the set we can iterate
07:50 - over a set in Python by using the for
07:53 - Loop so this can be easily done by using
07:55 - the for Loop over here so what I will do
07:57 - is I'll just clear these lines of code
07:59 - and then we will say 4 and then item in
08:03 - set one so this is the syntax that we
08:06 - use while using the for Loop and then we
08:09 - can have the print statement over here
08:10 - guys notice that till now we were
08:12 - printing the elements of the set by
08:14 - using the set one variable and that is
08:17 - why we were getting the starting and the
08:19 - ending open and close curly braces over
08:21 - here but this time let's say we don't
08:23 - want those but we want only those
08:25 - numbers that is the elements inside the
08:28 - set to be printed so we can easily use
08:30 - the for Loop and iterate through each
08:33 - and every item inside the set and this
08:35 - is the way that we can do so we provide
08:38 - the print statement over here and inside
08:40 - the item variable one at a time all the
08:43 - elements will be printed over here so
08:45 - let me just save this file now and try
08:47 - running this code so as you can see we
08:49 - are getting one two three four five now
08:51 - all these numbers are on a different
08:53 - line what we can do is we can use the
08:55 - end parameter of the print function so
08:58 - over here we provide the end parameter
09:00 - and then we simply provide the space
09:02 - character so that all the items are
09:04 - separated by the space characters over
09:06 - here so let me just save this file now
09:08 - and try running this code so as you can
09:10 - see we are getting one two three four
09:12 - five which are the elements of this set
09:14 - if you want all these numbers to be
09:16 - separated by commas what we can do is
09:18 - instead of the space character we can
09:19 - provide the comma and let me just save
09:21 - this file and try running this code once
09:23 - again as you can see we are getting one
09:25 - two three four five and all the elements
09:27 - are being separated using the comma
09:29 - character now guys how do we find the
09:31 - number of set elements so we can use the
09:34 - Len method that is the length method to
09:37 - find the number of elements that is
09:38 - present inside the set so what we can do
09:40 - is simply we can provide the print
09:42 - statement over here and we can simply
09:44 - say that length of set is and then colon
09:50 - and then we can simply use the Len
09:52 - method and then inside this method we
09:55 - can provide the set one that is the
09:57 - variable name so let me just save this
09:59 - file now and try running this code so as
10:01 - we can see length of set is 5 so
10:03 - basically since five elements are
10:05 - present over here we are getting the
10:07 - length as 5 what if we provide some more
10:09 - elements let's say I provide 6 7 and
10:12 - let's say I provide some more duplicate
10:13 - elements over here that is 1 2 and then
10:16 - three so over here there are total 10
10:18 - elements out of which three elements are
10:20 - duplicate so what is the exact length of
10:23 - the set so let me just save this file
10:24 - now and try running this code so as you
10:27 - can see length of set is 7 so even
10:28 - though we are having 10 items in inside
10:31 - the set but out of those 10 items three
10:34 - items are duplicate items so those
10:36 - duplicate items will not be considered
10:38 - it will be considered only once and that
10:40 - is why we are getting the length of this
10:42 - set as 7. now guys very important thing
10:44 - about the set operations we can carry
10:47 - out different set operations in Python
10:49 - Programming one is Union of two sets
10:52 - which can be done by using the union
10:53 - method or this or a symbol over here we
10:56 - can also have the set intersection which
10:59 - can be implemented by using the
11:01 - intersection method and then we also
11:03 - have the difference between the two sets
11:05 - which means we can use the difference
11:07 - method or the minus symbol over here so
11:09 - guys let us check all these operations
11:11 - one at a time so over here what we will
11:13 - do is we will have two sets over here we
11:16 - will say set one it is equal to 1 2 and
11:19 - then three and then let's say we have
11:21 - set 2 it is equal to 3 4 and then five
11:25 - now guys let's say we want to find the
11:27 - Union first so what we will do is we
11:29 - will say Union and then we will simply
11:33 - say set 1 followed by Dot and then we
11:36 - have the union method followed by the
11:38 - parameter needs to be set to over here
11:41 - because that is the another set that we
11:43 - want to find the union of similarly we
11:45 - will do the intersection and difference
11:47 - as well so I'll just copy and paste
11:49 - these lines of code over here we will
11:51 - say intersection in this case and then
11:55 - we will simply change the union method
11:57 - to intersection over here and then over
12:01 - here we will say difference
12:03 - so difference and then instead of this
12:05 - Union we will say difference so guys
12:08 - basically what we are doing over here is
12:10 - these are all the set operations the
12:12 - union will find all the elements that
12:15 - are present in set 1 and set 2 and all
12:18 - the elements will be unique in the
12:19 - intersection part we will get all the
12:22 - elements that are common in both the
12:24 - sets which means 3 in this case and then
12:26 - in the difference we will find all the
12:28 - elements that are present in set one but
12:31 - not present in set two so guys let me
12:33 - just save this file now and try running
12:34 - this code to see what will be the
12:36 - results of all these operations so as
12:38 - you can see the union is giving us one
12:41 - two three four five which means all the
12:43 - elements that are present in set 1 and
12:46 - set two so we are having one two three
12:48 - in set one and then in set two the three
12:50 - is already printed and then it is
12:52 - printing four and five as well in
12:54 - intersection we are getting only three
12:56 - that's because the element 3 is the only
12:59 - element which is common in both the sets
13:01 - for the difference operation we are
13:03 - getting only one and two that's because
13:05 - these are the only two elements which
13:07 - are present in set one but not present
13:09 - in set two so Guys these are certain set
13:11 - operations that can be implemented with
13:13 - Python Programming apart from this there
13:15 - are multiple built-in methods that you
13:17 - can use as far as sets are concerned so
13:19 - when you provide the variable name that
13:21 - is set 1 followed by dot as you can see
13:23 - these are all the methods that can be
13:25 - used based on your requirements so guys
13:28 - practice on your own so that on
13:29 - different inputs you get different
13:30 - outputs please make sure that you like
13:32 - this video so that it reaches to more
13:34 - people and subscribe to this channel so
13:36 - that you get the notifications on
13:37 - upcoming videos as well the next video
13:39 - that we are going to talk about is
13:41 - dictionary in Python Programming so stay
13:44 - tuned

Cleaned transcript:

hey what's up guys welcome to another video in which we are going to learn about sets in Python Programming so guys a set is a collection of a unique data which means that the elements in a set cannot be duplicate elements so over here you can easily create a set in the python basically in Python we create the sets by placing all the elements inside the curly braces separated by comma so guys previously we have seen that for the list we are using the open and close square brackets for the Tuple we use the open and close parenthesis and over here for sets we are using the open and close curly braces so we will check this with the help of examples as well a set can have any number of items and they may be of different types so as you can see it can be of the integer float Tuple or string data type or any other data type but a set cannot have mutable elements like list sets or dictionaries as its elements so guys this is very important you cannot have another list set or a dictionary array which we are going to see in the upcoming videos over here we cannot have these kinds of data types inside a particular set now let us check the creation of set with the help of example now over here so let's say I provide set 1 as the variable name and then we provide the equal to symbol followed by the open and closed curly braces so inside these braces we have to provide the elements of the set so let's say we have the set of integers we have one two three four and then five so guys we have five elements over here one to five which are the elements of this set and simply we can print all these elements inside the set by using the print function over here and then we can say set elements R and then colon and then we can have set one that is the variable name so guys let me just save this file and try running this code now so as you can see we are getting set elements are we are getting all the elements that is one two three four five and guys this is the way that we can create a set in the Python Programming now guys it is very important that we cannot have the duplicate items in this set so let's say I provide some more numbers over here which are already present in this set so let's say 2 and 3 are already present I provide this 2 and 3 once again so when we do this so right now we have seven number of elements but let me just save this file now and try running this code to see how many elements get printed so as you can see only five elements are getting printed so those two elements that is two and three will not be considered once again while printing them because we cannot have duplicate elements we can only have the unique elements inside the set and guys this is the main functionality of having the set data structure in Python Programming So based on your required environment if you don't want the duplicate elements to be present you can use the set data structure in the Python programming language now guys how do we create an empty set in the python so basically creating an empty set is a bit tricky so empty curly braces if we use then it will make a empty dictionary in Python so basically when we create a dictionary we again use the curly braces so let us check this with the help of example now over here what happens if we create the empty set so let's say we provide set 1 it is equal to open and close curly braces as you can see we have not provided any element and this is the empty set but let me just print the type of this variable over here so we will simply use the type function and then provide the set 1 as the variable name so guys what will be the type of this set one variable so let me just save this file now and try running this code as you can see it is saying that class it is a dictionary data type so this set one variable is of the data type dictionary by default when we provide are the open and close curly braces how do we make it as a empty set data type so what we have to do is instead of using the open and close curly braces we have to use the set function so there is something called a set function over here as you can see vs code is suggesting us so this set function followed by the open and close parenthesis will help us to create a new empty set over here so let me just save this file now and try running this code over here what we are trying to do is again we are trying to print the type of this set one but this time it should be of the set data type so let me just run this code now so as you can see we are getting the set data type over here previously we were getting the dictionary so in order to have the empty set in Python Programming we can use the set function over here now very important question how do we add the set items in Python so basically sets are mutable which means we can add and remove items from this set however since they are unordered indexing has no meaning so guys basically if you must have noticed there is no one order in which the set items were printed previously so let us check this once again over here we provide set one it is equal to and let's say we provide some elements that is 3 2 4 1 5 and then let me just print this set one over here so we provide set 1 inside the print function let me just run this code as you can see we are getting one two three four five this is not of the same order in which we have provided these elements inside the set so we cannot use index numbers over here as well in order to access these elements one at a time since the way in which the elements inside the set are printed are not in a particular order now guys how do we add new elements to this set so basically we cannot access or change an element of a set using the indexing or slicing but we can use the add method to add an item to a set so let us say I want to add another element over here so basically what we will do is we will say initial set and then colon and then we provide set one and then let's say we provide set one dot we have something called as ADD over here as you can see this is a function that we can use in order to add elements inside the set so let's say we provide 10 as the number to be added to this particular set that is set one and then again we want to print that set one so I'll just copy this and paste this over here and then we have updated set over here so we have updated set and then set one being printed so let me just save this file and try running this code now so as you can see initial set it is one two three four five and then after adding this element we are getting the updated set as one two three four five and then the last element that is 10 over here which is being added by using the add method and this is the way that we can add the elements inside the set remember that the order in which they are added will not be followed while printing them so you cannot rely on the order in which the set elements will be printed it on Console now guys another important thing how do we remove an element from the set so we can use the discard method to remove the specified element from a set so let us say after adding this we want to remove the element that is 3 from this set so what we can do is we can provide set one and then followed by Dot and then we can have discard method in order to remove the element we need to provide the element which needs to be removed so over here we provide the number 3 which will be removed from the set one and then again let me just copy this line of code and paste this over here so that we can print the updated set after removing so over here we say updated set after removing three and then let me just save this file and try running this code now so as you can see we are getting 1 2 4 5 and then ten so the element 3 is being removed after using the discard method over here and guys this is the way that we can remove the elements from the set now guys there is another way in order to access the elements inside the set we can iterate over a set in Python by using the for Loop so this can be easily done by using the for Loop over here so what I will do is I'll just clear these lines of code and then we will say 4 and then item in set one so this is the syntax that we use while using the for Loop and then we can have the print statement over here guys notice that till now we were printing the elements of the set by using the set one variable and that is why we were getting the starting and the ending open and close curly braces over here but this time let's say we don't want those but we want only those numbers that is the elements inside the set to be printed so we can easily use the for Loop and iterate through each and every item inside the set and this is the way that we can do so we provide the print statement over here and inside the item variable one at a time all the elements will be printed over here so let me just save this file now and try running this code so as you can see we are getting one two three four five now all these numbers are on a different line what we can do is we can use the end parameter of the print function so over here we provide the end parameter and then we simply provide the space character so that all the items are separated by the space characters over here so let me just save this file now and try running this code so as you can see we are getting one two three four five which are the elements of this set if you want all these numbers to be separated by commas what we can do is instead of the space character we can provide the comma and let me just save this file and try running this code once again as you can see we are getting one two three four five and all the elements are being separated using the comma character now guys how do we find the number of set elements so we can use the Len method that is the length method to find the number of elements that is present inside the set so what we can do is simply we can provide the print statement over here and we can simply say that length of set is and then colon and then we can simply use the Len method and then inside this method we can provide the set one that is the variable name so let me just save this file now and try running this code so as we can see length of set is 5 so basically since five elements are present over here we are getting the length as 5 what if we provide some more elements let's say I provide 6 7 and let's say I provide some more duplicate elements over here that is 1 2 and then three so over here there are total 10 elements out of which three elements are duplicate so what is the exact length of the set so let me just save this file now and try running this code so as you can see length of set is 7 so even though we are having 10 items in inside the set but out of those 10 items three items are duplicate items so those duplicate items will not be considered it will be considered only once and that is why we are getting the length of this set as 7. now guys very important thing about the set operations we can carry out different set operations in Python Programming one is Union of two sets which can be done by using the union method or this or a symbol over here we can also have the set intersection which can be implemented by using the intersection method and then we also have the difference between the two sets which means we can use the difference method or the minus symbol over here so guys let us check all these operations one at a time so over here what we will do is we will have two sets over here we will say set one it is equal to 1 2 and then three and then let's say we have set 2 it is equal to 3 4 and then five now guys let's say we want to find the Union first so what we will do is we will say Union and then we will simply say set 1 followed by Dot and then we have the union method followed by the parameter needs to be set to over here because that is the another set that we want to find the union of similarly we will do the intersection and difference as well so I'll just copy and paste these lines of code over here we will say intersection in this case and then we will simply change the union method to intersection over here and then over here we will say difference so difference and then instead of this Union we will say difference so guys basically what we are doing over here is these are all the set operations the union will find all the elements that are present in set 1 and set 2 and all the elements will be unique in the intersection part we will get all the elements that are common in both the sets which means 3 in this case and then in the difference we will find all the elements that are present in set one but not present in set two so guys let me just save this file now and try running this code to see what will be the results of all these operations so as you can see the union is giving us one two three four five which means all the elements that are present in set 1 and set two so we are having one two three in set one and then in set two the three is already printed and then it is printing four and five as well in intersection we are getting only three that's because the element 3 is the only element which is common in both the sets for the difference operation we are getting only one and two that's because these are the only two elements which are present in set one but not present in set two so Guys these are certain set operations that can be implemented with Python Programming apart from this there are multiple builtin methods that you can use as far as sets are concerned so when you provide the variable name that is set 1 followed by dot as you can see these are all the methods that can be used based on your requirements so guys practice on your own so that on different inputs you get different outputs please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is dictionary in Python Programming so stay tuned
