With timestamps:

00:00 - [Music]
00:00 - hey what's up guys welcome to another
00:02 - video in which we are going to write
00:04 - Python program to merge mails so guys
00:06 - when we want to send the same
00:08 - invitations to many people the body of
00:11 - the mail does not change only the name
00:14 - can be changed and maybe the address
00:16 - needs to be changed over here so mail
00:18 - merge is a process of doing this instead
00:21 - of writing each mail separately to
00:23 - different individuals we have a template
00:26 - for a body of the mail and a list of
00:29 - names that we merge together to form all
00:32 - the males so guys this we are going to
00:33 - check with the help of examples as well
00:35 - what we are going to do is we will be
00:37 - having two files that is one file will
00:40 - be the names file it will have the list
00:42 - of all the names so as you can see for
00:44 - example we are having five names over
00:46 - here so we are going to take each name
00:49 - from this file and create a mail body
00:52 - out of it and then the second file we
00:54 - have the body.txt file over here so as
00:56 - you can see we are grading first of all
00:58 - hope you are doing good and and then
01:00 - this is a test mail so this is a simple
01:02 - test mail that we have written over here
01:04 - so guys we are going to write mails to
01:07 - different individuals first of all we
01:09 - will be having the salutations with
01:11 - different individual names and Then
01:13 - followed by this body text that we have
01:15 - written in this body file so guys over
01:17 - here the names file it is containing the
01:20 - names of the recipients and then the
01:21 - body file it contains a body of the mail
01:24 - so guys let us check this with the help
01:25 - of the Python program how we can merge
01:28 - both these files in order to create
01:30 - mails to be sent to different
01:31 - individuals so guys first of all we will
01:34 - have to open the names file so guys
01:36 - first of all we will be using the with
01:38 - keyword over here followed by open which
01:41 - will help us in order to open the file
01:43 - now guys inside this what we have to do
01:45 - is the first parameter is the name of
01:47 - the file so over here we have to give
01:49 - the entire path where the file is
01:51 - present so over here I'll simply copy
01:54 - the path over here and paste this inside
01:56 - the double quotes now guys since we are
01:58 - having a single backslash we need to
01:59 - Escape it by using the two backslashes
02:02 - so over here wherever there's a single
02:05 - backslash I am just providing another
02:07 - backslash over here so that there are
02:09 - two backslashes and then followed by in
02:11 - the end what we have to do is we have to
02:13 - provide the name of the file that is
02:15 - names.txt so over here we will say names
02:19 - followed by Dot and then txt now guys
02:22 - this is the first parameter that is the
02:24 - name of the file that we have provided
02:26 - to this open function now guys the
02:28 - second parameter is the mode in which we
02:31 - want to open this file so we provide a
02:33 - comma followed by space and then as you
02:36 - can see open text mode there is a r
02:38 - character which means we want to open it
02:40 - in the read mode over here so inside the
02:43 - double course we provide R so that the
02:46 - program knows that we are opening this
02:48 - file in the read mode over here and then
02:50 - guys after this close bracket we have to
02:52 - provide as keyword and Then followed by
02:55 - a name that we want to refer to while
02:58 - accessing the content of this file so
02:59 - guys over here we will say names
03:01 - underscore file in this case so
03:04 - basically we are going to use this as a
03:06 - variable name in order to access this
03:08 - particular file that is names.txt now
03:11 - guys after this at the end we have to
03:13 - provide a colon and then inside this
03:15 - again we have to open another file this
03:18 - time it will be the body file in this
03:20 - case so what we have to do is again we
03:22 - will be using the with keyword followed
03:24 - by space and then open and then guys
03:27 - again we will have the paths over here
03:29 - I'll simply copy the same path since
03:31 - both the files are present in the same
03:33 - directory and then I'll paste this over
03:35 - here the only changes I will have to
03:37 - change the name of the file that is
03:39 - instead of names.txt we will provide
03:42 - body dot txt in this case followed by
03:46 - comma and then we have to open it in the
03:48 - read mode so over here double quotes and
03:51 - inside this we have to provide the
03:52 - character R which represents the read
03:55 - mode of the file and then guys followed
03:57 - by S and then we name it as body find
04:00 - over here so body underscore file in
04:03 - this case now guys after the semicolon
04:04 - what we have to do is we have to read
04:06 - the content of the body file so over
04:09 - here on the next line we simply provide
04:11 - the variable name that is body it is
04:13 - equal to we use this body file name that
04:16 - we have provided over here that is body
04:18 - underscore file so over here after the
04:21 - equal to operator we use the body file
04:24 - which is referring to the body file over
04:26 - here followed by Dot and then guys we
04:28 - have something called as read method
04:30 - that reads the content of the entire
04:32 - file over here so we use this real
04:35 - method followed by open and close
04:37 - brackets so that the entire content of
04:40 - the body file is read into this body
04:42 - variable now guys what we have to do is
04:44 - we also have to read the names inside
04:47 - the names file over here that we have
04:49 - just opened so what we will be doing is
04:51 - we will be going through a for Loop over
04:53 - here so we say for name in names file in
04:58 - this case and then colon we will create
05:01 - the entire male body in this case so we
05:03 - will name the variable as mail over here
05:06 - followed by equal to the very first
05:08 - thing is we have to provide a salutation
05:10 - so we say hello and Then followed by
05:13 - space and then we should get the first
05:15 - name from this names file which is
05:17 - present inside this name variable so
05:19 - over here we say plus followed by name
05:22 - and Then followed by dot guys we can
05:24 - also use the strip method in order to
05:27 - remove the leading and trailing space
05:30 - characters if it is present it also
05:32 - removes the slash n characters if they
05:34 - are present for that particular string
05:36 - so over here we will be using the strip
05:38 - method and Then followed by we can
05:40 - simply provide comma as well over here
05:42 - and then we have to go on the next line
05:45 - so two times we will provide the Slash
05:47 - and slash n character so that the
05:49 - control flow goes to the next line and
05:51 - then after the salutation that is hello
05:53 - John for example we have to provide the
05:56 - body which we have already read from the
05:59 - body file over here so after this we
06:01 - simply Provide Plus and Then followed by
06:04 - Body in this case so guys over here we
06:06 - have provided the salutation and then we
06:08 - go to the next line after providing a
06:10 - comma and then we append the body string
06:13 - over here which was read from the body
06:14 - file over here and then this male
06:16 - variable will be having the entire male
06:19 - body that you want to send so what we
06:21 - can do is simply we can create a file
06:23 - over here now in the right mode so
06:25 - inside this for Loop while we are
06:28 - creating the male body over here what we
06:30 - can do is we can again create a new file
06:33 - software open and then this time what we
06:37 - can do is again we will be using the
06:39 - same directory over here so I'll simply
06:41 - paste the entire path and then what we
06:43 - have to do is we will create separate
06:46 - files for all the name that are present
06:48 - inside this names file over here and
06:50 - guys the file names will be same as the
06:53 - names of these people over here so what
06:55 - we can do is after providing this entire
06:58 - path we can again use the this name over
07:00 - here that is the name variable in order
07:03 - to name that file while we are creating
07:05 - that file so over here we provide plus
07:07 - and then again we provide a name
07:09 - followed by Dot and then strip in order
07:12 - to remove any extra slash n characters
07:15 - or the space characters as well and Then
07:17 - followed by dot pxt over here so again
07:20 - we have to do plus followed by double
07:22 - quotes dot txt in this case so guys
07:25 - basically inside this directory we are
07:28 - creating a text file with that name that
07:31 - we have just read from the names file
07:33 - over here and then guys what we have to
07:35 - do is after comma we need to open this
07:37 - file in the right mode so this time we
07:40 - provide W in this case which represents
07:43 - the right mode of the file and then guys
07:45 - after this we again name this file so as
07:48 - and then we use the mail file in this
07:52 - case so basically this mail file
07:54 - variable will be used in order to write
07:56 - the mail content so over here what we
07:59 - will be doing is we can simply provide
08:01 - mail file over here followed by Dot and
08:04 - then we can simply use the right method
08:07 - in this case so this write method will
08:09 - take the string as the parameter which
08:12 - will be written in this file which we
08:14 - have just open in the right mode so over
08:17 - here we will be using this male string
08:20 - in this case so we provide this mail
08:22 - variable over here so guys after the
08:25 - execution of this for Loop all the names
08:28 - that we have just read from the names
08:30 - file will have their individual files
08:33 - having the mail content and they will be
08:36 - addressed by using their own names over
08:38 - here just like how we have programmed it
08:40 - using this line of code so guys let me
08:42 - just save this file now and before
08:44 - running this we can provide a print
08:46 - statement after the end of the program
08:48 - over here so we will simply print we can
08:51 - say males return successfully so we will
08:55 - have this string printed on the console
08:57 - after all the files are generated so
08:59 - guys let me just save this file now and
09:01 - before running this code what I will do
09:03 - is I'll just show you that we have only
09:05 - five files over here that is a DOT txt
09:08 - file more five files will be created
09:10 - with these names over here which will
09:12 - have the content of the mail in this
09:15 - case so let me just run this code now so
09:17 - when we run this code as you can see
09:19 - males returns successfully is being
09:21 - printed over here and when we go to the
09:23 - directory as you can see these files are
09:26 - getting created that is Harry John Messi
09:29 - and then we have Peter and then Ronaldo
09:31 - and then guys what will be the content
09:33 - of these files let us check that when we
09:35 - open this it says hello Harry hope you
09:38 - are doing good this is a test mail
09:40 - regards programming for beginners so we
09:43 - are addressing Harry over here in this
09:44 - case and then if we open another file
09:47 - let's say we open john5 over here it
09:49 - says hello John and then again the other
09:52 - file that is messy it says hello messy
09:54 - and then the content of the mail is same
09:57 - over here and then for the other two
09:58 - names as well as you can see we have
10:00 - hello Ronaldo over here for the Ronaldo
10:02 - file and then for Peter as well when we
10:05 - open this it says hello Peter in this
10:07 - case so guys when you have multiple
10:09 - people to be invited or to be addressed
10:12 - in a same male body we can use this
10:15 - Python program in order to read the
10:18 - names from one file and read the body of
10:20 - the mail from another file and merge
10:23 - both the content of the files to create
10:25 - another result file which can be sent as
10:28 - a mail to those individual recipients so
10:31 - guys please make sure that you practice
10:32 - on your own so that on different inputs
10:34 - you get different outputs make sure that
10:36 - you like this video so that it reaches
10:38 - to more people and subscribe to the
10:40 - channel so that you get the
10:41 - notifications on upcoming videos as well
10:43 - the next video that we are going to talk
10:45 - about is Python program to print
10:47 - inverted half pyramid pattern so stay
10:50 - tuned

Cleaned transcript:

hey what's up guys welcome to another video in which we are going to write Python program to merge mails so guys when we want to send the same invitations to many people the body of the mail does not change only the name can be changed and maybe the address needs to be changed over here so mail merge is a process of doing this instead of writing each mail separately to different individuals we have a template for a body of the mail and a list of names that we merge together to form all the males so guys this we are going to check with the help of examples as well what we are going to do is we will be having two files that is one file will be the names file it will have the list of all the names so as you can see for example we are having five names over here so we are going to take each name from this file and create a mail body out of it and then the second file we have the body.txt file over here so as you can see we are grading first of all hope you are doing good and and then this is a test mail so this is a simple test mail that we have written over here so guys we are going to write mails to different individuals first of all we will be having the salutations with different individual names and Then followed by this body text that we have written in this body file so guys over here the names file it is containing the names of the recipients and then the body file it contains a body of the mail so guys let us check this with the help of the Python program how we can merge both these files in order to create mails to be sent to different individuals so guys first of all we will have to open the names file so guys first of all we will be using the with keyword over here followed by open which will help us in order to open the file now guys inside this what we have to do is the first parameter is the name of the file so over here we have to give the entire path where the file is present so over here I'll simply copy the path over here and paste this inside the double quotes now guys since we are having a single backslash we need to Escape it by using the two backslashes so over here wherever there's a single backslash I am just providing another backslash over here so that there are two backslashes and then followed by in the end what we have to do is we have to provide the name of the file that is names.txt so over here we will say names followed by Dot and then txt now guys this is the first parameter that is the name of the file that we have provided to this open function now guys the second parameter is the mode in which we want to open this file so we provide a comma followed by space and then as you can see open text mode there is a r character which means we want to open it in the read mode over here so inside the double course we provide R so that the program knows that we are opening this file in the read mode over here and then guys after this close bracket we have to provide as keyword and Then followed by a name that we want to refer to while accessing the content of this file so guys over here we will say names underscore file in this case so basically we are going to use this as a variable name in order to access this particular file that is names.txt now guys after this at the end we have to provide a colon and then inside this again we have to open another file this time it will be the body file in this case so what we have to do is again we will be using the with keyword followed by space and then open and then guys again we will have the paths over here I'll simply copy the same path since both the files are present in the same directory and then I'll paste this over here the only changes I will have to change the name of the file that is instead of names.txt we will provide body dot txt in this case followed by comma and then we have to open it in the read mode so over here double quotes and inside this we have to provide the character R which represents the read mode of the file and then guys followed by S and then we name it as body find over here so body underscore file in this case now guys after the semicolon what we have to do is we have to read the content of the body file so over here on the next line we simply provide the variable name that is body it is equal to we use this body file name that we have provided over here that is body underscore file so over here after the equal to operator we use the body file which is referring to the body file over here followed by Dot and then guys we have something called as read method that reads the content of the entire file over here so we use this real method followed by open and close brackets so that the entire content of the body file is read into this body variable now guys what we have to do is we also have to read the names inside the names file over here that we have just opened so what we will be doing is we will be going through a for Loop over here so we say for name in names file in this case and then colon we will create the entire male body in this case so we will name the variable as mail over here followed by equal to the very first thing is we have to provide a salutation so we say hello and Then followed by space and then we should get the first name from this names file which is present inside this name variable so over here we say plus followed by name and Then followed by dot guys we can also use the strip method in order to remove the leading and trailing space characters if it is present it also removes the slash n characters if they are present for that particular string so over here we will be using the strip method and Then followed by we can simply provide comma as well over here and then we have to go on the next line so two times we will provide the Slash and slash n character so that the control flow goes to the next line and then after the salutation that is hello John for example we have to provide the body which we have already read from the body file over here so after this we simply Provide Plus and Then followed by Body in this case so guys over here we have provided the salutation and then we go to the next line after providing a comma and then we append the body string over here which was read from the body file over here and then this male variable will be having the entire male body that you want to send so what we can do is simply we can create a file over here now in the right mode so inside this for Loop while we are creating the male body over here what we can do is we can again create a new file software open and then this time what we can do is again we will be using the same directory over here so I'll simply paste the entire path and then what we have to do is we will create separate files for all the name that are present inside this names file over here and guys the file names will be same as the names of these people over here so what we can do is after providing this entire path we can again use the this name over here that is the name variable in order to name that file while we are creating that file so over here we provide plus and then again we provide a name followed by Dot and then strip in order to remove any extra slash n characters or the space characters as well and Then followed by dot pxt over here so again we have to do plus followed by double quotes dot txt in this case so guys basically inside this directory we are creating a text file with that name that we have just read from the names file over here and then guys what we have to do is after comma we need to open this file in the right mode so this time we provide W in this case which represents the right mode of the file and then guys after this we again name this file so as and then we use the mail file in this case so basically this mail file variable will be used in order to write the mail content so over here what we will be doing is we can simply provide mail file over here followed by Dot and then we can simply use the right method in this case so this write method will take the string as the parameter which will be written in this file which we have just open in the right mode so over here we will be using this male string in this case so we provide this mail variable over here so guys after the execution of this for Loop all the names that we have just read from the names file will have their individual files having the mail content and they will be addressed by using their own names over here just like how we have programmed it using this line of code so guys let me just save this file now and before running this we can provide a print statement after the end of the program over here so we will simply print we can say males return successfully so we will have this string printed on the console after all the files are generated so guys let me just save this file now and before running this code what I will do is I'll just show you that we have only five files over here that is a DOT txt file more five files will be created with these names over here which will have the content of the mail in this case so let me just run this code now so when we run this code as you can see males returns successfully is being printed over here and when we go to the directory as you can see these files are getting created that is Harry John Messi and then we have Peter and then Ronaldo and then guys what will be the content of these files let us check that when we open this it says hello Harry hope you are doing good this is a test mail regards programming for beginners so we are addressing Harry over here in this case and then if we open another file let's say we open john5 over here it says hello John and then again the other file that is messy it says hello messy and then the content of the mail is same over here and then for the other two names as well as you can see we have hello Ronaldo over here for the Ronaldo file and then for Peter as well when we open this it says hello Peter in this case so guys when you have multiple people to be invited or to be addressed in a same male body we can use this Python program in order to read the names from one file and read the body of the mail from another file and merge both the content of the files to create another result file which can be sent as a mail to those individual recipients so guys please make sure that you practice on your own so that on different inputs you get different outputs make sure that you like this video so that it reaches to more people and subscribe to the channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is Python program to print inverted half pyramid pattern so stay tuned
