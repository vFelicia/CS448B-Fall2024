With timestamps:

00:00 - in this video we are going to cover the
00:01 - complete HTML tutorial as a part of web
00:05 - development so guys if you want to make
00:06 - a career in web development it is very
00:09 - important that you should know the
00:10 - basics of the HTML and we are going to
00:13 - cover the basic and the intermediate
00:15 - levels of the HTML tutorial with the
00:17 - help of several examples so guys while
00:19 - you're watching this video please make
00:21 - sure that you practice on your own so
00:22 - that on different inputs you get
00:24 - different outputs and that is how you
00:26 - are going to learn a lot about HTML so
00:29 - let's get started now HTML stands for
00:31 - hyper text markup language so guys
00:34 - basically this is the full form of HTML
00:36 - that is hyper text markup language which
00:39 - is the most widely used language on web
00:41 - to develop web pages so any web pages if
00:44 - you see if I open the Google Chrome
00:47 - browser over here this is the default
00:49 - page of the Google and if you right
00:51 - click over here and then go to inspect
00:53 - as you can see inspect is the option
00:55 - under the elements stab you can see the
00:58 - entire HTML content over here so
01:00 - basically this is the HTML that was
01:02 - written behind the scenes in order to
01:05 - show you this particular page with an
01:07 - image of Google over here so basically
01:09 - it has various attributes as you can see
01:11 - these are nothing but these are the tags
01:13 - that we are going to see in this video
01:15 - series as well so guys you are going to
01:17 - learn a lot about the HTML in order to
01:20 - develop the web pages that you can see
01:22 - in today's world now HTML is a must for
01:25 - students and working professionals to
01:28 - become a great software engineer
01:30 - especially when they are working in web
01:32 - development domain now guys what are the
01:34 - advantages of learning HTML first of all
01:36 - you will be able to create a website
01:38 - which is very important as a software
01:40 - engineer you can also become a web
01:42 - designer over here and design the
01:44 - websites you will also be able to
01:47 - understand the web and how it works and
01:49 - apart from this you can learn the other
01:51 - languages as well for which HTML becomes
01:54 - very important and how you understand
01:56 - HTML will help you to learn the other
01:58 - languages as well so guys let us now see
02:00 - the example of a Hello World using HTML
02:03 - over here I will be using VSS code over
02:06 - here in this entire video series you can
02:08 - use your own text editor of your choice
02:10 - whichever you are comfortable with so
02:12 - over here I'm going to create a new file
02:14 - so as you can see we have a new text
02:16 - file over here and then we are going to
02:19 - click on this select a language and then
02:21 - basically I'm going to search for HTML
02:23 - since this is the format that we are
02:25 - going to write the HTML code over here
02:28 - so guys let me just save this file now I
02:30 - just save it in a particular folder in
02:31 - this case so basically I'm going to
02:33 - create a new HTML file in this directory
02:36 - so I'm going to copy this and paste this
02:38 - over here and then we are going to give
02:40 - the name that is test.html so guys
02:43 - always remember that whatever HTML code
02:46 - that you are going to write in the HTML
02:48 - file it must be having the extension of
02:50 - HTML over here or else HTM so that is
02:53 - the extension that is being used by the
02:55 - HTML files and then we click on save so
02:58 - guys basically this file has has been
03:00 - named as test.html now guys we are going
03:02 - to write a simple HTML code over here
03:05 - that is having hello world which is
03:07 - going to be displayed on the web page so
03:09 - guys the very first thing that you are
03:10 - supposed to do whenever you writing the
03:12 - code in the HTML file is have the dog
03:15 - type tag over here so basically you have
03:17 - to type the less than symbol over here
03:20 - and then as you can see vs code is
03:22 - suggesting us all the tags that you can
03:24 - use in the HTML code based on your
03:26 - requirements so guys basically the very
03:28 - first line is this exclamation And Then
03:30 - followed by dog type and then we have
03:32 - something called as HTML over here so
03:35 - guys this particular line tells the
03:36 - browser in order to interpret this file
03:39 - as the HTML and show it to the latest
03:41 - browser as the HTML 5 version and then
03:44 - guys after this we need to have the main
03:46 - HTML tag so over here again we need to
03:49 - press the less than sign and then we
03:51 - have something called as HTML and then
03:54 - we need to close it by using the greater
03:56 - than sign over here so as you can see
03:58 - the less than sign and greater than sign
04:00 - are being used and then within that we
04:02 - are using the keywords which are known
04:05 - as tags so guys basically these things
04:07 - are called as tags in HTML we have the
04:09 - opening tag as the HTML over here within
04:12 - the open and close angled brackets and
04:15 - then over here we have the closing tag
04:17 - which is starting with the forward slash
04:19 - over here as you can see so guys most of
04:21 - the tags have start tag and the end tag
04:24 - in this case we called this tag that is
04:26 - the starting tag as the start tag and
04:28 - the ending tag tag is the end tag over
04:31 - here and then inside that we will have
04:33 - our content so inside the HTML main tags
04:37 - we have the two main tags over here one
04:39 - is called head so this is another tag so
04:41 - which is having the start tag and the
04:43 - end tag in this case and then in order
04:46 - to define the body of the web page we
04:48 - have something called as body so as you
04:50 - can see we have the body tag as well if
04:52 - you notice all the Texs are starting
04:54 - with the less than sign over here which
04:56 - is the angled bracket and then getting
04:58 - ended with the greater than sign over
05:01 - here so this is important whenever you
05:02 - are writing the HTML code now guys what
05:05 - we are going to do is inside head you
05:07 - can Define the title of the web page so
05:10 - what is the meaning of title so over
05:11 - here as you can see we have the head tag
05:13 - over here of the Google page and then if
05:16 - you go down over here we have something
05:17 - called as title now this title as you
05:20 - can see the content is new tag which is
05:22 - being displayed over here on the new tab
05:24 - in this case so whatever content you put
05:27 - inside the title tags over here the same
05:29 - content will be displayed on the tab of
05:32 - the browser so guys let us put the title
05:35 - over here inside the ha Tex so basically
05:37 - this title must be inside the head tag
05:39 - and then it must start with the title
05:41 - tag over here and then it will end with
05:43 - the another title tag which is having
05:45 - the forward slash over here at the start
05:48 - and then guys what we will be having is
05:50 - we will simply say test title in this
05:52 - case so guys basically this content will
05:54 - be displayed instead of this new tab on
05:57 - the tab of the browser now guys what we
05:59 - we will be doing is inside this body we
06:01 - will say hello world so how do we
06:04 - display the hello world we will be using
06:06 - the header tag that we are going to
06:07 - check in the upcoming videos as well now
06:10 - how do we Define the header tag again we
06:12 - press the less than sign over here and
06:14 - then we have something called as H and
06:17 - Then followed by one number so basically
06:19 - these are the numbers of the header tags
06:22 - so H1 represents the highest heading
06:24 - with the biggest size so as you can see
06:27 - over here the H1 element represents a
06:29 - section heading and then if you go to H2
06:32 - again it represents the section heading
06:34 - but the size of this H2 that is the
06:36 - header tag is less than the size of this
06:39 - H1 tag over here and then similarly as
06:41 - we go down to the number H6 the size of
06:44 - the headers will keep on decreasing so
06:46 - guys in this case we are going to use H1
06:48 - over here and then followed by closing
06:51 - bracket in this case and then we will
06:53 - say hello world so over here we are
06:56 - saying hello world inside the header tag
06:58 - that is H1 so guys this is the basic
07:00 - structure of the HTML page this page
07:03 - looks very simple and it is very basic
07:05 - as we move forward to the upcoming
07:07 - videos we will move from the very basic
07:10 - code to the advanced level code so that
07:12 - you can learn a lot about the HTML now
07:15 - guys what we have to do is simply we
07:16 - will save this file now so we can go to
07:19 - this file and then we can select this
07:21 - save option you can also use the control
07:23 - as combination of the keys on your
07:25 - keyboard in order to save the file now
07:28 - guys after saving this file we we have
07:29 - to come to this Windows Explorer as you
07:31 - can see we have this test.html file
07:34 - being saved over here and then we should
07:36 - be able to open this using the Google
07:38 - Chrome so you just need to double click
07:40 - over here on this file so when we double
07:42 - click on this as you can see we are
07:44 - getting hello world in this case guys
07:46 - basically since we have provided this
07:48 - hello world content inside the header
07:50 - tag over here that is why we are getting
07:52 - this hello world as the heading of this
07:55 - page now guys if you just change the
07:56 - size of this H1 to H2 which means the
07:59 - size should decrease to some extent and
08:01 - when we just save this file now and come
08:03 - back again to this browser we just need
08:05 - to press this refresh button so that it
08:08 - takes the latest content from this
08:10 - test.html so I'm going to press this
08:13 - refresh button as you can see the size
08:15 - of this hello world has decreased to
08:17 - some extent since we have changed the
08:19 - tag from H1 to H2 so guys to summarize
08:22 - basically we are going to have the dock
08:24 - type HTML over here as the first tag and
08:27 - then we are going to have the main HTML
08:29 - tag inside this main HTML tag we are
08:32 - going to have two sections one is the
08:34 - head section which is having the title
08:36 - of the page and then another section is
08:38 - the body section which is going to have
08:40 - the entire content of the page if you
08:42 - see the head section over here the title
08:45 - you can see the test title which is
08:47 - coming from this title tag if we change
08:50 - this title to test page in this case and
08:52 - let me just save this file now and try
08:54 - refreshing this browser you should see
08:56 - the change in this test title over here
08:58 - so when we press refresh as you can see
09:00 - it has changed to test page in this case
09:03 - so guys this is the very basic simple
09:05 - HTML code that you can practice on your
09:07 - own please make sure that you like this
09:09 - video so that it reaches to more people
09:11 - and subscribe to this channel so that
09:13 - you get the notifications on upcoming
09:14 - videos as well the basic HTML Texs that
09:17 - you can use in the HTML so guys
09:20 - basically below are some of the basic
09:22 - HTML Texs that we have already seen in
09:24 - the previous video as well the very
09:26 - first tag is the exclamation mark And
09:28 - Then followed by the dog type keyword
09:31 - and then we have something called as
09:32 - HTML over here now guys this helps the
09:34 - latest browsers to understand that the
09:37 - code that is going to be followed after
09:39 - this tag is going to be the HTML code
09:42 - and then it is going to be the HTML 5
09:44 - version so basically this tag defines
09:46 - the document type and the HTML version
09:49 - over here the next tag is the HTML tag
09:51 - now this tag encloses the complete HTML
09:54 - document and mainly comprises of
09:56 - document header which is represented by
09:59 - the first tag that is head that we have
10:01 - already seen in the previous video as
10:03 - well and the document body which is
10:05 - represented by Body tags over here so
10:07 - guys previously we have seen that inside
10:09 - the HTML tag we have two main tags that
10:12 - is head tag over here and then the other
10:15 - tag is the body tag inside the head tag
10:17 - we have the title of the page and then
10:19 - if there is any script that is to be
10:21 - written then we can include that as well
10:23 - or else meta description or the external
10:26 - files that we want to refer to we can
10:28 - use all them inside the head tag and
10:31 - inside the body tag we can Define the
10:33 - content of the body like what should
10:36 - come inside the page of the web
10:38 - application those things will come
10:40 - inside this body tag over here so
10:42 - previously we had seen that this hello
10:44 - world is included as the content of this
10:47 - body tag inside the header tag over here
10:50 - so guys this is the main purpose of the
10:51 - body tag to have the entire content of
10:54 - the page now guys next we also have the
10:56 - head tag over here this tag represents
10:58 - the docents header which can keep the
11:01 - other html text like title link Etc as
11:04 - we have just discussed and then we have
11:06 - title which comes inside the head tag
11:08 - over here basically this title tag is
11:11 - used inside the head tag to mention the
11:13 - document title so basically this title
11:16 - that you see that is test page over here
11:18 - it comes from this title tag so if we
11:21 - change the title tag content over here
11:23 - to some other content let's say we
11:25 - provide example title in this case
11:28 - instead of test page let me just save
11:30 - this file now and go to the browser and
11:32 - refresh this page as you can see the
11:35 - title has been changed to example title
11:37 - in this case so you can control this
11:39 - thing inside the title tag over here
11:42 - which comes inside the head tag now guys
11:44 - the next important tag is the body tag
11:46 - over here now this tag represents the
11:48 - documents body which keeps other HTML
11:51 - tags like H1 Dev and then p and then Etc
11:55 - so basically this is the div tag that we
11:57 - are going to check in the upcoming video
11:59 - videos as well and then we also have the
12:01 - P tag which represents the paragraph
12:03 - inside the body tag so basically all
12:06 - those things comes under the body tag
12:08 - over here we also have H1 tag which is
12:11 - the highest heading so over here let us
12:13 - say we change the H2 to H1 over here so
12:17 - when we just save this file now and try
12:19 - refreshing this page you can notice the
12:21 - size of the hello world content how it
12:24 - increases once we refresh over here so
12:26 - when I press refresh as you can see the
12:28 - size of the hello this is the highest
12:30 - size as far as the header tag is
12:32 - concerned since we are using the H1 tag
12:35 - over here now guys the next tag as you
12:37 - can see we have just discussed about the
12:39 - H1 tag it ranges from H1 up to H6 so it
12:43 - depends on your requirement as to which
12:45 - header tag you want to use so basically
12:47 - this tag represents the heading of the
12:50 - web page and then we also have the P tag
12:52 - which represents the paragraph over here
12:54 - so guys what we will be doing is let us
12:56 - say we want to add a paragraph inside
12:58 - the page P so we come over here and
13:01 - inside the body tag after this hello
13:03 - world header we will have the paragraph
13:05 - tag so let us say I provide the less
13:08 - than symbol and then we need to provide
13:10 - the P which stands for paragraph and
13:12 - then as I have told you this is the
13:14 - start tag over here and this is the end
13:16 - tag over here inside this we are going
13:18 - to provide the content that this is a
13:22 - paragraph in this case so we simply say
13:24 - this is a paragraph let me just save
13:26 - this file now go to the browser and we
13:28 - need to refresh this page once again in
13:30 - order to see the updated content so when
13:33 - we press refresh as you can see it is
13:35 - saying this is a paragraph over here now
13:38 - guys it may so happen that the size of
13:39 - this content that you are seeing right
13:41 - now while watching this video may not
13:43 - match with the size of the content that
13:45 - you are typing on your own that may be
13:48 - because I have increased the zoom level
13:51 - over here it is up to 150% on your
13:54 - browser it may so happen that it is 100%
13:56 - by default and automatically the size
13:59 - will be shown in this particular way so
14:01 - since I showing you how it works that is
14:03 - the reason why I have increased the zoom
14:06 - level over here so that you can clearly
14:08 - see the difference between the different
14:10 - tags that we are using so guys it
14:12 - depends on you at which zoom level you
14:14 - guys are working now guys if we want to
14:16 - add another paragraph over here we will
14:18 - once again provide another P tag so over
14:21 - here let us provide another P tag over
14:23 - here and then we will say this is
14:27 - another paragraph
14:29 - so guys what exactly will happen is the
14:31 - control flow will come to the next line
14:33 - on the browser and then it will display
14:36 - this particular line so let me just save
14:38 - this file now and refresh this web
14:40 - browser once again so as you can see we
14:42 - are getting this is another paragraph
14:44 - over here so basically both these tags
14:46 - that is H1 and the P tag makes the
14:49 - browser to come to the next line and
14:51 - then print the content that is provided
14:54 - to them guys there are certain texts
14:56 - which will help you to continue on the
14:58 - same line like how we have provided
15:00 - hello world over here and then after
15:02 - this we will have this is a paragraph
15:05 - content on the same line so those are
15:07 - the different tags that we will be using
15:09 - in the upcoming videos as well heading
15:11 - paragraph and line break tags in HTML so
15:14 - guys what is a heading tag so basically
15:16 - any document right now you can see on
15:18 - the web it starts with a heading so if
15:21 - you open any of the web page related to
15:23 - news or sports articles it starts with a
15:26 - heading which mentions about the
15:28 - headline or what what is going on in the
15:30 - sports news now guys you can use the
15:32 - different sizes for your headings over
15:34 - here it ranges from H1 and then we have
15:37 - H2 up to H6 and the only difference
15:40 - while using these header tags is the
15:42 - decrease in the font so basically we are
15:45 - going to check all these with the help
15:46 - of example now so let us move to the vs
15:49 - code over here as you can see this is
15:51 - the basic structure that we have already
15:53 - learned in the previous video but what
15:55 - we are going to do is I'll just remove
15:57 - entire content and type it once again so
15:59 - that you get more clear understanding
16:01 - about the entire basic structure of the
16:03 - HTML code and you can practice on your
16:06 - own similarly so guys the very first
16:08 - thing that we are going to do is start
16:10 - with the less than symbol and then we
16:12 - are going to have the doc type keyword
16:14 - and Then followed by HTML which is being
16:16 - suggested by the vs code over here now
16:19 - the next thing is the main tag that is
16:21 - HTML so over here the entire content
16:24 - comes inside the HTML tags so this is
16:27 - the start tag over here once we we press
16:29 - on this and then we use the greater than
16:32 - symbol and then you can see we also have
16:34 - the end tag that is automatically return
16:36 - by the VSS code over here now guys why
16:39 - we are using VSS code that's because it
16:41 - helps us in order to provide certain
16:43 - autoc completion when we are writing the
16:45 - code you can also use the other text
16:47 - editor like simple notepad over here
16:50 - because what will happen in the notepad
16:52 - so if we open the notepad text editor
16:54 - over here we will have to manually type
16:57 - all the tags over here as you can see we
16:59 - have started with the less than symbol
17:01 - and then we have to provide the
17:02 - exclamation mark and then simply we have
17:05 - to provide the talk type and then HTML
17:08 - keyword now in this case you are not
17:10 - having any auto suggestion over here
17:12 - which is being provided by the vs code
17:14 - and that is why most of the programmers
17:16 - use vs code text editor in order to
17:18 - write their HTML code or any other code
17:21 - in the other programming languages such
17:23 - as python C or C++ languages so
17:26 - basically after writing this HTML start
17:28 - and the end tag we need to write the
17:31 - content inside these tags that is
17:33 - between the start and the end tag over
17:35 - here now you can divide the content of
17:37 - the entire web page into two parts the
17:39 - first part is the head tag over here and
17:42 - then after this the second part is the
17:44 - body tag over here so guys we have the
17:46 - two main Texs that is head tag which
17:48 - will Define The Meta description of the
17:50 - page and also the title of the page over
17:53 - here as you can see this is the example
17:55 - title being showed which comes from the
17:57 - title tag which will be present inside
18:00 - the head tag and then this body tag will
18:02 - Define all the content inside this web
18:05 - page over here as you can see these are
18:07 - the things being highlighted which will
18:09 - come inside the body tag over here now
18:11 - guys what we will do is we will Define
18:13 - the title so inside the head we are
18:16 - going to have the title tag so over here
18:18 - we will use title and then what we are
18:20 - going to see we are going to see headers
18:22 - and Then followed by paragraph and then
18:25 - we are also going to see line breaks
18:27 - over here so we say line brakes now guys
18:30 - I'll simply close this text editor over
18:32 - here and the very first thing that we
18:34 - are going to see is the different sizes
18:36 - of the header tags over here so we are
18:38 - going to Define inside the body the
18:41 - first tag that is H1 in this case which
18:43 - is the header one now we will simply say
18:46 - this is heading number one over here
18:50 - okay similarly we are going to provide
18:52 - the other tags that is H2 as well so we
18:55 - provide h2 tag and then we simply say
18:59 - this is heading to and then we have H3
19:03 - as well so simply we say H3 and then
19:06 - this is heading three now similarly I
19:10 - will quickly type The Heading four 5 and
19:13 - six as well so as you can see I have
19:15 - quickly typed over here the headers that
19:17 - is H1 H2 H3 and Then followed by H4 H5
19:22 - and H6 as well and then we have given
19:24 - all the numbers that is 1 up to 6 over
19:27 - here now Guys these are all the header
19:29 - Texs that we have already included
19:31 - inside the body of our HTML code now let
19:34 - me just save this file now and open this
19:37 - file that is test.html in the browser
19:39 - now it is already opened over here that
19:41 - is test.html notice that this is the
19:44 - previous content which we have not
19:46 - refreshed yet so when I press on this
19:48 - reload this page button over here you
19:50 - can see all the changes that we have
19:52 - just done so after pressing the reload
19:55 - button you can see headers paragraph and
19:58 - line break the title is being displayed
20:00 - over here which is coming from this
20:02 - title tag in this case and then guys all
20:04 - the content that is this is heading one
20:07 - up to this is heading six is being
20:08 - displayed over here as you can see with
20:10 - different sizes so this is H1 and then
20:13 - we have H2 H3 H4 H5 and H6 so the only
20:18 - difference you can see is the decrease
20:20 - in the size of all the headers so guys
20:23 - this is the example of the header tag as
20:25 - you can see now guys let us move to
20:27 - another example as you can see we have
20:29 - something called as paragraph tag over
20:31 - here now the P tag offers a way to
20:33 - structure your text into different
20:35 - paragraphs so basically after this
20:37 - heading in any of the articles that you
20:39 - can see online we have certain
20:41 - information on those pages and those are
20:44 - nothing but the paragraph that are being
20:45 - written while creating the HTML code and
20:48 - this is the tag that we are going to use
20:51 - now each paragraph of text should go in
20:53 - between an opening tag that is the P tag
20:56 - and a closing tag which includes the
20:58 - forward slash over here so guys let us
21:01 - check that after all these headers what
21:03 - we are going to do is we are going to
21:05 - define the paragraph tag so over here we
21:07 - simply use the P tag over here and then
21:10 - we can have the content that is this is
21:13 - a paragraph over here so guys basically
21:16 - we are going to have this is a paragraph
21:18 - let me just save this file now and try
21:20 - reloading this page once again so over
21:22 - here we come to our Chrome browser and
21:25 - then when we reload this page you can
21:27 - see this is a paragraph being displayed
21:29 - over here now guys in order to continue
21:31 - on the same line we can write another
21:33 - statement inside the same paragraph so
21:36 - what we will do is we will simply
21:38 - provide a full stop and then we will say
21:40 - this is a
21:43 - statement inside same
21:47 - paragraph So guys basically we are
21:49 - writing another statement after having a
21:52 - full stop over here but inside the same
21:54 - paragraph over here so let me just save
21:56 - this file now and try reloading this
21:58 - page once again so as you can see we are
22:00 - getting this is a paragraph and then
22:03 - this is a statement inside same
22:05 - paragraph So basically this is the way
22:07 - in order to write the paragraph we can
22:09 - have multiple statements inside the same
22:11 - paragraph and if you want to go to the
22:13 - next paragraph over here if you want to
22:16 - write some other paragraph you have to
22:18 - create another paragraph tag so over
22:21 - here again we are going to create
22:22 - another P tag over here and then we are
22:25 - going to say this is another paragraph
22:29 - and then let's say after this full stop
22:31 - we want to write another statement so we
22:33 - will say this is another statement in
22:40 - paragraph number two and then we have
22:43 - full stop so let me just save this file
22:46 - now and try reloading this page once
22:48 - again so as you can see we are getting
22:49 - our second paragraph over here it says
22:52 - this is another paragraph This is
22:54 - another statement in paragraph number
22:56 - two so guys this is the way in order to
22:58 - write your content inside different
23:00 - paragraphs over here by using different
23:03 - P tags please note that you have not
23:05 - used anything extra in order to make the
23:08 - control flow come from the first line to
23:10 - the second line over here basically when
23:12 - you write the content inside the P tag
23:15 - The Interpreter of the browser takes
23:17 - care of coming to the next line and
23:19 - writing the content of another tag on
23:21 - another line and not to continue on the
23:24 - same line so guys this is very important
23:26 - as far as the header tags and the
23:27 - paragraph tags are concerned now guys
23:29 - let us move to another example as you
23:31 - can see we have something called as line
23:33 - break tag so whenever you use the BR
23:36 - followed by a space character and then
23:38 - we have the forward / element so this is
23:41 - another line break tag that you can use
23:44 - what it means is anything following it
23:46 - starts from the next line so basically
23:49 - whatever content you write after this
23:51 - particular tag will go to the next line
23:53 - so this tag is an example of an empty
23:56 - tag where you do not need opening and
23:58 - closing tags as there is nothing to go
24:01 - in between them so guys this is an
24:03 - example of the empty tag because there
24:05 - is no open and end tag over here so in
24:07 - the same example what we will be doing
24:09 - is let's say we have this is a paragraph
24:12 - now you want this statement that is this
24:14 - is a statement inside the same paragraph
24:16 - to go on the next line so what you can
24:19 - do is before this content you can have
24:21 - the line break tags so over here what we
24:24 - will do is we will provide the less than
24:26 - symbol and then we have the BR tag in
24:29 - this case followed by a space character
24:31 - and then we have forward slash over here
24:33 - and then the greater than symbol so guys
24:36 - this is the tag over here which is
24:37 - called line break tag which helps you to
24:40 - go to the next line and print this
24:42 - statement on the next line within the
24:44 - same paragraph so let me just save this
24:46 - file now and try reloading this page
24:49 - once again you can notice that we have
24:51 - both these statements at is this is a
24:52 - paragraph and this is a statement inside
24:55 - same paragraph on this single line so
24:57 - what will happen after we reload this
24:59 - page so when we press on reload as you
25:02 - can see this is a statement inside same
25:04 - paragraph has gone to the next line over
25:06 - here that's because we have provided the
25:08 - line break tag over here now if I remove
25:11 - the same line break tag and then save
25:13 - this file now and try reloading this
25:15 - page once again so this statement has
25:17 - come back to that first line over here
25:19 - similarly if we provide the line break
25:21 - tag over here in the second paragraph so
25:23 - what we will do is we will provide BR
25:25 - tag followed by space and then we have
25:27 - the forward slash so let me just save
25:30 - this file now and try reloading this
25:32 - page once again so as you can see this
25:33 - is another statement in paragraph number
25:35 - two so guys this is the main
25:37 - functionality of the BR or the line
25:40 - break tag that is it helps The
25:42 - Interpreter to come to the next line and
25:45 - print the content that is following that
25:47 - tag now guys one very important thing is
25:49 - it is not necessary that you end it with
25:51 - a forward slash over here so if I remove
25:53 - this and if I remove the space character
25:56 - as well so this will work or not let us
25:58 - check that so if I save this file now
26:00 - and try reloading this page once again
26:02 - as you can see there is no change right
26:04 - now and then this particular statement
26:06 - is still on the second line over here so
26:09 - simply if you provide the BR as well it
26:11 - will work but guys it is still
26:12 - recommended that you provide the BR tag
26:15 - followed by a space character and then
26:17 - we have the forward slashes so that in
26:19 - case the client is having any of the
26:22 - older versions of the browser then the
26:24 - line break tag should work and it should
26:27 - not break its own functionality so if we
26:29 - check certain older browsers it is still
26:32 - using this particular format so that the
26:34 - line break text work properly so let me
26:36 - just save this file now and try running
26:38 - this code once again so as you can see
26:40 - this is the functionality that works in
26:42 - the older browsers as well as the new
26:44 - browsers as well so guys comment in the
26:46 - comment section below how are you liking
26:48 - this video series whether you are
26:49 - getting some real value or not and
26:51 - whether you are learning HTML with the
26:53 - help of this HTML tutorial please make
26:55 - sure that you practice on your own so
26:57 - that on different inputs you get
26:58 - different outputs Center tag for
27:01 - centering the content in HTML so guys
27:04 - basically we can easily use the center
27:06 - tag over here to put any content in the
27:09 - center of the page or any table cell
27:12 - guys please note that this tag is
27:14 - dicated in HTML 5 so it was being used
27:18 - previously in the previous versions of
27:20 - the HTML compared to HTML 5 and you
27:23 - should instead use CSS property that is
27:26 - the text align in order to Center the
27:29 - content of the HTML but still we are
27:31 - going to see how the center tag used to
27:34 - work over here so let us move to the vs
27:36 - code over here so basically I'm going to
27:38 - remove certain content from the previous
27:40 - code that we have written so from H2 to
27:43 - H6 we are going to remove the content
27:46 - over here and for this paragraph as well
27:48 - we are going to remove the statement
27:50 - that this is a statement inside the same
27:52 - paragraph and over here we are going to
27:54 - remove this particular content so we are
27:56 - going to keep it simple that is one is
27:59 - the header tag with this is heading
28:01 - number one and then we are going to have
28:03 - the two paragraph tags over here that is
28:06 - this is a paragraph and then we also
28:08 - have this is another paragraph over here
28:10 - let me just save this file now we will
28:12 - also change the title over here to
28:14 - centering the content so over here we
28:16 - will say centering the content let me
28:20 - just save this file now and reload this
28:22 - page to see the updated content as you
28:24 - can see we have centering the content as
28:27 - the title and and then we have this is
28:29 - heading number one we have this is a
28:31 - paragraph and this is another paragraph
28:33 - now we are going to see how we can bring
28:35 - this paragraph that is this is another
28:38 - paragraph to the center of the page so
28:40 - it should come over here that is at the
28:42 - center of the page as far as the entire
28:45 - width of the page is concerned so guys
28:47 - if you want to get anything to the
28:49 - center of the page we need to enclose
28:51 - that thing inside the center tag so over
28:54 - here in this case we are going to
28:55 - enclose this entire content and the
28:58 - paragraph tags as well that is the
29:00 - starting tag and the ending tag within
29:02 - the center tag so over here we are going
29:04 - to have the center tag so we type Center
29:07 - over here and when we close this tag as
29:10 - you can see since this tag is deprecated
29:12 - in HTML 5 VSS code helps us in order to
29:16 - identify that this particular Center tag
29:18 - is depricated and it shows it with the
29:21 - red color font over here but still we
29:23 - can use it for now but it does not
29:25 - guarantee that it will accurately show
29:27 - the entire a content in the center when
29:30 - you use the different versions of the
29:32 - browser in future now guys let me just
29:34 - save this file now and try reloading
29:36 - this page you can notice that this is
29:39 - another paragraph content should come at
29:41 - the center of the page over here when we
29:43 - reload the page so let me press on the
29:45 - reload icon over here as you can see
29:48 - this is another paragraph has come to
29:50 - the center of this page as far as the
29:52 - width is concerned so guys this is one
29:54 - way in order to get the content on the
29:56 - center of the page but guys this is not
29:58 - recommended since this tag is replicated
30:01 - so the other way is to use the text
30:03 - align property of the CSS now guys it
30:06 - may so happen that you have not learned
30:07 - about the CSS which we are going to
30:10 - learn in the upcoming video series as
30:12 - well after the HTML video series so over
30:15 - here I'm going to Simply show you how
30:16 - CSS works with the help of the internal
30:19 - CSS code so let me just remove these
30:22 - Center tags over here and then let me
30:24 - get the paragraph tag over here once
30:27 - again to it origal position let me just
30:29 - save this file now and try reloading
30:31 - this page once again so that this is
30:33 - another paragraph comes to the extreme
30:35 - left over here now guys what we will do
30:38 - is inside the P tag over here before the
30:41 - greater than sign we have something
30:43 - called as attributes inside all the Texs
30:45 - we can Define their own attributes as
30:47 - well one of the attributes is the style
30:50 - attribute over here so when we type
30:52 - style you can see vs code is suggesting
30:54 - us the style attribute in this case it
30:57 - says it contains the CSS styling
31:00 - declarations to be applied to the
31:02 - element so basically whatever style that
31:05 - we want to apply to this particular
31:07 - content that is this is another
31:09 - paragraph only to this paragraph it will
31:12 - be applied and no other paragraph will
31:14 - be impacted so over here we display the
31:17 - style and one of the property inside
31:20 - this attribute is the text align over
31:22 - here so we simply type text you can see
31:25 - all the suggestions from the vs code
31:27 - over here but the first suggestion that
31:29 - is text align we are going to use this
31:31 - it says describes how inline contents of
31:34 - a block are horizontally aligned if the
31:37 - contents do not completely fill the line
31:39 - box and it also says which are the
31:42 - browser versions that is being supported
31:44 - by this property over here so guys
31:46 - simply we are going to use this property
31:48 - and then we are going to use the value
31:50 - as Center in this case so guys every
31:52 - property inside the attribute will have
31:55 - some of the other value over here which
31:57 - we can use use so basically we are going
31:59 - to use this Center and this is the way
32:01 - that we can use the text align property
32:04 - inside the style attribute of the
32:06 - paragraph tag so let me just save this
32:08 - file now and try reloading this page
32:10 - once again you can notice that this is
32:12 - another paragraph should come at the
32:15 - center of this page so when we reload
32:17 - this page you can see this is another
32:19 - paragraph has come to the center of this
32:21 - page and this is how we can get the
32:23 - content to the center by either using
32:26 - the center tag which is already
32:28 - deprecated or else you can use the
32:30 - latest property that is text align
32:33 - property by using the CSS code inside
32:35 - the start tag of the element that you
32:38 - want to get to the center of the page so
32:41 - guys please make sure that you practice
32:42 - on your own so that on different inputs
32:44 - you get different outputs make sure that
32:46 - you like this video so that it reaches
32:48 - to more people and subscribe to this
32:50 - channel so that you get the
32:51 - notifications on upcoming videos as well
32:53 - displaying the horizontal lines in HTML
32:56 - so guys basically the horizontal lines
32:58 - are used to visually break up the
33:01 - sections of the document so we can use
33:03 - the HR tag as you can see we have the
33:06 - open angled brackets and then we have
33:08 - the HR keyword and then we have the
33:11 - closing angled brackets over here so
33:13 - this is the HR tag that creates a line
33:16 - from the current position in the
33:18 - document to the right margin and breaks
33:21 - the line accordingly so guys let us
33:23 - check this with the help of example in
33:25 - the vs code over here so this is the pre
33:27 - prev HTML code that we have written so
33:30 - I'm simply going to change the title of
33:32 - the page which we can do so using the
33:35 - title tag over here which is inside the
33:37 - head tag so we will say horizontal line
33:42 - example so over here we have horizontal
33:45 - line example over here and then guys
33:47 - this is a heading number one we will
33:49 - keep this header as it is we have the
33:51 - paragraph as well inside the body that
33:54 - is this is a paragraph now guys what we
33:56 - will do is this is another paragraph is
33:59 - being displayed on the center of the
34:01 - page as you can see we have provided the
34:03 - style attribute inside this we have the
34:05 - text align property which helps us in
34:08 - order to make this content display at
34:10 - the center of the page now guys what we
34:12 - will do is between these two paragraphs
34:15 - we want to display a horizontal line
34:17 - over here so simply in between both
34:19 - these paragraphs we will place this HR
34:22 - tag as you can see this is the tag so
34:24 - over here we will use the open angled
34:27 - bracket and then we use the HR tag so as
34:30 - you can see the HR element represents a
34:32 - paragraph level thematic break a scene
34:35 - change in a story or a transition to
34:38 - another topic within a section of a
34:40 - reference book so in short this is going
34:42 - to draw a horizontal line on the web
34:45 - page and then we are going to close this
34:47 - tag over here using the closing angled
34:50 - bracket now guys this is another example
34:52 - of the empty tag there is no content
34:55 - that should come in between the St tag
34:57 - and the end tag over here of the HR and
35:00 - that is why we need not have the end tag
35:02 - over here so this is another example of
35:04 - the empty tag apart from the line break
35:06 - tag which we have already seen
35:08 - previously so guys let me just save this
35:10 - file now and try reloading this page
35:12 - once again you can notice the change in
35:14 - the title and you will be seeing a
35:16 - horizontal line over here in between
35:18 - both these paragraphs now let me reload
35:21 - this page once again so as you can see
35:23 - the horizontal line example title is
35:25 - being displayed over here and then we
35:27 - can see a thin line which is horizontal
35:30 - in between both the paragraphs that is
35:32 - this is a paragraph and this is another
35:34 - paragraph So guys in short if you want
35:36 - to draw a horizontal line in between any
35:39 - of the sections in your web page you can
35:42 - use the HR tag let us draw a horizontal
35:45 - line in between the heading number one
35:47 - and the first paragraph over here so we
35:50 - will move to the VSS code so after this
35:52 - header tag that is H1 we will simply
35:54 - have the HR tag in this case as well let
35:57 - me just save this file now and try
36:00 - reloading this page one again you can
36:02 - see there is another horizontal line
36:04 - that is in between the haer number one
36:06 - and the first paragraph over here how to
36:09 - preserve formatting in HTML so guys
36:12 - sometimes you want your text to follow
36:14 - the exact format of how it is WR in the
36:17 - HTML Source document so in such cases we
36:21 - can use the pre-formatted tag that is p
36:24 - so guys basically any text that is
36:26 - between the opening p PR tag and the
36:28 - closing PR tag will preserve the
36:31 - formatting of the source document and
36:33 - the content that is in between the pr
36:35 - tag over here so let us understand this
36:37 - with the help of example now so
36:39 - basically this was the previous code
36:41 - that we had written so I'll just remove
36:43 - these lines of code over here and this
36:45 - is the basic structure that we have
36:46 - already seen we have the doc type HTML
36:49 - and then we have the main HTML tag
36:51 - inside which we have the head starting
36:53 - and the ending tag and the body starting
36:56 - and the ending tag over here here so
36:58 - basically we are going to update the
37:00 - title that is preserve formatting so
37:02 - that we can see the changes in the
37:04 - browser so guys we are going to have the
37:06 - pr tag over here so we have the less
37:09 - than symbol and then we type PR as you
37:11 - can see vs code is suggesting us this
37:14 - tag that is the pr element represents a
37:17 - block of pre-formatted text in which the
37:19 - structure is represented by typographic
37:22 - conventions rather than by elements so
37:24 - whatever you type inside these PR start
37:27 - and the end tag the formatting will be
37:29 - preserved so let me show you one example
37:32 - so let us say we write the JavaScript
37:34 - function if you are not aware about the
37:36 - JavaScript functions then don't worry we
37:38 - are going to check them in the upcoming
37:40 - videos as well when we are going to
37:42 - cover the JavaScript tutorial Series so
37:45 - over here we are just writing few lines
37:47 - of code as far as JavaScript code is
37:49 - concerned so over here we are writing
37:52 - the function and the function name is
37:54 - test and then we give certain arguments
37:56 - inside the open and close parenthesis
37:59 - over here and then we have the curly
38:01 - braces and then we are going to Simply
38:03 - alert something that is the test so over
38:06 - here we have the alert statement as well
38:09 - so guys this is nothing but it is a
38:10 - JavaScript code that we have just
38:12 - written inside the pr tag no need to
38:15 - worry about the functionality over here
38:17 - it will be just displayed on the UI for
38:20 - now so let me just save this file now
38:22 - and try reloading this page so
38:23 - previously this was the content of the
38:26 - test.html that we had return now once we
38:29 - press the reload this page Button as you
38:31 - can see we have got The Preserve
38:33 - formatting title over here and this is
38:35 - the formatting that we are looking for
38:37 - so basically inside the pre- tag you can
38:40 - see these are the space characters over
38:42 - here on all the three lines and that is
38:44 - what is being displayed on the UI as
38:47 - well you can see all these are space
38:49 - characters over here and basically we
38:50 - are preserving the format in which the
38:53 - code is returned let me just remove the
38:55 - space characters over here so so we will
38:57 - quickly remove the space characters from
38:59 - all the lines and then we will see what
39:01 - will happen on the UI let me just save
39:03 - this file now and try reloading this
39:05 - pate once again so as you can see all
39:07 - the space characters are gone because we
39:09 - have removed them from here so this is
39:12 - the way that we can preserve the
39:13 - formatting and the way in which we write
39:15 - the code in our HTML document the same
39:18 - way it will be displayed on the UI as
39:21 - well guys what happens if we don't
39:23 - provide the pr tag to preserve the
39:25 - formatting so let me just remove these t
39:27 - tags over here the start tag and the end
39:29 - tag so after removing them we are just
39:31 - keeping these lines of code over here
39:34 - inside the body tag let me just save
39:36 - this file now and try running this code
39:38 - once again so as you can see all the
39:40 - lines of code are displayed on one
39:42 - single line over here and it is not
39:44 - preserving the format in which we have
39:46 - return in our source document and then
39:48 - what if we provide the P tag over here
39:50 - that stands for paragraph So if we
39:53 - enclose these lines of code inside the
39:55 - paragraph let us check what happens so
39:58 - over here we'll just save this file now
39:59 - and try reloading this page once again
40:01 - so as you can see it is being showed as
40:03 - a paragraph but all the lines of code
40:06 - that we have written over here on
40:07 - different lines those are not being
40:09 - preserved so we can enclose them within
40:12 - the pr tag once again inside the
40:15 - paragraph and let us check what happens
40:17 - then so over here we have the starting
40:19 - and the ending PR tag and then let me
40:22 - just save this file now and try
40:23 - reloading this page once again so as you
40:25 - can see now we can see the format is
40:27 - being preserved so guys this is the way
40:29 - that you can preserve the formatting in
40:31 - the HTML in case that is the requirement
40:34 - while you are working on your projects
40:36 - HTML elements versus tags so guys
40:38 - basically we have seen different tags so
40:40 - far in this video series now what is an
40:43 - HTML element so basically an HTML
40:45 - element is defined by a starting tag and
40:49 - if the element contains other content it
40:52 - ends with a closing tag as well where
40:55 - the element name is preceded by a
40:57 - forward slash so we have already seen
40:59 - what is the starting tag and the ending
41:01 - tag for the various tags so these are
41:04 - certain examples as you can see we use
41:06 - the P tag over here which starts with
41:08 - the less than symbol then we have P
41:10 - character and then we have the greater
41:12 - than symbol so basically this is the
41:14 - starting tag for the paragraph and we
41:16 - have the ending tag as well in which
41:18 - case we have a forward slash before this
41:20 - P character and then in between we have
41:23 - certain content that this is a paragraph
41:26 - content so guys basically this is the
41:28 - difference between HTML elements and
41:30 - tags over here this is referred as one
41:33 - single tag that is the starting tag and
41:35 - this is the ending tag but this entire
41:38 - thing is considered to be an HTML which
41:41 - consists of the starting tag and then
41:43 - the content and Then followed by the
41:45 - ending tag over here similarly we have
41:48 - the header tag that is hed1 this is the
41:50 - starting tag and then we have the ending
41:52 - tag of the hed1 but this entire thing
41:55 - that is starting tag along with with the
41:57 - this is heading content and then the
41:59 - ending tag is considered to be the HTML
42:02 - element so over here this entire thing
42:05 - is the HTML element over here similarly
42:08 - we have the div tags as well which helps
42:10 - us in order to group the content inside
42:13 - the HTML code so this entire thing is
42:16 - the div element over here which is one
42:18 - of the HTML elements and then guys
42:20 - sometimes we don't have the content in
42:22 - between the starting and the ending tag
42:25 - so over here as you can see the BR tag
42:28 - which helps us in order to break the
42:30 - line this can also be referred to as the
42:32 - HTML element over here so basically you
42:35 - can see the P tag that is the starting
42:37 - tag and the ending tag and then whatever
42:39 - content is there in between them is an
42:41 - HTML element similarly we have the H1
42:44 - tags as well it is another HTML element
42:47 - along with the starting and the ending
42:49 - tags so there are some HTML Elements
42:51 - which don't need to be closed such as
42:53 - image which we are going to check in the
42:55 - upcoming videos as well then we have the
42:57 - horizontal line which we have already
42:59 - seen and the BR tag which helps us in
43:01 - order to break the line so these are
43:04 - known as the void elements over here so
43:06 - guys let us check them once again with
43:07 - the help of examples now over here so
43:09 - I'll just remove these lines of code
43:11 - which we had return previously now let
43:13 - us say we want to use the paragraph tag
43:15 - so over here we will be using the P tag
43:18 - and then we will simply say this is a
43:21 - paragraph So guys basically this entire
43:23 - thing it is an HTML element over here
43:26 - let me just save this this file now and
43:28 - go to the browser and reload this page
43:30 - once again so as you can see this is a
43:32 - paragraph is being displayed so
43:34 - basically this is nothing but it is an
43:36 - HTML element now let us write another
43:38 - HTML element which is the header over
43:40 - here which we will write before the
43:42 - paragraph so over here we will be using
43:44 - H1 tag and then we will say this is
43:49 - heading of this page over here we will
43:53 - update the title as well we will say
43:55 - HTML element
43:58 - versus tags so guys let me just save
44:01 - this file now and try reloading this
44:02 - page once again so as you can see it is
44:05 - saying this is heading of this page and
44:07 - then this is a paragraph So Guys these
44:09 - are different HTML elements now you can
44:12 - see the various HTML elements on a web
44:14 - page by using the inspect feature of the
44:16 - browser so guys what you have to do is
44:19 - you need to come over here right click
44:21 - and you can see on this Chrome browser
44:23 - you have this inspect option so when you
44:25 - click on this you will be able to see
44:27 - the elements tab over here and inside
44:29 - that all the HTML code that is written
44:32 - in order to display this web page is
44:35 - being return over here so as you can see
44:37 - this is the heading of this page you can
44:39 - click on this and then this particular
44:41 - element that is the HTML element is
44:43 - getting highlighted similarly when you
44:46 - hover over this is a paragraph then this
44:49 - particular HTML element is getting
44:51 - highlighted so Guys these are nothing
44:53 - but these are the HTML elements along
44:55 - with the start and the end Tex tag and
44:57 - the individual tags over here are the
45:00 - HTML tags that we refer to and guys this
45:02 - is the basic difference between the HTML
45:04 - elements and the tags attributes in HTML
45:08 - so guys an attribute is used to define
45:10 - the characteristics of an HTML element
45:13 - and is placed inside the elements
45:16 - opening tag so guys so far we have seen
45:18 - what are the starting and the ending
45:20 - tags and the starting tag is also called
45:22 - as the opening tag and basically based
45:25 - on the tagt that we use the content will
45:27 - be displayed on the browser now guys
45:30 - inside those Texs we have certain
45:31 - attributes that we can Define now all
45:34 - attributes are made up of two parts that
45:37 - is a name and a value so basically this
45:40 - is the name value pair that is being
45:42 - expected by the browser that should be
45:44 - present inside all the attributes that
45:46 - we Define in the opening tag over here
45:49 - guys we will check this with the help of
45:50 - examples as well now the name is the
45:53 - property you want to set for example the
45:56 - paragraph that is the P element in the
45:58 - example carries an attribute whose name
46:01 - is title which you can use to provide
46:04 - hint to the user so guys basically if
46:06 - you use the P tag that stands for
46:08 - paragraph you will be able to see the
46:10 - content but in case you want to explain
46:13 - more about that content you can use the
46:16 - title attribute inside the opening P tag
46:19 - which we are going to check with the
46:20 - help of example as well and this title
46:22 - is going to be the name of that
46:24 - attribute and on the right hand side the
46:27 - value is what you want the value of the
46:29 - property to be set and always put within
46:32 - the quotations so guys let us check this
46:34 - with the help of examples now in the vs
46:36 - code so guys basically this is the
46:38 - content that we had return previously we
46:41 - have a heading that this is a heading of
46:43 - this page and then we have the paragraph
46:46 - as you can see over here we will change
46:47 - the title to attributes in HTML so we
46:50 - will say attributes in HTML over here
46:54 - let me just save this file now and try
46:56 - read loading this page once again so as
46:58 - you can see the title has been updated
47:00 - we have a heading and then we have a
47:02 - paragraph now guys let us say we
47:04 - overover over this paragraph over here
47:07 - that is we are getting the cursor on the
47:09 - content of this paragraph so nothing is
47:11 - being displayed right now so what we are
47:13 - going to do is when we get the cursor on
47:16 - this content of the paragraph We should
47:18 - see certain hint or the title that we
47:21 - are going to set the attribute inside
47:23 - the opening tag so let us check that
47:25 - over here after this tag name we are
47:27 - going to have the space character before
47:30 - the greater than symbol and then we can
47:32 - simply hold control and the space bar on
47:35 - the keyboard over here you can see all
47:37 - the attributes that is related to this
47:39 - tag so basically what we are going to do
47:42 - is we are going to use this title
47:44 - attribute so it contains a text
47:46 - representing advisory information
47:49 - related to the element it belongs to so
47:51 - we are going to use this title and then
47:54 - as you can see we have the equal to
47:55 - symbol that has come come automatically
47:58 - and then inside the double codes we can
48:00 - write our content as the value of this
48:03 - attribute so guys what we are going to
48:04 - do is simply we will say paragraph over
48:07 - here as the keyword so that the user
48:09 - comes to know that this is a paragraph
48:11 - basically we are making the user
48:13 - understand in this content only but for
48:15 - the sake of understanding inside the
48:17 - title we are going to provide this
48:19 - keyword that is paragraph let me just
48:21 - save this file now and try reloading
48:23 - this page once again guys remember that
48:25 - previously we were not getting any title
48:27 - over here when we used to get the cursor
48:30 - on this content of the paragraph now
48:32 - once we reload this page what will
48:34 - happen let us see that so after clicking
48:36 - on the reload this page I get the cursor
48:39 - over here so here is the title that we
48:41 - can see that is kind of a Hint it is
48:43 - saying the paragraph that is the keyword
48:45 - that we have mentioned in our source
48:47 - document over here so guys this is one
48:49 - of the attributes of the HTML tag that
48:52 - is paragraph that we can use we can have
48:54 - any value over here as you can see we
48:57 - are going to update the value to test
49:00 - title in this case so let me just save
49:02 - this file now and reload this page once
49:03 - again so when we get the cursor over
49:05 - here on the paragraph it can be seen
49:08 - that the test title is being displayed
49:10 - as a hint so guys this is one of the
49:12 - attributes of the HTML tag that is
49:14 - paragraph similarly we can have
49:16 - different attributes for the different
49:18 - tags over here guys let us say we want
49:21 - to make the statement color as green so
49:24 - what we have to do is after the space
49:25 - character we can we can have another
49:27 - attribute that is style over here now
49:29 - guys inside this style we need to
49:31 - mention what particular property we need
49:33 - to set so we are going to say color in
49:36 - this case so as you can see color
49:38 - attribute is being displayed it sets the
49:40 - color of an element's text so we are
49:43 - going to use this and simply we are
49:45 - going to select the green color over
49:46 - here so green is being selected so let
49:49 - me just save this file now and try
49:51 - reloading this page as you can see the
49:53 - color has been changed to green and this
49:55 - is the way that we can me some more
49:57 - attributes belonging to this particular
49:59 - tag making text bold in HTML using the B
50:03 - tag so guys basically you must have used
50:06 - bold formatting feature of the word
50:09 - processor now similarly we can have such
50:11 - formatting in HTML documents as well so
50:14 - in order to make the text as bold over
50:16 - here anything that appears between the B
50:19 - tag as you can see it is the less than
50:21 - symbol followed by the B character and
50:24 - then the greater than symbol and then we
50:26 - have the same ending tag over here which
50:28 - is having the forward slash before the
50:30 - character and in between both the
50:32 - starting and ending tags we have certain
50:34 - content now in between both these tags
50:37 - whatever content is present it will be
50:39 - appearing as the Bold text which means
50:42 - we want to get certain attention of the
50:44 - user while showing this content over
50:46 - here now guys we can also use the strong
50:48 - tag in the HTML 5 for bold appearance
50:52 - which shows importance so guys let us
50:54 - check this with the help of examples now
50:56 - in the vs code I'll just remove these
50:58 - lines of code that were written
50:59 - previously and inside the body tag we
51:02 - will have a simple paragraph using the P
51:04 - tag we will say this text is bold in
51:10 - this paragraph So guys this is a simple
51:13 - paragraph and it will be displayed
51:14 - normally on the browser I'll just change
51:17 - this title to formatting over here since
51:19 - we are going to see the formatting
51:21 - examples in HTML so guys let me just
51:23 - save this file now and try reloading
51:25 - this page on the web brows browser so as
51:27 - you can see it is saying this text is
51:29 - bold in this paragraph now guys so far
51:31 - we have not used the B tag over here and
51:34 - this is a simple paragraph now let's say
51:36 - we want to make this highlighted text
51:38 - that is text is bold to appear as bold
51:42 - text so what we have to do is we need to
51:44 - enclose this text within the starting
51:47 - and the ending B tag so before this text
51:50 - we are going to have the less than
51:51 - symbol and then we will say B so as you
51:54 - can see the B element represents a span
51:57 - of text to which attention is being
51:59 - drawn for utilitarian purposes without
52:02 - conveying any extra importance and with
52:05 - no implication of an alternate Voice or
52:08 - mode so guys basically it doesn't show
52:10 - any extra importance but only to draw
52:13 - the attention to this particular phrase
52:15 - we can use the B text over here and then
52:18 - after this character we can have the
52:20 - greater than symbol and then the same
52:22 - ending tag I'm going to cut this and
52:24 - paste it after this bold word over here
52:26 - here so guys basically text is bold
52:29 - these three words are enclosed inside
52:31 - the B tag over here so let me just save
52:34 - this file now and try reloading this
52:35 - page once again before reloading you can
52:37 - see that this is a simple paragraph now
52:39 - after reloading we will check what
52:41 - happens so when we press on reload this
52:44 - page you can see text is bold appearance
52:46 - is changed now it is drawing the
52:48 - attention of the user by showing it as
52:50 - bold over here and guys this is the way
52:52 - that we can use the B tag now guys
52:54 - similarly we can also use the strong tag
52:57 - over here let me just copy this line of
52:59 - code and paste this over here and what
53:01 - we will do is instead of using the B tag
53:04 - we will use the strong tag so as you can
53:06 - see the strong element represents strong
53:09 - importance seriousness or urgency for
53:12 - its content so we are going to use this
53:14 - tag over here and then I'll just cut
53:16 - this ending tag and then paste this over
53:19 - here instead of the ending tag of the B
53:21 - I will say text is bold so guys
53:24 - basically the content of both the
53:25 - paragraphs the same but we are having
53:28 - the strong tag over here instead of the
53:30 - P tag so let us see how it will be
53:31 - appeared so we will just save this file
53:33 - now and try reloading this page once
53:35 - again so as you can see it says this
53:38 - text is bold in this paragraph So guys
53:40 - there is no difference as far as
53:42 - appearance of both the paragraphs is
53:44 - concerned it's just that the meaning
53:46 - behind the scenes for this text is bold
53:48 - is not that important compared to what
53:51 - we have used over here in the this text
53:54 - is strong over here so basically we will
53:56 - have to change this text to this text is
53:59 - strong since we are using the strong tag
54:02 - guys it depends on you what text you
54:03 - want to make bold or strong but this is
54:06 - the main importance that to seek users
54:08 - attention to certain keywords on your
54:10 - web page we can either use bold or
54:12 - strong text based on our requirements so
54:15 - making text italicized in HTML using the
54:18 - it tag so guys basically if you must
54:21 - have used the italicized formatting
54:23 - feature of the word processor you must
54:25 - be knowing how the italicized works but
54:28 - how do we use it in the HTML Source
54:31 - document so just like how we used the
54:33 - italicized feature in the word processor
54:35 - we can have such formatting in HTML
54:37 - documents as well so in order to make
54:39 - the text look italicized anything that
54:42 - appears within the I tag over here that
54:45 - is the starting and the ending tag will
54:47 - be italicized so let us check this with
54:49 - the help of examples now previously we
54:51 - had seen how we can make the text as
54:53 - bold and strong which helps us in all
54:56 - order to grab the users attention now we
54:58 - are going to use another paragraph over
55:00 - here so we start with the P tag and then
55:03 - we will say this text is ital sized and
55:09 - then we have in this paragraph So guys
55:12 - basically this is another simple
55:14 - paragraph that this text is italicized
55:17 - in this paragraph now guys let me just
55:19 - save this file now and try reloading
55:21 - this page on the browser so when we
55:23 - reload this page as you can see this is
55:25 - a normal text TT that is being displayed
55:27 - over here inside the paragraph now guys
55:29 - we want to make this text is italicized
55:32 - look as italicized over here so what we
55:35 - have to do is we need to enclose these
55:37 - three words within the I tag so over
55:40 - here we will come in the source document
55:42 - we will have less than symbol and then
55:44 - we say I and Then followed by the
55:46 - greater than symbol over here and then
55:48 - this ending tag we can just cut it and
55:51 - paste it after the italicized word so
55:54 - over here we have the text is ital ized
55:56 - being enclosed within this I tags so let
55:59 - me just save this file now go to the
56:01 - browser and reload this page once again
56:04 - so as you can see the text is italicized
56:07 - is being displayed in the italicized
56:09 - format and this is the way that we can
56:11 - use the feature in the HTML document as
56:14 - well guys based on your requirements you
56:16 - can show any of the text whether it is
56:18 - one word or multiple words in the
56:20 - italicized format making text underlined
56:23 - in HTML using the U tag now guys you
56:26 - must have used the underline formatting
56:28 - feature of the word processor or any
56:31 - other text editor now similarly we can
56:33 - have such formatting in HTML documents
56:35 - as well so in order to make the text as
56:38 - underlined anything that appears within
56:40 - the U tag that is the starting and the
56:42 - ending tag will be underlined while
56:45 - showing that HTML element on the browser
56:47 - so guys let us check this with the help
56:49 - of example now in the vs code so
56:51 - previously we had seen how we can make
56:53 - the text as bold by using the B and the
56:56 - the strong text over here and we have
56:58 - also seen how we can make the text as
57:00 - itally sized now we will have another
57:02 - paragraph so we will start with the P
57:04 - tag over here and then we will say this
57:08 - text is underlined in this paragraph So
57:12 - guys we have this simple statement that
57:14 - this text is underlined in this
57:16 - paragraph let me just save this file now
57:18 - and reload this page to see what happens
57:20 - over here so as you can see it says this
57:23 - text is underlined in this paragraph So
57:25 - guys basically this is a very simple
57:26 - paragraph that we have written now guys
57:28 - what we will do is we will underline
57:30 - these three words that is text is
57:32 - underlined so how we can do that simply
57:35 - we have to come in our source code and
57:37 - we need to enclose these three words
57:39 - within the U tag which stands for
57:41 - underlined so we will simply use the U
57:44 - tag over here and then we will have the
57:46 - greater than symbol and then I will just
57:48 - cut this closing tag and then paste it
57:51 - after this word that is underlined over
57:53 - here so guys basically we are enclosing
57:55 - this text is underlined in between the U
57:59 - tag so let me just save this file now
58:01 - and try reloading this page once again
58:03 - you will notice the change in these
58:04 - three words how it will be underlined so
58:07 - when we reload this page as you can see
58:09 - these three words over here are being
58:11 - underlined in this case and that is how
58:13 - we can use the U tag in order to
58:15 - underline any text in our HTML document
58:18 - guys you can underline any single word
58:20 - in this case or else multiple words
58:22 - based on your requirements making text
58:25 - strike through in HTML using the strike
58:28 - tag so guys anything that appears within
58:30 - the strike tag as you can see we have
58:32 - the strike opening tag and the strike
58:35 - closing tag over here that content will
58:37 - be displayed with the strike through
58:39 - which is a thin line through the text so
58:42 - guys let us understand this with the
58:43 - help of example now in the vs code over
58:46 - here so guys previously we had seen how
58:48 - we can make the text as bold or strong
58:51 - or italic sized and underlined now we
58:53 - can have another paragraph over here so
58:56 - we will have the P tag and inside this P
58:59 - tag we will say this text is strike in
59:04 - this paragraph So guys basically this is
59:06 - a very simple paragraph that we have
59:07 - written it has a single statement that
59:10 - this text is stried in this paragraph
59:12 - let me just save this file now and try
59:14 - reloading this page over here you can
59:16 - see that this is a very simple paragraph
59:18 - over here without any formatting now
59:21 - what we will do is we will make these
59:23 - three words at is text is Strike which
59:25 - will have strike through so what we have
59:27 - to do is we just need to enclose these
59:29 - three words in between the strike tags
59:32 - so over here we are going to have the
59:33 - less than symbol and then we will type
59:35 - strike and then we will have the greater
59:37 - than symbol over here and what we have
59:39 - to do is this ending tag we just need to
59:42 - cut it and paste it after the strike
59:45 - word over here so guys let me just save
59:47 - this file now and try reloading this
59:49 - page so as you can see text is stried is
59:51 - being displayed in the form of a strike
59:53 - through over here you can have any
59:55 - single word or the multiple words
59:57 - display with the strike through based on
59:59 - your requirements now guys if you notice
60:01 - in this code this strike word is being
60:03 - colored with a red color so basically
60:05 - this means that this strike tag is being
60:08 - deprecated in the latest version of the
60:10 - HTML so in HTML 5 you can simply use the
60:13 - S tag so instead of using the strike tag
60:16 - over here we can use S tag so as you can
60:19 - see the S element represents contents
60:22 - that are no longer accurate or no longer
60:25 - relevant so the this will have the same
60:26 - functionality similar to that of the
60:29 - strike tag so we will replace this
60:31 - ending tag as well with the S tag over
60:33 - here let me just save this file now and
60:35 - try reloading this page once again so as
60:37 - you can see we are getting the same
60:39 - output over here these three words are
60:41 - being stried through using the S tag so
60:43 - guys basically the strike tag is
60:45 - depricated and we must use the S tag
60:47 - over here in the latest version of the
60:49 - HTML monospaced font in HTML so guys the
60:52 - content that is within the TT tag that
60:55 - is the starting tag and the ending tag
60:57 - over here is written in a monospaced
60:59 - font now what is a monospaced font so
61:02 - most of the fonts are known as variable
61:04 - with fonts because different letters are
61:07 - of different widths for example the
61:10 - letter M over here is wider than the
61:12 - letter I so you can see the width of the
61:15 - letter M it is more compared to the
61:18 - width of the letter I over here now in a
61:20 - monospaced font however each letter has
61:23 - the same width so this we are going to
61:25 - check with the help of examples now now
61:27 - guys remember that the TT tag that is
61:29 - used for the monospaced font in HTML is
61:32 - being deprecated and we must use the kbd
61:35 - tag if we are using the HTML 5 version
61:38 - so let us check this with the help of
61:40 - examples now in the VSS code so what we
61:42 - will do is we will have a paragraph with
61:44 - the P tag over here and we will say this
61:48 - text is monospaced so over here we have
61:51 - this text is monospaced in this
61:53 - paragraph So this is one statement
61:55 - inside the paragraph that this text is
61:57 - monospaced in this paragraph let me just
62:00 - save this file now and try reloading
62:02 - this page as you can see we are getting
62:03 - a simple paragraph over here now guys
62:06 - what we need to do is these three words
62:08 - at is text is monospaced we want to
62:10 - display it in the monospaced font so
62:13 - what we will do is inside the source
62:15 - code we need to enclose these three
62:17 - words within the TT tag so over here we
62:20 - will simply have the less than symbol
62:22 - and then we will say TT over here and
62:24 - then greater than symbol so let me just
62:27 - cut this ending Tex and paste it after
62:29 - this monospaced world so we have
62:31 - enclosed this text is monospaced within
62:34 - this TD tag that is the start tag and
62:36 - the end tag as you can see it is being
62:38 - displayed in the red color that's
62:39 - because this tag is deprecated in the
62:41 - latest version of the HTML let me just
62:43 - save this file now and try reloading
62:45 - this page so as you can see the
62:47 - appearance of this text is monospace is
62:50 - different compared to the other words in
62:52 - the same paragraph over here all the
62:54 - characters of this this text is having
62:56 - the same width now so guys basically
62:58 - even though this tag is deprecated but
63:01 - still it is being supported in some of
63:02 - the latest versions it is better to use
63:05 - the latest tags over here and that is
63:07 - what we have the kbd tag for so
63:09 - basically this is another tag in the
63:11 - HTML 5 that we can use in order to have
63:14 - the same functionality similar to this
63:16 - TT tag so I'll just remove the TT tag
63:20 - over here and we will see KBT in this
63:22 - case so when we type KBT so as you can
63:24 - see KBT is being suggested by the vs
63:26 - code I'll end it using the greater than
63:29 - symbol and then cut this ending tag and
63:32 - replace this TT tag with the ending tag
63:34 - of the kbd let me just save this file
63:36 - now and try reloading this page once
63:38 - again no change will be noticed as you
63:41 - can see since the text is monospaced is
63:43 - being displayed over here using the kbd
63:45 - tag as well so guys this is the way that
63:47 - we can have the monospaced font for some
63:50 - of the text or all of the text inside
63:53 - the paragraph or any other text that you
63:55 - are using based on your requirements
63:57 - making text superscript in HTML using
64:00 - the S tag so guys basically whatever
64:03 - content that we put within the starting
64:06 - Su and the ending Su tag is written in
64:09 - the superscript the font size used is
64:12 - the same size as the characters
64:14 - surrounding it but is displayed half of
64:16 - characters height above the other
64:19 - characters so guys let us check how this
64:21 - superscript works in the HTML so we will
64:24 - move to our vs code and basically we are
64:26 - going to write another paragraph We are
64:28 - going to have the statement inside this
64:30 - paragraph and we will say this text is
64:35 - superscript in this
64:37 - paragraph So guys this is a very simple
64:39 - statement that we have written inside
64:41 - this paragraph let me just save this
64:43 - file now and try reloading this page on
64:45 - the browser so as you can see we are
64:47 - getting a normal paragraph that this
64:49 - text is superscript in this paragraph
64:51 - now guys what we will do is we want to
64:53 - make this word that is supert script
64:56 - appear as the superscript in this
64:58 - particular statement which means this
65:00 - text will be displayed above the is
65:03 - keyword over here on the right so let us
65:05 - do that using the Su keyword so over
65:08 - here we will move to the vs code and
65:11 - this particular word needs to be
65:12 - enclosed in between the Su tag so we
65:16 - will have the less than symbol and then
65:17 - we will say s as you can see the Su
65:21 - element represents a superscript so this
65:23 - tag will help us in order to display the
65:25 - word is superscript so over here we will
65:28 - select it and then we will also have the
65:30 - ending tag over here we will write that
65:33 - keyword once again so we have this
65:35 - superscript word being enclosed within
65:37 - the Su starting and the ending tag let
65:40 - me just save this file now and try
65:41 - reloading this page once again in the
65:43 - browser so as you can see this text is
65:46 - and the superscript is being displayed
65:48 - on top of this is word and then we have
65:51 - in this paragraph statement so guys this
65:53 - is the way that we can display the
65:55 - superscript script in the HTML using the
65:58 - S tag you can have any word or multiple
66:01 - words over here being displayed as the
66:03 - superscript let us say we have more
66:05 - words over here to be present in the
66:06 - superscript so we will say superscript
66:09 - on top and then let me just save this
66:12 - file now and try reloading this page
66:14 - once again as you can see the
66:15 - superscript is having multiple words
66:18 - over here that is superscript on top and
66:20 - that is how we can use the Su tag making
66:23 - text subscript in HTM ml using the sub
66:26 - tag so guys basically the content within
66:29 - the sub starting tag and the ending tag
66:32 - will be return in the subscript so the
66:35 - font size used is the same as the
66:37 - character surrounding it but is
66:39 - displayed half the character's height
66:42 - beneath the other characters so let us
66:44 - check this with the help of example now
66:46 - in the vs code over here what we will do
66:48 - is we will have another statement inside
66:50 - the paragraph tag so over here we will
66:53 - have the P tag in this case and then we
66:56 - will say this text is subscript over
67:00 - here in this paragraph So guys this is a
67:02 - single statement that we have included
67:04 - inside the paragraph let me just save
67:07 - this file now and try reloading this
67:09 - page over here so as you can see this
67:11 - simple statement is being displayed as a
67:13 - paragraph now what we will do is this
67:16 - particular word that is subscript we
67:18 - want to display it as the subscript
67:20 - inside this paragraph So guys what is
67:22 - the difference between the subscript and
67:24 - the superscript so so previously we had
67:26 - seen that the Su tag can be used in
67:29 - order to display the subscript in this
67:32 - way which is displayed on the top now
67:34 - similarly we will be using the Su tag in
67:37 - this case in order to display the
67:39 - subscript word on the bottom right of
67:41 - this is word over here so guys let us
67:44 - make these changes in the vs code so
67:46 - what we have to do is so we need to
67:48 - enclose this subscript word between the
67:50 - sub starting and the ending tag so we
67:53 - will simply have the less than symbol
67:55 - and then we will type sub and then we
67:57 - will have the greater than symbol over
67:59 - here and then what we have to do is I'll
68:01 - just cut this ending tag and paste this
68:03 - over here after this subscript word so
68:06 - let me just save this file now and try
68:08 - reloading this page once again so as you
68:11 - can see the subscript is being displayed
68:13 - so it says this text is and then we have
68:15 - the subscript in this paragraph now guys
68:18 - this is the example with one word we can
68:20 - have multiple words as well being
68:21 - displayed as the subscript so what we
68:23 - have to do is we need to in include
68:25 - those words within the sub starting and
68:28 - the ending tags so over here we say
68:30 - subscript on bottom so basically we have
68:33 - three words over here as subscript when
68:35 - we save this file now and try reloading
68:37 - this page once again so as you can see
68:39 - subscript on bottom is being displayed
68:42 - as the subscript guys the height of this
68:44 - subscript is half the height of the
68:46 - other characters that is being displayed
68:48 - normally in this paragraph but the font
68:50 - size is same whenever the superscripts
68:52 - and subscripts are being displayed in
68:54 - the HTM ml inserted text in HTML using
68:58 - inss tag so guys basically anything that
69:01 - appears within the ins starting and the
69:04 - ending element is displayed as the
69:07 - inserted text over here in the HTML so
69:09 - let us check this with the help of
69:11 - example in the vs code so what we will
69:13 - do is we will simply have a paragraph So
69:16 - we have the P tags over here and then we
69:18 - will say this text is
69:23 - inserted in this paragraph so guys this
69:25 - is a very simple paragraph it is having
69:28 - the statement that is this text is
69:30 - inserted in this paragraph so let me
69:32 - just save this file now go to the
69:34 - browser and reload this page so as you
69:36 - can see we have the extra paragraph that
69:39 - this text is inserted in this paragraph
69:41 - now guys what we will do is we will make
69:44 - this text is inserted only these three
69:46 - words appear in between the ins starting
69:50 - and the ending tag so over here in the
69:52 - vs Cod we will have the start tag that
69:54 - is the inss tag and then we also have
69:56 - the end tag over here we will simply cut
69:59 - this and paste it after the inserted
70:01 - word so basically we have enclosed text
70:04 - is inserted these three words within the
70:07 - inss starting and the ending tag which
70:10 - stands for inserted so guys let me just
70:12 - save this file now and try reloading
70:14 - this page on the browser so as you can
70:17 - see text is inserted is being underlined
70:20 - now and guys this is the meaning of the
70:22 - inss tag so basically whatever content
70:25 - we put inside the ins tag it will be
70:28 - underlined so the functionality of the
70:30 - inss tag is similar to that of the
70:33 - underline tag that is U tag over here
70:35 - since both of them are used in order to
70:38 - underline the text in this case we have
70:40 - used the ins starting and the ending tag
70:43 - over here so guys this is the main
70:44 - functionality of the inss tag deleted
70:47 - text in HTML using the deel tag so guys
70:50 - basically anything that appears within
70:53 - the deel starting and the end ending tag
70:56 - over here is displayed as the deleted
70:58 - text now how it will be displayed let us
71:00 - check this with the help of the example
71:02 - in the vs code over here so let me just
71:05 - provide a simple paragraph over here
71:07 - using the P tag and we will say this
71:10 - text is deleted in this paragraph So
71:14 - guys this is a very simple paragraph
71:16 - that we have written over here in the vs
71:18 - code let me just save this file now and
71:20 - try reloading this page on the web
71:22 - browser so as you can see this is a very
71:24 - simple paragraph that we have added on
71:27 - the browser over here now guys what we
71:29 - will do is we will enclose these three
71:31 - words that is text is deleted in between
71:34 - the D tag which represents the deleted
71:38 - text so over here we will say d and then
71:41 - we will close the starting tag over here
71:43 - and then we also have the ending tag
71:45 - which we will cut and paste it after the
71:47 - deleted word over here so guys basically
71:50 - we have enclosed the text is deleted in
71:53 - between the D starting and the ending
71:56 - tags now how it will appear on the
71:58 - browser let us check that so let me just
72:00 - save this file now and try reloading
72:02 - this page once again so when we reload
72:04 - this page as you can see text is deleted
72:07 - is being stried over here so guys
72:09 - basically this is similar to the strike
72:11 - through that we have seen previously
72:13 - using the S tag and this is how we can
72:15 - mark the text as deleted whenever we are
72:18 - building a web page using the HTML now
72:21 - guys where it becomes important is let's
72:23 - say you want to delete certain words
72:25 - from the paragraph in the article that
72:27 - you have already written so you can
72:29 - enclose it within the D tag and if you
72:32 - want to insert something else instead of
72:35 - the deleted text then you can use the
72:37 - inss tag which will underline the text
72:40 - so basically in the same paragraph we
72:42 - can have some more words over here we
72:44 - can say this text is deleted and then we
72:47 - will say and this text is inserted where
72:53 - we need to enclose this text is inserted
72:56 - inside the inss tag so we will simply
72:59 - say inss over here and then we will have
73:02 - the ending tag after the inserted word
73:05 - so let me just save this file now and
73:06 - try reloading this page once again so as
73:09 - you can see this text is deleted we have
73:11 - it strike through and then we have end
73:14 - this text is inserted so basically we
73:16 - have inserted this text over here within
73:19 - the same paragraph So guys basically
73:21 - this is the functionality of the delete
73:23 - and the inserted Tex text where we want
73:26 - to delete certain words and insert some
73:28 - more words in the existing paragraph
73:31 - larger text in HTML using the big tag so
73:34 - guys basically the content of the
73:37 - starting big and the ending big tag is
73:39 - displayed one font larger than the rest
73:42 - of the text surrounding it so guys let
73:44 - us check this with the help of example
73:46 - now in the VSS code so what we will do
73:48 - is simply we will have another paragraph
73:50 - over here using the P tag and then we
73:53 - will say this text is big in this
73:57 - paragraph So guys we have a simple
73:59 - statement in this new paragraph over
74:01 - here this text is big in this paragraph
74:04 - so let me just save this file now and
74:06 - try reloading this page on the browser
74:08 - so as you can see we have this text is
74:10 - big in this paragraph now guys what we
74:12 - will do is we will have the text is Big
74:15 - that is these three words appear one
74:18 - font size larger than the rest of the
74:20 - text so what we have to do is we need to
74:22 - enclose these three words within the big
74:25 - tag over here so we will move to the vs
74:27 - code and then we will say big in this
74:30 - case so this is the big tag that we can
74:32 - use so basically as you can see since
74:35 - the font color of this tag is red this
74:37 - tag is deprecated in the newer versions
74:39 - of the browser but guys still it can
74:41 - work in certain browsers so let me just
74:43 - save this file now and try reloading
74:45 - this page once again so as you can see
74:48 - the text is big it is being displayed as
74:51 - one font size larger compared to the
74:54 - other text in the the same paragraph now
74:56 - guys if we see what exactly is happening
74:58 - behind the scenes we can simply right
75:00 - click over here and we can use the
75:02 - inspect option so when we use the
75:04 - inspect option you can see under
75:06 - elements the paragraph is being
75:08 - displayed over here using the P Tex and
75:10 - inside this we have this text is big in
75:13 - this paragraph now these three words are
75:15 - being enclosed within the big tag over
75:17 - here and the big tag is being given the
75:20 - font size as larger and this is what is
75:22 - happening behind the scenes the larger
75:25 - value for the font size is making these
75:27 - words appear bigger than the other text
75:30 - in the same paragraph now guys since
75:32 - this tag is deprecated it is recommended
75:35 - that we use the style attribute over
75:37 - here now how do we use the style
75:39 - attribute only for these three words so
75:41 - we will remove these tag first of all
75:43 - and then we can have the span tag over
75:46 - here so instead of the big tag we can
75:49 - have the span tag so we say span and
75:52 - then we have the closing span tag over
75:54 - here after the the big word in this case
75:56 - and then we say this text is Big so guys
75:59 - basically what we have done is we have
76:01 - enclosed the text is Big these three
76:04 - words within the span tag now what will
76:06 - happen after this let me just save this
76:08 - file now and try reloading this page so
76:10 - as you can see this is a normal
76:12 - paragraph now but since we have used the
76:14 - span tag it is used in order to group
76:17 - certain words and apply certain styles
76:19 - to these words over here so what we can
76:22 - do is inside the span tag we can have
76:24 - the style attribute in this case and the
76:27 - style can have the font size so guys
76:29 - what we have seen is the font size value
76:32 - was larger so over here we will again
76:35 - provide a larger value for the font size
76:37 - and then let me just save this file now
76:39 - and try reloading this page once again
76:41 - so now we can see that text is big is
76:44 - appearing as one font size larger
76:46 - compared to the other text in the same
76:48 - paragraph So guys this is the
76:50 - replacement of the big tag that we have
76:53 - seen just now either we can use the big
76:55 - tag or in the newer versions of the
76:57 - browser we can also use the span tag and
76:59 - along with that we can use the style
77:01 - attribute over here we are going to
77:03 - learn more about the style attribute and
77:05 - what are the different properties and
77:07 - the values that we can have inside the
77:09 - style attribute in the upcoming videos
77:11 - as well displaying smaller text in HTML
77:15 - using the small tag so guys basically
77:17 - the content of the small starting and
77:20 - the ending tag is displayed one font
77:23 - size smaller than then the rest of the
77:25 - text surrounding it so guys basically
77:28 - whatever text we enclose within the
77:30 - small starting and the ending tag will
77:32 - appear smaller compared to the rest of
77:35 - the text so let us check this with the
77:36 - help of the example in the vs code over
77:39 - here so the very first thing that we
77:41 - will do is we will have a simple
77:42 - paragraph using the P tag and then we
77:45 - will say this text is small in this
77:49 - paragraph So we have a very simple
77:51 - statement that is this text is small in
77:54 - this paragraph in the P tag that is the
77:56 - paragraph now let me just save this file
77:58 - now and try reloading this page over
78:00 - here so when we reload this page as you
78:02 - can see we have a paragraph this text is
78:05 - small in this paragraph now guys what we
78:07 - will do is we will enclose these three
78:09 - words that is text is small in between
78:13 - the small tag so over here in the vs
78:15 - code we have to enclose it in between
78:18 - the small tag so we will have the small
78:20 - starting tag over here and then we have
78:23 - the ending tag as well which we will put
78:25 - after the small word in this case so
78:27 - basically text is small these three
78:29 - words are being enclosed now in between
78:32 - the small starting and the ending tags
78:34 - over here so let me just save this file
78:36 - now and try reloading this page once
78:38 - again to see how it appears so when we
78:40 - reload this page as you can see text is
78:43 - small these three words are appearing
78:46 - one font size smaller compared to the
78:49 - other text in the same paragraph now
78:51 - guys if we see what is happening behind
78:53 - the scenes we can simply right click
78:55 - over here and select the inspect option
78:58 - so after this we have under the elements
79:01 - tab we have this P tag over here inside
79:04 - which we have the this text is small in
79:07 - this paragraph statement and then guys
79:09 - you can see for this small tag we have
79:11 - the font size that is smaller over here
79:14 - so we can also use the CSS property that
79:17 - is font size with the value smaller in
79:19 - order to make the text appear in the
79:22 - same way just like how we have done for
79:24 - the the text is Big over here so if we
79:27 - check the code for this text is big in
79:29 - this vs code you can see we have used
79:31 - the span tag and then we have used the
79:34 - style attribute over here for which we
79:36 - have used the property that is font size
79:38 - and the value is larger in this case so
79:41 - guys either we can use this CSS property
79:43 - using the span tag or we can simply use
79:46 - the small tag over here which is
79:47 - supported by the latest version the big
79:50 - tag that we have seen previously is not
79:52 - supported with the latest versions of
79:53 - the browser and that is why we had used
79:56 - the font size property inside the style
79:59 - attribute so guys please make sure that
80:00 - you practice on your own so that on
80:02 - different inputs you get different
80:04 - outputs marking text in HTML using the
80:07 - mark tag so guys basically the content
80:10 - of the mark starting tag and the ending
80:12 - tag over here is displayed as the
80:15 - highlighted text on the browser so guys
80:18 - let us check this with the help of the
80:19 - vs code over here how the mark tag works
80:22 - so let us add a simple paragraph using
80:25 - the P tag so we will say this text is
80:29 - marked in this paragraph So guys this is
80:33 - a very basic statement that we have
80:35 - included within the pag and it will
80:37 - appear as a paragraph on the browser let
80:39 - me just save this file now and try
80:41 - reloading this page on the browser so as
80:44 - you can see we have this text is marked
80:47 - in this paragraph now guys let us say we
80:49 - want to provide the text is marked these
80:52 - three words in between the mark starting
80:54 - and the ending tag so what we have to do
80:57 - is in the vs code we will simply enclose
80:59 - this text is marked over here within the
81:02 - mark tags so we say the mark starting
81:04 - tag over here and then we cut this and
81:07 - paste it after the marked word over here
81:10 - so we have the starting and the ending
81:12 - Mark tags and then we have text is
81:15 - marked which is enclosed Within These
81:17 - tags over here so let me just save this
81:19 - file now and try reloading this page
81:21 - once again on the browser so as you can
81:23 - see text text is marked is being
81:25 - highlighted as yellow and this is the
81:27 - functionality of the mark tag so
81:30 - whatever text is present in between the
81:32 - mark starting and the ending text it
81:34 - will be highlighted in yellow as you can
81:36 - see the background color is yellow over
81:38 - here now guys what exactly is happening
81:41 - behind the scenes so let me just right
81:43 - click over here and click on the inspect
81:45 - option you can see the exact CSS
81:47 - property over here the background color
81:49 - is being used as the mark value and the
81:52 - color property is given the value as the
81:55 - mark text so guys the same thing we can
81:57 - do for this text is small in this
81:59 - paragraph as well so what we can do is
82:01 - simply we will come in this vs code and
82:04 - over here instead of using the mark tag
82:06 - in this case we will use the background
82:08 - color property inside the style
82:10 - attribute so we have the style attribute
82:12 - for this paragraph that is this text is
82:14 - small in this paragraph over here and we
82:17 - say background color in this case so we
82:19 - say background color it is Mark so let
82:22 - me just save this file now and we will
82:24 - check what what is the effect of this
82:25 - inside this browser so when we reload
82:28 - this page as you can see this paragraph
82:30 - that is this text is small in this
82:32 - paragraph the entire paragraph is now
82:35 - having the background color that is
82:37 - yellow which is being depicted by the
82:39 - value of Mark of the background color
82:42 - property inside the style attribute so
82:44 - guys this is the main functionality of
82:46 - the mark tag it helps us in order to
82:48 - highlight the required text that we want
82:51 - to highlight based on our requirements
82:53 - how to commment code in HTML now guys
82:56 - the comment tag is used to insert the
82:59 - comments in the source code now the
83:01 - comments are not displayed in the
83:02 - browsers so basically we are going to
83:05 - provide the commands in our HTML source
83:07 - code over here in the vs code but the
83:10 - same thing will not be displayed when we
83:12 - are going to see our web pages in the
83:14 - browser so guys basically what is the
83:16 - functionality of the command now you can
83:18 - use the commments to explain your code
83:20 - which can help you when you edit the
83:23 - source code at a later date so basically
83:25 - you can provide certain commments in
83:27 - order to explain what kind of code you
83:29 - have written so that you can edit it at
83:32 - a later stage now this is espcially
83:34 - useful if you have a lot of code over
83:37 - here another functionality of having the
83:39 - commands is to make someone else
83:41 - understand what you have written in the
83:43 - code for the review purpose as well so
83:45 - whenever you are going to write the HTML
83:48 - code it will be reviewed by your seniors
83:51 - so in order to make them understand what
83:53 - the HTML code section is doing you can
83:56 - provide the comments in order to explain
83:58 - its functionality so guys over here as
84:00 - you can see this is the example so this
84:02 - is a comment and the comments are not
84:05 - displayed in the browser so you can see
84:07 - this entire statement being enclosed in
84:09 - between the commment Tex over here we
84:12 - have the less than sign and then we have
84:13 - the exclamation mark And Then followed
84:16 - by two times hyphen over here so this is
84:18 - the starting tag and then we have the
84:20 - ending tag over here as the two * hyphen
84:23 - and then we have have the greater than
84:25 - sign so guys basically whatever content
84:27 - is present in between these starting and
84:30 - the ending comment tags those will be
84:32 - commented out and will not be displayed
84:34 - on the browser so guys let us check this
84:37 - with the help of example now over here
84:39 - so let's say we add another paragraph in
84:41 - between these two paragraphs over here
84:43 - that this text is small in this
84:45 - paragraph and then we have this text is
84:48 - marked in this paragraph now we will
84:50 - have another paragraph in between them
84:52 - using the P tag we will say say this
84:55 - statement needs to be commented so we
85:00 - have simply provided this simple
85:01 - statement this statement needs to be
85:03 - commented in between the P teag which
85:06 - means it is a paragraph so let me just
85:08 - save this file now and try reloading
85:10 - this page over here so as you can see we
85:12 - have this paragraph this statement needs
85:14 - to be commented now guys what we will do
85:16 - is we will comment out this statement so
85:19 - what we have to do is over here before
85:21 - the starting P tag we have to provide
85:24 - the the comment tag over here so how do
85:26 - we provide the comment tag we have the
85:28 - less than symbol followed by exclamation
85:31 - mark and then we have two times hyphen
85:33 - over here and then as you can see
85:35 - automatically we have the ending
85:37 - commment tag as well that is two *
85:39 - hyphen and Then followed by the greater
85:42 - than symbol so we just need to cut this
85:45 - and paste it after the ending tag of
85:47 - this P tag over here as you can see for
85:50 - now we have the starting command tag and
85:52 - all the HTML code after this is being
85:55 - displayed in the green color which means
85:57 - these text will be commented out but we
85:59 - need to provide the ending comment tag
86:02 - over here after this particular
86:03 - statement so we need to provide the
86:05 - ending commment tag over here so as we
86:07 - provide the ending tag over here you can
86:10 - see only this P tag is being displayed
86:12 - in the green color so guys let me just
86:14 - save this file now and let us see what
86:16 - happens now after reloading this page so
86:19 - as you can see the statement that we had
86:21 - written is now commented out and that is
86:23 - why we cannot see see that statement
86:25 - over here on the browser so guys this is
86:27 - the functionality of the comment tags
86:29 - over here we can simply provide certain
86:31 - explanation as well in between the
86:33 - commment text in order to explain the
86:36 - functionality of the HTML code that we
86:38 - have return now guys in the browser you
86:40 - can see where the comments are by
86:42 - viewing the page source of the HTML code
86:45 - so over here we can simply right click
86:47 - and choose the inspect option so as you
86:49 - can see under the elements tag over here
86:52 - we can see this P tag that is present
86:54 - and then we also have the comment tags
86:56 - over here which depicts that this
86:58 - particular HTML code is commented out
87:01 - now guys we can also see the page source
87:03 - so when we right click and select the
87:05 - view page Source option as you can see
87:07 - on the new tab we are seeing the page
87:09 - source so over here we have the comments
87:12 - that this statement needs to be
87:14 - commented and it is commented out though
87:16 - we are not able to see it on the browser
87:19 - but we can see on the page source of
87:21 - that HTML div tag in HTML in order to
87:25 - group the content so guys basically the
87:27 - div and the span elements allow you to
87:30 - group together several elements over
87:33 - here to create sections or subsections
87:36 - of a page so basically this div and the
87:39 - span tags are used in order to group the
87:42 - content inside your HTML source code
87:45 - which we are going to check with the
87:46 - help of examples as well now guys for
87:48 - example you might want to put all of the
87:51 - footnotes on a page within a div element
87:55 - to indicate that all the elements within
87:57 - that div element relate to the foot noes
88:00 - and with this foot noes you might then
88:03 - attach a style to this div element so
88:05 - that they appear using a special set of
88:08 - style rules so guys basically the div
88:10 - tag is used in order to group the
88:12 - content in the HTML source code and in
88:15 - order to provide the common set of style
88:17 - rules over here you can provide the
88:20 - style attribute inside the div tag so
88:23 - that all the the tags inside the div tag
88:25 - will have the same style property so
88:27 - guys we will check this with the help of
88:29 - example now in the vs code so what we
88:32 - will do is simply I'll remove all these
88:34 - lines of code that we had written
88:35 - previously as part of formatting the
88:38 - text in the HTML now what we will do is
88:41 - simply we will have two paragraph over
88:43 - here so the first P tag that is the
88:45 - starting P tag we will say this is first
88:50 - paragraph and then guys we will have
88:52 - another paragraph over here so again we
88:54 - will have the P tag and we will say this
88:56 - is second paragraph So guys we have two
89:00 - paragraphs over here this is the first
89:02 - paragraph and this is the second
89:04 - paragraph now let me just save this file
89:06 - now and try reloading this page over
89:08 - here so as you can see we have two
89:10 - paragraphs being displayed over here now
89:12 - guys what if I want to provide certain
89:15 - color to the first paragraph let's say I
89:17 - want to provide the font color as blue
89:20 - over here so what we will do is simply
89:22 - we can come to this p t and we will say
89:25 - style in this case the style attribute
89:27 - is used in order to provide the
89:29 - background color or the text color or
89:32 - the various properties as you can see
89:34 - over here being suggested by the vs code
89:37 - so in this case we will say color
89:39 - property so we have the color property
89:41 - and let's say we provide the value as
89:43 - blue over here so guys this is the key
89:46 - value pair for the style attribute that
89:49 - is color is the property and blue is the
89:51 - value over here so let me just save this
89:53 - file now and try reloading this page
89:56 - once again so as you can see this is
89:58 - first paragraph is being displayed in
90:00 - the blue color now so guys basically
90:03 - this is the way in order to provide the
90:05 - color to any particular paragraph or any
90:07 - other HTML element now guys let's say
90:09 - you wanted to provide the same color to
90:12 - the second paragraph as well so one more
90:14 - option was to provide the same attribute
90:17 - that is Style with the color property
90:19 - and the blue value to this second
90:22 - paragraph as well so I'll just copy this
90:24 - and paste this over here inside the P
90:26 - tag of the second paragraph now let me
90:28 - just save this file now and try
90:30 - reloading this page once again so as you
90:32 - can see the blue color is being assigned
90:35 - to the second paragraph as well now guys
90:37 - let's say we have more paragraphs in
90:39 - this case so I'll just copy this and
90:41 - paste this over here in the remaining
90:43 - lines but this time we are not having
90:45 - the style property for the other
90:47 - paragraphs so I'll simply remove the
90:49 - style properties from all the remaining
90:52 - paragraphs and we will name name the
90:54 - paragraphs as third paragraph then we
90:56 - have fourth paragraph over here and then
90:59 - we have the fifth paragraph So guys let
91:01 - me just save this file now and try
91:02 - reloading this page so as you can see we
91:05 - have more three paragraphs being
91:06 - displayed but the colors are blue only
91:09 - for the first and the second paragraph
91:12 - what if we want to provide the blue
91:14 - color to all the paragraphs over here
91:16 - now guys it will be a repetitive task if
91:19 - we simply go on applying all the Styles
91:21 - and the colors to the remaining
91:23 - paragraphs over here so simply what we
91:25 - can do is I'll just remove the style
91:28 - attribute from both these paragraphs in
91:30 - this case and now we have the simple
91:32 - paragraphs without any color over here
91:34 - let me just save this file now and try
91:36 - reloading this page as you can see the
91:38 - color is black by default now guys let's
91:40 - say we want to provide the blue color to
91:43 - all the paragraphs in an easy way so
91:45 - what we can do is we can group them in
91:47 - between the div tags so over here we
91:49 - will come in the source code and we will
91:51 - say div tag over here so div tag helps
91:54 - us in order to group the HTML content
91:57 - and that is what we are going to do in
91:59 - this example as well so we have the
92:01 - starting div tag and the ending div tag
92:04 - we have to cut it from here and paste it
92:06 - after the fifth paragraph in this case
92:08 - so guys let me just format it properly
92:10 - so that it is in a good readable format
92:13 - so as you can see after this body we
92:15 - have the div tag and inside this div tag
92:18 - we have five paragraphs over here and
92:20 - then after that we have the div tag that
92:22 - is closed now guys what will be the
92:24 - impact of this div tag so let me just
92:26 - save this file now and try reloading
92:28 - this page so nothing is happening over
92:30 - here that's because behind the scenes
92:33 - only we have grouped the content that is
92:35 - all the five paragraphs are being
92:37 - grouped inside one div tag now guys what
92:40 - we can do is we can simply provide the
92:43 - style attribute over here to the div tag
92:45 - so that it applies to all the paragraphs
92:48 - over here so simply we will come to this
92:50 - div tag and then we will say style
92:52 - attribute and and then we can say color
92:55 - over here which is one of the properties
92:57 - of the style attribute and then we can
93:00 - say blue that is the value we want to
93:03 - apply to all the paragraphs that is the
93:05 - children of this div tag so guys
93:07 - basically this div tag is the parent tag
93:10 - over here and all these tags that is
93:12 - inside the div tag are the child tags so
93:15 - let me just save this file now and try
93:17 - reloading this page once again so as you
93:19 - can see all the paragraphs are being
93:21 - displayed with the blue color now and we
93:23 - do don't have to provide the style
93:25 - attribute separately to all the
93:28 - paragraphs that we were supposed to do
93:29 - earlier without the div tag so guys
93:32 - basically this is the main functionality
93:34 - of the div teag it helps us in order to
93:36 - provide certain formatting or the style
93:39 - to the child text that is present inside
93:41 - the div tag now guys let's say we want
93:43 - to display all these paragraphs at the
93:45 - center of the browser so what we can do
93:48 - is again inside the style attribute we
93:50 - have something called as text align
93:52 - property so as you can see we have this
93:54 - text align property and then it is
93:57 - having one of the values as Center so we
93:59 - can provide the center value so let me
94:02 - just save this file now and try
94:03 - reloading this page once again so over
94:05 - here when we reload this page as you can
94:08 - see all the paragraphs are being
94:09 - displayed at the center of the browser
94:11 - now guys similarly you can provide any
94:13 - of the formatting or the styles to all
94:16 - these paragraphs you can also provide
94:18 - the style to the individual paragraph as
94:20 - well so let's say we want to display the
94:23 - four fourth paragraph over here that is
94:25 - this is the fourth paragraph at the
94:27 - right of the browser so we simply have
94:30 - to come to this P tag and then we will
94:32 - say style and then we will use the text
94:35 - align property once again and we can
94:37 - simply provide right value over here so
94:40 - let me just save this file now and try
94:42 - reloading this page as you can see this
94:44 - is fourth paragraph is being displayed
94:47 - on the right of the browser and this is
94:49 - how we can provide the formatting so
94:51 - basically whatever formatting is being
94:52 - provided to the parent tag over here
94:55 - those will be applied to the child tags
94:57 - as well but in case a child is having
95:00 - their own formatting or the style
95:02 - attribute so it will be applied
95:04 - separately only to that child element
95:07 - and that is what we have seen just now
95:08 - with this fourth paragraph over here we
95:11 - have displayed it on the right and let's
95:13 - say we want to change the color of this
95:14 - fourth paragraph instead of this blue
95:17 - color we want to display it with the red
95:19 - color so we have to come over here
95:21 - inside the style attribute and we use
95:24 - the color property and we can simply
95:26 - provide the red value over here so let
95:29 - me just save this file now and try
95:30 - reloading this page so as you can see
95:33 - this is fourth paragraph is being
95:35 - displayed with the red color now so this
95:37 - is the functionality of the div tag over
95:39 - here basically it helps us in order to
95:41 - group the content of the HTML source
95:44 - code and apart from that you can provide
95:46 - the required formatting and the style
95:48 - attribute as well with the required
95:50 - property values based on your
95:52 - requirements spend pan tag in HTML to
95:55 - group The inline elements so guys
95:57 - basically the span element can be used
96:00 - to group inline elements previously we
96:03 - had seen the div tag that was used in
96:05 - order to group The Block elements now
96:07 - guys what is the difference between the
96:09 - block and the inline elements over here
96:11 - so basically this P tag which depicts
96:14 - the paragraph in the HTML is the block
96:16 - element which means whatever content we
96:19 - write inside the starting and the ending
96:21 - P tag will be followed by a new line and
96:24 - that is why we call it as the block
96:26 - element so over here as you can see the
96:28 - first paragraph Was displayed and then
96:30 - the control went to the next line and
96:32 - then the second paragraph Was displayed
96:34 - so these are nothing but the block
96:36 - elements over here now when we talk
96:38 - about the inline elements these four
96:40 - words by themselves are the inline
96:43 - elements over here so let's say when we
96:45 - want to provide certain different style
96:47 - attribute to this first word we can use
96:50 - the span tag in order to provide the
96:52 - style attribute and that is what is the
96:54 - meaning of the styling of the inline
96:57 - elements that can be done by using the
96:59 - span tag over here so if you have a part
97:01 - of a sentence or a paragraph which you
97:04 - want to group together you could use
97:06 - this Spen element and you can provide
97:08 - the different CSS property to this pen
97:11 - element as well so as you can see also
97:13 - you can use pen for using different CSS
97:16 - properties in same sentence of a
97:19 - paragraph So guys let us check this with
97:21 - the help of example now in this vs code
97:23 - code so what we will do is simply I'll
97:25 - remove the style attribute over here
97:28 - from the div tag as well as from this P
97:31 - tag which is the fourth paragraph over
97:33 - here so basically we have these five
97:35 - paragraphs in the source code let me
97:37 - just save this file now and try
97:38 - reloading this page once again so as you
97:41 - can see these five paragraphs are being
97:43 - displayed normally with the black color
97:45 - and there is no CSS property of the
97:47 - style attribute being applied over here
97:50 - now guys what we will do is I will
97:51 - modify the parag over here and we will
97:54 - say this color is green in this first
98:00 - paragraph So basically we have modified
98:02 - the statement and we are saying this
98:04 - color is green in this first paragraph
98:07 - now guys in the second paragraph what we
98:08 - will do is we will have this background
98:13 - color is red in this second paragraph so
98:18 - over here we are saying background color
98:20 - is red and over here we were saying
98:22 - color is green in this case so guys let
98:24 - me just save this file now and try
98:26 - reloading this page once again so as you
98:28 - can see the statements are updated now
98:31 - and the paragraphs are modified now guys
98:34 - let us say we want to provide the color
98:36 - as green to these three words that is
98:39 - color is green over here so how do we do
98:41 - that so simply if we provide the style
98:44 - attribute to this P tag then the entire
98:47 - statement will be displayed as green
98:49 - over here so I'll just show you that so
98:51 - we can provide the style at attribute
98:54 - and then we can say color as green in
98:57 - this case so when we provide the color
98:59 - as green let me just save this file now
99:01 - and try reloading this page you can see
99:04 - that the entire first paragraph is being
99:06 - displayed with the green color now but
99:08 - what if we only want to provide the
99:11 - green color to these three words that is
99:13 - color is green so what we have to do is
99:16 - we can use the span tag over here so
99:18 - simply I'll remove the style attribute
99:20 - from the P tag over here and then we can
99:23 - provide the span tag so we will say Span
99:26 - in this case so we have the starting
99:28 - span tag and then the ending span tag
99:31 - needs to be cut and we need to paste it
99:33 - after the green word over here so
99:35 - basically color is green is being
99:38 - surrounded by the span tag now let me
99:40 - just save this file now and try
99:42 - reloading this page once again so you
99:44 - can see there is no difference right now
99:46 - since we are not providing any attribute
99:48 - or The Styling to the span tag for now
99:51 - so what we have to do is inside this
99:53 - starting span tag we need to provide the
99:56 - style attribute and this style attribute
99:59 - will have the property that is color
100:01 - since we want to provide the font color
100:03 - as green so over here the color
100:06 - attribute will have the value as green
100:08 - in this case so let me just save this
100:10 - file now and try reloading this page
100:12 - once again so as you can see color is
100:15 - green is being displayed now in this
100:17 - green color and the rest of the words
100:20 - are still being displayed with the black
100:21 - color and guys that is the the main
100:23 - functionality of this span tag in order
100:26 - to provide certain styling or the
100:28 - formatting to the inline elements over
100:31 - here we can use the span tag similarly
100:33 - we can provide the background color as
100:35 - red over here in the second paragraph so
100:38 - what we can do is we will come over here
100:40 - and then before this background word we
100:42 - will provide the span starting tag and
100:45 - then we will cut the span ending tag
100:47 - over here and paste it after the red
100:49 - color so when we paste it after this so
100:52 - we need to provide the style attribute
100:55 - before providing the style attribute let
100:57 - me just save this file now and try
100:59 - reloading this page so nothing has
101:01 - happened over here for now but what if
101:03 - we provide the background color as red
101:05 - to this pen tag so when we provide the
101:07 - style attribute and the property that is
101:10 - supposed to be used is the background
101:12 - color over here and we simply provide
101:14 - the value as red in this case since the
101:17 - background color needs to be red so let
101:19 - me just save this file now and try
101:21 - reloading this page so as you can see
101:24 - background color is red is now having
101:26 - the background color displayed as red
101:28 - over here based on our requirement so
101:30 - guys this is another way in order to use
101:32 - the span element how to inspect HTML
101:36 - elements in browser so guys basically we
101:38 - can easily inspect or see the properties
101:41 - or the attributes of any existing HTML
101:44 - code via browser so guys in this video
101:47 - I'm going to show you how we can see the
101:50 - code of the existing web page that is
101:52 - being displayed with the required
101:55 - properties and the attributes and we can
101:57 - come to know like what is exactly
101:59 - written behind the scenes in the HTML
102:02 - source code so basically it also helps
102:04 - us to understand the existing web pages
102:07 - with their structure and The Styling so
102:10 - guys over here previously we had seen
102:12 - how we can use the div tag and the span
102:15 - tags as well in order to group the
102:17 - content in the HTML source code so over
102:20 - here you can see this color is green in
102:22 - this first first paragraph and then we
102:24 - have this background color is red in
102:26 - this second paragraph so how you can
102:29 - inspect these elements and see the HTML
102:32 - source code that is being written behind
102:34 - the scenes so simply we have to come
102:36 - over here get the cursor on the required
102:39 - paragraph that you want to see the
102:41 - source code for and then we have to
102:43 - right click over here and you can see
102:45 - the inspect option so guys basically
102:48 - this inspect option will be present on
102:50 - all the modern browsers currently we are
102:52 - using the Chrome browser over here but
102:55 - when you are using the other browser
102:57 - such as Firefox or Microsoft Edge or any
103:00 - other browser in your operating system
103:02 - you will be able to see this inspect
103:04 - option so we need to click on this
103:06 - inspect option so after clicking on the
103:08 - inspect option this particular section
103:10 - will open and inside the section you
103:13 - have to come to this elements section it
103:15 - can so happen that by default you are on
103:17 - the console or the sources section in
103:19 - this case but you have to come to this
103:21 - elements section over here here and then
103:24 - you can see the entire HTML source code
103:27 - so over here you can see the HTML tag
103:30 - which is the parent tag over here and
103:32 - then we have the two tags that is the
103:34 - head tag which is having the title that
103:37 - is formatting in HTML so you can see
103:39 - formatting in HTML title being displayed
103:42 - over here and then guys we also have the
103:44 - body in this case so you can expand the
103:46 - body as well and then you can see first
103:49 - of all we have the div tag inside the
103:51 - body and then we have the first
103:53 - paragraph tag so when you click on this
103:56 - you can see that the first paragraph is
103:58 - being highlighted over here so we need
104:00 - to expand this first paragraph and then
104:03 - you can see this word and then we have
104:05 - the span element in this case that is
104:08 - the starting and the ending tag so over
104:10 - here the HTML content is color is green
104:13 - and then guys you can see something
104:15 - different over here you are seeing the
104:17 - style attribute in this case so
104:19 - basically the style attribute is having
104:21 - the property that is color for which the
104:23 - value is being given as green and on the
104:26 - right hand side as well you can see
104:28 - element do style that this particular
104:31 - elements style is being set as the color
104:33 - property is given the value as green
104:36 - color over here similarly we have
104:38 - another paragraph as well so when we go
104:40 - on the second paragraph you can see the
104:42 - second paragraph is being highlighted
104:44 - over here above so when we get the
104:46 - cursor over here the second paragraph is
104:49 - getting highlighted and this is one of
104:51 - the best ways in order to inspect the
104:53 - element and see what code is written
104:56 - behind the scenes in order to display
104:59 - this particular paragraph or any other
105:01 - HTML tag in this way now what is making
105:04 - this paragraphs content that is
105:06 - background color is red with the
105:08 - background color as red over here so let
105:10 - us check that so when we go to this
105:12 - paragraph and we expand this paragraph
105:14 - we can see this pan tag over here for
105:17 - which the style is given as background
105:19 - color is equal to Red so when we click
105:21 - on this pan tag you you can see
105:23 - background color is being showed as red
105:25 - over here you can also uncheck this
105:28 - option on the right you can see so when
105:30 - we click on this you can see that the
105:32 - background color that was red over here
105:34 - is not being displayed that's because we
105:36 - have unchecked that option and in the
105:38 - source code you can see it is now
105:40 - commented out over here and there is no
105:42 - background color that is being applied
105:45 - now again when you check on this option
105:47 - the background color that was red is set
105:50 - again over here on the browser so guys
105:52 - this inspect option also helps you to
105:54 - play around with the code over here that
105:56 - is already written on a particular web
105:59 - page and you can see what is the effect
106:01 - of unchecking and checking certain
106:03 - options over here now we can also come
106:05 - over here and provide some more
106:07 - properties so let's say we want to make
106:09 - the text color as yellow over here along
106:12 - with the background color so we can
106:14 - simply provide the color property over
106:16 - here and then we can simply provide the
106:19 - yellow value so as you can see
106:21 - automatically the yellow color is being
106:23 - applied to this text in this case that's
106:26 - because we have provided this property
106:28 - now we can simply uncheck and check
106:30 - these options over here once again so
106:32 - when we uncheck this background color
106:34 - the background color is gone now and you
106:36 - can see the text color is yellow in this
106:38 - case when we uncheck that text color is
106:41 - yellow so we can see the text color is
106:43 - black by default so guys this is the way
106:46 - you can play around with the CSS
106:48 - properties as well by using the inspect
106:51 - option of the browser and guys if you
106:53 - see the source code that was written in
106:55 - the vs code over here this is the same
106:57 - source code that you can see when you
106:59 - choose the inspect option on the browser
107:02 - so in this way you can inspect any of
107:04 - the web pages on the internet that is
107:06 - present in order to learn something out
107:08 - of it and make changes in order to play
107:11 - around and check how the text looks like
107:13 - on those web pages style attributes in
107:16 - HTML so guys basically the HTML style
107:19 - attribute is used to add styles to an
107:22 - element such as color background color
107:25 - or font size and many more properties
107:28 - that we are going to check with the help
107:30 - of examples as well now guys this is the
107:32 - format we first of all have the less
107:34 - than symbol followed by the tag name
107:37 - that we have been using in the previous
107:39 - videos as well now guys in this starting
107:41 - tag we have the space character and then
107:44 - we have the style attribute so basically
107:46 - we need to provide the style attribute
107:48 - followed by the equal to symbol and all
107:51 - the styling properties must be present
107:54 - in between the double codes so over here
107:56 - we have the double codes and Within
107:58 - These double codes we are having the key
108:00 - value pass that is property followed by
108:03 - colon and then value and then if we have
108:06 - the multiple key value properties those
108:08 - must be separated with the semicolon in
108:11 - between the double quotes over here so
108:13 - guys let us check this with the help of
108:15 - examples now so first we are going to
108:17 - check the background color over here so
108:19 - we are going to come to this vs code and
108:21 - we simply have the HTML parent tag over
108:24 - here and then we have the head tag as
108:26 - well and inside the title tag we are
108:29 - going to change the title of the page
108:31 - that is we are going to say Styles in
108:34 - HTML so guys we have the title that is
108:37 - Styles in HTML and then guys over here
108:39 - inside the body we will simply have the
108:42 - paragraph and we will say this paragraph
108:45 - has background color as red so guys we
108:49 - have the content as this paragraph has
108:52 - background color is red over here so let
108:54 - me just save this file now and try
108:56 - reloading this page on the browser so as
108:59 - you can see we have the title that is
109:00 - Styles in HTML and the paragraph is
109:03 - being displayed as this paragraph has
109:06 - background color as red now guys to make
109:09 - this paragraph have the background color
109:11 - as red what we can do is we will be
109:13 - using the style attribute so in the vs
109:16 - code we will come over here and as we
109:18 - have seen in the format with the start
109:20 - tag we have the space character followed
109:22 - by by the style attribute and then we
109:25 - have the property value pirs over here
109:28 - so basically inside this starting P tag
109:31 - we will have the space character and
109:33 - then we will say style attribute over
109:35 - here as you can see VSS code is
109:37 - suggesting us the style attribute so we
109:40 - are going to select this and then
109:42 - automatically we are getting this equal
109:44 - to symbol and the double codes over here
109:46 - since vs code is helping us in order to
109:48 - complete this code so basically we are
109:51 - going to use the B ground color property
109:54 - in this case and then the value that we
109:56 - are going to use is after the colon we
109:59 - are going to have the value that is red
110:01 - over here so guys basically as you can
110:03 - see this is the format we have the style
110:05 - attribute followed by equal to symbol
110:08 - and then in between the double codes
110:10 - first of all we have the property and
110:12 - Then followed by the colon and then the
110:14 - value that is red color and then
110:16 - automatically the semicolon is also
110:18 - placed so if you have more properties to
110:21 - be applied after the semicolon you can
110:23 - provide more properties so over here
110:25 - this is the code that we have completed
110:28 - with the background color that is red
110:30 - for this paragraph so let me just save
110:32 - this file now and try reloading this
110:34 - page over here so as you can see the
110:37 - paragraph is having the background color
110:39 - as red and since it is a block element
110:41 - the entire width of the screen is being
110:44 - taken and the color red is being applied
110:46 - over here to the background now guys let
110:48 - us check another property we also have
110:51 - the color property over here here which
110:53 - will change the text color for the
110:55 - element to which we have applied this
110:57 - color property so guys let us have
110:59 - another paragraph in our source code so
111:01 - we have the P tag over here and then we
111:04 - say this paragraph has color as green so
111:10 - guys we are going to provide the text
111:12 - color as green over here so what we have
111:14 - to do is first of all simply we will
111:15 - save this file now and try reloading
111:18 - this page so as you can see we have
111:19 - another paragraph over here it says this
111:22 - paragraph has color as green so we are
111:24 - going to change the text color now so
111:27 - how do we do that simply we have to
111:29 - provide the style attribute to the
111:31 - starting tag of the paragraph So we have
111:33 - the style attribute and then we use the
111:35 - color property and the value that we
111:37 - have to provide as green color so over
111:40 - here we have provided the value as green
111:42 - so let me just save this file now and
111:44 - try reloading this page once again so as
111:46 - you can see the color is being displayed
111:48 - as green now for this particular
111:50 - paragraph that this paragraph has color
111:52 - as green now guys let us move to another
111:55 - property we also have something called
111:57 - as font family which means it is the
111:59 - font style so basically the default font
112:02 - family for this particular paragraph
112:04 - that are being displayed is the Times
112:06 - New Roman we will be applying some other
112:09 - font family to another paragraph over
112:11 - here so let's say we have another
112:13 - paragraph with the P tag and we will say
112:16 - this paragraph has different font family
112:21 - so guys we have another paragraph gra
112:22 - over here this paragraph has different
112:25 - font family when we save this file now
112:27 - and try reloading this page it is having
112:29 - the same font style that is the font
112:31 - family over here so we are going to
112:33 - change the font family in this case so
112:35 - again we have to come over here in the
112:37 - start tag we will say style and then we
112:40 - will say font family in this case so as
112:43 - you can see it specifies a prioritize
112:46 - list of font family names or generic
112:49 - family names so we are going to select
112:51 - this the default font family that we are
112:53 - using right now is the Times New Roman
112:56 - but instead of this let us say we want
112:58 - to provide something else so let's say
113:00 - we want to provide this aial font family
113:03 - so we select this value and then when we
113:06 - save this file now and try reloading
113:07 - this page once again so as you can see
113:10 - the font family for this particular
113:12 - paragraph has been updated now so this
113:14 - is the way that you can update the font
113:16 - family of a paragraph or any other tag
113:19 - based on your requirements now guys let
113:21 - us move to another property we have
113:23 - something called as font size over here
113:25 - so guys by default the font size that is
113:28 - being displayed on the web browsers is
113:30 - having the 100% as the value so what we
113:33 - can do is we can come over here for the
113:35 - second paragraph that is this paragraph
113:38 - has color as green we are going to
113:40 - increase the font size so simply we have
113:43 - to come over here after the semicolon we
113:45 - provide the space character so that it
113:47 - is more readable so simply we have to
113:49 - provide the font size property over here
113:52 - and when we provide 100% no change will
113:55 - be observed on the web browser so when
113:58 - we save this file now and try reloading
114:00 - this page as you can see the font size
114:02 - is same as the previous one that's
114:04 - because by default the font size is the
114:06 - 100% let's say we want to increase the
114:09 - font size by 50% and make it 150% over
114:13 - here so when we do it as 150 the font
114:16 - size for this particular paragraph will
114:17 - be increased to some extent so let me
114:20 - just save this file now and try
114:21 - reloading in this page so as you can see
114:24 - the font size for this particular
114:25 - paragraph has increased now so guys this
114:28 - is one of the ways in order to change
114:30 - the font size of a particular paragraph
114:32 - or any other HTML content guys instead
114:35 - of using the percentage we can use the
114:37 - pixels as well percentages are used when
114:40 - we want the web pages to be responsive
114:42 - and on the mobile we want the size of
114:45 - the different elements of the web pages
114:47 - to adjust on their own but when we use
114:50 - pixels over here fixed pixels will be
114:52 - used so basically when we provide 20
114:54 - pixels in this case so let's say we
114:57 - provide 20 PX in this case let me just
115:00 - save this file now and try reloading
115:01 - this page so basically the font size
115:04 - will be fixed over here based on the
115:06 - resolution of the screen in this case so
115:08 - guys it depends on you which one you
115:10 - want to use whether you want to use the
115:12 - percentage or the pixels but basically
115:14 - for the best case scenario if you want
115:17 - your web pages to be viewed properly on
115:19 - all the screen resolutions such as
115:21 - desktop or laptops or mobile devices as
115:24 - well you should be using the percentages
115:27 - so that it is responsive in nature so
115:29 - let me just save this file now and try
115:31 - reloading this page once again so
115:33 - basically this is the font size that is
115:35 - increased to some extent compared to the
115:38 - default font size over here let us move
115:40 - to another style property so we also
115:42 - have something called as text align
115:44 - which will help us in order to align the
115:47 - HTML element so guys what we will be
115:49 - doing is let's say we want to display
115:52 - this third paragraph that is this
115:54 - paragraph has different font family at
115:57 - the center of the browser so what we can
115:59 - do is simply we have to come over here
116:01 - in the source code and after this font
116:03 - family property we can simply provide
116:06 - the text align property so we have text
116:09 - align property and the value that we are
116:11 - going to use is Center in this case so
116:14 - when we use Center then this particular
116:16 - paragraph should be displayed at the
116:18 - center of the browser so let me just
116:20 - save this file now and try reloading
116:22 - this page so as you can see this
116:25 - paragraph has different font family is
116:27 - now being displayed at the center of the
116:29 - browser so guys this is the way that you
116:31 - can use the different properties and the
116:34 - values inside the style attributes for
116:37 - different HTML elements based on your
116:39 - requirements without the style
116:41 - properties you will be able to write the
116:43 - simple content on your web pages but
116:45 - with the style properties you will be
116:47 - able to provide certain styling and the
116:50 - formatting to those elements quotation
116:52 - and citation elements in HTML so guys we
116:56 - are going to see number of tags over
116:58 - here in this video to understand what
117:00 - are the different tags and their meaning
117:02 - so the very first tag is the blog code
117:04 - tag so as you can see the HTML block
117:07 - code element defines a section that is
117:10 - qued from another source so if you want
117:13 - to quote a particular section from
117:15 - another source in your HTML page you can
117:18 - use the blog code tag over here now the
117:20 - browsers usually in indent the block
117:23 - code elements so basically there is
117:25 - certain indentation on the left hand
117:27 - side while we are displaying the content
117:30 - inside the block code tag so guys let us
117:33 - check this with the help of example now
117:35 - in the vs code over here so inside the
117:37 - body we will first of all have the
117:39 - paragraph So we have the P tag over here
117:42 - and then we will have below content is
117:45 - within blog
117:48 - code so guys we have below content is
117:51 - within block code after this paragraph
117:53 - We will have the block code tag so as
117:55 - you can see we have the block code tag
117:58 - that is being suggested by the vs code
118:00 - over here so we will use this and then
118:02 - we will say this content is from
118:07 - another source and then let us say we
118:10 - want to go to the next line so we will
118:12 - have the BR tag over here and then after
118:15 - this BR tag what we will do is we will
118:17 - say this is another statement in Block
118:24 - code so guys basically we have two
118:27 - statements over here inside the block
118:29 - code tags so let me just save this file
118:31 - now and try reloading this page on the
118:33 - browser so as you can see we have the
118:36 - first paragraph that is below content is
118:38 - within block code and then you can see
118:40 - this content is within the block code
118:43 - and on the left hand side we can see
118:45 - certain indentation over here so guys
118:47 - whenever you want to mention certain
118:50 - information from another source you can
118:52 - mention it within the block code so that
118:55 - it is understandable by the other
118:57 - developers as well that this particular
118:59 - content is from another source that is
119:01 - taken from the internet and guys that is
119:03 - the usage of this block code tag over
119:06 - here now guys let us move to another tag
119:08 - so as you can see we have the Q tag as
119:10 - well so the HTML Q tag defines a short
119:13 - quotation so basically browsers normally
119:17 - insert quotation marks around the
119:19 - quotation so whenever we have certain
119:21 - content in between the starting and the
119:23 - ending Q tag over here so that content
119:26 - will be enclosed within the double codes
119:29 - so let us check this with the help of
119:30 - example now over here in the vs code so
119:33 - guys we will have another paragraph so
119:35 - we will Define the P tag over here and
119:37 - then we will say this text is within
119:42 - double codes and then we will say in
119:44 - this paragraph So guys this is a very
119:46 - simple paragraph that we have defined
119:48 - let me just save this file now and try
119:50 - running this code just to to show you
119:52 - how it looks so basically this is
119:54 - another paragraph it says this text is
119:57 - within double quotes in this paragraph
119:59 - but we have not used the Q tag for now
120:02 - so basically we want to enclose this
120:04 - particular string that is text is within
120:07 - double Cotes in between the double
120:09 - quotes over here so what we have to do
120:11 - is we need to enclose this text in
120:13 - between the starting and the ending Q
120:15 - tag so let us come to the vs code over
120:18 - here the starting Q tag is being defined
120:20 - and the ending Q tag we need to provide
120:23 - after this codes word so guys let me
120:25 - just save this file now as you can see
120:27 - we have enclosed only this substring in
120:30 - the entire paragraph in between the
120:32 - starting and the ending Q tags so let me
120:34 - just come to the browser and reload this
120:36 - page so as you can see we are now
120:38 - getting the double codes for this
120:40 - substring in this entire paragraph over
120:43 - here and that is the main functionality
120:44 - of the Q tag in order to provide the
120:47 - double Cotes in between the content
120:50 - where it is applied in our HTML source
120:52 - code now guys let us move to another tag
120:55 - over here so we have something called as
120:57 - abbr tag so the HTML abbr tag defines an
121:02 - abbreviation or an acronym like HTML CSS
121:06 - Etc so guys basically whenever you have
121:08 - certain abbreviation or the acronym to
121:11 - be defined you can use the abbr tag and
121:14 - then you can provide the full form as
121:16 - well so let me just come to the vs code
121:18 - over here we will write another
121:20 - paragraph So we have the p bag and then
121:22 - we will say this page is return in HTML
121:28 - so basically the source code of this
121:30 - particular page is in HTML and that is
121:33 - what we have written this page is
121:35 - written in HTML now guys what we want to
121:37 - do is certain users won't be knowing
121:39 - what is the full form of this HTML so we
121:42 - can enclose this HTML word in between
121:45 - the a br starting and the ending tag so
121:49 - guys over here we will mention AB BR r
121:52 - tag over here and then the ending tag
121:54 - will come after the HTML word so guys
121:57 - basically we have provided the abbr tag
122:00 - now what happens when we reload this
122:02 - page so let me just save this file now
122:04 - and reload this page on the browser so
122:06 - it is displaying it as a normal
122:08 - paragraph over here and we are getting
122:10 - this HTML word as well but we are not
122:13 - getting the full form of this
122:15 - abbreviation so what we can do is we can
122:18 - come over here in the vs code and inside
122:20 - the abbr tag we have the attribute
122:23 - called as title so as you can see it
122:26 - contains a text representing advisory
122:28 - information related to the element it
122:31 - belongs to so basically we can provide
122:33 - the title in order to give the full form
122:36 - of this particular HTML word so let me
122:39 - just provide this title and we will say
122:41 - hyper text markup language which is the
122:44 - full form of HTML because we have the
122:46 - full form that is hyper text markup
122:48 - language so when we provide the title
122:51 - inside the this abbr tag let us see what
122:54 - happens now let me just save this file
122:56 - now and try reloading this page on the
122:57 - browser once again so as you can see it
123:00 - is now underlined with the dots over
123:03 - here that is the HTML word is underlined
123:05 - and when we get the cursor on this HTML
123:08 - word now you can see that hyper text
123:10 - markup language that is the full form
123:12 - that we have provided in the title
123:15 - attribute is now being displayed to the
123:17 - user and guys this is the main
123:19 - functionality of this abbr tag it helps
123:22 - you to provide the full form of certain
123:25 - words that is the abbreviations and the
123:27 - acronyms can be represented by this tag
123:30 - so guys you can use this tag based on
123:32 - your functionality and the requirements
123:34 - now let us move to another tag over here
123:36 - we have something called as address tag
123:38 - as well now the HTML address tag defines
123:41 - the contact information for the author
123:44 - or the owner of a document or an article
123:46 - so guys let us try using this address
123:49 - tag now so what we will do is after this
123:51 - paragraph We will have the address tag
123:53 - over here so we can use the address
123:56 - starting and the ending tag and then
123:58 - guys what we will do is we will simply
124:00 - say YouTube channel name and then colon
124:05 - and then on the next line we will say
124:07 - programming for beginners which is the
124:09 - name of this YouTube channel which you
124:11 - should definitely subscribe if you have
124:13 - not done so in order to learn a lot
124:15 - about the web development and other
124:17 - programming languages and then we will
124:19 - also have editor which we use use as vs
124:22 - code so guys basically this is just an
124:24 - example that I am showing you in reality
124:27 - you will be using the exact address of
124:29 - certain person or the company based on
124:31 - your requirements that you want to
124:33 - display the information on the page so
124:36 - this is just an example that we have
124:37 - taken in order to see how it looks on
124:40 - the web browser so guys let me just save
124:42 - this file now and try reloading this
124:44 - page once again on the browser so as you
124:46 - can see the address tag makes the
124:49 - content to be displayed with the it
124:51 - sized formatting on the text now guys
124:54 - the entire content is being displayed on
124:56 - one single line so what we can do is we
124:58 - can provide the BR tag over here so at
125:01 - the end of the lines we can simply
125:02 - provide the VR tag over here and now let
125:05 - us save this file now and try reloading
125:08 - this page once again so as you can see
125:10 - the entire content now is being
125:12 - displayed on the different lines over
125:14 - here inside the address tag which is
125:16 - formatting the text and displaying it on
125:18 - the browser as the itally sized text now
125:21 - let us move to another tag over here so
125:23 - we have something called a site tag as
125:25 - well now the HTML site tag defines the
125:28 - title of a creative work so for example
125:31 - a book a poem a song a movie a painting
125:35 - Etc so basically the text in the site
125:37 - element usually renders in italic so
125:40 - guys again we have another tag that is
125:42 - site tag which will help the element to
125:44 - be displayed as itally sized text so
125:47 - guys let us check this now with the help
125:49 - of example in the vs code over here so
125:51 - we will simply have another paragraph
125:54 - and then we will say this video is
125:58 - created by programming for beginners
126:02 - YouTube channel so we have programming
126:05 - for beginers YouTube channel so guys
126:09 - basically we have a very simple
126:10 - paragraph over here that we have defined
126:12 - let me just save this file now and try
126:14 - reloading this page on the browser so as
126:16 - you can see this is a very simple
126:18 - paragraph guys as we have just seen the
126:20 - site tag it helps us to define the title
126:23 - of a creative work so it can be any
126:26 - author a book a poem so basically what
126:28 - we are going to do is we are going to
126:31 - apply the site tag for this programming
126:34 - for beginners because this is the
126:36 - YouTube channel that is helping us right
126:38 - now in order to learn HTML with the help
126:40 - of these videos so guys what I'm going
126:43 - to do is we will have the site tag over
126:45 - here so we have the side starting tag
126:48 - and then I'll just cut this and paste it
126:50 - after the big word over here and then
126:53 - let me just save this file now and try
126:55 - reloading this page on the browser once
126:57 - again so as you can see now the
126:59 - programming for beginners this text has
127:01 - been formatted with the itally sized
127:04 - text and this is how the content in
127:07 - between the site tag will be displayed
127:09 - whenever you are going to use it based
127:11 - on your requirements so Guys these were
127:13 - certain quotation and citation elements
127:15 - in the HTML that you can use based on
127:17 - your requirements the block code helps
127:20 - us in order to quote some other
127:22 - information from another source and then
127:24 - we also have the Q tag that will just
127:27 - enclose the string in between the double
127:30 - quotes over here and then we have also
127:32 - used the abbr tag which will help us in
127:35 - order to display the abbreviations and
127:37 - the acronyms in HTML we also have the
127:40 - address tag that can be used in order to
127:43 - display the contact information of an
127:45 - individual or a company or an
127:48 - organization as well and then lastly we
127:50 - have the site tag in order to display
127:52 - the name of the poem or any other
127:55 - creative work that has been done Block
127:57 - versus inline elements in HTML in order
128:01 - to display the values so guys basically
128:03 - there are two display values in HTML one
128:06 - is the block element and another is
128:09 - inline element so we are going to
128:11 - understand what is the difference
128:12 - between these two display values over
128:15 - here in HTML now guys as far as Block
128:17 - Level elements are concerned these
128:19 - always starts on a new line and the
128:22 - browsers automatically add some space
128:24 - that is a margin before and after the
128:27 - element so basically the two commonly
128:29 - used block elements are the P tag which
128:32 - is for the paragraph and the div tag
128:35 - that is used in order to group the
128:37 - content on the HTML now guys let us
128:39 - check this with the help of example now
128:41 - in the VSS code so over here I have
128:44 - defined the title as Block versus inline
128:46 - elements and now what we will do is we
128:48 - will have the P tag over here and and
128:51 - then we will say this is simple
128:54 - paragraph So guys we have written a
128:56 - simple paragraph with the help of a P
128:58 - tag over here now guys let us say we
129:00 - have another tag that is the div tag in
129:03 - this case which is used in order to
129:05 - group the content on the HTML so when we
129:08 - use the Dev tag inside this we will be
129:10 - using some another tag over here so
129:12 - let's say I use another paragraph tag
129:15 - and then we will say this is another
129:19 - paragraph inside div tag so guys
129:23 - basically this div tag is used in order
129:25 - to group the content so let me just save
129:27 - this file now and try reloading this
129:29 - page on the browser so as you can see we
129:32 - have this is a simple paragraph and then
129:35 - we also have this is another paragraph
129:37 - inside div tag if you notice we did not
129:40 - provide the BR tag that is used in order
129:43 - to break the line so basically the
129:45 - browser displayed both these paragraph
129:48 - and the div tag on separate lines over
129:50 - here AO automatically without the user
129:53 - providing any BR tag so that these two
129:56 - elements are separated and guys that is
129:58 - the meaning of this block type element
130:00 - if we go and check in the inspect option
130:03 - as well and when we get the cursor over
130:05 - here on the first P tag the region that
130:07 - is highlighted in blue color that is the
130:10 - main paragraph over here using the P tag
130:12 - and the region that is highlighted with
130:14 - the light orange color that is the
130:17 - margin that is provided automatically by
130:19 - the browser the same thing will be
130:21 - applied to the other P tag over here as
130:23 - well as you can see the one that is
130:25 - inside the div tag now it is being
130:28 - highlighted with the blue color but then
130:30 - we also have the margin at the top and
130:32 - the bottom with the light orange color
130:35 - and that is how the block elements are
130:37 - displayed on the browser now let us see
130:39 - how the inline elements will be
130:41 - displayed so basically an inline element
130:44 - does not start on a new line an inline
130:47 - element only takes up as much width as
130:50 - necessary so basically it will not start
130:52 - with the new line unlike the Block Level
130:55 - Elements which starts with the new line
130:56 - and also it has the ending margin as
130:59 - well and these inline elements will only
131:01 - take as much width as necessary over
131:04 - here we have seen with the block
131:05 - elements that the entire width of the
131:07 - screen is being taken by the P tag and
131:10 - the div tag as well but the inline
131:12 - element will take the width that is
131:14 - necessary in order to display it on the
131:17 - browser so commonly used inline elements
131:19 - are the span tag and the a tag so guys
131:22 - let us check this with the help of
131:24 - example now now guys let us say after
131:26 - this div tag we directly want to provide
131:28 - the span tag over here so when we
131:30 - provide the span tag we will say this is
131:33 - a span tag now let me just save this
131:36 - file now and try reloading this page
131:38 - once again on the browser so as you can
131:41 - see this is a span tag is being
131:43 - displayed over here after the div tag so
131:46 - basically this div tag was displayed
131:48 - which is having the paragraph and then
131:50 - we have the span tag over here which is
131:53 - displayed right now so this is on
131:55 - another line that's because we have
131:57 - provided the div tag and it is having
131:59 - its own margin at the bottom right now
132:02 - as you can see being displayed using the
132:04 - light orange color now guys let us say
132:06 - we have another span tag over here after
132:08 - this first span tag so what we will do
132:11 - is we will have another span tag over
132:13 - here and then we will say this is
132:16 - another span tag now guys what we will
132:19 - do is we will also have the full stop
132:21 - over here after the first span tag since
132:24 - the second span tag will also be
132:26 - displayed on the same line so that we
132:28 - can differentiate both of them now let
132:30 - me just save this file now and try
132:32 - reloading this page once again so as you
132:34 - can see the another span tag that is
132:36 - this is another span tag over here is
132:39 - being displayed on the same line and
132:42 - that is the meaning of the inline
132:44 - element so it continues on the same line
132:46 - wherever it is being displayed in the
132:48 - source code and also it takes as much
132:51 - with as necessary so if we get the
132:54 - cursor over here you can see only the
132:56 - blue part that is this is span tag is
132:58 - being highlighted over here again this
133:00 - is another span tag is being highlighted
133:02 - over here and not the entire width of
133:05 - the screen is being taken unlike what we
133:07 - have seen in the P tag you can see the
133:10 - entire screen withd is being taken and
133:12 - the color is till the end of the screen
133:15 - on the right so guys this is the main
133:17 - difference between the block and the
133:18 - inline element over here we have another
133:21 - element that is the a tag which is used
133:23 - in order to display certain link so if
133:26 - we provide the a tag over here and then
133:29 - we can simply provide this is a
133:31 - hyperlink so guys we also call it as
133:34 - hyperlink since it is used in order to
133:36 - link to another source where we can
133:38 - navigate to we will be checking the a
133:41 - tag in the upcoming videos as well so
133:42 - that you get to learn more about the a
133:45 - tag now let me just save this file now
133:47 - and try reloading this page once again
133:49 - so as you can see the a tag content is
133:52 - also displayed on the same line since it
133:54 - is the part of the inline element in
133:56 - HTML currently we have not given the
133:59 - href attribute value over here to which
134:02 - we want to navigate to when the user
134:04 - clicks on this link on the web browser
134:07 - so we will be learning more about it in
134:09 - the upcoming video as well but this is
134:11 - the main difference if we see the block
134:13 - elements they are being surrounded by
134:15 - the margins on the top and the bottom
134:17 - and also it takes the width of the
134:19 - entire screen as well but with the
134:21 - inline elements they don't have any top
134:24 - margin or the bottom margin over here
134:26 - and they will take the width that is
134:28 - necessary to be displayed and not the
134:30 - entire width of the screen colors in
134:32 - HTML and we are going to see the
134:35 - background color text color and Border
134:38 - colors as examples so guys basically the
134:40 - HTML colors are specified with the
134:43 - predefined color names or we can also
134:46 - have the RGB values which stands for red
134:49 - green and blue component we also have
134:52 - the hex values as well and other color
134:54 - systems such as hsl rgba or hsla values
134:59 - so guys let us check this now with the
135:01 - help of examples in the vs code the very
135:04 - first thing that we will be checking is
135:06 - how we can set the background color over
135:08 - here so guys over here in the VSS code
135:11 - let's say to the body of this HTML page
135:13 - we want to provide certain background
135:16 - color so we come to the starting tag of
135:18 - the body and then we provide the style
135:21 - attribute and inside the style attribute
135:24 - we have something called as the
135:25 - background color property so this
135:27 - property we are going to use and how we
135:30 - can define the color is by using the
135:32 - color names or we can also use the RGB
135:35 - or the hex values over here so the first
135:37 - example that we are going to see is by
135:39 - using the color names so over here you
135:42 - can see that there are various color Nam
135:44 - that you can use so we will be using the
135:46 - aqua color in this case so guys over
135:49 - here you are just defining the color
135:51 - name you can also provide the red color
135:53 - as well so as you can see red color is
135:55 - being displayed or we can also provide
135:57 - green color so we have the variants of
136:00 - green color such as green or green
136:02 - yellow so in this case we will be using
136:04 - the aqua color as it will look decent as
136:07 - the background color over here so let me
136:09 - just save this file now and try
136:11 - reloading this page so as you can see
136:13 - colors in HTML is the title and we can
136:16 - see the background color of the body as
136:19 - the aqua color and this is one of the
136:21 - ways in order to provide the color by
136:23 - using the color names over here we can
136:25 - also adjust the colors as you can see it
136:28 - is showing us the RGB values and this is
136:30 - the RGB value for this particular color
136:33 - now guys let us see another way in order
136:35 - to use the color that is by using the
136:37 - RGB values and we will be using the text
136:40 - color in order to see the example so
136:43 - let's say we have one paragraph over
136:45 - here so we use the P tag and then we
136:47 - will say this is one paragraph
136:51 - on HTML page so guys this is a very
136:55 - simple paragraph that we have written it
136:57 - will be in black color by default so let
137:00 - me just save this file now and try
137:01 - reloading this page once again so as you
137:04 - can see this is one paragraph on HTML
137:07 - and it is black in color let's say I
137:09 - want to change the color to some other
137:11 - color by using the RGB values so how we
137:14 - can do that so we come over here on the
137:16 - VSS code and inside the starting pte we
137:20 - again provide the style attribute and
137:22 - then in order to provide the text color
137:25 - we will be using the color property so
137:27 - you can see it sets the color of an
137:30 - element's text so basically in order to
137:33 - change the text color we can use the
137:35 - color property so we use this property
137:38 - and then in order to mention the value
137:40 - of color using the RGB values we can use
137:44 - R GB as you can see it creates a color
137:48 - from red green and blue values so these
137:51 - are the combinations of the red green
137:53 - and blue values over here so if we hover
137:55 - over this you can see that RGB value is
137:58 - 255 and then 0 and 0er which means the
138:01 - full component of red color is being
138:03 - taken over here and the green and the
138:05 - blue components are zero when we hover
138:07 - over this green color it is showing 128
138:11 - as the green color it is not at the full
138:13 - capacity but we can drag this over here
138:16 - and we can use the 255 component of the
138:19 - green color as well as when hover over
138:21 - the blue color over here so it says 255
138:24 - of the blue color component and we have
138:26 - 0 component of the red and green colors
138:29 - respectively so guys we can provide the
138:32 - numbers over here in the sequence of red
138:34 - green and blue so let's say I want to
138:38 - display this paragraph in red color so
138:41 - the maximum number that we can provide
138:42 - is 255 the range is from 0 up to 255 and
138:47 - then let's say I want 0% of the green
138:49 - color and 0 % of the blue color so it is
138:52 - a pure red color that we are defining
138:55 - over here in the RGB format so let me
138:58 - just save this file now and try
138:59 - reloading this page once again so as you
139:02 - can see red color is being displayed
139:04 - over here let's say we want to add
139:06 - certain component of green color as well
139:08 - to this red color so what we have to do
139:10 - is we come over here in the green
139:12 - component instead of zero let's say I
139:15 - provide 50 in this case so to some
139:17 - extent this color will be updated on the
139:20 - browser browser so let me just save this
139:22 - file now and try reloading this page so
139:24 - we are not able to notice the color
139:26 - change over here that's because the
139:28 - green component is increased slightly
139:30 - what if we provide the value that is 200
139:33 - over here what happens so as you can see
139:35 - it is updated to yellow color now so let
139:37 - me just save this file now and try
139:39 - reloading this page you can see that it
139:41 - is being displayed as the yellow color
139:43 - now and let's see we provide the 200 of
139:46 - the blue component as well so it has
139:48 - changed to some other color over here
139:50 - right write down so guys this is the way
139:52 - you can play around with the RGB values
139:54 - as well over here for now I will just
139:56 - keep it as red so that it matches with
139:59 - the background color and we can clearly
140:01 - see the text over here inside the
140:03 - paragraph so you can check what are the
140:05 - different colors when you are defining
140:07 - the green and the blue components as
140:09 - well along with the red components in
140:11 - the RGB format of the color now guys let
140:14 - us move to another task let us see how
140:16 - the Border colors can be mentioned and
140:18 - we will be using the hex value in this
140:21 - case so basically in order to provide
140:23 - the border for this paragraph what we
140:25 - will be doing is we will provide the
140:27 - border to this paragraph over here so
140:29 - inside the style we have to provide the
140:32 - Border attribute and it is having
140:34 - certain values the first value is the
140:37 - width of the border so let's say we
140:39 - provide the 2 pixels as the width of the
140:41 - border and then let's say we want the
140:43 - border to be solid you can also have the
140:46 - dotted Borders or the double Borders or
140:49 - the dashed borders as well but for now
140:51 - we will be having the solid bers and
140:53 - then after that we will be mentioning
140:55 - the color now guys how do we mention the
140:57 - hex color so let us check that so over
141:00 - here I have provided hex value of green
141:02 - color on Google so you can see that
141:05 - certain green color values are being
141:07 - displayed over here and you can find
141:09 - multiple websites that will provide you
141:11 - the shades of the different colors based
141:14 - on your requirements in the hex format
141:16 - so over here you can see the hex code
141:18 - and the corresponding RGB code as well
141:21 - so let's say I want to use this
141:23 - particular hex code the red component is
141:26 - zero the green component is 80 and the
141:29 - blue component is zero so let me just
141:31 - copy this and paste this over here so
141:34 - guys basically what is the meaning of
141:35 - this hex code so after this hash
141:38 - character the first two characters will
141:40 - be the red component zero means it is
141:43 - not having any percentage that means it
141:45 - is the 0% of the red color then 80 means
141:49 - to some extent we are having the green
141:51 - color over here the maximum can be 2 * F
141:54 - in this case so basically it ranges from
141:56 - 0 up to F if we see the characters and
141:59 - then over here the last two characters
142:01 - are the blue component again it is
142:04 - ranging from Zer up to F so guys if we
142:06 - provide all zero characters over here it
142:09 - will turn out to be a black color that's
142:11 - because we don't have any of the
142:12 - components of the red green and blue
142:14 - colors and if we provide 6 * F so over
142:18 - here we have 6 * F so all the components
142:21 - are being used over here with 100% of
142:24 - their contribution that is red green and
142:27 - blue and it will turn out to be a white
142:29 - color in this case we will change it
142:31 - back to green color now so let's say we
142:33 - provide 0 0 and then if we use the pure
142:36 - green component we have to provide two *
142:39 - F in between the third and the fourth
142:41 - character and then the last two
142:43 - characters will be 0 0 so it is red
142:46 - green and then blue so guys we have the
142:48 - green color right now as the Border
142:50 - color so let me just save this file now
142:52 - and try reloading this page you can see
142:54 - that the border of this paragraph now is
142:56 - having the two pixels width and it is
142:58 - green in color we can have the color
143:00 - little darker over here so again we will
143:03 - change it back to 80 in this case that
143:05 - we had copied so it will make the Border
143:08 - color as little darker so let me just
143:10 - save this file now and try reloading
143:12 - this page so as you can see we are
143:14 - seeing the dark green color of the
143:16 - border of the paragraph So Guys these
143:18 - are certain ways in order to use the
143:20 - color names or the RGB values or the hex
143:24 - values as well now guys apart from this
143:26 - you can also use the hsl value or the
143:28 - rgba value now a over here stands for
143:31 - Alpha which will Define the opacity of
143:34 - the color to some extent so guys I'll
143:36 - leave this up to you as a homework for
143:38 - you so that you can practice on your own
143:40 - the other color values as well links in
143:43 - HTML that are clickable using the a tag
143:46 - so guys basically links that are also
143:49 - called as hyperlinks in HTML allow users
143:52 - to click their way from one page to
143:55 - another page and basically these HTML
143:58 - links are also called as hyperlinks when
144:00 - we deal with HTML pages so guys
144:03 - basically you can click on a link and
144:05 - jump to another document or a web page
144:08 - and that is how the entire internet is
144:11 - being served to the users and when the
144:13 - users are reading the content of the web
144:15 - pages they have the links to the
144:17 - external websites or the internal web
144:19 - pages as well from where they can get
144:21 - more information so this is one of the
144:23 - useful element when you are going to
144:26 - develop your own web pages you should
144:28 - have the links to the other Pages as
144:30 - well if you want to refer to certain
144:32 - other source in your existing or a new
144:35 - web page so when you move the mouse over
144:37 - a link the mouse Arrow will turn into a
144:40 - little hand so this we are going to
144:42 - check in the example as well and as you
144:44 - can see this is the syntax we have the
144:47 - less than symbol and then we have the a
144:49 - tag so guys basically the a tag is used
144:52 - in order to mention the link on a web
144:54 - page and then we have a very important
144:57 - attribute that is hre over here which
144:59 - will provide you the URL of the page to
145:03 - which the user should go to when the
145:05 - user clicks on this link over here so
145:08 - guys let us check this with the help of
145:10 - example now in the vs code so over here
145:12 - I have set the title as links in HTML
145:15 - and then let's say we have a simple
145:17 - paragraph using the P tag and then we
145:19 - will say this video is created by
145:25 - programming for beginners which is a
145:29 - YouTube channel which you should
145:30 - definitely subscribe if you have not
145:32 - done so so guys basically we are saying
145:35 - that this video is created by
145:37 - programming for beginners YouTube
145:38 - channel now guys let us say if the user
145:40 - wants to know that where is this
145:42 - programming for beginners YouTube
145:44 - channel how I can access this YouTube
145:46 - channel over here by just seeing this
145:49 - information so we can use the a tag and
145:52 - provide the link to this programming for
145:54 - beginners YouTube channel in this
145:56 - particular statement so guys before
145:57 - doing that let me just save this file
145:59 - now and show you how it looks on the
146:01 - browser so basically right now it is a
146:04 - very simple text and it is in the form
146:06 - of the paragraph and we don't have any
146:08 - link right now where the user can click
146:10 - on this programming for beginners text
146:13 - now guys what we will do is I have
146:15 - already provided the link over here to
146:17 - the YouTube channel and this is the link
146:19 - so I'm going to copy this and what we
146:22 - are going to do is we will be enclosing
146:24 - this programming for beginners in
146:27 - between the starting and the ending a
146:29 - tag so over here we will have the less
146:32 - than symbol and then we will use the a
146:34 - tag over here and then we will close
146:36 - this tag with the greater than symbol
146:38 - and then guys we will also have the
146:40 - ending tag over here after The
146:43 - Beginner's word in this case so we have
146:45 - enclosed the programming for beginners
146:47 - in between the a tag so let me just just
146:50 - save this file now and try reloading
146:52 - this page once again for you on the
146:54 - browser so nothing has happened that's
146:56 - because we have not provided the HF
146:59 - attribute for now to which the user
147:01 - should be redirected to when we click on
147:04 - this programming for beginners text so
147:06 - guys let us do that quickly so over here
147:08 - in the starting a tag we have the space
147:11 - character and then we have something
147:12 - called as hrf attribute as you can see
147:15 - it contains a URL or a URL fragment that
147:19 - the hyperlink point to so guys this is
147:21 - the location where we have to provide
147:23 - the URL where the user will be
147:26 - redirected to so over here I'll copy the
147:29 - link of this YouTube channel that user
147:31 - should go to so I'll just copy this and
147:34 - paste it inside the double codes so guys
147:36 - always remember that this is the
147:38 - attribute that is hre and then we have
147:41 - the equal to symbol and then after that
147:43 - since we are specifying the string value
147:46 - we have to provide it in between the
147:48 - double codes over here so let let me
147:50 - just paste this link in this case and
147:52 - now we are having the programming for
147:55 - beginners in between the a that is the
147:57 - anchor tag which is having this
148:00 - particular link so guys let me just save
148:02 - this file now and try reloading this
148:04 - page as you can see the programming for
148:06 - beginers text is now being converted to
148:08 - a link and it is being displayed with
148:10 - the blue color which is the default
148:12 - color for the links on the modern
148:14 - browser and then guys when we hover over
148:16 - this link so if you notice the cursor is
148:19 - changed to the hand tool over here so
148:22 - basically it is automatically converted
148:24 - to the hand tool so that user comes to
148:26 - know that this is the link so guys now
148:29 - our aim is achieved so basically
148:31 - whichever user accesses your web page
148:34 - and sees that this video is created by
148:36 - programming for beginners YouTube
148:38 - channel and if he or she wants to know
148:41 - where is this programming for beginners
148:43 - YouTube channel and where they can find
148:45 - it so they can simply come over here to
148:47 - this link and click on this link so what
148:49 - happens when we click on this link so
148:51 - let me just show you that so when I
148:53 - click on this link as you can see the
148:55 - link that we have provided in the HF
148:58 - attribute the user is redirected to that
149:01 - particular link over here and you can
149:03 - see that this is the YouTube channel
149:05 - that I have created for you so that you
149:08 - can learn the various tutorials with the
149:10 - help of the examples and programs so
149:12 - guys this is the way that we can link a
149:14 - particular web page to your existing or
149:17 - the new web page now guys the browsers
149:20 - maintain the history as well so you can
149:22 - simply go back over here you can see the
149:24 - back button on the browser so when you
149:26 - click on this back button you can go
149:28 - back to the original page where you have
149:30 - clicked the link so let me just click
149:32 - over here to the back button so now you
149:34 - can see we have come to the main page
149:36 - over here you can again go forward by
149:38 - using the forward button over here but
149:41 - guys this is the main functionality of
149:42 - the anchor tag that is the a tag in
149:45 - order to provide the links inside the
149:47 - web pages which will refer to other web
149:50 - pages on the internet now guys there are
149:52 - certain other attributes as well to this
149:54 - link so basically the target attribute
149:57 - can be used to tell browser to open page
150:00 - in same or different tab so guys if you
150:03 - must have noticed by default when we
150:05 - click on this link the URL that we have
150:08 - defined in the hre over here it was
150:10 - opened in the same tab over here on the
150:13 - browser now how do we make this link
150:15 - open in the new browser so I'll show you
150:18 - that once again when I click on this
150:20 - link it opens this particular link that
150:22 - we have provided in the hre in the same
150:25 - Tab and we cannot see the original page
150:28 - on the different tab over here so how we
150:30 - can open it in a different tab so when
150:32 - the user clicks on this link the link
150:35 - present in the HF must open in the new
150:37 - tab over here so we can achieve that
150:39 - simply by using the target attribute so
150:42 - over here inside the a tag after HF
150:45 - attribute we can simply provide the
150:47 - target attribute it's spe specifies
150:50 - where to display the linked URL so when
150:52 - we use this it has certain values over
150:55 - here and we are going to use this value
150:58 - that is underscore blank so guys when we
151:00 - use this underscore blank it will tell
151:02 - the browser to open this particular Link
151:05 - in the new tab so let me just show you
151:08 - that so we'll save this file now and try
151:10 - reloading this page once again so that
151:12 - the new changes are implemented over
151:14 - here and now when we click on this link
151:17 - let me just click over here so as you
151:19 - can see it has opened a new tab over
151:21 - here and we can also go back to the
151:23 - source page over here which is on the
151:25 - left hand side so there are two tabs
151:28 - right now on the same browser and this
151:30 - is how we can make the links to open in
151:32 - the new tab over here so you can easily
151:34 - use the target attribute in order to
151:37 - mention where the link needs to be
151:39 - opened now guys you can also use the
151:41 - image as the link using the IMG tag so
151:44 - we are going to learn more about the IMG
151:47 - tag in the upcoming video as well but
151:49 - instead of having the text over here
151:51 - that is programming for beginners we can
151:53 - have the image as well now how we can do
151:55 - that so I'll just remove this text over
151:57 - here so I'll just save this file now and
151:59 - try reloading this page to see what
152:01 - happens so we don't have any text but
152:04 - instead of this text let's say we want
152:06 - to provide certain image over here so
152:09 - I'll quickly provide the IMG tag over
152:11 - here which will help us in order to
152:13 - provide the image on the web page so
152:16 - guys this IMG tag it doesn't have the
152:19 - end tag over over here so only the
152:21 - starting tag and then at the end we can
152:23 - provide the forward slash in this case
152:25 - in order to end that tag over there and
152:28 - then we have a very important attribute
152:31 - that is SRC attribute which is the image
152:34 - URL so we need to provide the URL of the
152:37 - image that we want to use so guys over
152:39 - here we will be using the SRC attribute
152:42 - followed by equal to and then we have
152:44 - the double codes over here now guys I
152:46 - already have certain images in this case
152:49 - which I use as is the thumbnails for the
152:51 - videos that I create for you so let's
152:53 - say I want to use this particular image
152:56 - so we need to provide the entire
152:58 - directory path for this particular image
153:01 - so I have copied the location and we
153:02 - will paste it inside the SRC attribute
153:05 - as the value so guys after providing
153:07 - this value we again have the slash
153:10 - character and then we need to provide
153:12 - the name of this file so it is the name
153:15 - of this image over here so we provide
153:17 - the name of this image so guys let let
153:19 - me just save this file now and try
153:21 - reloading this page for you so as you
153:23 - can see certain image is being displayed
153:25 - but it is not being displayed properly
153:27 - that's because we have not provided the
153:29 - extension of this image so guys the
153:31 - extension of this image is PNG so as you
153:34 - can see it is a DOT PNG format that we
153:37 - are using so over here after this name
153:40 - of the file we will provide PNG in this
153:42 - case so let me just save this file now
153:44 - and try reloading this page once again
153:47 - so guys you can see certain image is
153:49 - being displayed over here but the size
153:51 - of the image is very large so we can
153:53 - also mention the size of this image over
153:55 - here so after providing the SRC
153:57 - attribute we will provide the width so
154:00 - let's say I provide 40 pixels as the
154:02 - width and also we need to provide the
154:05 - height in this case so let's say I
154:07 - provide 30 pixels as the height so let
154:09 - me just save this file now and try
154:11 - reloading this page so as you can see
154:13 - this image is being displayed right now
154:15 - so this is the example where we are
154:17 - having the image as the link so when we
154:19 - come over here this video is created by
154:22 - and then we have certain image now guys
154:24 - it is not making any sense right now
154:26 - since programming for beginers text
154:28 - would be ideal to be displayed but over
154:30 - here I'm just showing you the example of
154:33 - how we can provide the image as the link
154:36 - so simply by coming over here you can
154:38 - see on this image the cursor is changing
154:41 - to a hand tool in this case and when we
154:44 - come over here and click on this link so
154:46 - in the new tab the link that we had
154:49 - provided to the programming for
154:50 - beginners YouTube channel is being
154:52 - opened right now so guys in this way you
154:54 - can provide the image as well as the
154:57 - Link and Link it to another web page as
155:00 - well now guys you can also link to an
155:02 - email address in the HF attribute so
155:05 - instead of opening another web page when
155:07 - you give this particular link this email
155:09 - address will be opened by using the
155:12 - email application it can be Gmail or the
155:15 - Outlook mail as well so using that the
155:17 - email address will be given in the two
155:19 - address when you provide that particular
155:21 - email address in the hrf attribute of
155:24 - the anchor tag so guys this exercise
155:26 - I'll leave up to you as a homework for
155:28 - you so that you can practice on your own
155:30 - another important attribute is the title
155:32 - attribute which can be used to show
155:35 - additional information about the link so
155:37 - guys let us check this with the help of
155:39 - example once again so what we will do is
155:41 - instead of showing this image we will
155:43 - give the text information once again
155:45 - over here so instead of this IMG tag we
155:48 - will say programming for beginners text
155:51 - so we have programming for beginners
155:53 - text let me just save this file now and
155:55 - try reloading this page so instead of
155:58 - the image now we have the text once
156:00 - again which is a link right now that
156:02 - will open the web page in another tab
156:04 - now guys let's say we want to provide
156:06 - certain information so when the user
156:08 - hover over this particular link the user
156:11 - should get the information so what we
156:13 - can do is we can provide the title
156:15 - attribute as well so after this target
156:17 - attribute as you can see this title
156:20 - attribute it contains a text
156:22 - representing advisory information
156:24 - related to the element it belongs to so
156:27 - let us use this and then we will say
156:29 - YouTube channel so we are simply
156:31 - providing this information that is
156:32 - YouTube channel over here so guys let me
156:34 - just save this file now and try
156:36 - reloading this page once again so now
156:39 - when the user hover over this particular
156:41 - link you can see YouTube channel is
156:43 - being displayed which is the additional
156:45 - information for the user so that user
156:48 - comes to know that yes this is the name
156:50 - of the YouTube channel and user can then
156:52 - choose whether to click on this or not
156:54 - so guys in this way we can easily use
156:56 - the anchor tag that is the a tag in
156:58 - order to implement the links or
157:01 - hyperlinks in HTML displaying images in
157:04 - HTML using the IMG tag so guys basically
157:08 - the HTML IMG tag is used to embed an
157:12 - image in a web page so we can easily
157:15 - embed the images in our web pages based
157:18 - on our requirements now guys images are
157:20 - not technically inserted into a web page
157:23 - whereas images are simply linked to the
157:26 - web pages so how we can link the images
157:29 - to the web pages we will see that but
157:31 - technically we don't actually insert the
157:33 - image over here on the web page but
157:36 - those images are linked and they are
157:38 - present or they are stored in some
157:40 - another location and we just provide the
157:43 - link to that path where they are stored
157:45 - now guys the IMG tag creates a holding
157:48 - space for the referenced image and that
157:50 - is how the images are displayed now the
157:53 - IMG tag is empty it contains attributes
157:56 - only and does not have a closing tag so
157:59 - basically we are not going to have any
158:01 - content in between the starting and the
158:04 - ending tag and it is going to be a
158:06 - single tag that is the IMG tag along
158:09 - with the forward slash and this forward
158:11 - slash will be optional and there will be
158:13 - no specifically closing tag for this
158:16 - particular IMG tag over here now guys
158:18 - the IMG tag has two required attributes
158:21 - one is the SRC which specifies the path
158:24 - of the image so as I've told you we need
158:26 - to provide the location or the path of
158:29 - the image where the image is stored and
158:31 - then we also have the alt attribute
158:33 - which specifies an alternate text for
158:36 - the image so guys we will check both of
158:38 - these with the help of examples now in
158:40 - the vs code so let's say over here we
158:42 - have a normal paragraph So using the P
158:44 - tag we will say there is an image after
158:47 - this paragraph So guys we have Prov
158:49 - provided a very simple statement inside
158:51 - the paragraph there is an image after
158:53 - this paragraph and then guys we can
158:55 - simply provide the IMG tag in order to
158:58 - display the image so let's say we have
159:00 - the less than symbol and then we use the
159:03 - IMG tag over here you can see an IMG
159:06 - element represents an image so this is
159:09 - the description that is provided by the
159:11 - vs code and then we can close the tag so
159:14 - over here we don't have the specific
159:16 - closing tag we can provide the for/ at
159:19 - the end before the greater than symbol
159:21 - and this is optional in order to mark
159:24 - that this tag is closed for now and then
159:26 - guys what we can do is it doesn't have
159:28 - any content in between the starting and
159:30 - the ending tag so we can only Define the
159:33 - attributes now how do we provide the
159:36 - link to the image so let's say we have
159:38 - certain images over here and we want to
159:40 - display this particular image so these
159:43 - are the thumbnails of the videos that I
159:44 - have created for you on my YouTube
159:46 - channel that is programming for
159:48 - beginners which you should should
159:49 - definitely subscribe if you have not
159:51 - done so so over here we have this image
159:54 - so we will check what is the entire path
159:56 - over here so as you can see we have this
159:58 - entire path over here so I'll just copy
160:01 - this entire path and inside the VSS code
160:04 - we need to use the SRC attribute so guys
160:07 - over here when we type SRC you can see
160:10 - that this is the image URL this
160:12 - attribute is mandatory for the IMG
160:14 - element because we Define like where is
160:17 - this image coming from in the SRC
160:20 - attribute so over here we are going to
160:22 - use this SRC attribute followed by equal
160:24 - to character and then we have the double
160:26 - codes now guys inside the double codes
160:28 - we are going to provide the entire
160:30 - directory path where the image is
160:32 - present so over here we have pasted the
160:34 - directory path and then after this we
160:37 - again have a back slash character and
160:39 - then guys we need to provide the name of
160:41 - the file as well so as you can see this
160:43 - is the name of the file so I'll just
160:45 - copy this and paste it over here so we
160:48 - have pasted this and guys another
160:50 - important thing is after the name of the
160:52 - file we need to provide the extension of
160:55 - the file as well so some extensions can
160:57 - be PNG and then others can be jpg or any
161:00 - other format that you are using for that
161:03 - particular image so in this case it is a
161:05 - PNG file so we are going to provide a
161:07 - PNG in the end after the name of the
161:10 - file over here that is the image so guys
161:13 - this is the source attribute that we
161:15 - have defined now let me just save this
161:17 - file now and try reloading this page
161:19 - once again on the browser so as you can
161:21 - see we are getting there is an image
161:23 - after this paragraph and this image it
161:25 - seems to be very large that's because
161:27 - increased the zoom factor of this
161:29 - browser what if I get the zoom factor to
161:32 - 100% so guys this is the way that the
161:34 - image is being displayed over here but
161:36 - I'll change this Zoom to 150% so that
161:39 - you can clearly see what are the
161:41 - contents of this web page now guys we
161:43 - want to display this image little bit
161:45 - smaller so that it looks decent over
161:47 - here so what we will do is we can also
161:50 - use the width and height attributes of
161:52 - this image so we can get the cursor on
161:55 - the other line and then we can again
161:57 - have the width attribute so guys inside
161:59 - the width attribute we can say display
162:02 - only 40% of this image so we will say
162:05 - 40% of width and let's say height we
162:08 - want to display only
162:10 - 25% so guys after providing the width
162:12 - and height attributes as well let me
162:15 - just save this file now and try
162:16 - reloading this page so as you can see
162:19 - now we can properly see the image that
162:21 - is being displayed over here on the web
162:23 - page so basically it is taking only the
162:25 - 40% of the entire width of the screen
162:28 - and height is being taken as the 25% of
162:31 - the height of the screen and that is how
162:33 - it is being displayed over here if we
162:36 - change the width to 50% so basically the
162:39 - image will take the 50% width of the
162:42 - entire screen so let me just save this
162:45 - file now and try reloading this page as
162:47 - you can see the right hand side side of
162:49 - the image is coming at the exact middle
162:52 - of this screen right now and guys that
162:54 - is how we can mention the width and
162:55 - height of the image we can also use
162:57 - pixels as well so let's say we provide
163:00 - 100 pixels for the width and then for
163:02 - height let's say we provide 70 pixels in
163:05 - this case so we provide 70 PX note that
163:08 - there is no space character after these
163:10 - numbers and in between the PX keyword so
163:13 - let me just save this file now and try
163:15 - reloading this page as you can see the
163:17 - image is being adjusted now based on the
163:20 - numbers of the width and height that we
163:22 - have specified guys we will change it
163:24 - back to the 40% and 25% over here since
163:27 - that was looking more decent so after
163:29 - changing let me just save this file now
163:31 - and try reloading this page so as you
163:33 - can see the image is being displayed
163:35 - properly now now guys there is another
163:37 - important attribute that is the alt
163:39 - attribute that you must specify now it
163:41 - specifies the alternate text for the
163:44 - image in some cases what happens is
163:46 - let's say if the image is not present in
163:49 - this particular directory that you have
163:50 - mentioned or if you are using the URL
163:53 - then let's say if the URL is down for
163:55 - some time then that particular image
163:57 - will not be displayed properly on the
164:00 - web page now how it will be displayed
164:02 - let me just show you so what if we just
164:04 - remove the extension of this file that
164:06 - is PNG we have removed and let us see
164:09 - how the image will be displayed on the
164:12 - web page now so let me just save this
164:14 - file now and try reloading this page so
164:16 - as you can see the image is not being
164:18 - displayed right now now so guys when
164:20 - this particular thing happens it becomes
164:22 - very important that we have the alt
164:24 - attribute so that some kind of text is
164:26 - being displayed when this condition
164:29 - occurs so we can come to vs code and
164:31 - then over here after the height
164:33 - attribute we can provide the alt
164:35 - attribute as well as you can see this
164:37 - attribute defines an alternative text
164:40 - description of the image so we will use
164:42 - this alt attribute and over here we will
164:45 - say image displayed for test purpose so
164:50 - guys over here we are simply providing a
164:52 - text message that is image displayed for
164:55 - test purpose you can have any other
164:57 - string based on your requirements when
164:59 - such conditions occur now let me just
165:01 - save this file now and try reloading
165:03 - this page to see what happens so as you
165:05 - can see even though image is not being
165:08 - displayed but it is saying image
165:10 - displayed for test purpose you can
165:12 - provide any other exception message or
165:14 - the error message that you want based on
165:16 - your requirements and that is how it is
165:18 - going to work by providing the alt
165:20 - attribute for the image tag it is going
165:22 - to provide certain text message in case
165:25 - there is some issue to display the image
165:28 - over here now guys let me just provide
165:30 - the extension over here once again so we
165:32 - will provide PNG and see how it appears
165:35 - along with the alt attribute content
165:38 - over here so let me just save this file
165:40 - now and try reloading this page once
165:42 - again so as you can see since now the
165:44 - image is being displayed there is no alt
165:47 - attribute content or the message that is
165:49 - being displayed right now but guys
165:51 - behind the scenes it will be present so
165:53 - let me just right click over here and
165:55 - use the inspect option in this case so
165:57 - it will open the elements tab over here
166:00 - so if you see there is a alt attribute
166:02 - that is image displayed for test purpose
166:05 - so basically you can see the source code
166:07 - over here for whatever HTML code that is
166:10 - written behind the scenes in order to
166:12 - display this particular web page so Guys
166:14 - these are certain attributes that you
166:16 - can use that is SRC attribute and and
166:19 - then we have the alt attribute as well
166:21 - along with this we have also seen how to
166:23 - mention the width and the height of the
166:25 - images that you want to display now we
166:27 - will see how we can display the
166:29 - background images in HTML with the help
166:32 - of examples so guys a background image
166:35 - can be specified for almost any HTML
166:37 - element in this video we are going to
166:40 - see how we can display the background
166:42 - image for the body tag that is for the
166:44 - entire page the background image will be
166:47 - displayed now to add the background
166:49 - image on an HTML element we can use the
166:52 - HTML style attribute and the CSS
166:55 - property that is the background image
166:57 - property so guys let us check this with
166:59 - the help of example now in the VSS code
167:02 - so previously we had seen how we can use
167:04 - the IMG tag in order to display a simple
167:07 - image on the HTML page as you can see
167:10 - this was the image that we had displayed
167:12 - so we will remove these lines of code
167:14 - over here for now and then what we will
167:16 - do is we will change the title to
167:18 - background image so we have background
167:21 - image in HTML and guys simply what we
167:24 - can do is in this body tag we can have
167:26 - the style attribute over here so we say
167:29 - style and then inside the style
167:31 - attribute we have the property that is
167:33 - the background image so we type
167:35 - background image over here as you can
167:37 - see vs code is resting us this
167:39 - background image property it sets the
167:41 - background image of an element so guys
167:44 - basically we are setting this background
167:46 - image for the body tag we can also set
167:48 - set it for the paragraph tag or the div
167:51 - tag or any other tag based on your
167:53 - requirements now guys after this
167:55 - property we have a colon over here and
167:57 - then we have something called as URL so
167:59 - guys this is used in order to refer an
168:02 - image file by a URL so we are going to
168:05 - use this URL as a prefix and inside the
168:08 - open and close parenthesis we are going
168:10 - to have the single codes over here and
168:13 - inside the single codes we are going to
168:15 - provide the name of the image file which
168:17 - is going to be the background image so
168:19 - guys for Simplicity purpose I have taken
168:21 - a sample image over here as you can see
168:24 - in the same folder where we are having
168:25 - our HTML document over here so guys we
168:28 - are going to use the same sample image
168:30 - in our code as well so we are going to
168:33 - say sample image. PNG guys it is very
168:36 - important that you also provide the
168:38 - extension of the image file so that it
168:40 - is displayed properly over here now guys
168:42 - let me just save this file now and try
168:45 - reloading this page on the browser so as
168:47 - you can see we have the background image
168:49 - in HTML being displayed as the title of
168:52 - this page and guys this image is being
168:54 - set as the background image over here
168:56 - now if you notice that the image is very
168:58 - big as far as the screen size is
169:00 - concerned so guys we have certain
169:02 - properties over here the first property
169:04 - is background image which we have
169:06 - already used in order to set the
169:08 - background image the second property is
169:10 - background size over here which we can
169:12 - use in order to increase or decrease the
169:15 - size of the image that is being
169:17 - displayed as the background image so
169:19 - guys what we can do is inside the style
169:21 - attribute only after the semicolon we
169:23 - can have the background size over here
169:26 - so when we say background size in this
169:28 - case as you can see this is the property
169:30 - that we have to use so guys using this
169:32 - we can use any of the values in order to
169:35 - set the size of the image so when we say
169:37 - cover as the value for the background
169:39 - size over here the entire screen will be
169:42 - covered with the image that is being set
169:44 - by the background image so let us check
169:46 - that let me just save this file now and
169:48 - and try reloading this page once again
169:50 - so as you can see the width and the
169:52 - height of this particular image is set
169:55 - to the entire body of this HTML page
169:58 - over here now guys we can change the
170:00 - size to the 50% as well so that it only
170:03 - takes the 50% width of this screen so
170:06 - let me just change that value from cover
170:08 - to 50% over here so guys we can give the
170:11 - values in percentages as well so let me
170:13 - just save this file now and try
170:15 - reloading this page so as you can see
170:17 - only 50% of the image is being taken
170:20 - over here and being displayed as the
170:22 - background image now guys by default
170:24 - what happens is if the image size is
170:26 - smaller than the HTML element then the
170:29 - image will be repeated and that is what
170:31 - we can see over here that this is the
170:33 - first image and then on the right we
170:35 - have the image once again repeating and
170:38 - then below as well the images are being
170:40 - repeated over here so guys that brings
170:42 - us to the third property that is
170:44 - background repeat which can help us in
170:46 - order to avoid the repeat repeating of
170:49 - the background images so let me just go
170:51 - to the code over here once again now
170:53 - guys when we use the background repeat
170:54 - over here the attributes might go out of
170:57 - the screen so what we can do is simply
170:59 - we can Define the style in the head
171:01 - section as well so instead of defining
171:03 - the style in the body tag we will come
171:06 - over here after the title and then we
171:08 - will say style tag over here and then
171:11 - guys for this body tag we are going to
171:13 - Define all these attributes once again
171:15 - so over here we need to provide body so
171:18 - this is the internal CSS that we are
171:20 - going to see till now we have seen the
171:22 - inline CSS wherein the attributes were
171:25 - defined inside the starting tags but
171:28 - over here when we Define the style tag
171:30 - inside the head tag we call it as the
171:33 - internal CSS so guys over here we need
171:36 - to provide the tag to which we need to
171:39 - provide certain styling and then after
171:41 - that tag we need to have the attributes
171:43 - inside the open and close curly braces
171:46 - as you can see we have provided body
171:48 - that is the tag name and then we are
171:50 - going to provide these attributes along
171:52 - with their values so I'm going to Simply
171:54 - cut this and paste this over here that
171:56 - is the background image and then again
171:59 - we will also have the background size as
172:01 - well I'll just remove this and paste
172:03 - this over here so guys this is looking
172:05 - more decent compared to the inline CSS
172:08 - that we were defining inside the body
172:10 - start tag over here so guys let me just
172:12 - save this file now and try reloading
172:14 - this page once again on the browser to
172:16 - see if there are no more changes so as
172:18 - you can see there is no change over here
172:20 - after defining the internal CSS and in
172:23 - this way we can easily Define the
172:25 - internal CSS that is inside the head tag
172:28 - over here we can Define the style tag
172:31 - and for this tag name inside the open
172:33 - and close curly braces we can have the
172:35 - different attributes of The Styling that
172:37 - we want to Define now guys we will check
172:39 - the third attribute that is background
172:41 - repeat in order to avoid the repetion of
172:44 - these background images so over here we
172:46 - need to define the background rep repeat
172:48 - in this case so as you can see this is
172:50 - the property that is background repeat
172:53 - and then we will say no repeat in this
172:55 - case you can see this is the value that
172:57 - we have to use that is no repeat so when
172:59 - we set the value as no repeat the
173:01 - repetion will be avoided so let me just
173:04 - save this file now and try reloading
173:06 - this page once again on the browser so
173:08 - as you can see only one image is being
173:10 - displayed now and there is no repetion
173:13 - even though when the size of this
173:14 - particular image is smaller than the
173:16 - size of the entire body tag over here on
173:19 - the HTML page now guys let us move to
173:21 - another property over here we have
173:23 - something called as background
173:25 - attachment as well so guys this we can
173:27 - use along with the background size so
173:29 - when the background size of the image is
173:32 - set as cover so let us change that so
173:34 - over here we can change it to cover in
173:37 - this case and then we can use the
173:39 - background attachment property so in
173:41 - this case we can use the background
173:43 - attachment property and make it as fixed
173:45 - so that the image is fixed over here
173:47 - even if you you are scrolling the
173:49 - content of the page in this case so guys
173:52 - let me just save this file now and try
173:53 - reloading this page once again so as you
173:56 - can see the image is covering the entire
173:58 - body of the HTML page and whenever you
174:01 - are going to scroll the content on this
174:03 - particular page the image will be fixed
174:05 - over here and it will not scroll and if
174:07 - you want the image to be scrolled then
174:10 - we can use the scroll value in this case
174:12 - for the background attachment so guys
174:15 - this is the meaning of the background
174:16 - attachment over here so quickly let us
174:18 - see the example of how this fixed and
174:21 - scroll values for the background
174:22 - attachment will work what we will do is
174:25 - we will have the simple paragraphs over
174:27 - here so we are defining the P tag and
174:29 - then we will say this is a paragraph So
174:33 - guys we are saying this is a paragraph
174:35 - and let us say we want to increase the
174:37 - size of this paragraph so we will have
174:39 - another P tag over here inside the style
174:42 - tag and then we will have the open and
174:44 - close curly braces and we will say font
174:47 - size in this case so font size we will
174:49 - say 30 pixels and then let's say I want
174:52 - to define the background color as well
174:55 - so we will say background color and
174:57 - let's say we have the color that is red
174:59 - in this case let me just save this file
175:01 - now and try reloading this page once
175:03 - again so as you can see we have this is
175:05 - a paragraph over here being displayed
175:07 - along with the red background color if
175:09 - you can notice now guys similarly what
175:11 - we will do is we will simply copy and
175:14 - paste this line of code multiple number
175:16 - of times so that the page is scrollable
175:18 - over here so we have this many number of
175:21 - paragraphs in this case on this HTML
175:23 - page let me just save this file now and
175:25 - try reloading this page once again so as
175:27 - you can see we have more paragraphs and
175:29 - when we scroll you can see that the
175:31 - image is also getting scrolled over here
175:33 - so guys behind the scenes we also have
175:35 - the image in this case so what happens
175:37 - when we change the value from scroll to
175:40 - fixed over here currently we have the
175:42 - value of background attachment as scroll
175:44 - and when we change it to fixed let us
175:46 - see what happens let me just save this
175:48 - file now and try reloading this page as
175:50 - you can see the image is being fixed as
175:53 - the background image and now when we
175:55 - scroll only the content that the
175:57 - paragraphs are getting scrolled over
175:59 - here and the image is fixed in this case
176:01 - so guys if you want to keep the
176:03 - background images fixed over here like
176:05 - how we have done right now so you can
176:07 - change the background attachment
176:09 - property to fixed in this case and you
176:12 - can change it to scroll as well if you
176:13 - want the background image to scroll when
176:16 - the user Scrolls to check the content of
176:18 - the HTML page so guys this is the way
176:20 - that we can set the background image for
176:22 - the HTML page and along with that we
176:25 - have certain attributes as well that we
176:27 - have seen so now we will see how we can
176:30 - display favicon in HTML on the browser
176:33 - tab so guys basically a favicon is a
176:35 - small image that is displayed next to
176:38 - the page title in the browser tab so if
176:41 - I show you over here on the browser tab
176:44 - as you can see this title that is
176:46 - favicon in HTML before that on the left
176:49 - hand side we have a icon which is a
176:52 - globe by default over here when there is
176:54 - no favicon that is provided to the HTML
176:56 - page so guys we are going to see how we
176:58 - can provide the favicon so that an
177:01 - appropriate image can be displayed over
177:03 - here besides the title of the page so
177:05 - basically a favicon is a small image
177:08 - that is displayed next to the page title
177:10 - now guys we can easily add favicon in
177:12 - HTML using the link tag which we have to
177:15 - specify under the head tag over here so
177:18 - when we come to the vs code in this case
177:21 - what we have to do is under the head tag
177:23 - after the title we can have the link tag
177:26 - over here so when we have the link tag
177:28 - you can see that by default we are
177:30 - having the value of the Rial attribute
177:33 - as a stylesheet over here we need to
177:35 - change it to icon in this case so we
177:38 - type icon over here and then for the
177:40 - href attribute we need to provide the
177:43 - path of the small image which we want to
177:46 - set it as a favicon for that particular
177:49 - HTML page so guys I have a small image
177:51 - over here that is the favicon image in
177:53 - the jpg format let me just open this
177:56 - image for you so this is the image that
177:58 - we are going to set which is also set as
178:00 - the profile picture for this YouTube
178:02 - channel that is programming for bers
178:04 - which you should definitely subscribe if
178:06 - you have not done so so guys basically
178:08 - we are going to set this image as the
178:10 - favicon for this particular HTML page so
178:13 - we simply come over here on the VSS code
178:16 - and then we give the name of this
178:18 - favicon image that is favicon do jpg so
178:21 - in this case we say favicon jpg as you
178:25 - can see vs code is suggesting us this
178:27 - particular file name that's because we
178:29 - have provided it inside the path where
178:32 - this particular HTML page is present so
178:34 - guys let me just save this file now and
178:36 - try reloading this page once again over
178:38 - here so when we click on reload you can
178:41 - see that this image has been changed to
178:43 - the image that I have just showed you
178:46 - and this is the small image that is
178:47 - being displayed right now over here so
178:49 - basically it is the favicon image that
178:51 - is being displayed besides the title of
178:54 - this page that is favicon in HTML and
178:57 - guys now we can change the content of
178:59 - this page we can now say that this HTML
179:01 - page is having a favicon over here so
179:04 - basically we have set the favicon for
179:06 - this particular page and guys this
179:08 - favicon image must be present on all the
179:11 - pages that are present on your web
179:13 - servers and whichever page opens with
179:15 - your particular domain it will be
179:18 - present by default over here when the
179:20 - title of this page will be displayed to
179:22 - the user guys it basically shows the
179:24 - identity of your website so that users
179:26 - come to know that this is the website
179:28 - that they are referring to which they
179:30 - have been using more frequently so now
179:32 - we will see how we can display tables in
179:35 - HTML with the help of examples so guys
179:37 - HTML tables allow web developers to
179:40 - arrange data into rows and columns and
179:43 - we are going to check this with the help
179:45 - of examples as well in the VSS code so
179:48 - so guys it is very important for you to
179:50 - understand what are the different tags
179:52 - that you can use in order to display
179:54 - your tables in the form of rows and
179:57 - columns so basically we have the very
179:59 - first tag that is the main tag which is
180:01 - called as table over here so again we
180:04 - have the less than symbol and then we
180:06 - have the table keyword and then greater
180:08 - than symbol and this is the start tag we
180:10 - also have the corresponding and tag for
180:13 - this table inside which all the content
180:15 - of the table will be defined and and
180:18 - then guys inside the table first of all
180:20 - we are going to define the rows which
180:22 - can be defined using the TR tag over
180:25 - here so TR stands for table Row in this
180:28 - case and it defines a horizontal row in
180:31 - a table and then next we have the table
180:34 - header so in case your requirement is to
180:36 - display the headers in the table you can
180:39 - use the th tag which stands for table
180:42 - header over here which defines the
180:44 - header for the table in this case and
180:47 - then guys we also have something called
180:49 - as TD which refers to the table data
180:52 - over here so TD tag helps us to define
180:55 - the content or data in one cell of a
180:58 - table so guys when we talk about HTML
181:00 - table over here it is similar to
181:02 - Microsoft Excel so if you have used Ms
181:05 - xcl anytime you must have noticed that
181:08 - we have multiple cells over here in
181:10 - Excel and this can be treated as one
181:12 - table over here so we can have the
181:14 - header in this case so let's say we have
181:17 - the number over here as the header and
181:19 - their string representation so guys this
181:22 - is nothing but these are the headers
181:23 - that are defining what will be the
181:25 - content of these particular columns over
181:28 - here so we can have them in the Bold
181:30 - formatting so we apply the Bold
181:32 - formatting over here and we can make
181:34 - them display at the middle of the cells
181:37 - and then guys what we can have is we can
181:39 - have the numbers over here so we have 1
181:41 - 2 3 4 5 and the string representations
181:45 - say 1 2
181:48 - 3 4 and then we have five so guys this
181:52 - is nothing but this is a table over here
181:54 - and this is what we are going to see in
181:56 - the HTML as well we are going to Define
181:58 - this as a table and these are the rows
182:01 - so as you can see this is one row over
182:03 - here then this is second row then this
182:05 - is third row and so on these are the
182:08 - rows and these are the columns so guys
182:10 - this row is being defined by the TR tag
182:13 - and the data inside each cell is being
182:16 - defined by the T CD tag over here which
182:19 - stands for the table data and guys this
182:21 - header is being defined by the th tag
182:24 - which is the table header over here and
182:26 - outside all these tags we also have the
182:28 - main tag that is the table tag in order
182:31 - to define the entire table so guys with
182:33 - this knowledge let us move to the vs
182:35 - code now over here in order to create
182:37 - the table so first of all we will have a
182:40 - simple paragraph and then we will say
182:42 - below content is defined in a table so
182:45 - guys we have a very simple paragraph
182:47 - that is this below content is defined in
182:49 - a table and now on the next line we are
182:52 - going to define the table over here so
182:54 - when we type table as you can see VSS
182:56 - code is suggesting us this particular
182:58 - tag and when we press enter you can see
183:01 - that we have the starting tag and the
183:03 - ending tag so guys this is the shorthand
183:05 - format we can simply type the name of
183:08 - the tag and press enter in order to get
183:10 - the starting and the ending tag in the
183:13 - HTML now in between the starting and the
183:15 - ending tag what we need to Define is
183:18 - first of all we are going to Define this
183:19 - row which is going to have the table
183:21 - header so guys over here we will have
183:24 - the TR tag so when we type TR over here
183:26 - and press enter as you can see TR
183:29 - starting and the ending tag is being
183:31 - displayed over here and then inside the
183:33 - TR tag we will have the th tag over here
183:36 - since these are the headers that we want
183:38 - to Define so we have the th tag and when
183:41 - we press enter as you can see the
183:43 - starting and the ending tags are being
183:45 - displayed now we can simply have number
183:48 - which is the text for this header tag
183:50 - over here and then guys we are going to
183:52 - have another tag so again we are going
183:54 - to type th and then we will say string
183:58 - representation so guys as you can see
184:00 - inside the table starting and the ending
184:02 - tag first of all we have one row so
184:05 - inside this row we are having the two
184:07 - headers that is numbers and string
184:09 - representation we can also have one
184:11 - header over here or two headers or any
184:14 - number of headers based on your
184:15 - requirements that you want to Define so
184:17 - guys over here we are only taking two
184:20 - columns in this case so based on your
184:22 - requirements you can either increase or
184:24 - decrease the number of rows and columns
184:26 - in the HTML table now guys let me just
184:29 - save this file now and try reloading
184:31 - this page to see how the table appears
184:33 - over here so when we reload this page as
184:35 - you can see we have the numbers header
184:38 - and the string representation as the
184:40 - header which is being displayed with the
184:42 - Bold formatting over here now guys let
184:44 - us Define certain data as we have seen
184:46 - over here how we have defined the data
184:48 - in the Excel similarly we will Define
184:51 - the data in the HTML as well so again we
184:54 - are going to have another row over here
184:56 - so guys basically this is the first row
184:58 - as you can see now we need to come on
185:00 - the next line that is after this first
185:02 - row we are going to define the second
185:05 - row over here and inside that as well we
185:07 - are going to have two columns with this
185:10 - particular data that is one and o1 so
185:13 - guys we come over here to the vs code we
185:15 - again say TR in this case and this time
185:18 - we will use TD that's because it is not
185:21 - the header that we want to Define now we
185:23 - want to define the data inside a
185:25 - particular cell of the table so guys we
185:28 - use the table data that is the TD tag in
185:31 - this case so we use TD over here and
185:33 - then we simply provide one that is the
185:36 - number one over here and what is the
185:37 - String representation it is o1 so again
185:41 - we Define another TD in this case and
185:43 - then we say one over here now let me
185:46 - just save this file now and try
185:48 - reloading this page once again on the
185:50 - browser so as you can see another row
185:52 - has been added inside the table and it
185:54 - says one and then one over here now guys
185:57 - similarly let us add remaining data that
185:59 - is 2 3 4 and five numbers in this case
186:02 - so let us move to the vs code simply I
186:05 - will copy this TR data which is having
186:08 - the row with the first number in this
186:10 - case so I'm copying this and we will
186:12 - paste it four times over here in order
186:14 - to cover the remaining numbers so guys
186:17 - over here we will change two and then
186:19 - string representation will be two and
186:22 - then over here we will have three and
186:24 - then again we have the three word and
186:26 - then we have four and then the string
186:28 - representation that is four and then
186:31 - over here we have five and then again we
186:34 - have the string representation that is
186:36 - five so guys basically we have defined
186:38 - multiple rows over here and inside each
186:41 - row we are having the table data that is
186:43 - the TD tag and inside the TD tag we are
186:46 - having the actual data that needs to be
186:48 - displayed inside the cells of the table
186:51 - now guys let me just save this file now
186:53 - and try reloading this page on the
186:54 - browser once again so as you can see all
186:57 - the data is being displayed now in the
186:59 - tabular format so guys you can see under
187:02 - the headers that is numbers over here
187:04 - all the numbers are getting displayed in
187:06 - the left aligned format and in the
187:08 - string representation as well all the
187:10 - string representations of the numbers
187:12 - are getting displayed in the left
187:14 - aligned format so guys this is the main
187:16 - purpose of using the table that is it
187:18 - allows the web developers to arrange the
187:21 - data into rows and columns guys we can
187:23 - also use the border for this table so
187:26 - that it actually looks like a table for
187:28 - you so what we can do is we come over
187:30 - here to the vs code and then inside the
187:32 - head tag we can simply provide the style
187:36 - tag over here and for this style tag we
187:38 - can say table in this case and let's say
187:41 - for this table tag we need to provide
187:42 - the border the Border will be of one
187:45 - pixel size and it will be of the solid
187:48 - type and then let's say we want to give
187:50 - the color as black in this case so guys
187:53 - this is one of the ways in order to
187:55 - define the Border along with the width
187:57 - of the Border then this is the Border
188:00 - style like what type of Border we want
188:02 - to display and then this is the color of
188:04 - the border so guys let me just save this
188:06 - file now and try reloading this page
188:08 - once again on the browser so as you can
188:10 - see we have got a border now to the
188:12 - table guys we can also have the border
188:14 - to this table data in the table as well
188:18 - over here so we can include the th and
188:20 - TD tags over here to the same styling in
188:23 - this case that's because we want the
188:25 - styling to be common so guys after table
188:27 - we can provide comma and then we can
188:29 - also provide th comma TD tags over here
188:33 - so guys this particular styling will be
188:35 - applied to all these Texs that we have
188:37 - defined over here in the HTML body so
188:40 - let me just save this file now and try
188:42 - reloading this page once again so as you
188:44 - can see it is being displayed Now using
188:46 - the borders over here here all the
188:48 - celles are having their own borders guys
188:50 - also we can align the text to the right
188:53 - in this case by default it is on left so
188:55 - what we can do is we can simply come
188:57 - over here and we say text align in this
188:59 - case so this is the property that can be
189:01 - used in order to align the text and we
189:04 - say write as the value so let me just
189:06 - save this file now and try reloading
189:08 - this page once again so as you can see
189:11 - the content of the entire table is being
189:13 - displayed on the right now so guys this
189:15 - is the very basic way in in order to
189:17 - display the table content inside the
189:19 - HTML so to summarize we need to have the
189:22 - main tag that is the table tag and then
189:25 - inside that individually we need to
189:27 - define the rows of the table the first
189:30 - row can be a header if you want to
189:32 - define the header and if you don't have
189:34 - any headers you can start with the TD
189:36 - tags as well the only difference between
189:38 - the TD that is the table data and the th
189:41 - that is the table header tag is that the
189:44 - content in the th tags will be displayed
189:46 - with the Bold formatting over here as
189:48 - you can see whereas the content with the
189:50 - TD tag will be displayed normally
189:52 - without the Bold formatting but you can
189:54 - apply the formatting based on your
189:56 - requirements to the TD tag as well using
189:59 - the internal or the external stylesheets
190:02 - guys apart from this you can also have
190:03 - the table cell that can contain all
190:06 - sorts of HTML elements that is it can
190:09 - have text which we have seen just now
190:10 - with the help of examples instead of
190:13 - text you can also have the images list
190:15 - links and other table as well so guys
190:18 - you can check out the images in the
190:20 - links as the content of the table data
190:23 - and this activity I'll leave up to you
190:25 - as a homework for you so now we will see
190:27 - table borders in HTML so guys the HTML
190:30 - tables can also have the borders of
190:33 - different styles and shapes and we are
190:35 - going to check this with the help of
190:36 - examples now in the vs code and we are
190:39 - going to see these CSS properties that
190:41 - is the Border property then we also have
190:44 - the Border collapse then background
190:46 - color then we have border radius style
190:49 - and then color so guys let us move to
190:50 - the vs code over here so previously we
190:53 - had defined an HTML table that is having
190:55 - the numbers and their string
190:57 - representation and this is how it looks
191:00 - right now over here so guys we had added
191:02 - the borders as well but without the
191:04 - borders how does it look let us remove
191:06 - the styling over here from the HTML code
191:09 - so when we remove the style from the
191:11 - HTML code let me just save this file now
191:14 - and try reloading this page so guys this
191:16 - is the very simple table that we had
191:18 - written previously without any borders
191:21 - and without any distinctions between the
191:22 - rows and the columns now guys let us add
191:25 - certain borders over here so what we can
191:27 - do is simply we have to come in the vs
191:30 - code so as you can see we have the table
191:32 - tag then we also have the TR tag th tag
191:35 - and TD tags so guys basically to these
191:38 - tags we are going to add the border so
191:40 - over here inside the head section we are
191:43 - going to define the style tag and over
191:45 - here we are going to apply B orders to
191:47 - the table tag and Then followed by comma
191:50 - we also have the th tag over here and
191:53 - then followed by comma we will also
191:55 - apply for the TD tag as well so guys
191:57 - whenever you are going to apply the
191:59 - common styling to multiple tags you can
192:02 - Define them on a single line separated
192:04 - by commas over here and inside the open
192:07 - and close curly braces we can have the
192:09 - styling that can be applied to the
192:11 - content of these tags over here so guys
192:14 - what we have to do is we are going to
192:15 - first Define the Border in this case and
192:18 - let's say we want to define the Border
192:20 - width as 1 PX and Then followed by the
192:22 - style that is the Border style it will
192:24 - be solid and Then followed by the color
192:27 - that is let's say we want the color of
192:29 - the border to be black over here so let
192:31 - me just save this file now and try
192:33 - reloading this page once again on the
192:35 - browser so as you can see all the cells
192:38 - that is the headers and then we also
192:40 - have the table data and then we also
192:42 - have the main table that is having the
192:44 - borders over here now guys there are
192:46 - double bord orders so we also have the
192:49 - border for the table cells over here and
192:51 - then again we are having the border for
192:53 - the outer table as well so what we can
192:56 - do is we can use the Border collapse
192:58 - property in this case so when we use the
193:01 - Border collapse property we are telling
193:03 - the browser to collapse these borders
193:05 - and display it only as a one border so
193:07 - let us use the Border collapse property
193:10 - as well so we come over here we say
193:12 - border collapse in this case and we use
193:15 - the collapse value for the Border
193:17 - collapse property let me just save this
193:19 - file now and try reloading this page so
193:21 - if you notice there are no double
193:23 - borders right now and there is only
193:25 - single border to the outer table that is
193:27 - the main table and also to the
193:29 - individual cells as well that we can see
193:31 - as the table data over here now guys let
193:34 - us provide certain padding as well to
193:36 - the entire content of the table so what
193:38 - we can do is we can provide the padding
193:41 - in this case so padding property and
193:44 - after colon let's say we provide two
193:46 - pixels over here as the padding let me
193:48 - just save this file now and try
193:49 - reloading this page so now we can see
193:51 - the spacing between the content of the
193:53 - table and the borders as well let us
193:56 - change the padding to five pixels so
193:58 - that we can clearly see the spaces in
194:01 - between the content on the border let me
194:03 - just reload this page once again so now
194:05 - the HTML table is looking little bit
194:07 - decent over here with the padding that
194:09 - we have already applied now guys let us
194:12 - move to another property over here we
194:14 - also have something called as background
194:16 - color for the table data so guys what we
194:18 - will do is let's say we want to provide
194:21 - the background color to the even rows
194:23 - that is the second row over here then we
194:26 - have the fourth row and the sixth Row in
194:29 - this case so what we can do is simply we
194:31 - have to come over here we will be
194:33 - defining the TR tag in this case but
194:37 - guys over here we only want the even
194:39 - rows to be having the background color
194:41 - so we provide colon and then we have
194:43 - something called as nth child over here
194:46 - so when we type nth you can see this
194:49 - particular suggestion from the vs code
194:51 - which we are going to use so guys it is
194:53 - n hyphen child over here and inside the
194:56 - open and close parenthesis we are going
194:59 - to provide the word that is even so guys
195:01 - basically this is nothing but this is
195:03 - the TR tag that we have defined over
195:05 - here to which The Styling needs to be
195:08 - implemented and this is the end the
195:10 - child meaning we are selecting that
195:12 - which TR Tex will be having this
195:14 - particular styling so inside this open
195:17 - and close curly braces we are going to
195:19 - have the background color over here guys
195:21 - no need to worry about the nth child
195:24 - over here for now we are going to learn
195:26 - more about it when we are going to see
195:27 - the CSS tutorial as well so please make
195:30 - sure that you subscribe to this YouTube
195:32 - channel that is programming for
195:33 - beginners because we are going to learn
195:35 - a lot about the HTML and the upcoming
195:38 - CSS tutorial as well and again much more
195:41 - knowledge as far as web development is
195:43 - concerned so guys over here simply the
195:45 - meaning of this is we are going to apply
195:47 - the background color to the even rows
195:49 - over here and what is the color that we
195:51 - want to apply let's say we want the aqua
195:54 - color to be applied so we are going to
195:56 - give this color name let me just save
195:58 - this file now and try reloading this
196:00 - page on the browser once again so as you
196:02 - can see the even rows are now getting
196:05 - this particular background color
196:06 - similarly we can also have the odd rows
196:09 - as well so when we change this even to
196:11 - odd in this case so the odd rows will be
196:14 - having the background color as Aqua so
196:16 - let me just just reload this page once
196:18 - again so as you can see the odd rows are
196:20 - now having the aqua background color so
196:23 - guys in this way you can easily apply
196:25 - the background color to the table
196:28 - content over here now guys let us move
196:30 - to another property we have something
196:32 - called as border radius as well so let
196:34 - us apply that so we will apply the
196:36 - Border radius to this table and th and
196:39 - then TD tags as well so when we say
196:42 - border radius in this case we need to
196:45 - apply certain value for for that radius
196:47 - so let's say we provide 10 pixels as the
196:50 - Border radius in this case let me just
196:52 - save this file now and try reloading
196:54 - this page once again to see what happens
196:56 - so as you can see the Border radius is
196:58 - now getting displayed over here and the
197:00 - color that we had applied is now showing
197:03 - the Border radius let us remove the
197:05 - Border collapse in this case so that we
197:07 - can clearly see the Border radius over
197:09 - here so when we remove this save this
197:12 - file now and try reloading this page as
197:14 - you can see we have the Border radius
197:16 - now and the borders are having certain
197:18 - kind of radius in this case both the
197:21 - entire table as well as the th and the
197:24 - TD tags are having the Border radius now
197:26 - let us move to another attribute we have
197:28 - something called as border style as well
197:31 - so guys we have already provided the
197:32 - Border style value over here that is the
197:35 - solid value in this case so basically
197:37 - the first value that we provide to this
197:39 - shorthand method that is the border is
197:42 - the Border width over here followed by
197:44 - the border style and Then followed by
197:46 - the Border color so guys individually
197:49 - you can have all these values as the
197:51 - Border width then border style and the
197:54 - Border color or you can have the Shand
197:56 - method that we have used that is border
197:59 - attribute along with that you can
198:01 - provide all the three values over here
198:03 - so guys basically this border style is
198:05 - having multiple values we can also have
198:07 - the dotted border as well so when we
198:09 - type dotted in this case so instead of
198:12 - the solid border we will be having the
198:14 - dotted borders so let me just save this
198:16 - file now and and try reloading this page
198:18 - once again so as you can see the borders
198:20 - are dotted for now and this is the way
198:22 - that we can have the Border style being
198:25 - implemented let us change the value to
198:27 - dashed over here so we can have the
198:29 - dashed borders as well so let me just
198:31 - save this file now and try reloading
198:33 - this page one again so as you can see
198:35 - the borders are having the Border styl
198:38 - as dashed let us move to another
198:40 - attribute over here we also have
198:42 - something called as border color in this
198:44 - case so guys the Border color is also
198:46 - provided over here that is the black
198:48 - color let us change the Border color to
198:50 - Red in this case so when we type red
198:52 - color name let me just save this file
198:54 - now and try reloading this page as you
198:56 - can see the Border color is changed to
198:58 - Red let me just change the Border style
199:01 - to solid in this case so when we change
199:03 - it to solid let me just save this file
199:06 - reload this page as you can see we are
199:08 - having the solid border over here with
199:10 - the red color so Guys these are certain
199:13 - properties for the borders that we can
199:15 - apply to the table and based on your
199:17 - requirements you can display the HTML
199:19 - table over here on the page so so now we
199:21 - will see how we can set the table size
199:24 - in HTML using the width and the height
199:27 - attributes so guys basically the HTML
199:29 - tables can have the different sizes for
199:32 - each column row or the entire table and
199:36 - that is what we are going to see with
199:37 - the help of examples we will first set
199:40 - the table width and then we will also
199:42 - see the table header width and then we
199:44 - will see the table row height so guys
199:47 - let us move to the vs code over here and
199:49 - this is the table that we had defined
199:51 - previously along with this particular
199:53 - internal CSS code as well and this is
199:56 - how the table is being displayed right
199:58 - now on the web page now guys let us say
200:00 - we want the entire table width to be
200:03 - displayed as the 100% of this page which
200:06 - means the width of the table will be
200:09 - same as the width of this device screen
200:11 - over here so what we can do is simply
200:14 - for the table tag we need to define the
200:16 - with attribute so guys over here we need
200:19 - to define the table once again because
200:21 - this particular CSS will only apply to
200:24 - the table tag and no other tag so
200:27 - basically th and TD tags will not have
200:29 - this particular width for now and that
200:31 - is why we are having another table tag
200:33 - over here inside the internal CSS code
200:37 - so guys over here we simply have the
200:39 - width attribute and then we will say
200:41 - 100% so this will make the table width
200:44 - extend to the device screen width so
200:46 - guys let me just save this file now and
200:48 - try reloading this page once again on
200:50 - the browser so as you can see the width
200:52 - of the table is being extended to the
200:55 - width of the screen right now now guys
200:57 - let me just add another column over here
200:59 - to make the table look more decent on
201:01 - the HTML page so what we will do is we
201:03 - will add another column over here so we
201:06 - have the header and then we say another
201:09 - column and then we will Define certain
201:12 - table data as well for the third column
201:14 - over here so we will say this is first
201:18 - number so guys basically we are just
201:20 - describing what the content of these
201:23 - particular rows are so we will say this
201:26 - is second number and so on up to the
201:29 - fifth number we are going to define the
201:32 - new tags over here so guys we have
201:34 - defined the content of the third column
201:36 - as well let me just save this file now
201:38 - and try reloading this page once again
201:40 - so as you can see now we are having
201:42 - three columns the First Column is the
201:44 - numbers then we have the string
201:46 - representing
201:47 - and we have another column which is
201:49 - having the description of all these rows
201:51 - over here now guys we can also change
201:53 - the width to another perc in this case
201:55 - so basically instead of having the 100%
201:58 - width over here we can also say to have
202:00 - 60% width of the device screen so let me
202:04 - just save this file now and try
202:05 - reloading this page so this is the 60%
202:08 - width over here and this is how we can
202:10 - change the size of the table now guys we
202:12 - can also have the table header width so
202:15 - guys basically let's let's say if you
202:17 - want the width of this particular header
202:19 - to be more compared to the width of the
202:22 - other headers so we can do that as well
202:24 - so what we have to do is let's say we
202:26 - provide 100% over here as the width of
202:29 - the table let me just reload this page
202:31 - once again to see the changes so over
202:33 - here we are having the 100% width of the
202:36 - table now guys what we will do is we
202:38 - will come over here and it is a third
202:40 - header that is another column so we will
202:43 - change the content to description over
202:45 - here to be more precise so let me just
202:47 - save this file now so over here the
202:50 - description is the header for which we
202:52 - want the width to be 50% So currently it
202:55 - is not 50% because it is not starting at
202:58 - the middle over here so what we can do
203:00 - is simply we can come to the th tag for
203:02 - the description header over here and
203:05 - then inside the th tag we will have the
203:07 - style attribute and this style attribute
203:10 - will have the width property in this
203:12 - case and we will say 50% should be taken
203:15 - by this particular header over here and
203:18 - all the values that are present inside
203:20 - this header so guys let me just save
203:22 - this file now and try reloading this
203:23 - page once again as you can see now the
203:26 - description column is taking the 50% of
203:29 - the entire 100% of the table and guys
203:32 - this is the way that we can provide the
203:34 - width of a particular column as well
203:37 - inside the TH or the TD tag as well
203:39 - inside which the data is being defined
203:42 - guys it is important to note that we
203:43 - have provided the style attribute just
203:46 - to this this particular header that is
203:48 - the th tag of this particular row that
203:50 - is the first row so using the width of
203:53 - this th data over here the other TD
203:56 - datas that are present in the third
203:58 - column will also have the same width
204:00 - over here this cell is having 50% so all
204:03 - the cells under this particular column
204:05 - will also have the width as 50% now guys
204:08 - let us see how we can change the height
204:09 - of a particular row so let's say we want
204:12 - this row that is the row having the
204:14 - number two over here to extend it height
204:17 - so what we can do is we can come over
204:19 - here to this row that is having the
204:21 - number two in this case we provide the
204:24 - style attribute so we say style and then
204:26 - inside this we can provide the height
204:29 - property and then guys let's say we have
204:31 - 150 pixels as the value for this
204:34 - particular height property inside the
204:36 - style attribute so let me just save this
204:39 - file now and try reloading this page
204:41 - once again so as you can see for this
204:43 - row that is having the number two the
204:46 - height has been increased to 150 pixels
204:49 - over here and that is how we can set the
204:51 - height of a particular row inside the
204:53 - table so guys this is the way that we
204:55 - can change the size of the table as you
204:58 - can see by using the internal CSS and
205:01 - then we have also seen how we can change
205:03 - the width of a particular header which
205:06 - will be followed by the other data that
205:08 - is present inside the same column and
205:10 - then we have also seen how we can change
205:12 - the height of a particular table Row in
205:15 - this case and this is this is how the
205:16 - table is being displayed on the HTML
205:19 - page right now after all the changes so
205:21 - now we will see table headers in HTML
205:24 - that is horizontal and vertical table
205:26 - headers so guys basically HTML tables
205:29 - can have headers for each column or row
205:32 - or for many columns or rows So based on
205:35 - your requirements we can have the
205:37 - headers in each column or in each row or
205:40 - in multiple columns and rows which we
205:42 - are going to see with the help of
205:43 - examples as well so guys the very first
205:45 - thing that we are are going to see is
205:47 - the horizontal headers which means the
205:49 - headers are present in the first row of
205:51 - the table so guys let us move to the VSS
205:53 - code now over here and first of all we
205:56 - will Define a paragraph and we will say
205:58 - below content is in HTML table so guys
206:02 - we have defined a very simple paragraph
206:04 - over here having this particular
206:06 - statement now guys we will Define a
206:08 - table so we will say table in this case
206:11 - and we have the starting and the ending
206:13 - tag of the table and now guys inside
206:15 - this table we are going to have the
206:17 - first row by using the TR tag that is
206:20 - the table row and in this first row we
206:22 - are going to have all the headers that
206:24 - we want to Define so guys we will be
206:26 - using the th that is the table header
206:29 - tag and in this case let's say we want
206:31 - to define the details of certain players
206:34 - so we say first name and then we copy
206:36 - paste the header and then we will say
206:39 - last name over here and then we will say
206:41 - age so again we will copy paste another
206:44 - header over here and we will say age in
206:46 - this case so guys basically we have
206:48 - defined three headers over here by using
206:50 - the th tags in this case so guys let me
206:53 - just save this file now and try
206:55 - reloading this page on the browser so as
206:57 - you can see below content is in HTML
206:59 - table this is the paragraph that we have
207:01 - defined and this is the first row of the
207:04 - table which is having the Bold
207:05 - formatting of the text now guys let us
207:08 - Define the table data in this case by
207:10 - using the TD tags so over here once
207:13 - again we will have another row in this
207:15 - case so in this row we will be defining
207:17 - the details of the first player so we
207:20 - will have the TD tag and then let's say
207:23 - we have Cristiano Ronaldo as the first
207:25 - player so we will have the TD tag in
207:28 - this case and then again we will have
207:30 - the table data tag for the last name as
207:33 - well so we will say Ronaldo in this case
207:36 - and let's say for the age we have once
207:38 - again another TD tag and currently his
207:41 - age is 38 years so we will say 38 years
207:45 - in this case so guys let me just save
207:47 - this file now and try reloading this
207:49 - page once again on the browser so as you
207:51 - can see we have got the first name that
207:53 - is Christiano under the first name
207:55 - header and then we have last name header
207:58 - under which we have Ronaldo as the last
208:00 - name and then age as well that is 38
208:03 - years in this case so guys basically
208:05 - this is the example of the horizontal
208:08 - header that we have defined for now in
208:10 - which case the headers are present on
208:12 - the first row of the table now guys
208:14 - let's say we want to Define another
208:16 - players data over here that is Leonel
208:18 - Messi so we will simply have to copy
208:20 - this TR tag in this case and then paste
208:23 - it after the first record in this case
208:26 - over here so we will say Leonel
208:29 - Messi so last name over here we have
208:32 - Messi in this case and then his age is
208:34 - 36 years currently so basically we have
208:37 - defined the details of this player as
208:39 - well that is the second player let me
208:41 - just save this file now and try
208:42 - reloading this page on the browser so as
208:45 - you can see this this is the second
208:46 - player that is Leonel Messi and his age
208:49 - is 36 years so guys basically this is
208:51 - the perfect example of the horizontal
208:54 - headers that we have defined for now we
208:56 - can also have the borders so quickly we
208:58 - will Define the style tag as well inside
209:01 - the head tag so over here we will say
209:03 - style and then we will give borders to
209:06 - table as well as the th and the TD tags
209:10 - so over here we will say th and TD tags
209:13 - and then we can simply say Border in
209:15 - this case and we will say 2 pixels width
209:18 - for that border and then it should be a
209:21 - solid border with a color that is black
209:24 - so guys let me just save this file now
209:26 - this particular CSS property will apply
209:28 - to the table then we have the table
209:30 - header and the table data tags over here
209:33 - so guys let us reload this page once
209:36 - again on the browser so as you can see
209:38 - the Border has been applied but over
209:40 - here we have the multiple borders in
209:42 - this case so we can simply have the
209:44 - table tag over here here and then we can
209:47 - have the property that is border
209:49 - collapse in this case and we can have
209:51 - the value as collapse so let me just
209:53 - save this file now and try reloading
209:54 - this page so as you can see we have the
209:57 - perfect border for all the TD th and the
210:00 - table tags over here so guys this is the
210:02 - example of the horizontal headers that
210:04 - we have seen now let us see the same
210:06 - example with the vertical headers as
210:08 - well which means the first name last
210:11 - name and the age headers should come on
210:13 - the left hand side over here in the
210:15 - first column so how should we create the
210:17 - table for that so guys over here what we
210:19 - will do is again we will create another
210:22 - table so first of all we will have a
210:24 - paragraph and we will say below is
210:27 - another table and then after this
210:30 - paragraph We Will Define the table tag
210:32 - over here now guys inside this table tag
210:35 - what we have to do is we need to provide
210:37 - the first TR now this TR will have the
210:40 - first element as the th tag which is the
210:42 - header tag over here and this time it
210:45 - will be first first name in this case
210:47 - now guys the second and the third
210:48 - element inside the first row over here
210:51 - should be the TD tags that will Define
210:53 - the first names that is Cristiano and
210:56 - Leonel so guys over here what we have to
210:58 - do is we need to provide the table data
211:01 - tag and then we will say Christiano that
211:04 - is the value of the first name for the
211:07 - first player and then again we will have
211:09 - the TD tag for the value of the first
211:12 - name of the second player so over here
211:14 - we will say Leon so guys let me just
211:16 - save this file now and try reloading
211:18 - this page once again on the browser so
211:21 - as you can see the first name we have
211:23 - defined in the leftmost column over here
211:26 - and this particular row is only having
211:28 - the first name in this case similarly we
211:30 - will have the last name and age as well
211:32 - in the second and the third rows over
211:35 - here so guys let me just copy and paste
211:37 - this TR that is the table row that we
211:40 - have defined over here two times and
211:42 - then in this case we will have last name
211:44 - and we will change the value to Ronaldo
211:47 - over here and this leonal will be
211:50 - changed to Messi in this case and then
211:53 - again in the third row we will have age
211:55 - as the vertical header and then over
211:57 - here we will have 38 years for Ronaldo
212:01 - and 36 years for Messi so guys let me
212:04 - just save this file now and try
212:06 - reloading this page on the browser so as
212:08 - you can see this is the example of the
212:10 - vertical headers that we have defined
212:12 - which can be displayed in the First
212:14 - Column over here and the first name we
212:16 - can see we have Cristiano then we have
212:18 - the last name as Ronaldo and his age is
212:21 - 38 years similarly for player two we
212:23 - have Leonel Messi and 36 years as first
212:27 - name last name and age respectively so
212:29 - guys this table is having the horizontal
212:31 - headers whereas this table is having the
212:33 - vertical headers in this case now guys
212:35 - let us move to another task over here we
212:37 - can also have the header alignment so
212:40 - basically to the th text we can provide
212:43 - the text align property so if you know
212:45 - notice the headers are aligned in the
212:48 - center for now by default so what we can
212:50 - do is we can align them on the left hand
212:52 - side so what we can do is over here in
212:55 - the style tag we can create another tag
212:57 - that is th and then this should have the
213:00 - text align as left so over here we will
213:02 - say text align and the value can be left
213:05 - in this case so guys let me just save
213:07 - this file now and try reloading this
213:09 - page if you notice the headers are at
213:11 - the center right now it should move to
213:13 - left over here so when we reload the
213:15 - this as you can see this is aligned to
213:17 - the left and also all these table
213:20 - headers are aligned to left and in this
213:22 - way you can set the text align property
213:25 - of any of the table headers or the table
213:27 - data elements now guys let us move to
213:29 - another task we can also have the call
213:31 - span to merge headers over here so guys
213:34 - basically what this means is let's say
213:36 - we only want to define the single header
213:39 - that is name over here instead of first
213:41 - name and last name but we want the
213:43 - values to be in different columns over
213:45 - over here so what we can do is we can
213:47 - merge these two columns in this case
213:50 - that is first name and last name can be
213:52 - removed and we can have a common name
213:54 - that is name as the name of the column
213:57 - so what we can do is we can have the
213:59 - call span attribute over here so guys
214:02 - basically these are the two headers that
214:04 - we want to transform into a single
214:06 - header so I'll just remove these lines
214:08 - of code over here and we will simply
214:10 - have one th tag and the label of this
214:13 - particular header is name in this case
214:15 - but guys this particular name should
214:17 - Span in two columns over here so that we
214:20 - come to know that these two columns are
214:22 - having the names of the players so guys
214:24 - what we can do is over here inside the
214:27 - starting th tag we have to provide the
214:29 - call span attribute so over here we can
214:32 - simply say call span and then we can say
214:34 - two in this case that's because the two
214:37 - cells needs to be merged together and we
214:39 - need to have the label as name over here
214:42 - so guys let me just save this file now
214:44 - and try reloading this page once again
214:46 - on the browser so as you can see the
214:48 - first name and last name were replaced
214:50 - now with this particular label that is
214:52 - nam which is a single label and it is
214:54 - occupying the space for these two cells
214:56 - over here we can have the text align as
214:59 - Center in this case so that the label is
215:01 - displayed properly and we come to know
215:03 - that both these cells are having the
215:05 - first name and last name of the players
215:08 - so simply we have to come over here in
215:10 - the style and for the text align
215:12 - property we can say Center value so let
215:15 - me just say this file now and try
215:16 - reloading this page once again on the
215:18 - browser so as you can see name is being
215:21 - aligned at the center now so guys this
215:23 - is the importance of the call span
215:25 - attribute it helps us in order to merge
215:27 - the multiple cells in the table now guys
215:30 - let us move to another task over here we
215:32 - have something called as table caption
215:34 - which is the details of the table that
215:36 - we want to show on the HTML page so we
215:39 - can use the caption tag immediately
215:42 - after table opening tag so guys over
215:44 - here we don't have any any other details
215:46 - for these tables apart from the
215:48 - paragraph that we have just defined so
215:50 - what we can do is we can also have the
215:52 - caption tag after the table tag over
215:55 - here in order to Define what exactly is
215:58 - present inside the HTML table that we
216:00 - have defined so guys over here after the
216:03 - table tag and before the first row in
216:05 - this case we will simply have the
216:07 - caption tag over here so when we say
216:09 - caption we need to provide certain text
216:12 - over here so let's say we provide player
216:15 - details in this case so guys basically
216:17 - this particular information should be
216:19 - present for this particular table just
216:22 - above this table so let me just save
216:24 - this file now and try reloading this
216:26 - page once again on the browser so as you
216:28 - can see player details is being
216:30 - displayed now on top of the table that
216:33 - we had defined now guys similarly we can
216:35 - have the caption for the second table as
216:37 - well so what we can do is simply we have
216:39 - to come over here in the second table
216:42 - and after this table tag and before the
216:44 - first table
216:46 - we can have the caption tag over here
216:48 - and then we can say player details part
216:51 - two so guys let me just save this file
216:53 - now and try reloading this page once
216:54 - again on the browser so as you can see
216:57 - this is the table caption that is being
216:58 - displayed just before the table which is
217:01 - being displayed on the browser so Guys
217:03 - these are some of the ways in order to
217:05 - define the table headers whether you
217:07 - want to define the horizontal table
217:09 - header or the vertical table header
217:11 - based on your requirements okay so now
217:13 - we will see table padding and spacing in
217:16 - HTML so guys HTML tables can adjust the
217:19 - padding inside the cells and also the
217:22 - space between the cells so we are going
217:24 - to check what is the difference between
217:26 - badding and spacing in HTML tables with
217:29 - the help of examples as well so
217:31 - basically a cell padding is the space
217:33 - between the cell edges and the cell
217:36 - content which means the data that we
217:38 - have defined and the border that is
217:41 - present for that particular table cell
217:43 - the space in between these two ele ments
217:45 - is called cell padding and by default
217:48 - the padding is set to zero so we can use
217:50 - the padding CSS property in this case so
217:53 - guys let us move to the vs code over
217:54 - here we already have a table which is
217:57 - being defined in this case which is
217:58 - having three rows over here the first
218:00 - row is having all the headers that is
218:02 - the first name last name and the age of
218:05 - the players that we want to Define and
218:07 - then the second row is having the player
218:09 - details in this case so as you can see
218:11 - we have the first name and the last name
218:14 - as Cristiano Ronaldo
218:15 - and his age is 38 years and the second
218:18 - player that is Leonel Messi and his age
218:21 - is defined as 36 years so these are the
218:24 - two records that we have displayed in
218:26 - the form of the HTML table so if I show
218:28 - you this is the table that is being
218:30 - defined over here now guys let us
218:32 - provide certain borders over here in
218:34 - order to understand what is the
218:36 - difference between padding and spacing
218:38 - and how we can apply them in the HTML
218:40 - table so guys over here what we have to
218:43 - do is inside the style tag we will use
218:46 - the text that is table and we will also
218:49 - have the header and we will also say
218:52 - table data all these Texs must have the
218:55 - border of one pixel in this case so we
218:58 - will say border which is having the
219:00 - width as 1 pixel and the Border type is
219:03 - solid in this case and we will say the
219:06 - Border color is black color in this case
219:08 - so guys this is the shorthand method in
219:10 - order to define the border of the table
219:13 - in HTML now guys let me just say this
219:15 - file now and try reloading this page on
219:18 - the browser so as you can see a one
219:20 - pixel border is applied to all the
219:22 - elements that is the entire table
219:25 - element over here and then in between
219:27 - you can see that the table header and
219:29 - the TD that is the table data which is
219:32 - having the player details are also
219:34 - having the borders over here we can have
219:36 - the Border collapse property for the
219:38 - entire table as well so that the border
219:40 - is displayed only once instead of these
219:43 - double lines in this case so guys over
219:45 - here we will have the table tag and they
219:48 - should have the Border collapse property
219:50 - in this case and the value should be
219:53 - collapse in this case so guys let me
219:54 - just save this file now and try
219:56 - reloading this page on the browser what
219:58 - is the importance of this border
220:00 - collapse property so guys over here you
220:02 - can see multiple lines in this case that
220:04 - is for each individual cell over here
220:07 - but when we reload this page once again
220:09 - you can see only one single border for
220:11 - all the cells and that is the importance
220:13 - of this border collapse that is being
220:15 - applied to the entire table over here
220:18 - now guys if you notice there is not much
220:20 - space in between the content that is
220:22 - let's say if we consider this Ronaldo as
220:24 - the last name over here we cannot see
220:27 - much space in between this particular
220:28 - content and the border that is
220:30 - surrounding this last name over here so
220:33 - what we can do is we can provide the
220:35 - padding property and provide certain
220:37 - space so that it looks good inside the
220:40 - table cell so guys over here where we
220:42 - have applied the Border we can simply
220:44 - come over over here and provide the
220:46 - padding property and the padding that we
220:48 - want to provide is let's say we want to
220:51 - provide 10 pixels as the padding from
220:53 - all the sides so guys basically you can
220:55 - also Define padding at each individual
220:58 - sides that is left top bottom and right
221:01 - but you can also use the padding
221:03 - property in order to apply the same
221:05 - value from all the four sides so guys
221:08 - let me just save this file now and try
221:10 - reloading this page on the browser so as
221:12 - you can see now we have some space in
221:15 - between the content and the borders that
221:17 - is surrounding the content over here so
221:19 - all the cells in this table is having 10
221:22 - pixels of padding in this case so guys
221:25 - this is the meaning of the padding
221:26 - property over here that we have just
221:28 - seen now guys what is the meaning of
221:30 - cell spacing so basically cell spacing
221:33 - is the space between each cell by
221:36 - default the space is set to two pixels
221:38 - use border spacing CSS property in order
221:41 - to define the cell spacing so guys we
221:44 - have already seen that that by default
221:46 - the two pixels of spacing is present
221:48 - between all the cells so to understand
221:50 - it more clearly we have to remove the
221:52 - Border collapse property from the table
221:54 - so that multiple borders are being
221:57 - displayed once again so I'll just remove
221:59 - these lines of code over here let me
222:01 - just save this file now and try
222:03 - reloading this page so as you can see we
222:05 - have got the multiple borders once again
222:07 - for each and every cell over here now
222:10 - guys you can see that there is certain
222:11 - spacing in between the border that is
222:14 - covering the table data over here so
222:16 - this space is 2 pixels by default so we
222:19 - can increase or decrease it so we can
222:21 - remove it by using the Border collapse
222:23 - property or we can increase it by using
222:26 - the Border spacing property so guys let
222:28 - us use that as well so over here what we
222:30 - have to do is again we have to come over
222:33 - here and then we will say border spacing
222:36 - in this case and then let's say we want
222:38 - to provide 10 pixels of the Border
222:40 - spacing in this case so let me just save
222:42 - this file now and try reloading this
222:44 - page on the browser so as you can see
222:47 - all the cells now are having the 10
222:49 - pixels of Border spacing in between them
222:52 - so guys this is the space in between the
222:54 - borders that is covering the table data
222:56 - content over here inside the HTML table
223:00 - and that is the meaning of this
223:01 - particular cell spacing over here so
223:03 - guys both these CSS properties that is
223:05 - padding and spacing are important as far
223:08 - as HTML tables are concerned So based on
223:11 - your requirements you can design your
223:13 - own tables and whatever padding and
223:15 - spacing is required you can Implement
223:17 - them by using these CSS properties so so
223:20 - guys HTML tables can have cells that
223:22 - span over multiple rows and columns so
223:25 - basically what is the meaning of a call
223:27 - span so it is the attribute that helps
223:30 - us to make a cell span over multiple
223:33 - columns and we use the call span
223:35 - attribute and similarly we also have the
223:37 - row Span in order to make a cell's pen
223:40 - over multiple rows we use the rows pen
223:43 - attribute over here so guys in in order
223:45 - to understand both these attributes we
223:47 - are going to create these two tables
223:49 - that is the first table is having the
223:51 - horizontal header over here and then we
223:53 - are having the data in the table and the
223:56 - second table is having the vertical
223:58 - table headers over here and this is the
224:01 - table data that we are going to Define
224:03 - and then guys what we can do is the
224:05 - first name and last name can be combined
224:07 - over here so basically in Microsoft
224:10 - Excel what we do is we click over here
224:12 - on the merge and center so when we do do
224:15 - this basically we are going to label it
224:17 - as name in this case and this is how we
224:19 - are going to combine the two cells in
224:22 - the HTML table as well and similarly we
224:24 - are going to combine these two rows over
224:27 - here in this case by using the rows pen
224:30 - so guys the first scenario will be done
224:32 - by using the call span over here and in
224:34 - the second table we can merge these two
224:36 - rows by using the row pan in this case
224:39 - so guys let us move to the vs code now
224:41 - over here and let us Define the first
224:43 - table that is having the the horizontal
224:46 - table headers so guys the first row is
224:48 - having the table headers in this case so
224:51 - we will have the header that is the
224:53 - first name over here and then we have
224:55 - last name and then age so in this case
224:58 - we will say last name and then age over
225:01 - here so guys all these three elements
225:03 - are the table headers in this case let
225:05 - me just save this file now and try
225:07 - reloading this page on the browser so as
225:09 - you can see these are the table headers
225:11 - that we have defined now guys we will
225:13 - Define the table data as well so we will
225:16 - have another row over here and the
225:18 - details of the first player that is
225:20 - Cristiano Ronaldo will be defined
225:22 - rowwise so over here we have the first
225:24 - name and then we will Define the last
225:26 - name over here and then we will Define
225:29 - age in this case that is 38 years okay
225:31 - similarly we will Define the details of
225:34 - the second player as well by using this
225:36 - second row so over here simply we will
225:38 - copy and paste these lines of code and
225:41 - then we will say the details of the
225:43 - second player that is Leon
225:45 - whose age is 36 years now guys let me
225:48 - just save this file now and try
225:50 - reloading this page on the browser so as
225:52 - you can see we have created this table
225:54 - in the HTML similar to the Microsoft
225:56 - Excel table that we have defined now
225:59 - guys how we can combine the first name
226:01 - and last name over here so before doing
226:03 - that let us apply certain border over
226:05 - here to the table so what we can do is
226:08 - simply we have to come in this style tag
226:10 - and then we will say table we will also
226:13 - have th and TD in this case case for
226:15 - which the Border CSS property will be
226:17 - applied the Border width will be 1 pixel
226:20 - and it will be a solid border and then
226:22 - the color of the Border will be black in
226:24 - this case so let me just save this file
226:26 - now and try reloading this page on the
226:28 - browser so as you can see now we have
226:31 - the borders as well we will also provide
226:33 - the Border collapse property to the TBL
226:36 - so that we don't see these multiple
226:37 - lines over here in between the cells as
226:40 - the borders so over here we have border
226:42 - collapse property and the value of this
226:45 - property will be collapse in this case
226:47 - let me just save this file now and try
226:49 - reloading this page so as you can see we
226:51 - have provided the Border collapse
226:53 - property as well let us also provide the
226:55 - padding as well so we will provide 10
226:58 - pixels of padding so that we can see the
227:00 - spaces in between the data and the
227:03 - borders of the table so now you can see
227:05 - that there is certain spacing as well
227:07 - inside the table now guys what we will
227:08 - do is we will simply merge these two
227:11 - cell data that is first name and last
227:13 - name by using the call span attribute so
227:16 - guys what we have to do is the first
227:18 - name and last name headers are present
227:20 - in the first row over here and now we
227:22 - will remove these two headers over here
227:24 - and we will simply provide just one
227:26 - header which will have the label as name
227:28 - over here now guys what we have to do is
227:31 - since we have provided three values over
227:33 - here for the player details we need to
227:35 - adjust this particular First Column
227:39 - label in such a way that it occupies two
227:41 - cells over here so inside the th St
227:44 - starting tag we need to provide the call
227:47 - span attribute so as you can see this is
227:49 - the attribute that we can use and we
227:52 - just have to provide the number of cells
227:54 - that will be used in order to display
227:57 - this particular label so in this case
227:59 - these two cells will be displayed in
228:01 - just one cell that will be labeled as
228:03 - name over here so we provide the call
228:06 - span as two in this case so let me just
228:08 - save this file now and when we reload
228:11 - this page you will notice that the first
228:13 - name and last name will be removed moved
228:15 - now and these two cells will be combined
228:17 - and it will have the label as name over
228:19 - here so when we reload this page as you
228:22 - can see name is being displayed as the
228:24 - common label for the first name and the
228:27 - last name of the players and guys this
228:29 - is the importance of the call span
228:31 - attribute that is in order to merge the
228:34 - two cells column wise we can use the
228:37 - call span attribute inside the TH or the
228:40 - TD tags as well now guys let us move to
228:42 - another task that is how we can use the
228:44 - those pen so guys over here we will have
228:47 - to create another table in such a way
228:49 - that the table headers are present
228:51 - vertically over here in the First Column
228:54 - so let us Define this particular table
228:56 - quickly so in vs code what we will do is
228:59 - we will have another table tag over here
229:01 - and then inside this the very first row
229:04 - will be having the first element as the
229:06 - header which will be the first name over
229:08 - here and then guys the second and the
229:10 - third element will be having the first
229:13 - name of both the players so so over here
229:15 - we will have the TD tag and we will say
229:17 - the first name of the first player that
229:20 - is Cristiano and the third tag will be
229:22 - another TD tag and this time it will be
229:25 - the first name of the second player that
229:27 - is Leonel okay similarly we will have
229:29 - two more rows over here in which case
229:31 - the first element will be table header
229:33 - and the other two elements will be table
229:35 - data over here so let us Define that as
229:38 - well and over here in the second row we
229:41 - will have last name in this case so we
229:44 - will have details of the player that is
229:46 - Ronaldo and Messi in this case and then
229:49 - in the third row we will have the age so
229:52 - we will Define the age as 38 years and
229:56 - 36 years so guys we have defined all the
229:59 - data over here in the second table as
230:01 - well let me just save this file now and
230:03 - try reloading this page on the browser
230:05 - so as you can see we have the table
230:07 - headers in the first colum over here and
230:09 - the data is being displayed in the
230:11 - second and the third columns in this
230:13 - case guys let us Pro IDE certain spacing
230:15 - in between both the tables so we can
230:17 - simply have the line braks that is the
230:20 - BR tags over here so we will have
230:22 - multiple line braks in this case let me
230:24 - just save this file now and try
230:26 - reloading this page so as you can see
230:28 - this is the second table now now guys
230:30 - over here we had used the call span
230:32 - attribute in order to merge the two
230:34 - cells column wise now similarly we will
230:37 - use the row span attribute in order to
230:40 - merge the first name and the last name
230:43 - over here these two sets vertically so
230:46 - that we can say that Cristiano Ronaldo
230:48 - is the full name of the player so guys
230:50 - what we have to do is we have to come
230:52 - over here in the second table and we
230:54 - have to remove both the headers from
230:57 - here so first of all we will remove the
230:58 - first name and we will also remove the
231:01 - last name in this case and we will
231:03 - simply have just one header over here so
231:05 - we will say th and in this case we will
231:08 - give the label as name over here and
231:10 - then guys what this th is doing is it
231:13 - should have the space of the two rows
231:15 - over here so in the second row we are
231:17 - not going to Define any of the table
231:19 - headers but in the first row we have
231:21 - already defined and we need to provide
231:24 - the rose pan as two in this case so we
231:26 - provide Rose Pan and the value should be
231:29 - two so that it takes the space of both
231:31 - these cells over here inside the First
231:33 - Column so guys let me just save this
231:35 - file now and try reloading this page on
231:37 - the browser so now as you can see the
231:39 - first name and last name is not being
231:41 - displayed and instead of that we are
231:43 - getting the common label that is name
231:45 - over here that is occupying the space of
231:47 - the first and the second row over here
231:49 - inside the First Column and guys this is
231:52 - the way that we can use the rose pen
231:54 - based on our requirements so now we will
231:56 - see table styling in HTML using CSS so
232:00 - guys we can use CSS in HTML to make the
232:03 - tables look better and these are the
232:05 - examples that we are going to see with
232:07 - the help of VSS code as well so
232:09 - basically we will see zebra strips in
232:11 - order to add the background color on
232:14 - every other table row inside the table
232:17 - that we have defined in the HTML so guys
232:19 - to check this example we are going to
232:21 - Define this particular table as you can
232:23 - see it is kind of a calendar which is
232:25 - having the days that is Monday Tuesday
232:28 - Wednesday and up to Sunday in the first
232:31 - row and then in the other rows we have
232:34 - the dates over here from 1 up to 28
232:37 - which is the number of days in the month
232:39 - of February provided it is not a leap
232:42 - year so guys we are going to Define this
232:44 - particular table in HTML so let us move
232:46 - to the vs code over here and inside the
232:49 - body section we will have table tag over
232:52 - here and for this table tag we will
232:54 - Define the caption as calendar over here
232:56 - so we will say calendar now guys simply
232:59 - what we have to do is we need to define
233:01 - the first row and it should have these
233:03 - days over here so what we can do is we
233:06 - will have the TR tag over here and then
233:08 - inside the table row tag we will have
233:10 - the table headers that is the th tags so
233:14 - the first th tag is having Monday as the
233:16 - value similarly we will have the other
233:19 - six th tags as well and we will Define
233:22 - the other days so we have Tuesday over
233:25 - here then we have wedes day and then we
233:28 - have
233:29 - Thursday and then we have Friday and
233:32 - then Saturday and then the last day that
233:35 - is Sunday over here so guys let me just
233:37 - save this file now and try reloading
233:39 - this page on the browser once again so
233:41 - as you can see we have defined the
233:43 - headers of the table we we have not
233:44 - provided any borders for now so we will
233:47 - provide it at the end of the creation of
233:49 - this particular table now guys we will
233:51 - Define the dates inside this table using
233:53 - the table row so once again we will have
233:55 - the table row over here which is the
233:57 - second row and then inside this we will
233:59 - have the table data this time because
234:01 - these are not the table headers these
234:04 - are the simple data that we want to
234:06 - Define inside the table so guys we have
234:08 - the date that is 1 over here similarly
234:11 - we will have the dates from 1 to 7 in
234:14 - this case so as you can see we have
234:15 - provided the dates from 1 to 7 let me
234:18 - just save this file now and try
234:19 - reloading this page on the browser so as
234:21 - you can see we have provided the dates
234:23 - as well so guys similarly I will quickly
234:26 - provide the dates in the other rows as
234:28 - well inside the vs code so guys as you
234:30 - can see we have provided the table data
234:33 - in the other rows as well over here let
234:35 - me just save this file now and try
234:37 - reloading this page once again on the
234:39 - browser so this is the way that our
234:41 - calendar looks like over here on the
234:43 - browser now guys let us provide certain
234:45 - borders as well to all the table cells
234:48 - over here so in the vs code we will come
234:50 - inside the head section and then we will
234:53 - provide the style tag over here and we
234:55 - will provide the border to the table and
234:58 - also to the table header that is the th
235:00 - tag and the TD tag as well which is the
235:02 - table data so simply we have to provide
235:05 - the Border property over here and let's
235:08 - say we provide one pixel that is the
235:10 - Border width and then border style will
235:13 - be solid in this case case and let's say
235:15 - we provide the color as black to the
235:17 - border of this table so let me just save
235:19 - this file now and try reloading this
235:21 - page on the browser so as you can see we
235:24 - have provided the borders as well over
235:26 - here and we will also provide the Border
235:28 - collapse property so that we don't get
235:30 - to see the double borders over here to
235:32 - all the cells of the table so inside the
235:35 - table tag we need to provide the Border
235:38 - collapse property over here and then the
235:40 - value will be collapse in this case and
235:43 - guys also we will provide certain
235:44 - padding so that we have some space over
235:47 - here between the content and the table
235:50 - borders so in this case we will provide
235:52 - padding of six pixels over here so we
235:55 - say padding as 6 pixels let me just save
235:58 - this file now and try reloading this
235:59 - page on the browser so as you can see we
236:01 - have provided the padding as well as the
236:03 - collapse property is helping us to
236:06 - display the borders of the cells only
236:08 - once now guys let us see how we can
236:10 - provide the zebra strips over here to
236:12 - the table so we will be adding the
236:14 - background color on every other table
236:16 - row so basically we are going to provide
236:19 - the background color to the even rows
236:21 - over here so let's say this is the
236:23 - second row so it should have certain
236:25 - background color and again to this
236:27 - fourth row as well we will be having the
236:29 - same background color so how we can
236:31 - achieve this particular task so guys
236:33 - simply we can come over here under the
236:35 - style tag and we will be providing the
236:38 - TR tag over here that's because we want
236:41 - to provide the background color to the
236:43 - entire row and then in this case we need
236:46 - to provide the background color to the
236:48 - even rows so what we can do is after the
236:51 - TR tag we can use colon and then we can
236:54 - use the nth child over here so guys
236:56 - under this nth child inside the
236:58 - parenthesis we can say even over here
237:01 - which means only to the even rows the
237:04 - property that we are going to Define
237:06 - under this particular tag will be
237:08 - applied so inside the curly braces we
237:11 - will have background color over here and
237:13 - then let's say we want to provide Aqua
237:16 - as the background color in this case to
237:18 - all the even rows of the table so guys
237:21 - let me just save this file now and try
237:23 - reloading this page on the browser once
237:25 - again so as you can see this aqua color
237:28 - that is the background color is being
237:30 - applied to the even rows over here to
237:33 - this particular table and that is how we
237:35 - can achieve this particular task of
237:38 - applying the zebra strips to the HTML
237:40 - table now guys similarly we can also
237:43 - have the vertical Ze strips so instead
237:45 - of having the color being applied to the
237:48 - rows we can apply it to the columns as
237:50 - well so let's say if we want to apply
237:52 - the colors to the even number of columns
237:55 - which means on Tuesday then on Thursdays
237:58 - and then on Saturdays so the background
238:00 - color of these columns should be applied
238:03 - with a particular color so how we can
238:05 - achieve that basically this is called
238:07 - vertical zebra strips in order to add
238:09 - the background color on every other
238:11 - table column in this case so guys what
238:14 - we can do is instead of having the table
238:16 - row we will be having the th and the TD
238:20 - in this case so since this particular
238:22 - cell is being defined with th and these
238:24 - cells are defined with the help of TD
238:26 - Tex we need to apply The Styling to the
238:29 - th and the TD tags over here so instead
238:32 - of having TR we will say th and then
238:35 - similarly we will copy this and we will
238:37 - provide comma and then paste this once
238:40 - again and this time we will say TD over
238:42 - here so guys to the T tag we are
238:44 - applying the nth child and then it
238:47 - should be even in this case and
238:48 - similarly for TD tag as well separated
238:51 - by a comma in this case we are applying
238:54 - the nth child and it is even in this
238:57 - case and we are having the same color
238:59 - that is the background color that is
239:01 - aqua over here so let me just save this
239:03 - file now and try reloading this page on
239:05 - the browser so as you can see we are
239:07 - getting column wise over here the even
239:09 - columns are having the background color
239:11 - as Aqua in this case and that is how we
239:13 - can simply achieve the vertical zbra
239:16 - strips over here now guys how do we
239:18 - combine the vertical and horizontal zbra
239:20 - strips so simply we can include the TR
239:23 - tag as well once again over here in this
239:25 - case I'll simply copy this particular
239:27 - section of this line and then after
239:30 - providing comma we will have TR as well
239:32 - over here so we say TR for which the nth
239:35 - child is even over here so for all the
239:38 - even rows and for all the even columns
239:40 - as well this particular background color
239:43 - will be applied so let me just save this
239:45 - file now and try reloading this page on
239:47 - the browser so as you can see the even
239:50 - columns are having the background color
239:52 - as well as the even rows that is the
239:54 - second row and the fourth row is also
239:56 - having the background color as Aqua
239:58 - which we have defined over here in the
240:00 - vs code so guys this is the way that we
240:02 - can achieve the combined vertical and
240:05 - horizontal zra strips in the HTML table
240:08 - now guys how we can provide the
240:09 - horizontal dividers over here so let us
240:12 - remove all the styling for now in this
240:14 - case so I'll remove all the lines from
240:16 - the style tag over here let me just save
240:19 - this file now and try reloading this
240:21 - page so there is no styling to this
240:23 - particular table right now so what are
240:25 - horizontal dividers so basically this is
240:28 - nothing but this is a simple bottom line
240:30 - over here that we want to draw after
240:33 - each row so how we can achieve that so
240:35 - guys simply we can provide the Border
240:37 - bottom property to all the table rows
240:40 - inside the table so what we have to do
240:42 - is inside the style tag we have to
240:45 - define the TR tag over here and inside
240:48 - the open and close curly braces we will
240:50 - be having the border and this time it
240:53 - will be applied to the bottom only so
240:56 - over here we will say 1 pixel border
240:58 - width and then we have the Border style
241:00 - as solid and then the color of the
241:02 - Border will be black color in this case
241:04 - so guys basically this border bottom
241:06 - will only be applied to the bottom of
241:09 - all the rows and not on all the four
241:11 - sides of the rows in this case so let
241:13 - let me just save this file now and try
241:15 - reloading this page on the browser so
241:17 - guys there is no change for now we
241:19 - cannot see the horizontal divider that's
241:21 - because we have not provided the Border
241:23 - collapse property to the table so over
241:26 - here what we need to do is we can Define
241:28 - the table tag as well and inside the
241:30 - table tag we need to provide the Border
241:33 - collapse property over here and the
241:35 - value of this border collapse property
241:37 - will be collapse in this case let me
241:39 - just save this file now and try
241:41 - reloading this page on the browser once
241:43 - again so now you can see that a
241:45 - horizontal divider is being displayed to
241:47 - all the table rows over here now guys
241:50 - let us move to another task over here we
241:52 - will be seeing hoverable table which can
241:54 - be achieved by using a hover selector to
241:57 - all the TR elements so guys what this
242:00 - will do is whenever we will get our
242:02 - cursor on the table Row the table row
242:05 - must be highlighted with some background
242:07 - color over here so let us achieve that
242:10 - in the vs code let me just remove all
242:12 - the styling over here and then let me
242:14 - just save this file now and try
242:15 - reloading this page on the browser now
242:18 - guys over here simply we will have the
242:19 - borders for the table and the table data
242:22 - so over here we have the table tag we
242:25 - have the table header and the table data
242:27 - tags as well and for this we will have
242:30 - the Border as one pixel width and the
242:33 - Border style will be solid and the color
242:35 - will be black in this case so guys let
242:38 - me just save this file now and try
242:39 - reloading this page on the browser let
242:42 - me provide the Border collapse property
242:44 - as well to the table tag over here so we
242:47 - have border collapse in this case for
242:51 - which the value is collapsed now and
242:53 - guys we will also provide the padding of
242:55 - six pixels over here so that we get to
242:58 - see certain spacing in between the
243:00 - content and the edges of the borders in
243:03 - this case so guys as you can see we are
243:05 - now having a decent table being
243:07 - displayed on this HTML page now guys let
243:09 - us implement the hover selector over
243:11 - here so what we can do is we can def
243:13 - find the TR tag that's because on a
243:16 - particular row if we get the cursor the
243:19 - entire row needs to be highlighted over
243:21 - here so after the TR tag we have colon
243:25 - and then simply we can provide hover so
243:27 - as you can see it applies while the user
243:29 - designates an element with a pointing
243:31 - device a mouse cursor in this case so
243:34 - basically we will use this hover and
243:36 - then what we will do is we will have a
243:38 - background color in this case so
243:40 - basically what we are saying is whenever
243:42 - user gets the Cur
243:44 - on a particular row of the table the
243:46 - background color will be set to this
243:48 - particular color that we are going to
243:50 - Define so guys let's say we Define the
243:52 - color that is gray in this case so gray
243:55 - color will be displayed as the
243:57 - background color for the entire row when
243:59 - we get the cursor on a particular row of
244:02 - the table so guys let me just save this
244:04 - file now and try reloading this page on
244:06 - the browser so after reloading if you
244:09 - see now when we get the cursor over here
244:12 - on the table Row the background ground
244:14 - color of the entire row is being set to
244:16 - the gray color now guys this is the way
244:18 - that we can use the hover selector in
244:21 - order to highlight a particular row
244:23 - inside the HTML table so now we will see
244:25 - table call group teag in HTML so guys
244:28 - basically the call group element is used
244:31 - to style specific Columns of a table so
244:34 - the call group element should be used as
244:37 - a container for the column
244:39 - specifications so guys previously we had
244:41 - created a table containing the calendar
244:43 - for the month of February for a
244:45 - particular year as you can see the first
244:47 - row is having all the name of the days
244:50 - over here and the other rows are having
244:53 - the dates of the month over here from 1
244:55 - to 28 and we are also having the table
244:58 - caption that is calendar over here and
245:00 - the source code as you can see in this
245:02 - vs code over here we had defined the
245:04 - table tag and then after that we had the
245:07 - caption that is calendar which is being
245:09 - displayed at the top of the table over
245:11 - here and then the first row is having
245:13 - the names of the days in the month and
245:15 - then guys we have the remaining rows
245:18 - that are defining the dates over here
245:20 - for the month of February which is
245:21 - having the dates from 1 up to 28
245:24 - considering that the year is not a leap
245:26 - year so guys what we are going to do is
245:28 - we are going to style only particular
245:31 - columns over here which can be done by
245:33 - using the call group tag so as you can
245:35 - see the call group element should be
245:37 - used as a container for the column
245:40 - specifications which we are going to see
245:41 - with the help of examples as well and
245:44 - each group is specified with a call
245:46 - element over here so guys basically
245:49 - inside the call group tag we will also
245:51 - have the call Tag which is going to
245:53 - Define which columns need to have a
245:55 - particular style so guys the span
245:57 - attribute inside the call Tag will
246:00 - specify how many columns that get the
246:03 - style over here and then we have the
246:05 - style attribute as well which specifies
246:07 - the style to give the columns so guys we
246:09 - will check this with the help of example
246:11 - as well and we can also have multiple
246:13 - call Elements inside call group tag so
246:16 - guys let us move to the vs code over
246:17 - here and let's say based on our
246:19 - requirements we want to have the
246:21 - background color for the first two days
246:24 - over here that is Monday and Tuesday and
246:26 - both these columns should have the
246:28 - background color as yellow over here so
246:30 - how we can Implement that so guys
246:32 - basically the call group tag can help us
246:35 - in order to achieve this task and this
246:38 - should come inside the table tag and
246:40 - after the caption tag so guys always
246:42 - remember if you are having the caption
246:45 - tag as well as the call group tag to be
246:47 - implemented so it will always come after
246:49 - the caption tag over here so as you can
246:52 - see this is the call group tag that we
246:54 - are going to use and it is having the
246:56 - starting tag and the ending tag over
246:58 - here which will just act as a container
247:01 - and then guys what we can do is we have
247:02 - to come inside this call group tag and
247:05 - then we can create the call Tag over
247:07 - here this call Tag is not going to have
247:09 - the end tag over here but we are going
247:11 - to have certain attributes that is the
247:14 - span attribute and the style attribute
247:16 - so guys the span attribute will Define
247:18 - how many columns need to have the style
247:21 - that we are going to Define so guys over
247:23 - here the span attribute will have the
247:25 - value as two that's because the first
247:28 - two columns need to have the background
247:30 - color as yellow as per our requirement
247:32 - so guys we come over here we provide the
247:35 - span as two and then we provide the
247:37 - style attribute over here and inside the
247:39 - style attribute we can easily provide
247:41 - the background color property and this
247:44 - background color property will have the
247:47 - name of the color as yellow as per our
247:49 - requirement so guys over here we have
247:51 - provided the background color is yellow
247:53 - for the call Tag which is having the
247:55 - value of span attribute s two over here
247:58 - so guys let me just save this file now
247:59 - and try reloading this page on the
248:01 - browser so as you can see the first two
248:04 - columns are having the color that is
248:06 - yellow guys I'll remove this hover
248:08 - property as well over here since it is
248:10 - not required for now so this is the
248:12 - hover property that that we had provided
248:14 - let me just save this file now and try
248:16 - reloading this page once again so now as
248:18 - you can see the first two columns are
248:20 - having the background color is yellow
248:23 - now guys let us say we have another
248:24 - requirement wherein we want to have the
248:27 - background color for Wednesday and
248:29 - Thursday as some other color so what we
248:31 - can do is again we can create a call tag
248:34 - over here so guys once again when we
248:35 - create the call tag and now we need to
248:38 - provide the span of two once again so
248:40 - that the third and the fourth column can
248:43 - be painted Ed with a particular
248:44 - background color so guys over here we
248:46 - provide the spam is equal to 2 and then
248:49 - again we provide the style attribute and
248:51 - then we use the background color
248:53 - property so guys in the background color
248:56 - let's say we want to provide the color
248:58 - as Aqua over here so guys the Wednesday
249:01 - and Thursday column should have the aqua
249:03 - color as the background color now that's
249:05 - because we have provided the span as two
249:08 - after the first call Tag over here so
249:10 - let me just save this file now and try
249:12 - reloading this page once again so as you
249:14 - can see these two columns are having the
249:17 - different background color now and that
249:19 - is the meaning of using the call group
249:21 - as a container and using the call
249:24 - Elements over here we can specify how
249:26 - many columns we want to style based on
249:29 - our requirements and we can provide the
249:31 - properties of the style attributes over
249:33 - here in this same call tag and then guys
249:35 - again we can have the multiple call tags
249:37 - over here in order to provide different
249:40 - styling properties to the remaining
249:42 - Columns of the table now guys let us say
249:44 - we want to skip this particular column
249:46 - and we want to color Saturday and Sunday
249:49 - with some other color so what we have to
249:51 - do is first of all we need to skip the
249:53 - column having the Friday label over here
249:56 - so we will be creating another call
249:58 - element in this case and then guys over
250:00 - here the span attribute should have the
250:02 - value as one and it will be a blank call
250:05 - element which means it is not going to
250:08 - have any style attribute over here
250:10 - that's because we don't want to provide
250:12 - any styling for this particular column
250:14 - that is having the Friday label and then
250:16 - guys what we can do is after providing
250:18 - this span is equal to 1 for this
250:20 - particular call element we can create
250:23 - another call element and this time the
250:25 - span must be two that's because this
250:28 - third call element is helping us in
250:30 - order to skip this column that is Friday
250:33 - and then we will move to Saturday and
250:35 - Sunday and that is why we can provide
250:37 - the span as two over here so that the
250:39 - style is applied to the last two columns
250:42 - so guys over here we will Pro provide
250:43 - the style and then let's say we provide
250:45 - the background color property and let's
250:48 - say we provide the color as yellow green
250:50 - in this case so guys let me just select
250:53 - this yellow green color let me just save
250:55 - this file now and if you notice the
250:57 - Friday column should be skipped over
250:59 - here that's because we have provided the
251:01 - blank call element in this case and then
251:04 - Saturday and Sunday should have the
251:05 - yellow green color as the background
251:07 - color so after saving this file let me
251:09 - just reload this page once again on the
251:11 - browser so as you can see see Saturday
251:14 - and Sunday is being styled with the
251:16 - background color that is yellow green in
251:18 - this case so guys in this way if you
251:20 - want to skip any of the columns over
251:22 - here you can provide the blank call
251:24 - element in this case whatever number of
251:26 - columns you want to style based on your
251:28 - requirements you can provide that many
251:30 - number of columns in the span attribute
251:33 - of the call tag in this case which will
251:35 - come under the container that is being
251:37 - defined by this call group tag guys
251:39 - apart from this you can also have the
251:41 - visibility property equal to collapse
251:44 - value which can be used to hide the
251:46 - columns so guys let us say in this
251:49 - particular table where Friday column is
251:51 - not having any style if you want to hide
251:54 - this particular column in this table so
251:56 - what we can do is we can come over here
251:59 - and to this call element which is the
252:01 - empty element in this case where we have
252:03 - specified just one column over here with
252:06 - the help of this pen attribute we can
252:08 - provide the style attribute in this case
252:10 - and then we can use the visibility
252:12 - properties so guys this visibility
252:14 - property will have the collapse value
252:16 - and when we use this particular value
252:19 - the column will be hidden when it is
252:21 - displayed in the HTML page so guys let
252:24 - me just save this file now and try
252:26 - reloading this page once again on the
252:27 - browser so as you can see the Friday
252:30 - column that was displayed is now being
252:32 - hidden over here due to the visibility
252:35 - property that is set to the collapse
252:37 - value so now we will see unordered list
252:40 - in HTML so guys HTML unordered list is
252:44 - used to group a set of related items in
252:47 - list and we are going to check this with
252:49 - the help of examples as well now an
252:51 - unordered list starts with the UL tag
252:54 - over here so as you can see we have the
252:57 - less than symbol and Then followed by UL
252:59 - which stands for unordered list and then
253:02 - we have the greater than symbol over
253:03 - here and this is the starting tag of
253:05 - unordered list we have the ending tag as
253:08 - well now each list item starts with the
253:12 - lii tag over here here so we have the
253:13 - less than symbol followed by the Li and
253:16 - then greater than symbol in order to
253:18 - define the list item inside the
253:20 - unordered list and then guys the list
253:23 - items will be marked with bullets that
253:25 - is the small black circles by default so
253:28 - guys let us check this with the help of
253:30 - examples now how we can Define the
253:32 - unordered list in the HTML page so guys
253:35 - over here I have defined the title as
253:37 - the unordered list in HTML simply we
253:40 - will have the paragraph inside the body
253:43 - and this paragraph will say that below
253:45 - content is an unordered list so we have
253:48 - defined a very simple paragraph having
253:50 - the statement below content is an
253:52 - unordered list now guys we will use the
253:55 - UL tag over here so when we type UL as
253:58 - you can see vs code is suggesting us
254:00 - this UL tag and we have created the
254:02 - starting tag and the ending tag in this
254:04 - case now guys inside this UL tag we need
254:07 - to define the list of items so we will
254:10 - be using the LI tag over here so when we
254:13 - we use the LI tag it is also having the
254:15 - starting tag and the ending tag over
254:17 - here and inside the LI tag we can Define
254:20 - the name of the item so let's say we
254:23 - Define coffee as one of the items over
254:26 - here and then similarly we will have
254:27 - more items so I'll copy this and paste
254:30 - this over here in the next lines and
254:32 - then let's say we Define another item as
254:34 - T and then one more item as milk in this
254:37 - case so guys we have three items over
254:40 - here inside the list which is being
254:42 - defined as is the unordered list now
254:44 - guys let me just save this file now and
254:46 - try reloading this page on the browser
254:49 - to see how the list items will be
254:51 - displayed so as you can see this is the
254:53 - list items I'll simply zoom in so that
254:55 - you can see the content properly so this
254:58 - is the way that unordered list items are
255:00 - being displayed with the help of the
255:02 - circular bullets over here in black
255:04 - color so guys this is the default
255:06 - appearance of the unordered list we can
255:09 - have any number of list items in this
255:11 - unordered list so over here let's say we
255:14 - create more items so we can simply copy
255:17 - and paste these list items in this case
255:20 - and let's say we say Coca-Cola over here
255:22 - as another drink and then let's say we
255:24 - have another list item as Pepsi so let
255:27 - me just save this file now and try
255:29 - reloading this page once again on the
255:30 - browser as you can see now we have five
255:33 - items in this case and all the items are
255:35 - having the prefix in this case it is a
255:37 - circular bullet over here which is
255:39 - defined as the unordered list which is
255:42 - not having any order now guys we can
255:44 - also change this appearance of the
255:46 - bullet in this case so as you can see we
255:49 - can use the list style type over here as
255:51 - the CSS property for the unordered list
255:55 - tag so what we have to do is inside the
255:57 - UL tag we need to define the style
255:59 - attribute so inside the style attribute
256:02 - we can say list style type over here so
256:05 - this is the property that we can use and
256:08 - it is having multiple values that you
256:10 - can see and the disk value is the
256:12 - default default value that is being seen
256:14 - right now so what we can do is we can
256:16 - change the value to Circle in this case
256:19 - so when we set the value to Circle it
256:21 - will be a circular appearance instead of
256:23 - a bullet appearance for the unordered
256:25 - list so guys let me just save this file
256:27 - now and try reloading this page on the
256:29 - browser so as you can see small circles
256:32 - are being displayed now for each and
256:34 - every item inside the unordered list and
256:37 - that is the meaning of the circle value
256:39 - for this list style type another value
256:42 - can be a square sare value as well so we
256:44 - can have the Square value let me just
256:46 - save this file now and try reloading
256:48 - this page once again on the browser so
256:50 - as you can see we have the squares now
256:53 - that are being displayed for this
256:54 - unordered list items now guys we can
256:57 - also have the nested list as well so
256:59 - let's say we want to describe more items
257:02 - inside this T that is we want to Define
257:04 - black T as well as green te in this case
257:07 - so we can have another unordered list
257:10 - inside this list item so what we have to
257:13 - do is we have to come over here and for
257:15 - this list item that is T in this case we
257:18 - can Define another unordered list by
257:20 - using the UL tag over here and inside
257:23 - the UL tag again we can have the LI tag
257:25 - in order to define the list item so
257:28 - let's say we have black T in this case
257:31 - so we Define black T and then again
257:33 - let's say we have another list item and
257:36 - this time we say green te so over here
257:39 - we have defined green te in this case
257:41 - let me just save this file now and try
257:43 - reloading this page on the browser to
257:45 - see how it looks so as you can see black
257:47 - tea and green tea are being displayed
257:50 - inside this list item that is T with a
257:52 - circular appearance over here so guys in
257:54 - this way we can also have the nested
257:56 - unordered list apart from this this list
257:59 - item can also be an image or a link as
258:02 - well which is pointing to another web
258:04 - page over here so guys you can try those
258:06 - things as well as a homework for you so
258:08 - that you can practice on your own so so
258:10 - now we will see ordered list in in HTML
258:13 - so guys HTML ordered list is used to
258:16 - group a set of related items in list and
258:20 - they will be having a particular order
258:22 - in which we Define them now guys an
258:24 - ordered list starts with the o tag over
258:27 - here so we have the less than symbol
258:29 - followed by o which is ordered list and
258:32 - Then followed by the greater than symbol
258:35 - and then inside the list each list item
258:38 - starts with the lii tag in this case so
258:40 - guys the list items will be marked with
258:42 - the numbers by default so let us check
258:45 - this with the help of examples in VSS
258:47 - code over here so guys previously we had
258:49 - written the unordered list items in this
258:52 - case and this is how the unordered list
258:54 - items looks on the web browser now guys
258:57 - what we will be doing is we will Define
258:59 - the ordered list as well below this
259:01 - unordered list so simply we are going to
259:03 - have a paragraph and then we will say
259:06 - below content is in ordered list we have
259:09 - a very simple statement that is below
259:12 - content is in in ordered list now guys
259:14 - we can simply use the o tag over here so
259:17 - when we type O as you can see this is
259:19 - the starting o tag and the ending o tag
259:22 - so in between these o Texs we will be
259:24 - defining our list items so we can simply
259:27 - have the Ali starting and the ending tag
259:29 - over here and then guys let's say we
259:32 - want to have the list of programming
259:34 - languages over here in a particular
259:36 - order so let's say we Define the first
259:38 - list item as Python and then we copy and
259:41 - paste this line of code to the remaining
259:43 - lines and then let's say we have another
259:45 - programming language that is Java and
259:47 - then let's say we have C++ over here and
259:50 - then let's say we have dot in this case
259:52 - guys we have taken these programming
259:54 - languages just for the example to show
259:56 - how the list items will be displayed in
259:59 - the ordered list it doesn't mean that
260:01 - python is ranked number one over here
260:03 - and Java is ranked number two over here
260:06 - this is just for the example purpose and
260:08 - all of the programming languages have
260:10 - their own advantages and disadvantages
260:12 - so let me just save this file now and
260:14 - try reloading this page once again on
260:16 - the browser so as you can see we have
260:19 - the paragraph that is below content is
260:20 - in ordered list and then we have all the
260:23 - programming languages that we have
260:24 - listed python Java C++ and Dot so guys
260:28 - as I have told you this is not the
260:30 - rankings that we are giving to the
260:32 - programming languages you can learn
260:34 - based on your interest and each and
260:36 - every programming language have their
260:38 - own advantages and disadvantages and if
260:41 - you want to learn more about python
260:42 - Python and Java programming languages I
260:44 - have created lot of videos related to
260:47 - the tutorials of these programming
260:49 - languages along with it we have also
260:51 - covered multiple Python and Java
260:53 - programs with the help of examples so
260:56 - guys you can watch all those videos
260:57 - which I have added in the playlist the
260:59 - links I have given Below in the
261:01 - description section so guys this is a
261:03 - way in order to display the ordered list
261:05 - in this case where by default we get the
261:08 - numbers that is 1 2 3 4 and so on based
261:12 - on the number number of list items in
261:13 - this case now guys we can also have the
261:15 - type attribute inside the o tag in order
261:19 - to mention how the list items should be
261:22 - displayed so by default as you can see
261:24 - over here the numbers are being
261:25 - displayed in this case but we can also
261:28 - have letters over here so let's say if
261:30 - you want to display all these
261:32 - programming languages with the help of
261:33 - the uppercase characters so what we have
261:36 - to do is inside the o tag we have
261:38 - something called as type attribute so as
261:41 - you can see it indicates it's the
261:42 - numbering type so it can be a lowercase
261:45 - letter or the uppercase letter or it can
261:48 - also have the Roman numerals as well so
261:51 - over here right now we will be using the
261:53 - uppercase letter in this case so let's
261:55 - say we provide capital A over here so
261:58 - let me just save this file now and try
261:59 - reloading this page once again on the
262:01 - browser so as you can see now the
262:04 - programming languages are being numbered
262:06 - with the uppercase characters that is a
262:08 - b c d and so on so guys similarly we can
262:12 - have the lowercase characters as well
262:14 - over here we need to provide the type
262:16 - that is lowercase a in this case so let
262:19 - me just save this file now and try
262:20 - reloading this page once again on the
262:22 - browser so as you can see we have a b c
262:25 - d and so on the lowercase letters are
262:28 - being displayed and these are used as
262:30 - the numbers for the ordered list we can
262:32 - also have the Roman numbers as well so
262:34 - let's say we provide capital I over here
262:37 - so let me just save this file now and
262:38 - try reloading this page so as you can
262:40 - see these are the Roman number numbers 1
262:43 - 2 3 4 and so on based on the number of
262:47 - the list items all the Roman numbers
262:49 - will be displayed over here in the
262:50 - ordered list now guys apart from this we
262:53 - also have the start attribute of the o
262:55 - tag so guys let us move to the default
262:58 - numbering system over here so we will
263:00 - change this type value to one in this
263:02 - case let me just save this file now and
263:04 - try reloading this page once again on
263:06 - the browser so we are getting 1 2 3 4
263:09 - and so on but guys let's say if you want
263:12 - to start start with some other number
263:14 - let's say we want to start with the
263:15 - fifth number over here so what we can do
263:18 - is for the o tag we have the start
263:20 - attribute so over here we can provide
263:22 - the start attribute as you can see this
263:25 - integer attribute specifies the start
263:28 - value for the numbering of the
263:30 - individual list items so we can say that
263:33 - whatever value we provide to the start
263:36 - attribute from that value the list items
263:38 - will start so let's say we provide the
263:40 - number five in this case let me just
263:42 - save this file now and try reloading
263:44 - this page once again on the browser so
263:46 - as you can see the numbering is starting
263:48 - from the number that is five and then we
263:50 - have 6 7 8 and so on so guys in this way
263:54 - we can easily use the start attribute as
263:56 - well in order to start the ordered list
263:59 - from a particular number now guys we can
264:01 - also have the nested ordered list as
264:03 - well so inside one of the list items we
264:06 - can have another ordered list so let's
264:09 - say inside the Java list in this case we
264:12 - want want another ordered list over here
264:14 - so what we can do is after the ending
264:16 - tag of this Java list item we come over
264:19 - here and then we provide the ordered
264:22 - list tag that is O and then we again
264:24 - Define the list items and then let's say
264:27 - we want to define the Java versions 19
264:29 - and 20 so over here we will say Java
264:33 - version 19 and then we will have another
264:36 - list item and then we will say Java
264:39 - version 20 in this case as the second
264:42 - list item inside the nested ordered list
264:45 - over here within Java list item so guys
264:48 - let me just save this file now and try
264:50 - reloading this page once again on the
264:51 - browser so as you can see inside this
264:54 - Java list item we have two more elements
264:57 - that we have defined which is again an
264:59 - ordered list over here that is being
265:01 - numbered as 1 and two and it is saying
265:04 - Java version 19 and Java version 20 in
265:07 - this case so guys in this way we can
265:09 - also have the nested ordered list over
265:11 - here and B based on our requirements we
265:13 - can also have images and other links
265:16 - over here inside of the simple text that
265:18 - we have defined in this ordered list and
265:20 - if you want to have the unordered list
265:22 - over here we can do that as well so
265:24 - instead of using the o tag in this case
265:27 - we can use the UL tag over here which
265:29 - defines the unordered list so we have
265:31 - changed the starting and the ending tag
265:34 - to the unordered list in this case let
265:36 - me just save this file now and try
265:38 - reloading this page once again on the
265:39 - browser so as you can see now a small
265:42 - circle is being displayed instead of the
265:44 - numbers over here which is the unordered
265:46 - list that we have defined inside the
265:48 - nested order list so Guys these are
265:51 - certain ways in order to display the
265:53 - ordered list and the nested ordered list
265:55 - as well so now we will see description
265:57 - list in HTML so guys a description list
266:00 - is a list of terms with a description of
266:03 - each term so let's say we have the list
266:05 - of items and we want to have some
266:08 - description for each and every item
266:10 - inside the list so we will be using the
266:12 - description list in HTML in such cases
266:16 - so guys we have the DL tag over here
266:18 - which defines the description list and
266:21 - then inside the DL tag we can have the
266:23 - DT tag which defines the term that is
266:26 - the list item that we want to Define and
266:28 - we also have the DD tag which describes
266:31 - each term that we have listed in the DT
266:34 - tag over here so guys let us check this
266:36 - with the help of examples in VSS code
266:38 - over here so previously we had seen the
266:41 - unordered list and the ordered list so
266:43 - I'll quickly remove these lines of code
266:45 - over here and then we will say below
266:47 - content is in description list in this
266:49 - case so guys we have a very simple
266:51 - statement below content is in
266:53 - description list and then we will also
266:55 - change description list in HTML now guys
266:59 - the main tag that we are going to use
267:01 - over here is the DL tag over here so we
267:04 - have the description list starting in
267:06 - the ending tag and then we are going to
267:08 - define the term that is the list item
267:11 - using the DT tag so over here we provide
267:14 - DT and then let's say we provide coffee
267:17 - as one of the list items over here and
267:20 - then guys what we can do is we can have
267:22 - the DD tag that describes the coffee
267:25 - item over here so we provide the Double
267:28 - D tag in this case and then we can
267:30 - simply say black hot drink in this case
267:33 - so over here we are just providing
267:35 - certain description for this coffee over
267:38 - here now guys let us say we have another
267:40 - element so again we will have the tag
267:42 - over here and then let's say we have
267:44 - milk in this case and then we will
267:46 - describe it with certain statement so
267:49 - let's say we have white cold drink in
267:52 - this case so guys basically we are
267:54 - describing what milk is over here so
267:56 - this is the format that we can use
267:58 - inside the DL tag first we have the DT
268:01 - tag and Then followed by The Double D
268:03 - tag over here in order to describe the
268:06 - DT term and then again we have more list
268:09 - items along with their descriptions so
268:11 - guys let let me just save this file now
268:13 - and try reloading this page once again
268:15 - on the browser so as you can see below
268:18 - content is in description list so this
268:20 - is the list of items that we have so
268:23 - first item we have coffee and then we
268:25 - have the description that is black hot
268:28 - drink over here and then the second item
268:31 - is milk which is a white cold drink in
268:33 - this case so guys if you have the
268:35 - requirement in such a way that you want
268:37 - to describe certain list of items over
268:40 - here you can have the description deson
268:42 - list in this case and use these DT and
268:45 - the DD tags over here in order to define
268:48 - the terms and the descriptions as well
268:50 - so now we will see class attribute in
268:53 - HTML so guys the HTML class attribute is
268:56 - used to specify a class for an HTML
268:59 - element and multiple HTML elements can
269:02 - share the same class so guys the basic
269:05 - idea behind using the class attribute is
269:08 - to provide certain styling to that
269:10 - particular HTML element and apart from
269:12 - this we can have the same class name
269:15 - being defined for the multiple HTML
269:17 - elements so that they can share the same
269:20 - styling now guys the Syntax for CSS of
269:23 - class is in such a way that to create a
269:26 - class we first write a period that is
269:29 - dot character over here and then
269:31 - followed by the name of the class that
269:33 - we have defined for that particular HTML
269:36 - element and then guys we Define the CSS
269:38 - properties within the curly braces so
269:41 - guys this dot character followed by the
269:43 - class name will be defined inside the
269:46 - style tag that we Define under the head
269:49 - section of the HTML page and then we are
269:52 - going to define the style properties
269:54 - inside the curly braces so guys let us
269:56 - check this with the help of examples now
269:58 - in the vs code over here so guys we have
270:01 - updated the title to class attribute in
270:03 - HTML and let's say we have the paragraph
270:06 - tag over here so we say P tag and then
270:09 - we will say this is first p paragraph So
270:13 - guys we have a very simple statement
270:14 - that is this is first paragraph and
270:17 - let's say we have another paragraph over
270:19 - here and we say this is second paragraph
270:22 - in this case now guys let's say we want
270:24 - to provide certain background color to
270:27 - this paragraph so what we can simply do
270:29 - is we can come over here to the P tag
270:31 - and inside the P tag we can provide the
270:34 - style attribute and then we can simply
270:36 - have the background color and let's say
270:38 - we provide the background color as
270:40 - yellow so let me just save this file now
270:42 - and try reloading this page once again
270:44 - on the browser so as you can see the
270:47 - first paragraph is having the background
270:49 - color that is yellow but the second
270:51 - paragraph is not having the background
270:53 - color so what we can do is we can simply
270:55 - copy paste this background color
270:57 - property of the style attribute to the
271:00 - second paragraph tag as well but guys in
271:02 - this way our code will become little
271:04 - complex and it will be little difficult
271:06 - in order to read the HTML code and with
271:09 - the increasing number of The Styling
271:11 - property the HTML code will become more
271:14 - worse if someone else is going to read
271:16 - your HTML code in future so guys what we
271:19 - can do is we can Define the class over
271:21 - here for the P tag in this case so
271:24 - simply we come inside the P tag over
271:26 - here and then we say class in this case
271:29 - and then let's say we give the name of
271:31 - the class as BG color so guys it depends
271:34 - on you what name you provide to your
271:37 - classes when you use in the HTML
271:39 - elements but make sure that these are
271:41 - sensible names and we can come to know
271:43 - the meaning of it what exactly the class
271:46 - name means and also these class names
271:48 - are case sensitives so you have to use
271:50 - the exact names over here and then again
271:53 - guys what we can do is name and paste to
271:55 - the second P tag as well so that we can
271:58 - Define the classes in both the paragraph
272:00 - tags now guys let me just save this file
272:02 - now and try reloading this page once
272:04 - again on the browser so as you can see
272:07 - we simply have the two State stying
272:09 - properties that we have defined for this
272:11 - particular class name that is BG color
272:14 - so now what we will do is we will come
272:16 - inside the head section and then we will
272:18 - Define the style tag over here now guys
272:21 - as I have told you this is the syntax
272:23 - that we first have to mention the period
272:25 - that is the dot character and Then
272:27 - followed by the class name so over here
272:30 - we provide the dot character and then
272:32 - the class name that is BG color over
272:35 - here now guys make sure that the name of
272:38 - this class name is matching with the
272:40 - class name that we have provided
272:41 - provided in the HTML elements so we can
272:44 - simply copy and paste over here in order
272:47 - to avoid any mistakes so this is the
272:49 - format that is we have the dot character
272:52 - followed by the name of the class and
272:54 - then what we have to do is we need to
272:56 - provide the open and close curly braces
272:59 - inside which we will be defining our
273:01 - styling properties now guys we will
273:03 - provide the background color over here
273:05 - so we can simply say background color in
273:07 - this case and then let's say the
273:09 - background color is yellow over here now
273:12 - let me just save this file now and since
273:14 - the classes are being mentioned in both
273:16 - the HTML elements that is both the
273:19 - paragraph text so in this case both the
273:21 - paragraphs should have this background
273:23 - color that is yellow now so let me just
273:26 - save this file now and try reloading
273:28 - this page once again on the browser so
273:30 - as you can see we have the background
273:31 - color that is yellow in this case and in
273:34 - this way we can easily use the classes
273:36 - in HTML in order to provide certain
273:39 - styling properties to the HTML element
273:42 - now guys apart from this we can also
273:44 - have different HTML elements that can
273:46 - use the same class attribute so what we
273:49 - can do is let's say we have div element
273:52 - over here so we Define another div
273:54 - element and we will say this is first
273:58 - div element and then let's say we have
274:01 - another second div element and we will
274:03 - Define the content as this is second Dev
274:06 - element in this case let me just save
274:08 - this file now and try reloading this
274:10 - page once again on the browser so as you
274:13 - can see we have both the div elements
274:15 - over here being displayed but let's say
274:17 - if we want to provide the same styling
274:19 - properties that is being applied to the
274:21 - first two paragraphs over here to the
274:23 - div elements as well so what we can do
274:25 - is simply we can Define this class that
274:28 - is BG color over here inside the div
274:30 - element as well so I'll copy this and
274:32 - paste it inside both the div elements
274:35 - let me just save this file now and try
274:37 - reloading this page once again on the
274:39 - browser so as you can see the styling
274:41 - prop properties to the div elements are
274:43 - also applied and in this way we can have
274:46 - the same class name being used for
274:48 - different HTML elements if we want to
274:51 - apply those styling properties now guys
274:53 - another important thing is the HTML
274:56 - element can also have multiple classes
274:58 - associated with it so let's say we have
275:01 - another class over here so we Define The
275:03 - Styling of another class so let's say we
275:06 - have the dot character followed by font
275:09 - size in this case the curly Braes we
275:12 - will Define the font size over here so
275:15 - let's say we have the font size property
275:17 - and we Define it as 26 pixels in this
275:20 - case so guys let's say we want the first
275:23 - paragraph to have this font size as 26
275:26 - pixels so what we can do is since this
275:29 - class name is font size we can apply
275:31 - this class name to the first paragraph
275:34 - tag over here inside the class attribute
275:36 - but along with this we also want the BG
275:39 - color to be applied so that it also has
275:41 - the background color over here so what
275:43 - we can do is after this BG color we can
275:46 - provide the space character and then
275:48 - provide the name of the class that is
275:50 - font size in this case so guys we have
275:53 - applied multiple class names over here
275:56 - which are separated by the space
275:57 - characters and those styling properties
276:00 - from multiple classes will be applied to
276:03 - such HTML element which is mentioning
276:05 - multiple classes over here so in this
276:08 - case the first paragraph will be having
276:10 - the font size as 20 6 pixels and the
276:13 - other HTML elements will be having the
276:15 - default font size so let me just save
276:18 - this file now and try reloading this
276:20 - page once again on the browser so as you
276:22 - can see this is first paragraph is
276:24 - having the font size of 26 pixels
276:27 - compared to the other HTML elements that
276:30 - are being displayed with the default
276:32 - font size so guys in this way we can
276:34 - also combine the multiple styling
276:36 - properties from different classes and
276:38 - apply it to a single HTML element by
276:41 - using using those class names which will
276:43 - be separated by a space character over
276:45 - here so Guys these are the certain
276:46 - things that you should know while using
276:48 - the class names this property of HTML
276:51 - helps us in order to provide the similar
276:54 - styling properties to multiple HTML
276:57 - elements irrespective of their tags so
276:59 - now we will see ID attribute in HTML so
277:03 - guys the HTML ID attribute is used to
277:06 - specify a unique ID for an HTML element
277:10 - and we can use the styling Properties by
277:12 - using this ID attribute that we are
277:14 - going to check with the help of examples
277:16 - as well now guys you cannot have more
277:18 - than one element with the same ID in an
277:21 - HTML document previously we had seen
277:24 - that the class attribute name can be
277:27 - applied to more than one element but
277:29 - when we are using ID attribute we cannot
277:32 - assign it to more than one HTML element
277:35 - inside the HTML document and the Syntax
277:38 - for CSS of ID is in such a way that
277:42 - first we write a hash character so as
277:44 - you can see this is the hash character
277:46 - over here and then followed by the ID
277:48 - name in this case and then we Define the
277:51 - CSS properties within the curly braces
277:54 - so guys let us check this with the help
277:56 - of example now in the vs code over here
277:59 - so guys let's say we have the two
278:00 - paragraphs and then we have the content
278:02 - inside the first paragraph s this is
278:05 - first paragraph and then let's say we
278:08 - have another paragraph over here and
278:10 - then we will say this is second
278:12 - paragraph in this case now guys let's
278:14 - say we want to define the ID for this
278:16 - first paragraph over here so inside the
278:19 - starting P tag we provide the space
278:21 - character and Then followed by the ID
278:23 - attribute as you can see it defines a
278:26 - unique identifier which must be unique
278:29 - in the whole document so we are going to
278:31 - use this ID attribute and then we are
278:33 - going to say par one in this case so
278:36 - guys this is the name of the ID that is
278:38 - par 1 and we can use this par 1 ID over
278:42 - here inside the style text in order to
278:45 - provide certain styling to this first
278:47 - paragraph so let me just save this file
278:50 - now and try reloading this page on the
278:52 - browser so as you can see we have the
278:54 - two paragraphs over here but we don't
278:56 - have any styling So currently we have
278:58 - just applied the ID to this first
279:01 - paragraph but we have not provided any
279:03 - styling attributes to this ID so we will
279:06 - be providing the same over here so as
279:08 - I've told you the syntax for the CSS
279:11 - properties to be defined to the ID is by
279:14 - using the hash character and Then
279:16 - followed by the ID name so over here we
279:19 - will provide hash character followed by
279:22 - par 1 that is the name of this ID in
279:25 - this case and Then followed by the open
279:27 - and close curly braces inside which we
279:29 - will be having the CSS property so guys
279:32 - let's say we want to change the color of
279:34 - the font for this first paragraph over
279:37 - here so what we can do is simply we can
279:39 - provide the color property in this case
279:42 - and let's say we provide the color that
279:43 - is red over here so let me just save
279:46 - this file now and try reloading this
279:48 - page once again on the browser since
279:50 - this time we are providing the ID to the
279:52 - first paragraph and the color is red for
279:55 - this ID only the first paragraph will be
279:58 - having the color that will be updated
280:00 - now when we reload this page as you can
280:02 - see the color of this first paragraph is
280:04 - red over here so guys in this way we can
280:07 - easily use the ID attribute for a
280:09 - particular HTML element and provide
280:12 - certain styling attributes in this case
280:14 - now guys let's say we want to change the
280:16 - font size as well so over here we
280:18 - provide the font size property and let's
280:20 - say we provide 26 pixels as the value of
280:24 - the font size property over here let me
280:26 - just save this file now and try
280:28 - reloading this page once again on the
280:29 - browser so as you can see the font size
280:32 - of this particular paragraph has been
280:34 - updated and it is larger compared to the
280:37 - font size of the second paragraph which
280:39 - is being displayed with the default font
280:42 - size so guys based on your requirements
280:44 - you can have any styling properties over
280:46 - here being defined to this ID that we
280:49 - have defined inside the style Tex now
280:52 - guys what is the difference between the
280:54 - class and the ID so as I've told you ID
280:57 - is being used only with a single HTML
280:59 - element and we cannot use the same ID
281:02 - with multiple HTML elements but we can
281:04 - have the same class with the multiple
281:06 - HTML elements over here so let's say we
281:09 - have another class
281:11 - BG color in this case and then let's say
281:14 - we have the background color property
281:16 - over here and the value for this
281:18 - background color property is yellow and
281:20 - then let's say we also want to have the
281:22 - text align property for this class and
281:24 - we will say Center as the text align
281:27 - property and then let's say we want to
281:29 - use these styling properties that is
281:31 - being used in the BG color class name to
281:34 - this particular paragraph so what we can
281:36 - do is we can simply have the class
281:39 - attribute over here and then we can
281:41 - provide the name of the class that is BG
281:43 - color so in this way the second
281:45 - paragraph will be having the background
281:47 - color that is yellow and it will be also
281:49 - having the text align property as Center
281:51 - so let me just save this file now and
281:53 - try reloading this page once again on
281:55 - the browser so as you can see we have
281:57 - the yellow background color and the text
281:59 - align is also at the center now guys let
282:02 - us say we have another element over here
282:04 - so we have another div element in this
282:07 - case so when we provide div and then
282:09 - let's say we have this this is a div
282:12 - element as the content of this div tag
282:16 - so let me just save this file now and
282:17 - try reloading this page once again on
282:19 - the browser so we have a very simple
282:21 - statement that is this is a div element
282:24 - for this div tag now guys let us say we
282:26 - want to provide the same styling
282:28 - property that we have provided to the
282:30 - second paragraph over here to the div
282:33 - tag as well so what we can do is simply
282:35 - we can use this class name and provide
282:38 - the class attribute inside the div tag
282:41 - as well and give the value of this class
282:43 - name as BG color so when we save this
282:45 - file now and try reloading this page
282:48 - once again on the browser so the same
282:50 - styling property is being provided to
282:52 - this Dev element as well and that is the
282:54 - main difference over here between the
282:56 - class and the ID we can use the class
282:59 - name with the multiple HTML elements
283:02 - over here they can be of the same type
283:04 - or the different types as well but when
283:06 - we are talking about the ID of the HTML
283:09 - element it can only be used with a
283:11 - single HTML element and that is why the
283:14 - ID must be unique in nature now guys
283:16 - there is a very important application of
283:18 - IDs that is using the HTML bookmarks
283:21 - with ID so for example we have the
283:23 - Google search blog link over here I'll
283:26 - simply open this in the new tab and then
283:28 - guys what we are going to do is as you
283:30 - can see this is the content of the
283:31 - Google search Central blog over here and
283:34 - this is the Google search core updates
283:36 - heading in this case so guys I want to
283:38 - know what is the ID of this particular
283:41 - in so simply we will right click over
283:43 - here and click on the inspect option and
283:45 - then we use the select an element tool
283:47 - over here and simply highlight this
283:50 - particular heading as you can see this
283:51 - is the H2 heading which is having a
283:54 - particular ID so you can see this is the
283:56 - ID over here I'll simply copy this ID
283:59 - and what we will be doing is we will be
284:01 - providing a link that is by using the a
284:04 - tag in the HTML document and we will
284:06 - point it to this particular heading over
284:09 - here so what we have to do is simply
284:11 - I'll come over here and provide the a
284:13 - tag in this case and then let's say we
284:15 - provide the content that is click here
284:19 - in between the starting and the ending a
284:21 - tags now guys what we have to do is for
284:23 - the hre we need to provide the link to
284:25 - that web page so simply I'll copy this
284:28 - link of the URL and paste it over here
284:31 - and then we need to provide the hash
284:33 - character over here that's because we
284:35 - want to specify the ID of the HTML
284:38 - element that is present on this page so
284:41 - simply I'll come over here copy this ID
284:44 - once again and then paste it after the
284:46 - hash character so guys the main idea
284:48 - over here is to click on this particular
284:51 - link and go directly on this page where
284:53 - the user will be taken to this
284:55 - particular heading directly and that is
284:57 - what we are going to achieve with this
284:59 - task over here so guys let me just close
285:01 - this tab and then what we have to do is
285:04 - inside this a tag I will provide the
285:06 - target attribute as well which will help
285:08 - us in order to open this link in the new
285:11 - tab so over here the value will be
285:13 - provided as the underscore blank value
285:16 - in this case so that this link is opened
285:18 - in the new tab of the browser so guys
285:21 - let me just save this file now and try
285:23 - reloading this page once again on the
285:25 - browser so as you can see we have the
285:27 - click here hyper Link in this case and
285:30 - when we click on this link a new tab is
285:32 - opened and as you can see we directly
285:34 - come over here to this heading in this
285:36 - case that is Google search core updates
285:39 - over here and if you notice in URL we
285:41 - also have the hash followed by the ID of
285:44 - that particular heading so guys this is
285:46 - the way that we can directly point out
285:48 - to a particular ID of the HTML element
285:51 - on that page and directly navigate to
285:54 - that particular Heading by using the
285:56 - hyperlinks so Guys these are certain
285:58 - things that you should know about the ID
286:00 - attribute in HTML so now we will see I
286:03 - frame in HTML so guys basically an HTML
286:07 - I frame is used to display a web page
286:10 - within another the web page so we are
286:12 - going to check this with the help of
286:13 - example as well how we can display a web
286:16 - page inside the already existing web
286:18 - page now guys the HTML iframe tag
286:21 - specifies an inline frame so basically
286:24 - whatever HTML element we have written in
286:26 - our code besides that HTML element the
286:29 - inline if frame will be displayed with
286:31 - the help of the iframe tag over here in
286:34 - HTML an inline I frame is used to embed
286:38 - another document within the current HTML
286:40 - do doent so let us check the example and
286:42 - along with it we are going to use the
286:44 - SRC which is the source attribute that
286:47 - is used to refer to another web page to
286:50 - display an iframe so guys let us move to
286:52 - the vs code over here and first of all
286:54 - we will change the title to ifame in
286:57 - HTML so we will say iframe in HTML now
287:01 - guys we will have a very simple
287:02 - paragraph So by using the P tag we will
287:05 - say below is an iframe element so guys
287:10 - over here we have a very simple
287:11 - statement that is below is an iframe
287:13 - element inside the paragraph now guys we
287:16 - will provide the I frame over here so
287:19 - basically when we type if frame as you
287:20 - can see this is the tag that we are
287:22 - going to use so this is the SRC
287:25 - attribute that we can use in order to
287:27 - provide which web page we want to
287:29 - display inside this iframe element now
287:32 - guys this another attribute that is
287:33 - frame border we can remove it for now
287:36 - and guys before defining it we need to
287:38 - have another web page over here so let
287:40 - me just go to the Explorer so as you can
287:42 - see we only have the test.html page over
287:46 - here so what we can do is we can add a
287:48 - new file in this case so we click on
287:51 - this new file option and then we will
287:53 - say if frame. HTML in this case so guys
287:56 - basically we will be creating another
287:59 - web page over here which will be used in
288:01 - order to display it inside the iframe so
288:04 - guys let us provide the HTML file tag
288:07 - over here so automatically we will get
288:09 - the boilerplate code with the help of
288:11 - the vs code special feature over here so
288:14 - guys inside this we will have a very
288:16 - simple paragraph and we will say this is
288:19 - an iframe web page so guys basically we
288:23 - are displaying the simple statement that
288:25 - is this is an iframe web page so that we
288:28 - come to know that this is the web page
288:31 - that is created to be displayed inside
288:32 - the iframe so guys let me just save this
288:34 - file now and move to the other file that
288:37 - is test.html so guys as you can see we
288:40 - can switch between the different HTML
288:42 - web pages over here by using these tabs
288:45 - on the vs code so this is the if frame.
288:47 - HTML file and we are going to test.html
288:50 - file now guys we can refer to this if
288:53 - frame. HTML that we have just created so
288:57 - inside the source attribute and inside
288:59 - the double codes we can simply provide
289:01 - if frame. HTML so this is the page that
289:04 - we want to display inside the iframe tag
289:07 - over here inside the test.html
289:10 - so guys let me just save this file now
289:12 - and try reloading this page on the
289:14 - browser so as you can see we will be
289:16 - using the test.html this time so when we
289:19 - refresh this page as you can see this is
289:21 - an iframe web page over here that is
289:23 - being displayed right now and guys you
289:25 - can see the border of the iframe as well
289:28 - which is the default CSS property that
289:30 - is applied to the iframe on this web
289:32 - page guys to make it more clear we can
289:35 - provide the background color as well to
289:36 - the if frame. HTML web page so what we
289:39 - will do is we will come to this if
289:41 - frame. HTML PB page over here and inside
289:44 - the head section we will Define the
289:46 - style and for the body tag we are going
289:49 - to display the background color so that
289:51 - we can easily know what are the
289:53 - boundaries of the iframe element inside
289:55 - the test.html so guys over here let's
289:58 - say we provide the aqua color as the
290:00 - background color for the entire iframe
290:03 - web page so let me just save this file
290:05 - now and come to the test.html and then
290:08 - this time when we reload this page as
290:10 - you can see this is the dimension of the
290:12 - iframe over here and we are getting to
290:14 - see this is an iframe web page now if
290:16 - you notice this is another web page and
290:18 - it is an independent web page over here
290:21 - if we go to the file explorer and as you
290:23 - can see this is the if frame. HTML file
290:26 - that is created so when we double click
290:28 - on this this particular if frame. HTML
290:31 - web page is being opened for you in
290:33 - another tab so guys this particular web
290:36 - page is being displayed in a small if
290:38 - frame over here inside the test.html
290:41 - page and that is the main purpose of
290:44 - this iframe element that is to display
290:46 - another web page inside the existing web
290:49 - page now guys apart from this it is very
290:51 - important that we also provide the title
290:53 - attribute which is used by screen
290:55 - readers to read out what the content of
290:58 - the iframe is so basically we come to
291:00 - this test.html and inside this iframe
291:04 - tag after the source attribute we
291:06 - provide the title attribute as well and
291:09 - then we say test I frame over here so
291:12 - guys basically whatever title we give
291:14 - inside this double codes it will be used
291:16 - by the screen readers in order to read
291:19 - the content of this title attribute so
291:22 - no change will be seen over here so when
291:24 - we just save this file now and try
291:26 - reloading this page once again on the
291:27 - browser there is no change when we
291:29 - provide the title attribute but it will
291:31 - be used by the screen readers whenever
291:33 - they are going to read the iframe
291:35 - content now guys apart from this you can
291:38 - also use the height and width attributes
291:40 - of the I frame so basically this is the
291:42 - default width and height that we have
291:44 - set so far over here we can explicitly
291:47 - set the width and height of the if frame
291:49 - in this case so after the title let me
291:51 - just provide the height of the I frame
291:54 - as 100 pixels over here so we provide
291:56 - 100 pixels and as well as the width as
291:59 - 100 pixels in this case so since the
292:01 - width and height are same the iframe
292:03 - will be displayed as a square I frame
292:04 - over here let me just save this file now
292:07 - and try reloading this page so as you
292:09 - can see it is a square I frame in this
292:11 - case guys we can increase the width and
292:13 - height over here so we will keep it as
292:16 - 300 pixels so it looks more decent over
292:18 - here so as you can see this is a square
292:20 - I frame in this case and that is how you
292:22 - can easily set the width and height of
292:24 - the I frame you can also use the CSS
292:27 - properties as well inside which you can
292:30 - provide the height and width properties
292:32 - when you are providing the style
292:33 - attribute for that if frame now guys by
292:36 - default the border of the iframe is
292:38 - being displayed so as you can see this
292:40 - is the gray border for the I frame so
292:42 - what we can do is we can remove the
292:44 - Border as well so simply we have to come
292:46 - over here and inside the style attribute
292:49 - in this case we provide the Border
292:52 - property and then for this border
292:54 - property we provide the value as none so
292:56 - guys what is the meaning of none value
292:58 - for the Border property it means there
293:00 - will be no border at all for this
293:02 - particular iframe HTML element so let me
293:05 - just save this file now and try
293:06 - reloading this page once again on the
293:08 - browser as you can see there is no order
293:10 - right now and it simply looks like it is
293:13 - some another element which is having a
293:15 - background color property and guys apart
293:18 - from this we can also have the border
293:19 - that is specified so simply we can
293:21 - provide two pixels over here and then
293:23 - solid and black color so guys basically
293:26 - we are providing the two pixels width of
293:28 - the border and it is a solid border and
293:30 - the color of the Border will be black
293:32 - over here let me just save this file now
293:34 - and try reloading this page so as you
293:36 - can see the border is being applied to
293:38 - this iframe element now now guys apart
293:40 - from this we can also have the iframe
293:43 - target for a link so what this means is
293:45 - we can also have the anchor tag over
293:48 - here so what we will be doing is we will
293:50 - Define the anchor tag and after clicking
293:52 - on that particular link that is the
293:54 - hyperlink that is being defined by the
293:56 - anchor tag the content of the iframe
293:59 - element will be updated so guys for this
294:02 - we will have another iframe page over
294:04 - here so what we will do is I will have
294:07 - another iframe HTML page so this time we
294:10 - will say iframe 1. HTML now guys inside
294:13 - this file we will again have the HTML
294:15 - code and again we will have the
294:17 - paragraph tag over here and then we will
294:19 - say this is another I frame but guys
294:23 - this time what we will do is we will
294:25 - have the background color of this page
294:27 - as yellow so we will provide the style
294:29 - tag inside the head tag over here and
294:32 - then for the body tag in this case we
294:34 - will provide the background color over
294:36 - here and the background color will be
294:38 - yellow in this case so guys let me just
294:40 - save this file now I'll show you this
294:42 - file that is being created that is
294:43 - iframe 1 over here so when we click on
294:46 - this this is the iframe 1 that is being
294:48 - created and we can independently view
294:50 - all these files over here I'll simply
294:52 - close these files now guys what we will
294:54 - do is by default the first if frame that
294:57 - we defined will be displayed over here
294:59 - but when we are going to click on a
295:00 - particular link the content of this if
295:03 - frame should change to the second I
295:05 - frame that we just defined with the
295:06 - yellow background color so what we are
295:08 - going to do is inside this test.html we
295:11 - will have a hyperlink over here so let's
295:14 - say we Define the a tag in this case and
295:16 - then we will have the content as click
295:18 - here so guys basically we are asking the
295:20 - user to click on this particular link
295:23 - and for the HF attribute we are going to
295:26 - point it to the iframe 1. HTML page that
295:29 - we just defined which is having the
295:31 - yellow background so guys over here
295:33 - iframe 1. HTML is being provided to the
295:36 - HD attribute now guys by default what is
295:39 - the meaning of this so basically this
295:41 - iframe 1. HTML page will be displayed on
295:44 - the same page where this test.html page
295:47 - is being displayed right now so guys let
295:49 - me just show you that so I'll save this
295:51 - file now and try reloading this page
295:53 - once again on the browser so as you can
295:55 - see since the iframe element is the
295:58 - inline element the anchor tag is being
296:00 - displayed over here to the right of this
296:02 - particular element and when we click on
296:04 - this particular link over here since we
296:06 - have given the HF attribute as iframe 1.
296:09 - HTML
296:10 - this page will be opened in this same
296:12 - tab so when I click on this as you can
296:15 - see this is another iframe so iframe 1.
296:18 - HTML is getting loaded over here but
296:20 - guys what we want to do is when we click
296:22 - on this link we want to open that page
296:25 - inside this iframe so how we can achieve
296:28 - that so basically what we have to do is
296:30 - first of all we need to provide the name
296:32 - to this if frame over here so let's say
296:35 - we provide the name attribute in this
296:38 - case and we simply say I frame over here
296:41 - as the name of this particular HTML
296:43 - element now guys we need to refer to
296:45 - this name when we click on this
296:47 - particular link and that can be done by
296:49 - providing the target attribute so guys
296:52 - if you remember the target attribute is
296:55 - used in order to open this particular
296:57 - web page in the same browser tab or the
297:00 - different browser tab so when we provide
297:02 - the blank value over here this
297:04 - particular page will be opened on a
297:06 - different browser Tab and by default the
297:08 - value is self right now which is making
297:11 - it open in the same browser tab but what
297:13 - we want is we want to open it in this
297:15 - particular iframe so we simply copy the
297:18 - name of this I frame and paste it to the
297:21 - Target attribute of the a tag over here
297:24 - now guys let me just save this file now
297:26 - and try reloading this page once again
297:28 - on the browser now guys when we click on
297:30 - this particular link the I frame with
297:33 - the yellow background should display in
297:35 - this particular iframe element so when I
297:38 - click over here as you can see this is
297:40 - another iframe is being displayed right
297:42 - now in the iframe element that was
297:45 - defined in the test.html element itself
297:48 - rather than opening this particular
297:50 - iframe 1. HTML in the same or different
297:54 - browser tab so guys this is another
297:56 - application wherein you can provide the
297:58 - target attribute as the name of the I
298:01 - frame for that particular hyperlink
298:03 - where you want to load a particular if
298:05 - frame inside the iframe HTML element so
298:08 - now we will see basic Java JavaScript
298:10 - with HTML so guys JavaScript makes HTML
298:14 - Pages more Dynamic and interactive so
298:17 - far we have seen only the HTML elements
298:19 - and tags that we use in order to design
298:22 - the web pages and also we have seen how
298:25 - we can style the HTML documents by using
298:27 - the CSS properties but guys we have not
298:30 - seen how we can click on a particular
298:32 - element inside the HTML document and
298:35 - change the content of the existing HTML
298:37 - element which is known as the dynamic
298:40 - property of a web page and how we can
298:42 - interact with the web page so guys
298:44 - basically this JavaScript helps us in
298:46 - order to interact with the HTML web page
298:49 - and get certain HTML elements updated as
298:53 - per our requirements now guys we are
298:55 - going to have a simple problem statement
298:57 - and we are going to solve this with the
298:59 - help of the example in the vs code and
299:01 - we are going to learn at least the basic
299:04 - JavaScript that we can use in the HTML
299:06 - apart from this we will also be having
299:08 - the upcoming videos in which we are
299:10 - going to learn a lot about the
299:12 - JavaScript that we can use along with
299:14 - the HTML to make our web pages
299:16 - interactive and dynamic so guys let us
299:18 - move to the problem statement so the
299:20 - very first thing that we are going to do
299:22 - is we are going to create a button over
299:24 - here so we move to the vs code so inside
299:26 - the body what we can do is first of all
299:29 - we will have the paragraph and then we
299:31 - will say click below button so guys we
299:33 - have a very simple statement that is
299:35 - Click below button over here now guys
299:37 - how do we create a button so we simply
299:39 - have to create the input tag over here
299:42 - so when we say input as you can see
299:44 - there are number of suggestions that is
299:45 - being provided by the vs code over here
299:48 - and we are looking for something that is
299:50 - input colon button in this case and when
299:52 - we click on this as you can see the type
299:55 - attribute should have the value that is
299:57 - button guys apart from this button value
299:59 - there are many values that you can set
300:01 - so if I show you these are all the
300:03 - suggestions so we can have the button in
300:06 - which case a button will be created over
300:08 - here then we can also have the check
300:10 - boxes and then we have the color then
300:12 - date date time so guys all these are the
300:15 - different types of inputs that we can
300:18 - have inside HTML and we are going to
300:20 - learn about these as well in the
300:22 - upcoming videos as well so for now in
300:24 - order to create the button we are going
300:26 - to select this value of the type
300:29 - attribute inside the input HTML element
300:32 - now guys we are supposed to set the
300:34 - value as well that is the text that is
300:36 - going to be displayed for this
300:37 - particular button so we will simply will
300:40 - say click me over here so guys basically
300:42 - this text will be displayed on the
300:44 - button in order to show what action will
300:48 - be taken when the user clicks on this
300:50 - button you can also have the submit
300:52 - value over here or you can also have the
300:54 - reload value in order to reload the
300:56 - entire page so guys it depends on the
300:59 - functionality of the button to have the
301:01 - value attribute for that particular
301:03 - button now guys let me just save this
301:04 - file now and try reloading this page on
301:06 - the browser so as you can see we have
301:08 - the click below button paragraph that is
301:10 - being displayed and then we have
301:12 - something called as click me and this is
301:14 - a button right now over here now guys
301:16 - nothing will happen when we click on
301:17 - this so as you can see when we click on
301:19 - this nothing is happening right now so
301:21 - guys we need to add certain
301:23 - functionality to this particular button
301:25 - element over here so what we will be
301:27 - doing is the next step is to create a
301:30 - paragraph with ID demo so guys we will
301:32 - do that after this button we will create
301:35 - another P tag over here and then this
301:37 - time we are going to provide the I ID
301:40 - and the ID that we have given is demo to
301:42 - this particular paragraph now guys what
301:44 - we have to do is we need to click the
301:46 - button to show the current date time in
301:49 - the demo paragraph So guys over here
301:51 - I'll simply provide demo paragraph As
301:55 - the text so that you can see where this
301:57 - paragraph is being displayed on the web
301:59 - page so when we reload this page once
302:01 - again as you can see demo paragraph is
302:03 - being displayed right now over here now
302:06 - guys what we want to do is when I click
302:07 - on this button right now we want want to
302:10 - change this demo paragraph to the latest
302:13 - date time that is provided by the system
302:15 - over here right now so currently when we
302:17 - click on this button nothing is
302:19 - happening right now so let me just come
302:20 - to the code over here what we have to do
302:23 - is to this input tag we need to provide
302:26 - the onclick attribute so as you can see
302:28 - we have something called as onclick
302:30 - attribute over here and then guys what
302:32 - we have to do is we need to find the
302:34 - paragraph with the ID that is demo and
302:37 - fill it with the current Tim stamp over
302:39 - here so what what we can do is we have
302:41 - to type document so as you can see
302:43 - document is the word that we have to use
302:46 - followed by Dot and then we have
302:48 - something called as get element by ID so
302:51 - as you can see this is the method that
302:54 - we are going to use that is get element
302:55 - by ID because this paragraph is having
302:58 - the ID that is demo over here so guys we
303:00 - are going to provide this ID inside the
303:03 - open and close parenthesis we need to
303:05 - provide the single codes over here since
303:07 - we have already used double codes and
303:09 - then we provide the demo that is the ID
303:12 - of this paragraph now guys this
303:14 - particular statement that is document.
303:16 - get element by ID and then providing
303:19 - this ID inside the single codes inside
303:22 - the open and close parenthesis will help
303:24 - us to find this particular HTML element
303:28 - that is paragraph over here now guys
303:30 - what we have to do is after finding this
303:32 - paragraph We need to provide Dot and
303:34 - then we need to say inner HTML so we
303:37 - want to change the content of this HTML
303:41 - element so we are going to use the inner
303:43 - HTML property over here so when we click
303:46 - on this and then after this we need to
303:48 - provide equal to and then we need to get
303:51 - the current time stamp of the system so
303:53 - simply we can provide the date and then
303:56 - followed by open and close parenthesis
303:58 - so guys this particular date is being
304:00 - used over here in order to get the
304:02 - current time stamp in this case so guys
304:05 - it may be little complex for you to
304:07 - understand this but slowly with time
304:09 - when we are are going to practice more
304:11 - about JavaScript you will come to know
304:13 - exactly what we are doing over here and
304:15 - along with the practice as well you can
304:17 - understand that basically we are getting
304:19 - the current time stamp of the system and
304:22 - assigning it to the paragraph that is
304:24 - having the ID which is demo over here by
304:27 - using the inner HTML property now guys
304:29 - let me just save this file now and try
304:31 - reloading this page once again on the
304:33 - browser and this time when we click on
304:36 - this particular button this text that is
304:38 - demo paragraph should get replaced with
304:40 - the current Tim stamp so let me just
304:42 - click over here so when we click on this
304:44 - as you can see the current Tim stamp
304:47 - right now along with the date is being
304:48 - displayed over here it is showing us the
304:50 - time in hours minutes and seconds right
304:53 - now when we click on this once again as
304:55 - you can see the minutes and seconds will
304:57 - change over here when we continuously
305:00 - click over here on this particular
305:01 - button so as you can see the time is
305:03 - being changed right now every second the
305:06 - time will get updated over here when we
305:08 - click on this button so this is a very
305:10 - basic JavaScript that we have seen over
305:12 - here right now apart from this what we
305:14 - have done is we have provided this
305:16 - particular statement within the tag over
305:19 - here but instead of having the onclick
305:21 - button and specifying all the steps of
305:24 - the JavaScript over here what we can do
305:26 - is I'll simply cut this and we can also
305:29 - have the script tag over here you can
305:31 - see that the script tag in HTML for
305:33 - JavaScript we can Define it inside the
305:36 - head section or within the body section
305:39 - as well so when we Define it inside the
305:41 - head section over here we can simply
305:43 - have the script and then guys what we
305:46 - can do is we can provide a function over
305:48 - here so we are going to learn more about
305:50 - the function as well in the upcoming
305:51 - videos when we are going to learn about
305:53 - JavaScript tutorial and then let's say
305:56 - we provide the name of the function as
305:57 - demo and then after the open and close
306:00 - parenthesis we provide the curly braces
306:02 - over here and inside the curly braces we
306:05 - provide the statement followed by the
306:07 - semicolon so guys this is is a simple
306:10 - format in order to define a function
306:13 - inside the JavaScript inside the script
306:15 - tag over here now guys function keyword
306:18 - is being followed by the function name
306:20 - and then we have the open and close
306:22 - parenthesis over here so guys what we
306:24 - have to do is we just need to call this
306:26 - function from this onclick attribute so
306:29 - simply we will have the demo function
306:31 - over here followed by open and close
306:33 - parenthesis now guys let me just save
306:35 - this file now and try reloading this
306:37 - page once again on the browser this time
306:39 - when we click on this button once again
306:41 - as you can see the date is being
306:44 - captured over here and it is being
306:45 - written in this demo paragraph So guys
306:48 - this is the way that we can provide the
306:50 - JavaScript line of code inside the
306:53 - script tag over here by defining the
306:55 - functions as well and calling that
306:57 - function on the click of a particular
306:59 - button we can have multiple buttons
307:01 - inside the HTML body tag and then guys
307:04 - we can have different functions based on
307:06 - their functionalities and have different
307:09 - Dynamic content being added to the HTML
307:12 - web page over here guys apart from this
307:14 - we can also set the style attributes
307:17 - with JavaScript so let's say we want
307:19 - this particular text to be displayed in
307:21 - the red color so by default it is being
307:24 - displayed in the black color over here
307:26 - so what we can do is again we can come
307:28 - over here in the demo function that's
307:30 - because when we click on this particular
307:32 - button we are calling the demo function
307:34 - over here with the help of the onclick
307:36 - attribute so guys the control flow comes
307:38 - over here to the demo function and sees
307:41 - that we are supposed to get the element
307:43 - by ID that is demo which is this
307:45 - particular paragraph and set it with the
307:48 - current time stamp by using the date
307:50 - function over here now guys what we will
307:52 - be doing is again we will find the
307:55 - paragraph with the ID that is demo over
307:57 - here so we will type document followed
307:59 - by Dot and then we say get element by ID
308:04 - and then inside the parenthesis we will
308:06 - again have the single quote over here
308:08 - and then we will say the ID is demo in
308:11 - this case and then guys what we can do
308:13 - is in order to set the color as red over
308:16 - here to this text we can provide dot
308:19 - followed by style attribute so guys
308:22 - basically we use the style attribute in
308:24 - order to change the color of a
308:26 - particular text as well when we use the
308:28 - CSS so the same thing we can do over
308:30 - here programmatically so after dot we
308:33 - provide style and Then followed by dot
308:35 - we can set color over here because that
308:38 - is the property that we use inside the
308:41 - style attribute when we Define the
308:43 - colors using CSS and then guys after
308:46 - this we can simply have equal to and
308:48 - inside the double codes we can give the
308:50 - value as red over here so that the color
308:52 - of the text is being changed to red and
308:55 - then after this we have a semicolon so
308:57 - let me just save this file now and try
308:59 - reloading this page once again on the
309:00 - browser so guys by default demo
309:02 - paragraph is being displayed in the
309:04 - black color right now that's because we
309:06 - have provided the style inside the demo
309:09 - function which will be called only after
309:11 - clicking this button so when we click on
309:14 - this button right now let me just click
309:16 - on this as you can see we are seeing the
309:18 - date by using this first line of code
309:20 - over here and by using the second line
309:22 - of code inside the demo function we are
309:25 - getting the color of this text as red
309:27 - color so guys this is the way that we
309:29 - can set the color of the text by using
309:31 - the JavaScript as well and apart from
309:33 - this we can also change the content of
309:36 - the HTML elements so guys this is a very
309:38 - basic JavaScript that we have seen right
309:40 - now in this HTML tutorial we will be
309:43 - seeing more JavaScript videos in the
309:45 - JavaScript tutorial as well in the
309:47 - upcoming videos so now we will see head
309:50 - element in HTML so guys basically the
309:52 - HTML head element is a container for the
309:56 - following elements which are title and
309:58 - then we have style meta link script and
310:02 - the base text so guys basically some of
310:04 - the texts we have already seen in the
310:06 - previous videos as well that are being
310:08 - used inside the head element which is a
310:10 - container for all these tags over here
310:13 - and guys the head element itself must be
310:15 - defined inside the HTML tag now guys one
310:18 - by one we are going to see all these
310:19 - tags over here so first of all the title
310:22 - tag it defines the title of the document
310:24 - and basically the title must be text
310:27 - only and it is shown in the browser's
310:29 - title bar or in the page tab over here
310:32 - so guys we have already seen this in the
310:34 - previous videos as well as you can see
310:36 - this is the HTML document the first tag
310:39 - is the HTML starting tag and then in the
310:41 - end we have the HTML ending tag as well
310:44 - and then inside this HTML tag we have
310:46 - two main tags that is the head tag which
310:48 - can have multiple tags over here that we
310:51 - have just defined right now and then we
310:53 - also have the body tag which defines the
310:55 - body of the web page so guys basically
310:58 - we have the title tag over here inside
311:00 - the head tag which defines the title of
311:03 - the document so as you can see we have
311:05 - head element in HTML so this is the
311:08 - title of this particular HTML document
311:11 - and when we save this file and try
311:13 - reloading this page you can see this
311:15 - title of the document that is head
311:17 - element in HTML on the browser tab over
311:20 - here so guys this is the main
311:21 - functionality of the title tag it helps
311:24 - us in order to display that title of the
311:27 - document on the tab and you must be
311:29 - defining the title of the document
311:31 - whenever you are creating new web pages
311:33 - now guys apart from this we also have
311:35 - the style tag over here which is used to
311:37 - define the style information for a
311:39 - single HTML page so guys what we can do
311:42 - is inside the head tag we also have the
311:45 - style tag over here so when we Define
311:47 - the style tag we can Define The Styling
311:50 - of the HTML elements that are present
311:53 - inside the body so let's say for example
311:55 - we want to define the background color
311:58 - of this body tag over here so what we
312:01 - can do is simply inside the style tag we
312:04 - Define the body tag first of all because
312:07 - for the body tag we want to define the
312:09 - background color so inside the body tag
312:11 - over here we provide the open and close
312:13 - curly Braes and then simply we provide
312:16 - the background color property as you can
312:18 - see when we type background over here we
312:20 - are getting number of Suggestions by the
312:22 - vs code so we can use the background
312:24 - color over here and simply we can Define
312:27 - the value of the color so let's say we
312:29 - want the background color of the entire
312:31 - body of the web page to be yellow color
312:34 - in this way we can Define the style that
312:36 - is the background color inside the style
312:38 - tag so let me just save this file now
312:41 - and try reloading this page once again
312:43 - on the browser as you can see the
312:45 - background color of the entire body has
312:47 - been updated to the yellow color that we
312:50 - have defined inside the style tag in
312:52 - this case so guys this is another
312:54 - important tag that we can use inside the
312:56 - head element of the HTML page now guys
312:59 - we also have the link attribute as well
313:02 - so it defines the relationship between
313:04 - the current document and an external
313:06 - resource so guys one of the best
313:08 - applications of the link link attribute
313:10 - is to link to another external
313:12 - stylesheet which means a CSS stylesheet
313:15 - that you have created so guys when you
313:17 - are going to actually work on big
313:18 - projects basically instead of having
313:20 - this internal Styles or the inline
313:23 - styles that you can Define inside a
313:25 - particular HTML element we are going to
313:28 - mostly deal with the external stylesheet
313:30 - so let me just open the Explorer over
313:33 - here and we will create a new file and
313:35 - we will name it as style. CSS so guys
313:39 - basically this name we have given is the
313:41 - style that is the file name followed by
313:43 - Dot and then the extension that we are
313:45 - using is CSS over here which means it is
313:48 - a CSS file where all our styling
313:51 - properties will be stored so guys let me
313:53 - just create this file and inside this
313:56 - file what we will be doing is let's say
313:58 - the style that we have provided right
314:00 - now for the body I'll just remove from
314:02 - here and paste it inside the style. CSS
314:05 - so basically all the Styles will be
314:08 - stored inside this style. CSS file in
314:11 - this case and let me just create another
314:13 - style for the paragraph tag over here
314:16 - and let's say for the paragraph tag we
314:18 - want the color of the text to be read in
314:21 - this case so when we provide color and
314:23 - then we can simply provide the value
314:25 - that is red so guys what this means is
314:28 - whatever paragraph that we are going to
314:30 - create inside our main HTML file over
314:32 - here will be having the red color of the
314:35 - text in this case so guys in this way we
314:38 - can Define multiple styles for the
314:40 - different HTML elements including
314:42 - multiple properties as well so guys let
314:45 - me just save this style. CSS file and
314:47 - come to this test. HTML I'll remove
314:50 - these style tags for now and then what
314:52 - we are going to do is simply we are
314:54 - going to have the P tag over here and
314:57 - then we will say this is paragraph one
315:00 - in this case and then again we will have
315:02 - another paragraph that is this is
315:05 - paragraph 2 so guys we have defined two
315:07 - simple paragraphs that is this this is
315:09 - paragraph 1 and 2 so guys currently we
315:11 - have not linked this style. CSS file to
315:15 - the test.html which we are going to do
315:17 - with the help of the link tag right now
315:20 - so let me just save this file now and
315:22 - show you how this file will look so when
315:24 - we reload this page as you can see there
315:26 - is no background color for now and even
315:28 - the paragraph being displayed are black
315:30 - in color right now that's because we
315:32 - have defined the style in the style. CSS
315:35 - but we have not linked this particular
315:37 - file to this HTM ml web page so guys
315:40 - what we have to do is inside the head
315:42 - tag we need to provide the link
315:44 - attribute right now and then we are
315:47 - going to use this link colon CSS which
315:50 - means the RL attribute which is the
315:52 - relation attribute it is telling HTML
315:55 - that the file that we are going to
315:57 - specify will be a stylesheet file so
316:00 - guys this is the RL attribute and the
316:02 - value that we must Define in order to
316:04 - link to a stylesheet file and then guys
316:07 - already the style. CSS file name is
316:09 - being taken over here so in the hre we
316:12 - need to provide this tile. CSS file name
316:15 - that we have just defined in this case
316:17 - so guys in this way what exactly we are
316:19 - doing is we are separating The Styling
316:22 - of the document that we have defined in
316:24 - the style.css file over here from the
316:26 - HTML code that we have returned so guys
316:29 - our code looks more cleaner in this case
316:31 - so this is one of the best practices
316:33 - that we must follow that is to create
316:35 - the HTML files and CSS files separately
316:38 - and to link them by using the link tag
316:40 - over here so that we have the separate
316:42 - stylesheets and the HTML files that can
316:45 - be maintained properly so guys let me
316:47 - just save this file now and this time
316:49 - when we reload this page we should get
316:51 - all the styles that are defined inside
316:54 - the style. CSS file so let me just
316:56 - reload this page as you can see we are
316:58 - getting the background color as well and
317:00 - we are getting the red color for this
317:03 - paragraph as well so guys in this way we
317:05 - can make use of this link tag in order
317:08 - to link to a particular external
317:10 - stylesheet file which is mostly the case
317:12 - when we are going to create major
317:14 - projects now guys let us move to another
317:16 - tag over here we have something called
317:18 - as meta in this case which is being used
317:20 - to specify the character set or the page
317:23 - description or the keywords or the
317:26 - author of the document and the viewport
317:28 - so guys basically this viewport settings
317:30 - is being used in order to make the page
317:33 - responsive which we are going to check
317:35 - in the upcoming videos as well so simply
317:37 - what we can do is we have have to come
317:39 - over here and we provide the meta tag in
317:42 - this case followed by colon and then you
317:44 - can see this VP over here which means
317:46 - viewport so when we select this option
317:49 - as you can see the name is provided as
317:50 - viewport and the content is width is
317:53 - equal to device width which means the
317:55 - entire device width will be used
317:57 - whenever the images or other HTML
318:00 - elements are going to scale
318:02 - automatically and then the initial scale
318:04 - is 1.0 over here so guys this is one of
318:07 - the important property of the meta tag
318:10 - that is using the viewport if you want
318:12 - your website to be responsive which
318:14 - means the pages should be displayed
318:16 - properly on the desktop as well as
318:18 - mobile and tablet devices so guys meta
318:21 - tag is being used to provide the
318:23 - viewport settings and apart from that
318:25 - you can also provide the character set
318:27 - the description of the page the keywords
318:30 - that will be used by the search engines
318:32 - in order to display your web page to the
318:34 - audiences when they are going to search
318:36 - for your keyword and then also the
318:38 - author of the document can be defined
318:40 - now guys apart from this we can also
318:42 - have the script tag over here which can
318:44 - be used to define the Cent side
318:46 - javascripts so basically inside the head
318:48 - tag we can also Define the script tag
318:51 - over here and then the script tag can
318:53 - have a particular function so we are
318:55 - going to learn more about the functions
318:57 - when we are going to see the JavaScript
318:59 - tutorial so over here we can have
319:01 - function and then the function name is
319:03 - let's say demo and then we can have our
319:05 - own JavaScript code over here so guys
319:07 - basically whatever JavaScript that we
319:09 - are going to write we can have it inside
319:11 - the script tag as well which can be
319:13 - defined inside the head tag over here
319:16 - inside the HTML now guys apart from this
319:19 - we also have the base tag over here
319:21 - which specifies the base URL or the
319:23 - target for all the relative URLs in the
319:26 - web page so guys what this means is we
319:28 - can also have the base tag over here in
319:31 - this case and we can provide the HF so
319:34 - guys what is the use case of this base
319:36 - tag so guys over here let's say we have
319:38 - a particular folder from where we want
319:40 - to show the images on our web pages so
319:42 - guys what we are going to do is we are
319:44 - going to provide this common directory
319:47 - path from where we are going to refer to
319:49 - that image so I'll simply copy this and
319:52 - paste it inside the HF attribute of the
319:55 - base tag over here so when we provide
319:57 - this value of the HF attribute and then
320:00 - in the end we need to provide the SL
320:02 - character over here now guys this is the
320:05 - base directory that we have defined now
320:07 - guys whatever image that we want to
320:09 - Define inside the body of the web page
320:12 - we can simply provide the name of that
320:14 - image now instead of providing the
320:16 - entire directory path to be displayed so
320:19 - guys let's say we want to provide the
320:21 - image over here along with the source in
320:23 - this case so what we need to provide is
320:25 - the source will be the name of this file
320:27 - so simply I'll copy this name of the
320:29 - file and then after that we provide the
320:31 - extension that is do PNG over here and
320:34 - guys simply this particular image will
320:36 - be displayed right now by using the the
320:39 - base directory path that we have already
320:41 - defined so guys let me just set the
320:44 - width and height of this particular
320:45 - image as well so let's say we have the
320:48 - width as 300 pixels over here and then
320:50 - let's say we have the height as 100
320:53 - pixels in this case so guys let me just
320:55 - save this file now and try reloading
320:57 - this page once again on the browser so
320:59 - as you can see this image is being
321:01 - displayed right now by using the
321:02 - directory path that we have provided in
321:05 - the base tag over here now guys let's
321:07 - say we don't provide this base tag in
321:09 - this case so I'll just comment out this
321:11 - particular line by using the control and
321:13 - for/ keyboard keys on the windows so let
321:17 - me just save this file now and let us
321:19 - see whether this particular image will
321:21 - be displayed right now so basically when
321:23 - we reload this page once again as you
321:25 - can see the image is not being displayed
321:28 - that's because the HTML page is trying
321:30 - to find the image over here in this
321:32 - particular directory where the main HTML
321:36 - file is present that is test.html
321:38 - which we are viewing right now but guys
321:40 - the image is not present in this
321:42 - directory but it is present in another
321:44 - directory over here which we had defined
321:47 - inside the base tag so guys basically
321:49 - this base tag is being used over here as
321:52 - the target directory where we have to
321:54 - find all the resources that is being
321:56 - used inside the HTML document so when we
321:59 - provide the base tag once again along
322:01 - with the directory path over here from
322:03 - where we are going to extract all the
322:06 - images that we want to display on the
322:08 - HTML page let me just save this file now
322:10 - and try reloading this page once again
322:12 - on the browser so this time again the
322:14 - image is being displayed that's because
322:16 - we have provided the base tag along with
322:18 - the directory where all the resources
322:20 - are present so Guys these are some of
322:22 - the tags that can be defined inside the
322:25 - head element of the HTML so now we will
322:27 - see responsive web design in HTML so
322:30 - guys basically responsive web design is
322:33 - about creating web pages that look good
322:36 - on all devices so whether you view the
322:38 - web pages on the computer or desktop or
322:41 - your laptop or tablets or even your
322:43 - mobile phones so basically whatever web
322:45 - pages that we design using the HTML code
322:49 - it should be looking good on all the
322:50 - devices irrespective from where the
322:53 - viewer is viewing your web page now guys
322:55 - this design is called the responsive web
322:58 - design that means the HTML web page will
323:01 - adapt itself in order to look good on
323:04 - all the devices now a responsive web
323:06 - design will automatically etches for
323:08 - different screen sizes and the view
323:10 - ports responsive web design is about
323:12 - using HTML and CSS to automatically
323:16 - resize hide shrink or enlarge a website
323:19 - to make it look good on all the devices
323:22 - such as desktops tablets and phones so
323:25 - guys as I've told you responsive web
323:27 - design is nothing but it is the attempt
323:29 - in order to make the HTML and CSS in
323:32 - such a way that it should resize hide
323:35 - and Shrink or enlarge the existing HTML
323:38 - elements to different devices such as
323:40 - desktops tablets and mobile phones as
323:42 - well now in order to create the
323:44 - responsive website we add the meta tag
323:47 - over here so as you can see this is the
323:49 - meta tag with the name that is viewport
323:52 - and the content as the width is equal to
323:54 - device width and the initial scale is
323:56 - equal to 1 so guys this we are going to
323:58 - check with the help of example as well
324:00 - we need to mention this meta tag inside
324:03 - the head tag of the HTML document so
324:05 - guys let us move to the vs code over
324:07 - here I'll click here are all the lines
324:09 - of code for now so basically whenever we
324:11 - are going to create the new HTML code
324:14 - what we do is we first type HTML and as
324:17 - you can see HTML colon 5 this is the
324:20 - option that we will select so that we
324:22 - get the boiler plate code in the vs code
324:24 - so guys this is one of the important
324:26 - features of the VSS code it helps us in
324:28 - order to create the boiler plate code
324:31 - that is ready for use so that we can
324:33 - focus on our functionality of the web
324:35 - page now guys over here by default as
324:37 - you can see see this is the meta tag
324:40 - over here with the name that is viewport
324:42 - which is responsible in order to create
324:44 - this web page as a responsive web page
324:47 - so what we will do is first of all we
324:49 - will comment out this line over here so
324:51 - that we don't see a responsive web page
324:53 - that we are going to Define and then
324:55 - guys the title of this document we are
324:57 - going to Define it as responsive web
325:00 - page over here and now guys what we will
325:02 - be doing is first of all we will have
325:04 - the image so I'm going to define the
325:06 - image over here in which case we are
325:08 - going to display this image which is the
325:10 - thumbnail of one of the videos that we
325:12 - have already created so guys the
325:14 - directory path we are going to provide
325:16 - in the base tag over here so that we can
325:19 - refer to that particular path as the
325:21 - parent path so over here we provide the
325:24 - base tag and to the hrf we provide this
325:27 - directory path over here followed by the
325:29 - back slash in this case now guys since
325:31 - we have to use the horizontal scroll bar
325:33 - over here what we can do is we can use
325:36 - the word rep functionality of vs code so
325:38 - we have to come to this view menu over
325:41 - here and then you can see word RP in
325:42 - this case so basically we are using the
325:44 - word RP so that we can see the entire
325:47 - content on one screen without using the
325:49 - horizontal scroll bar over here guys
325:52 - this becomes important when we are
325:53 - having the text that is long enough that
325:56 - goes outside the screen width on this vs
325:59 - code now guys what we have to do is we
326:00 - need to provide the source of this image
326:03 - and then this is nothing but it is going
326:05 - to be the name of the file so let's say
326:07 - we want to Pro provide this file that is
326:09 - the image to be displayed on the web
326:12 - page so we provide the name of this file
326:14 - and the prefix that is the entire
326:16 - directory path is being provided in the
326:19 - base tag over here so we just have to
326:21 - provide the name of the file followed by
326:23 - PNG that is the extension in this case
326:26 - and then let's say we provide the alt
326:28 - attribute as test image over here which
326:31 - is the value so in case the image is not
326:33 - found over here then this test image
326:36 - will be displayed so let me just save
326:37 - this file now and try reloading this
326:39 - page on the browser so as you can see
326:41 - the image is being displayed over here
326:43 - but guys the image is right now enlarged
326:46 - in this case so what we can do is let's
326:48 - say we only want to display the 50% of
326:51 - the image as the width so we provide the
326:54 - width as the 50% so guys this will be
326:57 - the 50% of the screen that will be
327:00 - occupied by the image over here so let
327:02 - me just save this file now and try
327:04 - reloading this page so as you can see
327:06 - only 50% of the withd is being taken by
327:09 - the image right now over here guys what
327:11 - if we don't provide the extension so
327:13 - when we don't provide the extension so
327:15 - basically whatever text is being
327:17 - provided inside the alt attribute that
327:19 - text will be displayed that's because
327:22 - the HTML code will not be able to find
327:24 - this particular file because we have not
327:26 - provided the extension let me just save
327:29 - this file now and try reloading this
327:31 - page so as you can see test image that
327:33 - is the text inside the alt attribute is
327:36 - being displayed right now guys that is
327:38 - why it becomes very important that we
327:40 - provide the alt attribute over here so
327:42 - in case there are certain issues in
327:44 - order to find the files on the server
327:47 - then we can at least have the text being
327:49 - displayed to the user now guys what we
327:51 - are going to do is after this we are
327:52 - going to have the heading that is H1
327:55 - over here and then we will say this is
327:58 - heading one in this case and then guys
328:00 - again we are going to have the paragraph
328:02 - and we will be having a long paragraph
328:04 - over here so guys for test content we
328:06 - are going to provide the lurm Epsom text
328:09 - so guys this is a long text and this is
328:11 - what we are going to select on the vs
328:13 - code so guys this is another important
328:15 - functionality of V code it provides a
328:18 - certain test data as well in order to
328:20 - test our web pages now guys let me just
328:22 - save this file now and try reloading
328:24 - this page on the browser so as you can
328:26 - see we are having the 50% width of the
328:29 - image that is being displayed and then
328:30 - we are having this is heading one that
328:32 - is being displayed using the edge1 tag
328:35 - and then we also have the P tag which is
328:37 - having certain content over here now
328:39 - guys how do we know whether this page is
328:41 - responsive or not so what we can do is
328:43 - we can press the F12 button on the
328:46 - keyboard so as you can see this is the
328:48 - Dave tools that is being opened right
328:50 - now over here and then on the left the
328:52 - second icon you can see toggle device
328:54 - toolbar so guys basically we are going
328:56 - to select this option so that we can see
328:59 - how this web page looks on different
329:01 - devices with different screen sizes so
329:04 - guys we just need to click over here on
329:05 - this particular icon so as you can see
329:08 - we have selected the responsive option
329:10 - over here we can select different
329:12 - options that is iPhone SE and then there
329:14 - are different options for the mobile
329:16 - phones and the tablets as well but
329:18 - currently we are going to see the
329:19 - responsive option and this is how it is
329:22 - being displayed right now I'll just
329:24 - decrease the size of this Dave console
329:26 - and then when we increase the size you
329:28 - can see that this is the perfect web
329:30 - page that is being displayed that is 50%
329:33 - of the width is being occupied by this
329:35 - image and then we have the heading and
329:37 - then we have the the paragraph as well
329:39 - now guys when we decrease the screen
329:41 - size as you can see the size of the
329:43 - image heading and paragraph is also
329:45 - decreasing up to this point and then
329:48 - guys what is happening is when we
329:49 - decrease the size more you can see that
329:52 - the paragraph is getting truncated now
329:54 - and then the heing is also getting
329:56 - truncated so guys this is the main issue
329:58 - when we are not making our web pages
330:00 - responsive over here when you decrease
330:02 - the width of the screen more as you can
330:04 - see now the image is getting truncated
330:07 - and not the entire image is being
330:08 - displayed right now so guys currently as
330:11 - you can see even the heading and the
330:13 - paragraph is not getting displayed
330:15 - properly right now not all the text is
330:17 - getting displayed currently so you can
330:19 - see this is the horizontal scroll bar
330:21 - that is present right now on this
330:23 - particular screen with very small width
330:26 - so guys what we can do is we can use the
330:28 - meta tag over here that we had just
330:30 - commented during the start of this video
330:32 - so we'll just remove the command from
330:34 - here and then we are going to set the
330:37 - view port property that is under the
330:39 - meta tag in this case so guys let me
330:41 - just save this file now and try
330:43 - reloading this page with the same width
330:45 - of the responsive device over here so
330:48 - when we reload this page as you can see
330:50 - the image is now set to the 50% of this
330:53 - particular current with right now and
330:55 - then the entire heading is being
330:57 - displayed this is heading one and then
331:00 - this paragraph is also being displayed
331:01 - right now and there is no horizontal
331:04 - scroll bar right now that you can see
331:06 - and if I moving left and right it is not
331:08 - moving so guys basically this is a
331:10 - complete responsive page right now just
331:13 - by using this viewport we are making the
331:16 - web page responsive which will adapt
331:18 - itself based on the width of the screen
331:20 - so as you can see the image is being
331:22 - displayed completely even though it is
331:24 - very small but it is not truncating the
331:27 - image or the text from the right hand
331:29 - side so guys in this way we can easily
331:31 - make our web pag is responsive over here
331:33 - and test it by using the Dave tools
331:35 - under which we have the responsive
331:37 - option over here now guys we can make
331:39 - the width of the image as 100% as well
331:42 - so let me just do that quickly so when
331:44 - we do it 100% that is the width of the
331:46 - image let me just refresh this page once
331:49 - again so as you can see the entire width
331:51 - of the device is being taken by this
331:53 - particular image and when we decrease
331:55 - the width of this screen you can see
331:57 - that the image is even scaling down its
332:00 - width automatically so guys this is the
332:02 - main functionality of having the
332:04 - responsive page over here it
332:06 - automatically shrink or enlarges the
332:09 - content that is present inside the web
332:11 - page which is responsive and then to
332:13 - disable this view we can again click on
332:15 - this particular icon over here so that
332:17 - it can be displayed on the normal web
332:19 - page so guys it becomes very important
332:21 - to include this particular line of code
332:23 - that is the meta tag along with the name
332:26 - attribute that is viewport and then this
332:29 - content attribute over here which gets
332:31 - automatically applied when you are
332:33 - writing the HTML code in the VSS code so
332:36 - so now we will see HTM ml style guide
332:38 - and best practices so guys in this video
332:41 - we will see what are the best practices
332:43 - that you must follow while you are
332:45 - writing the code in the HTML document
332:47 - and the same practices you should be
332:49 - following when you are going to work on
332:51 - the big projects as well so guys a
332:53 - consistent clean and tidy HTML code will
332:57 - make it easier for others to read and
333:00 - understand your code and that becomes
333:02 - very important when you're going to work
333:04 - along with your other team members as
333:06 - well so guys are some of the guidelines
333:09 - that you must follow so basically you
333:11 - should always declare the document type
333:13 - as the first line in your document so
333:16 - guys in the vs code what we can do is
333:18 - simply I'll remove all the lines of code
333:20 - over here and simply you can type HTML
333:23 - and the second option that is HTML colon
333:26 - 5 is the one of the simplest option that
333:29 - you can select while creating a new web
333:31 - page so when you select this option you
333:34 - will have the entire boilerplate code
333:37 - that is being generated by the vs code
333:39 - and simply you can start writing your
333:41 - HTML elements inside the body after
333:44 - updating the title of the document now
333:46 - guys what is this first best practice is
333:48 - we need to declare the document type as
333:51 - the first line so over here
333:53 - automatically we have defined the
333:55 - document type over here you can see less
333:57 - than symbol followed by exclamation and
333:59 - then we have the document type and then
334:01 - we have HTML and then greater than
334:03 - symbol so guys this is nothing but the
334:06 - first line of the HTML document that is
334:08 - the document type in this case and that
334:11 - is one of the best practices that you
334:12 - must follow and it will be automatically
334:14 - done with the help of the vs code
334:16 - special feature by generating the boiler
334:19 - plate code now guys apart from this you
334:21 - must use the lowercase element names so
334:24 - whenever you are going to write the
334:26 - content inside your body tag that is
334:29 - let's say you want to provide the H1 tag
334:31 - over here simply you can provide the H1
334:33 - tag as you can see so this is the
334:35 - lowercase HTML element that we are using
334:39 - and inside this we can simply Define the
334:41 - content that is this is heading one and
334:45 - then let's say we have another div
334:46 - element over here so again we type div
334:49 - and then these are the lowercase HTML
334:52 - elements and this is another best
334:54 - practice that you must follow we can say
334:56 - this is div one over here so guys let me
334:58 - just save this file now and try
335:00 - reloading this page on the browser so as
335:02 - you can see the content is being
335:04 - displayed over here based on what we
335:06 - have written in our HTML document so
335:08 - guys the HTML elements must be always
335:10 - lowercase we must not use the uppercase
335:12 - letters so let's say over here we
335:14 - provide the uppercase letter that is div
335:17 - in this case so as you can see all these
335:19 - are uppercase HTML elements this will
335:21 - help us in order to display the content
335:24 - but guys this is not one of the best
335:26 - practices over here so when we save this
335:28 - file now and try reloading this page as
335:30 - you can see it is helping us in order to
335:32 - display the content but this is not the
335:34 - right practice in order to use the upper
335:37 - case letters for the HTML elements so we
335:40 - must avoid this and use these kinds of
335:42 - HTML Elements which are having all the
335:45 - lowercase letters as the name of the
335:47 - HTML element now guys we must also close
335:50 - all the HTML elements over here so if
335:52 - you notice we have created the H1 and
335:55 - the tip elements these are the starting
335:57 - tags over here and we are ending them
335:59 - with the ending tag which is having the
336:02 - forward slash over here and this is one
336:04 - of the best practices when we are
336:06 - creating the HTML elements there might
336:08 - be certain HTML Elements which do not
336:10 - have the ending tag over here so let's
336:12 - say when we have the input tag this tag
336:15 - doesn't have the ending element and that
336:17 - is why it is not getting automatically
336:19 - generated with the help of VSS code and
336:22 - then we also have the line break tag
336:24 - over here and this again is not having
336:26 - the ending element but what you can do
336:28 - is instead of having the ending element
336:30 - we can end them by using the forward
336:32 - slash over here which becomes very
336:34 - important when your HTML code will be by
336:38 - the XML or xhtml that is the other
336:41 - documents so guys you can end them by
336:43 - using the forward slash in this case
336:45 - just before the greater than symbol over
336:47 - here of the starting tag so one of the
336:49 - best practices is to close all the HTML
336:52 - elements with the ending tag over here
336:54 - for whichever HTML elements they are
336:56 - applicable now guys apart from this we
336:58 - must also use the lowercase attribute
337:00 - names so as you can see in this input
337:03 - tag over here we have provided the
337:05 - attributes and the attribute name is the
337:07 - the type in this case which is using all
337:09 - the lowercase letters over here
337:11 - similarly let's say inside the D we can
337:14 - have the class attribute so this class
337:16 - attribute must have all the lowercase
337:18 - characters over here and that is what we
337:20 - should be using which is one of the best
337:22 - practices in order to define the
337:24 - attributes with the lowercase letters
337:26 - now guys apart from this we must always
337:28 - quote the attribute values so by default
337:31 - whenever we are defining any of the
337:33 - attributes in the vs code you can see
337:35 - after this equal to symbol we are having
337:37 - the double codes over here so always the
337:41 - attribute values must be qued inside the
337:43 - double codes or the single codes over
337:45 - here in this case so as you can see the
337:47 - name of the class that is class name is
337:50 - being defined inside the double codes
337:52 - and then the type attribute is also
337:54 - having the value that is text inside the
337:56 - double quotes over here and that is the
337:58 - meaning of always quote attribute values
338:01 - so this is another best practice apart
338:03 - from that we also specify alt width and
338:06 - height for images so guys whenever we
338:08 - are going to provide the image tags over
338:10 - here so let's say we create the image
338:13 - tag in this case so we must provide the
338:16 - source attribute and apart from that we
338:18 - must be also having the alt attribute
338:20 - and the width and height attribute as
338:22 - well of the image so guys either we can
338:24 - have the width and height attributes
338:26 - directly inside the image tag or else we
338:29 - can also use the CSS properties as well
338:32 - by using the style attribute and
338:34 - providing the width and height
338:35 - properties inside the style attribute
338:37 - rute so these three attributes are a
338:39 - must when we are using the image tag in
338:42 - order to display the images on the web
338:44 - pages apart from that the spaces and the
338:47 - equal signs so guys basically you can
338:49 - see that there are no spaces before and
338:52 - after the equal to sign so guys
338:54 - providing the space characters before
338:55 - and after the equal sign is not one of
338:58 - the best practices over here so you
339:00 - should avoid this so as you can see we
339:02 - have provided the class attribute name
339:04 - and then we have the space character and
339:06 - then we have equal to and then we have
339:08 - another space character so Guys these
339:10 - space characters are useful when you are
339:13 - writing programs in Java or python which
339:15 - we have covered in the other playlist
339:18 - the links I have given in the
339:19 - description section below if you want to
339:21 - learn about the Java tutorial and the
339:23 - Python tutorial as well but in HTML
339:26 - these space characters are not required
339:28 - and these are not one of the best
339:30 - practices that you must follow so guys
339:32 - avoid having the space characters before
339:34 - and after the equal to operator over
339:37 - here whenever you are going to use the
339:39 - attributes inside the HTML elements guys
339:42 - apart from this avoid the long code
339:44 - lines so let's say we have the test
339:46 - paragraph over here so what we can do is
339:48 - we can simply provide the P tag in this
339:51 - case and then we have the test line that
339:53 - is lurm Epsom so guys when we use this
339:56 - text as you can see currently we have
339:58 - the view set as word r over here but
340:00 - when we disable this word rep as you can
340:02 - see this is a long text that is being
340:04 - written over here inside the HTML
340:07 - document ment so guys we must avoid this
340:09 - thing in order to avoid the horizontal
340:11 - scroll bar and we can simply use the
340:13 - word RAB over here and apart from this
340:16 - we should also avoid such large
340:18 - statements inside the web pages so if we
340:21 - see this web page how it looks let me
340:23 - just save this file now and try
340:24 - reloading this page once again on the
340:26 - browser as you can see from left to
340:28 - right the entire statement is being
340:30 - displayed so what we can do is we can
340:33 - display them separately so this second
340:35 - line can be displayed on another another
340:37 - line over here so that the width of the
340:39 - content is limited and users find it
340:41 - easy to read your content on the web
340:43 - page so guys this is another best
340:45 - practice that is to have the short
340:47 - sentences and to avoid the long code
340:49 - lines over here as well now guys apart
340:51 - from this we should never skip the title
340:53 - element so inside the head element over
340:56 - here as you can see we have the title
340:57 - that is the document in this case so let
341:00 - me just comment out this line so guys
341:02 - this thing that is commenting out the
341:04 - title tag over here or not having the
341:06 - title tag at all inside your HTML
341:09 - document this is not one of the best
341:10 - practices since it is used in order to
341:13 - display the content on the browser tab
341:16 - over here so when we reload this page as
341:18 - you can see it is displaying the name of
341:20 - this file right now but this is not the
341:22 - best practice we should always have the
341:25 - title of the web page over here and we
341:27 - should set it to the relevant string
341:29 - based on the content of the web page so
341:31 - in this case we will say HTML style
341:35 - guide over here so let me just save this
341:37 - this file now and try reloading this
341:38 - page so as you can see this title of the
341:41 - document is being displayed on the
341:42 - browser tab right now guys similarly we
341:45 - should not omit HTML and the body tags
341:48 - as well so we can remove this HTML and
341:50 - the body tags as well still it will
341:52 - display the web page as it is so let me
341:55 - just remove these text and let me just
341:57 - save this file now and try reloading
341:59 - this page as you can see it is being
342:01 - displayed but guys this is not one of
342:03 - the best practices we should have the
342:05 - HTML and the body tags as as well so
342:07 - that there are no issues in future and
342:09 - all the browsers read your HTML document
342:12 - properly apart from this we should not
342:14 - omit the head tag as well so similarly
342:16 - we should also have the head tag over
342:18 - here inside which there are multiple
342:20 - tags that we must be defining based on
342:22 - our requirements and then very important
342:24 - thing is setting the viewport which
342:26 - helps us in order to make our web page
342:28 - responsive so guys this is the very
342:30 - important line of code over here that is
342:33 - the meta tag along with the name that is
342:35 - viewport inside the head tag over here
342:38 - which will make our web page look good
342:40 - on all device screens so whether it is
342:42 - mobile or tablet or the computer device
342:45 - irrespective of the size of the screen
342:47 - the web page content will be looking
342:49 - decent as far as user experience is
342:51 - concerned so Guys these are some of the
342:53 - HTML best practices from the exhaustive
342:56 - list of all the best practices that you
342:58 - must follow so now we will see form in
343:01 - HTML so guys basically an HTML form is
343:04 - used to collect user input and we are
343:07 - going to check this with the help of
343:08 - examples as well in VSS code the user
343:11 - input is often sent to a server for
343:14 - processing so guys basically we are
343:15 - going to see the form example with the
343:18 - text input and a submit button along
343:20 - with the labels so guys let us move to
343:22 - the vs code over here so in the body tag
343:25 - what we are going to do is we are going
343:27 - to define the form and before that we
343:29 - are going to have the paragraph tag and
343:31 - then we will say below content is in
343:35 - form we will have the form tag over here
343:39 - so as you can see we have the starting
343:40 - form tag and by default we have
343:42 - something called as action attribute now
343:45 - guys inside this action attribute the
343:47 - value can be the name of the file where
343:50 - the user input will be delivered so that
343:53 - further processing can be done so guys
343:55 - we are not going to provide any value
343:57 - for now over here because this is
343:59 - required when we are going to do some
344:01 - server side processing over here now
344:03 - guys inside this form tag first of all
344:05 - we are going to have the label that will
344:07 - Define what input the user is expected
344:10 - to provide so basically we are going to
344:13 - ask the user for first name over here so
344:15 - guys this is nothing but a simple text
344:17 - that will be displayed on the browser so
344:20 - first name followed by a colon in this
344:22 - case this for attribute is present by
344:24 - default and I'm going to explain you
344:26 - what value should come inside the for
344:28 - attribute in some time so guys basically
344:31 - this is just a label that we have
344:32 - defined now let me just save this file
344:34 - now and show you how it looks on the
344:36 - browser so when we reload this page as
344:38 - you can see below content is in form and
344:41 - we are getting the label that is first
344:43 - name over here this is a simple text
344:45 - that we have defined now guys we want a
344:47 - text box over here so that the user can
344:49 - provide his or her first name in the
344:52 - text box so what we can do is after this
344:54 - label we need to provide the BR tag over
344:57 - here so that the text field comes on the
345:00 - next line because the label tag is the
345:02 - inline element that we have defined so
345:04 - after this we come on the next line and
345:06 - then we say input and guys there are
345:08 - many types of input over here you can
345:10 - provide the button input or the checkbox
345:13 - or color or date or date time as well we
345:16 - have email input as well so in this case
345:18 - we are looking for something called as
345:20 - text input so as you can see input
345:22 - followed by colon and then we have
345:24 - something called as text over here which
345:26 - is the type attribute of the input tag
345:29 - so as you can see this is the type
345:31 - attribute for which the value is
345:33 - assigned as text over here and this will
345:35 - help us to provide the text box so that
345:38 - the user can provide its input in the
345:40 - field now guys this name attribute will
345:43 - be used when we submit this particular
345:45 - form and the content goes to the server
345:48 - on the file that will be referenced by
345:49 - the action attribute over here so we can
345:52 - give certain name to this particular
345:54 - input so we can simply provide F name
345:56 - over here and the next attribute that is
345:58 - ID we can simply provide it as first
346:01 - name in this case so guys basically we
346:03 - are having the name as F name and by
346:05 - this F name this this particular input
346:07 - field value will be referred by the
346:10 - server side script and then apart from
346:12 - that we also have the ID over here that
346:14 - is the first name now guys let me just
346:16 - save this file now and try reloading
346:18 - this page once again on the browser so
346:20 - as you can see now we are having a text
346:22 - box over here that will allow the user
346:24 - to provide the input inside the text box
346:27 - in this case now guys what is the
346:29 - importance of this four attribute over
346:31 - here so basically inside the label tag
346:34 - we have the for attribute so that the
346:36 - user can simply click on this first name
346:39 - so what will happen is the ID of the
346:41 - input tag that will be provided inside
346:44 - this for attribute will be activated so
346:47 - guys for now if I show you when we click
346:49 - on this first name nothing is happening
346:51 - over here as you can see the cursor is
346:53 - not coming over here by default inside
346:56 - the text box so what we can do is we can
346:58 - provide the ID of this text box that is
347:00 - first name over here I'll simply copy
347:03 - this and paste it inside the value for
347:05 - this for attribute in this case now let
347:08 - us save this file now and try reloading
347:10 - this page once again on the browser and
347:12 - now if we try to click on this first
347:14 - name the cursor should automatically be
347:17 - activated inside this input field so
347:19 - guys let me just click over here so as
347:21 - you can see after clicking the cursor is
347:24 - activated over here and then we can
347:25 - simply provide the data inside the first
347:28 - name input field so guys this is the
347:30 - importance of this for attribute that
347:33 - helps us to attach that is to bind to a
347:35 - particular input field over here now
347:38 - guys similarly we will have another
347:39 - label for last name as well so what we
347:41 - can do is again we can provide the BR
347:44 - tag so that the last name can be
347:45 - displayed after this input text box over
347:49 - here and then simply I'll copy these
347:51 - lines of code and then paste it over
347:53 - here and simply we will give the ID as a
347:56 - last name in this case the name will be
347:58 - L name over here and then again we will
348:00 - give the ID as last name over here so
348:02 - that the user can simply click on this
348:05 - last name label so that the cursor is
348:07 - activated on the last name text box so
348:10 - let me just save this file now and try
348:12 - reloading this page once again on the
348:13 - browser so as you can see we are getting
348:16 - the last name text box as well over here
348:18 - we have repeated the labels so I'll just
348:20 - correct it quickly so as you can see now
348:22 - we have the first name and last name
348:24 - over here now guys simply we can have
348:26 - the submit Button as well so what we can
348:28 - do is after this we can simply have the
348:31 - input tag once again and this time we
348:33 - will have the submit button so as you
348:35 - can see input colon sub submit this is
348:37 - the emit abbreviation that is the
348:39 - feature provided by the vs code over
348:41 - here and if you are working on simple
348:43 - notepad you can simply type this input
348:45 - tag and Then followed by the space
348:47 - character and then we have something
348:49 - called as type attribute which should be
348:51 - equal to the submit value over here and
348:53 - then guys what value we want the submit
348:55 - button to be displayed so over here we
348:57 - can simply provide the string that is
348:59 - submit over here so this particular text
349:02 - will be displayed on the button so let
349:04 - me just save this file now and try
349:06 - reload loading this page once again on
349:08 - the browser so as you can see submit
349:10 - button is being displayed over here guys
349:12 - you can have any text over here in this
349:14 - case so submit one is the value so
349:17 - basically the string will be updated
349:19 - over here on the submit button so as you
349:21 - can see submit one is being displayed
349:23 - right now so whatever value you want to
349:25 - have for your submit button you can
349:27 - assign it using the value attribute guys
349:30 - we will add one more V tag over here so
349:32 - that it looks more decent so as you can
349:34 - see submit button is being separated
349:36 - with two BR tags over here so this is a
349:39 - very basic form that we have created for
349:41 - now basically the user will be able to
349:44 - provide the first name and the last name
349:46 - and then click on the submit so what
349:48 - will happen is the file name that is
349:50 - provided inside the action attribute
349:52 - over here will be called and along with
349:55 - that the file can access this first name
349:58 - and last name values that is provided by
350:00 - the user and guys this is the main
350:02 - purpose of using forms in HTML we can
350:04 - also provide certain styling to this
350:06 - form so let's say we want this form to
350:08 - be at the center of this page so what we
350:10 - can do is we can come to this head
350:13 - element and then we can provide the
350:14 - style tag over here so basically we are
350:17 - going to provide the form tag and then
350:19 - we can simply use the text align
350:21 - property and then we can use the value
350:23 - as Center over here so that the form can
350:26 - be aligned to the center of the page let
350:29 - me just save this file now and try
350:30 - reloading this page once again on the
350:32 - browser so as you can see the form is
350:34 - being Center aligned over here and and
350:36 - we can also provide the Border as well
350:38 - so let's say we provide the border and
350:40 - it is going to be 2 pixels over here
350:43 - which is of the type solid and then
350:45 - let's say we provide the color of the
350:47 - Border as red in this case let me just
350:49 - save this file now and try reloading
350:51 - this page once again on the browser so
350:53 - as you can see the border of this form
350:55 - is being given and it is a two pixels
350:57 - border with a red border color over here
351:00 - it is not looking that attractive but
351:02 - guys this is the basic knowledge that
351:03 - you should know about the forms over
351:05 - here in HT ml now guys apart from this
351:08 - we also have the other input types so
351:10 - for now we have checked the type that is
351:12 - text over here which only displays a
351:14 - single line text input field we also
351:17 - have something called as radio which
351:18 - helps us to display the radio button
351:21 - which can be used for selecting one of
351:23 - the many choices and then we also have
351:25 - checkbox which displays a checkbox for
351:28 - selecting zero or more number of choices
351:31 - and then we have also seen the submit
351:33 - that will help us in order to show the
351:34 - submit button which is used to submit
351:36 - the form and then we also have something
351:38 - called as the button similar to submit
351:40 - but in this case by default the button
351:43 - will not call the server side script
351:45 - that is provided in the actions so guys
351:47 - that is the main difference between the
351:49 - submit and button type over here so it
351:51 - basically displays the clickable button
351:53 - so guys all these we are going to learn
351:55 - in the upcoming videos as well so now we
351:57 - will see form attributes in HTML so guys
352:00 - basically there are different form
352:01 - attributes that we can use based on the
352:04 - requirements so the first form attribute
352:06 - is the action attribute which defines
352:09 - the action to be performed when the form
352:11 - is submitted so guys let us move to the
352:13 - vs code over here so we will simply
352:15 - remove the previous lines of code that
352:17 - we had written regarding the form so
352:19 - guys basically as you can see inside the
352:21 - form we have something called as action
352:23 - attribute over here we should be
352:25 - providing the file at the server site
352:27 - which will be responsible to handle the
352:29 - input that is provided by the user so
352:32 - guys instead of having the server s side
352:33 - scripting we will be handling it using
352:36 - the client side scripting over here so
352:38 - I'll just remove this entire form for
352:40 - now so that we get the practice once
352:42 - again in order to write the content of
352:44 - the form so guys we are Simply Having
352:46 - the paragraph that is below content is
352:49 - in form so let me just save this file
352:51 - now and try reloading this page on the
352:53 - browser so this is the content so far
352:55 - that we have written in the HTML now
352:58 - guys we will have the form over here and
353:00 - by default as you can see the action
353:02 - attribute is provided and over here we
353:04 - are not going to have any file but for
353:07 - now we will be using the client side
353:09 - scripting that is the JavaScript over
353:11 - here a very basic JavaScript function
353:13 - will be written so no need to worry with
353:15 - practice you will come to know how we
353:17 - can write the HTML along with the
353:19 - JavaScript code as well guys you can
353:22 - subscribe to my YouTube Channel
353:23 - programming for beginners because I'm
353:25 - going to cover the JavaScript tutorial
353:27 - in the upcoming videos as well so you
353:29 - can subscribe to this Channel and click
353:31 - on the Bell icon so that you get the
353:33 - notifications on the upcoming videos as
353:35 - well now guys what we are going to do is
353:37 - we are simply going to have the input of
353:39 - the type text so that we have the first
353:42 - name text box over here so this is the
353:45 - input of the type text and then the name
353:47 - that we are going to provide is the F
353:49 - name and then the ID we are going to
353:51 - provide it as the first name over here
353:54 - so guys let me just save this file now
353:55 - and try reloading this page on the
353:57 - browser so as you can see we have a text
353:59 - field over here but guys we should also
354:01 - have the label for this text field so
354:03 - that the user comes to know what is the
354:06 - input that is being expected from the
354:08 - user so what we can do is before this
354:10 - input we can simply provide the label
354:12 - over here and by default we are having
354:14 - the for attribute in this case and for
354:16 - this the value should be the ID of the
354:19 - input that we are binding this
354:21 - particular label with so guys basically
354:24 - when the user clicks on this label that
354:26 - is the first name over here we are going
354:28 - to provide this label so when the user
354:30 - clicks on this first name label the
354:33 - input that is this text field should get
354:35 - focused or automatically so we are going
354:37 - to bind it by using this ID I'll copy
354:40 - this and paste it inside the for
354:43 - attribute over here so after saving this
354:45 - file let me just reload this page as you
354:47 - can see we are getting the label that is
354:49 - first name and when we click on this
354:51 - label so as you can see the cursor is
354:54 - activated inside the text box field that
354:56 - is the first name over here now guys
354:58 - similarly we will have the last name as
355:01 - well so we are going to provide the BR
355:03 - tag over here and then simply we will
355:05 - copy and paste past these lines of code
355:08 - I will say last name in this case and
355:10 - then we have this last name over here
355:13 - and we also change the ID to last name
355:16 - in this case and the name will be L name
355:18 - over here so guys basically we also have
355:20 - the second text box in this case let me
355:23 - just reload this page as you can see we
355:25 - have the first name and the last name
355:26 - now now guys we are also going to have
355:28 - the submit button over here so let me
355:30 - just have another BR tag over here and
355:33 - then after this we will have the submit
355:35 - button so input followed by colon and
355:38 - then we have something called as submit
355:40 - in this case so guys basically the type
355:42 - value will be submit and the value that
355:44 - we are going to provide in this button
355:46 - is submit over here so that this text is
355:49 - displayed on the button so let me just
355:51 - save this file now and try reloading
355:53 - this page once again on the browser so
355:55 - as you can see submit is being displayed
355:57 - over here now guys what we will do is
355:59 - once we click on this submit we will
356:01 - display the alert by using the
356:03 - JavaScript on this web page so what we
356:06 - can do is we can additionally have the
356:08 - onclick attribute over here so guys this
356:10 - onclick attribute will help us in order
356:13 - to call the function that we will Define
356:16 - inside the JavaScript so guys when we
356:18 - provide the on click attribute and then
356:21 - we need to provide the name of the
356:22 - function or we can also have the
356:24 - JavaScript code being written over here
356:26 - but guys it is best practice in order to
356:28 - have the JavaScript code separated from
356:31 - your HTML code over here so what we can
356:33 - do is we can simply call the test
356:36 - function in this case so we provide the
356:38 - name of the function that is test
356:40 - followed by open and close parenthesis
356:42 - and then guys what we have to do is we
356:44 - need to Define this test function
356:46 - somewhere so inside the head section for
356:48 - now we will be creating the script tag
356:51 - over here and this script tag will help
356:54 - us in order to write the JavaScript so
356:56 - inside the script tag we will first of
356:58 - all have the keyword that is function
357:00 - and we need to Define this function that
357:02 - is test so after this function keyword
357:05 - we have the test that is the function
357:07 - name followed by open and close
357:09 - parenthesis and then we need to provide
357:12 - the open and close curly braces so guys
357:14 - this is how we create a function inside
357:16 - the JavaScript we will be covering about
357:18 - the JavaScript tutorial as well in the
357:20 - upcoming videos so over here what we
357:22 - have to do is first of all we need to
357:24 - extract the value that is provided by
357:27 - the user inside this first name text box
357:30 - over here so we can simply provide
357:32 - document in this case followed by Dot
357:34 - and then get element by ID so guys any
357:37 - HTML element that is having ID over here
357:40 - we can simply call the document that is
357:43 - the keyword followed by Dot and then get
357:46 - element by ID method and then inside
357:48 - this we can provide the ID of that
357:51 - particular HTML element so in this case
357:53 - we are having the first name as the ID
357:55 - so I'll simply copy this and paste this
357:57 - over here and then we need to get the
357:59 - value inside this text box so simply we
358:01 - can have the dot and then value in this
358:04 - case followed by semicolon so so guys
358:06 - this will return us the value that is
358:08 - provided by the user inside this input
358:11 - text box over here now after getting
358:14 - this value we can store it in a variable
358:16 - so in the left hand side we can simply
358:18 - provide where keyword followed by F name
358:21 - over here so guys this is nothing but it
358:23 - is a variable which is used in order to
358:25 - store data now guys this variable we can
358:28 - use in order to provide the alert that
358:31 - is to display the alert so simply we can
358:33 - call the alert function over here and
358:35 - inside the alert function we can simply
358:38 - provide this F name over here so
358:40 - basically we are just displaying the
358:41 - first name that is provided by the user
358:44 - inside the form in this case so let me
358:46 - just provide the semicolon over here so
358:48 - let me just save this file now and try
358:50 - reloading this page once again on the
358:52 - browser and then now we have to provide
358:55 - the first name and the last name so guys
358:57 - let me just provide programming as the
358:59 - first name and beginners as last name
359:03 - over here and then guys when we click on
359:05 - submit we we should see the alert that
359:07 - will just display the first name that is
359:09 - programming so when we click on this
359:11 - submit as you can see this page says
359:13 - programming over here and this is what
359:15 - is being displayed right now with the
359:17 - help of the JavaScript we are just
359:19 - providing the alert on the same page by
359:22 - taking the input from the user by using
359:24 - this form tag over here and in most of
359:26 - the cases this particular data will be
359:28 - sent to the server and a specific file
359:31 - that can be mentioned over here inside
359:33 - the action attribute will be responsible
359:35 - to handle that data so we come over here
359:38 - on the browser and click on okay as you
359:40 - can see we are getting this data on the
359:42 - URL as well because by default it is a
359:45 - get method over here so guys what is the
359:47 - get method we are going to check that as
359:49 - well now before that we also have
359:51 - something called as Target attribute so
359:53 - basically it specifies where to display
359:55 - the response that is received after
359:57 - submitting the form so guys basically
359:59 - when the user clicks on the submit
360:01 - button the data will go to the server
360:04 - and server will provide certain kind of
360:06 - response to the client as well so that
360:08 - response can either be displayed on the
360:10 - same browser tab or a different browser
360:12 - tab that is the new tab over here and
360:15 - that will be defined by this target
360:17 - attribute so guys we have already seen
360:19 - the target attribute previously using
360:22 - the anchor tag so this self value of the
360:25 - target attribute is set by default over
360:28 - here so basically the response from the
360:30 - server will be displayed on the same
360:32 - window but if we provide the target
360:34 - attribute value and as underscore blank
360:37 - over here then the response will be
360:39 - provided in the new tab in this case so
360:41 - guys you can set the value of this
360:43 - target based on your requirement now
360:45 - apart from this we also have something
360:47 - called as method attribute for which by
360:49 - default the method is get method it
360:51 - specifies the HTTP method to be used
360:54 - when submitting the form data so guys
360:57 - basically there are two types of method
360:59 - we have get and post so over here we
361:01 - have the method attribute and as you can
361:04 - see this get method is by by default in
361:06 - which case whatever data is being
361:09 - provided by the user and when the user
361:11 - clicks on the submit button the data
361:13 - will be passed to the server within the
361:15 - entire URL of the page so as you can see
361:18 - till this test.html we have this URL and
361:22 - Then followed by there is a question
361:23 - mark over here and then guys we have
361:25 - something called as F name and L name
361:27 - which we had defined as the name
361:30 - attributes over here inside the text
361:32 - Fields so those variables are being
361:34 - defined over here and the value are
361:36 - being also passed using the URL and
361:38 - these values are being taken from these
361:41 - text boxes for which the data was
361:43 - provided by the user and guys this is
361:45 - the meaning of the get method over here
361:47 - but in case of the post method when the
361:49 - value of this method is post the values
361:52 - will not be passed through the URL but
361:54 - it will be passed in the form of the
361:56 - HTML body parameters shortly we will see
361:58 - the difference between the cat and post
362:00 - after seeing all the attributes over
362:02 - here we also have something called as
362:04 - autocomplete attri attribute which
362:06 - specifies whether a form should have a
362:08 - autocomplete on or off and guys also we
362:11 - have the no validate attribute which
362:13 - specifies that the form data that is the
362:15 - input should not be validated when
362:17 - submitted one example for this no
362:19 - validate attribute can be while we are
362:21 - using the email IDs so we can validate
362:24 - on the client side whether the email ID
362:26 - that is provided by the user is a proper
362:29 - email ID or not so Guys these two
362:31 - attributes I'll leave up to you as a
362:32 - homework for you so that you can
362:34 - practice on your own now guys what is
362:35 - what is the difference between the get
362:37 - and post so basically there are certain
362:39 - notes about the get request over here so
362:41 - it appends the form data to the URL in
362:44 - name value p and that is what we have
362:46 - seen over here it is appending the data
362:49 - in the form of name and value p over
362:51 - here inside the URL itself apart from
362:54 - that we should never use the get to send
362:57 - sensitive data so guys this is just the
362:59 - first name and last name that we are
363:00 - sending what if there is a username and
363:03 - password over here so in that case we
363:05 - should not be using the get request
363:07 - that's because anyone will be able to
363:09 - know what you have sent as the password
363:11 - over here just by looking at the URL
363:13 - because get method will help the data
363:16 - that is the username and password to be
363:18 - passed with the help of the URL over
363:20 - here and then guys the length of the URL
363:22 - is limited that is 248 characters only
363:25 - can be used it is useful for form
363:27 - submissions where a user wants to
363:29 - bookmark the result and get is good for
363:32 - non-secure data as I've have told you it
363:34 - is good for first name and last name
363:36 - kind of data but not for the sensitive
363:38 - data such as password or any other
363:41 - contact details that you don't want to
363:42 - be disclosed so basically the non-secure
363:45 - data it can also be a query strings in
363:47 - Google so guys if you notice when we go
363:50 - to Google over here and type certain
363:52 - string so let's say we provide football
363:54 - as the string over here and when we
363:56 - press enter as you can see after this
363:58 - search we have something called as the Q
364:01 - field over here that is a variable and
364:03 - the value is football and then apart
364:05 - from that we have more name value pads
364:07 - over here so this is basically the get
364:09 - request that is being passed over here
364:11 - and the response we are getting from the
364:13 - server which is being displayed on the
364:15 - browser now guys apart from this we also
364:17 - have something called as post request
364:19 - over here it appens the form data inside
364:21 - the body of the HTTP request and the
364:24 - submitted form data is not shown in the
364:27 - URL so this is perfect when we are
364:29 - sending some sensitive data such as
364:31 - email IDs or passwords or Fields such as
364:34 - contact numbers apart from that post has
364:37 - no size limitations and can be used to
364:39 - send large amounts of data and form
364:42 - submissions with post cannot be
364:44 - bookmarked over here so Guys these are
364:46 - certain differences as far as get
364:47 - request and post request is concerned so
364:50 - now we will see form elements in HTML so
364:53 - guys basically there are various form
364:55 - elements in HTML so one of the form
364:58 - elements is input tag which takes the
365:00 - input from the user so guys let us check
365:03 - this with the help of example in the vs
365:05 - code over over here so first of all what
365:07 - we will do is we will Define the
365:09 - paragraph by using the P tag over here
365:11 - and then we will say below content is in
365:15 - form so guys we have a very simple
365:17 - statement that is below content is in
365:19 - form and then on the next line we will
365:21 - Define the form tag over here so we type
365:24 - form and as you can see this is the Mt
365:26 - abbreviation that is form tag over here
365:29 - we are going to select this and the
365:31 - action attribute helps us in order to
365:33 - provide the name of the server side file
365:36 - that will be responsible in order to
365:38 - handle the data when this form is
365:40 - submitted so guys we are going to ignore
365:42 - this particular action attribute for now
365:44 - since it deals with the file that is on
365:46 - the server side now guys what we are
365:48 - going to do is we are going to Simply
365:50 - provide the input tag over here so that
365:53 - the user can provide certain input so we
365:56 - will provide the input tag in this case
365:58 - and the type will be text over here so
366:00 - guys basically there are multiple types
366:02 - for the input tag so the type text helps
366:05 - us to have a single line text box that
366:08 - will help the user to provide certain
366:10 - data which we can send to the server now
366:12 - guys we can have a particular name to
366:14 - this text box so let's say we provide
366:16 - the name value as name over here and
366:19 - then let's say we provide the ID as
366:22 - YouTube channel so guys basically we are
366:24 - going to provide the YouTube channel
366:26 - name in this particular text box and
366:28 - that is why we have given the ID that is
366:30 - YouTube channel we can modify it as
366:33 - YouTube channel name over here so that
366:35 - it becomes more specific and over here
366:37 - as well we will say YT and then name
366:40 - over here so guys basically we have
366:42 - provided the input text box in this case
366:44 - let me just save this file now and try
366:46 - reloading this page once again on the
366:48 - browser so as you can see below content
366:51 - is in form and we are Simply Having the
366:53 - text box over here that will allow the
366:55 - user to provide certain data inside the
366:58 - text box in this case but guys this
367:00 - Standalone text box doesn't give us much
367:03 - idea about what kind of data is being
367:05 - expected from the user so basically we
367:07 - have another form element that is the
367:09 - label element which will Define the
367:12 - label for this input so guys what we can
367:14 - do is before this input we can have the
367:16 - label tag as well so over here we can
367:19 - provide the label and then guys we have
367:21 - something called as for attribute which
367:23 - will take the value as the ID of the
367:26 - input that we want this label to link
367:29 - with so guys this label will be related
367:31 - to this text box so we should have the
367:33 - ID of this text box being copied and
367:36 - pasted over here as the value of this
367:38 - for attribute so that when the user
367:40 - clicks on this label this particular
367:43 - input text field gets activated so we
367:45 - need to provide the label that is
367:48 - Youtube channel name over here so guys
367:51 - basically this is the simple text that
367:53 - will be displayed to the user so that he
367:55 - or she comes to know that what input is
367:57 - being expected to be provided inside
368:00 - this text box after this label we will
368:02 - have the line break so that the input is
368:04 - displayed on the next line line and over
368:06 - here as well we are going to have the
368:07 - line break in this case let me just save
368:10 - this file now and try reloading this
368:11 - page once again on the browser so as you
368:14 - can see now we have the YouTube channel
368:16 - name and this makes more sense since the
368:18 - user comes to know that inside the text
368:21 - box you are supposed to provide the name
368:22 - of this YouTube channel so guys
368:24 - basically this for attribute helps us in
368:27 - order to click on this label so that we
368:29 - can activate this text box over here so
368:31 - when we click on this YouTube channel
368:33 - name so as you can see the text box is
368:36 - being activated now and then we can
368:38 - simply provide the name of this YouTube
368:40 - channel which you should definitely
368:42 - subscribe if you have not done so so
368:44 - basically we have provided the name that
368:46 - is programming for beginners over here
368:48 - by using the simple label and the input
368:50 - text box now guys let us move to another
368:52 - element we have something called a
368:54 - select which helps us in order to
368:56 - provide the drop-down list so guys over
368:59 - here we can provide the select tag as
369:01 - well so when we provide the select tag
369:03 - we again have the name and the ID over
369:05 - here so let's say we provide the name as
369:07 - social media in this case so we are
369:09 - going to provide the list of social
369:11 - media platforms and the ID we will again
369:14 - keep it as social media so over here we
369:16 - will copy and paste it as the social
369:18 - media over here now guys what we have to
369:20 - do is in between the select starting and
369:23 - the ending tag we need to have the list
369:25 - of values being defined over here so
369:27 - simply we can have the option tag so as
369:30 - you can see option tag will help us in
369:33 - order to have the list of values that we
369:35 - can provide inside the select tag over
369:38 - here so basically the first option let
369:40 - us say we have YouTube as the first
369:43 - option in this case and then let me just
369:45 - copy this and paste it few times so that
369:47 - we can provide the different values for
369:49 - these options so let's say we have the
369:51 - second option is Facebook and then let's
369:54 - say the third option is Instagram over
369:56 - here and then let's say we have Twitter
369:58 - in this case so basically we have four
370:01 - social media platforms over here that we
370:03 - have defined and then guys we also have
370:05 - to provide the value attribute over here
370:09 - because this is the value that is going
370:10 - to be passed to the server and server
370:13 - will differentiate between all these
370:15 - list of values by using the value inside
370:18 - this value attribute so basically we are
370:20 - going to Simply have YouTube as the
370:22 - value over here and we can also have
370:25 - Facebook in this case as the value of
370:27 - the second option and then over here we
370:30 - have Instagram and for the last option
370:32 - we will simply have Twitter so guys
370:34 - basically these are nothing but the
370:36 - values that we have provided and these
370:38 - values will be used on the server side
370:40 - when the user clicks on the submit
370:42 - button these values will be passed for
370:44 - the list of options and guys the text
370:46 - that we have provided that is YouTube
370:48 - Facebook Instagram and Twitter over here
370:51 - this will be displayed at the UI site to
370:53 - the user so let me just save this file
370:56 - now and try reloading this page once
370:58 - again on the browser so as you can see
371:00 - we are getting a drop down field over
371:02 - here and we need to click on this drop
371:04 - down field and we will get all the
371:06 - options in this case so by default the
371:08 - first option is selected over here and
371:11 - when we click on this we can select one
371:13 - of the options so let's say we select
371:15 - Instagram over here so when we click on
371:17 - this so Instagram is selected in this
371:19 - case so guys basically whatever value is
371:21 - being selected over here it will be
371:23 - passed to the server for further
371:25 - processing and again we can have the
371:26 - label over here so after this BR line
371:29 - break we will have another line break
371:31 - over here and let's say we provide the
371:33 - label in this case and this label should
371:35 - belong to this select tag over here so
371:38 - I'll just copy the ID of the select tag
371:40 - and paste it over here and then we will
371:43 - say social media platforms over here so
371:47 - guys we have social media platforms and
371:49 - then we will again have the line break
371:51 - so that all the options are being
371:52 - displayed on the next line let me just
371:54 - save this file now and try reloading
371:56 - this page once again on the browser so
371:58 - as you can see we are getting the social
372:00 - media platforms over here now guys by
372:02 - default the first option will be
372:04 - selected that is YouTube so how do we
372:06 - make this second option that is Facebook
372:09 - as selected over here so simply what we
372:11 - can do is we can come to this option
372:13 - that is Facebook and after the value
372:16 - inside the starting tag we can simply
372:18 - provide selected attribute over here so
372:21 - as you can see if present this Boolean
372:24 - attribute indicates that the option is
372:26 - initially selected so we simply provide
372:29 - this selected option over here let me
372:31 - just save this file now and when we
372:33 - reload this page by default you will be
372:35 - seeing the Facebook option that is
372:37 - selected in this case so when we reload
372:40 - this page as you can see Facebook is
372:42 - being selected by default and then you
372:44 - have to click on this option and then
372:46 - you will see all the list of items that
372:48 - are present in the drop down so guys
372:50 - whatever option you want to display by
372:53 - default as selected option you can
372:55 - provide the selected keyword over here
372:57 - in order to show that particular option
373:00 - selected by default so over here we have
373:02 - selected Twitter in this case let me
373:04 - just save this file now and try
373:05 - reloading this page so as you can see
373:07 - Twitter is being selected by default
373:10 - over here guys similarly for the input
373:11 - field we can also have the value
373:14 - attribute over here so when we provide
373:16 - the value attribute we need to provide
373:19 - certain string over here so let's say we
373:21 - provide test SD string to the value
373:23 - attribute let me just save this file now
373:25 - so guys basically this test string will
373:27 - be displayed by default when the user
373:30 - reloads this page so when we reload this
373:32 - page as you can see test is the YouTube
373:35 - channel name by default and then user
373:37 - can provide the name of the YouTube
373:39 - channel based on the requirements now
373:41 - guys apart from this we have something
373:42 - called as text area which is the
373:44 - multi-line input field so guys we can
373:47 - have the multiple line input field as
373:49 - well if you are expecting a long input
373:52 - from the user such as a feedback or the
373:55 - remarks input so guys what we have to do
373:57 - is inside the vs code over here we have
374:00 - something called as text area so as you
374:02 - can see this is the tag and then we can
374:05 - provide the name such as we can provide
374:07 - remarks over here and then again the ID
374:10 - that we are going to provide is remarks
374:12 - in this case and then guys we have
374:14 - something called as rows and calls over
374:16 - here so this is going to define the
374:18 - number of rows meaning how many number
374:20 - of rows vertically the text area will
374:23 - occupy the space and then horizontally
374:25 - how many columns the text area will be
374:27 - occupying the space so over here by
374:30 - default the rows are 10 and the columns
374:32 - are 30 in this case and then guys before
374:34 - this we can also have the label that is
374:37 - assigned to this text area so simply we
374:39 - will have the label and for the for
374:42 - attribute we are going to provide the ID
374:44 - of this text area so I'll simply copy
374:46 - the remarks ID and paste it over here
374:49 - and then simply we will provide the
374:51 - remarks label over here followed by
374:53 - colon and then we also have the line
374:56 - break over here at the end of the label
374:58 - and guys in between the text area tags
375:00 - we can provide the hint to the user we
375:03 - can say provide your remarks so guys let
375:07 - me just save this file now and try
375:09 - reloading this page once again on the
375:11 - browser so as you can see this is the
375:13 - multi-line input field that is
375:16 - expandable over here so guys on the
375:18 - bottom right as you can see when you get
375:19 - the cursor it gets converted to this
375:21 - Arrow cursor over here and we can simply
375:24 - click it and drag it to the appropriate
375:26 - point so that we can increase or
375:28 - decrease the size of this particular
375:30 - text area and this is the hint that is
375:32 - provided to the user we can provide the
375:34 - remarks over here and we can simply say
375:37 - this is programming for beginers YouTube
375:43 - channel which I have subscribed so guys
375:48 - basically this is the multi-line input
375:50 - that can be provided by the user with
375:52 - the help of the text area HTML element
375:55 - now guys apart from this we also have
375:57 - the button form element over here which
375:59 - will help us in order to display the
376:01 - clickable button so what we can do is
376:04 - simply inside the this form we can have
376:06 - the input tag over here followed by
376:09 - colon and then we have something called
376:11 - as button in this case so guys basically
376:13 - the type will be button so we have
376:15 - already seen the type that is text which
376:17 - is the input field the type button will
376:19 - be a clickable button and the value will
376:22 - be provided over here inside the value
376:24 - attribute which will be displayed on the
376:27 - button itself so for the value attribute
376:29 - we can simply say click me over here
376:31 - followed by exclamation mark So guys let
376:34 - me just save this file now and try
376:35 - reloading this page once again on the
376:37 - browser so as you can see we have this
376:39 - click me button which is being displayed
376:41 - on the right and when we click on this
376:43 - since we have not added any JavaScript
376:46 - code over here nothing will happen but
376:48 - we can simply click on this particular
376:50 - button and based on our requirements
376:52 - carry out the actions that we want to
376:54 - perform now simply we can have the line
376:56 - break after this text area so that the
376:59 - button is displayed on the next line
377:01 - over here so let me just save this file
377:03 - now and try reloading this page so as
377:05 - you can see over here we are getting the
377:07 - button that is being displayed on the UI
377:09 - now guys apart from this we have
377:11 - something called as field set and the
377:13 - legend as well which helps us in order
377:15 - to group the form elements and provide
377:17 - name to the form so guys this entire
377:20 - form that we have seen just now right
377:22 - from the YouTube channel name and then
377:24 - we have social media platforms which is
377:26 - the select element and then we have the
377:28 - remarks which is the text area and then
377:31 - we also have the button this entire form
377:33 - can be enclosed in between the field set
377:36 - which is nothing but grouping of the
377:39 - form elements so what we can do is we
377:41 - can have the field set tag over here so
377:44 - guys what we are going to do is first of
377:45 - all I'm going to set the word rap so
377:48 - that all the content is being displayed
377:50 - on this screen instead of using the
377:52 - horizontal scroll bar now after this
377:54 - form element over here we can simply
377:56 - have the field set in this case so this
377:59 - is the field set tag over here and I'll
378:02 - cut this field set ending tag and paste
378:05 - it after the last input that is the
378:07 - button over here now let me just save
378:09 - this file now and try reloading this
378:11 - page once again on the browser so as you
378:13 - can see we are getting a border in this
378:16 - case and this is defining our form that
378:18 - is all the form elements are present
378:21 - inside this border now guys we can also
378:23 - give the name to this form that will be
378:25 - displayed over here along with the
378:27 - border so what we can do is we can have
378:29 - the legend tag over here so we provide
378:32 - Legend tag and we simply have to Pro
378:34 - provide the name of the form so let's
378:36 - say we provide the name of the form as
378:38 - test form over here so let me just save
378:40 - this file now and try reloading this
378:42 - page on the browser so as you can see
378:45 - along with the Border we are getting the
378:47 - name that is test form over here with
378:49 - the help of the legend tag so guys this
378:51 - is the main functionality of the field
378:53 - set which will help us in order to group
378:56 - the entire content of the form and the
378:58 - legend tag that will give the name to
379:00 - that particular form so guys apart from
379:02 - this we also have something called as
379:04 - data list over here which will help us
379:06 - in order to display the list of the
379:08 - drop- down options so guys what we will
379:10 - do is after this button we are going to
379:13 - have the data list over here so guys
379:15 - basically we are going to have the input
379:17 - tag over here and for this input tag
379:20 - instead of having the type attribute we
379:22 - will be having the list attribute so
379:24 - over here we will say list and we will
379:26 - give some value to this list so let's
379:29 - say we provide the browsers as the value
379:31 - to this list now guys we are supposed to
379:33 - define the list list of browsers which
379:36 - will be displayed as the drop- down for
379:38 - this input list over here so what we can
379:40 - do is on the next line we can have the
379:43 - data list as the tag in this case and
379:45 - guys for this data list tag we are going
379:47 - to have the ID which will be equal to
379:50 - the value of this list attribute for
379:53 - this input so I'm going to copy this and
379:55 - paste it as the ID over here and in
379:57 - between this data list starting and the
379:59 - ending tag we are going to have the list
380:02 - of options so let's say the first op
380:04 - option over here is Chrome in this case
380:07 - and the value that we are going to
380:08 - provide is Google Chrome over here so we
380:11 - say Google Chrome and then after this we
380:14 - will have more options over here so we
380:16 - will say another browser as Firefox and
380:20 - then let's say we provide Safari as the
380:23 - third option and then let's say we have
380:25 - Edge as the fourth option so let's say
380:27 - over here we say Firefox Guys these
380:30 - values will be displayed on the UI that
380:32 - we provide in between the starting and
380:34 - the end ending tag and the values that
380:36 - we provide will be passed to the server
380:38 - so over here we have Safari as the third
380:41 - browser and then we have MS Edge that is
380:45 - Microsoft Edge as the fourth option over
380:48 - here now guys let me just save this file
380:50 - now and try reloading this page once
380:52 - again on the browser so as you can see
380:54 - we have CAU another input field over
380:56 - here and you can see there is a drop
380:58 - down option in this case so when we
381:00 - click on this drop down option as you
381:02 - can see these are the options that we
381:04 - have are getting so guys we are getting
381:06 - the value as well along with it the text
381:08 - that we had given that is Chrome over
381:10 - here for Google Chrome and then we are
381:12 - getting Firefox Safari and Edge so guys
381:15 - this is another way in order to show the
381:18 - list of options by using the data list
381:21 - and binding it with the input tag by
381:24 - using the list attribute which will have
381:26 - the value as the ID of the data list tag
381:29 - so Guys these are certain form elements
381:31 - that you can use based on your
381:32 - requirements so now we will see input
381:35 - type text in HTML form so guys basically
381:38 - this is the format we have the type
381:40 - attribute in order to Define what kind
381:42 - of input we are expecting from the user
381:45 - so in this case we are going to see the
381:47 - type attribute for which the value is
381:49 - text which defines a single line text
381:52 - input field so guys for example if you
381:55 - are having a website wherein there is a
381:57 - registration form and you want the user
381:59 - to provide the full name that is the
382:01 - first name and last name so such input
382:04 - Texs with the type text can be used in
382:06 - order to help the user provide the first
382:09 - name and the last name data apart from
382:11 - that while you are logging in into some
382:13 - of the websites you will be seeing that
382:15 - username is one of the text fields and
382:17 - that is of the type text over there so
382:20 - guys let us check this with the help of
382:21 - examples in vs code over here so first
382:24 - of all we will have a simple paragraph
382:26 - and then we will say below content is in
382:30 - HTML form so guys this is a very simple
382:33 - statement below content is in HTML form
382:36 - and then what we will do is we will
382:37 - Define the form over here and by default
382:40 - we are getting the action attribute we
382:42 - will ignore this particular attribute
382:44 - for now because we are just checking the
382:46 - input type that is a basic text field
382:49 - with the help of the input tag over here
382:51 - for which the type will be text so guys
382:53 - what we have to do is inside the form we
382:56 - can simply have the input followed by
382:58 - colon and then we can type text over
383:00 - here so guys this is the Mt abbreviation
383:03 - that is provided by the vs code which is
383:05 - one of the special features of the VSS
383:08 - code and this is the reason why majority
383:10 - of the software developers use VSS code
383:12 - as one of their editors so guys when we
383:15 - select this option as you can see the
383:17 - type is text over here and by default
383:19 - the input tag provides a type as text
383:22 - and this will be a basic text field that
383:24 - will be displayed on the UI so guys let
383:27 - me just save this file now and try
383:29 - reloading this page once again on the
383:30 - browser so as you can see below content
383:33 - is in HTML form form paragraph is being
383:35 - displayed and then we are having a
383:37 - simple text field over here that will
383:39 - allow the user to provide the data over
383:42 - here and guys this is a very simple way
383:44 - in order to provide a text field by
383:46 - using the input tag over here with the
383:49 - type attribute as text value guys apart
383:52 - from that we can also have the label for
383:54 - this particular text field so what we
383:55 - will do is we will provide the name as F
383:58 - name over here which is first name and
384:00 - then let's say we provide the ID as
384:02 - first name in this case now guys this
384:04 - particular ID will be used inside the
384:06 - label tag that we are going to Define so
384:08 - before this input tag we will say label
384:11 - in this case and we are having the for
384:13 - attribute which will be expecting the ID
384:16 - of the input tag that we want to link
384:19 - this particular label tag over here so
384:21 - what we will do is we will copy the ID
384:23 - that is first name and paste it as the
384:25 - value for this for attribute and then we
384:27 - will give the label as first name in
384:29 - this case so we have given the first
384:32 - name label over here after the label we
384:34 - will provide the line break in this case
384:36 - so that we can see the text field on the
384:39 - next line over here so guys let me just
384:41 - save this file now and try reloading
384:43 - this page once again on the browser so
384:45 - as you can see first name label is being
384:47 - provided over here and this is a basic
384:49 - text field that is being displayed right
384:51 - now and guys what is the importance of
384:53 - this for attribute so as you can see
384:56 - when we click on this first name the
384:58 - cursor will be activated inside this
385:01 - text field which is linked to this first
385:03 - name label so when we we click on this
385:05 - as you can see now we can provide the
385:07 - first name and we can type the first
385:09 - name over here inside the text field in
385:11 - this case now guys similarly we can also
385:13 - have the last name over here so what we
385:15 - can do is simply I'll copy this lines of
385:18 - code and paste it after the first input
385:20 - tag over here and then simply we can
385:22 - change the ID to last name in this case
385:25 - and over here as well we will change the
385:27 - ID to last name over here the name will
385:29 - be changed to L name we will update the
385:31 - label as well to last name in this case
385:34 - let let me just save this file now and
385:35 - try reloading this page once again on
385:37 - the browser so as you can see we have
385:39 - got the last name as well so when we
385:41 - click on this last name the text field
385:44 - is automatically activated over here and
385:46 - user can provide the required data in
385:49 - this particular text field as well now
385:51 - guys what happens when we provide the
385:53 - incorrect IDs for this for attribute so
385:55 - let's say we provide the last name ID to
385:58 - this first label over here and the first
386:00 - name ID to the second label over here so
386:03 - let me just save this file now and try
386:05 - reloading this page now what will happen
386:07 - is when we click on this first name
386:09 - since this first name is now linked to
386:12 - the second input field the cursor on the
386:15 - second input field will get activated
386:17 - when we click on this first name over
386:19 - here as you can see the cursor in the
386:21 - second input field is getting activated
386:23 - and whatever we type will be displayed
386:25 - in the second input field and when we
386:27 - click on this last name over here so
386:29 - when we click on this as you can see the
386:31 - cursor is getting activated on the first
386:34 - input field so guys that is the
386:36 - importance of providing the correct ID
386:38 - inside this for attribute so whichever
386:41 - input field we want to get activated we
386:43 - should provide the ID of that input
386:46 - field to this for attribute over here
386:48 - inside the label tag and Guys these are
386:50 - certain things you should know as far as
386:52 - input type of text is concerned so over
386:55 - here we are clicking on the correct
386:57 - label and the cursor is getting
386:59 - activated in the required input field
387:01 - over here this text field will be used a
387:03 - lot when you are going to work on the
387:05 - real projects as well so now we will see
387:08 - input type password in HTML form so guys
387:11 - basically we can have the input tag and
387:14 - we can set the value of the type
387:16 - attribute over here as password so that
387:19 - whatever content you type inside this
387:21 - particular input field will not be
387:23 - displayed on the UI and the main use
387:26 - case over here is when you are logging
387:27 - in into a particular website you are
387:30 - providing your username and when you
387:32 - type the password you don't want someone
387:34 - else to see while you're typing it on
387:37 - the screen and that is where we use the
387:39 - input type password over here which
387:41 - defines the password field in this case
387:44 - so guys let us check this with the help
387:45 - of examples in vs code over here so
387:48 - previously we had checked the input type
387:51 - that is text which allows us to provide
387:53 - certain kind of input with the help of a
387:55 - text field and this is how we can see
387:57 - the text field over here so guys what we
388:00 - will do is we will make some changes in
388:02 - this case so we will remove the second
388:04 - input field over here we will keep the
388:06 - first label as username in this case so
388:09 - we will change the label to username
388:11 - over here and the input type will be
388:14 - text and we will set the name as
388:16 - username which will be used by the
388:18 - server in order to refer to the value
388:21 - provided into this text field and the ID
388:23 - that we provide over here will be
388:25 - username in this case and as I've told
388:27 - you the ID of this input must be set as
388:30 - the value for the for attribute over
388:32 - here for the label so that when the user
388:35 - clicks on this username label the cursor
388:38 - for this text field will be activated so
388:40 - we change this to user name in this case
388:43 - let me just save this file now and try
388:44 - reloading this page on the browser so as
388:47 - you can see we have a simple text field
388:49 - over here with a username label and when
388:51 - the user clicks on this username this
388:54 - particular text field will get activated
388:56 - and we can simply provide the username
388:58 - for the login purpose now guys what we
389:00 - will do is we will have another field
389:02 - over here which will be the password
389:04 - field but we want that field to be of
389:07 - the type password so that whatever we
389:09 - type inside that particular text field
389:12 - will not be displayed over here since
389:14 - password should be secret so what we
389:16 - will do is I will simply copy and paste
389:18 - these lines of code over here that is
389:20 - label and input and for this input that
389:23 - is the second input over here we will
389:25 - change the type to password in this case
389:28 - so as you can see the type is equal to
389:30 - password and the name we will change it
389:32 - to password over here here and then the
389:35 - ID as well we will change it to password
389:37 - in this case now guys this particular ID
389:39 - should be linked to this label so I'll
389:41 - copy this ID and paste it inside the for
389:45 - attribute over here and the label should
389:47 - be password in this case so we have
389:50 - changed the label as well let me just
389:52 - save this file now and try reloading
389:54 - this page once again on the browser so
389:56 - as you can see we have got the password
389:58 - text field as well now guys because we
390:00 - have set the type as password over here
390:03 - whatever we type type inside this
390:05 - password text field will not be
390:07 - displayed to the user so when we start
390:10 - typing over here inside this text field
390:12 - so over here we are not able to see the
390:14 - characters that I am typing right now
390:16 - but the same thing when we type over
390:18 - here in the username you can see that we
390:20 - can type anything that we want and we
390:22 - can see it inside the text field over
390:24 - here so guys this is the main
390:25 - functionality of the input type password
390:28 - over here it doesn't allow anyone else
390:30 - to see what exactly you are typing
390:32 - inside that text box now guys when we
390:34 - are working of sending of this data that
390:36 - is username and password it is
390:38 - recommended that we use the post request
390:40 - over here so for example let's say we
390:43 - have another input that is the submit
390:45 - button over here so we will say input
390:47 - type submit and then the value that we
390:49 - provide is submit in this case let me
390:51 - just save this file now and try
390:52 - reloading this page as you can see we
390:55 - have provided submit button in this case
390:57 - so guys when we click on the submit
390:58 - Button as you can see username is equal
391:01 - to so some data will be sent sent over
391:04 - here that's because by default the
391:06 - method for this form tag is get request
391:09 - so we have another attribute over here
391:11 - that is method for which there are two
391:13 - values that we can use the get request
391:16 - which is by default the value that is
391:18 - set for this method attribute and that
391:20 - is what we are using right now over here
391:22 - and the post request which will help us
391:25 - in order to hide this data so by default
391:27 - the get request is being called over
391:29 - here so what exactly is happening I'll
391:31 - show you once again over here we will
391:33 - reload this page and let's say for
391:35 - username we provide username over here
391:37 - and for password we provide simple
391:39 - password in this case but guys when we
391:41 - click on submit over here as you can see
391:44 - the username is equal to username that
391:46 - was provided and password is equal to
391:48 - you can see that what I have typed over
391:50 - here is being displayed inside the URL
391:53 - so we should avoid this whenever we are
391:56 - dealing with submission of the form and
391:58 - that form contains some sensitive data
392:01 - so how we can avoid it is by using the
392:03 - post request over here so when we
392:05 - provide the post method and the request
392:08 - goes to the particular file that we
392:10 - Define in the action attribute in such
392:13 - case the username and password data will
392:15 - be sent as part of the HTTP request so
392:18 - guys it won't be displayed inside the
392:20 - URL over here so let me just save this
392:22 - file once again and try reloading this
392:25 - page on the browser so now if we provide
392:27 - the username in this case and then let's
392:30 - say I provide some password over here
392:32 - and click on submit as as you can see
392:34 - the URL is not displaying the username
392:36 - and password over here but it will be
392:38 - passed to the server as the HTTP request
392:41 - so in such cases when the passwords
392:43 - needs to be validated or if there is any
392:46 - sensitive data that is supposed to be
392:48 - sent on the server side we must use the
392:50 - post request over here by mentioning it
392:53 - to the method attribute of the form tag
392:56 - so that our sensitive data is protected
392:58 - from any other viewer who is trying to
393:00 - submit the form so guys this is the way
393:02 - that we can create the password text
393:04 - field using the HTML form so now we will
393:07 - see input type submit in HTML form so
393:11 - guys basically we can use the input tag
393:13 - along with the type attribute whose
393:16 - value can be submit in order to display
393:18 - the submit button so basically it
393:20 - defines a button for submitting the form
393:23 - data to a form Handler so guys let us
393:25 - check this with the help of examples in
393:27 - vs code so basically inside the form if
393:30 - you want to submit the form data we can
393:33 - use this submit button over here so
393:35 - first of all we will have a paragraph
393:37 - and it will say below content is in HTML
393:40 - form so guys we have a very simple
393:42 - statement over here below content is in
393:45 - HTML form and then guys we will be
393:47 - defining the form over here so as you
393:49 - can see by default we are getting the
393:52 - action attribute in this case for which
393:54 - the value should be a server side file
393:56 - which will be handling the input that is
393:58 - provided by the user in the text Fields
394:00 - inside this form so guys what we will be
394:03 - doing is we we will provide the text
394:04 - field for the username so basically we
394:07 - are going to have the input and Then
394:08 - followed by colon we are going to have
394:11 - text over here so as you can see the
394:13 - type is set to text in this case so
394:15 - basically it is going to display a
394:17 - normal text field over here and then we
394:19 - will say username as the name attribute
394:23 - and the ID attribute as username once
394:26 - again now guys let me just save this
394:27 - file now and try reloading this page on
394:29 - the browser so as you can see below
394:31 - content is an HTML form and and then we
394:34 - are getting the text field over here now
394:36 - guys we must also have the label that is
394:38 - associated to this text field so what we
394:40 - will do is before the input tag we will
394:43 - have the label tag over here and then we
394:45 - will bind this input tag with the help
394:47 - of the ID so we will copy this ID and
394:50 - paste it as the value for this for
394:52 - attribute over here for the label tag so
394:55 - guys I'll paste this ID for the for
394:57 - attribute and over here we will give the
394:59 - label as username in this case and then
395:02 - we will also give the braks for both the
395:04 - tags over here so guys basically we have
395:06 - defined the label over here for the
395:08 - username now guys we can also set a
395:10 - default value for this username text
395:13 - field so we also have something called
395:15 - as value attribute which can help us to
395:18 - provide the default value inside this
395:20 - text field when the user loads this page
395:23 - so we can simply provide user as the
395:25 - default value in this case so guys let
395:27 - me just save this file now and try
395:29 - reloading this page once again on the
395:31 - browser so as you can see username is
395:33 - the label and we are getting the default
395:36 - value that is user in this case and when
395:38 - the user clicks on the label or the text
395:40 - field the user will be able to edit this
395:43 - text field over here so we can simply
395:45 - provide our own username that we had
395:48 - used in order to register on a
395:50 - particular website now guys apart from
395:52 - this let us also provide the password
395:54 - text field over here so we will simply
395:56 - copy and paste these lines of code and
395:59 - then for this type we are supposed to
396:01 - change it to password in this case for
396:03 - the name attribute we will change it to
396:05 - password and ID as well we will change
396:08 - it to password over here and in this
396:10 - password text field we don't need any
396:12 - value because user will be providing his
396:14 - or her own password in the text field so
396:17 - we are going to remove the value part
396:19 - and then we will also provide the label
396:22 - as password over here and once again we
396:24 - are going to link this label with this
396:26 - input type that is password so I'll copy
396:29 - the ID inside the for attribute of the
396:31 - label so let me just save this file now
396:33 - and try reloading this page once again
396:35 - on the browser as you can see we have
396:37 - two Fields username and password now
396:39 - comes the most important part that is
396:42 - how we can create the submit button so
396:44 - guys basically we can have the input tag
396:46 - with the type submit over here so that
396:48 - the username and password that is
396:50 - provided by the user can be sent on the
396:52 - server for further processing so what we
396:55 - can do is again over here we have to
396:57 - provide the input and this time it
397:00 - should be of the type submit so as you
397:02 - can see input colon we have something
397:04 - called a submit over here this is the
397:06 - emit abbreviation that is provided by
397:08 - the vs code so guys basically type A
397:10 - submit and for this value attribute we
397:12 - can provide the text that we want to
397:14 - display on this submit button so guys
397:17 - simply we can provide submit in this
397:19 - case so the submit text will be
397:21 - displayed on the button so let me just
397:23 - save this file now and try reloading
397:25 - this page once again on the browser as
397:27 - you can see this is the submit button
397:29 - that we have created with the help of
397:31 - this type attribute for which the value
397:33 - is submit over here now guys when the
397:35 - user clicks on this submit the username
397:38 - and password will be passed to the
397:40 - server side for further processing so
397:42 - let's say we provide some username over
397:44 - here so we say programming and then
397:47 - let's say we provide test password over
397:49 - here so we say test password in this
397:51 - case so over here the data is masked
397:54 - that's because the password type of the
397:56 - input field doesn't allow us to see what
397:59 - data is being provided by the user so
398:01 - let me just click on submit over here so
398:03 - as you can see in the URL we are getting
398:05 - the username is equal to programming and
398:08 - password it is equal to test password
398:10 - over here and guys this is the way that
398:12 - the form is submitted by using the
398:14 - submit value for the type attribute in
398:16 - the input tag guys it is important that
398:19 - whenever you are submitting the form if
398:21 - it contains any sensitive data such as
398:23 - in this case we have the password field
398:26 - it is recommended that we send the data
398:28 - using the post method so by default
398:30 - inside the form the method attribute is
398:33 - having the the value as get and for that
398:35 - reason we will see all the form data
398:37 - being passed in the URL over here which
398:39 - is not the best practice as far as
398:41 - security is concerned so guys basically
398:43 - we can have the method attribute in this
398:46 - case and then we can say post over here
398:48 - so that whatever form data is present it
398:51 - is sent as part of the HTTP request
398:53 - inside the body and not as the URL over
398:56 - here so let me just save this file now
398:58 - and try reloading this page once again
399:00 - on the browser so now if we provide the
399:02 - username and password over here so let's
399:04 - say I provide username and then password
399:07 - is let's say password test in this case
399:10 - and when we click on submit over here
399:12 - now there is no URL change this time
399:14 - that's because we have provided the form
399:17 - data by using the post request over here
399:19 - and all the data is going as the part of
399:21 - body of the HTTP request so guys this is
399:24 - the way that we can easily create the
399:26 - submit button inside the form by using
399:29 - the type attribute for which the value
399:31 - can be submit for the input tag so now
399:34 - we will see input type reset in HTML
399:37 - form so guys basically the input tag
399:40 - along with the type value as reset will
399:43 - Define a reset button that will reset
399:45 - all the form values to their default
399:47 - values so guys let's say for example you
399:50 - have multiple text fields in a
399:52 - particular form and then when the user
399:54 - tries to enter some data and wants to
399:57 - reset all the data that is clear the
399:59 - data in such cases it would be very
400:01 - helpful in order to provide a button
400:03 - that will help the user to reset all the
400:06 - data and this input tag with the type
400:09 - reset will help us to do the same so let
400:11 - us check this with the help of examples
400:13 - in vs code so guys previously we had
400:15 - seen that we had provided the username
400:17 - text field along with that we had also
400:19 - provided the password text Fields along
400:21 - with their labels and then we had also
400:23 - provided the submit button we had
400:26 - provided the value that is user by
400:28 - default to the username text field so
400:31 - let me show you how it looks on the
400:32 - browser so this is the content of the
400:35 - previous code that we had return so we
400:37 - have a normal username and then we have
400:39 - the password and then we have the submit
400:41 - button in which case we can simply
400:43 - provide the username over here and we
400:45 - can also provide the password which will
400:47 - not be displayed to the user or any
400:49 - other person who is seeing your screen
400:51 - and then we have the submit button now
400:53 - guys let's say the user wants to clear
400:55 - all this data what we can do is simply
400:58 - we can have the input tag along with the
401:00 - type value which is reset over here so
401:03 - guys let me just Define that as well so
401:05 - we provide input followed by colon and
401:07 - then we have something called as reset
401:09 - over here guys this is the m
401:11 - abbreviation that we can use in the vs
401:13 - code over here as you can see input type
401:16 - reset will be autogenerated when we type
401:18 - this so if you're working on any other
401:20 - text editor such as notepad or notepad++
401:23 - you need to manually type all these
401:25 - characters over here as you can see
401:27 - inside the tag we have the type
401:29 - attribute and the other attributes as
401:31 - well but if you are working with the V s
401:33 - code you can make use of this emit
401:35 - abbreviation over here so we click on
401:37 - this particular option as you can see
401:39 - this is the tag that is input followed
401:42 - by type attribute and then we have the
401:44 - reset value as the type now guys we can
401:47 - also have the value on this button to be
401:49 - set so either we can say reset or we can
401:52 - simply say clear over here so basically
401:55 - this is the text that will be displayed
401:56 - on the button in this case so let me
401:59 - just save this file now and try
402:00 - reloading this page once again on the
402:02 - browser so as you can see we have got
402:04 - the clear button over here now guys
402:06 - let's say I want to increase some
402:08 - spacing in between the submit and the
402:10 - clear button so what we can do is after
402:12 - this input of type submit button in this
402:15 - case we can have ENT and then
402:17 - non-breaking space that is nbsp so guys
402:21 - basically this is helpful when you want
402:23 - to add certain space characters in
402:25 - between the HTML elements and to avoid
402:28 - them to break into multiple lines so
402:30 - over here when we select this
402:32 - non-breaking space let me just save this
402:34 - file now and after reloading this page
402:36 - you will be noticing that the space
402:38 - between the submit and the clear button
402:40 - will increase over here so when we
402:42 - reload this as you can see the space got
402:44 - increased in this case and based on how
402:46 - many space characters you want you can
402:48 - provide the non-breaking space
402:50 - characters over here after the submit
402:52 - button now guys what happens when we
402:53 - click on the clear button so for now
402:56 - there is no data in the username and the
402:58 - password fails and that is why we are
403:00 - not seeing any results over here but
403:02 - when we provide certain data so let's
403:04 - say we provide username and let's say we
403:06 - provide some test password over here and
403:09 - then either we can click on submit but
403:11 - let's say if we have provided some
403:12 - incorrect data over here in multiple
403:15 - Fields inside the form so simply we can
403:17 - click on clear over here so when we
403:19 - click on clear as you can see all the
403:21 - text boxes are cleared now and they will
403:24 - be having their default values if they
403:26 - have any so over here basically we have
403:28 - the user value as the default value
403:31 - inside the username that is we are
403:33 - getting that value but if we remove this
403:36 - value that is user from here then that
403:38 - content will be also removed so let me
403:41 - just refresh this page once again over
403:43 - here and when we provide the data once
403:45 - again that is username in this case and
403:47 - then let's say we provide password over
403:50 - here and then when we click on this
403:51 - clear button as you can see the text
403:53 - Fields got cleared and that is the main
403:55 - functionality of this reset value for
403:58 - the type attribute inside the input tag
404:01 - so now we will see input type rate video
404:03 - in HTML form so guys basically we can
404:06 - have the input tag and inside that we
404:09 - can have the type attribute value as
404:11 - radio which defines a radio button now
404:14 - guys what is a radio button so basically
404:16 - radio buttons let a user select only one
404:19 - of the limited number of choices so you
404:22 - will be having a list of choices and
404:24 - then you need to select only one element
404:26 - from that list of choice and for this
404:29 - purpose we can use the radio button
404:31 - inside the HTML form so guys guys let us
404:33 - check this with the help of examples in
404:35 - vs code so previously we had seen how we
404:38 - can set the input type as text over here
404:41 - then we have also seen the input type
404:43 - that is password we have also seen the
404:45 - input type that is submit and reset
404:47 - buttons over here and this is how the
404:49 - page looks like that is username which
404:51 - is a text field and then we have the
404:53 - password field over here and then we can
404:55 - have the submit button or the clear
404:57 - button in order to clear the data now
405:00 - guys over here we will be having the
405:01 - list of options that you you can select
405:03 - by using the radio buttons so let me
405:05 - just move to vs code over here and first
405:08 - of all we will have a simple paragraph
405:10 - and then we will say select your
405:13 - favorite web language so guys we have a
405:16 - very simple statement that is select
405:17 - your favorite web language over here and
405:20 - then we are going to have the radio
405:22 - buttons in this case so basically we are
405:24 - going to have the input tag and Then
405:27 - followed by colon and then we are going
405:29 - to have the radio option in this case so
405:32 - as you can see the type must be set to
405:33 - radio over here and then we can set the
405:35 - name and ID so guys let's say we provide
405:38 - the name as language over here and the
405:40 - ID let's say we provide HTML as the ID
405:44 - so basically this is a radio button that
405:46 - will be representing the option that is
405:48 - HTML over here I'll correct the spelling
405:51 - of language in this case and then guys
405:53 - we will be having two more options that
405:54 - is CSS and JavaScript so these are some
405:57 - of the web languages that we can select
405:59 - from so we have the ID that is CSS and
406:02 - then we have we have something called as
406:04 - JavaScript ID over here so Guys these
406:06 - are three radio buttons that we have
406:08 - defined let me just save this file now
406:10 - and try reloading this page once again
406:12 - on the browser so as you can see we are
406:14 - getting select your favorite web
406:16 - language we are getting the radio
406:18 - buttons in this case and when we click
406:20 - on this we can only select one of all
406:22 - these three options we cannot select
406:24 - multiple options over here now guys it
406:26 - doesn't make any sense because we are
406:28 - not getting to see the options in the
406:31 - form of the text string over here so
406:33 - what we can do is we can provide the
406:35 - labels to this radio buttons so after
406:37 - the first radio button over here we need
406:39 - to provide the label tag in this case
406:42 - and over here in the for attribute we
406:45 - can provide the ID of this HTML radio
406:48 - button so I'll copy this ID and paste
406:50 - this over here and then we can say I
406:53 - like HTML so guys this is the label that
406:56 - will be defined just besides the radio
406:59 - button that is the first radio button
407:01 - and then guys we want the second radio
407:03 - button to come on the next line so what
407:05 - we can do is after this label we can
407:08 - have the line break tag over here so we
407:11 - can have the BR tag in this case and
407:13 - then once again we will be having the
407:15 - label for the CSS and JavaScript as well
407:17 - so I'll simply copy this line of code
407:20 - and paste this over here and we will
407:21 - copy the ID as well and we will paste it
407:24 - to the for attribute in this case and
407:26 - then we will say I like CSS and guys
407:29 - once again we will copy the label tag
407:31 - over here for the third radio but button
407:33 - and then we will copy the JavaScript as
407:35 - well that is the ID and paste it for the
407:37 - for attribute of the label and then we
407:40 - will say I like JavaScript in this case
407:43 - let me just save this file now and try
407:44 - reloading this page once again on the
407:46 - browser so now as you can see we have
407:48 - some text string as well which is more
407:51 - sensible in order to select one of the
407:53 - options from this list of radio buttons
407:56 - over here and guys since we have
407:57 - provided the label tag and we have
408:00 - linked all those label tags with their
408:02 - respective input radio buttons over here
408:05 - we can simply click on this text string
408:07 - as well to select that particular radio
408:09 - button so let's say if I click on this I
408:12 - like HTML so when we click on this you
408:15 - can see that the radio button is
408:17 - selected over here and then when we
408:19 - click on this I like JavaScript over
408:21 - here so when we click on this this
408:23 - particular option is selected and once
408:25 - again when we click on I like CSS so the
408:28 - second radio button is selected over
408:30 - here so guys basically either you can
408:32 - use the radio radi buttons or we can
408:34 - also use the text over here since we
408:36 - have linked these labels to the radio
408:39 - buttons that are displaying on the left
408:41 - so guys this is the main functionality
408:42 - of having the radio buttons over here in
408:44 - order to select one of the options now
408:47 - guys it is important to note that for
408:49 - all the radio buttons we have provided
408:51 - the name attribute as same that is the
408:54 - language value but what if we provide
408:56 - the different values over here let's say
408:58 - I provide the name value as language one
409:00 - for CSS and language two for JavaScript
409:04 - now guys what will happen in this case
409:06 - so let me just save this file now and
409:08 - try reloading this page once again on
409:09 - the browser now if I select I like HTML
409:13 - so HTML option is getting selected but
409:15 - when we click on this I like JavaScript
409:18 - over here as you can see the third
409:20 - option is also getting selected over
409:22 - here the first option is also activated
409:24 - since we had selected it previously and
409:26 - if we select this I like CSS as well so
409:29 - this option is also getting selected so
409:31 - guys this is because we have kept the
409:33 - names as different for all the radio
409:36 - buttons so over here we have kept as
409:38 - language then we have language one and
409:40 - then we have language two so in order to
409:42 - make the user to select only one of the
409:45 - options from all these options you need
409:47 - to keep the name value as the same for
409:50 - all the radio buttons that you are
409:52 - referring to so let's say if I change
409:54 - the name of this particular JavaScript
409:56 - option to language over here now we have
409:58 - the radio buttons for the HTML and
410:00 - JavaScript that belongs to the same name
410:03 - so let me just save this file now and
410:05 - try reloading this page once again on
410:07 - the browser so now if we select I like
410:09 - HTML so the first option is getting
410:11 - selected but when we select the I like
410:14 - JavaScript so third option is getting
410:16 - selected and the first option was
410:18 - deselected over here so we can select
410:20 - one of the options in this case but in
410:22 - the second option for which we have kept
410:24 - the name as language one over here we
410:26 - can select it and we can see that the
410:28 - third option is still getting selected
410:30 - over here that's because for the second
410:32 - option as as well we need to keep the
410:34 - name value as same so when we change the
410:36 - value to language over here so all the
410:39 - three radio buttons are now having the
410:41 - same value of name attribute in this
410:43 - case let me just save this file now and
410:45 - try reloading this page so now you can
410:47 - select any one of the options from all
410:49 - these three options in this case so guys
410:52 - that is the importance of having the
410:54 - same value of the name attribute for all
410:57 - the radio buttons that you want to
410:58 - display but only want one option to be
411:01 - selected so now we we will see input
411:03 - type checkbox in HTML form so guys
411:06 - basically the input tag along with the
411:08 - type attribute that is having the value
411:11 - as checkbox will Define a checkbox on
411:13 - the UI now guys what do you mean by
411:16 - checkbox so basically checkboxes let a
411:19 - user select zero or more options of a
411:22 - limited number of choices so either you
411:24 - don't have to select any of the options
411:26 - or you can select one option or multiple
411:28 - options as well that is present inside
411:31 - the list of choices as part of check
411:33 - boxes over here so guys let us check
411:35 - this with the help of examples in vs
411:37 - code over here so previously we had seen
411:39 - the input types that is text and then we
411:42 - had also seen password we had seen the
411:44 - submit and the reset button over here
411:46 - and also we had seen the list of radio
411:48 - buttons out of which only one option can
411:51 - be selected and this is how the page
411:53 - looks like on the UI now guys this is
411:55 - not one of the best designs in HTML
411:58 - that's because we are having the submit
412:00 - and clear button in between which should
412:02 - be present at the end of the form over
412:04 - here at the bottom so guys what we will
412:06 - be doing is we will move these two
412:08 - buttons that is reset and submit buttons
412:11 - at the end of the form over here so I'm
412:13 - simply going to cut those lines of code
412:16 - and paste it over here now let me just
412:18 - save this file now enter I reloading
412:20 - this page so as you can see now we are
412:22 - having the submit and the clear buttons
412:24 - at the end now guys what we will do is
412:26 - after this list of radio buttons we will
412:28 - be having the list of check boxes as
412:30 - well so over here I'll simply remove the
412:32 - extra line break tags over here and then
412:35 - guys after the radio buttons what we
412:37 - will be doing is we will be providing
412:39 - the check boxes so over here simply we
412:41 - will provide the input followed by colon
412:44 - and then we have something called as
412:46 - checkbox over here now guys this is the
412:48 - Mt abbreviation which is one of the
412:50 - features of the vs code that we are
412:52 - using if you are using any other editor
412:54 - such as notepad or notepad++ then you
412:57 - have to manually type the entire content
413:00 - inside this tag along with the type
413:02 - attribute for which the value will be
413:03 - check boox over here now guys let us set
413:06 - the name as vehicle in this case so we
413:08 - will say vehicle one and then let's say
413:11 - we provide the ID as bike over here now
413:13 - guys similarly we will have two more
413:15 - options and these options will be car
413:17 - and boat over here so we will change the
413:19 - name to vehicle 2 and vehicle three in
413:22 - this case and the ID over here will be
413:24 - car and then the third option it will be
413:27 - boat in this case so we have just set
413:29 - the ID that is bike car and boat for all
413:32 - all these three options now guys let me
413:34 - just save this file now and try
413:36 - reloading this page once again on the
413:37 - browser so as you can see we are getting
413:40 - the three check boxes over here if you
413:42 - click on them these are getting selected
413:44 - in this case let me provide some line
413:46 - breaks before and after these check
413:48 - boxes so over here we will provide the
413:50 - line break and then over here as well we
413:52 - have to provide the line brakes so that
413:55 - we can see the check boxes properly so
413:57 - let me just reload this page once again
413:59 - so these are the three options that we
414:00 - can see on the UI now guys it doesn't
414:03 - make sense in order to see only those
414:05 - checkboxes so we can associate them with
414:07 - the labels as well so just like how we
414:10 - had done for the radio buttons over here
414:12 - we will be having the labels for the
414:14 - check boxes as well so simply after the
414:16 - check boox we need to provide the label
414:18 - so this label will be for the ID that is
414:21 - bike so we are going to copy this ID
414:23 - that is bike and provide it as the value
414:26 - for this for attribute to the label so
414:28 - that this particular label tag can be
414:31 - linked to the first the checkbox over
414:33 - here so guys we are going to provide the
414:35 - B and then after providing the value for
414:37 - this four attribute we can simply
414:39 - provide the label so we can say I have a
414:42 - bike now similarly we will have the
414:44 - labels for the other two checkboxes as
414:46 - well so we will be providing the line
414:48 - break once again over here after the
414:50 - label and we will simply copy the labels
414:53 - for the car and boat as well and then we
414:56 - will change the IDS so for the second
414:58 - checkbox label we will copy the ID over
415:00 - here and then we will say I I have a car
415:03 - and then this ID that is the third
415:05 - option we are going to set it as the for
415:08 - attribute for this last label and then
415:10 - we will say I have a boot in this case
415:13 - so guys let me just save this file now
415:15 - and try reloading this page once again
415:17 - on the browser so now as you can see we
415:19 - have the list of check boxes over here
415:21 - which are being displayed we can either
415:23 - select a zero of them or one or multiple
415:26 - of the options so in this case when we
415:28 - select I have a bike so this option is
415:30 - getting selected and let's say if you
415:32 - have the car as well so you can select
415:34 - this option also that is I have a car so
415:37 - we can click on the label as well in
415:38 - order to select this option so as you
415:40 - can see I have a car is getting selected
415:43 - you can also select I have a boat as
415:45 - well so this option is getting selected
415:47 - over here if you want to deselect any of
415:50 - the options you can click on that
415:52 - particular option once again so this
415:54 - option is getting deselected in this
415:56 - case so guys this is the main
415:57 - functionality of the checkboxes either
415:59 - you can select zero one or mult multiple
416:02 - of the options that are present as the
416:04 - list of check boxes we can also have the
416:06 - label before the list of check boxes
416:08 - over here so what we can do is simply we
416:10 - can have the paragraph in this case and
416:12 - then we can say select the mode of
416:15 - Transport that you own so guys basically
416:18 - we have a very simple statement over
416:20 - here and then let me just save this file
416:22 - now and try reloading this page once
416:24 - again on the browser so as you can see
416:26 - select the mode of Transport that you
416:28 - own and then we have these three options
416:30 - over here so you can select any of of
416:32 - the options based on your choices so now
416:34 - we will see input type button in HTML
416:37 - form so guys basically the input tag
416:40 - along with the type attribute for which
416:42 - the value that is set as button will
416:44 - Define a simple button inside or outside
416:47 - the HTML form so you can either Define
416:50 - this button inside the HTML form or
416:52 - outside the HTML form as well so let us
416:54 - check this with the help of examples in
416:56 - vs code so guys previously we had seen
416:59 - some of the input fields that is the
417:01 - text field field and then we have also
417:03 - seen the password field as well we have
417:05 - also seen the list of radio buttons as
417:07 - well along with it we had also seen the
417:10 - checkboxes list as well and then apart
417:12 - from that we had seen the submit and the
417:14 - reset input tags as well and this is how
417:17 - the UI looks like so we have the text
417:19 - field the password field and then the
417:22 - list of radio buttons then the list of
417:24 - checkboxes submit button and the clear
417:26 - button as well now guys what we are
417:28 - going to do is after this list of check
417:30 - boxes we will be having a simp button
417:32 - over here that will help us in order to
417:35 - display the alert so what we can do is
417:38 - after the list of check boxes over here
417:40 - simply we will have the input and Then
417:43 - followed by colon and then we will have
417:45 - the button over here so guys this is the
417:47 - m abbreviation as you can see so this is
417:50 - the feature that is provided by the vs
417:52 - code so we can simply have the input tag
417:55 - along with the type attribute that is
417:56 - button and the value attribute will have
417:59 - the value which will be displayed on the
418:01 - button so let's say we want to display
418:03 - click me over here so guys basically
418:06 - this particular text will be displayed
418:08 - on the button so let me just save this
418:09 - file now and try reloading this page on
418:11 - the browser so as you can see we are
418:14 - getting the click me button over here
418:16 - now guys we can apply our own styling
418:18 - over here with the help of the style
418:20 - attribute or we can also have the
418:21 - external CSS file as well so if we want
418:24 - to provide certain styling so let's say
418:26 - I provide the style attribute over here
418:29 - and let's say we want to provide the
418:30 - background color as red in this case and
418:33 - the font color is white so over here we
418:36 - will say color as white in this case so
418:38 - guys basically we are defining The
418:40 - Styling properties over here I'll just
418:42 - select the word RP options so that we
418:44 - can see the entire tag on one screen
418:46 - instead of having the horizontal scroll
418:48 - bar now guys let me just save this file
418:50 - now and try reloading this page once
418:52 - again on the browser so as you can see
418:54 - the background color of the button is
418:56 - changed to red and then we are getting
418:59 - the text color as white over here so
419:01 - guys when we click on this button
419:03 - nothing is happening so it is a part of
419:05 - JavaScript tutorial that we will be
419:06 - seeing in the upcoming videos as well so
419:09 - when we click on this button if we want
419:11 - it to react in a certain way based on
419:13 - our requirements we need to write
419:15 - certain code in the JavaScript so what
419:17 - we can do is for now over here we will
419:19 - be having the onclick attribute so when
419:22 - we say onclick we can provide certain
419:24 - small JavaScript code over here that
419:27 - will be triggered when we click on this
419:29 - particular button so let's say we
419:30 - provide Alert in this case and then
419:33 - inside the open and close parenthesis we
419:35 - simply provide certain string so let's
419:37 - say we provide subscribe to programming
419:42 - for beginners which is the name of the
419:44 - YouTube channel which you should
419:45 - definitely subscribe if you have not
419:47 - done so in order to learn a lot about
419:50 - the HTML and the upcoming web
419:52 - Technologies as well so guys basically
419:54 - this is a string that will be displayed
419:56 - inside the alert box over here subscribe
419:58 - to programming for beginners so let me
420:01 - just save this file now and when the
420:02 - user clicks on this button the alert
420:05 - should be displayed so let me just
420:07 - reload this page once again on the
420:08 - browser and now when we click on this
420:11 - button so as you can see this page says
420:13 - subscribe to programming for beginners
420:16 - so this is a kind of a alert that is
420:17 - being displayed over here on this
420:19 - particular browser and guys this is a
420:21 - part of a JavaScript by using the
420:23 - JavaScript code we can make this alert
420:25 - display on the web browser over here and
420:28 - this is a very basic button that we have
420:30 - seen so far we can also remove remove
420:32 - the styling properties over here so I'll
420:33 - quickly remove the styling properties so
420:36 - that it looks like a normal button in
420:38 - this case so let me just save this file
420:39 - now and try reloading this page so as
420:42 - you can see we have a very simple button
420:44 - in this case and when we click on this
420:46 - button again the alert is being
420:47 - displayed over here so whenever the user
420:50 - will click on the button based on the
420:51 - function that we have return over here
420:53 - that function will be called based on
420:55 - the requirement of the project so now we
420:57 - will see input type color in HTML form
421:00 - so guys basically the the input tag
421:03 - along with the typee attribute color is
421:05 - used to display the Color Picker from
421:07 - where you can pick the colors now guys
421:09 - depending on the browser support a Color
421:11 - Picker can show up in the input field
421:14 - over here so it depends on your browser
421:16 - the users browser that is being used in
421:19 - order to display your web page so guys
421:21 - whenever you are going to use the input
421:22 - tag along with the type value as color
421:25 - you need to test on the different
421:26 - browsers in order to check whether that
421:28 - particular browser supports the Color
421:30 - Picker or not so guys let us check this
421:32 - with the help of examples in vs code so
421:34 - previously we had written these lines of
421:36 - code over here which we will remove for
421:38 - now and then what we will do is simply
421:41 - we are going to have the Color Picker so
421:43 - basically we are going to have the label
421:45 - as well and then after the label we will
421:47 - have the input and then colon and then
421:50 - we have the color in order to have the
421:52 - type value as color over here now guys
421:55 - what we will do is depending on the
421:56 - users selection of the color we will
421:59 - change the background color of the
422:01 - entire page so we will have the name
422:03 - value as BG color over here so that it
422:06 - defines that we are going to change the
422:08 - background color by using this Color
422:10 - Picker and then similarly we will have
422:12 - the ID as the BG color over here and
422:14 - then we are going to copy this ID for
422:16 - this four attribute of the label tag so
422:19 - we are simply going to copy this ID that
422:22 - is BG color over here and then we will
422:24 - say select your
422:27 - background color and Then followed by a
422:30 - colon now this input tag will help us in
422:32 - order to show the Color Picker on the
422:34 - browser so guys let me just save this
422:36 - file now and try reloading this page on
422:38 - the browser over here so as you can see
422:40 - below content is in HTML form and you
422:43 - can see select your background color and
422:45 - by default black color is being
422:46 - displayed over here and when you click
422:48 - on this Color Picker as you can see you
422:51 - can change the color over here so you
422:53 - can also see that we can change the
422:55 - color to blue green or yellow colors as
422:58 - well and similarly based on your
423:00 - requirements you can set the color now
423:02 - guys by default the color that is being
423:03 - displayed over here is black so when we
423:05 - reload this page you can see that the
423:07 - color is black over here so what we can
423:10 - do is we can have the value attribute as
423:12 - well inside the input tag so we can
423:15 - simply provide the value and let's say
423:17 - we want the default color to be red over
423:19 - here so what we can do is simply we can
423:21 - provide the hex value of red color which
423:24 - is Hash character followed by 2 * F and
423:27 - then 4 * 0 so guys basically this is the
423:31 - first comp that is the red component in
423:33 - the hex color and Then followed by the
423:35 - green component which is zero and Then
423:37 - followed by two digits that is blue
423:40 - component which is again zero over here
423:42 - so guys let me just save this file now
423:44 - and try reloading this page once again
423:46 - so as you can see now we have the red
423:48 - color by default and when we click on
423:50 - this red color you can see that we can
423:52 - select any of the color that we want and
423:54 - then we can also drag this Color Picker
423:57 - over here and then accordingly the red
423:59 - green and blue components over here will
424:01 - be updated based on the selection of the
424:04 - colors in this case now guys what we are
424:06 - going to do is once we select the color
424:08 - over here we are going to set the color
424:10 - as the background color of this entire
424:12 - page so we need to add some JavaScript
424:15 - code over here so we will come to this
424:17 - head section and then we will Define the
424:19 - script tag in this case and then guys we
424:22 - are going to define a function so we are
424:24 - going to type function keyword followed
424:26 - by the name of the function so guys if
424:28 - you are not aware about the JavaScript
424:30 - don't worry we are going to write a very
424:32 - simple JavaScript function over here
424:34 - that will help us in order to just
424:36 - change the background color of the web
424:38 - page so this is the keyword that is
424:40 - function that we use in order to define
424:43 - the function followed by the name of the
424:45 - function and then we have the open and
424:46 - close parenthesis we are going to learn
424:49 - a lot about the JavaScript in the
424:50 - JavaScript tutorial videos that is going
424:53 - to be followed after the HTML tutorial
424:55 - so guys please make sure that you
424:57 - subscribe to this channel that is
424:58 - programming for beginners so that you
425:00 - get the notifications on the up coming
425:02 - videos as well now guys inside the curly
425:04 - braces what we have to do is we need to
425:06 - get the value of the color that we have
425:09 - set by using the input tag over here so
425:11 - simply we are going to define the
425:13 - variable by using the V keyword followed
425:16 - by the name of the variable that is
425:18 - color and the way that we get the value
425:20 - is by using the document keyword
425:22 - followed by Dot and then we have
425:24 - something called as get element by ID
425:26 - over here and then inside the
425:28 - parenthesis we provide the ID that is BG
425:31 - color in this case so guys we provide
425:33 - the ID over here followed by Dot and
425:36 - then we have something called as value
425:38 - so guys basically this particular line
425:40 - of code will help us in order to extract
425:43 - the color that we have set over here by
425:46 - default the color will be red but
425:47 - whatever color we set on the browser it
425:50 - will be extracted by using this line of
425:52 - code and that color will be saved in
425:55 - this variable now guys we just have to
425:57 - provide this variable to the background
426:00 - color property of this page over here so
426:02 - what we can do is again we can Define
426:05 - the document keyword followed by Dot and
426:07 - then this time we are going to use the
426:10 - body tag over here and then followed by
426:12 - dot inside the body tag we have
426:14 - something called as style because the
426:16 - background color property is present
426:18 - inside the style property so we are
426:21 - going to use the style property followed
426:23 - by Dot and then we have the background
426:25 - color over here so as you can see once
426:28 - we are typing vs code is suggesting us
426:30 - various attribut that can be used so
426:33 - over here we are going to use this
426:34 - background color in this case and then
426:37 - equal to we are going to provide this
426:39 - variable name that is color over here
426:41 - followed by semicolon so guys we have
426:44 - defined a function inside the JavaScript
426:46 - that will help us in order to set the
426:49 - background color of the body of the web
426:51 - page by getting the value from this
426:53 - input tag over here that we have defined
426:56 - as the color Pier now guys what we have
426:58 - to do is simply we need to call this
427:00 - function so so basically once you are
427:02 - selecting the color using this Color
427:04 - Picker we are going to have a button
427:06 - over here so simply we are going to have
427:08 - the line Brakes in this case and then we
427:11 - will Define the simple button over here
427:13 - so we say input colon button and this
427:16 - time we will say click me as the value
427:19 - of this button and what we have to do is
427:21 - when the user clicks on this button we
427:23 - need to call this test function over
427:25 - here so we can have the on click
427:27 - attribute in this case so we will say
427:29 - onclick attribute over here and simply
427:32 - we are going to provide the name of the
427:34 - function that is test followed by open
427:36 - and close parenthesis so guys once we
427:39 - click on this particular button that is
427:41 - having the value as click May the
427:43 - JavaScript function that we have written
427:45 - with the name that is test will be
427:46 - called and the color will be extracted
427:49 - from the Color Picker that we have set
427:51 - and then the background color will be
427:53 - set using that particular color that we
427:55 - have set now guys let me just save this
427:57 - file now and try reloading this page
427:59 - once again on the browser so so as you
428:01 - can see we have the select your
428:03 - background color and red color is being
428:05 - displayed over here so when we click on
428:07 - this and let's say I want to change the
428:09 - color to Yellow so I drag it over here
428:12 - and then let's say I want this
428:13 - particular shade of color and then what
428:16 - we have to do is simply we can click
428:17 - somewhere else since the color is
428:19 - already set over here in the Color
428:21 - Picker and in order to set the
428:23 - background color of this web page simply
428:25 - we need to click on this button that is
428:27 - Click me over here so when I click on
428:29 - this as you can see the background color
428:31 - of this web page is updated again if we
428:34 - want to update the background color to
428:36 - let's say green color in this case we
428:38 - will set it to light green and then when
428:40 - we click on this click me as you can see
428:42 - it is set to light green color now that
428:44 - is the background color of this web page
428:47 - so guys in this way we can easily use
428:49 - the Color Picker to select one of the
428:51 - colors from the Color Picker over here
428:53 - so let me just reload this page once
428:55 - again so in order to set the background
428:57 - color is red simply we can click on this
428:59 - button that is Click me so this
429:00 - particular red color is already set over
429:02 - here in order to set the color as blue
429:05 - in this case so we will change it to
429:07 - light blue over here and then when we
429:09 - click on this button as you can see the
429:11 - color of the background is updated now
429:13 - so now we will see input type date in
429:16 - HTML form so guys basically the input
429:19 - tag along with the type attribute that
429:21 - is date is used for input fields that
429:24 - should contain a date so basically
429:26 - inside a HTML form or it can be outside
429:29 - the HTML form as well if you want to
429:31 - show a input field that should allow the
429:33 - user to select one of the dates you can
429:36 - use the input tag along with the type
429:38 - attribute that is date over here now
429:40 - guys it is very important that you test
429:42 - the input tag with the type date on the
429:45 - different browsers because depending on
429:46 - the browser support a date picker can
429:49 - show up in the input field most of the
429:51 - latest browsers will be showing the date
429:53 - properly but some of the old browsers
429:55 - will not show the date properly so guys
429:57 - let us check this with the help of
429:59 - examples in vs code so previously we had
430:01 - seen how we can provide the input tag
430:03 - with the type color in order to have the
430:06 - Color Picker on the page over here now
430:08 - guys after this Color Picker we are
430:10 - going to have the input field with the
430:12 - type date as well so what I'm going to
430:14 - do is we are going to have the input
430:16 - followed by colon and Then followed by
430:19 - date over here so guys this is the input
430:21 - tag that we are going to use along with
430:23 - the type date in this case we are going
430:25 - to set the name attribute as birth date
430:28 - and then similarly we will copy this
430:30 - birth date and set it as ID as well for
430:33 - the same input tag over here now guys
430:36 - what we will be doing is we will also
430:38 - have the label in this case so let's say
430:40 - we Define the label and this label will
430:42 - be for this ID that is birth date so I'm
430:44 - going to copy this and paste this for
430:46 - the four attribute of the label and then
430:49 - we will say select your birth date in
430:53 - this case followed by colon so guys the
430:56 - user is supposed to select the date of
430:58 - birth by using this date picker and then
431:00 - guys we will also have the line breaks
431:02 - in this case so we will have the couple
431:04 - of PR tags as well so let me just save
431:07 - this file now and try reloading this
431:08 - page once again on the browser over here
431:11 - so as you can see select your birth date
431:13 - label is being displayed over here and
431:15 - then we have this date picker in this
431:17 - case now guys when the user clicks on
431:19 - this date picker he or she will be
431:21 - having the option to select one of the
431:23 - dates over here so when the user selects
431:25 - this 17th date in this case so it will
431:28 - be set as 17th December 2023 guys you
431:32 - can also change the month and year over
431:34 - here so as you can see the month that is
431:36 - December and the year that is 2023 is
431:38 - being displayed over here you can scroll
431:41 - down and see the future dates as well so
431:43 - let's say we select the 16th date over
431:45 - here so it is 16th of February 2024 so
431:49 - in similar way you can also select one
431:51 - of the past dates as well and let's say
431:53 - if you want to select one of the past
431:54 - dates that is in the 2000 year so we can
431:58 - simply click on this particular drop-
432:00 - down arrow and then you can see that the
432:02 - ear are also getting mentioned and we
432:04 - can scroll up a little bit so that we
432:06 - can see the year 2000 in this case so as
432:08 - you can see this is the year that is
432:10 - 2000 and in the month of January let's
432:12 - say you want to select the date as 20 so
432:15 - when you select this as you can see 20th
432:17 - January 2000 date is being displayed
432:20 - over here and guys this is the very
432:22 - simple way that you can show the date
432:23 - picker to the user in order to select
432:26 - the date now guys what we will do is
432:28 - once the user clicks on this button that
432:30 - is Click me we want to extract the value
432:33 - that is being set by the user and show
432:35 - it as a alert on the web page over here
432:38 - so what we will be doing is we already
432:40 - have the input that is of the type
432:42 - button in this case and onclick
432:45 - attribute is pointing to this test
432:47 - function over here in the JavaScript so
432:49 - we simply have to change some lines of
432:52 - code over here inside the JavaScript so
432:54 - we will be removing these lines of code
432:57 - and let's say we provide the variable
432:58 - which will be storing the date that is
433:00 - being selected Ed by the user so guys we
433:02 - need to get the value that is being
433:04 - selected by the user on this particular
433:07 - date picker by using the ID so I'm going
433:10 - to copy this ID and over here we are
433:12 - going to use the document keyword
433:14 - followed by Dot and then get element by
433:17 - ID so guys this is a very basic
433:19 - JavaScript that we are writing over here
433:22 - and we are going to cover a lot about
433:23 - the JavaScript tutorial as well in the
433:25 - upcoming videos so make sure that you
433:27 - subscribe to this channel so that you
433:29 - get the notifications on the upcoming
433:31 - videos as well so after this we are
433:33 - going to have parenthesis and then
433:35 - inside the double codes we are going to
433:37 - have the ID that is birth date over here
433:39 - followed by Dot and then we will say
433:41 - value in this case in order to extract
433:44 - the value of the date that is selected
433:46 - by the user now simply we can use the
433:49 - alert function in this case so we type
433:51 - alert and then inside the parenthesis we
433:53 - have double codes and then we say birth
433:56 - date is followed by colon and simply we
433:59 - have to provide a plus operator because
434:02 - we are concatenating two strings in this
434:04 - case and Then followed by we need to
434:06 - provide the date variable which is
434:08 - storing the date that is being selected
434:10 - by the user so guys we provide the date
434:13 - variable in this case let me just save
434:15 - this file now and try reloading this
434:17 - page once again on the browser now guys
434:19 - whatever date user selects over here and
434:22 - when the user clicks on this button that
434:24 - is Click me we will be able to see the
434:26 - alert that will have that same date that
434:28 - was selected by the user now guys let us
434:31 - us select one of the dates in this case
434:33 - so let's say the user selects the date
434:35 - from one of the years that is 2005 over
434:38 - here so when we select 2005 and let's
434:41 - say it is the month of April and then
434:43 - let's say the date is 15th in this case
434:45 - so it is 15th of April 2005 and then
434:49 - when we click on this button that is
434:50 - Click me as you can see birth date is
434:54 - 2005 that is the year is being displayed
434:56 - followed by the month which is 04 Then
434:59 - followed by the date that is 15 over
435:01 - here so guys in this way we can also use
435:04 - the value that is being set by the user
435:06 - on this date piaker guys apart from this
435:08 - we also have some more attributes that
435:10 - is min and Max in order to restrict
435:13 - certain dates so let's say if we want
435:15 - the user to select only specific dates
435:17 - let's say from the Year 2005 and only
435:20 - from the month of April so what we have
435:23 - to do is simply we have to come over
435:25 - here in the input tag of the type date
435:28 - and then we have something called as
435:30 - main add attribute over here now guys
435:32 - inside this main attribute we have to
435:34 - provide the minimum date that the user
435:36 - can select so it is 205 followed by hun
435:41 - and then 04 and then we have 15 so guys
435:44 - this is the format that is being used
435:46 - right now so if I show you once again
435:48 - when we click on this this is the format
435:50 - that we should be using so let me just
435:52 - copy it from here and I'll paste it once
435:55 - again in this case so that there is no
435:56 - issues with the format so over here we
435:59 - will paste it similarly we will set the
436:00 - me Max attribute as well so we type the
436:02 - max attribute followed by the date so
436:05 - guys in this case we will be having the
436:07 - date as let's say 20th of April so over
436:09 - here we will set it as 2005 and the
436:12 - month is 04 and the date is 20 now guys
436:15 - let me just save this file now and try
436:17 - reloading this page once again on the
436:19 - browser now this time since we have set
436:21 - the minimum and maximum values of the
436:24 - dates as you can see the April that is
436:26 - 04 and 2005 that is the Year is already
436:29 - set over here and we will will only get
436:31 - the option to select the dates between
436:33 - the 15 to the 20th day of that
436:36 - particular month and year because that
436:38 - is the restrictions that we have put by
436:41 - using the Min and the max attributes
436:43 - over here so guys in this way you can
436:46 - also allow the user to only select the
436:49 - dates that are ranging in between the
436:50 - Min and the max values you can also have
436:53 - just the minimum value so that the user
436:55 - does not select the date before this
436:57 - particular value or you can also have
436:59 - just the max value as well so that the
437:02 - user does not select any of the values
437:04 - which is having the date higher than the
437:06 - max value so guys I'll leave that
437:09 - exercise up to you so that you can
437:10 - practice on your own as a homework for
437:12 - you so now we will see input type date
437:15 - time local in HTML form so guys
437:17 - basically the input tag along with the
437:20 - type attribute that is date time local
437:22 - will help us to specify the date along
437:25 - with the time as well as the input field
437:27 - with no time zone so basically whatever
437:30 - time is being selected by the user it
437:32 - will be the local time for that
437:34 - particular user over here now guys it
437:36 - depends on the browser support so you
437:38 - need to test this particular input tag
437:40 - on the different browsers in order to
437:42 - check whether some of the older browsers
437:44 - are still showing the input type with
437:47 - the date time picker or not so guys some
437:49 - of the older browsers might not support
437:51 - this particular type attribute but
437:53 - majority of the latest browsers will be
437:56 - able to show this date time picker so
437:58 - let us check this with the help of
438:00 - examples in vs code over here so
438:02 - basically previously we had seen how we
438:04 - can use the Color Picker by using the
438:06 - type that is color and also we have seen
438:09 - the date picker by using the type that
438:11 - is date this time we will be using the
438:13 - type that is date time local over here
438:16 - so again we will be defining the input
438:18 - followed by colon and this time we will
438:20 - be using this date time local over here
438:24 - so when we select this as you can see
438:26 - the type attribute is being selected as
438:28 - the date time local in this case and
438:30 - then then for the name attribute we will
438:32 - set it as date time over here so guys
438:35 - this is the name attribute and for the
438:37 - ID attribute as well we will set the
438:39 - string that is date time in this case
438:41 - and before this input we will also set
438:44 - the label as well so that the user is
438:46 - able to select the date as well as the
438:49 - time from this particular date time
438:51 - picker now guys for the four attribute
438:53 - we will set the ID of this datetime
438:55 - picker as the for attribute in this case
438:57 - so I'll simply paste this datetime
439:00 - string and then we will say select date
439:03 - time over here so we have select date
439:05 - time followed by colon and then guys
439:07 - after this input tag we will also have
439:10 - the couple of line braks so that the
439:12 - next button that is having the value
439:14 - click me will be displayed on the other
439:17 - line now let me just save this file now
439:18 - and try reloading this page once again
439:20 - on the browser so as you can see we have
439:23 - select a date time as the label and Then
439:25 - followed by the date time picker over
439:27 - here now guys we are having the date
439:29 - along with that we are are also having
439:31 - the time picker as well so as you can
439:33 - see we can select the time as well along
439:36 - with the date and the difference between
439:38 - the date and the date time local type is
439:40 - that for the simple date picker we can
439:42 - only select one of the dates over here
439:44 - but for the date time picker we can also
439:46 - select the time in this case so guys
439:49 - this is the basic difference between the
439:51 - type attribute that is date and the type
439:53 - attribute that is date time local over
439:55 - here so in case you have the requirement
439:57 - of setting the time as well you can use
440:00 - the date time local in this case so we
440:02 - can select one of the dates in this case
440:04 - so let's say we select 15th of December
440:06 - 2023 and the time is 18 over here so 18
440:10 - 0 0 so guys in this case we are setting
440:13 - the date as well as the time over here
440:15 - as you can see now guys let us say when
440:17 - we click on this button that is Click me
440:19 - we want to see the date as well as the
440:21 - time in the alert box so what we have to
440:24 - do is already we had return return the
440:25 - code over here that is having the on
440:28 - click attribute for this button that is
440:30 - Click me we are calling the test
440:32 - function that is already written in the
440:34 - JavaScript so guys this is a very basic
440:36 - function that we have written over here
440:38 - what we are doing is we will be getting
440:40 - the value of the datetime Picker and we
440:43 - will show that value inside the alert
440:45 - function so we simply have to set the ID
440:47 - that is date time over here and then we
440:50 - have to provide the alert that is date
440:52 - time is and Then followed by the
440:54 - variable in which the date time is being
440:56 - selected in this case so guys let me
440:58 - just save this file now Ander try
441:00 - reloading this page once again on the
441:02 - browser I'll select the date as 10th of
441:04 - December 2023 and then let's say the
441:07 - time is 1805 over here so when we set
441:10 - this 1805 in this case you can see that
441:13 - the date and time is being selected over
441:15 - here and when we click on this button
441:17 - that is Click me as you can see we are
441:19 - getting the year that is 2023 followed
441:22 - by the month that is 12 and Then
441:24 - followed by the date that is 10 and then
441:26 - guys we have this character that is T
441:28 - which is separating the date as well as
441:30 - the time time and then after this
441:32 - character we have the time that is 18
441:34 - which is the hour and the 05 which is
441:36 - the minute in this case so guys in this
441:38 - way you can easily select the date time
441:41 - by using this date time picker over here
441:43 - let me change the timing in this case so
441:45 - we set the time is 2016 over here and
441:48 - then let's say we select the date is
441:50 - 20th of December so guys we have 20
441:52 - December 2023 and then the time is 2016
441:56 - so when we click on this button that is
441:58 - Click me over here you can see that we
442:00 - we have the 20th December 2023 date as
442:03 - well as the time that is set as 2016
442:06 - over here as the alert so guys in this
442:08 - way you can easily use the datetime
442:10 - Picker based on your requirements so now
442:12 - we will see input type email in HTML
442:15 - form so guys basically the input tag
442:18 - along with the type email is used for
442:20 - input fields that should contain an
442:22 - email address so if you want the user to
442:25 - provide his or her email address you
442:28 - should be using the input tag along with
442:30 - with a type that is email over here and
442:32 - basically it is also having the buil-in
442:35 - validation that will be used in order to
442:37 - validate whether it is the proper email
442:40 - format that is provided by the user now
442:42 - guys you need to test this particular
442:44 - feature on different browsers because
442:46 - depending on the browser support the
442:48 - email address can be automatically
442:50 - validated when submitted so not all the
442:52 - browsers will validate whether the email
442:55 - is being correctly provided by the user
442:57 - but some of the latest browsers will
443:00 - help you in order to validate the email
443:03 - IDs that is provided by the user now
443:05 - guys some of the smartphones as well
443:07 - recognize the email type and add the
443:10 - Doom to the keyboard to match the email
443:13 - input so you will be noticing the Doom
443:15 - button on your keyboard when you are
443:17 - typing and providing your email address
443:20 - on some of the websites and this is one
443:22 - of the important features in the
443:23 - smartphones that can help the user in
443:26 - order to quickly provide the input so
443:28 - guys let us check this with the help of
443:30 - example samples and vs code so
443:32 - previously we had seen the different
443:33 - input Fields such as Color Picker then
443:36 - we had also seen date picker date time
443:38 - picker as well now we will see the input
443:40 - tag with the type email over here so
443:43 - guys simply we will provide the input
443:45 - followed by colon and then we have
443:47 - something called as email over here
443:49 - which is the Mt abbreviation so when we
443:51 - select this the type attribute will have
443:53 - the email value for this input tag now
443:56 - guys let us say we provide the name as
443:58 - email over here and same value we
444:01 - provide to ID attribute as well that is
444:03 - email in this case and we also have to
444:06 - provide the label so before the input
444:08 - tag we provide the label and for the for
444:10 - attribute we set the ID of this
444:13 - particular input tag that is email as
444:15 - the value for this for attribute now
444:17 - guys simply we can have the statement
444:19 - that is provide your email as the label
444:23 - over here followed by colon in this case
444:25 - so guys in this way we can allow the
444:27 - user to provide the email by using this
444:29 - input tag with the type attribute that
444:32 - is email over here let us provide a
444:34 - couple of line breaks after this input
444:36 - tag now let me just save this file now
444:38 - and try reloading this page once again
444:40 - on the browser so as you can see we have
444:42 - this provide your email label in this
444:44 - case and the user can provide the email
444:47 - inside this text box so let's say we
444:49 - provide programming at gmail.com so guys
444:52 - let's say we provide programming over
444:54 - here and when the user clicks on the
444:56 - submit button let us see whether the
444:58 - validation message is being displayed
444:59 - over here here so guys we need to add
445:01 - the submit button in this case because
445:03 - this particular button is the normal
445:05 - button and it is not related to the form
445:08 - so over here we will have the input
445:10 - followed by colon and then we have the
445:12 - submit button over here and we provide
445:14 - the value as submit in this case which
445:16 - will help the user in order to submit
445:19 - the details that is being provided over
445:21 - here and then guys what we will do is we
445:23 - will provide the method as get so that
445:25 - we can see the values that are provided
445:27 - by the user for all these input tag
445:30 - inside the URL itself so guys let me
445:32 - just save this file now and try
445:34 - reloading this page once again on the
445:36 - browser so as you can see we have got
445:38 - the submit button now so let us provide
445:40 - the email over here so we just provide
445:42 - programming in this case and let me just
445:44 - click on this submit button so as you
445:46 - can see please include an at theate in
445:49 - the email address programming is missing
445:51 - an at theate so guys over here this
445:54 - particular web page is telling us that
445:56 - we don't have the at theate character
445:58 - which must be present inside the email
446:00 - address so let me just provide that at
446:02 - the rate as well and let us see if now
446:04 - our email address is being accepted over
446:06 - here so when we click on the submit
446:08 - Button as you can see please enter a
446:10 - part following at theate programming at
446:13 - theate is incomplete so guys over here
446:16 - the email addresses are designed in such
446:18 - a way that after the etherate we have
446:20 - something that is gmail.com or anything
446:23 - based on which platform you have created
446:25 - your email address so let's say we
446:27 - provide Gmail over here and let me just
446:29 - click on on the submit button now so as
446:31 - you can see now it is allowing us to
446:33 - submit over here and since we have
446:35 - provided the method as get we can see
446:37 - all the values of different parameters
446:39 - that are going inside the URL so as you
446:42 - can see we have the background color
446:43 - then we have the birth date date time as
446:46 - well as the email over here so as you
446:48 - can see programming and then we have the
446:50 - at theate which is being encoded as per
446:53 - 40 over here and then we have the Gmail
446:55 - that was provided by the user as the
446:58 - email address inside this text box so
447:00 - guys in this way you can easily use the
447:03 - input tag with the type attribute that
447:05 - is email in order to help the user
447:07 - provide his or her email address while
447:09 - he or she is submitting the form it will
447:12 - also help us in order to validate
447:13 - whether it is a proper format of the
447:15 - email or not based on your requirements
447:18 - so now we will see input Type image in
447:21 - HTML form so guys basically we can have
447:23 - the input tag along with the type that
447:26 - is image which defines an image as a
447:29 - submit button so guys inside of the
447:31 - submit button we can also have the input
447:33 - type that is image over here that will
447:35 - act as a submit button and it will be
447:37 - the image that will be displayed as a
447:39 - button over here now guys the path of
447:41 - the image is specified in the SRC
447:44 - attribute so let us check this with the
447:46 - help of examples and vs code as well it
447:48 - acts as a submit button and sends the
447:51 - coordinates of the user click as X and Y
447:54 - coordinates so guys let us move to the
447:55 - vs code over here and what we will be
447:58 - doing is after the submit button we will
448:00 - will also have the input type that is
448:02 - image so let us provide the line brakes
448:04 - over here so that the image is being
448:06 - displayed on the next line and then over
448:09 - here we will provide the input followed
448:11 - by colon and this time we will have the
448:13 - image in this case so guys it is
448:15 - important to note that we are having
448:17 - this input Type image inside the form
448:19 - over here so that the form attributes
448:21 - can be submitted and the form that is
448:23 - having the method attribute as get will
448:26 - help us in order to see all the value
448:29 - that is being set by by the user inside
448:31 - the browser URL so guys let us check
448:33 - this we have the input tag with the Type
448:36 - image over here and for the source part
448:38 - we will have one of the images that is
448:40 - sample image that I have already stored
448:42 - in this directory path where this
448:44 - particular test.html file is present now
448:48 - guys as the alternate we will provide
448:51 - submit as the value over here in case
448:54 - there is any issue as far as displaying
448:56 - of this image is concerned now guys
448:58 - apart from this we will also set the
449:00 - width and height of the image so let us
449:01 - say we have the width attribute has 50
449:04 - pixels over here so we set it as 50 PX
449:06 - and then let's say we have the height
449:08 - attribute as well and we have the same
449:10 - value that is 50 pixel in this case so
449:13 - guys let me just save this file now and
449:15 - try reloading this page once again on
449:17 - the browser so as you can see this is
449:19 - the image that we have set over here
449:21 - guys the height and width of this
449:23 - particular image is set in such a way
449:24 - that it is not looking very clear but
449:27 - for the example purpose we will see what
449:29 - happens when when the user clicks on
449:31 - this particular image over here so guys
449:33 - let's say we click on this bottom right
449:35 - of this particular image so when we
449:37 - click on this as you can see the
449:39 - attributes are getting displayed over
449:41 - here in the URL so you can see that BG
449:43 - color that is the background color that
449:45 - is coming from the color pickle over
449:47 - here and then apart from that we have
449:49 - the birth date date time as well as
449:51 - email and then in the end as you can see
449:54 - we have something called as X which is
449:55 - 47 and then we also have y that is equal
449:59 - to 47 so this is nothing but the
450:01 - attributes where the user has clicked on
450:04 - this particular image over here now let
450:06 - us click on this image once again
450:08 - somewhere over here that is at the top
450:09 - left so when we click on this so as you
450:11 - can see again the attributes are updated
450:13 - over here and you can see that the X
450:16 - attribute is now set as 2 and Y
450:18 - attribute is now set as one over here so
450:20 - guys in this way we can come to know at
450:23 - which particular coordinates by using
450:24 - the X and Y coordinates over here the
450:27 - user has clicked when the user clicks on
450:29 - the image that represents the submit
450:31 - button inside the form so guys this is
450:33 - the basic functionality of the input tag
450:36 - that is having the type that is image
450:38 - over here we can set it as the normal
450:40 - image that is by having the source
450:42 - attribute we can set the image for this
450:44 - particular submit button and let's say
450:46 - when the image is not present inside the
450:48 - directory so let me just provide one
450:50 - over here that is sample uncore image
450:53 - 1.png which is not present inside that
450:55 - directory let me just save this file now
450:57 - and try reloading this page once again
450:59 - on the browser so as you can see since
451:01 - the image is not present so we can see
451:04 - what text is being provided as the alt
451:06 - attribute so that is what we can see
451:08 - over here that is submit in this case so
451:11 - guys in this way we should be having the
451:13 - alt attribute as well in case if there
451:15 - is any issues as far as displaying of
451:17 - the image is concerned on the browser
451:19 - let me just save this file once again
451:21 - and reload this page on the browser and
451:24 - if we click somewhere in the middle of
451:25 - this image so you can see that the
451:28 - parameters are updated once again and
451:30 - this time the x value is 23 and the Y
451:32 - value is 25 so guys since we have set
451:35 - the height and width as 50 pixels over
451:38 - here so we will see all the numbers
451:40 - between 0 to 50 in this case based on
451:43 - where the user clicks on that particular
451:45 - image so now we will see input type file
451:48 - in HTML form so guys basically the input
451:51 - tag along with the type file defines a
451:54 - file select field and a browse button
451:57 - for file uploads so basically if you
452:00 - have the requirement inside your HTML
452:02 - form to help the user in order to upload
452:05 - one of the files as attachment then you
452:08 - can use the input tag along with the
452:10 - type file and that is what we are going
452:12 - to check with the help of examples as
452:14 - well in the VSS code so let us check
452:16 - this in the VSS code over here I'll
452:18 - remove the previous lines of code that
452:20 - we had written so now over here we have
452:22 - a very simple statement that is below
452:24 - content is in HTML form inside the
452:27 - paragraph tag and then we have the form
452:29 - tag over here along with the method that
452:31 - is get request in this case now guys
452:33 - what we will do is we will have the
452:35 - input of the type file over here so
452:38 - input followed by colon and then we have
452:40 - the file in this case in order to have
452:42 - the type attribute as file over here and
452:45 - then guys for the name part we will
452:47 - provide the name as my file and simply
452:50 - we will copy and paste this value to the
452:53 - ID attribute as well and before this
452:55 - what we will do is we will also have the
452:57 - label and then for the for attribute we
452:59 - will have the ID of this input tag that
453:02 - is my file so we will simply copy this
453:04 - ID over here and then for the label part
453:07 - we will say select a file so that the
453:10 - user is able to select the file by using
453:13 - this particular input that is of the
453:14 - type file over here and then guys after
453:17 - this let us have the line breaks so over
453:20 - here we will have the BR tag and Then
453:22 - followed by the input tag with the type
453:25 - submit over here so we have the input
453:27 - tag with the type submit and the value
453:29 - that we will provide is submit in this
453:31 - case so guys basically this is the input
453:33 - tag that will help you in order to
453:36 - select one of the files such as JPG
453:38 - files or the PNG files as far as images
453:41 - are concerned or you can also select a
453:43 - PDF file or any other file of your
453:45 - choice now let me just save this file
453:47 - now and try reloading this page on the
453:49 - browser so as you can see below content
453:51 - is in HTML form and then we have this
453:54 - select a file label over here and we get
453:56 - this choose file button in this case
453:59 - with the help of this input tag with the
454:01 - type file over here now guys user will
454:03 - be able to choose the file in this case
454:05 - so when the user clicks on this button
454:07 - that is choose file you will be able to
454:09 - select the file by using the file
454:11 - explorer over here so let's say we
454:13 - choose this favicon JPG file in this
454:16 - case so I select this the file name is
454:18 - favicon over here and we click on open
454:21 - in this case so as you can see favicon
454:23 - do jpg is being selected and when the
454:25 - user clicks on submit this particular
454:28 - file will be sent on the server and we
454:30 - are going to check this with the help of
454:31 - the URL in this case so let me click on
454:34 - submit over here so as you can see my
454:37 - file in the URL it is equal to favicon
454:39 - do jpg so basically this particular file
454:42 - was sent on the server with the help of
454:44 - the get request and that is why we are
454:46 - getting the name of the file inside the
454:48 - URL and guys this is the way that you
454:51 - can use the input type file inside the
454:53 - HTML form in order to allow the user
454:56 - select one of the files based on your
454:58 - project requirement so now we will see
455:01 - input type hidden in HTML form so guys
455:04 - basically the input tag along with the
455:06 - type hidden defines a hidden input field
455:09 - that is not visible to a user so in case
455:12 - in your project requirements you want to
455:15 - have the hidden input field which is not
455:17 - supposed to be displayed to the user you
455:19 - can use the input tag along with the
455:22 - type hidden over here now a hidden field
455:25 - lets the web developers include data
455:27 - that cannot be seen or modified ified by
455:30 - the users when a form is submitted so
455:32 - let's say if you want the user to submit
455:34 - one of the values which is always going
455:36 - to be fixed when the user submits the
455:38 - form then you can have the input field
455:41 - along with the type hidden that will not
455:42 - be showed to the user but when the user
455:45 - submits the form this particular field
455:47 - will be also submitted and will be
455:49 - processed by the server it is very
455:51 - important to note that while the value
455:53 - is not a displayed to the user in the
455:55 - page content it will be visible and can
455:58 - be edited by the user by using the
456:00 - browsers developer tools or the view
456:02 - Source functionality so basically if the
456:05 - field is related to the security you
456:07 - should not use the hidden inputs as a
456:10 - form of security in that case so guys we
456:12 - will check this with the help of
456:13 - examples as well so let us move to the
456:15 - vs code over here so previously we had
456:18 - seen how we can use the input tag along
456:20 - with the type file which will allow the
456:22 - user in order to choose a file and
456:25 - submit to the server now guys after this
456:27 - input we will have another input over
456:30 - here which will be of the type hidden in
456:32 - this case now this particular input will
456:34 - not be displayed to the user and the
456:36 - name that we are going to give to this
456:38 - input field is hidden over here and the
456:41 - value that we want to be submitted to
456:43 - the server is 1 2 3 4 so guys basically
456:46 - this is the fixed value that will be
456:48 - submitted to the server when the user
456:50 - clicks on submit button and this value
456:53 - will be displayed on the URL since we
456:55 - are using the get request over here as
456:57 - the method for the form so so guys over
457:00 - here simply we will have the ID as well
457:02 - and we will say hidden in this case and
457:04 - this ID we are going to provide to the
457:06 - four attribute of the label as well so
457:09 - let me just provide the label and for
457:11 - the four attribute we will give the
457:12 - value as hidden and then we will say
457:15 - hidden input after this label so guys we
457:18 - have hidden input after this label which
457:21 - means after this label there is a hidden
457:23 - input which will not be displayed to the
457:25 - user but we can simply inspect this
457:27 - particular input and see what the value
457:30 - is present inside that input and then
457:32 - guys after this we will simply have the
457:34 - couple of line braks over here let me
457:36 - just save this file now and try
457:38 - reloading this page once again on the
457:40 - browser so as you can see hidden input
457:43 - after this label but we cannot see any
457:45 - input over here but when the user clicks
457:47 - on submit button in this case as you can
457:50 - see my file is equal to blank in this
457:52 - case that's because we have not selected
457:55 - any of the files over here but after
457:57 - that we have the hidden label over here
457:59 - and then we have the value as 1 2 3 4
458:02 - that's because for that label we had set
458:04 - the value as 1 2 3 4 over here and on
458:07 - this web page we can simply inspect that
458:09 - hidden field so let me just right click
458:12 - over here and click on inspect button so
458:14 - now we can see all the elements over
458:16 - here of the HTML page and let me just go
458:19 - over here to the hidden input after this
458:21 - label when we click on this after this
458:24 - you can see the input of the type hidden
458:26 - in this case which is having the value
458:28 - as 1 2 3 4 so basically anyone who is
458:31 - aware about the HTML code can come over
458:34 - here and make the changes in this value
458:36 - so let's say we can change the value to
458:39 - 9876 over here and press enter in this
458:42 - case and then after this when we click
458:44 - on the submit Button as you can see
458:47 - hidden value is now containing 9876 over
458:50 - here so this particular value can be
458:52 - changed by the user if he or she is
458:54 - aware about this developer tools and can
458:57 - make changes over here for the value
458:59 - attribute of the Hidden input tag so
459:02 - guys you should not use this to perform
459:04 - one of the security measures but simply
459:06 - to allow the user in order to submit the
459:09 - form and along with it you want some
459:11 - constant value to be passed to the
459:13 - server then you can make use of this
459:15 - hidden input tag so now we will see
459:17 - input type month in HTML form so guys
459:21 - basically the input tag along with the
459:23 - type month allows the user to select a
459:26 - month and a year and this we are going
459:28 - to check with with the help of examples
459:30 - as well now depending on the browser
459:32 - support a date picker can show up in the
459:35 - input field and we are going to select
459:38 - one of the months and the year as well
459:40 - it is very important to note that the
459:42 - type month is not supported in Firefox
459:45 - Safari and Internet Explorer Lev let us
459:48 - move to the vs code over here and
459:50 - previously we had seen the input tag
459:53 - along with the type file and the type
459:55 - hidden as well now after this hidden
459:57 - input tag we are going to have another
459:59 - another input with the type month over
460:01 - here so input colon month as you can see
460:04 - this is the Mt abbreviation over here
460:06 - which is a special feature of the vs
460:08 - code that allows us in order to have the
460:11 - required attributes inside the input tag
460:13 - so guys over here we have the type as
460:15 - month that is set and then let's say we
460:18 - provide the name as month over here and
460:20 - the same value we provided to the ID
460:22 - attribute as well now before this we are
460:25 - also going to have the label and for the
460:27 - for attribute we are going to have the
460:29 - ID as month over here that's because
460:32 - when the user clicks on this particular
460:34 - label you will be seeing the month
460:36 - picker over here that will be displayed
460:38 - to the user in order to select one of
460:40 - the months and the year so guys over
460:42 - here we will say select a month in this
460:45 - case as the label and then after this
460:47 - input tag we are going to have couple of
460:49 - line braks over here so that the submit
460:51 - button is showed on the next line now
460:53 - let me just save this file now and try
460:55 - reloading this page on the browser so as
460:57 - you can see select a month the label is
460:59 - being displayed over here and then user
461:02 - can click on this particular label or
461:04 - you can also click on this icon over
461:06 - here in order to display the month and
461:09 - the years as well so when we click on
461:11 - the label as well so as you can see over
461:13 - here you can select one of the months in
461:15 - this case so let's say we go back to
461:17 - 2022 and then the month of April we want
461:20 - to select so when we select April 2022
461:24 - it is being displayed over here and when
461:26 - the user clicks on submit button input
461:28 - field will be passed via the URL to the
461:31 - server that's because we have provided
461:33 - the method value as get request over
461:36 - here inside the form tag so guys let us
461:38 - submit this form over here so as you can
461:40 - see the month field is having the value
461:43 - as 2022 and the month that is 04 being
461:46 - displayed over here which is being
461:48 - passed to the server and guys this is
461:50 - the way that we can have the input field
461:53 - with the type month that will allow the
461:55 - user to select one of the months over
461:57 - here the past month or the future months
461:59 - can also be selected in this case so now
462:02 - we will see input type number in HTML
462:05 - form so guys basically the input tag
462:08 - along with the type number defines a
462:10 - numeric input field which will allow the
462:13 - user to only provide the numbers in this
462:16 - input field now you can also set the
462:19 - restrictions on what numbers are
462:21 - accepted so guys we will check this with
462:23 - the help of examples as well with the
462:26 - help of Min and Max attributes so let us
462:29 - move to the vs code over here and
462:31 - previously we had seen the different
462:33 - input types such as file and then hidden
462:35 - and the month type as well now we will
462:38 - provide another input field over here
462:40 - and this time we will have the type as
462:42 - number in this case so when we press
462:44 - enter as we can see the type is being
462:46 - defined as number over here and for the
462:48 - name field we will provide it as age
462:51 - because we will ask the user in order to
462:53 - provide the age of the user so guys the
462:55 - same value we will copy it as the ID as
462:58 - well for this particular particular
462:59 - input field and before this we will also
463:01 - have the label tag over here and for the
463:04 - for attribute we will have the value as
463:06 - age so that the user can click on this
463:08 - label and provide the number to this
463:11 - input field in this case so we will
463:13 - provide the label as provide your age in
463:18 - years followed by colon and then after
463:21 - this input tag we will also have the
463:22 - couple of line breaks so that the submit
463:25 - button is displayed on the next line so
463:27 - guys let me just save this file now and
463:29 - try reloading this page on the browser
463:31 - so as you can see provide your age and
463:34 - years is being displayed over here and
463:36 - the user will not be allowed to provide
463:38 - any of the alphabets or the special
463:41 - characters in this case that's because
463:43 - we have provided the input field with
463:45 - the type number which means it will only
463:48 - accept the numbers in this particular
463:51 - input field so guys over here let's say
463:53 - if I provide some string in this case so
463:56 - I'm not able to type the characters and
463:58 - only the numbers are being displayed
464:00 - over here let us try the special
464:02 - characters so over here I'm typing the
464:04 - special characters as well but it is not
464:06 - being displayed over here that's because
464:08 - the input field will only accept numbers
464:10 - in this case so let's say we provide the
464:12 - number as 105 in this case and when we
464:16 - click on submit button over here you can
464:18 - see that the age attribute is being
464:19 - displayed inside the URL with the value
464:22 - of5 over here now guys over here we can
464:25 - provide any number in this case let's
464:27 - say we provide 10,000 1,05 over here and
464:30 - click on submit so basically it is
464:32 - submitting that value but for the age
464:35 - Factor we need to restrict the numberers
464:37 - so that the user can specify the age in
464:39 - between two numbers over here the user
464:41 - can also provide a negative number in
464:43 - this case so when we go down over here
464:46 - as you can see negative numbers can also
464:48 - be displayed over here and we can
464:50 - increase this number as well so guys
464:52 - basically you can use these arrows in
464:54 - order to increment or decrement the
464:56 - numbers as well but guys let us put some
464:58 - restrict over here so the minimum age
465:01 - that we want is 18 in this case and the
465:03 - maximum age is 60 over here so we
465:06 - provide the main and the max attributes
465:08 - over here so as you can see the main
465:09 - attribute is equal to 18 and the max
465:12 - attribute is 60 in this case let me just
465:14 - save this file now and try reloading
465:16 - this page once again on the browser so
465:18 - now we will be able to restrict the age
465:20 - in between the 18 and the 16 numbers so
465:23 - as you can see when we are decreasing
465:25 - the number from 18 it is not decreasing
465:28 - so 18 is the minimum value that we can
465:30 - provide and 60 will be the maximum value
465:33 - so when we provide 59 and increase this
465:36 - number it is going to 60 and then when
465:38 - we click on the Arrow once again so it
465:40 - is not incrementing the value and when
465:43 - we click on the submit button the age is
465:45 - being taken as 60 over here and what if
465:47 - we provide a number which is greater
465:49 - than 60 manually so let's say we provide
465:51 - 67 over here and when we click on submit
465:54 - as you can see we are getting the
465:55 - validation value must be less than or
465:57 - equal to 60 so so basically this is the
465:59 - validation which will be displayed for
466:01 - the minimum number as well so when we
466:04 - provide 15 over here and click on submit
466:06 - so value must be greater than or equal
466:08 - to 18 over here so this is the
466:10 - validation that is automatically
466:12 - provided by the input field with the
466:14 - type number over here where we provide
466:16 - the Min and the max numbers in this case
466:19 - guys apart from this we can also have
466:21 - the step attribute which will increment
466:23 - or decrement the value by that
466:26 - particular step value over here so let's
466:28 - say we provide five as the step value
466:30 - let me just save this file now and try
466:32 - reloading this page once again on the
466:34 - browser and now if we provide any of the
466:36 - numers so let's say we provide 18 over
466:38 - here and when we increment it by one so
466:41 - over here when we press on this upper
466:43 - Arrow as you can see the next number is
466:45 - 23 that's because we have provided the
466:48 - step as five by default the step is set
466:51 - as one over here so that the user can
466:53 - increment or decrement the value by one
466:55 - but you can change that step value and
466:58 - we have set it S5 over here in this case
467:00 - so that is the reason why when we
467:02 - increment the value the value is getting
467:04 - increased by five and when we decrement
467:06 - the value the value is decreasing by
467:08 - five and that is how we can set the
467:10 - attributes that is min max and the step
467:12 - value as well apart from this we can
467:14 - also have the default value by setting
467:16 - the value attribute over here so let's
467:19 - say the default age of the user is 25 in
467:22 - this case so we provide the value is 25
467:25 - let me just save this file now and try
467:27 - reloading this page so as you can see by
467:29 - default you will be able to see the ages
467:32 - 25 so now we will see input type range
467:35 - in HTML form so guys basically the input
467:38 - tag along with the type range defines a
467:41 - control for entering a number whose
467:44 - exact value is not important so we are
467:47 - going to display a slider control over
467:49 - here so basically the type range is
467:52 - responsible to display a slider control
467:55 - that the user can slide and select one
467:57 - of the values based on the range Now the
467:59 - default range values is from 0 up to 100
468:03 - that we are going to check with the help
468:04 - of examples as well and we will also see
468:07 - the different attributes that are min
468:09 - max and step attributes so guys let us
468:11 - move to the vs code over here and
468:13 - previously we had seen the different
468:15 - input tags with the types file hidden
468:18 - month and the number as well now we are
468:20 - going to Define another input field over
468:22 - here so basically we are going to type
468:24 - input followed by colon and then we are
468:27 - going to say range over here so we type
468:29 - range so as you can see this is the Mt
468:32 - abbreviation over here which is one of
468:34 - the important features in the vs code so
468:36 - we select this option and the type
468:38 - attribute is set to range over here now
468:40 - guys for the name part we are going to
468:42 - set it as range in this case and for the
468:45 - ID as well we are going to keep the same
468:47 - value that is range and then over here
468:49 - we will set the label and we are going
468:52 - to set the for attribute as the range
468:54 - value over here now guys let's say we
468:56 - want the user to provide the age
468:58 - previously we had asked the user to
469:00 - provide the age inside the text field
469:02 - over here but now we are going to ask
469:05 - the user to provide the age with the
469:07 - help of the slider so over here we will
469:09 - say provide your age using slider in
469:13 - this case and Then followed by colon so
469:15 - guys basically a slider will be
469:17 - displayed to the user with the help of
469:19 - this input field with the type range in
469:21 - this case and by default the range value
469:24 - will be 0 up to 100 in this case let me
469:27 - just save this file now and and try
469:29 - reloading this page once again on the
469:30 - browser so as you can see provide your
469:33 - age using slider and this is the slider
469:35 - that the user can use in order to select
469:38 - one of the numbers using the slider now
469:41 - guys by default you cannot see the
469:42 - numbers over here so basically we are
469:44 - going to have another tag over here on
469:46 - the right side of the slider and we will
469:49 - have the output tag in this case so
469:51 - basically let's say after this input
469:53 - field we will have the output tag over
469:56 - here and this output tag will have the
469:58 - default value so let's say the default
470:01 - value in this case that we set is 20
470:03 - over here and the same value we are
470:05 - going to set it as 20 in this case let
470:08 - me just save this file now and try
470:09 - reloading this page once again on the
470:11 - browser so the slider is adjusted at the
470:14 - value of 20 and the same value is being
470:17 - displayed in the output tag over here
470:20 - now guys when we slide this in between
470:22 - the two numbers we cannot see the change
470:24 - in this number which is being displayed
470:26 - inside the output tag so what we have to
470:29 - do is we have to write a JavaScript code
470:32 - and there is a attribute that we are
470:33 - going to use as you can see in order to
470:36 - display the value we have to use the
470:38 - JavaScript and this is one of the
470:40 - properties that we are going to use that
470:42 - is next element sibling so guys
470:44 - basically what is the meaning of this so
470:46 - after this input field we have the next
470:49 - element that is output which can be
470:51 - referred by using the next element
470:53 - sibling over here so what we have to do
470:55 - is inside this input field with the type
470:58 - range we will say on input over here so
471:01 - this is the attribute that we are going
471:03 - to use in such a way that when the user
471:06 - slides this particular slider over here
471:09 - the on input attribute will be called
471:12 - and inside this on input attribute we
471:14 - will be using the this keyword followed
471:17 - by Dot and then we are going to use this
471:19 - property that is next element sibling
471:23 - over here so we have next element
471:26 - sibling which is going to refer to this
471:28 - particular tag that is output in this
471:31 - case and Then followed by Dot and then
471:34 - we have something called as value so
471:36 - basically what we are doing is we are
471:38 - setting the next element siblings value
471:40 - over here to which value so again we
471:43 - need to provide equal to since we need
471:45 - to assign certain value to this
471:47 - particular sibling over here after this
471:50 - input tag and the value will come from
471:52 - this input itself so basically we are
471:55 - going to use the this keyword followed
471:57 - by Dot and then we will say value so
472:00 - guys over here we are taking the value
472:02 - of the slider by using this do value in
472:05 - this case and then this value will be
472:07 - assigned to the next element sibling
472:11 - which is the output tag in this case so
472:13 - let me just save this file now and try
472:15 - reloading this page once again on the
472:17 - browser now when the user slides over
472:19 - here as you can see the number is also
472:21 - getting updated so when the user goes to
472:24 - the extreme right you can see that the
472:26 - maximum number is 100 and to the extreme
472:29 - left the number is set to zero over here
472:32 - so guys in this way we can also have the
472:34 - number that is being displayed to the
472:36 - user by using the on input attribute and
472:40 - Then followed by the next element
472:42 - sibling property followed by Dot and
472:44 - then the value of the slider can be set
472:47 - to this particular property now guys
472:49 - apart from this we can also restrict the
472:51 - values that is the Min and the mix
472:53 - values over here so what we can do is
472:55 - inside the same input tag in this case
472:57 - we can provide main attribute over here
473:00 - and let's say the minimum attribute we
473:01 - want is 18 and the maximum attribute we
473:04 - want is 60 over here so let me just save
473:07 - this file now and try reloading this
473:09 - page once again on the browser so as you
473:11 - can see the value is set to 20 by
473:13 - default and when we take it to extreme
473:15 - left the value is 18 which is the
473:17 - minimum value and to the extreme right
473:19 - the maximum value is 60 over here and
473:22 - that is what we had set as the minan and
473:24 - the max value for this particular input
473:26 - field with the type range so guys this
473:28 - is the way that you can set the input
473:30 - field with the type range over here and
473:33 - also display the number to the user so
473:35 - that the user comes to know what is the
473:37 - number that is being selected by the
473:39 - user apart from that you can also have
473:41 - the step attribute as well so let's say
473:43 - we provide the minimum value as 1 and
473:46 - the maximum value as 50 over here and we
473:48 - provide the step as 10 so in this case
473:52 - the values will be incremented or
473:54 - decremented by 10 so let me just save
473:56 - this file now and try reloading this
473:58 - page once again on the browser so as you
474:00 - can see 20 is the default value and then
474:03 - when we take it back it is 1 and then 11
474:06 - 21 31 41 and then the last value will be
474:11 - 50 over here which is not being taken
474:13 - because the step value is 10 and the
474:15 - maximum value should be 51 over here so
474:17 - when we set it to 51 let me just save
474:19 - this file now and try reloading this
474:21 - page now as you can see the maximum
474:23 - value that can be taken is 51 over here
474:26 - so guys in this way you can also set the
474:28 - step attribute as well for the range
474:30 - input field so so now we will see input
474:33 - type te for telephone number in HTML
474:37 - form so guys basically the input tag
474:39 - along with the type te which stands for
474:42 - telephone is used for input field that
474:45 - should contain a telephone number with a
474:48 - pattern mentioned so we will check this
474:50 - with the help of examples in vs code as
474:52 - well so basically whenever you have the
474:54 - requirement wherein you want the user to
474:57 - provide the telephone phone number you
474:59 - can have the input field with the type
475:01 - te and you can also mention the pattern
475:03 - as well so let us check this with the
475:05 - help of example in vs code so I'll
475:07 - remove these lines of code that were
475:09 - return previously over here and inside
475:11 - this form simply we will have the input
475:14 - along with the type te so input followed
475:17 - by colon and then we have Teel and this
475:20 - is the EMT abbreviation which is one of
475:22 - the special features of vs code that is
475:24 - the editor which we are using so guys
475:27 - over here we will say telephone as the
475:29 - name attribute and ID as well we will
475:32 - provide it as the telephone that is the
475:34 - value of this input field and before
475:36 - this we will also have the label and for
475:38 - the four attribute we will paste the
475:41 - same value that is the ID of this input
475:43 - field as telephone over here and then we
475:46 - will ask the user to provide telephone
475:49 - number so guys basically we are asking
475:51 - the user to provide the telephone number
475:53 - over here and for now we have not
475:55 - provided any pattern in this case so
475:57 - basically when we don't provide any
475:59 - pattern it will act like a simple text
476:01 - field in which you can provide any data
476:04 - over here so let us check this without
476:06 - any pattern over here so we will provide
476:08 - the couple of line breaks in this case
476:10 - and Then followed by the submit Button
476:12 - as well so input colon submit and we
476:15 - will provide the value as submit over
476:17 - here so that the value on the button is
476:19 - displayed as the submit value so guys
476:21 - let me just save this file now and try
476:23 - reloading this page on the browser so as
476:25 - you can see below content is in HTML
476:28 - form form and then we are asking the
476:30 - user to provide the telephone number so
476:32 - the user can click on this label and as
476:34 - you can see the cursor is highlighted
476:36 - over here and you can provide the
476:37 - telephone number over here and apart
476:39 - from this it is also accepting the
476:42 - characters as well so when the user
476:44 - clicks on submit over here as you can
476:46 - see the telephone name is being provided
476:49 - in the URL that's because we have
476:51 - provided the method value as get request
476:54 - over here and all the values that are
476:56 - provided by the user in the HTML form
476:58 - will be passed as the parameters inside
477:01 - the URL and that is what we can see over
477:03 - here now guys there is no certain
477:05 - pattern in this case which the user has
477:07 - followed so what we can do is we can
477:10 - provide the pattern in this case so over
477:12 - here there is a pattern attribute and
477:14 - let's say we want the first three
477:16 - numbers to be provided by the user
477:18 - between 0 to 9 so we have the open and
477:20 - close square brackets over here and then
477:23 - we say 0 to 9 in this case and then open
477:26 - and close curly braces we we want three
477:29 - numbers over here and then followed by
477:31 - Hyun so guys basically over here we are
477:33 - trying to provide the pattern that the
477:35 - user must follow while providing the
477:37 - telephone number and While submitting
477:40 - the pattern will be checked whether the
477:42 - input that is provided by the user is
477:44 - correctly matching with the pattern or
477:46 - not and then only the value will be
477:48 - submitted so over here we have provided
477:51 - the first three numbers that is going
477:53 - from 0 up to 9 and Then followed by a
477:55 - hyphen and then let's say we want two
477:57 - more number numbers over here that
477:59 - should go from 0 to 9 so again we have
478:02 - inside the open and close square
478:04 - brackets 0 to 9 which is the range but
478:06 - this time we need only two numbers so
478:09 - inside the open and close curly braces
478:11 - we will provide two as the number and
478:13 - then again we provide Hyun and once
478:16 - again we want three digits over here so
478:18 - let's say I'll simply copy the first
478:20 - format in this case and paste this over
478:22 - here so guys basically first of all we
478:24 - are expecting the three digits in this
478:26 - case that should go from 0 to 9 followed
478:29 - by a hyphen over here and then we are
478:31 - expecting two digits from 0 to 9
478:33 - followed by hyphen once again and then
478:36 - again we are expecting three digits from
478:38 - 0 to 9 in this case which completes our
478:41 - pattern over here of the telephone and
478:43 - then one more thing that we can provide
478:45 - is the placeholder which will tell the
478:48 - user what is the format that the form is
478:50 - expecting so over here simply we will
478:53 - provide 1 2 3 that is the first three
478:55 - digits followed by Hyun and then two
478:57 - more digits that is four and five
478:59 - followed by hyphen and then three more
479:02 - digits that is 6 7 8 and this completes
479:04 - our pattern that we have just defined
479:06 - over here for the pattern attribute in
479:09 - this case so guys let me just save this
479:11 - file now and try reloading this page
479:12 - once again on the browser so as you can
479:15 - see provide telephone number is now
479:17 - having the placeholder in this case that
479:19 - we have provided and then user can
479:21 - simply click over here and provide the
479:23 - numbers that is 1 2 3 and let's say if
479:25 - the user doesn't provide the numbers in
479:27 - this pattern so what will happen so over
479:30 - here let's say I provide 4 5 6 7 8
479:32 - without any hyphen character that is
479:34 - Dash character over here so let me try
479:36 - submitting this so as you can see please
479:38 - match the requested format is being
479:40 - displayed over here and the form is
479:42 - expecting these two hyphens after the
479:45 - first three digits followed by two
479:47 - digits and then once again The Hyphen
479:49 - should be present so over here after
479:51 - first three digits we have hyen followed
479:53 - by two digits and one more hyphen over
479:56 - here followed by three digits in this
479:57 - case let me just click on submit once
480:00 - again over here so now as you can see
480:02 - the form is getting submitted with the
480:04 - telephone number that is provided by the
480:06 - user over here so in this way we can
480:08 - provide the telephone number with this
480:10 - particular format we can have any other
480:12 - number over here as far as we are using
480:15 - the correct pattern for the telephone
480:17 - number that we are providing so when the
480:19 - user clicks on submit once again so as
480:21 - you can see this is the updated
480:22 - telephone number that is provided by the
480:24 - user and anytime the pattern is not
480:27 - matched over here so let's say we
480:28 - provide another number wherein we
480:30 - provide four digits after the second
480:32 - hyphen in this case so when we click on
480:34 - submit over here we are getting the
480:36 - error message that is please match the
480:38 - requested format so basically this exact
480:40 - pattern needs to be matched by the user
480:43 - While submitting the form and based on
480:44 - your project requirement you can provide
480:46 - the required format that you want the
480:48 - user to provide the telephone numbers so
480:51 - so now we will see input type time in
480:53 - HTML form so guys basically the input
480:56 - tag along with the the type time allows
480:59 - the user to select a time with no
481:02 - particular time zone over here so
481:04 - basically the user will be provided the
481:06 - input field that will allow the user to
481:08 - select one of the time that is the hours
481:11 - and the minutes based on the user's
481:13 - requirement so over here depending on
481:15 - the browser support a Time picker can
481:17 - show up in the input field so basically
481:19 - the user will have the As and the
481:21 - minutes to select based on the time
481:23 - picker over here so let us check this
481:25 - with the help of example in vs code over
481:28 - here so previously we had seen the input
481:30 - tag along with the type te which helps
481:32 - us to provide the telephone number in a
481:35 - particular pattern now this time we will
481:36 - have another input tag over here
481:38 - followed by colon and this time we will
481:41 - have time in this case so this is the Mt
481:43 - abbreviation so as you can see input tag
481:46 - along with the type time over here which
481:48 - will help us in order to select the time
481:51 - and over here we will provide the name
481:52 - as time and ID as well we will provide
481:55 - the same value that is time over here
481:57 - and before this we will have the label
481:59 - and we will ask the user to provide the
482:02 - time and for the for attribute we have
482:04 - copied the time value over here and we
482:07 - will ask the user to provide time in
482:10 - this case followed by colon and then
482:13 - after this let us have couple of line
482:15 - braks over here with the help of BR tags
482:18 - so let me just save this file now and
482:19 - try reloading this page once again on
482:21 - the browser so as you can see provide
482:23 - time label is being displayed over here
482:26 - and when the user clicks on this label
482:28 - Button as you can see this particular
482:30 - input field is now having the focus the
482:32 - user can simply click on this clock item
482:34 - over here that is the icon and when the
482:37 - user clicks over here as you can see we
482:39 - have the hours as well and the minutes
482:41 - as well over here so the hours it will
482:43 - go from 0 0 up to 23 so let's say what
482:46 - is the current time right now it is
482:49 - 16:33 so we select 17 and then let's say
482:52 - we want to select 30 over here so 17:30
482:55 - is the time so we select the 77 130 and
482:58 - when we click on the submit button the
483:00 - 1730 time should go as part of the
483:03 - parameter inside this URL since we have
483:06 - provided the method as get request over
483:09 - here so when we click on submit Button
483:11 - as you can see the time parameter is
483:13 - having 17 followed by a colon so over
483:16 - here we are having the asky value of the
483:18 - colon that is percentage 3 a in this
483:21 - case and Then followed by 30 which
483:23 - represents the minute so basically we
483:25 - have the hour that is 17 and minute that
483:28 - is 30 over here which is being passed to
483:30 - the server with the help of the get
483:32 - request so guys we can select any time
483:34 - over here we can also select the pass
483:36 - time in this case so let's say we select
483:38 - 10:36 in this case and then we press
483:41 - submit as you can see the time is being
483:43 - passed as 1036 to the server for further
483:46 - processing so in this way we can have
483:48 - the input field that will help the user
483:50 - in order to select the time in the form
483:52 - of hours and minutes so now we will see
483:55 - input type URL in HTML form so guys
483:58 - basically the input tag along with the
484:01 - type URL is used for input fields that
484:04 - should contain a URL address so
484:06 - basically let's say if you have a URL or
484:09 - a link to a particular web page and you
484:11 - want to provide it inside one of the
484:13 - text boxes on one of the websites that
484:16 - will help you in order to have certain
484:18 - validations in place so guys depending
484:20 - on the web browser the URL field can be
484:23 - automatically validated when submitted
484:25 - so it depends on the browser that the
484:27 - user uses in order to F the form or
484:30 - provide the URL in one of the input
484:33 - fields that is being developed by you so
484:35 - you should test it thoroughly on
484:36 - different browsers whenever you are
484:38 - going to use the input tag along with
484:40 - the type URL and some of the smartphones
484:43 - also recognize the URL type and adds a
484:46 - doom to the keyboard to match the URL so
484:50 - basically this is one of the important
484:52 - features of the smartphone in today's
484:54 - date that it will help the user in order
484:56 - to provide a DOT button on the keyboard
484:59 - while the user is providing the URL in
485:02 - the input field that is provided by the
485:04 - developer so guys let us check this with
485:06 - the help of example in vs code over here
485:08 - so previously we had seen the input
485:10 - field with the type telephone number and
485:13 - the type that is time over here which
485:15 - will allow the user to provide the
485:17 - telephone number and the time
485:18 - respectively now after this we will have
485:21 - another input field followed by colon
485:23 - and this time we will have the type as
485:25 - URL so we simply type URL over over here
485:28 - and this is the memt abbreviation which
485:30 - is one of the special features of vs
485:32 - code in this case so guys as you can see
485:34 - we have the input tag along with the
485:37 - type URL and over here for the name
485:39 - attribute we will say URL in this case
485:42 - and for the ID attribute we will say URL
485:45 - once again and before this we will also
485:47 - have the label over here and for the for
485:50 - attribute we will say URL so that when
485:52 - the user clicks on this particular label
485:54 - this input field is focused so that the
485:56 - user can Pro provide the required link
485:58 - or the URL to the web page so over here
486:01 - we will say provide web page Link in
486:05 - this case followed by colon so we are
486:07 - asking the user to provide the web page
486:09 - link which is also known as URL to a
486:11 - particular web page and after this input
486:14 - tag we will have couple of line breaks
486:16 - over here so let me just save this file
486:17 - now and try reloading this page once
486:19 - again on the browser so as you can see
486:22 - provide web page link label is being
486:24 - displayed over here and when the user
486:26 - clicks on this particular particular
486:27 - label the input field is getting focused
486:30 - in this case and the user can provide
486:32 - the URL over here so let's say we
486:34 - provide Google as the URL so is this the
486:36 - correct URL no in this case this is not
486:39 - the correct format of the URL still we
486:41 - will test it let me just click on submit
486:44 - button over here as you can see please
486:46 - enter a URL error message is being
486:48 - displayed over here so let me just
486:50 - provide Doom over here in this case so
486:53 - let us check whether now this URL will
486:55 - be submitted or not so when we click on
486:57 - submit so again please enter a URL so
487:00 - the important thing that we are missing
487:02 - over here in this case is the https so
487:04 - whenever we go to the web browser and
487:07 - type one of the URLs so let's say we
487:09 - want to go to Google so simply we can
487:11 - provide google.com over here but
487:14 - automatically the browsers are designed
487:16 - in such a way that they provide the
487:18 - https prefix over here before the domain
487:21 - so that is what is being expected over
487:24 - here in the HTML form as well so before
487:27 - this let us say we provide https
487:30 - followed by colon and then two times
487:32 - forward slashes over here now this is
487:34 - the correct URL that will be accepted by
487:37 - this input field of type URL over here
487:40 - so let me just click on submit button
487:42 - once again so as you can see URL
487:44 - parameter is being displayed over here
487:46 - in the URL and then after that we have
487:49 - the https and the entire URL that we
487:52 - have provided in this case it is
487:54 - displaying the asky characters over here
487:57 - for the Lear and the forward slashes
487:59 - that we had provided so guys in this way
488:01 - you can provide any of the URLs based on
488:03 - your project requirements and ask the
488:05 - user to paste a particular link to the
488:07 - web page if the user is expected to do
488:09 - so but make sure that you test this
488:11 - input field on different browsers
488:13 - because we never know what browser the
488:15 - actual user is using while he or she is
488:18 - submitting the HTML form or using it
488:21 - outside the HTML form as well so now we
488:23 - will see input type week in HTML form so
488:27 - guys basically the input tag along with
488:29 - the type week allows the user to select
488:32 - a week and a year so basically the user
488:36 - will be provided with the input field
488:38 - where he or she can select the week of
488:41 - the entire year and that particular year
488:43 - as well now depending on the browser
488:46 - support a date picker can show up in the
488:48 - input field so it is very important for
488:51 - you as a developer to check your input
488:54 - field on the different browsers whether
488:56 - it is supported by the various versions
488:58 - of the browsers so let us check this
489:00 - with the help of example in vs code over
489:02 - here so previously we had seen the
489:04 - various input field types that is
489:06 - telephone and the time and the URL as
489:09 - well now we will have another input
489:11 - field so over here we will say input
489:13 - followed by colon and this time we will
489:15 - have the week type over here so that the
489:18 - user is able to select one of the weeks
489:21 - of the year so the type is weak in this
489:23 - case and let's say we provide the name
489:25 - as weak over here and the same value we
489:28 - will provide it as the ID attribute in
489:30 - this case now before this input tag we
489:33 - will also have the label so that the
489:35 - user comes to know that a week is
489:37 - supposed to be selected from his or her
489:40 - side so over here we will provide the
489:42 - value for the for attribute as weak in
489:44 - this case and Then followed by select a
489:47 - weak and then colum so guys basically we
489:50 - have a label and Then followed by the
489:52 - input tag over here of the type week in
489:55 - this case and then we will have BR tags
489:58 - over here that is line braks so that the
490:00 - submit button is displayed on the next
490:02 - line so let me just save this file now
490:04 - and try reloading this page once again
490:06 - on the browser so as you can see select
490:08 - a week label is being displayed and Then
490:10 - followed by the input field where the
490:12 - user is expected to select one of the
490:14 - weeks so when we click on this calendar
490:17 - icon over here as you can see a calendar
490:19 - is being displayed and user can select
490:21 - the entire week from a particular year
490:24 - so let's say we want to select the next
490:26 - week in this case so we can click on any
490:28 - of the dates over here so let's say we
490:30 - select this so it says week 51 of the
490:32 - Year
490:33 - 2023 and then when we click on submit
490:36 - over here as you can see the week name
490:38 - is being displayed as the parameter
490:40 - inside the URL followed by the year that
490:43 - is 2023 and Then followed by week 51
490:46 - over here which you can further process
490:48 - based on your requirements so guys in
490:50 - this way user can easily select the
490:53 - required week based on the data that the
490:55 - user wants to select over here we can
490:57 - select any of the past weeks as well and
491:00 - click on submit and then accordingly the
491:02 - week will be passed to the server for
491:04 - further processing we can also select
491:06 - one of the future weeks over here so
491:08 - let's say we go to the year 2027 in this
491:10 - case and then let's say we have the
491:12 - month of December over here and we
491:14 - select the first week of December over
491:16 - here and week 48 2027 is the year when
491:20 - we click on submit 2027 week 48 is being
491:23 - displayed in the URL so guys in this way
491:25 - you can simply have the input field and
491:28 - allow the user to have one of the weeks
491:30 - for a particular year so now we will see
491:32 - input attribute value in the input field
491:35 - so guys basically the input value
491:38 - attribute specifies an initial value for
491:41 - an input field which will be the default
491:43 - value when the user clicks on submit
491:46 - button without providing any value to
491:48 - this input field so basically it means
491:51 - the value attribute will help us to
491:53 - provide the default value inside the
491:55 - input field let us check this with the
491:57 - help of examples and vs code over here
492:00 - so I'll remove the previous lines of
492:02 - code in this case and we will only keep
492:04 - the form tag over here and then guys
492:06 - inside this form tag what we will do is
492:08 - we will have a P tag that is the
492:10 - paragraph tag in this case and then we
492:12 - will say below content is in HTML form
492:17 - so basically we have a very simple
492:19 - statement that is below content is in
492:21 - HTML form and simply we will ask the
492:23 - user to provide the first name and the
492:26 - last name over here here so simply we
492:28 - will have the input with the type text
492:30 - in this case so we have the input tag
492:33 - along with the type text and then let's
492:35 - say the name attribute is f name and the
492:37 - same value we provided inside the ID as
492:40 - well and before that we will have the
492:43 - label and for the for attribute we will
492:45 - say F name over here so that this
492:47 - particular label is linked to the input
492:50 - field in this case and then we will say
492:53 - first name over here as the label
492:55 - followed by colon now guys this is this
492:57 - is a very simple text field in this case
492:59 - and we will not have any value inside
493:01 - this input field so let us have a submit
493:04 - button in this case so we provide input
493:06 - followed by colon and then we have the
493:08 - type submit over here and the value will
493:11 - be submit in this case let me just save
493:13 - this file now and try reloading this
493:15 - page once again on the browser so as you
493:17 - can see we have two times below content
493:19 - is in HTML form so previously we had
493:22 - provided another paragraph before that
493:24 - form as well so I'll just remove one
493:25 - paragraph in this case let me just save
493:27 - this file now and try reloading this
493:29 - page so as you can see we have the first
493:31 - name over here followed by colon and
493:33 - then simply we have the input field in
493:35 - this case guys we want the submit button
493:38 - to be on the next line so simply we will
493:40 - provide a couple of line braks over here
493:42 - using the BR tag so let me just save
493:44 - this file now and try reloading this
493:46 - page once again on the browser so as you
493:48 - can see we have a simple text field that
493:50 - is first name in which we can provide
493:52 - the first name over here now guys let's
493:54 - say we want certain default value to be
493:57 - provided inside the first name so what
493:59 - we can do is we can have the value
494:02 - attribute for this input tag so after
494:04 - this ID we will provide the value
494:06 - attribute and let's say the first name
494:09 - with the value John will be the default
494:11 - value over here so let me just save this
494:13 - file now and try reloading this page
494:15 - once again on the browser so as you can
494:17 - see when the user loads this particular
494:20 - page the default value that is drawn
494:22 - will be displayed to that user inside
494:25 - the first name input Field in in this
494:27 - case and then user can provide his or
494:29 - her own name over here or simply click
494:31 - on submit button so that the value that
494:33 - is drawn will be passed to the server so
494:36 - when we click on the submit button over
494:37 - here as you can see inside the URL we
494:40 - have the F name parameter followed by
494:43 - equal to and the value is JN in this
494:45 - case that's because the default value
494:47 - that we have provided in the first name
494:49 - input field is John over here similarly
494:52 - we can have another input field as well
494:54 - so let's say we simply copy these lines
494:56 - of code and past it after the first name
494:58 - over here and we provide L name in this
495:01 - case that is last name as the name and
495:04 - ID and for the for attribute as well we
495:07 - provide the L name as the value and
495:09 - instead of first name we will say last
495:11 - name as the label and for the value part
495:14 - we will say do in this case so guys
495:17 - basically the first name is John last
495:19 - name is do so we have John do as the
495:21 - full name of the user as the default
495:23 - value for both these input Fields so let
495:26 - me save this file now and try reloading
495:28 - this page once again on the browser so
495:31 - as you can see we have the first name
495:33 - that is having the value default value
495:35 - of John and the last name is having the
495:37 - default value as do and when we click on
495:40 - submit button simply without providing
495:42 - any data over here so these two names
495:45 - that is John and do will be passed to
495:47 - the server as the URL with the F name
495:50 - and the L name as the parameters we can
495:53 - also modify the first name and last name
495:55 - over here so simply we can say program
495:56 - programming and then for the last name
495:59 - we can say beginners over here so let me
496:01 - just click on submit button now so
496:03 - basically the first name and last name
496:05 - has been updated that is programming and
496:07 - then beginners as the last name in this
496:09 - case which is being passed to the server
496:11 - so in this way we can have the default
496:13 - values for the required input Fields
496:16 - based on your project requirements by
496:18 - using the value attribute over here
496:20 - inside the input tag so now we will see
496:23 - input attribute read only in input field
496:26 - so guys basically the input readon
496:29 - attribute specifies that an input field
496:32 - is a readon field so basically let's say
496:35 - if you want the input field to be
496:37 - displayed to the user but you don't want
496:39 - the user to provide any of the values
496:42 - inside that input field then you can
496:44 - provide this attribute that is read only
496:47 - which will allow the user to only read
496:49 - that particular content inside the input
496:51 - field now a read only input field cannot
496:54 - be modified however a user can tab to it
496:58 - which means the user can press on the
497:00 - tab key on the keyboard and go to that
497:03 - particular input field also the user can
497:05 - highlight it and copy the text from it
497:08 - so basically all the other things can be
497:10 - done inside this readon input field but
497:13 - the user cannot modify this field now
497:15 - the value of the read only input field
497:18 - will be sent when submitting the form so
497:20 - when the user submits that particular
497:22 - form the input field value that is
497:24 - present inside the read only field will
497:27 - be sent to the form so guys let us check
497:29 - this with the help of examples in vs
497:31 - code so previously we had seen the input
497:33 - fields that were having the value
497:36 - attribute which will be shown by default
497:38 - now guys let us say we only have the
497:40 - first name as the input field and we
497:42 - will remove these lines of code that is
497:44 - the last name over here and this time we
497:46 - will again have the text input field in
497:49 - this case and for the name attribute we
497:51 - will give the value as test and the same
497:53 - value we provided to ID and before this
497:56 - we will Pro provide the label and for
497:58 - the four attribute we will say test as
498:00 - the value and then the label that we
498:03 - will give is read only field in this
498:06 - case followed by colon so guys over here
498:08 - we have provided the label that is read
498:10 - only field and then after that we have
498:12 - this input field over here and then
498:15 - after this let us have couple of line
498:17 - breaks in this case but guys currently
498:19 - this is a normal text field over here so
498:21 - let me just save this file now and try
498:23 - reloading this page once again on the
498:25 - browser so as you can see the label is
498:27 - being displayed but the user can provide
498:29 - any of the values over here so by
498:32 - default we will provide some values so
498:34 - let's say we provide the value as
498:36 - customer in this case let me just save
498:38 - this file now and try reloading this
498:40 - page once again so as you can see
498:42 - customer is getting displayed over here
498:44 - as a default value but still the user
498:46 - can modify it and user can provide any
498:49 - of the details based on the requirements
498:52 - so what we have to do is in order to
498:54 - make this field as read only that is
498:56 - this the user should not be able to
498:58 - modify it we will simply provide the
499:01 - readon attribute as you can see this is
499:04 - the attribute that we can provide and it
499:06 - doesn't require any value to be provided
499:09 - so it is basically the read only keyword
499:11 - that you have to provide inside this
499:13 - input field over here so guys let me
499:16 - just save this file now and try
499:17 - reloading this page once again on the
499:19 - browser so as you can see customize a
499:21 - default value but this time when you
499:24 - click on this input field there is no
499:26 - curve C that is appearing and then over
499:28 - here when I'm typing the characters I'm
499:31 - not able to modify this field now so
499:34 - since we have provided this input field
499:36 - with the readon attribute the user will
499:39 - not be able to modify this particular
499:41 - field and apart from that user can click
499:43 - on the submit button in order to submit
499:46 - this form so when we click on the submit
499:48 - Button as you can see we have the F name
499:51 - parameter over here and the test
499:53 - parameter as well that we have provided
499:55 - to this read only Fe and the value for
499:57 - this is customer over here so basically
500:00 - whatever value is being provided in the
500:02 - readon field it will be passed to the
500:04 - server and since we have used the get
500:06 - request we can see the parameters being
500:09 - passed as the part of URL so guys in
500:11 - this way you can easily create the input
500:14 - field with a read only value over here
500:16 - and allow the user to submit the form
500:18 - with that particular default value so
500:20 - now we will see input attribute disabled
500:23 - in input field so guys basically the
500:25 - input dis disabled attribute specifies
500:28 - that an input field should be disabled
500:31 - by disabled what we mean is a disabled
500:33 - input field is unusable and unclickable
500:36 - as well so basically this is a kind of a
500:39 - readon field that we had seen previously
500:41 - so over here as well the user will not
500:44 - be able to modify the content of the
500:47 - input field which is having the
500:48 - attribute as disabled over here and
500:51 - apart from this functionality the value
500:53 - of the disabled input field will not be
500:55 - sent when some submitting the form so
500:57 - basically this is the main difference
500:59 - between the readon attribute and the
501:01 - disabled attribute the readon attribute
501:04 - will help the user to send the input
501:06 - field value that is set by default to
501:09 - the server whereas the disabled input
501:11 - field will not be able to send the value
501:14 - that is provided inside this input field
501:16 - so guys let us check this with the help
501:18 - of examples in vs code over here so
501:21 - simply we will have the input field and
501:23 - this time we will have the text input
501:25 - field over here and for the name part we
501:27 - will say disabled in this case and then
501:29 - for the ID as well we will provide the
501:32 - same value that is disabled and before
501:34 - this we are going to have the label and
501:36 - for the four attribute we have the same
501:38 - value that is disabled over here and
501:41 - then we will give the label as disabled
501:43 - field in this case and Then followed by
501:46 - colon we have this input field after
501:48 - this and let us say we have couple of
501:50 - line brakes over here so that the submit
501:52 - button is displayed on the next line so
501:54 - let me just save this file now and try
501:56 - by reloading this page once again on the
501:58 - browser so as you can see we have the
502:00 - disabled field label being displayed
502:03 - over here but we have the normal input
502:05 - field right now which we can modify and
502:08 - send to the server as well so what we
502:10 - can do is we want a default value to be
502:13 - provided inside this input field so we
502:15 - will say value attribute and let's say
502:17 - we provide disabled as the value over
502:20 - here so let me just save this file now
502:22 - and try reloading this page once again
502:24 - on the browser so as you can see
502:25 - disabled value is being displayed over
502:28 - here but right now user is able to
502:30 - modify this input field and will be able
502:33 - to send this value to the server after
502:35 - submitting this form so what we have to
502:37 - do is in order to make this input field
502:39 - as disabled simply we have to come to
502:42 - the end and type disabled keyword so as
502:45 - you can see this is the keyword that is
502:47 - disabled being suggested by the vs code
502:50 - over here in order to make this input
502:52 - field disabled so that the user is not
502:55 - able to modify it and nor he or she will
502:58 - be able to send the value to the server
503:01 - after submitting the form so let me just
503:03 - save this file now and try reloading
503:05 - this page once again on the browser so
503:07 - as you can see now the background of
503:09 - this input field is slightly updated the
503:12 - color can be shown as a gray color over
503:14 - here and when we click on this
503:16 - particular input field we are not able
503:18 - to focus it and also the user is not
503:21 - able to type inside this input field
503:23 - over here whereas in the read only we
503:26 - were able to highlight this input field
503:28 - over here but we are not able to modify
503:30 - it so let us see what is the difference
503:32 - between read only and disabled field
503:34 - over here so when we click on the submit
503:36 - button in order to submit the form as
503:39 - you can see F name that is John is being
503:41 - provided to the server inside the URL
503:44 - and we have test for which the value is
503:46 - customer so basically the read only
503:48 - field value is being passed to the
503:50 - server in the form of URL since we have
503:53 - used the get request as the method type
503:56 - for the HTML form whereas the disabled
503:58 - field is not being passed to the server
504:01 - and that is the main difference between
504:02 - the read only and the disabled field
504:04 - over here so in case you have any of the
504:07 - requirements in the project that you
504:09 - want to disable a particular input field
504:11 - as a part of functionality in such a way
504:14 - that you don't want that particular
504:15 - field value to be passed to the server
504:18 - then simply you can provide the disabled
504:20 - keyword to the required input field over
504:23 - here so that the user is no longer able
504:25 - to modify that input field and the value
504:28 - will not go to the server so now we will
504:31 - see input attribute size in input field
504:34 - so guys basically the input size
504:36 - attribute specifies the visible width in
504:39 - characters of an input field so
504:41 - basically the size attribute is
504:43 - responsible in order to specify the
504:46 - visible width of the input text box the
504:49 - default value for the size that is the
504:51 - width of the text box is 20 that we have
504:53 - seen so far and it is very important to
504:56 - to note that the size attribute only
504:58 - works with following input types that is
505:01 - text search telephone number URL email
505:05 - ID and password so guys basically these
505:07 - are the only input fields on which the
505:10 - size attribute can be implemented and
505:12 - you can simply increase or decrease the
505:15 - width of that input field as far as UI
505:18 - which means user interface is concerned
505:20 - so let us check this with the help of
505:22 - examples in BS code over here so
505:24 - previously we had seen the different
505:26 - attributes that are value then we had
505:28 - also seen read only attribute and the
505:31 - disabled attribute as well now let us
505:33 - have another input and this time we will
505:35 - have the input field of the type search
505:38 - over here so that we can increase the
505:40 - width or decrease the width of this
505:42 - particular input field so we are going
505:45 - to have the input tag along with the
505:47 - type search and over here for the name
505:49 - part we will provide the value as search
505:52 - and for the ID as well we will provide
505:54 - the value as search in this case let me
505:57 - provide the label as well before the
505:59 - input field and for the for attribute we
506:02 - will provide the value as search over
506:04 - here and the label that we will provide
506:06 - is search your term or phrase so we have
506:10 - a very simple statement over here that
506:11 - is search your term or phrase which is
506:13 - the part of the label and the user can
506:16 - simply provide a term or a phrase as
506:18 - well having list of words based on the
506:21 - requirements so guys by default the size
506:23 - of this particular input field will be
506:25 - 20 so let me just save this file now and
506:27 - try reloading this page once again on
506:29 - the browser so as you can see we have
506:31 - got search your term of phas and then we
506:34 - have this input field over here for
506:36 - which the width is 20 right now by
506:38 - default let me just provide couple of
506:41 - line brakes over here after this input
506:43 - field so that the submit button is
506:45 - displayed on the Le line so let me just
506:47 - reload this page once again on the
506:49 - browser after providing the line brakes
506:51 - so as you can see the width of this
506:53 - particular input field is 20 right now
506:56 - by default so let us say we want to
506:58 - increase the width so that the user is
507:00 - able to search for some term over here
507:03 - so let's say programming for beginners
507:05 - which is the name of this YouTube
507:07 - channel that you should definitely
507:08 - subscribe if you have not done so so
507:11 - basically when we provide programming
507:12 - for beginners over here as you can see
507:15 - not the entire phrase can be seen within
507:18 - this particular width of the input field
507:20 - which is 20 by default so let us say we
507:22 - want to provide the size as 40 in this
507:25 - case so simply we can provide size and
507:28 - then provide a number that is 40 over
507:30 - here by default it is set to 20 in other
507:33 - input Fields wherever we don't provide
507:35 - the size attribute so let me just save
507:38 - this file now and try reloading this
507:40 - page once again on the browser so as you
507:42 - can see the width of this input field is
507:45 - increased now and we can say programming
507:49 - for beginners so this phrase we can
507:51 - easily see without actually scrolling
507:54 - horizontally and again we can can
507:56 - provide more characters over here on the
507:59 - right so we can say please subscribe so
508:02 - as you can see the entire phrase can be
508:04 - seen right now and then further we can
508:06 - type more content over here HTML
508:08 - tutorial so the longer the phrase the
508:12 - characters on the left hand side will
508:13 - code on the extreme left over here so
508:16 - that it is not visible right now within
508:18 - the same input field so guys this is the
508:20 - main reason to use the size attribute in
508:23 - order to increase the width of a
508:25 - particular input field where the user is
508:27 - expected to provide the large input in
508:30 - the form of text phrases we can also
508:32 - decrease the size of this input field so
508:34 - let's say we make the size as 10 over
508:37 - here let me just save this file now and
508:39 - try reloading this page once again on
508:40 - the browser so as you can see the size
508:43 - of this input field is now smaller
508:45 - compared to the default size which is 20
508:48 - right now which can be seen on the other
508:50 - input Fields as well so guys in this way
508:52 - you can easily set the size attribute to
508:55 - any of the input Fields provided the
508:58 - type of the input Fields belong to text
509:00 - search telephone number URL email and
509:04 - password so now we will see input
509:06 - attribute max length in input field so
509:09 - guys basically the input max length
509:11 - attribute specifies the maximum number
509:14 - of characters allowed in an input field
509:18 - so basically if you want the input field
509:20 - to be limited with a particular number
509:22 - of characters to be entered by the user
509:25 - we can use the max length attribute and
509:27 - provide the maximum number of characters
509:29 - that the user can provide in this input
509:32 - field it is very important to note that
509:34 - when a max length is set the input field
509:37 - will not accept more than the specified
509:40 - number of characters and there will be
509:41 - no validations so this particular
509:44 - attribute does not provide any feedback
509:46 - over here to the user why the input
509:49 - field is not taking any more characters
509:51 - so if you want to alert the user you
509:54 - must write certain JavaScript code in
509:56 - order to mention a particular message
509:58 - that the maximum length is not allowing
510:00 - the user to enter more characters in the
510:03 - same input field so guys let us check
510:05 - this with the help of examples in vs
510:07 - code over here so basically previously
510:09 - we had seen the different attributes
510:11 - such as the value attribute then we had
510:13 - also seen the read only and the disabled
510:15 - attributes as well apart from that we
510:18 - had also seen the size attribute which
510:20 - mentions the width of the input field so
510:23 - guys we will have another input field
510:25 - over here of the type text in this case
510:27 - and basically we are going to have the
510:30 - max length attribute for this input type
510:32 - and the name for this input field will
510:34 - be remarks in this case so we will
510:36 - provide the value of the name attribute
510:38 - as remarks and the same value we will
510:40 - provide to the ID attribute as well and
510:43 - let me just provide the label before
510:45 - this input field for the for attribute
510:47 - we will provide the value as remarks so
510:49 - that we link this particular label to
510:52 - the input field that we have defined and
510:54 - then we will say the remarks s the label
510:57 - followed by colon and then guys let me
510:59 - just provide couple of line breaks over
511:01 - here so that the submit button is
511:03 - displayed on the next line so let me
511:05 - just save this file now and try
511:06 - reloading this page once again on the
511:08 - browser so as you can see remarks label
511:11 - is being displayed over here and you can
511:13 - provide your remarks in this case so
511:16 - basically you can provide any number of
511:18 - characters right now by default because
511:20 - we have not provided any max length
511:23 - attribute over here for now so you can
511:25 - limit the the number of characters that
511:27 - is being provided by the user over here
511:29 - so let's say we want the user to provide
511:32 - maximum of 10 characters in this case so
511:35 - let's say we provide max length in this
511:37 - case as the attribute and the value that
511:39 - we provide is 10 over here so that
511:42 - maximum of 10 characters can be allowed
511:44 - in this particular remarks input field
511:46 - so let me just save this file now and
511:48 - try reloading this page once again on
511:50 - the browser now if we type something so
511:52 - let's say programming and then I'm not
511:55 - able to type type anymore that's because
511:57 - the number of characters that is 10 is
511:59 - completed over here so when we type
512:01 - these characters we have 1 2 3 4 5 6 7 8
512:07 - 9 10 so as you can see 10 characters are
512:10 - completed over here after which we are
512:12 - not able to type any of the characters
512:15 - in this particular input field so guys
512:17 - this is the main functionality of the
512:19 - max length attribute that we can use to
512:22 - the input field in order to limit the
512:26 - input that is provided by the user While
512:28 - submitting the form in case you have any
512:30 - requirements in such a way that you want
512:32 - to limit the number of characters being
512:34 - provided by the user to let's say 50
512:37 - characters or 100 characters then you
512:39 - can simply use the max length attribute
512:41 - for that input field so that the user is
512:44 - not able to provide number of characters
512:46 - that is more than the max length
512:48 - attribute over here so now we will see
512:50 - input attribute Min and Max in input
512:53 - field so guys basically the input min
512:55 - and Max attributes specify the minimum
512:58 - and maximum values for an input field so
513:01 - let's say for example if you want the
513:03 - user to provide his or her age and the
513:06 - age should be between the minimum value
513:08 - of 18 years and the maximum value of 60
513:11 - years then you can simply use the Min
513:13 - and Max attributes so that the user
513:15 - provide the age between these two values
513:18 - which can be a part of a client side
513:20 - validation over here so the Min and the
513:22 - max attributes work with the following
513:24 - input types so as you can see number
513:27 - range date date time local month time
513:30 - and week so Guys these are the input
513:33 - field types that will be used on which
513:35 - the Min and the max attributes will be
513:37 - applicable you cannot provide the Min
513:39 - and Max attributes on the input type
513:42 - that is text or search or the telephone
513:44 - number as well so these are the only
513:46 - input fields that you should use while
513:48 - you are implementing the Min and Max
513:50 - attributes now it is very important to
513:52 - note that you should use the Max and the
513:54 - Min attributes together to create a
513:57 - range of legal values so as we have just
514:00 - discussed we will take the input from
514:02 - the user in such a way that the minimum
514:04 - and the maximum values for the age
514:06 - should be between the 18 and the 60
514:08 - years of age so let me just move to the
514:10 - vs code over here so basically after
514:13 - this input tag that we had seen
514:15 - previously in order to see the max
514:17 - length we will provide another input
514:20 - field over here which will be of the
514:21 - type number in this case and for the
514:23 - name attribute we will provide the value
514:25 - Val as age and the ID attribute we will
514:28 - provide the value as age once again and
514:31 - for the label part we will again have
514:33 - the for attribute having the value as
514:35 - age over here and the label that we will
514:38 - provide is provide your age in this case
514:41 - followed by colon and then after this
514:43 - input field we will have couple of line
514:45 - breaks over here so that the submit
514:48 - button is displayed on the next line so
514:50 - let me just save this file now and try
514:52 - reloading this page once again on the
514:53 - browser so as you can see provide your
514:56 - age is getting displayed over here so
514:58 - you can simply provide the age of the
514:59 - user so let's say 25 years or 30 years
515:03 - now guys there is no validation over
515:04 - here right now you can simply provide 10
515:07 - years as well over here as the age and
515:09 - click on submit button over here so as
515:12 - you can see the form is getting
515:13 - submitted with the age value as 10 in
515:16 - this case but based on our requirements
515:18 - we want the age of the user to be
515:20 - between 18 and 60 years of age so what
515:23 - we will do is inside this input field we
515:26 - will have another attribute that is main
515:28 - attribute over here and we will set it
515:30 - as 18 in this case and the max attribute
515:33 - as well for which the value should be 60
515:36 - over here so let me just save this file
515:38 - now so basically we are setting the
515:40 - range in this case for which the minimum
515:42 - value is 18 and the maximum value is 60
515:45 - over here let me just reload this page
515:47 - once again on the browser so now if you
515:49 - provide the age so let's say when we
515:51 - provide the age as 15 in this case and
515:53 - when we press on submit over here as you
515:55 - can see value must be greater than or
515:58 - equal to 18 is getting displayed over
516:00 - here so when we increase the age to
516:03 - let's say 18 years and when we press
516:05 - submit now as you can see the form is
516:07 - getting submitted with the age is equal
516:09 - to 18 and in this way we can provide the
516:12 - minan value and the max value as well
516:14 - let us test the max value also so over
516:17 - here let me just provide the age is 62
516:19 - in this case and when we press on submit
516:21 - Button as you can see value must be less
516:24 - than or equal to 60 over here so let me
516:26 - just set the age to 60 over here in this
516:28 - case and when we press submit button
516:31 - over here the age value is set to 60
516:33 - while passing the value to the server
516:35 - using the get method so guys in this way
516:38 - we can easily use the Min and the max
516:40 - values over here when we provide the age
516:43 - as 40 which is in between the 18 and the
516:45 - 60 years of age which is the minimum and
516:48 - the maximum values that this particular
516:50 - input field is accepting so when we
516:52 - press on submit button the form is again
516:54 - getting submitted so as you can see age
516:57 - is equal to 40 is getting passed to the
516:59 - server so guys in this way if you have
517:01 - the requirements of asking the user to
517:04 - provide a certain number between the
517:06 - range for which the minimum and the
517:08 - maximum values are provided you can use
517:10 - the Min and the max attributes for that
517:13 - particular input field so that the user
517:15 - only provides the values in between
517:18 - these range values over here so now we
517:20 - will see input attribute multiple in
517:23 - input field so guys basically the input
517:26 - multiple attribute specifies that the
517:28 - user is allowed to enter more than one
517:31 - value in an input field and this we are
517:33 - going to check with the help of examples
517:35 - as well now the multiple attribute works
517:38 - with the input types that is email and
517:41 - file over here so basically let us check
517:43 - this with the help of example where the
517:45 - input field type is file over here in
517:48 - which case we can select a multiple
517:50 - files to be uploaded to the server so
517:52 - guys let us move to the vs code over
517:54 - here and I'll simply remove the previous
517:56 - lines of code in this case that we had
517:58 - written previously so now as you can see
518:01 - we have a very simple statement that is
518:03 - below content is in HTML form inside the
518:06 - paragraph tag and then over here we have
518:08 - the form tag along with the method that
518:10 - is get request so that whatever
518:12 - parameters are being submitted by the
518:14 - user we can see those parameter values
518:17 - inside the URL on the browser so guys
518:20 - over here what we have to do is we will
518:22 - have the input field with the type file
518:24 - in this case so basically we are going
518:26 - to have the input along with the type
518:29 - file over here and then in this case we
518:31 - will say name as file and ID as well as
518:35 - file over here and then before this we
518:37 - will have the label and then we will
518:39 - have the for attribute value as the file
518:42 - value in this case now for the label we
518:44 - will say select multiple files so guys
518:48 - basically we are asking the user to
518:50 - select multiple files over here and then
518:52 - user will be able to submit by using the
518:54 - submit Buton button so let us have
518:56 - couple of line braks over here after
518:59 - which we will have the submit button in
519:01 - this case by using the input type submit
519:04 - and then for the value we will have the
519:06 - value as submit in this case so guys
519:08 - currently we have not provided the
519:10 - attribute multiple in this case so let
519:13 - us check how this particular input Field
519:15 - Works on the browser so let me just save
519:17 - this file now and try reloading this
519:19 - page once again on the browser so as you
519:21 - can see below content is in HTML form
519:24 - and then we have the select multiple
519:26 - files label but currently we have not
519:28 - provided the multiple attribute over
519:30 - here so when the user clicks on this
519:33 - choose file basically the Explorer will
519:35 - open over here based on the machine that
519:37 - the user is using and then user can
519:39 - select one of the files over here in
519:41 - this case so guys basically I have come
519:43 - to a particular path over here on my
519:45 - machine you can navigate to your own
519:47 - directory path over here and then when I
519:49 - try to select multiple files over here
519:52 - now guys how do we select multiple files
519:54 - in this case so as as you can see we
519:55 - have selected this favicon image over
519:58 - here which is a JPG image in this case
520:00 - but let's see if I want to select
520:01 - another image that is sample image so I
520:04 - will press the control key on the
520:05 - keyboard and then try selecting the
520:07 - sample image as well but this time when
520:10 - we select this we are only able to
520:12 - select one image that is sample image
520:14 - now which is the second image that is
520:15 - selected so by default the user will be
520:18 - able to select only one file here that's
520:20 - because we have not provided the
520:22 - multiple attribute so when the user
520:24 - selects one of the files in this case
520:26 - and clicks on open basically that
520:28 - particular file will be displayed to the
520:31 - user in order to be sent to the server
520:33 - now guys how do we select the multiple
520:35 - files over here so basically we can go
520:38 - to the VSS code over here and simply we
520:40 - can provide the multiple attribute in
520:42 - this case so as you can see this is the
520:44 - multiple keyword that we need to provide
520:47 - in the input field of the type file or
520:50 - of the type email as well so let me just
520:52 - save this file now and try reloading
520:54 - this page once again on the browser now
520:56 - if you notice we have choose files in
520:58 - this case previously it was just choose
521:00 - file over here which allows only single
521:02 - file to be selected so basically we can
521:04 - select multiple files now so when I
521:07 - click on this button again the Windows
521:09 - Explorer will open and then we can
521:11 - select let's say this particular file
521:13 - and then if I want to select the second
521:14 - file as well I will press the control
521:17 - key on the keyboard and then click the
521:19 - left mouse key over here so as you can
521:21 - see sample image and favicon both the
521:24 - files are getting selected Ed over here
521:26 - and when we click on open in this case
521:28 - so it says two files which means two
521:30 - files are selected by the user and when
521:32 - we click on submit over here as you can
521:34 - see file is equal to favicon jpg and
521:38 - again there is a file parameter and then
521:40 - it says the name of the other file that
521:42 - is sample image.png so guys in this case
521:45 - both the files are getting sent to the
521:47 - server for further processing and in
521:49 - this way we can select multiple files by
521:52 - using the multiple keyword for the input
521:54 - field based on our requirements so now
521:57 - we will see input attribute placeholder
521:59 - in input field so guys basically the
522:02 - input placeholder attribute specifies a
522:05 - short hint that describes the expected
522:08 - value of an input field a sample value
522:11 - or a short description of the expected
522:13 - format will be shown inside that input
522:16 - field so guys basically the short hint
522:19 - is displayed in the input field before
522:21 - the user enters a value so guys we will
522:23 - check this with the help of exam
522:25 - examples as well and the placeholder
522:27 - attribute works with the input types
522:29 - such as text search URL telephone number
522:32 - email and password as well so guys let
522:35 - us check this with the help of examples
522:37 - in VSS code over here so previously we
522:39 - had seen the input tag along with the
522:41 - type file for which we had the multiple
522:44 - keyword which will allow us in order to
522:46 - select the multiple files in this case
522:48 - now guys what we will do is let's say we
522:50 - have the username and password over here
522:53 - and we don't have the labels for that
522:55 - them so in this case we will simply have
522:57 - the input with the type text over here
522:59 - and then for the name part we will say
523:02 - username in this case and for the ID as
523:04 - well we will say username over here now
523:07 - guys we are not going to have any labels
523:08 - in this case and we are going to provide
523:11 - the placeholder as well and similarly we
523:13 - will also have the password over here so
523:15 - we will say input colon and then we will
523:18 - say password in this case so we have the
523:21 - input field with the type password over
523:23 - here and for the name part we will say
523:25 - name as password and ID as well as
523:27 - password over here and after the
523:29 - username field we will have couple of
523:31 - line braks over here so that the
523:33 - username and the password fields are
523:35 - separated by using couple of line Brakes
523:37 - in this case and after the password as
523:39 - well we will have the line brakes now
523:41 - guys let me just save this file now and
523:43 - try reloading this page once again on
523:45 - the browser so as you can see we have a
523:47 - simple input field over here but it
523:49 - doesn't display any label on the left
523:51 - hand side or on the top of the input
523:53 - field so one alternate way in order to
523:56 - provide the hint to the user is to
523:59 - provide a placeholder inside the input
524:01 - field so that the user comes to know
524:04 - what data is expected from his or her
524:06 - site to be provided in these input
524:08 - Fields so we can simply go to this input
524:11 - field that is the username field over
524:13 - here and we can have the placeholder in
524:15 - this case and we can say username so
524:18 - basically this particular text will be
524:20 - displayed inside the input field over
524:23 - here so that the user can provide his or
524:25 - her username over here and then
524:27 - similarly we will have another
524:29 - placeholder inside the password text box
524:32 - so over here we will say placeholder and
524:34 - then we will say password in this case
524:36 - so guys basically we are not providing
524:39 - the labels over here with the help of
524:41 - label text but we are providing the
524:43 - placeholders in this case so let me just
524:45 - save this file now and try reloading
524:47 - this page once again on the browser so
524:50 - as you can see this is the hint to the
524:52 - user that is being provided so that the
524:54 - user
524:55 - understands that this particular input
524:57 - field is expecting a username and the
525:00 - second input field is expecting some
525:02 - password over here so simply we will
525:04 - provide some username in this case so we
525:06 - say programming over here and then for
525:08 - the password part simply we will say
525:10 - password in this case and since it is of
525:12 - the type password the data is being
525:14 - masked over here so guys let me just
525:16 - click on submit in this case so as you
525:19 - can see username is equal to programming
525:21 - and password is being displayed as
525:23 - password in this case inside the URL
525:25 - guys this is not one of the best
525:27 - practices in order to pass the password
525:29 - to the server by using the get request
525:32 - because it is being displayed inside the
525:34 - URL on the browser so we need to use the
525:37 - post request method but in order to
525:39 - Simply understand the example of the
525:41 - placeholder we have considered this
525:43 - particular example of input Fields So
525:45 - based on your requirements you can
525:47 - provide the string or the phrase as well
525:49 - inside the input Fields by using the
525:52 - placeholder attribute so now we will see
525:54 - input attribute required in input field
525:57 - so guys basically the input required
525:59 - attribute specifies that an input field
526:02 - must be filled out before submitting the
526:04 - form so basically this required
526:07 - attribute actually needs the users to
526:09 - provide the data inside this particular
526:12 - input field which is having the
526:13 - attribute that is required now guys the
526:16 - required attribute works with the input
526:18 - type such as text search URL telephone
526:22 - number email password date picker
526:25 - number checkbox radio and file so guys
526:28 - as we can see there are maximum input
526:30 - field types over here which are covered
526:33 - as far as required attribute is
526:35 - concerned so guys let us check this with
526:37 - the help of example in vs code over here
526:40 - so previously we had seen the input tag
526:42 - along with the type file over here then
526:44 - we had also seen the text and the
526:46 - password types we had used the
526:48 - placeholder attribute and the multiple
526:50 - attribute as well now guys what we will
526:52 - do is we will have another input field
526:55 - and we will ask the user to provide age
526:58 - in this case so we will have the input
527:00 - field with the type number in this case
527:02 - so as you can see the input tag along
527:04 - with the type number over here and then
527:07 - the age attribute will have the value as
527:09 - age in this case and ID as well we will
527:12 - keep it as age over here now guys we
527:14 - will also provide the label so that the
527:16 - user understands that he or she is
527:18 - supposed to provide the age so basically
527:20 - for the four attribute we will have the
527:23 - value that is age and the the label we
527:25 - will provide it as provide your age
527:28 - followed by colon so guys after this we
527:31 - will have couple of line breaks so that
527:33 - the submit button is displayed on the
527:35 - next line now guys first of all we will
527:37 - see what happens when we don't provide
527:39 - the required attribute over here so
527:41 - simply let me just save this file now
527:43 - and try reloading this page once again
527:45 - on the browser so as you can see we have
527:47 - the provide your age label and then the
527:50 - input field is being provided but guys
527:52 - we have not provided the required attrib
527:55 - to any of these fields for now so simply
527:58 - if the user comes over here and clicks
528:00 - on submit basically the form will be
528:02 - submitted in this case with all the
528:04 - blank values for all the parameters so
528:07 - as you can see file is equal to blank
528:09 - then username and password is also blank
528:11 - and the age is also blank now guys this
528:13 - is not one of the best practices in
528:15 - order to send the password as a get
528:18 - request over here that's because anyone
528:20 - can see the password inside the URL so
528:22 - I'll simply remove this line of code
528:25 - over here that is having input field
528:27 - password in this case let me just save
528:29 - this file now and try reloading this
528:30 - page once again on the browser so now if
528:32 - we submit it once again as you can see
528:35 - all the values are blank for now so guys
528:37 - what we have to do is compulsorily we
528:39 - want the user to at least provide the
528:42 - age if they are not providing any other
528:44 - inputs over here so what we can do is
528:46 - simply for this input field with the
528:49 - type number in which case we are dealing
528:51 - with the age input field we will come to
528:53 - the end and we will we will say required
528:56 - in this case so guys basically this
528:57 - required attribute is used in order to
529:01 - make the user provide some data to this
529:03 - particular input field so let me just
529:06 - save this file now and try reloading
529:07 - this page once again on the browser so
529:10 - as you can see we have this provide your
529:11 - age input field in this case and then
529:14 - when we click on submit over here as you
529:16 - can see please fill out this field so
529:18 - basically this validation is being
529:20 - thrown by this particular browser and
529:22 - depending on the browser different
529:24 - message can can be displayed based on
529:26 - which browser is being used by the user
529:28 - so guys irrespective of which browser is
529:30 - being used by the user but basically a
529:32 - validation message will be thrown if the
529:34 - input field is kept blank and the user
529:37 - tries to submit the form so we need to
529:39 - provide some age over here so let's say
529:42 - if we provide 25 that is some number in
529:44 - the form of age in the input field and
529:47 - then when the user clicks on submit now
529:49 - the form accepts that particular input
529:52 - and will be sending all the values of
529:54 - the parameter to the server but since
529:56 - user has provided only the age parameter
529:58 - over here the age parameter is having
530:00 - the value and the other two attributes
530:02 - are having the blank values over here
530:05 - but guys this is the main functionality
530:07 - of the required attribute so whatever
530:09 - input Fields you want the user to
530:12 - provide some data with you can use this
530:14 - required attribute to all those input
530:16 - fields we can also provide the required
530:18 - attribute to this username field as well
530:21 - so let's say when we provide the
530:22 - required attribute over here let me just
530:25 - save this file now and try reloading
530:26 - this page once again on the browser so
530:29 - now if we try to submit the form it is
530:31 - asking to please fill out this field
530:33 - that is username over here so let me
530:35 - just provide some username in this case
530:37 - so we have provided programming as the
530:39 - username so now let me just click on
530:41 - submit over here but we also have the
530:44 - required field that is age in this case
530:46 - so it is saying please fill out this
530:48 - field as well so we provide 25 as the
530:51 - age and when we click on submit over
530:53 - here so now the HTML form is accepting
530:56 - the inputs that is provided by the user
530:58 - that is username as well as age in this
531:00 - case because those are the input fields
531:02 - which are marked as required so guys
531:04 - this is the way that required attributes
531:06 - work over here in HTML input Fields so
531:09 - now we will see input attribute step in
531:12 - input field so guys basically the input
531:14 - step attribute specifies the legal
531:17 - number intervals for an input field so
531:20 - for example if the step is equal to
531:23 - three that is being set for a particular
531:25 - input field the legal numbers could be -
531:28 - 3 0 3 6 and so on so basically when we
531:32 - increment or decrement the current
531:34 - number inside the input field it will be
531:37 - increased or decreased by this step
531:39 - value that is three over here in this
531:41 - case now an important tip over here is
531:44 - the attribute can be used together with
531:46 - the Max and the Min attributes to create
531:49 - a range of legal values and we will
531:51 - check this with the help of examples as
531:53 - well and the Step at attribute works
531:55 - with the input types such as number
531:57 - range date date time local month time
532:01 - and week so guys let us check this with
532:03 - the help of example in code over here
532:06 - now guys we will have another input
532:08 - field which will be of the type number
532:10 - in this case so input followed by colon
532:13 - and then we have number over here and
532:15 - what we will say is the name will be
532:17 - quantity in this case so basically we
532:19 - are asking the user in order to select
532:22 - the quantity of a product so guys
532:24 - basically it will be feasible for a
532:26 - e-commerce website to have the text box
532:29 - in order to provide the quantity so that
532:31 - the user can order a particular order
532:34 - and based on the quantity it can be
532:36 - delivered to the user so we will keep
532:38 - the name value as quantity and the ID
532:41 - value as quantity as well and then for
532:44 - the label we will say label in this case
532:46 - and for the for attribute we will say
532:48 - Quantity as the value and then we will
532:51 - say select quantity so guys this is just
532:53 - an example that we are implementing over
532:55 - here so that the user can select the
532:57 - quantity and the requirement is in such
533:00 - a way that the user can only select the
533:02 - quantity in the multiples of even
533:04 - numbers that means either the quantity
533:06 - can be 2 or 4 or 6 and so on so the user
533:10 - should not be able to select the
533:12 - quantity which is an odd number so guys
533:14 - over here what we have to do is we need
533:16 - to provide the step value as two in this
533:19 - case because every time the value should
533:21 - be increased by two and minimum value
533:24 - that we we can provide is two over here
533:26 - so basically if the user is selecting
533:28 - the quantity so the minimum value will
533:31 - be two because zero cannot be set over
533:33 - here so the minimum value we have set is
533:35 - two in this case and every time the user
533:37 - increases the quantity it should be in
533:40 - the step of two we can also select the
533:42 - value attribute over here so we can
533:44 - simply say value and then it is equal to
533:46 - two so that initially the value of the
533:49 - quantity input field will be set as two
533:51 - in this case now guys after this input
533:53 - field we we will have couple of line
533:55 - braks over here so that the submit
533:57 - button is displayed on the next line
533:58 - inside the form so let me just save this
534:01 - file now and try reloading this page
534:02 - once again on the browser so as you can
534:05 - see select quantity label is being
534:06 - displayed over here and we are seeing
534:08 - the value of two that's because we have
534:11 - kept the value attribute S2 over here
534:13 - and the minimum value will also be two
534:15 - so the user cannot go with a value that
534:18 - is less than two in this case and every
534:20 - time when the user wants to increment
534:22 - this value by using the up Arrow over
534:24 - here the value will be incremented with
534:27 - a step of two so as you can see four is
534:29 - being selected now and then again when
534:31 - the user increments the value is six
534:34 - right now and when the user decreases
534:36 - the number so let's say we click on this
534:38 - down arrow so again it is decreased by
534:41 - two in this case so the value is four
534:43 - right now and then again when we
534:45 - decrease it so the value is two right
534:47 - now and then we cannot decrease it
534:49 - anymore further that's because the
534:51 - minimum value is set as two in this case
534:54 - and that is how we can apply the range
534:56 - this particular quantity input field by
534:59 - providing the main attribute and we can
535:01 - optionally provide the max attribute as
535:03 - well so guys this is the main
535:05 - functionality of the step attribute in
535:07 - order to increase the number with the
535:09 - step value that is being provided inside
535:12 - that input field so now we will see
535:14 - input attribute autofocus in input field
535:17 - so guys basically the input autofocus
535:19 - attribute specifies that an input field
535:22 - should automatically get get focus when
535:25 - the page loads so by default there will
535:27 - be no focus on any of the input Fields
535:30 - when the user loads a particular web
535:32 - page but in case if you want the focus
535:35 - to be set on a particular input field
535:37 - when the user loads the page then you
535:38 - can use the autofocus attribute for that
535:41 - particular input field so guys let us
535:43 - check this with the help of example in
535:45 - vs code over here so I'll remove the
535:47 - previous lines of code that we had
535:48 - written and then guys simply we are
535:50 - having a statement over here that is
535:52 - below content is in HTML form inside the
535:54 - paragraph tag and inside the form what
535:57 - we will do is we will simply have two
535:58 - text boxes that is first name and last
536:01 - name over here so we will say input of
536:03 - the type text in this case and then over
536:06 - here for the name attribute we will say
536:08 - F name and the ID as well we will keep
536:11 - it as F name over here and before this
536:13 - input field we will also have the label
536:15 - tag over here and for the for attribute
536:18 - we will keep the value as F name and
536:20 - then we will say first name in this case
536:23 - followed by colon done and then guys
536:25 - similarly we will have the last name as
536:27 - well so we will have couple of line
536:29 - breaks first of all after the first name
536:31 - input field and then we will paste this
536:33 - for last name over here so simply we
536:36 - will change the label as last name in
536:38 - this case and we will keep the name
536:40 - value as L name and copy the same value
536:43 - to ID and the for attribute as well so
536:46 - guys we have two text boxes that is
536:48 - first name and last name over here and
536:51 - then after this again we will have
536:52 - couple of line breaks in this case And
536:54 - Then followed by a submit button over
536:57 - here so we have input of the type submit
537:00 - and the value will be submit in this
537:02 - case so that the user is able to submit
537:04 - this form along with the first name and
537:06 - last name data in this case now guys let
537:08 - me just save this file now and try
537:10 - reloading this page on the browser so as
537:13 - you can see we have the below content is
537:15 - in HTML form and then we have first name
537:18 - and last name over here now guys if you
537:20 - notice there is no focus on any of these
537:23 - two input Fields right now and that is
537:25 - the default behavior of all the input
537:28 - Fields there will be no focus on any of
537:30 - the input Fields by default so what you
537:32 - have to do is let's say if you want the
537:35 - first name to be autofocused when the
537:37 - user loads this particular web page so
537:40 - what we can do is simply for this input
537:42 - field related to first name at the end
537:45 - we can simply say autofocus over here so
537:47 - guys this is one of the attributes that
537:49 - will help us in order to provide the
537:51 - focus to this particular input field
537:54 - when the user loads the web page so let
537:56 - me just save this file now and try
537:58 - reloading this page once again on the
538:00 - browser so now as you can see if you
538:02 - notice automatically the first name
538:05 - input field is getting the focus over
538:07 - here after the user reloads this page so
538:10 - if you want the last name to be focused
538:12 - so simply you can remove this autofocus
538:15 - from the first name input field and
538:17 - provide the autofocus attribute to the
538:20 - last name input field so let me just
538:22 - save this file now and try reloading
538:25 - this page once again on the browser so
538:27 - as you can see last name is now having
538:29 - the focus automatically when the user
538:32 - comes to this particular web page and
538:34 - guys this is the way that you can
538:36 - provide the autofocus on any of the
538:38 - input Fields based on your requirements
538:40 - while you are expecting the user to
538:42 - submit the HTML form it is a best
538:44 - practice to provide the autofocus at the
538:46 - start of the form that is the first
538:49 - input field over here so that the user
538:51 - starts providing the data that is
538:54 - required from his or her side and this
538:56 - is one of the best practices that you
538:58 - can follow so so now we will see input
539:00 - attribute height and width in input
539:02 - field so guys basically the input height
539:05 - and width attributes specify the height
539:08 - and width of an element and this we are
539:10 - going to check with the help of examples
539:12 - as well we will define an image as the
539:14 - submit button inside the form with a
539:17 - particular height and width attributes
539:19 - that will set the images height and
539:21 - width so guys let us move to the vs code
539:23 - over here so so I'll remove the previous
539:25 - lines of code that we had written and
539:27 - then we will only keep a paragraph that
539:28 - is having a simple statement that is
539:31 - below content is in HTML form so
539:33 - currently we don't have any form over
539:35 - here so we will Define the form so for
539:37 - the action attribute we are not going to
539:39 - provide any server side file in order to
539:42 - process the data further since we are
539:44 - only looking for the examples on the
539:46 - client side and then for the method part
539:48 - we will set it as get method in this
539:50 - case and then inside the form let us say
539:53 - we have a normal text box over here so
539:55 - basically we will have the input of the
539:58 - type text so input colon text and then
540:01 - as you can see this is the input with
540:03 - the type text over here and for the name
540:05 - we will provide F name in this case so
540:08 - that the user can provide the first name
540:10 - over here and then for the ID part as
540:12 - well we will provide the value as F name
540:15 - in this case and before this input we
540:17 - will also have the label and for the for
540:19 - attribute we will keep the value as F
540:22 - name so that whenever user clicks on
540:24 - this particular label the focus is given
540:26 - to this particular input field so for
540:29 - the label we will say first name over
540:31 - here so we have the label as first name
540:34 - followed by input field and then guys
540:36 - let us have couple of line breaks in
540:38 - this case after which we are going to
540:40 - have the submit button with the help of
540:42 - the image so over here we will say input
540:45 - followed by colon and then we have
540:47 - something called as image over here so
540:49 - guys instead of having the submit button
540:51 - we can have the image as well that can
540:53 - help help us in order to submit this
540:55 - form so we are going to use the Type
540:58 - image in this case so we need to provide
541:00 - the values for these attributes over
541:02 - here one is the SRC which is the source
541:04 - attribute for which we need to provide
541:06 - the directory path of the image that we
541:09 - want to display so guys over here we
541:11 - have a sample image that we can use in
541:13 - order to display it inside the form as
541:16 - the submit button so I'm going to
541:18 - provide the name of that file that is
541:19 - sample image now guys since this HTML
541:22 - that is test HTML is already present in
541:25 - this particular directory as you can see
541:28 - this is the file that we are editing
541:30 - right now and that is the reason why we
541:32 - can simply provide the name of the PNG
541:34 - file that is the image file over here in
541:37 - case your image is present in some other
541:39 - directory then you need to provide the
541:41 - entire directory path in order to access
541:44 - that image and to be displayed on the
541:46 - web page so guys over here we have
541:48 - provided the name of the file and apart
541:51 - from this we will also give it the alt
541:53 - attribute as submit over here so that in
541:56 - case the image is not being displayed
541:58 - for some reason then we can at least
542:01 - have the submit text being displayed
542:03 - inside of the image that was supposed to
542:05 - be displayed on the web page now guys by
542:08 - default the size of the image that will
542:10 - be displayed will be based on the image
542:12 - that you are providing but let's say if
542:14 - we want to provide the width and the
542:16 - height of the image so over here we can
542:18 - simply provide width attribute and let's
542:20 - say we provide the width as 150 pixels
542:22 - over here so we Prov provide 150 PX and
542:25 - in the same way we have to provide the
542:28 - height attribute as well so in this case
542:30 - let us say we provide the height
542:32 - attribute as 100 pixels over here so
542:34 - guys this is the way that we can provide
542:36 - the width and the height of a particular
542:38 - HTML element specifically we use it for
542:41 - the images whether it is the IMG tag or
542:44 - the input tag along with the Type image
542:46 - over here so guys let me just save this
542:48 - file now and try reloading this page on
542:50 - the browser so as you can see below
542:52 - content is in H HML form and then we
542:55 - have the input field that is the first
542:57 - name over here after which we have this
542:59 - image that is being displayed over here
543:01 - so this image over here is acting like a
543:03 - submit button in this case guys it
543:05 - depends on your requirement based on
543:07 - what height and width you want to
543:08 - display the image that will act as a
543:10 - submit button so over here let's say we
543:12 - provide the first name as John in this
543:14 - case and when we click on this image
543:16 - that is acting as a submit button so as
543:19 - you can see inside the URL F name
543:21 - parameter is being passed over here and
543:23 - the value is drawn in this case and also
543:26 - guys it is very important to note that
543:28 - we also get the X and Y attributes over
543:30 - here which is the coordinates on which
543:32 - the user has clicked on this particular
543:35 - submit image over here so guys this is
543:37 - the very simple way in order to adjust
543:39 - the height and width of the image you
543:41 - can set the height and width based on
543:43 - your requirements so let's say we
543:45 - provide the width as 100 pixels over
543:47 - here and for the height part let us say
543:49 - we provide the height value as 60 pixels
543:52 - let me just save this F file now and try
543:54 - reloading this page once again on the
543:56 - browser so as you can see the image
543:58 - width and height is adjusted now based
544:00 - on the height and width that we have
544:02 - provided inside our code so now we will
544:05 - see input attribute list in input field
544:08 - so guys basically the input list
544:10 - attribute refers to the data list
544:12 - element that contains the predefined
544:15 - options for an input element so
544:18 - basically in case you want to have the
544:20 - list of elements to be displayed with
544:22 - the help of the input element then you
544:25 - can have the input along with the list
544:28 - attribute over here and you can provide
544:30 - the ID of the data list element that you
544:33 - can Define later on so guys basically
544:35 - this input tag will now have the list of
544:38 - drop-down items from which the user can
544:41 - select one of the items so guys let us
544:43 - check this with the help of examples in
544:45 - vs code over here so previously we had
544:47 - defined the input tag with the type text
544:50 - over here which was having the F name
544:52 - that is the first name that the user
544:54 - wants to Define and also we had the
544:56 - submit button in the form of the image
544:59 - so guys what we will do is after this
545:01 - first input tag we will have another
545:03 - input tag over here so this time we are
545:06 - not going to Define any type over here
545:08 - but instead of this we are going to have
545:10 - the list attribute so guys basically the
545:13 - input tag along with the list attribute
545:16 - will help us in order to have the drop-
545:18 - down list in this case so over here
545:21 - let's say we provide the value as list
545:23 - one so guys basically this should be the
545:26 - ID of the data list tag that we are
545:29 - going to Define now so basically after
545:31 - this input tag we can Define the data
545:33 - list tag as well so in this case we
545:36 - Define data list tag and then inside
545:39 - this data list tag we can have the ID in
545:41 - this case so the ID must be equal to the
545:45 - value of this list attribute that we had
545:47 - defined so I'll just simply copy this
545:50 - and paste this over here as the ID
545:52 - attribute of the data list tag and then
545:55 - guys we can have the list of items that
545:57 - we want to display So currently if we
545:59 - check the web page there will be no
546:01 - items that will be displayed so let me
546:03 - just check this I'll save this file now
546:05 - and try reloading this page on the
546:07 - browser so as you can see we have this
546:09 - input field being displayed over here
546:11 - there are no values that is being
546:13 - displayed right now inside this input
546:15 - field guys what we will do is we will
546:17 - replace this particular image with the
546:19 - submit Button as well so over here after
546:21 - the data list we will have coup of line
546:24 - breaks in this case and then instead of
546:26 - having the input tag along with the Type
546:29 - image over here we will simply have the
546:31 - input tag along with the type submit in
546:34 - this case so that a simple text value
546:36 - can be displayed with the help of the
546:38 - submit button so over here we have the
546:40 - value as submit so let me just save this
546:42 - file now and try reloading this page
546:44 - once again on the browser so now as you
546:46 - can see we have the submit button but
546:48 - the important thing is we need to have
546:50 - certain drop- down values over here so
546:53 - that the user can select one of the
546:54 - values from this list so guys over here
546:57 - what we have to do is inside this data
547:00 - list tag we need to Define our options
547:03 - with the help of the option tag so over
547:05 - here simply we will have the option tag
547:07 - in this case we can remove the ending
547:09 - tag over here so I'll simply remove this
547:12 - and then we can have different options
547:13 - inside the value attribute of the option
547:16 - tag so let's say we have the label for
547:18 - this input tag as the mode of Transport
547:21 - so over here for the input part we will
547:24 - also have the ID as well and then we
547:26 - will say transport in this case and the
547:28 - same ID we can provide it as the value
547:31 - for the four attribute over here and
547:33 - then we can say select your mode of
547:36 - Transport so guys basically we are
547:38 - asking the user to select the mode of
547:40 - transport and then we will have the list
547:42 - of options from which the user can
547:44 - select the mode of Transport so let's
547:46 - say we provide the first option as bike
547:48 - in this case and some more couple of
547:50 - options over here so we will say car and
547:53 - the third third option is bus in this
547:55 - case so guys we have three options over
547:57 - here that is bike car and bus so guys
547:59 - let me just save this file now and try
548:01 - reloading this page once again on the
548:03 - browser so now as you can see select
548:05 - your mode of Transport label is being
548:07 - displayed and if you see over here
548:09 - there's a drop down that is getting
548:10 - displayed right now inside this input
548:13 - field and when we click on this drop
548:15 - down option as you can see bike car and
548:18 - bus options are getting displayed over
548:20 - here so we can simply select one of the
548:22 - options so let's say we we Select Car in
548:24 - this case so basically this particular
548:26 - option is getting selected and then
548:27 - simply we can click on submit button
548:29 - over here so that the parameter gets
548:31 - submitted to the server but guys in this
548:33 - case we are only able to see F name over
548:36 - here that's because for the input field
548:38 - we have not provided the name attribute
548:41 - and it is very important that whenever
548:43 - you are passing any of the values from
548:46 - the HTML form then you should have the
548:48 - name attribute as well so in this case
548:50 - we will provide the name attribute as
548:52 - the value that is same as ID in this
548:54 - case so let me just provide the
548:56 - transport value over here guys what if
548:58 - we provide the ending tag for the option
549:00 - in this case so let me just provide that
549:02 - as well to all the three options and
549:04 - then we will also provide the value in
549:06 - between the option tags over here so we
549:08 - will say buy and then we have car and
549:11 - then we have bus over here as all the
549:13 - three options being displayed as text
549:15 - over here so let me just save this file
549:17 - now and try reloading this page once
549:19 - again on the browser so now if we go and
549:21 - select the mode of Transport over here
549:23 - in this case so let's say we select car
549:25 - as the option and first name as John and
549:28 - then let me just click on submit button
549:30 - so as you can see F name is getting
549:32 - displayed over here as John which is
549:34 - getting passed as the part of URL that's
549:37 - because we have provided the method as
549:39 - get request over here for the form tag
549:41 - and then the second parameter that is
549:43 - transport is being displayed with the
549:45 - value of car that the user selected
549:48 - While submitting the form so guys in
549:49 - this way you can easily have the drop-
549:51 - down options with the help of of the
549:53 - input tag and along with it you can
549:55 - provide the list attribute which will
549:58 - have the value of the ID of the data
550:00 - list element that you are going to
550:02 - Define just like how we have defined
550:04 - over here that is the data list element
550:07 - and inside the data list element you can
550:09 - have different options over here along
550:11 - with their values in this case from
550:13 - which the user can select one of the
550:15 - values so now we will see input
550:17 - attribute autocomplete in input field so
550:20 - guys basically the input autocomplete
550:22 - attribute specifies whether a form or
550:25 - the input field should have autocomplete
550:28 - on or off so when we say autocomplete on
550:31 - when the user starts typing he or she
550:33 - will be provided the list of values that
550:36 - was already typed by him or her
550:38 - previously and when the autoc complete
550:40 - is off there will be no suggestions that
550:43 - will be provided by the HTML form or the
550:45 - input field so basically the
550:47 - autocomplete allows the browser to
550:49 - predict the value and when the user
550:51 - starts to type in a field the browser
550:53 - should display the options to F in the
550:56 - field based on the earlier typed values
550:59 - so guys basically whatever suggestions
551:01 - is being provided by the browser it is
551:03 - the OWN users value that was provided to
551:06 - the browser in the previous sessions and
551:08 - there will be no new values that will be
551:10 - provided by the browser so the
551:12 - autocomplete attribute works with the
551:14 - form and the following input types such
551:16 - as text search URL telephone number
551:20 - email password date Pickers range and
551:23 - and color so guys let us check this with
551:25 - the help of examples in vs code over
551:27 - here so previously we had the first name
551:29 - as the input field now what we will do
551:32 - is again we will have the last name as
551:34 - well so we will simply copy these lines
551:36 - of code and paste it after the first
551:38 - name input field and then over here we
551:41 - will say l name in this case which will
551:43 - stand for last name over here so we say
551:46 - last name and then we will again copy
551:49 - the L name value to the name attribute
551:51 - and the ID attribute as as well so guys
551:53 - basically we will ask the user to
551:55 - provide the first name and the last name
551:58 - as well and we had also provided the
551:59 - drop- down list item with the help of
552:02 - the input tag and the data list tag over
552:04 - here so we will keep those options as it
552:07 - is so let me just save this file now and
552:09 - try reloading this page on the browser
552:11 - so as you can see we have the first name
552:13 - and last name over here apart from this
552:15 - we also have the drop- down list in this
552:17 - case now guys by default the auto
552:19 - complete will be on for this input type
552:22 - that is text over over here so if we
552:24 - simply go to the first name input field
552:26 - over here and click on this text box as
552:29 - you can see John and programming these
552:31 - were some of the values that I had
552:33 - provided previously to the text boxes
552:35 - and for the last name as well as you can
552:37 - see we have beginners and do that was
552:40 - provided to the last name input field
552:42 - that we had seen in the previous
552:44 - examples so Guys these are the
552:46 - autocomplete suggestions that we can see
552:48 - now guys what if you don't want to see
552:50 - the autocomplete suggestions over here
552:52 - so simply we we can come to this last
552:54 - name in this case the input field and
552:56 - then after this we can have the auto
552:58 - complete attribute so as you can see
553:01 - this is the attribute that we are going
553:02 - to use and then this should be off in
553:05 - this case so when we say autocomplete is
553:07 - off then the browser will not provide
553:09 - any suggestions to the user for this
553:11 - particular input field so guys let me
553:14 - just save this file now and try
553:15 - reloading this page once again on the
553:17 - browser now if we go and click on this
553:19 - last name over here as you can see there
553:21 - is no suggestions that is being provided
553:23 - in this case and if we click on the
553:25 - first name input field we can still see
553:28 - the suggestions that's because by
553:29 - default the autoc complete is on over
553:32 - here so again we can provide the
553:33 - autocomplete attribute and we can
553:36 - provide the value as off in order to
553:38 - turn off the suggestions so let me just
553:40 - save this file now and try reloading
553:42 - this page once again on the browser so
553:44 - now if we go and click on this input
553:46 - field there are no suggestions that is
553:48 - being displayed by the browser so guys
553:50 - this is the way that we can provide the
553:52 - auto complete or the auto suggestion
553:54 - feature to the user and based on the
553:56 - browser history of the user the
553:58 - suggestions will be provided by the
554:00 - browser to the user so now over here we
554:02 - have kept the autoc complete on for the
554:05 - first input field that is f name over
554:07 - here and let me just reload this page
554:10 - once again on the browser so now if we
554:12 - come and click on this input field so
554:14 - now we are able to see the values as the
554:17 - suggestions by the browser so now we
554:19 - will see input attribute form in input
554:22 - field so guys basically the input form
554:24 - attribute specifies the form the input
554:27 - element belongs to so we will check this
554:29 - with the help of examples as well in vs
554:31 - code so we have something called as form
554:34 - attribute that you can specify inside
554:36 - the input field when you have that input
554:39 - field outside the form tag so guys the
554:42 - value of this attribute must be equal to
554:44 - the ID attribute of the form element it
554:47 - belongs to so guys let us check this
554:49 - with the help of examples to make it
554:51 - more clear so over here inside the vs
554:53 - code what we have is the first name
554:56 - label along with the input field that is
554:58 - first name and the last name as well
555:00 - apart from this we also have the drop-
555:02 - down list with the help of the input tag
555:04 - and the list attribute that we had seen
555:06 - previously with the help of the data
555:08 - list tag so guys over here for the
555:10 - Simplicity purpose we will remove these
555:12 - lines of code that is displaying the
555:14 - drop- down list of items in this case
555:17 - and then we will also remove the line
555:19 - brakes over here let me just save this
555:21 - file now and try reloading this page
555:23 - once again on the browser so as you can
555:25 - see we have first name and last name
555:27 - over here and when the user clicks on
555:29 - submit button the first name and last
555:31 - name attributes will be submitted to the
555:33 - server now guys what if we also want to
555:35 - include the email of the user who is
555:38 - trying to submit the form so let's say
555:40 - if we have the email input field outside
555:43 - this form tag over here so after this
555:45 - form tag we will have the input field in
555:48 - this case with the type email so as you
555:51 - can see we have the input tag along with
555:53 - the type email over here and the same
555:55 - value that is email we will provide it
555:57 - as the value of the name attribute and
555:59 - the ID attribute as well and before this
556:02 - we are also going to have the label and
556:04 - for the for attribute we will say email
556:06 - over here and we will provide the label
556:09 - as email so as you can see we have the
556:11 - label as email followed by colon and
556:14 - then we have the input field in this
556:16 - case let me just provide couple of line
556:18 - breaks over here after this input tag
556:20 - and also after the submit button so that
556:23 - the next input field can be displayed on
556:25 - the next line so let me just save this
556:27 - file now and try reloading this page
556:29 - once again on the browser so as you can
556:31 - see after the submit button we have the
556:33 - email input field as well but guys if
556:36 - you remember when we click on the submit
556:38 - button only the elements of the form
556:41 - that is the first name and the last name
556:43 - will be provided to the server so let us
556:45 - check that so if we provide John in this
556:48 - case and let's say we provide the last
556:50 - name as to and when we click on submit
556:52 - so so as you can see F name is equal to
556:55 - John and L name is equal to do these two
556:58 - parameters are getting submitted but
557:00 - apart from this let us say we want to
557:02 - also submit the email attribute over
557:04 - here so when the user provides his or
557:06 - her email over here inside this input
557:08 - field and clicks on submit button we
557:10 - want that particular email data as well
557:13 - to go to the server for further
557:15 - processing so in this case what we can
557:17 - do is when we have the input field
557:19 - outside the form tag and we want that in
557:22 - input Fields data to go to the server
557:25 - with the help of the other form
557:27 - attributes we can have the ID for this
557:29 - form so basically we are going to define
557:31 - the ID in this case and we can simply
557:34 - say form one over here and then guys the
557:36 - same value of the ID that is form one we
557:39 - need to copy and paste it as the value
557:42 - to the form attribute for the input tag
557:45 - so the data from this particular input
557:47 - tag that is email is what we want to be
557:50 - passed to the server so we can simp
557:52 - simply come over here to the input tag
557:55 - and provide a form attribute in this
557:57 - case and this value should be same as
558:00 - the ID of the form itself with which the
558:03 - input data should go to the server so
558:05 - over here let me just paste this value
558:08 - that is form one in this case so let me
558:10 - just save this file now and try
558:12 - reloading this page once again on the
558:13 - browser guys previously we had seen that
558:16 - only first name and last name were
558:18 - getting submitted to the server with the
558:20 - help of the URL now let us say we Pro
558:22 - provide John in this case and do in this
558:25 - case and let me just click on submit
558:27 - over here without providing any data to
558:29 - this email input field so when we click
558:31 - on submit as you can see we have the F
558:33 - name and L name but apart from that we
558:35 - also have the email attribute which was
558:38 - not being passed previously since we had
558:41 - not linked this particular email input
558:43 - field with the form which is containing
558:46 - only these two elements over here but
558:48 - now since we have linked the email input
558:50 - field with the form that is form one one
558:53 - the parameter that is email is also
558:55 - getting passed over here so when we
558:57 - provide John in this case and let's say
558:59 - we provide some email ID in this case so
559:01 - we provide test at gmail.com and when we
559:04 - click on submit button over here as you
559:06 - can see John do and the email that is
559:08 - test gmail.com is getting submitted to
559:11 - the server for further processing and we
559:14 - can see this as part of URL that's
559:16 - because the method value is get request
559:19 - over here for the form tag in this case
559:21 - so guys this is the way that we can link
559:23 - any particular input field which is
559:25 - present outside the form tag with the
559:27 - form so that the data inside that input
559:30 - field can be passed with the help of the
559:32 - other data which is being passed with
559:34 - the help of the submission of the form
559:36 - so now we will see input attribute form
559:38 - action in input field so guys basically
559:41 - the input form action attribute
559:44 - specifies the URL of the file that will
559:47 - process the input when the form is
559:49 - submitted so basically the file must be
559:52 - present on on the server site for which
559:54 - we need to provide the URL to the form
559:57 - action attribute so guys if you remember
559:59 - inside the form tag we have the action
560:02 - attribute which specifies the file on
560:05 - the server site it can be any PHP file
560:07 - or any other file which is responsible
560:10 - to handle the request that is coming
560:12 - from the client side now guys if you
560:14 - have some other file that will handle
560:16 - the request that is coming from the
560:18 - client side like for example if you want
560:20 - the request to be handled in a different
560:22 - way when it is coming from the admin so
560:25 - we can have the form action attribute
560:27 - that is attached to the submit button
560:30 - which is separately displayed for the
560:31 - admin over here so it is important to
560:34 - note that this attribute overwrites the
560:36 - action attribute of the form element so
560:39 - even if we have the action attribute
560:41 - inside the form element but the form
560:43 - action attribute that we are going to
560:45 - specify inside the input field is going
560:48 - to override the action attribute that is
560:51 - present inside the form element so guys
560:53 - the form action attribute works with the
560:55 - following input types that is submit
560:57 - button and the image type as well which
561:00 - X has a submit Button as we had seen
561:02 - previously so guys let us check this
561:04 - with the help of examples in vs code
561:06 - over here so previously we had written
561:08 - certain text boxes that is first name
561:11 - and then last name and then we also had
561:13 - submit button over here and outside the
561:15 - form tag we also had the input type
561:18 - email in this case which we tried to
561:20 - link to that particular form by
561:22 - providing the input tag outside the form
561:24 - so guys what we are going to do is I'm
561:26 - going to remove these lines of code over
561:28 - here since we don't need input tag in
561:30 - this example and we are also going to
561:32 - remove the ID attribute from the form
561:34 - tag now guys over here the form tag is
561:37 - having the default action attribute and
561:40 - let's say we have something called as
561:42 - action 1. PHP so guys this is the file
561:46 - that is responsible in order to handle
561:48 - the request that is going from the
561:50 - client side which is having the dat data
561:53 - that is the first name and the last name
561:55 - over here now guys let us say we want
561:57 - some other file to handle the same data
561:59 - over here with the help of another
562:01 - submit button so what we will do is we
562:03 - will have another submit button in this
562:06 - case so we say input colon submit and
562:09 - then as you can see this input tag is of
562:11 - the type submit and then what we can do
562:13 - is the value we can set it as submit as
562:16 - admin over here so guys basically this
562:19 - normal submit button is for the normal
562:21 - user and when the admin logs into the
562:23 - application then admin must click on
562:26 - this particular submit button which is
562:27 - having the value as submit as admin over
562:30 - here so when the normal user clicks on
562:32 - this submit button the server side file
562:34 - that is action 1. PHP will be called
562:37 - along with the required data that will
562:39 - be passed to the server now guys when
562:41 - the admin clicks on this particular
562:43 - submit button we need some other file to
562:46 - handle this particular data that is
562:48 - going to the server so what we can do is
562:51 - we can provide the form action attribute
562:53 - over here so we say form action
562:56 - attribute inside this input tag that is
562:59 - of the type submit in this case so we
563:01 - say form action and then we need to
563:03 - provide the file name in this case that
563:06 - will handle the request that is going
563:08 - from the admin so over here slash and
563:11 - then let's say we say action uncore
563:14 - admin.php so guys basically when the
563:17 - user clicks on this particular submit
563:19 - button that is submit as admin this
563:22 - particular particular file that is
563:23 - action uncore admin will be called and
563:26 - not this file that is action 1. PHP and
563:29 - this is the main functionality of the
563:31 - form action attribute that allows us in
563:34 - order to overwrite the name of the file
563:37 - on the server which will be responsible
563:39 - in order to handle the request that is
563:42 - being passed by the client side so guys
563:44 - let me just save this file now Ander try
563:46 - reloading this page once again on the
563:47 - browser so as you can see we have two
563:49 - buttons that is submit and submit as
563:51 - admin over here guys when the user
563:53 - provides any data in this case so let's
563:55 - say we provide John and the last name is
563:57 - do over here and when the user clicks on
564:00 - the submit as admin the request will be
564:02 - passed to this file that is action
564:05 - admin.php and not action 1. PHP and when
564:09 - the user clicks on this simple submit
564:11 - button the request will be passed to the
564:14 - action 1. PHP which is being provided as
564:17 - the action attribute inside the form tag
564:19 - so guys this will be the main difference
564:21 - so if we click on this submit as admin
564:23 - over here it says your file couldn't be
564:25 - accessed that's because it is trying to
564:28 - find that action uncore admin.php file
564:31 - as you can see this particular file is
564:34 - getting the values of the parameters
564:36 - that was set by the user so you can see
564:38 - the values as well that is f name is
564:40 - John and L name is do over here now guys
564:43 - if we go back once again in this case
564:45 - and we provide the same data that is
564:47 - John do and when we click on this normal
564:49 - submit button now so when we click on
564:52 - this as you can see action 1. PHP file
564:55 - is being called on the server site and
564:57 - this is the main functionality of the
564:59 - action attribute and the form action
565:01 - attribute that we have just seen so in
565:03 - case you want some other server side
565:05 - file to be used in order to process the
565:08 - data that is being passed by the user
565:10 - you can provide some other file with the
565:12 - help of the form action attribute that
565:14 - will be linked to the submit button
565:16 - inside the form so now we will see input
565:19 - attribute form ENC type in input
565:22 - so guys basically the input form ENC
565:25 - type attribute specifies how the form
565:28 - data should be encoded when submitted
565:30 - and it is only applicable when the forms
565:32 - are with the method is equal to post
565:35 - value so guys basically over here ENC
565:37 - stands for encoding and what type of
565:40 - encoding is done when the data is being
565:42 - submitted by the form with the method
565:45 - post is defined by the form ENC type
565:47 - over here it is very important to note
565:50 - that this attribute overrides the ENC
565:52 - type attribute of the form element so by
565:55 - default we have certain value that is
565:57 - assigned to the ENC type attribute which
566:00 - will be overridden by this form ENC type
566:03 - attribute and this particular attribute
566:05 - works with the following input types
566:07 - that is submit and image so guys
566:09 - basically the submit button or the image
566:12 - button that we have inside the form in
566:14 - order to submit the form data will have
566:16 - the attribute that is form ENC type for
566:19 - which we will have certain value so guys
566:21 - let us check this with the help of
566:23 - examples in vs code over here so
566:25 - basically I'll remove previous lines of
566:27 - code that we had return and we will only
566:29 - keep the paragraph that is below content
566:31 - is in HTML form so guys now we will
566:34 - Define the form with the post request
566:36 - over here so we have the method with the
566:39 - post value and then inside the form what
566:41 - we will do is we will have the field
566:43 - with the first name so we will Define
566:45 - the input with the type text over here
566:48 - and then we will have the name attribute
566:50 - as F name in this case and the same
566:52 - value we will paste it inside the ID
566:54 - attribute as well and before this we
566:56 - will also have the label that is having
566:59 - the for attribute as F name and then we
567:01 - will say first name in this case
567:04 - followed by colon so guys we have a
567:06 - single field over here after which we
567:08 - are going to have couple of line braks
567:10 - in this case now guys simply we will
567:12 - have the submit button over here so
567:14 - input colon submit in this case and we
567:16 - will keep the value as submit so that
567:19 - this particular value is displayed on
567:21 - the submit button so guys let me just
567:23 - save this file now and try reloading
567:25 - this page on the browser so as you can
567:27 - see we have the first name label and
567:29 - then simply we can provide the first
567:31 - name inside this input field and since
567:33 - the method is of the post value over
567:35 - here inside the form we won't be able to
567:37 - see the parameters being passed as the
567:40 - part of URL when we click on submit so
567:42 - guys when we click on submit in this
567:44 - case there is no change in the URL that
567:46 - is happening but the value is going to
567:49 - the server based on the post method over
567:51 - here but but guys currently the encoding
567:53 - type of the data that is going to the
567:55 - server is the default value what if we
567:57 - want the data to be encoded in a
567:59 - different way so what we can do is
568:01 - inside the submit button we can have the
568:04 - form ENC type over here so as you can
568:06 - see this is the attribute that we can
568:09 - use in this case and it has three values
568:12 - so by default it is text/plain data that
568:15 - is being passed to the server and we can
568:17 - also select multiart / form data over
568:20 - here so if we select this so basically
568:22 - this will be the encoding that will be
568:24 - done to this particular data that is
568:26 - being sent to the server so guys
568:28 - currently we won't be able to see any
568:30 - change but when we are going to learn
568:32 - about the server side scripting and
568:34 - handling the data that is coming from
568:36 - the client side over there we will be
568:38 - seeing the difference between the
568:40 - various values of the form ENC type
568:42 - attribute over here so let me just save
568:44 - this file now and try reloading this
568:46 - page once again on the browser so now if
568:48 - we provide some data over here so let's
568:50 - say I provide the first name is on and
568:52 - click on submit button so basically the
568:54 - data is getting encoded with the help of
568:56 - this particular value and it is passed
568:58 - to the server so guys in this way you
569:00 - can easily provide the value to the form
569:02 - ENC type and based on your requirements
569:05 - you can select one of the values of this
569:07 - particular attribute and handle the data
569:10 - accordingly that is being passed to the
569:12 - server so now we will see input
569:14 - attribute form method in input field so
569:17 - guys basically the input form method
569:19 - attribute defines the http method for
569:22 - sending the form data to the action URL
569:26 - so basically we have two types of HTTP
569:28 - method one is get and another is post so
569:31 - basically the get request helps us in
569:34 - order to send the data by enclosing the
569:36 - data within the URL itself and the user
569:39 - can see what are the different values of
569:41 - the parameters that is being passed to
569:43 - the server and the other HTTP method
569:46 - that is post request does not allow the
569:49 - parameters to be displayed inside the
569:51 - URL and Guys these are the two types of
569:53 - HTTP methods that we can use while we
569:56 - are sending the form data to the server
569:58 - so whenever you are sending certain
570:00 - sensitive data such as password or any
570:03 - other personal information it is
570:05 - recommended that you use the post method
570:07 - of the HTTP request so that it is not
570:10 - being displayed inside the URL when the
570:13 - user clicks on the submit button now
570:15 - guys it is very important to note that
570:17 - the attribute overrides the method
570:19 - attribute of the form element so BAS
570:21 - basically inside the form tag we have
570:24 - the attribute that is Method attribute
570:26 - which can be the get request or the post
570:28 - request but explicitly if we provide the
570:31 - form method attribute inside the submit
570:34 - button inside the form then that
570:36 - particular value will override the value
570:38 - that is being provided to the form tag
570:40 - over here so basically the form method
570:43 - attribute works with the following input
570:45 - types that is submit and image so guys
570:48 - let us check this with the help of
570:49 - examples in vs code over here so
570:51 - previously we had written certain lines
570:53 - of code in this case we have a paragraph
570:56 - that is below content is in HTML form
570:59 - and then we have a form tag over here
571:01 - inside which we have the method of the
571:03 - post request so guys in this case the
571:06 - values of the parameters that is this
571:09 - input field having the name that is f
571:11 - name will not be displayed inside the
571:14 - URL when the user clicks on submit
571:16 - button so I'll just remove this
571:18 - attribute that is form ENC type that we
571:20 - had seen previously so so basically we
571:22 - have the value of method as post request
571:24 - over here so we should not be able to
571:26 - see the value of the first name inside
571:29 - the URL when the user clicks on submit
571:31 - button let me just save this file now
571:33 - and try reloading this page on the
571:35 - browser so as you can see we have below
571:37 - content is in HTML form and we have the
571:40 - label that is first name over here so
571:42 - let's say we provide the first name as
571:44 - John in this case and when we click on
571:46 - submit as you can see we are not able to
571:48 - see the F name parameter inside the URL
571:52 - that's because we have provided the post
571:54 - method over here so guys similarly we
571:56 - can also have the password input in this
571:59 - case so let me just copy these lines of
572:02 - code and paste this over here after the
572:04 - first name and in this case we will have
572:07 - the password as the input type and the
572:10 - name attribute we will update it to
572:12 - password in this case and the same value
572:14 - we will set it to the ID of the input
572:16 - tag as well and for the four attribute
572:19 - of the label we will set it as password
572:21 - and and in this case we will change the
572:23 - label to password over here let me just
572:26 - save this file now and try reloading
572:28 - this page once again on the browser so
572:30 - now if we provide the first name as John
572:32 - and let's say we provide password as
572:35 - password in this case and click on
572:37 - submit so basically the values are
572:39 - getting submitted to the server and it
572:41 - is also not getting displayed inside the
572:43 - URL and that is how you should be using
572:46 - the post request in order to send
572:48 - certain sensitive data in this case it
572:50 - is the password which is a sensitive
572:52 - data which should not be visible to
572:54 - other users now guys how we can use the
572:56 - form method attribute inside the submit
572:59 - button So currently as we have seen the
573:02 - method type is post request but can we
573:04 - override this method type yes we can do
573:07 - so by using the form method attribute
573:10 - inside the submit button over here so
573:13 - inside this particular input tag that is
573:15 - related to submit button we can have the
573:18 - form method in this case and for this
573:20 - form method attribute we can simply set
573:23 - it as get request so guys basically what
573:25 - we are telling the form to do is pass
573:28 - these values that is the first name and
573:31 - the password as the get request so that
573:33 - those values can be seen inside the URL
573:36 - so let me just save this file now and
573:38 - try reloading this page once again on
573:40 - the browser so now if we try to provide
573:42 - the first name and password let us see
573:44 - what happens so when we provide John as
573:47 - the first name and password as the
573:49 - password value in this case and when we
573:51 - click on submit button over here as you
573:54 - can see F name is equal to John and
573:56 - password is equal to password is getting
573:58 - displayed over here inside the URL and
574:01 - this is the functionality of the get
574:03 - request which is the HTTP method inside
574:05 - the form so guys basically we were able
574:08 - to override this value of the method
574:10 - that is equal to post with the help of
574:12 - the form method over here which we set
574:14 - it as get in this case inside this
574:16 - particular submit button let us now do
574:19 - the reverse of this I'll remove this
574:21 - particular attribute that is the form
574:23 - method and simply we will have the get
574:25 - request as the method attribute inside
574:28 - the form tag over here so guys basically
574:31 - by default we will be sending the labels
574:33 - as the part of URL now so let me just
574:36 - save this file now and try reloading
574:38 - this page once again on the browser so
574:40 - now if we provide the first name that is
574:42 - programming in this case and password as
574:45 - pass in this case and when we click on
574:47 - submit button by default the first name
574:49 - and the password are getting passed as
574:51 - the part of the URL that's because we
574:54 - have set the method type as get request
574:56 - over here and what if we provide the
574:58 - form method over here once again so we
575:01 - provide the form method with the value
575:03 - as post this time that's because we
575:05 - don't want the password to be displayed
575:07 - as the part of the URL while sending the
575:10 - data to the server so this time we are
575:12 - setting the form method attribute as
575:14 - post value so let me just save this file
575:16 - now and try reloading this page once
575:18 - again on the browser and now if you
575:20 - provide the first name that is
575:22 - programming and password as pass in this
575:24 - case let me click on submit so as you
575:26 - can see the data is being submitted to
575:28 - the server and we are no longer able to
575:30 - see the data as part of the URL that's
575:33 - because we have set the form method as
575:36 - post inside the submit button so
575:38 - basically this particular attribute is
575:40 - overriding the value of the method
575:43 - attribute that we had set while defining
575:45 - the form tag in this case so now we will
575:48 - see input attribute form Target in input
575:51 - field so guys basically the input form
575:53 - Target attribute specifies a name or a
575:56 - keyword that indicates where to display
575:59 - the response that is received after
576:01 - submitting the form so in short this
576:04 - form Target attribute will be used in
576:07 - order to display the response that is
576:09 - coming from the server site in the same
576:11 - window or the new window so guys we will
576:13 - check this with the help of examples as
576:15 - well it is important to note that this
576:17 - attribute overrides the target attribute
576:20 - of the form element so guys basically
576:22 - inside the form tag we have the target
576:25 - attribute as well by default it is set
576:27 - to one particular value and that value
576:30 - will be overridden by the form Target
576:32 - attribute that we will Define so this
576:34 - form Target attribute works with the
576:36 - following input types that is submit and
576:39 - image so we can mention the form Target
576:41 - attribute inside the submit or the image
576:44 - buttons that are being used in order to
576:46 - submit the form data so guys let us
576:48 - check this with the help of examples in
576:50 - vs code over here here so previously we
576:52 - had written some lines of code it is
576:55 - having the paragraph with the help of
576:57 - ptag and it says below content is in
576:59 - HTML form and then guys we have the form
577:02 - with the method that is get request over
577:05 - here and then the first label we are
577:07 - having as the first name for the first
577:09 - name and then we have another label that
577:11 - is password along with the input type
577:14 - that is password in this case in order
577:16 - to allow the user to provide the
577:18 - password and then guys we have a submit
577:20 - button over here I'll remove this
577:22 - particular attribute that is form method
577:24 - which we had seen previously so guys let
577:26 - me just save this file now and try
577:27 - reloading this page on the browser so as
577:30 - you can see we have first name and the
577:32 - password fields in this case so if you
577:34 - provide certain data that is programming
577:36 - in the first name and let's say we
577:38 - provide a password to the password field
577:40 - as well and when we click on submit as
577:43 - you can see both these parameters that
577:45 - is first name and password are getting
577:47 - sent to the server with the help of URL
577:49 - now guys this is not one of the best
577:51 - practices in order to send some
577:53 - sensitive data to the server with the
577:56 - help of the get request that's because
577:58 - anyone can see that data inside the URL
578:01 - over here so whenever you are sending
578:03 - certain sensitive data like in this case
578:05 - we are sending some password over here
578:08 - we should be using the post method but
578:10 - in order to understand this particular
578:12 - example we are setting the method type
578:14 - as get request over here so that we
578:17 - understand the form Target attribute so
578:19 - guys basically by default we have a
578:21 - Target attribute over here for which the
578:23 - value is already set to underscore self
578:26 - in this case so guys this is the default
578:29 - value that the form behaves While
578:31 - submitting any form over here so let me
578:33 - just save this file now and try
578:35 - reloading this page once again on the
578:37 - browser we will see how the submission
578:39 - of the form Works in this case when we
578:41 - have provided the target attribute over
578:43 - here so let me provide the first name is
578:46 - John and let us say we provide pass as
578:49 - the password and when we click on submit
578:51 - Button as you can see we have the F name
578:53 - and the password parameters important
578:55 - point is over here when the response
578:57 - will come from the server it will be
578:59 - displayed on the same tab that is the
579:01 - same window of this particular browser
579:04 - what if we want the response to be
579:06 - displayed in the new window over here
579:08 - that is the new tab so guys what we will
579:10 - do is in such a case instead of setting
579:13 - the target attribute over here we will
579:15 - set the form Target attribute inside the
579:18 - submit button so in this case we will
579:21 - have the the form Target attribute and
579:23 - in this case simply we can have
579:25 - underscore and the blank value so guys
579:28 - basically when we set the underscore
579:30 - blank value for the form Target the
579:32 - response will come to the new window
579:35 - that is the new tab of the server and it
579:37 - is going to overwrite the current value
579:39 - of the target attribute as well that we
579:42 - have defined inside the form tag so let
579:44 - me just save this file now and try
579:46 - reloading this page once again on the
579:48 - browser so now if we provide the first
579:50 - name let us say say we provide
579:51 - programming as the first name and
579:53 - password as password field and when we
579:56 - click on submit button now so as you can
579:59 - see there is a new window that is opened
580:01 - right now and using that new window we
580:03 - will be receiving the response from the
580:06 - server so guys basically this is the
580:07 - main difference the first window or tab
580:10 - over here is still having the data and
580:12 - the moment we click on this submit
580:13 - button a new window will be opened and
580:16 - the server response will be displayed
580:18 - inside the new window so let me just
580:20 - show you that once again over here I'll
580:22 - close this window right now and we are
580:24 - having just one tab opened on this
580:27 - browser and when we click on submit in
580:29 - this case so as you can see the second
580:31 - tab is opened right now and the response
580:33 - will be displayed on this particular
580:35 - window so guys this is the main
580:37 - functionality of the form Target
580:39 - attribute that we can use While
580:41 - submitting the form and we can provide
580:43 - the value inside the submit button in
580:45 - this case so now we will see form
580:47 - attribute no validate in form tag so
580:50 - guys basically the no validate attribute
580:52 - is a form attribute and when it is
580:55 - present the no validate specifies that
580:57 - all of the form data should not be
580:59 - validated when submitted so guys
581:01 - previously we had seen the attribute
581:03 - that is required which makes the user to
581:06 - provide certain value inside the input
581:08 - field that's because that particular
581:10 - input field is mandatory with the help
581:12 - of the required attribute but guys when
581:14 - we provide the no validate attribute
581:17 - inside the form tag then it overwrites
581:20 - any of the input fields that is having
581:22 - the required attribute and this is what
581:24 - we are going to see with the help of
581:26 - examples as well so guys let us move to
581:28 - the vs code over here and we have a very
581:30 - simple statement that is below content
581:33 - is in HTML form inside the paragraph tag
581:36 - so what we will do is we will provide
581:38 - the form with the method type that is
581:41 - get request over here and inside the
581:43 - form we will have two Fields the first
581:45 - field is the first name so over here we
581:48 - will set it as input colon text and for
581:51 - the name attribute we will set it as F
581:53 - name and the same value we will copy to
581:55 - the ID attribute as well and then before
581:58 - this we will also have the label tag and
582:00 - for the for attribute we will have the
582:02 - same value that is f name and we will
582:05 - Define the label as first name in this
582:07 - case followed by colon so guys basically
582:10 - we have the input field that is the
582:12 - first name over here and then after this
582:14 - we are going to have couple of line
582:16 - breaks in this case now guys similarly
582:18 - we will have the email address as well
582:20 - as the second input field so we'll
582:22 - simply copy these lines of code and
582:25 - paste it over here and instead of type
582:27 - text we will have email in this case and
582:30 - for the name attribute we will copy the
582:32 - same value that is email and for the ID
582:35 - attribute as well we will keep the value
582:37 - as email over here for the for attribute
582:39 - of the label tag we will keep the value
582:42 - as email and instead of first name we
582:44 - will have the email label over here
582:46 - followed by colon we are asking the user
582:48 - to provide the first name and the email
582:51 - address and in this case we will make
582:53 - the email address input field mandatory
582:56 - so what we have to do is inside this
582:58 - input tag that is of the type email we
583:01 - will provide the required input field so
583:04 - guys basically this attribute is
583:05 - responsible in order to make the user to
583:08 - provide some data before submitting the
583:10 - form so guys after these couple of line
583:13 - breaks over here we will again have the
583:15 - submit button in this case so input
583:18 - colon submit which is going to define
583:20 - the submit button and for the value
583:22 - attribute we will have the submit value
583:24 - for this button so guys let me just save
583:26 - this file now and try reloading this
583:28 - page on the browser so as you can see we
583:30 - have the below content is an HTML form
583:33 - paragraph being displayed over here and
583:35 - then we have two fields that is first
583:37 - name and the email address over here now
583:39 - guys if we simply try to submit this
583:41 - form then as you can see we are getting
583:43 - the message that is please fill out this
583:45 - field that's because we have kept this
583:48 - input field that is email address as
583:50 - mandatory with the help of the required
583:53 - attribute over here so guys only after
583:55 - we provide certain data to this email
583:57 - input we will be able to submit this
583:59 - form so let me just provide some test
584:01 - data over here so as you can see we have
584:03 - provided test gmail.com now let me just
584:06 - click on submit button so now as you can
584:08 - see the F name and the email parameters
584:11 - are being displayed inside the URL over
584:14 - here which is being passed to the server
584:16 - so guys in this way the required field
584:18 - works now guys what if we don't want any
584:20 - of of the validations inside the form
584:23 - when the user wants to submit this form
584:25 - so what we can do is we can use the no
584:28 - validate attribute that can be used
584:30 - inside the form tag so over here after
584:33 - the method that is get request we will
584:35 - simply provide no validate in this case
584:37 - so this is the attribute that is
584:39 - responsible in order to remove all the
584:42 - validations from the input Fields set
584:44 - are present inside the form so let me
584:47 - just save this file now and try
584:48 - reloading this page once again on the
584:50 - browser now if you notice without
584:52 - providing any data we will be able to
584:55 - submit the form that's because we have
584:57 - provided the no validate attribute
584:59 - inside the form tag so let me just click
585:01 - on submit button over here so as you can
585:03 - see the F name and the email parameters
585:06 - are being passed to the server with the
585:08 - help of the URL over here because we
585:10 - have kept the method type as get request
585:12 - so if you notice we have not provided
585:14 - any data inside the email address even
585:17 - though we have kept the email address as
585:19 - required over here that's because we
585:22 - have provided the no validate attribute
585:24 - inside the form tag and the moment we
585:26 - remove this no validate attribute from
585:28 - the form tag let me just save this file
585:31 - now and try reloading this page once
585:33 - again on the browser so now if we try to
585:35 - submit without providing any data to the
585:37 - email address it should through the
585:39 - validation message over here so when we
585:41 - click on submit Button as you can see it
585:43 - says please fill out this field this is
585:46 - the way that no validate Works in order
585:48 - to remove all the validations from the
585:50 - the form Fields over here we have set
585:52 - the no validate attribute once again and
585:55 - when we refresh this page once again
585:57 - over here and when we click on submit as
585:59 - you can see now we are able to submit
586:01 - the data to the server without any
586:03 - validations so now we will see input
586:05 - attribute form no validate in input
586:08 - field so guys basically input form no
586:11 - validate attribute specifies that an
586:14 - input element should not be validated
586:16 - when submitted and the form no validate
586:19 - attribute works with the foll input
586:21 - types that is submit button over here so
586:23 - guys let us check this with the help of
586:25 - examples in vs code so previously we had
586:28 - seen that inside the form tag we had two
586:30 - fields that is the first name and the
586:33 - email address now for the email address
586:35 - we have kept the attribute that is
586:37 - required which means that the email
586:40 - address is required right now and
586:42 - previously we had also seen what is the
586:44 - functionality of the no validate it will
586:46 - allow us to disable all the validations
586:49 - so guys I'll remove this no validate
586:51 - attribute over here and simply we will
586:53 - have the form tag along with the method
586:55 - that is get request so that all the
586:57 - parameters can be seen inside the URL so
587:00 - we have the first name without the
587:02 - required attribute and we have the email
587:05 - with the required attribute which means
587:07 - the user should provide certain data
587:09 - inside the email field over here before
587:11 - submitting the form so guys after this
587:13 - we have the submit button in this case
587:16 - let me just save this file now and try
587:17 - reloading this page on the browser so as
587:20 - you can see we have have the first name
587:21 - and the email Fields over here and
587:23 - simply if we click on the submit button
587:25 - without providing any data so as you can
587:28 - see we have the message that is please
587:30 - fill out this field that's because we
587:32 - have provided the required attribute to
587:35 - this email input field so guys let me
587:37 - just provide certain data over here so
587:39 - as you can see we have provided test at
587:41 - gmail.com in this case so let me click
587:44 - on submit once again this time so as you
587:46 - can see the form is getting submitted
587:49 - and we are not having any value for the
587:50 - first name that's because we have not
587:52 - provided any data and moreover it is not
587:55 - having the required attribute as well
587:58 - which means the field is not mandatory
588:00 - before submitting the form but the email
588:02 - data was provided and the same can be
588:04 - seen over here email is equal to test at
588:07 - gmail.com so guys in this way the
588:10 - required attribute is working but guys
588:12 - let us say we want to disable the
588:14 - validations on all the input fields at
588:17 - are present inside the form tag so
588:19 - simply we can come to the input field
588:21 - over here that is related to the submit
588:23 - button and we can provide the form no
588:26 - validate attribute so as you can see we
588:29 - have this form no validate attribute in
588:31 - this case which will help us in order to
588:34 - disable all the validations that are
588:36 - currently present for all the input
588:38 - Fields inside the form tag over here so
588:41 - guys let me just save this file now and
588:42 - try reloading this page once again on
588:44 - the browser so as you can see we have
588:46 - the first name and the email and this
588:48 - time without providing any data I will
588:50 - we will be clicking on the submit button
588:52 - and we will see what will happen so when
588:54 - we click on the submit Button as you can
588:56 - see the data is getting submitted to the
588:58 - server and we can see F name and email
589:01 - are getting passed to the server over
589:03 - here without any values that's because
589:05 - we have not provided any values to the
589:07 - input Fields over here but guys the
589:10 - important thing in this case is even
589:12 - though email address was marked as
589:14 - required field over here still it is not
589:17 - throwing the validation that's because
589:19 - we have provided the form no validate
589:22 - attribute inside the input button that
589:25 - is representing the submit button in
589:27 - this case for the form tag so guys in
589:29 - this way based on your requirements if
589:31 - you want to disable all the validations
589:33 - for the input fields that are present
589:35 - inside the form tag you can either use
589:37 - the form no validate attribute that is
589:40 - linked to the submit button over here or
589:42 - simply you can use the no validate
589:44 - attribute as well inside the form tag in
589:47 - this case so now we will see canvas
589:49 - Graphics using HTML canvas tag so guys
589:52 - basically the HTML canvas element is
589:55 - used to draw graphics on the fly with
589:58 - the help of the JavaScript so guys we
590:00 - are going to check this with the help of
590:01 - examples as well the canvas element is
590:04 - only a container for the graphics and
590:07 - inside the container we can draw
590:09 - different elements we will be using the
590:11 - JavaScript to actually draw the graphics
590:14 - so basically the HTML element is not
590:17 - sufficient in order to draw the graphics
590:19 - but inside this particular particular
590:21 - container we need to use the JavaScript
590:23 - code in order to draw the different
590:25 - Graphics which can have several methods
590:27 - for drawing the parts boxes circles text
590:31 - and adding some images as well so guys
590:33 - we will check the examples for drawing a
590:36 - line in the canvas so let us move to the
590:38 - VSS code over here in order to see how
590:41 - you can draw the canvas and draw a line
590:43 - inside the canvas so guys basically over
590:46 - here for the title of this document we
590:48 - will say HTML canvas in this case and
590:51 - then after this inside the body we will
590:54 - have a P tag that is the paragraph tag
590:56 - and then we will say below is a HTML
591:01 - canvas element so guys basically we are
591:04 - just having a simple statement that is
591:06 - below is a HTML canvas element and after
591:09 - this we are going to have the canvas tag
591:11 - over here as you can see this is the Mt
591:14 - abbreviation that is provided by the vs
591:16 - code so we have the opening canvas tag
591:19 - and the closing canvas tag and inside
591:21 - this we can have the height and width as
591:24 - well and along with it it is very
591:26 - important that we should also have the
591:27 - ID for this canvas so basically first of
591:30 - all we are going to define the ID and we
591:32 - are simply going to say it as my canvas
591:35 - over here and we will Define the width
591:37 - as 200 pixels in this case and also the
591:41 - height parameter we are going to Define
591:43 - it as 100 pixels so guys basically we
591:45 - have defined the canvas with the ID my
591:47 - canvas over here so that we can use this
591:50 - ID inside the JavaScript code and the
591:53 - width and the height are 200 and 100
591:55 - pixels respectively now guys let me just
591:58 - save this file now and try reloading
592:00 - this page on the browser so as you can
592:02 - see we have a paragraph that is below is
592:04 - a HTML canvas element and we cannot see
592:07 - anything on this page after this guys
592:09 - over here there is an invisible canvas
592:11 - element that is being displayed so if
592:13 - you right click over here and click on
592:15 - the inspect element as you can see the
592:17 - blue area on the web page is the canvas
592:19 - that is being highlighted now guys in
592:21 - order to see it normally without the
592:23 - inspect tool what we can do is we can
592:26 - have the border for the canvas element
592:28 - so we will move to the vs code over here
592:30 - and after this title tag we are also
592:33 - going to define the style tag in this
592:35 - case and simply we are going to use the
592:37 - canvas tag in this case and we are going
592:39 - to have the Border property over here we
592:41 - will set the Border as 2 pixels that is
592:44 - the width of the border and then we are
592:46 - going to make the Border style as solid
592:49 - and the color of the Border as black in
592:51 - this case so guys basically we have the
592:53 - two pixels solid black border color so
592:56 - let me just save this file now and try
592:57 - reloading this page once again on the
592:59 - browser so now as you can see the canvas
593:02 - element is being displayed over here and
593:04 - this is the width and the height of the
593:06 - canvas now guys let us move to the first
593:08 - activity over here how we can draw a
593:10 - line in the canvas so basically we are
593:12 - going to draw the line from the top left
593:15 - section of the canvas that is from this
593:17 - portion to the bottom right portion that
593:19 - is over here here so we are going to
593:21 - draw a diagonal line in this case from
593:23 - top left to bottom right so guys over
593:26 - here the coordinates is 0 0 and this
593:28 - particular coordinate since we know that
593:30 - the width is 200 so the x-axis is going
593:33 - from left to right so if you have
593:35 - learned mathematics we have the x-axis
593:37 - that goes from left to right and the y
593:40 - axis as well that goes from bottom to
593:42 - left but in this case the positive area
593:44 - of the white axis goes from top to
593:46 - bottom over here so this particular
593:48 - point in this case will be at the x
593:51 - coordinates which is equal to 200 and
593:53 - the y coordinate will be equal to 100
593:55 - that's because the height is 100 pixels
593:57 - over here so we have to come from 0 0
593:59 - coordinates to 200 and 100 coordinates
594:02 - in this case so guys what we have to do
594:04 - is we need to add certain JavaScript
594:06 - code over here so after this canvas
594:09 - element at the end of the body section
594:12 - we are going to have the script tag as
594:14 - well and inside the script tag we can
594:16 - use the ID of this document in order to
594:19 - identif ify the canvas element and draw
594:22 - the line inside that canvas so guys
594:24 - basically we are going to use the
594:26 - document do get element by ID so over
594:30 - here you can see there's a get element
594:32 - by ID method that we can use so this is
594:35 - the method that we will be using and
594:37 - inside the parenthesis inside the double
594:39 - codes we are going to provide the my
594:41 - canvas ID which we have set to the
594:43 - canvas element over here so guys this
594:46 - particular code is responsible in order
594:48 - to identify the HTML ele element that we
594:50 - have already defined and we are going to
594:53 - assign it to a variable so in this case
594:55 - we will have the variable that is C in
594:57 - this case which stands for canvas over
595:00 - here and then after the statement we are
595:01 - going to have the semicolon in order to
595:04 - end that statement now guys we are going
595:06 - to use this C variable in order to get
595:09 - the context so in which context we want
595:12 - to draw the line we need to draw the
595:14 - line inside this canvas so we say C
595:16 - followed by Dot and then we say get
595:19 - context over here so basically this is
595:21 - the method that is being used in order
595:24 - to get the context and we want the
595:26 - context in the two-dimensional format so
595:28 - we simply say 2D inside the double codes
595:31 - and then guys this particular function
595:33 - will return a value which we will store
595:35 - it in the context variable so over here
595:37 - simply we are going to Define another
595:39 - variable that is CTX which stands for
595:42 - context in this case so we are using the
595:44 - short form that is CTX over here and
595:47 - from now on we are going to use this
595:49 - variable that is CTX X in order to draw
595:51 - the line from 0 0 coordinates up to 100
595:56 - coordinates so guys what we have to do
595:58 - is after semicolon simply we have to use
596:01 - this CTX that is context followed by Dot
596:04 - and then we have to say move two in this
596:07 - case so that we can move to a point that
596:09 - is the coordinates 0 0 so guys basically
596:12 - with the help of this move to Method
596:14 - over here we are getting the cursor to
596:16 - the 0 0 coordinates and then we need to
596:18 - draw the line up to 2 200 and 100
596:21 - coordinates over here that is the bottom
596:23 - right so what we have to do is we will
596:25 - use CTX variable once again followed by
596:28 - Dot and then we have something called as
596:30 - line two in this case so guys basically
596:33 - line two method will be helping us in
596:35 - order to draw the line up to a
596:38 - particular coordinates which we are
596:39 - going to Define so over here we are
596:41 - going to define the x-axis as 200 and Y
596:45 - AIS as 100 in this case so this is the
596:47 - coordinates that we are pointing to and
596:50 - then then guys after this simply we have
596:52 - to call the stroke method so over here
596:54 - again we call CDX followed by Dot and
596:57 - then we have the stroke method followed
597:00 - by semicolon so Guys these three lines
597:02 - of code is responsible in order to draw
597:05 - the line along these coordinates that we
597:08 - have defined that is 0 0 up to 20000 so
597:11 - let me just save this file now and try
597:13 - reloading this page once again on the
597:15 - browser so as you can see after
597:17 - reloading this page the line has been
597:20 - drawn inside the canvas from 0 0
597:23 - coordinates up to 100 coordinates in
597:26 - this case so guys this is the most basic
597:28 - example in order to draw the line inside
597:31 - the canvas now guys similarly we can
597:33 - draw a circle in the canvas as well in
597:35 - this case we will be using the method
597:37 - called as Arc so over here what we will
597:40 - be doing is I'll simply remove these
597:42 - lines of code in this case and then
597:44 - first of all we are going to call the
597:46 - begin path method so CTX followed by Dot
597:50 - and then we have something called as
597:51 - begin path in this case so that the
597:54 - context comes to know that we are going
597:56 - to draw a path that we are going to
597:58 - Define with the help of the upcoming
597:59 - statements as well so after this
598:02 - particular line of code we will say
598:03 - context that is CTX followed by Dot and
598:06 - then we have something called as Arc now
598:09 - guys this particular Arc method takes
598:11 - five arguments the first argument is the
598:14 - x-axis so over here what we will be
598:16 - doing is we want to draw the circle at
598:19 - the center of the canvas over here so
598:21 - the xais should be at the center of this
598:24 - particular entire width of the canvas so
598:27 - guys basically the first parameter
598:28 - should be in terms of xais and it will
598:31 - be located at the center of the circle
598:33 - so we are going to define the circle
598:35 - over here at the center and what will be
598:37 - the center point of that Circle it will
598:39 - be the halfway of the width which is 200
598:42 - ided 2 which gives us 100 pixels so over
598:45 - here we will say 100 pixels in this case
598:48 - followed by comma and then we want the Y
598:50 - AIS so for the height part we have 100
598:53 - pixels as the height so we want it at
598:56 - the center so it will be 50 pixels over
598:58 - here so we say 50 in this case which
599:00 - will be the Y coordinates and then guys
599:02 - it will take the radius of the circle
599:05 - that we want to draw so let's say if we
599:07 - provide 40 in this case and then after
599:09 - that it is going to take two angles that
599:11 - is the starting angle and the ending
599:13 - angle so guys initially we want to start
599:16 - from the zero angle and then draw it
599:19 - towards the 3 60th angle which will be
599:21 - the complete circle so in this case we
599:24 - will give 0 followed by comma and then
599:27 - 360 so this is the starting angle and
599:29 - this is the ending angle over here so
599:32 - after this we need to provide semicolon
599:35 - and then guys the last statement is
599:36 - going to be the context do stroke method
599:39 - which will help us in order to draw this
599:42 - particular Arc so over here we will say
599:44 - CDX followed by Dot and then we have the
599:48 - stroke function in this case followed by
599:50 - semicolon so guys using these three
599:52 - lines of code we will be able to see how
599:55 - a circle can be drawn inside the canvas
599:58 - so let me just save this file now and
600:00 - try reloading this page once again on
600:01 - the browser so as you can see we are
600:03 - successfully able to draw the circle
600:05 - inside the canvas by using these
600:08 - parameters now guys if we want the
600:10 - center of the circle to be at the
600:12 - extreme left that is at the zero the
600:14 - x-axis so what we can do is instead of
600:17 - having this value that is 100 at the
600:19 - xais we can simply provide zero which
600:21 - means the center of this circle will be
600:23 - at this particular line for which xais
600:25 - will be zero so let me just save this
600:27 - fin now and try reloading this page once
600:30 - again on the browser so as you can see
600:32 - Center is over here where x-axis is zero
600:34 - and we are able to see a semicircle over
600:37 - here okay similarly let's say we want
600:39 - the Y AIS to be at the zero position
600:42 - which means the center should be over
600:44 - here so we will be able to see only the
600:47 - quarter of this circle so let us try
600:49 - that as well so so instead of this y AIS
600:51 - which is 50 we will simply provide it as
600:53 - zero let me just save this file now and
600:55 - try reloading this page once again on
600:57 - the browser so as you can see Center is
600:59 - over here and it is drawing a circle
601:01 - which is going outside of this canvas
601:04 - but we are able to see only this
601:06 - particular Arc which is just the quarter
601:08 - of the circle so guys in this way you
601:10 - can play around with these numbers and
601:12 - see where the circle is getting
601:13 - displayed inside the canvas now guys
601:15 - apart from this we can also write some
601:17 - text in the canvas as well so how we can
601:19 - do that I'll simply remove these lines
601:21 - of code that is required in order to
601:24 - draw a circle over here now guys we are
601:26 - simply going to call the font property
601:28 - so in this case we will say context
601:31 - followed by Dot and then we have
601:32 - something called as font and let's say
601:34 - we want the font size to be 26 pixels so
601:37 - over here we say 26 pixels and the font
601:40 - family to be aial in this case followed
601:42 - by semicolon so guys first of all we
601:44 - need to define the font of the text that
601:47 - we want to write inside the can element
601:50 - and then after that we are going to f
601:53 - that text using the context followed by
601:55 - Dot and then we have something called as
601:57 - fi text in this case and then after this
601:59 - we are going to have a sample text so
602:01 - let's say we say Hello World in this
602:04 - case followed by comma and then we want
602:06 - to define the position as well so let's
602:08 - say if we want to write this text at the
602:10 - coordinates 50 pixels which is at the
602:12 - x-axis and 50 pixels from the Y AIS so
602:15 - over here simply we will say 5050
602:17 - followed by comma and then 50 so guys
602:20 - basically this is the text that we want
602:22 - to write and these are the coordinates
602:24 - from where we want to start that
602:25 - particular text and then after this we
602:27 - are going to have semicolon let me just
602:29 - save this file now and try reloading
602:31 - this page once again on the browser so
602:33 - as you can see Hello World text is
602:35 - getting displayed inside the canvas and
602:38 - it is starting from the coordinates that
602:40 - is 50 pixels from the x-axis and 50
602:43 - pixels from the Y AIS over here so Guys
602:45 - these are certain operations that you
602:47 - can carry out inside the canvas element
602:49 - you can achieve a lot with the help of
602:51 - the canvas element and in the upcoming
602:53 - videos as well we are going to learn a
602:55 - lot about this canvas element and how we
602:58 - can make the elements animate inside
603:01 - this canvas element so that we can
603:02 - create some kind of games as well and
603:05 - apart from that we are also going to see
603:07 - how we can interact with the elements
603:09 - inside the canvas element so guys make
603:11 - sure that you subscribe to this YouTube
603:13 - channel that is programming for
603:14 - beginners because we are going to learn
603:16 - a lot about canvas element in the
603:18 - upcoming videos as well and apart from
603:20 - this if you want to know more about the
603:22 - different functions that can be used
603:24 - inside the canvas element we have this
603:27 - developer. mozilla.org website where you
603:30 - can know the different apis that we can
603:33 - use in order to render the canvas so as
603:35 - you can see canvas rendering context 2D
603:38 - so inside this page we are having
603:40 - multiple functions that can be used by
603:43 - you in order to achieve your
603:44 - requirements so when we go to this
603:46 - particular page as you can see there are
603:48 - multiple property and the functions that
603:51 - you can call in order to Define your own
603:54 - designs inside the canvas element and
603:57 - apart from this it is also having the
603:58 - basic elements as well that you can try
604:01 - from your own side so now we will see
604:03 - video tag in HTML to display a video so
604:06 - guys basically the HTML video element is
604:09 - used to show a video on a web page so in
604:12 - case you want to display a video which
604:14 - is already hosted on a server on which
604:17 - your website is hosted so you can easily
604:19 - use a video tag in order to display that
604:22 - particular video on your web page now
604:24 - guys we are going to see the controls
604:26 - attribute that adds video controls such
604:28 - as how to play pause and increase or
604:31 - decrease the volume of the video and we
604:33 - are also going to see how we can use the
604:36 - muted and the autoplay attribute in
604:39 - order to let your video start playing
604:41 - automatically but it will be muted so
604:43 - guys let us check this with the help of
604:45 - examples in VSS code over here so I'll
604:48 - simply remove the previous lines of code
604:50 - that we had written in this case and we
604:52 - will update the title to HTML video over
604:55 - here so guys the very first thing is we
604:57 - will have the paragraph that is below is
604:58 - a HTML video so we'll update this
605:02 - content to video over here and then
605:04 - after this paragraph simply we are going
605:06 - to have the video tag so as you can see
605:09 - inside the starting video tag we have
605:11 - something called as SRC element for
605:13 - which we need to provide the name of the
605:15 - video that we want to include on our web
605:17 - page so guys over here I have kept a
605:19 - Sample video inside this particular
605:21 - directory in which we are having the
605:24 - test.html web page that we are currently
605:27 - editing right now so simply we can use
605:29 - the sample video. MP4 which is the
605:32 - extension of this video that we want to
605:34 - show on the web page now guys if you
605:36 - have the video on some other directory
605:38 - then you have to provide the entire
605:40 - directory path so that the video can be
605:43 - successfully displayed inside the web
605:45 - browser so guys after providing the
605:47 - value to this SRC attribute which is the
605:49 - name of the video that we want to
605:51 - include it is best practice to provide
605:53 - the width and the height attributes as
605:55 - well so that the particular video that
605:57 - we want to display is properly displayed
605:59 - on the screen so over here we will say
606:02 - width of 400 pixels in this case and
606:05 - let's say we want the height of this
606:07 - particular video to be 250 pixels so
606:09 - over here we say height is equal to 250
606:12 - pixels now guys let me just save this
606:13 - file now and try reloading this page on
606:16 - the browser so as you can see based on
606:18 - the width and height of the video
606:20 - element that we have defined inside our
606:22 - code we are able to see the video that
606:25 - is being displayed over here but guys we
606:27 - don't have any controls over here so
606:29 - when we take the cursor on this
606:30 - particular video it is simply looking
606:32 - like a image and we cannot click on this
606:35 - particular video as well in order to
606:37 - start this video so what we have to do
606:39 - is we need to use the controls attribute
606:42 - inside this video tag in order to
606:44 - display the play pause and the volume
606:46 - buttons over here so guys simply after
606:49 - this particular height attribute inside
606:51 - the starting video tag we will say
606:54 - controls in this case so as you can see
606:56 - this is the attribute that is being
606:57 - suggested by the vs code as well so we
607:00 - are going to use this controls attribute
607:02 - let me just save this file now and try
607:04 - reloading this page once again on the
607:06 - browser so now as you can see we have
607:08 - this play button along with it we also
607:10 - have the duration of this video and we
607:12 - also have the speaker which will handle
607:15 - the volume of the video and we can also
607:17 - expand this video to the full screen
607:19 - screen and apart from that we have some
607:21 - more options as well you can see
607:23 - playback speed can also be adjusted from
607:25 - here and we can also select the picture
607:27 - in picture option in this case so guys
607:30 - let me just click on the play button
607:31 - over here so that we can play the video
607:34 - Welcome to another video in which we are
607:36 - going to learn html text that you can
607:38 - use in the HTML so guys basically so as
607:41 - you can see the video was playing right
607:43 - now when we clicked on this play button
607:45 - below are some of the basic HTML Texs
607:47 - that we have already seen in the
607:49 - previous
607:50 - we can also mute it by using this
607:52 - speaker icon over here and it is still
607:55 - being played at the background in this
607:57 - case so guys this is one of the ways in
607:59 - which you can provide the video tag and
608:01 - provide certain video that is being
608:03 - hosted on your website server over here
608:06 - now guys apart from this we also have
608:07 - some other options we can also use the
608:10 - muted attribute along with the autoplay
608:12 - attribute as well so let's say when the
608:14 - user comes on this web page you want
608:17 - this particular video to be autop played
608:19 - so what we can do is simply we have to
608:21 - come over here after the controls option
608:24 - we can provide autoplay attribute as
608:26 - well and apart from this we also have to
608:29 - provide the muted attribute that's
608:31 - because some of the web browsers do not
608:34 - allow autoplay without the muted
608:36 - attribute so if we provide the autop
608:38 - play let me just save this file now and
608:40 - try reloading this page once again on
608:42 - the browser so as you can see the autop
608:44 - play is not working right now the video
608:47 - is not getting autop played that's
608:48 - because we we have not provided the
608:50 - muted attribute so both the attributes
608:53 - needs to be provided in order to
608:55 - successfully autoplay the video so over
608:58 - here let me just provide the muted
609:00 - attribute as well so let me just save
609:02 - this file now and try reloading this
609:04 - page once again on the browser so as you
609:06 - can see the video has already started
609:08 - playing itself but it is in mute right
609:10 - now that's because the autoplay feature
609:12 - will only work with the muted attribute
609:15 - so guys this is one of the ways in which
609:17 - you can provide a video on your web page
609:19 - and also provide the different controls
609:21 - in order to pause or play the video or
609:24 - make this video full screen over here as
609:27 - you can see we have expanded the size of
609:29 - this video so that the user experience
609:31 - is better in this case so now we will
609:33 - see how we can display the YouTube video
609:36 - in HTML so guys the easiest way to play
609:39 - videos in HTML is to use YouTube and in
609:42 - this case the video will be hosted by
609:44 - the YouTube but you will be able to
609:47 - display it on your web page by using the
609:50 - if frame tag so over here the logic in
609:52 - order to use the YouTube video is to
609:55 - make use of the video ID to display the
609:58 - video on the HTML web page so guys over
610:01 - here I have the sharable link of a
610:03 - particular video from the YouTube so as
610:05 - you can see this is the video that we
610:07 - want to display and out of this link we
610:10 - only want this particular ID of the
610:12 - video that we want to display on the web
610:15 - page so we need to have a prefix that is
610:17 - https followed by code Lear and then two
610:20 - * forward slashes and then we are going
610:22 - to have youtube.com followed by forward
610:25 - slash and then embed and then after this
610:28 - forward slash we are going to have any
610:30 - ID of the video that you want to display
610:32 - so guys basically this is the prefix
610:34 - that we are going to use so guys let us
610:36 - check this with the help of example and
610:38 - vs code over here so I'll simply remove
610:40 - the previous lines of code that we had
610:42 - WR and we will have the paragraph that
610:44 - will display below is a HTML video from
610:47 - YouTube so guys we have a very simple
610:50 - statement inside the paragraph over here
610:52 - and then we will use iframe Tag over
610:54 - here and this iframe starting tag will
610:56 - have the SRC attribute inside which we
610:59 - need to have the value of the YouTube
611:01 - video that we want to display so guys
611:03 - over here simply we are going to copy
611:05 - this particular link that is the
611:07 - embedded Link in this case and paste it
611:09 - inside the SRC that is the source
611:11 - attribute and then guys it is very
611:13 - important that we should also have the
611:15 - width and the height of this particular
611:16 - if frame so simply we are going to have
611:19 - the width that is 400 pixels in this
611:21 - case and height as well that we are
611:23 - going to Define with 250 pixels in this
611:26 - case so guys basically this is the width
611:28 - and the height of the video that we want
611:30 - to display on the web page and always
611:32 - remember that we should have this
611:34 - particular prefix before providing the
611:36 - ID of the video that we want to display
611:38 - on the web page now guys let me just
611:40 - save this file now and try reloading
611:42 - this page once again on the browser so
611:44 - as you can see below is a HTML video
611:47 - from YouTube and this particular if
611:49 - frame is successfully able to display
611:52 - the video from the YouTube in this case
611:54 - so based on the ID of the video that we
611:57 - provide the video will be displayed over
611:59 - here on the web page and simply we need
612:01 - to click on this particular icon that is
612:04 - YouTube in order to play the video so
612:06 - when we click on this welcome to another
612:09 - video in which we are going to learn
612:10 - about the basic html text as you can see
612:14 - it has started playing the video and it
612:16 - is also showing the different controls
612:18 - from the YouTube in this case so we have
612:20 - the closed captions as well and then we
612:22 - have the more settings icon as well so
612:24 - guys the advantage in order to host the
612:27 - video on YouTube and Link that
612:29 - particular YouTube video ID to your web
612:32 - page is that you don't have to store
612:35 - these long videos which is going to take
612:37 - more memory on your web server but
612:40 - simply you can link the YouTube video to
612:42 - your web page and display it to your
612:44 - audiences and apart from this it is also
612:46 - going to have the controls from the
612:47 - YouTube as well which your users can use
612:50 - in order to have the better user
612:52 - experience and in case if you want to
612:53 - change this particular YouTube video
612:56 - Simply you have to come to the source
612:57 - code in this case and inside the SRC
613:00 - attribute you simply have to change the
613:02 - video ID over here so that the video is
613:05 - updated on the web browser so we have
613:07 - come to the conclusion of this HTML
613:09 - tutorial video hopefully you have got
613:11 - enough knowledge about HTML and how you
613:13 - can use different tags in the HTML in
613:16 - order to make different websites based
613:18 - on your requirement s comment in the
613:20 - comment section below if you have
613:21 - learned something out of this video
613:23 - please make sure that you like this
613:24 - video so that it reaches to more people
613:26 - and subscribe to this channel so that
613:28 - you get the notifications on upcoming
613:30 - videos as well I'll see you in the next
613:32 - video till then stay tuned

Cleaned transcript:

in this video we are going to cover the complete HTML tutorial as a part of web development so guys if you want to make a career in web development it is very important that you should know the basics of the HTML and we are going to cover the basic and the intermediate levels of the HTML tutorial with the help of several examples so guys while you're watching this video please make sure that you practice on your own so that on different inputs you get different outputs and that is how you are going to learn a lot about HTML so let's get started now HTML stands for hyper text markup language so guys basically this is the full form of HTML that is hyper text markup language which is the most widely used language on web to develop web pages so any web pages if you see if I open the Google Chrome browser over here this is the default page of the Google and if you right click over here and then go to inspect as you can see inspect is the option under the elements stab you can see the entire HTML content over here so basically this is the HTML that was written behind the scenes in order to show you this particular page with an image of Google over here so basically it has various attributes as you can see these are nothing but these are the tags that we are going to see in this video series as well so guys you are going to learn a lot about the HTML in order to develop the web pages that you can see in today's world now HTML is a must for students and working professionals to become a great software engineer especially when they are working in web development domain now guys what are the advantages of learning HTML first of all you will be able to create a website which is very important as a software engineer you can also become a web designer over here and design the websites you will also be able to understand the web and how it works and apart from this you can learn the other languages as well for which HTML becomes very important and how you understand HTML will help you to learn the other languages as well so guys let us now see the example of a Hello World using HTML over here I will be using VSS code over here in this entire video series you can use your own text editor of your choice whichever you are comfortable with so over here I'm going to create a new file so as you can see we have a new text file over here and then we are going to click on this select a language and then basically I'm going to search for HTML since this is the format that we are going to write the HTML code over here so guys let me just save this file now I just save it in a particular folder in this case so basically I'm going to create a new HTML file in this directory so I'm going to copy this and paste this over here and then we are going to give the name that is test.html so guys always remember that whatever HTML code that you are going to write in the HTML file it must be having the extension of HTML over here or else HTM so that is the extension that is being used by the HTML files and then we click on save so guys basically this file has has been named as test.html now guys we are going to write a simple HTML code over here that is having hello world which is going to be displayed on the web page so guys the very first thing that you are supposed to do whenever you writing the code in the HTML file is have the dog type tag over here so basically you have to type the less than symbol over here and then as you can see vs code is suggesting us all the tags that you can use in the HTML code based on your requirements so guys basically the very first line is this exclamation And Then followed by dog type and then we have something called as HTML over here so guys this particular line tells the browser in order to interpret this file as the HTML and show it to the latest browser as the HTML 5 version and then guys after this we need to have the main HTML tag so over here again we need to press the less than sign and then we have something called as HTML and then we need to close it by using the greater than sign over here so as you can see the less than sign and greater than sign are being used and then within that we are using the keywords which are known as tags so guys basically these things are called as tags in HTML we have the opening tag as the HTML over here within the open and close angled brackets and then over here we have the closing tag which is starting with the forward slash over here as you can see so guys most of the tags have start tag and the end tag in this case we called this tag that is the starting tag as the start tag and the ending tag tag is the end tag over here and then inside that we will have our content so inside the HTML main tags we have the two main tags over here one is called head so this is another tag so which is having the start tag and the end tag in this case and then in order to define the body of the web page we have something called as body so as you can see we have the body tag as well if you notice all the Texs are starting with the less than sign over here which is the angled bracket and then getting ended with the greater than sign over here so this is important whenever you are writing the HTML code now guys what we are going to do is inside head you can Define the title of the web page so what is the meaning of title so over here as you can see we have the head tag over here of the Google page and then if you go down over here we have something called as title now this title as you can see the content is new tag which is being displayed over here on the new tab in this case so whatever content you put inside the title tags over here the same content will be displayed on the tab of the browser so guys let us put the title over here inside the ha Tex so basically this title must be inside the head tag and then it must start with the title tag over here and then it will end with the another title tag which is having the forward slash over here at the start and then guys what we will be having is we will simply say test title in this case so guys basically this content will be displayed instead of this new tab on the tab of the browser now guys what we we will be doing is inside this body we will say hello world so how do we display the hello world we will be using the header tag that we are going to check in the upcoming videos as well now how do we Define the header tag again we press the less than sign over here and then we have something called as H and Then followed by one number so basically these are the numbers of the header tags so H1 represents the highest heading with the biggest size so as you can see over here the H1 element represents a section heading and then if you go to H2 again it represents the section heading but the size of this H2 that is the header tag is less than the size of this H1 tag over here and then similarly as we go down to the number H6 the size of the headers will keep on decreasing so guys in this case we are going to use H1 over here and then followed by closing bracket in this case and then we will say hello world so over here we are saying hello world inside the header tag that is H1 so guys this is the basic structure of the HTML page this page looks very simple and it is very basic as we move forward to the upcoming videos we will move from the very basic code to the advanced level code so that you can learn a lot about the HTML now guys what we have to do is simply we will save this file now so we can go to this file and then we can select this save option you can also use the control as combination of the keys on your keyboard in order to save the file now guys after saving this file we we have to come to this Windows Explorer as you can see we have this test.html file being saved over here and then we should be able to open this using the Google Chrome so you just need to double click over here on this file so when we double click on this as you can see we are getting hello world in this case guys basically since we have provided this hello world content inside the header tag over here that is why we are getting this hello world as the heading of this page now guys if you just change the size of this H1 to H2 which means the size should decrease to some extent and when we just save this file now and come back again to this browser we just need to press this refresh button so that it takes the latest content from this test.html so I'm going to press this refresh button as you can see the size of this hello world has decreased to some extent since we have changed the tag from H1 to H2 so guys to summarize basically we are going to have the dock type HTML over here as the first tag and then we are going to have the main HTML tag inside this main HTML tag we are going to have two sections one is the head section which is having the title of the page and then another section is the body section which is going to have the entire content of the page if you see the head section over here the title you can see the test title which is coming from this title tag if we change this title to test page in this case and let me just save this file now and try refreshing this browser you should see the change in this test title over here so when we press refresh as you can see it has changed to test page in this case so guys this is the very basic simple HTML code that you can practice on your own please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the basic HTML Texs that you can use in the HTML so guys basically below are some of the basic HTML Texs that we have already seen in the previous video as well the very first tag is the exclamation mark And Then followed by the dog type keyword and then we have something called as HTML over here now guys this helps the latest browsers to understand that the code that is going to be followed after this tag is going to be the HTML code and then it is going to be the HTML 5 version so basically this tag defines the document type and the HTML version over here the next tag is the HTML tag now this tag encloses the complete HTML document and mainly comprises of document header which is represented by the first tag that is head that we have already seen in the previous video as well and the document body which is represented by Body tags over here so guys previously we have seen that inside the HTML tag we have two main tags that is head tag over here and then the other tag is the body tag inside the head tag we have the title of the page and then if there is any script that is to be written then we can include that as well or else meta description or the external files that we want to refer to we can use all them inside the head tag and inside the body tag we can Define the content of the body like what should come inside the page of the web application those things will come inside this body tag over here so previously we had seen that this hello world is included as the content of this body tag inside the header tag over here so guys this is the main purpose of the body tag to have the entire content of the page now guys next we also have the head tag over here this tag represents the docents header which can keep the other html text like title link Etc as we have just discussed and then we have title which comes inside the head tag over here basically this title tag is used inside the head tag to mention the document title so basically this title that you see that is test page over here it comes from this title tag so if we change the title tag content over here to some other content let's say we provide example title in this case instead of test page let me just save this file now and go to the browser and refresh this page as you can see the title has been changed to example title in this case so you can control this thing inside the title tag over here which comes inside the head tag now guys the next important tag is the body tag over here now this tag represents the documents body which keeps other HTML tags like H1 Dev and then p and then Etc so basically this is the div tag that we are going to check in the upcoming video videos as well and then we also have the P tag which represents the paragraph inside the body tag so basically all those things comes under the body tag over here we also have H1 tag which is the highest heading so over here let us say we change the H2 to H1 over here so when we just save this file now and try refreshing this page you can notice the size of the hello world content how it increases once we refresh over here so when I press refresh as you can see the size of the hello this is the highest size as far as the header tag is concerned since we are using the H1 tag over here now guys the next tag as you can see we have just discussed about the H1 tag it ranges from H1 up to H6 so it depends on your requirement as to which header tag you want to use so basically this tag represents the heading of the web page and then we also have the P tag which represents the paragraph over here so guys what we will be doing is let us say we want to add a paragraph inside the page P so we come over here and inside the body tag after this hello world header we will have the paragraph tag so let us say I provide the less than symbol and then we need to provide the P which stands for paragraph and then as I have told you this is the start tag over here and this is the end tag over here inside this we are going to provide the content that this is a paragraph in this case so we simply say this is a paragraph let me just save this file now go to the browser and we need to refresh this page once again in order to see the updated content so when we press refresh as you can see it is saying this is a paragraph over here now guys it may so happen that the size of this content that you are seeing right now while watching this video may not match with the size of the content that you are typing on your own that may be because I have increased the zoom level over here it is up to 150% on your browser it may so happen that it is 100% by default and automatically the size will be shown in this particular way so since I showing you how it works that is the reason why I have increased the zoom level over here so that you can clearly see the difference between the different tags that we are using so guys it depends on you at which zoom level you guys are working now guys if we want to add another paragraph over here we will once again provide another P tag so over here let us provide another P tag over here and then we will say this is another paragraph so guys what exactly will happen is the control flow will come to the next line on the browser and then it will display this particular line so let me just save this file now and refresh this web browser once again so as you can see we are getting this is another paragraph over here so basically both these tags that is H1 and the P tag makes the browser to come to the next line and then print the content that is provided to them guys there are certain texts which will help you to continue on the same line like how we have provided hello world over here and then after this we will have this is a paragraph content on the same line so those are the different tags that we will be using in the upcoming videos as well heading paragraph and line break tags in HTML so guys what is a heading tag so basically any document right now you can see on the web it starts with a heading so if you open any of the web page related to news or sports articles it starts with a heading which mentions about the headline or what what is going on in the sports news now guys you can use the different sizes for your headings over here it ranges from H1 and then we have H2 up to H6 and the only difference while using these header tags is the decrease in the font so basically we are going to check all these with the help of example now so let us move to the vs code over here as you can see this is the basic structure that we have already learned in the previous video but what we are going to do is I'll just remove entire content and type it once again so that you get more clear understanding about the entire basic structure of the HTML code and you can practice on your own similarly so guys the very first thing that we are going to do is start with the less than symbol and then we are going to have the doc type keyword and Then followed by HTML which is being suggested by the vs code over here now the next thing is the main tag that is HTML so over here the entire content comes inside the HTML tags so this is the start tag over here once we we press on this and then we use the greater than symbol and then you can see we also have the end tag that is automatically return by the VSS code over here now guys why we are using VSS code that's because it helps us in order to provide certain autoc completion when we are writing the code you can also use the other text editor like simple notepad over here because what will happen in the notepad so if we open the notepad text editor over here we will have to manually type all the tags over here as you can see we have started with the less than symbol and then we have to provide the exclamation mark and then simply we have to provide the talk type and then HTML keyword now in this case you are not having any auto suggestion over here which is being provided by the vs code and that is why most of the programmers use vs code text editor in order to write their HTML code or any other code in the other programming languages such as python C or C++ languages so basically after writing this HTML start and the end tag we need to write the content inside these tags that is between the start and the end tag over here now you can divide the content of the entire web page into two parts the first part is the head tag over here and then after this the second part is the body tag over here so guys we have the two main Texs that is head tag which will Define The Meta description of the page and also the title of the page over here as you can see this is the example title being showed which comes from the title tag which will be present inside the head tag and then this body tag will Define all the content inside this web page over here as you can see these are the things being highlighted which will come inside the body tag over here now guys what we will do is we will Define the title so inside the head we are going to have the title tag so over here we will use title and then what we are going to see we are going to see headers and Then followed by paragraph and then we are also going to see line breaks over here so we say line brakes now guys I'll simply close this text editor over here and the very first thing that we are going to see is the different sizes of the header tags over here so we are going to Define inside the body the first tag that is H1 in this case which is the header one now we will simply say this is heading number one over here okay similarly we are going to provide the other tags that is H2 as well so we provide h2 tag and then we simply say this is heading to and then we have H3 as well so simply we say H3 and then this is heading three now similarly I will quickly type The Heading four 5 and six as well so as you can see I have quickly typed over here the headers that is H1 H2 H3 and Then followed by H4 H5 and H6 as well and then we have given all the numbers that is 1 up to 6 over here now Guys these are all the header Texs that we have already included inside the body of our HTML code now let me just save this file now and open this file that is test.html in the browser now it is already opened over here that is test.html notice that this is the previous content which we have not refreshed yet so when I press on this reload this page button over here you can see all the changes that we have just done so after pressing the reload button you can see headers paragraph and line break the title is being displayed over here which is coming from this title tag in this case and then guys all the content that is this is heading one up to this is heading six is being displayed over here as you can see with different sizes so this is H1 and then we have H2 H3 H4 H5 and H6 so the only difference you can see is the decrease in the size of all the headers so guys this is the example of the header tag as you can see now guys let us move to another example as you can see we have something called as paragraph tag over here now the P tag offers a way to structure your text into different paragraphs so basically after this heading in any of the articles that you can see online we have certain information on those pages and those are nothing but the paragraph that are being written while creating the HTML code and this is the tag that we are going to use now each paragraph of text should go in between an opening tag that is the P tag and a closing tag which includes the forward slash over here so guys let us check that after all these headers what we are going to do is we are going to define the paragraph tag so over here we simply use the P tag over here and then we can have the content that is this is a paragraph over here so guys basically we are going to have this is a paragraph let me just save this file now and try reloading this page once again so over here we come to our Chrome browser and then when we reload this page you can see this is a paragraph being displayed over here now guys in order to continue on the same line we can write another statement inside the same paragraph so what we will do is we will simply provide a full stop and then we will say this is a statement inside same paragraph So guys basically we are writing another statement after having a full stop over here but inside the same paragraph over here so let me just save this file now and try reloading this page once again so as you can see we are getting this is a paragraph and then this is a statement inside same paragraph So basically this is the way in order to write the paragraph we can have multiple statements inside the same paragraph and if you want to go to the next paragraph over here if you want to write some other paragraph you have to create another paragraph tag so over here again we are going to create another P tag over here and then we are going to say this is another paragraph and then let's say after this full stop we want to write another statement so we will say this is another statement in paragraph number two and then we have full stop so let me just save this file now and try reloading this page once again so as you can see we are getting our second paragraph over here it says this is another paragraph This is another statement in paragraph number two so guys this is the way in order to write your content inside different paragraphs over here by using different P tags please note that you have not used anything extra in order to make the control flow come from the first line to the second line over here basically when you write the content inside the P tag The Interpreter of the browser takes care of coming to the next line and writing the content of another tag on another line and not to continue on the same line so guys this is very important as far as the header tags and the paragraph tags are concerned now guys let us move to another example as you can see we have something called as line break tag so whenever you use the BR followed by a space character and then we have the forward / element so this is another line break tag that you can use what it means is anything following it starts from the next line so basically whatever content you write after this particular tag will go to the next line so this tag is an example of an empty tag where you do not need opening and closing tags as there is nothing to go in between them so guys this is an example of the empty tag because there is no open and end tag over here so in the same example what we will be doing is let's say we have this is a paragraph now you want this statement that is this is a statement inside the same paragraph to go on the next line so what you can do is before this content you can have the line break tags so over here what we will do is we will provide the less than symbol and then we have the BR tag in this case followed by a space character and then we have forward slash over here and then the greater than symbol so guys this is the tag over here which is called line break tag which helps you to go to the next line and print this statement on the next line within the same paragraph so let me just save this file now and try reloading this page once again you can notice that we have both these statements at is this is a paragraph and this is a statement inside same paragraph on this single line so what will happen after we reload this page so when we press on reload as you can see this is a statement inside same paragraph has gone to the next line over here that's because we have provided the line break tag over here now if I remove the same line break tag and then save this file now and try reloading this page once again so this statement has come back to that first line over here similarly if we provide the line break tag over here in the second paragraph so what we will do is we will provide BR tag followed by space and then we have the forward slash so let me just save this file now and try reloading this page once again so as you can see this is another statement in paragraph number two so guys this is the main functionality of the BR or the line break tag that is it helps The Interpreter to come to the next line and print the content that is following that tag now guys one very important thing is it is not necessary that you end it with a forward slash over here so if I remove this and if I remove the space character as well so this will work or not let us check that so if I save this file now and try reloading this page once again as you can see there is no change right now and then this particular statement is still on the second line over here so simply if you provide the BR as well it will work but guys it is still recommended that you provide the BR tag followed by a space character and then we have the forward slashes so that in case the client is having any of the older versions of the browser then the line break tag should work and it should not break its own functionality so if we check certain older browsers it is still using this particular format so that the line break text work properly so let me just save this file now and try running this code once again so as you can see this is the functionality that works in the older browsers as well as the new browsers as well so guys comment in the comment section below how are you liking this video series whether you are getting some real value or not and whether you are learning HTML with the help of this HTML tutorial please make sure that you practice on your own so that on different inputs you get different outputs Center tag for centering the content in HTML so guys basically we can easily use the center tag over here to put any content in the center of the page or any table cell guys please note that this tag is dicated in HTML 5 so it was being used previously in the previous versions of the HTML compared to HTML 5 and you should instead use CSS property that is the text align in order to Center the content of the HTML but still we are going to see how the center tag used to work over here so let us move to the vs code over here so basically I'm going to remove certain content from the previous code that we have written so from H2 to H6 we are going to remove the content over here and for this paragraph as well we are going to remove the statement that this is a statement inside the same paragraph and over here we are going to remove this particular content so we are going to keep it simple that is one is the header tag with this is heading number one and then we are going to have the two paragraph tags over here that is this is a paragraph and then we also have this is another paragraph over here let me just save this file now we will also change the title over here to centering the content so over here we will say centering the content let me just save this file now and reload this page to see the updated content as you can see we have centering the content as the title and and then we have this is heading number one we have this is a paragraph and this is another paragraph now we are going to see how we can bring this paragraph that is this is another paragraph to the center of the page so it should come over here that is at the center of the page as far as the entire width of the page is concerned so guys if you want to get anything to the center of the page we need to enclose that thing inside the center tag so over here in this case we are going to enclose this entire content and the paragraph tags as well that is the starting tag and the ending tag within the center tag so over here we are going to have the center tag so we type Center over here and when we close this tag as you can see since this tag is deprecated in HTML 5 VSS code helps us in order to identify that this particular Center tag is depricated and it shows it with the red color font over here but still we can use it for now but it does not guarantee that it will accurately show the entire a content in the center when you use the different versions of the browser in future now guys let me just save this file now and try reloading this page you can notice that this is another paragraph content should come at the center of the page over here when we reload the page so let me press on the reload icon over here as you can see this is another paragraph has come to the center of this page as far as the width is concerned so guys this is one way in order to get the content on the center of the page but guys this is not recommended since this tag is replicated so the other way is to use the text align property of the CSS now guys it may so happen that you have not learned about the CSS which we are going to learn in the upcoming video series as well after the HTML video series so over here I'm going to Simply show you how CSS works with the help of the internal CSS code so let me just remove these Center tags over here and then let me get the paragraph tag over here once again to it origal position let me just save this file now and try reloading this page once again so that this is another paragraph comes to the extreme left over here now guys what we will do is inside the P tag over here before the greater than sign we have something called as attributes inside all the Texs we can Define their own attributes as well one of the attributes is the style attribute over here so when we type style you can see vs code is suggesting us the style attribute in this case it says it contains the CSS styling declarations to be applied to the element so basically whatever style that we want to apply to this particular content that is this is another paragraph only to this paragraph it will be applied and no other paragraph will be impacted so over here we display the style and one of the property inside this attribute is the text align over here so we simply type text you can see all the suggestions from the vs code over here but the first suggestion that is text align we are going to use this it says describes how inline contents of a block are horizontally aligned if the contents do not completely fill the line box and it also says which are the browser versions that is being supported by this property over here so guys simply we are going to use this property and then we are going to use the value as Center in this case so guys every property inside the attribute will have some of the other value over here which we can use use so basically we are going to use this Center and this is the way that we can use the text align property inside the style attribute of the paragraph tag so let me just save this file now and try reloading this page once again you can notice that this is another paragraph should come at the center of this page so when we reload this page you can see this is another paragraph has come to the center of this page and this is how we can get the content to the center by either using the center tag which is already deprecated or else you can use the latest property that is text align property by using the CSS code inside the start tag of the element that you want to get to the center of the page so guys please make sure that you practice on your own so that on different inputs you get different outputs make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well displaying the horizontal lines in HTML so guys basically the horizontal lines are used to visually break up the sections of the document so we can use the HR tag as you can see we have the open angled brackets and then we have the HR keyword and then we have the closing angled brackets over here so this is the HR tag that creates a line from the current position in the document to the right margin and breaks the line accordingly so guys let us check this with the help of example in the vs code over here so this is the pre prev HTML code that we have written so I'm simply going to change the title of the page which we can do so using the title tag over here which is inside the head tag so we will say horizontal line example so over here we have horizontal line example over here and then guys this is a heading number one we will keep this header as it is we have the paragraph as well inside the body that is this is a paragraph now guys what we will do is this is another paragraph is being displayed on the center of the page as you can see we have provided the style attribute inside this we have the text align property which helps us in order to make this content display at the center of the page now guys what we will do is between these two paragraphs we want to display a horizontal line over here so simply in between both these paragraphs we will place this HR tag as you can see this is the tag so over here we will use the open angled bracket and then we use the HR tag so as you can see the HR element represents a paragraph level thematic break a scene change in a story or a transition to another topic within a section of a reference book so in short this is going to draw a horizontal line on the web page and then we are going to close this tag over here using the closing angled bracket now guys this is another example of the empty tag there is no content that should come in between the St tag and the end tag over here of the HR and that is why we need not have the end tag over here so this is another example of the empty tag apart from the line break tag which we have already seen previously so guys let me just save this file now and try reloading this page once again you can notice the change in the title and you will be seeing a horizontal line over here in between both these paragraphs now let me reload this page once again so as you can see the horizontal line example title is being displayed over here and then we can see a thin line which is horizontal in between both the paragraphs that is this is a paragraph and this is another paragraph So guys in short if you want to draw a horizontal line in between any of the sections in your web page you can use the HR tag let us draw a horizontal line in between the heading number one and the first paragraph over here so we will move to the VSS code so after this header tag that is H1 we will simply have the HR tag in this case as well let me just save this file now and try reloading this page one again you can see there is another horizontal line that is in between the haer number one and the first paragraph over here how to preserve formatting in HTML so guys sometimes you want your text to follow the exact format of how it is WR in the HTML Source document so in such cases we can use the preformatted tag that is p so guys basically any text that is between the opening p PR tag and the closing PR tag will preserve the formatting of the source document and the content that is in between the pr tag over here so let us understand this with the help of example now so basically this was the previous code that we had written so I'll just remove these lines of code over here and this is the basic structure that we have already seen we have the doc type HTML and then we have the main HTML tag inside which we have the head starting and the ending tag and the body starting and the ending tag over here here so basically we are going to update the title that is preserve formatting so that we can see the changes in the browser so guys we are going to have the pr tag over here so we have the less than symbol and then we type PR as you can see vs code is suggesting us this tag that is the pr element represents a block of preformatted text in which the structure is represented by typographic conventions rather than by elements so whatever you type inside these PR start and the end tag the formatting will be preserved so let me show you one example so let us say we write the JavaScript function if you are not aware about the JavaScript functions then don't worry we are going to check them in the upcoming videos as well when we are going to cover the JavaScript tutorial Series so over here we are just writing few lines of code as far as JavaScript code is concerned so over here we are writing the function and the function name is test and then we give certain arguments inside the open and close parenthesis over here and then we have the curly braces and then we are going to Simply alert something that is the test so over here we have the alert statement as well so guys this is nothing but it is a JavaScript code that we have just written inside the pr tag no need to worry about the functionality over here it will be just displayed on the UI for now so let me just save this file now and try reloading this page so previously this was the content of the test.html that we had return now once we press the reload this page Button as you can see we have got The Preserve formatting title over here and this is the formatting that we are looking for so basically inside the pre tag you can see these are the space characters over here on all the three lines and that is what is being displayed on the UI as well you can see all these are space characters over here and basically we are preserving the format in which the code is returned let me just remove the space characters over here so so we will quickly remove the space characters from all the lines and then we will see what will happen on the UI let me just save this file now and try reloading this pate once again so as you can see all the space characters are gone because we have removed them from here so this is the way that we can preserve the formatting and the way in which we write the code in our HTML document the same way it will be displayed on the UI as well guys what happens if we don't provide the pr tag to preserve the formatting so let me just remove these t tags over here the start tag and the end tag so after removing them we are just keeping these lines of code over here inside the body tag let me just save this file now and try running this code once again so as you can see all the lines of code are displayed on one single line over here and it is not preserving the format in which we have return in our source document and then what if we provide the P tag over here that stands for paragraph So if we enclose these lines of code inside the paragraph let us check what happens so over here we'll just save this file now and try reloading this page once again so as you can see it is being showed as a paragraph but all the lines of code that we have written over here on different lines those are not being preserved so we can enclose them within the pr tag once again inside the paragraph and let us check what happens then so over here we have the starting and the ending PR tag and then let me just save this file now and try reloading this page once again so as you can see now we can see the format is being preserved so guys this is the way that you can preserve the formatting in the HTML in case that is the requirement while you are working on your projects HTML elements versus tags so guys basically we have seen different tags so far in this video series now what is an HTML element so basically an HTML element is defined by a starting tag and if the element contains other content it ends with a closing tag as well where the element name is preceded by a forward slash so we have already seen what is the starting tag and the ending tag for the various tags so these are certain examples as you can see we use the P tag over here which starts with the less than symbol then we have P character and then we have the greater than symbol so basically this is the starting tag for the paragraph and we have the ending tag as well in which case we have a forward slash before this P character and then in between we have certain content that this is a paragraph content so guys basically this is the difference between HTML elements and tags over here this is referred as one single tag that is the starting tag and this is the ending tag but this entire thing is considered to be an HTML which consists of the starting tag and then the content and Then followed by the ending tag over here similarly we have the header tag that is hed1 this is the starting tag and then we have the ending tag of the hed1 but this entire thing that is starting tag along with with the this is heading content and then the ending tag is considered to be the HTML element so over here this entire thing is the HTML element over here similarly we have the div tags as well which helps us in order to group the content inside the HTML code so this entire thing is the div element over here which is one of the HTML elements and then guys sometimes we don't have the content in between the starting and the ending tag so over here as you can see the BR tag which helps us in order to break the line this can also be referred to as the HTML element over here so basically you can see the P tag that is the starting tag and the ending tag and then whatever content is there in between them is an HTML element similarly we have the H1 tags as well it is another HTML element along with the starting and the ending tags so there are some HTML Elements which don't need to be closed such as image which we are going to check in the upcoming videos as well then we have the horizontal line which we have already seen and the BR tag which helps us in order to break the line so these are known as the void elements over here so guys let us check them once again with the help of examples now over here so I'll just remove these lines of code which we had return previously now let us say we want to use the paragraph tag so over here we will be using the P tag and then we will simply say this is a paragraph So guys basically this entire thing it is an HTML element over here let me just save this this file now and go to the browser and reload this page once again so as you can see this is a paragraph is being displayed so basically this is nothing but it is an HTML element now let us write another HTML element which is the header over here which we will write before the paragraph so over here we will be using H1 tag and then we will say this is heading of this page over here we will update the title as well we will say HTML element versus tags so guys let me just save this file now and try reloading this page once again so as you can see it is saying this is heading of this page and then this is a paragraph So Guys these are different HTML elements now you can see the various HTML elements on a web page by using the inspect feature of the browser so guys what you have to do is you need to come over here right click and you can see on this Chrome browser you have this inspect option so when you click on this you will be able to see the elements tab over here and inside that all the HTML code that is written in order to display this web page is being return over here so as you can see this is the heading of this page you can click on this and then this particular element that is the HTML element is getting highlighted similarly when you hover over this is a paragraph then this particular HTML element is getting highlighted so Guys these are nothing but these are the HTML elements along with the start and the end Tex tag and the individual tags over here are the HTML tags that we refer to and guys this is the basic difference between the HTML elements and the tags attributes in HTML so guys an attribute is used to define the characteristics of an HTML element and is placed inside the elements opening tag so guys so far we have seen what are the starting and the ending tags and the starting tag is also called as the opening tag and basically based on the tagt that we use the content will be displayed on the browser now guys inside those Texs we have certain attributes that we can Define now all attributes are made up of two parts that is a name and a value so basically this is the name value pair that is being expected by the browser that should be present inside all the attributes that we Define in the opening tag over here guys we will check this with the help of examples as well now the name is the property you want to set for example the paragraph that is the P element in the example carries an attribute whose name is title which you can use to provide hint to the user so guys basically if you use the P tag that stands for paragraph you will be able to see the content but in case you want to explain more about that content you can use the title attribute inside the opening P tag which we are going to check with the help of example as well and this title is going to be the name of that attribute and on the right hand side the value is what you want the value of the property to be set and always put within the quotations so guys let us check this with the help of examples now in the vs code so guys basically this is the content that we had return previously we have a heading that this is a heading of this page and then we have the paragraph as you can see over here we will change the title to attributes in HTML so we will say attributes in HTML over here let me just save this file now and try read loading this page once again so as you can see the title has been updated we have a heading and then we have a paragraph now guys let us say we overover over this paragraph over here that is we are getting the cursor on the content of this paragraph so nothing is being displayed right now so what we are going to do is when we get the cursor on this content of the paragraph We should see certain hint or the title that we are going to set the attribute inside the opening tag so let us check that over here after this tag name we are going to have the space character before the greater than symbol and then we can simply hold control and the space bar on the keyboard over here you can see all the attributes that is related to this tag so basically what we are going to do is we are going to use this title attribute so it contains a text representing advisory information related to the element it belongs to so we are going to use this title and then as you can see we have the equal to symbol that has come come automatically and then inside the double codes we can write our content as the value of this attribute so guys what we are going to do is simply we will say paragraph over here as the keyword so that the user comes to know that this is a paragraph basically we are making the user understand in this content only but for the sake of understanding inside the title we are going to provide this keyword that is paragraph let me just save this file now and try reloading this page once again guys remember that previously we were not getting any title over here when we used to get the cursor on this content of the paragraph now once we reload this page what will happen let us see that so after clicking on the reload this page I get the cursor over here so here is the title that we can see that is kind of a Hint it is saying the paragraph that is the keyword that we have mentioned in our source document over here so guys this is one of the attributes of the HTML tag that is paragraph that we can use we can have any value over here as you can see we are going to update the value to test title in this case so let me just save this file now and reload this page once again so when we get the cursor over here on the paragraph it can be seen that the test title is being displayed as a hint so guys this is one of the attributes of the HTML tag that is paragraph similarly we can have different attributes for the different tags over here guys let us say we want to make the statement color as green so what we have to do is after the space character we can we can have another attribute that is style over here now guys inside this style we need to mention what particular property we need to set so we are going to say color in this case so as you can see color attribute is being displayed it sets the color of an element's text so we are going to use this and simply we are going to select the green color over here so green is being selected so let me just save this file now and try reloading this page as you can see the color has been changed to green and this is the way that we can me some more attributes belonging to this particular tag making text bold in HTML using the B tag so guys basically you must have used bold formatting feature of the word processor now similarly we can have such formatting in HTML documents as well so in order to make the text as bold over here anything that appears between the B tag as you can see it is the less than symbol followed by the B character and then the greater than symbol and then we have the same ending tag over here which is having the forward slash before the character and in between both the starting and ending tags we have certain content now in between both these tags whatever content is present it will be appearing as the Bold text which means we want to get certain attention of the user while showing this content over here now guys we can also use the strong tag in the HTML 5 for bold appearance which shows importance so guys let us check this with the help of examples now in the vs code I'll just remove these lines of code that were written previously and inside the body tag we will have a simple paragraph using the P tag we will say this text is bold in this paragraph So guys this is a simple paragraph and it will be displayed normally on the browser I'll just change this title to formatting over here since we are going to see the formatting examples in HTML so guys let me just save this file now and try reloading this page on the web brows browser so as you can see it is saying this text is bold in this paragraph now guys so far we have not used the B tag over here and this is a simple paragraph now let's say we want to make this highlighted text that is text is bold to appear as bold text so what we have to do is we need to enclose this text within the starting and the ending B tag so before this text we are going to have the less than symbol and then we will say B so as you can see the B element represents a span of text to which attention is being drawn for utilitarian purposes without conveying any extra importance and with no implication of an alternate Voice or mode so guys basically it doesn't show any extra importance but only to draw the attention to this particular phrase we can use the B text over here and then after this character we can have the greater than symbol and then the same ending tag I'm going to cut this and paste it after this bold word over here here so guys basically text is bold these three words are enclosed inside the B tag over here so let me just save this file now and try reloading this page once again before reloading you can see that this is a simple paragraph now after reloading we will check what happens so when we press on reload this page you can see text is bold appearance is changed now it is drawing the attention of the user by showing it as bold over here and guys this is the way that we can use the B tag now guys similarly we can also use the strong tag over here let me just copy this line of code and paste this over here and what we will do is instead of using the B tag we will use the strong tag so as you can see the strong element represents strong importance seriousness or urgency for its content so we are going to use this tag over here and then I'll just cut this ending tag and then paste this over here instead of the ending tag of the B I will say text is bold so guys basically the content of both the paragraphs the same but we are having the strong tag over here instead of the P tag so let us see how it will be appeared so we will just save this file now and try reloading this page once again so as you can see it says this text is bold in this paragraph So guys there is no difference as far as appearance of both the paragraphs is concerned it's just that the meaning behind the scenes for this text is bold is not that important compared to what we have used over here in the this text is strong over here so basically we will have to change this text to this text is strong since we are using the strong tag guys it depends on you what text you want to make bold or strong but this is the main importance that to seek users attention to certain keywords on your web page we can either use bold or strong text based on our requirements so making text italicized in HTML using the it tag so guys basically if you must have used the italicized formatting feature of the word processor you must be knowing how the italicized works but how do we use it in the HTML Source document so just like how we used the italicized feature in the word processor we can have such formatting in HTML documents as well so in order to make the text look italicized anything that appears within the I tag over here that is the starting and the ending tag will be italicized so let us check this with the help of examples now previously we had seen how we can make the text as bold and strong which helps us in all order to grab the users attention now we are going to use another paragraph over here so we start with the P tag and then we will say this text is ital sized and then we have in this paragraph So guys basically this is another simple paragraph that this text is italicized in this paragraph now guys let me just save this file now and try reloading this page on the browser so when we reload this page as you can see this is a normal text TT that is being displayed over here inside the paragraph now guys we want to make this text is italicized look as italicized over here so what we have to do is we need to enclose these three words within the I tag so over here we will come in the source document we will have less than symbol and then we say I and Then followed by the greater than symbol over here and then this ending tag we can just cut it and paste it after the italicized word so over here we have the text is ital ized being enclosed within this I tags so let me just save this file now go to the browser and reload this page once again so as you can see the text is italicized is being displayed in the italicized format and this is the way that we can use the feature in the HTML document as well guys based on your requirements you can show any of the text whether it is one word or multiple words in the italicized format making text underlined in HTML using the U tag now guys you must have used the underline formatting feature of the word processor or any other text editor now similarly we can have such formatting in HTML documents as well so in order to make the text as underlined anything that appears within the U tag that is the starting and the ending tag will be underlined while showing that HTML element on the browser so guys let us check this with the help of example now in the vs code so previously we had seen how we can make the text as bold by using the B and the the strong text over here and we have also seen how we can make the text as itally sized now we will have another paragraph so we will start with the P tag over here and then we will say this text is underlined in this paragraph So guys we have this simple statement that this text is underlined in this paragraph let me just save this file now and reload this page to see what happens over here so as you can see it says this text is underlined in this paragraph So guys basically this is a very simple paragraph that we have written now guys what we will do is we will underline these three words that is text is underlined so how we can do that simply we have to come in our source code and we need to enclose these three words within the U tag which stands for underlined so we will simply use the U tag over here and then we will have the greater than symbol and then I will just cut this closing tag and then paste it after this word that is underlined over here so guys basically we are enclosing this text is underlined in between the U tag so let me just save this file now and try reloading this page once again you will notice the change in these three words how it will be underlined so when we reload this page as you can see these three words over here are being underlined in this case and that is how we can use the U tag in order to underline any text in our HTML document guys you can underline any single word in this case or else multiple words based on your requirements making text strike through in HTML using the strike tag so guys anything that appears within the strike tag as you can see we have the strike opening tag and the strike closing tag over here that content will be displayed with the strike through which is a thin line through the text so guys let us understand this with the help of example now in the vs code over here so guys previously we had seen how we can make the text as bold or strong or italic sized and underlined now we can have another paragraph over here so we will have the P tag and inside this P tag we will say this text is strike in this paragraph So guys basically this is a very simple paragraph that we have written it has a single statement that this text is stried in this paragraph let me just save this file now and try reloading this page over here you can see that this is a very simple paragraph over here without any formatting now what we will do is we will make these three words at is text is Strike which will have strike through so what we have to do is we just need to enclose these three words in between the strike tags so over here we are going to have the less than symbol and then we will type strike and then we will have the greater than symbol over here and what we have to do is this ending tag we just need to cut it and paste it after the strike word over here so guys let me just save this file now and try reloading this page so as you can see text is stried is being displayed in the form of a strike through over here you can have any single word or the multiple words display with the strike through based on your requirements now guys if you notice in this code this strike word is being colored with a red color so basically this means that this strike tag is being deprecated in the latest version of the HTML so in HTML 5 you can simply use the S tag so instead of using the strike tag over here we can use S tag so as you can see the S element represents contents that are no longer accurate or no longer relevant so the this will have the same functionality similar to that of the strike tag so we will replace this ending tag as well with the S tag over here let me just save this file now and try reloading this page once again so as you can see we are getting the same output over here these three words are being stried through using the S tag so guys basically the strike tag is depricated and we must use the S tag over here in the latest version of the HTML monospaced font in HTML so guys the content that is within the TT tag that is the starting tag and the ending tag over here is written in a monospaced font now what is a monospaced font so most of the fonts are known as variable with fonts because different letters are of different widths for example the letter M over here is wider than the letter I so you can see the width of the letter M it is more compared to the width of the letter I over here now in a monospaced font however each letter has the same width so this we are going to check with the help of examples now now guys remember that the TT tag that is used for the monospaced font in HTML is being deprecated and we must use the kbd tag if we are using the HTML 5 version so let us check this with the help of examples now in the VSS code so what we will do is we will have a paragraph with the P tag over here and we will say this text is monospaced so over here we have this text is monospaced in this paragraph So this is one statement inside the paragraph that this text is monospaced in this paragraph let me just save this file now and try reloading this page as you can see we are getting a simple paragraph over here now guys what we need to do is these three words at is text is monospaced we want to display it in the monospaced font so what we will do is inside the source code we need to enclose these three words within the TT tag so over here we will simply have the less than symbol and then we will say TT over here and then greater than symbol so let me just cut this ending Tex and paste it after this monospaced world so we have enclosed this text is monospaced within this TD tag that is the start tag and the end tag as you can see it is being displayed in the red color that's because this tag is deprecated in the latest version of the HTML let me just save this file now and try reloading this page so as you can see the appearance of this text is monospace is different compared to the other words in the same paragraph over here all the characters of this this text is having the same width now so guys basically even though this tag is deprecated but still it is being supported in some of the latest versions it is better to use the latest tags over here and that is what we have the kbd tag for so basically this is another tag in the HTML 5 that we can use in order to have the same functionality similar to this TT tag so I'll just remove the TT tag over here and we will see KBT in this case so when we type KBT so as you can see KBT is being suggested by the vs code I'll end it using the greater than symbol and then cut this ending tag and replace this TT tag with the ending tag of the kbd let me just save this file now and try reloading this page once again no change will be noticed as you can see since the text is monospaced is being displayed over here using the kbd tag as well so guys this is the way that we can have the monospaced font for some of the text or all of the text inside the paragraph or any other text that you are using based on your requirements making text superscript in HTML using the S tag so guys basically whatever content that we put within the starting Su and the ending Su tag is written in the superscript the font size used is the same size as the characters surrounding it but is displayed half of characters height above the other characters so guys let us check how this superscript works in the HTML so we will move to our vs code and basically we are going to write another paragraph We are going to have the statement inside this paragraph and we will say this text is superscript in this paragraph So guys this is a very simple statement that we have written inside this paragraph let me just save this file now and try reloading this page on the browser so as you can see we are getting a normal paragraph that this text is superscript in this paragraph now guys what we will do is we want to make this word that is supert script appear as the superscript in this particular statement which means this text will be displayed above the is keyword over here on the right so let us do that using the Su keyword so over here we will move to the vs code and this particular word needs to be enclosed in between the Su tag so we will have the less than symbol and then we will say s as you can see the Su element represents a superscript so this tag will help us in order to display the word is superscript so over here we will select it and then we will also have the ending tag over here we will write that keyword once again so we have this superscript word being enclosed within the Su starting and the ending tag let me just save this file now and try reloading this page once again in the browser so as you can see this text is and the superscript is being displayed on top of this is word and then we have in this paragraph statement so guys this is the way that we can display the superscript script in the HTML using the S tag you can have any word or multiple words over here being displayed as the superscript let us say we have more words over here to be present in the superscript so we will say superscript on top and then let me just save this file now and try reloading this page once again as you can see the superscript is having multiple words over here that is superscript on top and that is how we can use the Su tag making text subscript in HTM ml using the sub tag so guys basically the content within the sub starting tag and the ending tag will be return in the subscript so the font size used is the same as the character surrounding it but is displayed half the character's height beneath the other characters so let us check this with the help of example now in the vs code over here what we will do is we will have another statement inside the paragraph tag so over here we will have the P tag in this case and then we will say this text is subscript over here in this paragraph So guys this is a single statement that we have included inside the paragraph let me just save this file now and try reloading this page over here so as you can see this simple statement is being displayed as a paragraph now what we will do is this particular word that is subscript we want to display it as the subscript inside this paragraph So guys what is the difference between the subscript and the superscript so so previously we had seen that the Su tag can be used in order to display the subscript in this way which is displayed on the top now similarly we will be using the Su tag in this case in order to display the subscript word on the bottom right of this is word over here so guys let us make these changes in the vs code so what we have to do is so we need to enclose this subscript word between the sub starting and the ending tag so we will simply have the less than symbol and then we will type sub and then we will have the greater than symbol over here and then what we have to do is I'll just cut this ending tag and paste this over here after this subscript word so let me just save this file now and try reloading this page once again so as you can see the subscript is being displayed so it says this text is and then we have the subscript in this paragraph now guys this is the example with one word we can have multiple words as well being displayed as the subscript so what we have to do is we need to in include those words within the sub starting and the ending tags so over here we say subscript on bottom so basically we have three words over here as subscript when we save this file now and try reloading this page once again so as you can see subscript on bottom is being displayed as the subscript guys the height of this subscript is half the height of the other characters that is being displayed normally in this paragraph but the font size is same whenever the superscripts and subscripts are being displayed in the HTM ml inserted text in HTML using inss tag so guys basically anything that appears within the ins starting and the ending element is displayed as the inserted text over here in the HTML so let us check this with the help of example in the vs code so what we will do is we will simply have a paragraph So we have the P tags over here and then we will say this text is inserted in this paragraph so guys this is a very simple paragraph it is having the statement that is this text is inserted in this paragraph so let me just save this file now go to the browser and reload this page so as you can see we have the extra paragraph that this text is inserted in this paragraph now guys what we will do is we will make this text is inserted only these three words appear in between the ins starting and the ending tag so over here in the vs Cod we will have the start tag that is the inss tag and then we also have the end tag over here we will simply cut this and paste it after the inserted word so basically we have enclosed text is inserted these three words within the inss starting and the ending tag which stands for inserted so guys let me just save this file now and try reloading this page on the browser so as you can see text is inserted is being underlined now and guys this is the meaning of the inss tag so basically whatever content we put inside the ins tag it will be underlined so the functionality of the inss tag is similar to that of the underline tag that is U tag over here since both of them are used in order to underline the text in this case we have used the ins starting and the ending tag over here so guys this is the main functionality of the inss tag deleted text in HTML using the deel tag so guys basically anything that appears within the deel starting and the end ending tag over here is displayed as the deleted text now how it will be displayed let us check this with the help of the example in the vs code over here so let me just provide a simple paragraph over here using the P tag and we will say this text is deleted in this paragraph So guys this is a very simple paragraph that we have written over here in the vs code let me just save this file now and try reloading this page on the web browser so as you can see this is a very simple paragraph that we have added on the browser over here now guys what we will do is we will enclose these three words that is text is deleted in between the D tag which represents the deleted text so over here we will say d and then we will close the starting tag over here and then we also have the ending tag which we will cut and paste it after the deleted word over here so guys basically we have enclosed the text is deleted in between the D starting and the ending tags now how it will appear on the browser let us check that so let me just save this file now and try reloading this page once again so when we reload this page as you can see text is deleted is being stried over here so guys basically this is similar to the strike through that we have seen previously using the S tag and this is how we can mark the text as deleted whenever we are building a web page using the HTML now guys where it becomes important is let's say you want to delete certain words from the paragraph in the article that you have already written so you can enclose it within the D tag and if you want to insert something else instead of the deleted text then you can use the inss tag which will underline the text so basically in the same paragraph we can have some more words over here we can say this text is deleted and then we will say and this text is inserted where we need to enclose this text is inserted inside the inss tag so we will simply say inss over here and then we will have the ending tag after the inserted word so let me just save this file now and try reloading this page once again so as you can see this text is deleted we have it strike through and then we have end this text is inserted so basically we have inserted this text over here within the same paragraph So guys basically this is the functionality of the delete and the inserted Tex text where we want to delete certain words and insert some more words in the existing paragraph larger text in HTML using the big tag so guys basically the content of the starting big and the ending big tag is displayed one font larger than the rest of the text surrounding it so guys let us check this with the help of example now in the VSS code so what we will do is simply we will have another paragraph over here using the P tag and then we will say this text is big in this paragraph So guys we have a simple statement in this new paragraph over here this text is big in this paragraph so let me just save this file now and try reloading this page on the browser so as you can see we have this text is big in this paragraph now guys what we will do is we will have the text is Big that is these three words appear one font size larger than the rest of the text so what we have to do is we need to enclose these three words within the big tag over here so we will move to the vs code and then we will say big in this case so this is the big tag that we can use so basically as you can see since the font color of this tag is red this tag is deprecated in the newer versions of the browser but guys still it can work in certain browsers so let me just save this file now and try reloading this page once again so as you can see the text is big it is being displayed as one font size larger compared to the other text in the the same paragraph now guys if we see what exactly is happening behind the scenes we can simply right click over here and we can use the inspect option so when we use the inspect option you can see under elements the paragraph is being displayed over here using the P Tex and inside this we have this text is big in this paragraph now these three words are being enclosed within the big tag over here and the big tag is being given the font size as larger and this is what is happening behind the scenes the larger value for the font size is making these words appear bigger than the other text in the same paragraph now guys since this tag is deprecated it is recommended that we use the style attribute over here now how do we use the style attribute only for these three words so we will remove these tag first of all and then we can have the span tag over here so instead of the big tag we can have the span tag so we say span and then we have the closing span tag over here after the the big word in this case and then we say this text is Big so guys basically what we have done is we have enclosed the text is Big these three words within the span tag now what will happen after this let me just save this file now and try reloading this page so as you can see this is a normal paragraph now but since we have used the span tag it is used in order to group certain words and apply certain styles to these words over here so what we can do is inside the span tag we can have the style attribute in this case and the style can have the font size so guys what we have seen is the font size value was larger so over here we will again provide a larger value for the font size and then let me just save this file now and try reloading this page once again so now we can see that text is big is appearing as one font size larger compared to the other text in the same paragraph So guys this is the replacement of the big tag that we have seen just now either we can use the big tag or in the newer versions of the browser we can also use the span tag and along with that we can use the style attribute over here we are going to learn more about the style attribute and what are the different properties and the values that we can have inside the style attribute in the upcoming videos as well displaying smaller text in HTML using the small tag so guys basically the content of the small starting and the ending tag is displayed one font size smaller than then the rest of the text surrounding it so guys basically whatever text we enclose within the small starting and the ending tag will appear smaller compared to the rest of the text so let us check this with the help of the example in the vs code over here so the very first thing that we will do is we will have a simple paragraph using the P tag and then we will say this text is small in this paragraph So we have a very simple statement that is this text is small in this paragraph in the P tag that is the paragraph now let me just save this file now and try reloading this page over here so when we reload this page as you can see we have a paragraph this text is small in this paragraph now guys what we will do is we will enclose these three words that is text is small in between the small tag so over here in the vs code we have to enclose it in between the small tag so we will have the small starting tag over here and then we have the ending tag as well which we will put after the small word in this case so basically text is small these three words are being enclosed now in between the small starting and the ending tags over here so let me just save this file now and try reloading this page once again to see how it appears so when we reload this page as you can see text is small these three words are appearing one font size smaller compared to the other text in the same paragraph now guys if we see what is happening behind the scenes we can simply right click over here and select the inspect option so after this we have under the elements tab we have this P tag over here inside which we have the this text is small in this paragraph statement and then guys you can see for this small tag we have the font size that is smaller over here so we can also use the CSS property that is font size with the value smaller in order to make the text appear in the same way just like how we have done for the the text is Big over here so if we check the code for this text is big in this vs code you can see we have used the span tag and then we have used the style attribute over here for which we have used the property that is font size and the value is larger in this case so guys either we can use this CSS property using the span tag or we can simply use the small tag over here which is supported by the latest version the big tag that we have seen previously is not supported with the latest versions of the browser and that is why we had used the font size property inside the style attribute so guys please make sure that you practice on your own so that on different inputs you get different outputs marking text in HTML using the mark tag so guys basically the content of the mark starting tag and the ending tag over here is displayed as the highlighted text on the browser so guys let us check this with the help of the vs code over here how the mark tag works so let us add a simple paragraph using the P tag so we will say this text is marked in this paragraph So guys this is a very basic statement that we have included within the pag and it will appear as a paragraph on the browser let me just save this file now and try reloading this page on the browser so as you can see we have this text is marked in this paragraph now guys let us say we want to provide the text is marked these three words in between the mark starting and the ending tag so what we have to do is in the vs code we will simply enclose this text is marked over here within the mark tags so we say the mark starting tag over here and then we cut this and paste it after the marked word over here so we have the starting and the ending Mark tags and then we have text is marked which is enclosed Within These tags over here so let me just save this file now and try reloading this page once again on the browser so as you can see text text is marked is being highlighted as yellow and this is the functionality of the mark tag so whatever text is present in between the mark starting and the ending text it will be highlighted in yellow as you can see the background color is yellow over here now guys what exactly is happening behind the scenes so let me just right click over here and click on the inspect option you can see the exact CSS property over here the background color is being used as the mark value and the color property is given the value as the mark text so guys the same thing we can do for this text is small in this paragraph as well so what we can do is simply we will come in this vs code and over here instead of using the mark tag in this case we will use the background color property inside the style attribute so we have the style attribute for this paragraph that is this text is small in this paragraph over here and we say background color in this case so we say background color it is Mark so let me just save this file now and we will check what what is the effect of this inside this browser so when we reload this page as you can see this paragraph that is this text is small in this paragraph the entire paragraph is now having the background color that is yellow which is being depicted by the value of Mark of the background color property inside the style attribute so guys this is the main functionality of the mark tag it helps us in order to highlight the required text that we want to highlight based on our requirements how to commment code in HTML now guys the comment tag is used to insert the comments in the source code now the comments are not displayed in the browsers so basically we are going to provide the commands in our HTML source code over here in the vs code but the same thing will not be displayed when we are going to see our web pages in the browser so guys basically what is the functionality of the command now you can use the commments to explain your code which can help you when you edit the source code at a later date so basically you can provide certain commments in order to explain what kind of code you have written so that you can edit it at a later stage now this is espcially useful if you have a lot of code over here another functionality of having the commands is to make someone else understand what you have written in the code for the review purpose as well so whenever you are going to write the HTML code it will be reviewed by your seniors so in order to make them understand what the HTML code section is doing you can provide the comments in order to explain its functionality so guys over here as you can see this is the example so this is a comment and the comments are not displayed in the browser so you can see this entire statement being enclosed in between the commment Tex over here we have the less than sign and then we have the exclamation mark And Then followed by two times hyphen over here so this is the starting tag and then we have the ending tag over here as the two * hyphen and then we have have the greater than sign so guys basically whatever content is present in between these starting and the ending comment tags those will be commented out and will not be displayed on the browser so guys let us check this with the help of example now over here so let's say we add another paragraph in between these two paragraphs over here that this text is small in this paragraph and then we have this text is marked in this paragraph now we will have another paragraph in between them using the P tag we will say say this statement needs to be commented so we have simply provided this simple statement this statement needs to be commented in between the P teag which means it is a paragraph so let me just save this file now and try reloading this page over here so as you can see we have this paragraph this statement needs to be commented now guys what we will do is we will comment out this statement so what we have to do is over here before the starting P tag we have to provide the the comment tag over here so how do we provide the comment tag we have the less than symbol followed by exclamation mark and then we have two times hyphen over here and then as you can see automatically we have the ending commment tag as well that is two * hyphen and Then followed by the greater than symbol so we just need to cut this and paste it after the ending tag of this P tag over here as you can see for now we have the starting command tag and all the HTML code after this is being displayed in the green color which means these text will be commented out but we need to provide the ending comment tag over here after this particular statement so we need to provide the ending commment tag over here so as we provide the ending tag over here you can see only this P tag is being displayed in the green color so guys let me just save this file now and let us see what happens now after reloading this page so as you can see the statement that we had written is now commented out and that is why we cannot see see that statement over here on the browser so guys this is the functionality of the comment tags over here we can simply provide certain explanation as well in between the commment text in order to explain the functionality of the HTML code that we have return now guys in the browser you can see where the comments are by viewing the page source of the HTML code so over here we can simply right click and choose the inspect option so as you can see under the elements tag over here we can see this P tag that is present and then we also have the comment tags over here which depicts that this particular HTML code is commented out now guys we can also see the page source so when we right click and select the view page Source option as you can see on the new tab we are seeing the page source so over here we have the comments that this statement needs to be commented and it is commented out though we are not able to see it on the browser but we can see on the page source of that HTML div tag in HTML in order to group the content so guys basically the div and the span elements allow you to group together several elements over here to create sections or subsections of a page so basically this div and the span tags are used in order to group the content inside your HTML source code which we are going to check with the help of examples as well now guys for example you might want to put all of the footnotes on a page within a div element to indicate that all the elements within that div element relate to the foot noes and with this foot noes you might then attach a style to this div element so that they appear using a special set of style rules so guys basically the div tag is used in order to group the content in the HTML source code and in order to provide the common set of style rules over here you can provide the style attribute inside the div tag so that all the the tags inside the div tag will have the same style property so guys we will check this with the help of example now in the vs code so what we will do is simply I'll remove all these lines of code that we had written previously as part of formatting the text in the HTML now what we will do is simply we will have two paragraph over here so the first P tag that is the starting P tag we will say this is first paragraph and then guys we will have another paragraph over here so again we will have the P tag and we will say this is second paragraph So guys we have two paragraphs over here this is the first paragraph and this is the second paragraph now let me just save this file now and try reloading this page over here so as you can see we have two paragraphs being displayed over here now guys what if I want to provide certain color to the first paragraph let's say I want to provide the font color as blue over here so what we will do is simply we can come to this p t and we will say style in this case the style attribute is used in order to provide the background color or the text color or the various properties as you can see over here being suggested by the vs code so in this case we will say color property so we have the color property and let's say we provide the value as blue over here so guys this is the key value pair for the style attribute that is color is the property and blue is the value over here so let me just save this file now and try reloading this page once again so as you can see this is first paragraph is being displayed in the blue color now so guys basically this is the way in order to provide the color to any particular paragraph or any other HTML element now guys let's say you wanted to provide the same color to the second paragraph as well so one more option was to provide the same attribute that is Style with the color property and the blue value to this second paragraph as well so I'll just copy this and paste this over here inside the P tag of the second paragraph now let me just save this file now and try reloading this page once again so as you can see the blue color is being assigned to the second paragraph as well now guys let's say we have more paragraphs in this case so I'll just copy this and paste this over here in the remaining lines but this time we are not having the style property for the other paragraphs so I'll simply remove the style properties from all the remaining paragraphs and we will name name the paragraphs as third paragraph then we have fourth paragraph over here and then we have the fifth paragraph So guys let me just save this file now and try reloading this page so as you can see we have more three paragraphs being displayed but the colors are blue only for the first and the second paragraph what if we want to provide the blue color to all the paragraphs over here now guys it will be a repetitive task if we simply go on applying all the Styles and the colors to the remaining paragraphs over here so simply what we can do is I'll just remove the style attribute from both these paragraphs in this case and now we have the simple paragraphs without any color over here let me just save this file now and try reloading this page as you can see the color is black by default now guys let's say we want to provide the blue color to all the paragraphs in an easy way so what we can do is we can group them in between the div tags so over here we will come in the source code and we will say div tag over here so div tag helps us in order to group the HTML content and that is what we are going to do in this example as well so we have the starting div tag and the ending div tag we have to cut it from here and paste it after the fifth paragraph in this case so guys let me just format it properly so that it is in a good readable format so as you can see after this body we have the div tag and inside this div tag we have five paragraphs over here and then after that we have the div tag that is closed now guys what will be the impact of this div tag so let me just save this file now and try reloading this page so nothing is happening over here that's because behind the scenes only we have grouped the content that is all the five paragraphs are being grouped inside one div tag now guys what we can do is we can simply provide the style attribute over here to the div tag so that it applies to all the paragraphs over here so simply we will come to this div tag and then we will say style attribute and and then we can say color over here which is one of the properties of the style attribute and then we can say blue that is the value we want to apply to all the paragraphs that is the children of this div tag so guys basically this div tag is the parent tag over here and all these tags that is inside the div tag are the child tags so let me just save this file now and try reloading this page once again so as you can see all the paragraphs are being displayed with the blue color now and we do don't have to provide the style attribute separately to all the paragraphs that we were supposed to do earlier without the div tag so guys basically this is the main functionality of the div teag it helps us in order to provide certain formatting or the style to the child text that is present inside the div tag now guys let's say we want to display all these paragraphs at the center of the browser so what we can do is again inside the style attribute we have something called as text align property so as you can see we have this text align property and then it is having one of the values as Center so we can provide the center value so let me just save this file now and try reloading this page once again so over here when we reload this page as you can see all the paragraphs are being displayed at the center of the browser now guys similarly you can provide any of the formatting or the styles to all these paragraphs you can also provide the style to the individual paragraph as well so let's say we want to display the four fourth paragraph over here that is this is the fourth paragraph at the right of the browser so we simply have to come to this P tag and then we will say style and then we will use the text align property once again and we can simply provide right value over here so let me just save this file now and try reloading this page as you can see this is fourth paragraph is being displayed on the right of the browser and this is how we can provide the formatting so basically whatever formatting is being provided to the parent tag over here those will be applied to the child tags as well but in case a child is having their own formatting or the style attribute so it will be applied separately only to that child element and that is what we have seen just now with this fourth paragraph over here we have displayed it on the right and let's say we want to change the color of this fourth paragraph instead of this blue color we want to display it with the red color so we have to come over here inside the style attribute and we use the color property and we can simply provide the red value over here so let me just save this file now and try reloading this page so as you can see this is fourth paragraph is being displayed with the red color now so this is the functionality of the div tag over here basically it helps us in order to group the content of the HTML source code and apart from that you can provide the required formatting and the style attribute as well with the required property values based on your requirements spend pan tag in HTML to group The inline elements so guys basically the span element can be used to group inline elements previously we had seen the div tag that was used in order to group The Block elements now guys what is the difference between the block and the inline elements over here so basically this P tag which depicts the paragraph in the HTML is the block element which means whatever content we write inside the starting and the ending P tag will be followed by a new line and that is why we call it as the block element so over here as you can see the first paragraph Was displayed and then the control went to the next line and then the second paragraph Was displayed so these are nothing but the block elements over here now when we talk about the inline elements these four words by themselves are the inline elements over here so let's say when we want to provide certain different style attribute to this first word we can use the span tag in order to provide the style attribute and that is what is the meaning of the styling of the inline elements that can be done by using the span tag over here so if you have a part of a sentence or a paragraph which you want to group together you could use this Spen element and you can provide the different CSS property to this pen element as well so as you can see also you can use pen for using different CSS properties in same sentence of a paragraph So guys let us check this with the help of example now in this vs code code so what we will do is simply I'll remove the style attribute over here from the div tag as well as from this P tag which is the fourth paragraph over here so basically we have these five paragraphs in the source code let me just save this file now and try reloading this page once again so as you can see these five paragraphs are being displayed normally with the black color and there is no CSS property of the style attribute being applied over here now guys what we will do is I will modify the parag over here and we will say this color is green in this first paragraph So basically we have modified the statement and we are saying this color is green in this first paragraph now guys in the second paragraph what we will do is we will have this background color is red in this second paragraph so over here we are saying background color is red and over here we were saying color is green in this case so guys let me just save this file now and try reloading this page once again so as you can see the statements are updated now and the paragraphs are modified now guys let us say we want to provide the color as green to these three words that is color is green over here so how do we do that so simply if we provide the style attribute to this P tag then the entire statement will be displayed as green over here so I'll just show you that so we can provide the style at attribute and then we can say color as green in this case so when we provide the color as green let me just save this file now and try reloading this page you can see that the entire first paragraph is being displayed with the green color now but what if we only want to provide the green color to these three words that is color is green so what we have to do is we can use the span tag over here so simply I'll remove the style attribute from the P tag over here and then we can provide the span tag so we will say Span in this case so we have the starting span tag and then the ending span tag needs to be cut and we need to paste it after the green word over here so basically color is green is being surrounded by the span tag now let me just save this file now and try reloading this page once again so you can see there is no difference right now since we are not providing any attribute or The Styling to the span tag for now so what we have to do is inside this starting span tag we need to provide the style attribute and this style attribute will have the property that is color since we want to provide the font color as green so over here the color attribute will have the value as green in this case so let me just save this file now and try reloading this page once again so as you can see color is green is being displayed now in this green color and the rest of the words are still being displayed with the black color and guys that is the the main functionality of this span tag in order to provide certain styling or the formatting to the inline elements over here we can use the span tag similarly we can provide the background color as red over here in the second paragraph so what we can do is we will come over here and then before this background word we will provide the span starting tag and then we will cut the span ending tag over here and paste it after the red color so when we paste it after this so we need to provide the style attribute before providing the style attribute let me just save this file now and try reloading this page so nothing has happened over here for now but what if we provide the background color as red to this pen tag so when we provide the style attribute and the property that is supposed to be used is the background color over here and we simply provide the value as red in this case since the background color needs to be red so let me just save this file now and try reloading this page so as you can see background color is red is now having the background color displayed as red over here based on our requirement so guys this is another way in order to use the span element how to inspect HTML elements in browser so guys basically we can easily inspect or see the properties or the attributes of any existing HTML code via browser so guys in this video I'm going to show you how we can see the code of the existing web page that is being displayed with the required properties and the attributes and we can come to know like what is exactly written behind the scenes in the HTML source code so basically it also helps us to understand the existing web pages with their structure and The Styling so guys over here previously we had seen how we can use the div tag and the span tags as well in order to group the content in the HTML source code so over here you can see this color is green in this first first paragraph and then we have this background color is red in this second paragraph so how you can inspect these elements and see the HTML source code that is being written behind the scenes so simply we have to come over here get the cursor on the required paragraph that you want to see the source code for and then we have to right click over here and you can see the inspect option so guys basically this inspect option will be present on all the modern browsers currently we are using the Chrome browser over here but when you are using the other browser such as Firefox or Microsoft Edge or any other browser in your operating system you will be able to see this inspect option so we need to click on this inspect option so after clicking on the inspect option this particular section will open and inside the section you have to come to this elements section it can so happen that by default you are on the console or the sources section in this case but you have to come to this elements section over here here and then you can see the entire HTML source code so over here you can see the HTML tag which is the parent tag over here and then we have the two tags that is the head tag which is having the title that is formatting in HTML so you can see formatting in HTML title being displayed over here and then guys we also have the body in this case so you can expand the body as well and then you can see first of all we have the div tag inside the body and then we have the first paragraph tag so when you click on this you can see that the first paragraph is being highlighted over here so we need to expand this first paragraph and then you can see this word and then we have the span element in this case that is the starting and the ending tag so over here the HTML content is color is green and then guys you can see something different over here you are seeing the style attribute in this case so basically the style attribute is having the property that is color for which the value is being given as green and on the right hand side as well you can see element do style that this particular elements style is being set as the color property is given the value as green color over here similarly we have another paragraph as well so when we go on the second paragraph you can see the second paragraph is being highlighted over here above so when we get the cursor over here the second paragraph is getting highlighted and this is one of the best ways in order to inspect the element and see what code is written behind the scenes in order to display this particular paragraph or any other HTML tag in this way now what is making this paragraphs content that is background color is red with the background color as red over here so let us check that so when we go to this paragraph and we expand this paragraph we can see this pan tag over here for which the style is given as background color is equal to Red so when we click on this pan tag you you can see background color is being showed as red over here you can also uncheck this option on the right you can see so when we click on this you can see that the background color that was red over here is not being displayed that's because we have unchecked that option and in the source code you can see it is now commented out over here and there is no background color that is being applied now again when you check on this option the background color that was red is set again over here on the browser so guys this inspect option also helps you to play around with the code over here that is already written on a particular web page and you can see what is the effect of unchecking and checking certain options over here now we can also come over here and provide some more properties so let's say we want to make the text color as yellow over here along with the background color so we can simply provide the color property over here and then we can simply provide the yellow value so as you can see automatically the yellow color is being applied to this text in this case that's because we have provided this property now we can simply uncheck and check these options over here once again so when we uncheck this background color the background color is gone now and you can see the text color is yellow in this case when we uncheck that text color is yellow so we can see the text color is black by default so guys this is the way you can play around with the CSS properties as well by using the inspect option of the browser and guys if you see the source code that was written in the vs code over here this is the same source code that you can see when you choose the inspect option on the browser so in this way you can inspect any of the web pages on the internet that is present in order to learn something out of it and make changes in order to play around and check how the text looks like on those web pages style attributes in HTML so guys basically the HTML style attribute is used to add styles to an element such as color background color or font size and many more properties that we are going to check with the help of examples as well now guys this is the format we first of all have the less than symbol followed by the tag name that we have been using in the previous videos as well now guys in this starting tag we have the space character and then we have the style attribute so basically we need to provide the style attribute followed by the equal to symbol and all the styling properties must be present in between the double codes so over here we have the double codes and Within These double codes we are having the key value pass that is property followed by colon and then value and then if we have the multiple key value properties those must be separated with the semicolon in between the double quotes over here so guys let us check this with the help of examples now so first we are going to check the background color over here so we are going to come to this vs code and we simply have the HTML parent tag over here and then we have the head tag as well and inside the title tag we are going to change the title of the page that is we are going to say Styles in HTML so guys we have the title that is Styles in HTML and then guys over here inside the body we will simply have the paragraph and we will say this paragraph has background color as red so guys we have the content as this paragraph has background color is red over here so let me just save this file now and try reloading this page on the browser so as you can see we have the title that is Styles in HTML and the paragraph is being displayed as this paragraph has background color as red now guys to make this paragraph have the background color as red what we can do is we will be using the style attribute so in the vs code we will come over here and as we have seen in the format with the start tag we have the space character followed by by the style attribute and then we have the property value pirs over here so basically inside this starting P tag we will have the space character and then we will say style attribute over here as you can see VSS code is suggesting us the style attribute so we are going to select this and then automatically we are getting this equal to symbol and the double codes over here since vs code is helping us in order to complete this code so basically we are going to use the B ground color property in this case and then the value that we are going to use is after the colon we are going to have the value that is red over here so guys basically as you can see this is the format we have the style attribute followed by equal to symbol and then in between the double codes first of all we have the property and Then followed by the colon and then the value that is red color and then automatically the semicolon is also placed so if you have more properties to be applied after the semicolon you can provide more properties so over here this is the code that we have completed with the background color that is red for this paragraph so let me just save this file now and try reloading this page over here so as you can see the paragraph is having the background color as red and since it is a block element the entire width of the screen is being taken and the color red is being applied over here to the background now guys let us check another property we also have the color property over here here which will change the text color for the element to which we have applied this color property so guys let us have another paragraph in our source code so we have the P tag over here and then we say this paragraph has color as green so guys we are going to provide the text color as green over here so what we have to do is first of all simply we will save this file now and try reloading this page so as you can see we have another paragraph over here it says this paragraph has color as green so we are going to change the text color now so how do we do that simply we have to provide the style attribute to the starting tag of the paragraph So we have the style attribute and then we use the color property and the value that we have to provide as green color so over here we have provided the value as green so let me just save this file now and try reloading this page once again so as you can see the color is being displayed as green now for this particular paragraph that this paragraph has color as green now guys let us move to another property we also have something called as font family which means it is the font style so basically the default font family for this particular paragraph that are being displayed is the Times New Roman we will be applying some other font family to another paragraph over here so let's say we have another paragraph with the P tag and we will say this paragraph has different font family so guys we have another paragraph gra over here this paragraph has different font family when we save this file now and try reloading this page it is having the same font style that is the font family over here so we are going to change the font family in this case so again we have to come over here in the start tag we will say style and then we will say font family in this case so as you can see it specifies a prioritize list of font family names or generic family names so we are going to select this the default font family that we are using right now is the Times New Roman but instead of this let us say we want to provide something else so let's say we want to provide this aial font family so we select this value and then when we save this file now and try reloading this page once again so as you can see the font family for this particular paragraph has been updated now so this is the way that you can update the font family of a paragraph or any other tag based on your requirements now guys let us move to another property we have something called as font size over here so guys by default the font size that is being displayed on the web browsers is having the 100% as the value so what we can do is we can come over here for the second paragraph that is this paragraph has color as green we are going to increase the font size so simply we have to come over here after the semicolon we provide the space character so that it is more readable so simply we have to provide the font size property over here and when we provide 100% no change will be observed on the web browser so when we save this file now and try reloading this page as you can see the font size is same as the previous one that's because by default the font size is the 100% let's say we want to increase the font size by 50% and make it 150% over here so when we do it as 150 the font size for this particular paragraph will be increased to some extent so let me just save this file now and try reloading in this page so as you can see the font size for this particular paragraph has increased now so guys this is one of the ways in order to change the font size of a particular paragraph or any other HTML content guys instead of using the percentage we can use the pixels as well percentages are used when we want the web pages to be responsive and on the mobile we want the size of the different elements of the web pages to adjust on their own but when we use pixels over here fixed pixels will be used so basically when we provide 20 pixels in this case so let's say we provide 20 PX in this case let me just save this file now and try reloading this page so basically the font size will be fixed over here based on the resolution of the screen in this case so guys it depends on you which one you want to use whether you want to use the percentage or the pixels but basically for the best case scenario if you want your web pages to be viewed properly on all the screen resolutions such as desktop or laptops or mobile devices as well you should be using the percentages so that it is responsive in nature so let me just save this file now and try reloading this page once again so basically this is the font size that is increased to some extent compared to the default font size over here let us move to another style property so we also have something called as text align which will help us in order to align the HTML element so guys what we will be doing is let's say we want to display this third paragraph that is this paragraph has different font family at the center of the browser so what we can do is simply we have to come over here in the source code and after this font family property we can simply provide the text align property so we have text align property and the value that we are going to use is Center in this case so when we use Center then this particular paragraph should be displayed at the center of the browser so let me just save this file now and try reloading this page so as you can see this paragraph has different font family is now being displayed at the center of the browser so guys this is the way that you can use the different properties and the values inside the style attributes for different HTML elements based on your requirements without the style properties you will be able to write the simple content on your web pages but with the style properties you will be able to provide certain styling and the formatting to those elements quotation and citation elements in HTML so guys we are going to see number of tags over here in this video to understand what are the different tags and their meaning so the very first tag is the blog code tag so as you can see the HTML block code element defines a section that is qued from another source so if you want to quote a particular section from another source in your HTML page you can use the blog code tag over here now the browsers usually in indent the block code elements so basically there is certain indentation on the left hand side while we are displaying the content inside the block code tag so guys let us check this with the help of example now in the vs code over here so inside the body we will first of all have the paragraph So we have the P tag over here and then we will have below content is within blog code so guys we have below content is within block code after this paragraph We will have the block code tag so as you can see we have the block code tag that is being suggested by the vs code over here so we will use this and then we will say this content is from another source and then let us say we want to go to the next line so we will have the BR tag over here and then after this BR tag what we will do is we will say this is another statement in Block code so guys basically we have two statements over here inside the block code tags so let me just save this file now and try reloading this page on the browser so as you can see we have the first paragraph that is below content is within block code and then you can see this content is within the block code and on the left hand side we can see certain indentation over here so guys whenever you want to mention certain information from another source you can mention it within the block code so that it is understandable by the other developers as well that this particular content is from another source that is taken from the internet and guys that is the usage of this block code tag over here now guys let us move to another tag so as you can see we have the Q tag as well so the HTML Q tag defines a short quotation so basically browsers normally insert quotation marks around the quotation so whenever we have certain content in between the starting and the ending Q tag over here so that content will be enclosed within the double codes so let us check this with the help of example now over here in the vs code so guys we will have another paragraph so we will Define the P tag over here and then we will say this text is within double codes and then we will say in this paragraph So guys this is a very simple paragraph that we have defined let me just save this file now and try running this code just to to show you how it looks so basically this is another paragraph it says this text is within double quotes in this paragraph but we have not used the Q tag for now so basically we want to enclose this particular string that is text is within double Cotes in between the double quotes over here so what we have to do is we need to enclose this text in between the starting and the ending Q tag so let us come to the vs code over here the starting Q tag is being defined and the ending Q tag we need to provide after this codes word so guys let me just save this file now as you can see we have enclosed only this substring in the entire paragraph in between the starting and the ending Q tags so let me just come to the browser and reload this page so as you can see we are now getting the double codes for this substring in this entire paragraph over here and that is the main functionality of the Q tag in order to provide the double Cotes in between the content where it is applied in our HTML source code now guys let us move to another tag over here so we have something called as abbr tag so the HTML abbr tag defines an abbreviation or an acronym like HTML CSS Etc so guys basically whenever you have certain abbreviation or the acronym to be defined you can use the abbr tag and then you can provide the full form as well so let me just come to the vs code over here we will write another paragraph So we have the p bag and then we will say this page is return in HTML so basically the source code of this particular page is in HTML and that is what we have written this page is written in HTML now guys what we want to do is certain users won't be knowing what is the full form of this HTML so we can enclose this HTML word in between the a br starting and the ending tag so guys over here we will mention AB BR r tag over here and then the ending tag will come after the HTML word so guys basically we have provided the abbr tag now what happens when we reload this page so let me just save this file now and reload this page on the browser so it is displaying it as a normal paragraph over here and we are getting this HTML word as well but we are not getting the full form of this abbreviation so what we can do is we can come over here in the vs code and inside the abbr tag we have the attribute called as title so as you can see it contains a text representing advisory information related to the element it belongs to so basically we can provide the title in order to give the full form of this particular HTML word so let me just provide this title and we will say hyper text markup language which is the full form of HTML because we have the full form that is hyper text markup language so when we provide the title inside the this abbr tag let us see what happens now let me just save this file now and try reloading this page on the browser once again so as you can see it is now underlined with the dots over here that is the HTML word is underlined and when we get the cursor on this HTML word now you can see that hyper text markup language that is the full form that we have provided in the title attribute is now being displayed to the user and guys this is the main functionality of this abbr tag it helps you to provide the full form of certain words that is the abbreviations and the acronyms can be represented by this tag so guys you can use this tag based on your functionality and the requirements now let us move to another tag over here we have something called as address tag as well now the HTML address tag defines the contact information for the author or the owner of a document or an article so guys let us try using this address tag now so what we will do is after this paragraph We will have the address tag over here so we can use the address starting and the ending tag and then guys what we will do is we will simply say YouTube channel name and then colon and then on the next line we will say programming for beginners which is the name of this YouTube channel which you should definitely subscribe if you have not done so in order to learn a lot about the web development and other programming languages and then we will also have editor which we use use as vs code so guys basically this is just an example that I am showing you in reality you will be using the exact address of certain person or the company based on your requirements that you want to display the information on the page so this is just an example that we have taken in order to see how it looks on the web browser so guys let me just save this file now and try reloading this page once again on the browser so as you can see the address tag makes the content to be displayed with the it sized formatting on the text now guys the entire content is being displayed on one single line so what we can do is we can provide the BR tag over here so at the end of the lines we can simply provide the VR tag over here and now let us save this file now and try reloading this page once again so as you can see the entire content now is being displayed on the different lines over here inside the address tag which is formatting the text and displaying it on the browser as the itally sized text now let us move to another tag over here so we have something called a site tag as well now the HTML site tag defines the title of a creative work so for example a book a poem a song a movie a painting Etc so basically the text in the site element usually renders in italic so guys again we have another tag that is site tag which will help the element to be displayed as itally sized text so guys let us check this now with the help of example in the vs code over here so we will simply have another paragraph and then we will say this video is created by programming for beginners YouTube channel so we have programming for beginers YouTube channel so guys basically we have a very simple paragraph over here that we have defined let me just save this file now and try reloading this page on the browser so as you can see this is a very simple paragraph guys as we have just seen the site tag it helps us to define the title of a creative work so it can be any author a book a poem so basically what we are going to do is we are going to apply the site tag for this programming for beginners because this is the YouTube channel that is helping us right now in order to learn HTML with the help of these videos so guys what I'm going to do is we will have the site tag over here so we have the side starting tag and then I'll just cut this and paste it after the big word over here and then let me just save this file now and try reloading this page on the browser once again so as you can see now the programming for beginners this text has been formatted with the itally sized text and this is how the content in between the site tag will be displayed whenever you are going to use it based on your requirements so Guys these were certain quotation and citation elements in the HTML that you can use based on your requirements the block code helps us in order to quote some other information from another source and then we also have the Q tag that will just enclose the string in between the double quotes over here and then we have also used the abbr tag which will help us in order to display the abbreviations and the acronyms in HTML we also have the address tag that can be used in order to display the contact information of an individual or a company or an organization as well and then lastly we have the site tag in order to display the name of the poem or any other creative work that has been done Block versus inline elements in HTML in order to display the values so guys basically there are two display values in HTML one is the block element and another is inline element so we are going to understand what is the difference between these two display values over here in HTML now guys as far as Block Level elements are concerned these always starts on a new line and the browsers automatically add some space that is a margin before and after the element so basically the two commonly used block elements are the P tag which is for the paragraph and the div tag that is used in order to group the content on the HTML now guys let us check this with the help of example now in the VSS code so over here I have defined the title as Block versus inline elements and now what we will do is we will have the P tag over here and and then we will say this is simple paragraph So guys we have written a simple paragraph with the help of a P tag over here now guys let us say we have another tag that is the div tag in this case which is used in order to group the content on the HTML so when we use the Dev tag inside this we will be using some another tag over here so let's say I use another paragraph tag and then we will say this is another paragraph inside div tag so guys basically this div tag is used in order to group the content so let me just save this file now and try reloading this page on the browser so as you can see we have this is a simple paragraph and then we also have this is another paragraph inside div tag if you notice we did not provide the BR tag that is used in order to break the line so basically the browser displayed both these paragraph and the div tag on separate lines over here AO automatically without the user providing any BR tag so that these two elements are separated and guys that is the meaning of this block type element if we go and check in the inspect option as well and when we get the cursor over here on the first P tag the region that is highlighted in blue color that is the main paragraph over here using the P tag and the region that is highlighted with the light orange color that is the margin that is provided automatically by the browser the same thing will be applied to the other P tag over here as well as you can see the one that is inside the div tag now it is being highlighted with the blue color but then we also have the margin at the top and the bottom with the light orange color and that is how the block elements are displayed on the browser now let us see how the inline elements will be displayed so basically an inline element does not start on a new line an inline element only takes up as much width as necessary so basically it will not start with the new line unlike the Block Level Elements which starts with the new line and also it has the ending margin as well and these inline elements will only take as much width as necessary over here we have seen with the block elements that the entire width of the screen is being taken by the P tag and the div tag as well but the inline element will take the width that is necessary in order to display it on the browser so commonly used inline elements are the span tag and the a tag so guys let us check this with the help of example now now guys let us say after this div tag we directly want to provide the span tag over here so when we provide the span tag we will say this is a span tag now let me just save this file now and try reloading this page once again on the browser so as you can see this is a span tag is being displayed over here after the div tag so basically this div tag was displayed which is having the paragraph and then we have the span tag over here which is displayed right now so this is on another line that's because we have provided the div tag and it is having its own margin at the bottom right now as you can see being displayed using the light orange color now guys let us say we have another span tag over here after this first span tag so what we will do is we will have another span tag over here and then we will say this is another span tag now guys what we will do is we will also have the full stop over here after the first span tag since the second span tag will also be displayed on the same line so that we can differentiate both of them now let me just save this file now and try reloading this page once again so as you can see the another span tag that is this is another span tag over here is being displayed on the same line and that is the meaning of the inline element so it continues on the same line wherever it is being displayed in the source code and also it takes as much with as necessary so if we get the cursor over here you can see only the blue part that is this is span tag is being highlighted over here again this is another span tag is being highlighted over here and not the entire width of the screen is being taken unlike what we have seen in the P tag you can see the entire screen withd is being taken and the color is till the end of the screen on the right so guys this is the main difference between the block and the inline element over here we have another element that is the a tag which is used in order to display certain link so if we provide the a tag over here and then we can simply provide this is a hyperlink so guys we also call it as hyperlink since it is used in order to link to another source where we can navigate to we will be checking the a tag in the upcoming videos as well so that you get to learn more about the a tag now let me just save this file now and try reloading this page once again so as you can see the a tag content is also displayed on the same line since it is the part of the inline element in HTML currently we have not given the href attribute value over here to which we want to navigate to when the user clicks on this link on the web browser so we will be learning more about it in the upcoming video as well but this is the main difference if we see the block elements they are being surrounded by the margins on the top and the bottom and also it takes the width of the entire screen as well but with the inline elements they don't have any top margin or the bottom margin over here and they will take the width that is necessary to be displayed and not the entire width of the screen colors in HTML and we are going to see the background color text color and Border colors as examples so guys basically the HTML colors are specified with the predefined color names or we can also have the RGB values which stands for red green and blue component we also have the hex values as well and other color systems such as hsl rgba or hsla values so guys let us check this now with the help of examples in the vs code the very first thing that we will be checking is how we can set the background color over here so guys over here in the VSS code let's say to the body of this HTML page we want to provide certain background color so we come to the starting tag of the body and then we provide the style attribute and inside the style attribute we have something called as the background color property so this property we are going to use and how we can define the color is by using the color names or we can also use the RGB or the hex values over here so the first example that we are going to see is by using the color names so over here you can see that there are various color Nam that you can use so we will be using the aqua color in this case so guys over here you are just defining the color name you can also provide the red color as well so as you can see red color is being displayed or we can also provide green color so we have the variants of green color such as green or green yellow so in this case we will be using the aqua color as it will look decent as the background color over here so let me just save this file now and try reloading this page so as you can see colors in HTML is the title and we can see the background color of the body as the aqua color and this is one of the ways in order to provide the color by using the color names over here we can also adjust the colors as you can see it is showing us the RGB values and this is the RGB value for this particular color now guys let us see another way in order to use the color that is by using the RGB values and we will be using the text color in order to see the example so let's say we have one paragraph over here so we use the P tag and then we will say this is one paragraph on HTML page so guys this is a very simple paragraph that we have written it will be in black color by default so let me just save this file now and try reloading this page once again so as you can see this is one paragraph on HTML and it is black in color let's say I want to change the color to some other color by using the RGB values so how we can do that so we come over here on the VSS code and inside the starting pte we again provide the style attribute and then in order to provide the text color we will be using the color property so you can see it sets the color of an element's text so basically in order to change the text color we can use the color property so we use this property and then in order to mention the value of color using the RGB values we can use R GB as you can see it creates a color from red green and blue values so these are the combinations of the red green and blue values over here so if we hover over this you can see that RGB value is 255 and then 0 and 0er which means the full component of red color is being taken over here and the green and the blue components are zero when we hover over this green color it is showing 128 as the green color it is not at the full capacity but we can drag this over here and we can use the 255 component of the green color as well as when hover over the blue color over here so it says 255 of the blue color component and we have 0 component of the red and green colors respectively so guys we can provide the numbers over here in the sequence of red green and blue so let's say I want to display this paragraph in red color so the maximum number that we can provide is 255 the range is from 0 up to 255 and then let's say I want 0% of the green color and 0 % of the blue color so it is a pure red color that we are defining over here in the RGB format so let me just save this file now and try reloading this page once again so as you can see red color is being displayed over here let's say we want to add certain component of green color as well to this red color so what we have to do is we come over here in the green component instead of zero let's say I provide 50 in this case so to some extent this color will be updated on the browser browser so let me just save this file now and try reloading this page so we are not able to notice the color change over here that's because the green component is increased slightly what if we provide the value that is 200 over here what happens so as you can see it is updated to yellow color now so let me just save this file now and try reloading this page you can see that it is being displayed as the yellow color now and let's see we provide the 200 of the blue component as well so it has changed to some other color over here right write down so guys this is the way you can play around with the RGB values as well over here for now I will just keep it as red so that it matches with the background color and we can clearly see the text over here inside the paragraph so you can check what are the different colors when you are defining the green and the blue components as well along with the red components in the RGB format of the color now guys let us move to another task let us see how the Border colors can be mentioned and we will be using the hex value in this case so basically in order to provide the border for this paragraph what we will be doing is we will provide the border to this paragraph over here so inside the style we have to provide the Border attribute and it is having certain values the first value is the width of the border so let's say we provide the 2 pixels as the width of the border and then let's say we want the border to be solid you can also have the dotted Borders or the double Borders or the dashed borders as well but for now we will be having the solid bers and then after that we will be mentioning the color now guys how do we mention the hex color so let us check that so over here I have provided hex value of green color on Google so you can see that certain green color values are being displayed over here and you can find multiple websites that will provide you the shades of the different colors based on your requirements in the hex format so over here you can see the hex code and the corresponding RGB code as well so let's say I want to use this particular hex code the red component is zero the green component is 80 and the blue component is zero so let me just copy this and paste this over here so guys basically what is the meaning of this hex code so after this hash character the first two characters will be the red component zero means it is not having any percentage that means it is the 0% of the red color then 80 means to some extent we are having the green color over here the maximum can be 2 * F in this case so basically it ranges from 0 up to F if we see the characters and then over here the last two characters are the blue component again it is ranging from Zer up to F so guys if we provide all zero characters over here it will turn out to be a black color that's because we don't have any of the components of the red green and blue colors and if we provide 6 * F so over here we have 6 * F so all the components are being used over here with 100% of their contribution that is red green and blue and it will turn out to be a white color in this case we will change it back to green color now so let's say we provide 0 0 and then if we use the pure green component we have to provide two * F in between the third and the fourth character and then the last two characters will be 0 0 so it is red green and then blue so guys we have the green color right now as the Border color so let me just save this file now and try reloading this page you can see that the border of this paragraph now is having the two pixels width and it is green in color we can have the color little darker over here so again we will change it back to 80 in this case that we had copied so it will make the Border color as little darker so let me just save this file now and try reloading this page so as you can see we are seeing the dark green color of the border of the paragraph So Guys these are certain ways in order to use the color names or the RGB values or the hex values as well now guys apart from this you can also use the hsl value or the rgba value now a over here stands for Alpha which will Define the opacity of the color to some extent so guys I'll leave this up to you as a homework for you so that you can practice on your own the other color values as well links in HTML that are clickable using the a tag so guys basically links that are also called as hyperlinks in HTML allow users to click their way from one page to another page and basically these HTML links are also called as hyperlinks when we deal with HTML pages so guys basically you can click on a link and jump to another document or a web page and that is how the entire internet is being served to the users and when the users are reading the content of the web pages they have the links to the external websites or the internal web pages as well from where they can get more information so this is one of the useful element when you are going to develop your own web pages you should have the links to the other Pages as well if you want to refer to certain other source in your existing or a new web page so when you move the mouse over a link the mouse Arrow will turn into a little hand so this we are going to check in the example as well and as you can see this is the syntax we have the less than symbol and then we have the a tag so guys basically the a tag is used in order to mention the link on a web page and then we have a very important attribute that is hre over here which will provide you the URL of the page to which the user should go to when the user clicks on this link over here so guys let us check this with the help of example now in the vs code so over here I have set the title as links in HTML and then let's say we have a simple paragraph using the P tag and then we will say this video is created by programming for beginners which is a YouTube channel which you should definitely subscribe if you have not done so so guys basically we are saying that this video is created by programming for beginners YouTube channel now guys let us say if the user wants to know that where is this programming for beginners YouTube channel how I can access this YouTube channel over here by just seeing this information so we can use the a tag and provide the link to this programming for beginners YouTube channel in this particular statement so guys before doing that let me just save this file now and show you how it looks on the browser so basically right now it is a very simple text and it is in the form of the paragraph and we don't have any link right now where the user can click on this programming for beginners text now guys what we will do is I have already provided the link over here to the YouTube channel and this is the link so I'm going to copy this and what we are going to do is we will be enclosing this programming for beginners in between the starting and the ending a tag so over here we will have the less than symbol and then we will use the a tag over here and then we will close this tag with the greater than symbol and then guys we will also have the ending tag over here after The Beginner's word in this case so we have enclosed the programming for beginners in between the a tag so let me just just save this file now and try reloading this page once again for you on the browser so nothing has happened that's because we have not provided the HF attribute for now to which the user should be redirected to when we click on this programming for beginners text so guys let us do that quickly so over here in the starting a tag we have the space character and then we have something called as hrf attribute as you can see it contains a URL or a URL fragment that the hyperlink point to so guys this is the location where we have to provide the URL where the user will be redirected to so over here I'll copy the link of this YouTube channel that user should go to so I'll just copy this and paste it inside the double codes so guys always remember that this is the attribute that is hre and then we have the equal to symbol and then after that since we are specifying the string value we have to provide it in between the double codes over here so let let me just paste this link in this case and now we are having the programming for beginners in between the a that is the anchor tag which is having this particular link so guys let me just save this file now and try reloading this page as you can see the programming for beginers text is now being converted to a link and it is being displayed with the blue color which is the default color for the links on the modern browser and then guys when we hover over this link so if you notice the cursor is changed to the hand tool over here so basically it is automatically converted to the hand tool so that user comes to know that this is the link so guys now our aim is achieved so basically whichever user accesses your web page and sees that this video is created by programming for beginners YouTube channel and if he or she wants to know where is this programming for beginners YouTube channel and where they can find it so they can simply come over here to this link and click on this link so what happens when we click on this link so let me just show you that so when I click on this link as you can see the link that we have provided in the HF attribute the user is redirected to that particular link over here and you can see that this is the YouTube channel that I have created for you so that you can learn the various tutorials with the help of the examples and programs so guys this is the way that we can link a particular web page to your existing or the new web page now guys the browsers maintain the history as well so you can simply go back over here you can see the back button on the browser so when you click on this back button you can go back to the original page where you have clicked the link so let me just click over here to the back button so now you can see we have come to the main page over here you can again go forward by using the forward button over here but guys this is the main functionality of the anchor tag that is the a tag in order to provide the links inside the web pages which will refer to other web pages on the internet now guys there are certain other attributes as well to this link so basically the target attribute can be used to tell browser to open page in same or different tab so guys if you must have noticed by default when we click on this link the URL that we have defined in the hre over here it was opened in the same tab over here on the browser now how do we make this link open in the new browser so I'll show you that once again when I click on this link it opens this particular link that we have provided in the hre in the same Tab and we cannot see the original page on the different tab over here so how we can open it in a different tab so when the user clicks on this link the link present in the HF must open in the new tab over here so we can achieve that simply by using the target attribute so over here inside the a tag after HF attribute we can simply provide the target attribute it's spe specifies where to display the linked URL so when we use this it has certain values over here and we are going to use this value that is underscore blank so guys when we use this underscore blank it will tell the browser to open this particular Link in the new tab so let me just show you that so we'll save this file now and try reloading this page once again so that the new changes are implemented over here and now when we click on this link let me just click over here so as you can see it has opened a new tab over here and we can also go back to the source page over here which is on the left hand side so there are two tabs right now on the same browser and this is how we can make the links to open in the new tab over here so you can easily use the target attribute in order to mention where the link needs to be opened now guys you can also use the image as the link using the IMG tag so we are going to learn more about the IMG tag in the upcoming video as well but instead of having the text over here that is programming for beginners we can have the image as well now how we can do that so I'll just remove this text over here so I'll just save this file now and try reloading this page to see what happens so we don't have any text but instead of this text let's say we want to provide certain image over here so I'll quickly provide the IMG tag over here which will help us in order to provide the image on the web page so guys this IMG tag it doesn't have the end tag over over here so only the starting tag and then at the end we can provide the forward slash in this case in order to end that tag over there and then we have a very important attribute that is SRC attribute which is the image URL so we need to provide the URL of the image that we want to use so guys over here we will be using the SRC attribute followed by equal to and then we have the double codes over here now guys I already have certain images in this case which I use as is the thumbnails for the videos that I create for you so let's say I want to use this particular image so we need to provide the entire directory path for this particular image so I have copied the location and we will paste it inside the SRC attribute as the value so guys after providing this value we again have the slash character and then we need to provide the name of this file so it is the name of this image over here so we provide the name of this image so guys let let me just save this file now and try reloading this page for you so as you can see certain image is being displayed but it is not being displayed properly that's because we have not provided the extension of this image so guys the extension of this image is PNG so as you can see it is a DOT PNG format that we are using so over here after this name of the file we will provide PNG in this case so let me just save this file now and try reloading this page once again so guys you can see certain image is being displayed over here but the size of the image is very large so we can also mention the size of this image over here so after providing the SRC attribute we will provide the width so let's say I provide 40 pixels as the width and also we need to provide the height in this case so let's say I provide 30 pixels as the height so let me just save this file now and try reloading this page so as you can see this image is being displayed right now so this is the example where we are having the image as the link so when we come over here this video is created by and then we have certain image now guys it is not making any sense right now since programming for beginers text would be ideal to be displayed but over here I'm just showing you the example of how we can provide the image as the link so simply by coming over here you can see on this image the cursor is changing to a hand tool in this case and when we come over here and click on this link so in the new tab the link that we had provided to the programming for beginners YouTube channel is being opened right now so guys in this way you can provide the image as well as the Link and Link it to another web page as well now guys you can also link to an email address in the HF attribute so instead of opening another web page when you give this particular link this email address will be opened by using the email application it can be Gmail or the Outlook mail as well so using that the email address will be given in the two address when you provide that particular email address in the hrf attribute of the anchor tag so guys this exercise I'll leave up to you as a homework for you so that you can practice on your own another important attribute is the title attribute which can be used to show additional information about the link so guys let us check this with the help of example once again so what we will do is instead of showing this image we will give the text information once again over here so instead of this IMG tag we will say programming for beginners text so we have programming for beginners text let me just save this file now and try reloading this page so instead of the image now we have the text once again which is a link right now that will open the web page in another tab now guys let's say we want to provide certain information so when the user hover over this particular link the user should get the information so what we can do is we can provide the title attribute as well so after this target attribute as you can see this title attribute it contains a text representing advisory information related to the element it belongs to so let us use this and then we will say YouTube channel so we are simply providing this information that is YouTube channel over here so guys let me just save this file now and try reloading this page once again so now when the user hover over this particular link you can see YouTube channel is being displayed which is the additional information for the user so that user comes to know that yes this is the name of the YouTube channel and user can then choose whether to click on this or not so guys in this way we can easily use the anchor tag that is the a tag in order to implement the links or hyperlinks in HTML displaying images in HTML using the IMG tag so guys basically the HTML IMG tag is used to embed an image in a web page so we can easily embed the images in our web pages based on our requirements now guys images are not technically inserted into a web page whereas images are simply linked to the web pages so how we can link the images to the web pages we will see that but technically we don't actually insert the image over here on the web page but those images are linked and they are present or they are stored in some another location and we just provide the link to that path where they are stored now guys the IMG tag creates a holding space for the referenced image and that is how the images are displayed now the IMG tag is empty it contains attributes only and does not have a closing tag so basically we are not going to have any content in between the starting and the ending tag and it is going to be a single tag that is the IMG tag along with the forward slash and this forward slash will be optional and there will be no specifically closing tag for this particular IMG tag over here now guys the IMG tag has two required attributes one is the SRC which specifies the path of the image so as I've told you we need to provide the location or the path of the image where the image is stored and then we also have the alt attribute which specifies an alternate text for the image so guys we will check both of these with the help of examples now in the vs code so let's say over here we have a normal paragraph So using the P tag we will say there is an image after this paragraph So guys we have Prov provided a very simple statement inside the paragraph there is an image after this paragraph and then guys we can simply provide the IMG tag in order to display the image so let's say we have the less than symbol and then we use the IMG tag over here you can see an IMG element represents an image so this is the description that is provided by the vs code and then we can close the tag so over here we don't have the specific closing tag we can provide the for/ at the end before the greater than symbol and this is optional in order to mark that this tag is closed for now and then guys what we can do is it doesn't have any content in between the starting and the ending tag so we can only Define the attributes now how do we provide the link to the image so let's say we have certain images over here and we want to display this particular image so these are the thumbnails of the videos that I have created for you on my YouTube channel that is programming for beginners which you should should definitely subscribe if you have not done so so over here we have this image so we will check what is the entire path over here so as you can see we have this entire path over here so I'll just copy this entire path and inside the VSS code we need to use the SRC attribute so guys over here when we type SRC you can see that this is the image URL this attribute is mandatory for the IMG element because we Define like where is this image coming from in the SRC attribute so over here we are going to use this SRC attribute followed by equal to character and then we have the double codes now guys inside the double codes we are going to provide the entire directory path where the image is present so over here we have pasted the directory path and then after this we again have a back slash character and then guys we need to provide the name of the file as well so as you can see this is the name of the file so I'll just copy this and paste it over here so we have pasted this and guys another important thing is after the name of the file we need to provide the extension of the file as well so some extensions can be PNG and then others can be jpg or any other format that you are using for that particular image so in this case it is a PNG file so we are going to provide a PNG in the end after the name of the file over here that is the image so guys this is the source attribute that we have defined now let me just save this file now and try reloading this page once again on the browser so as you can see we are getting there is an image after this paragraph and this image it seems to be very large that's because increased the zoom factor of this browser what if I get the zoom factor to 100% so guys this is the way that the image is being displayed over here but I'll change this Zoom to 150% so that you can clearly see what are the contents of this web page now guys we want to display this image little bit smaller so that it looks decent over here so what we will do is we can also use the width and height attributes of this image so we can get the cursor on the other line and then we can again have the width attribute so guys inside the width attribute we can say display only 40% of this image so we will say 40% of width and let's say height we want to display only 25% so guys after providing the width and height attributes as well let me just save this file now and try reloading this page so as you can see now we can properly see the image that is being displayed over here on the web page so basically it is taking only the 40% of the entire width of the screen and height is being taken as the 25% of the height of the screen and that is how it is being displayed over here if we change the width to 50% so basically the image will take the 50% width of the entire screen so let me just save this file now and try reloading this page as you can see the right hand side side of the image is coming at the exact middle of this screen right now and guys that is how we can mention the width and height of the image we can also use pixels as well so let's say we provide 100 pixels for the width and then for height let's say we provide 70 pixels in this case so we provide 70 PX note that there is no space character after these numbers and in between the PX keyword so let me just save this file now and try reloading this page as you can see the image is being adjusted now based on the numbers of the width and height that we have specified guys we will change it back to the 40% and 25% over here since that was looking more decent so after changing let me just save this file now and try reloading this page so as you can see the image is being displayed properly now now guys there is another important attribute that is the alt attribute that you must specify now it specifies the alternate text for the image in some cases what happens is let's say if the image is not present in this particular directory that you have mentioned or if you are using the URL then let's say if the URL is down for some time then that particular image will not be displayed properly on the web page now how it will be displayed let me just show you so what if we just remove the extension of this file that is PNG we have removed and let us see how the image will be displayed on the web page now so let me just save this file now and try reloading this page so as you can see the image is not being displayed right now now so guys when this particular thing happens it becomes very important that we have the alt attribute so that some kind of text is being displayed when this condition occurs so we can come to vs code and then over here after the height attribute we can provide the alt attribute as well as you can see this attribute defines an alternative text description of the image so we will use this alt attribute and over here we will say image displayed for test purpose so guys over here we are simply providing a text message that is image displayed for test purpose you can have any other string based on your requirements when such conditions occur now let me just save this file now and try reloading this page to see what happens so as you can see even though image is not being displayed but it is saying image displayed for test purpose you can provide any other exception message or the error message that you want based on your requirements and that is how it is going to work by providing the alt attribute for the image tag it is going to provide certain text message in case there is some issue to display the image over here now guys let me just provide the extension over here once again so we will provide PNG and see how it appears along with the alt attribute content over here so let me just save this file now and try reloading this page once again so as you can see since now the image is being displayed there is no alt attribute content or the message that is being displayed right now but guys behind the scenes it will be present so let me just right click over here and use the inspect option in this case so it will open the elements tab over here so if you see there is a alt attribute that is image displayed for test purpose so basically you can see the source code over here for whatever HTML code that is written behind the scenes in order to display this particular web page so Guys these are certain attributes that you can use that is SRC attribute and and then we have the alt attribute as well along with this we have also seen how to mention the width and the height of the images that you want to display now we will see how we can display the background images in HTML with the help of examples so guys a background image can be specified for almost any HTML element in this video we are going to see how we can display the background image for the body tag that is for the entire page the background image will be displayed now to add the background image on an HTML element we can use the HTML style attribute and the CSS property that is the background image property so guys let us check this with the help of example now in the VSS code so previously we had seen how we can use the IMG tag in order to display a simple image on the HTML page as you can see this was the image that we had displayed so we will remove these lines of code over here for now and then what we will do is we will change the title to background image so we have background image in HTML and guys simply what we can do is in this body tag we can have the style attribute over here so we say style and then inside the style attribute we have the property that is the background image so we type background image over here as you can see vs code is resting us this background image property it sets the background image of an element so guys basically we are setting this background image for the body tag we can also set set it for the paragraph tag or the div tag or any other tag based on your requirements now guys after this property we have a colon over here and then we have something called as URL so guys this is used in order to refer an image file by a URL so we are going to use this URL as a prefix and inside the open and close parenthesis we are going to have the single codes over here and inside the single codes we are going to provide the name of the image file which is going to be the background image so guys for Simplicity purpose I have taken a sample image over here as you can see in the same folder where we are having our HTML document over here so guys we are going to use the same sample image in our code as well so we are going to say sample image. PNG guys it is very important that you also provide the extension of the image file so that it is displayed properly over here now guys let me just save this file now and try reloading this page on the browser so as you can see we have the background image in HTML being displayed as the title of this page and guys this image is being set as the background image over here now if you notice that the image is very big as far as the screen size is concerned so guys we have certain properties over here the first property is background image which we have already used in order to set the background image the second property is background size over here which we can use in order to increase or decrease the size of the image that is being displayed as the background image so guys what we can do is inside the style attribute only after the semicolon we can have the background size over here so when we say background size in this case as you can see this is the property that we have to use so guys using this we can use any of the values in order to set the size of the image so when we say cover as the value for the background size over here the entire screen will be covered with the image that is being set by the background image so let us check that let me just save this file now and and try reloading this page once again so as you can see the width and the height of this particular image is set to the entire body of this HTML page over here now guys we can change the size to the 50% as well so that it only takes the 50% width of this screen so let me just change that value from cover to 50% over here so guys we can give the values in percentages as well so let me just save this file now and try reloading this page so as you can see only 50% of the image is being taken over here and being displayed as the background image now guys by default what happens is if the image size is smaller than the HTML element then the image will be repeated and that is what we can see over here that this is the first image and then on the right we have the image once again repeating and then below as well the images are being repeated over here so guys that brings us to the third property that is background repeat which can help us in order to avoid the repeat repeating of the background images so let me just go to the code over here once again now guys when we use the background repeat over here the attributes might go out of the screen so what we can do is simply we can Define the style in the head section as well so instead of defining the style in the body tag we will come over here after the title and then we will say style tag over here and then guys for this body tag we are going to Define all these attributes once again so over here we need to provide body so this is the internal CSS that we are going to see till now we have seen the inline CSS wherein the attributes were defined inside the starting tags but over here when we Define the style tag inside the head tag we call it as the internal CSS so guys over here we need to provide the tag to which we need to provide certain styling and then after that tag we need to have the attributes inside the open and close curly braces as you can see we have provided body that is the tag name and then we are going to provide these attributes along with their values so I'm going to Simply cut this and paste this over here that is the background image and then again we will also have the background size as well I'll just remove this and paste this over here so guys this is looking more decent compared to the inline CSS that we were defining inside the body start tag over here so guys let me just save this file now and try reloading this page once again on the browser to see if there are no more changes so as you can see there is no change over here after defining the internal CSS and in this way we can easily Define the internal CSS that is inside the head tag over here we can Define the style tag and for this tag name inside the open and close curly braces we can have the different attributes of The Styling that we want to Define now guys we will check the third attribute that is background repeat in order to avoid the repetion of these background images so over here we need to define the background rep repeat in this case so as you can see this is the property that is background repeat and then we will say no repeat in this case you can see this is the value that we have to use that is no repeat so when we set the value as no repeat the repetion will be avoided so let me just save this file now and try reloading this page once again on the browser so as you can see only one image is being displayed now and there is no repetion even though when the size of this particular image is smaller than the size of the entire body tag over here on the HTML page now guys let us move to another property over here we have something called as background attachment as well so guys this we can use along with the background size so when the background size of the image is set as cover so let us change that so over here we can change it to cover in this case and then we can use the background attachment property so in this case we can use the background attachment property and make it as fixed so that the image is fixed over here even if you you are scrolling the content of the page in this case so guys let me just save this file now and try reloading this page once again so as you can see the image is covering the entire body of the HTML page and whenever you are going to scroll the content on this particular page the image will be fixed over here and it will not scroll and if you want the image to be scrolled then we can use the scroll value in this case for the background attachment so guys this is the meaning of the background attachment over here so quickly let us see the example of how this fixed and scroll values for the background attachment will work what we will do is we will have the simple paragraphs over here so we are defining the P tag and then we will say this is a paragraph So guys we are saying this is a paragraph and let us say we want to increase the size of this paragraph so we will have another P tag over here inside the style tag and then we will have the open and close curly braces and we will say font size in this case so font size we will say 30 pixels and then let's say I want to define the background color as well so we will say background color and let's say we have the color that is red in this case let me just save this file now and try reloading this page once again so as you can see we have this is a paragraph over here being displayed along with the red background color if you can notice now guys similarly what we will do is we will simply copy and paste this line of code multiple number of times so that the page is scrollable over here so we have this many number of paragraphs in this case on this HTML page let me just save this file now and try reloading this page once again so as you can see we have more paragraphs and when we scroll you can see that the image is also getting scrolled over here so guys behind the scenes we also have the image in this case so what happens when we change the value from scroll to fixed over here currently we have the value of background attachment as scroll and when we change it to fixed let us see what happens let me just save this file now and try reloading this page as you can see the image is being fixed as the background image and now when we scroll only the content that the paragraphs are getting scrolled over here and the image is fixed in this case so guys if you want to keep the background images fixed over here like how we have done right now so you can change the background attachment property to fixed in this case and you can change it to scroll as well if you want the background image to scroll when the user Scrolls to check the content of the HTML page so guys this is the way that we can set the background image for the HTML page and along with that we have certain attributes as well that we have seen so now we will see how we can display favicon in HTML on the browser tab so guys basically a favicon is a small image that is displayed next to the page title in the browser tab so if I show you over here on the browser tab as you can see this title that is favicon in HTML before that on the left hand side we have a icon which is a globe by default over here when there is no favicon that is provided to the HTML page so guys we are going to see how we can provide the favicon so that an appropriate image can be displayed over here besides the title of the page so basically a favicon is a small image that is displayed next to the page title now guys we can easily add favicon in HTML using the link tag which we have to specify under the head tag over here so when we come to the vs code in this case what we have to do is under the head tag after the title we can have the link tag over here so when we have the link tag you can see that by default we are having the value of the Rial attribute as a stylesheet over here we need to change it to icon in this case so we type icon over here and then for the href attribute we need to provide the path of the small image which we want to set it as a favicon for that particular HTML page so guys I have a small image over here that is the favicon image in the jpg format let me just open this image for you so this is the image that we are going to set which is also set as the profile picture for this YouTube channel that is programming for bers which you should definitely subscribe if you have not done so so guys basically we are going to set this image as the favicon for this particular HTML page so we simply come over here on the VSS code and then we give the name of this favicon image that is favicon do jpg so in this case we say favicon jpg as you can see vs code is suggesting us this particular file name that's because we have provided it inside the path where this particular HTML page is present so guys let me just save this file now and try reloading this page once again over here so when we click on reload you can see that this image has been changed to the image that I have just showed you and this is the small image that is being displayed right now over here so basically it is the favicon image that is being displayed besides the title of this page that is favicon in HTML and guys now we can change the content of this page we can now say that this HTML page is having a favicon over here so basically we have set the favicon for this particular page and guys this favicon image must be present on all the pages that are present on your web servers and whichever page opens with your particular domain it will be present by default over here when the title of this page will be displayed to the user guys it basically shows the identity of your website so that users come to know that this is the website that they are referring to which they have been using more frequently so now we will see how we can display tables in HTML with the help of examples so guys HTML tables allow web developers to arrange data into rows and columns and we are going to check this with the help of examples as well in the VSS code so so guys it is very important for you to understand what are the different tags that you can use in order to display your tables in the form of rows and columns so basically we have the very first tag that is the main tag which is called as table over here so again we have the less than symbol and then we have the table keyword and then greater than symbol and this is the start tag we also have the corresponding and tag for this table inside which all the content of the table will be defined and and then guys inside the table first of all we are going to define the rows which can be defined using the TR tag over here so TR stands for table Row in this case and it defines a horizontal row in a table and then next we have the table header so in case your requirement is to display the headers in the table you can use the th tag which stands for table header over here which defines the header for the table in this case and then guys we also have something called as TD which refers to the table data over here so TD tag helps us to define the content or data in one cell of a table so guys when we talk about HTML table over here it is similar to Microsoft Excel so if you have used Ms xcl anytime you must have noticed that we have multiple cells over here in Excel and this can be treated as one table over here so we can have the header in this case so let's say we have the number over here as the header and their string representation so guys this is nothing but these are the headers that are defining what will be the content of these particular columns over here so we can have them in the Bold formatting so we apply the Bold formatting over here and we can make them display at the middle of the cells and then guys what we can have is we can have the numbers over here so we have 1 2 3 4 5 and the string representations say 1 2 3 4 and then we have five so guys this is nothing but this is a table over here and this is what we are going to see in the HTML as well we are going to Define this as a table and these are the rows so as you can see this is one row over here then this is second row then this is third row and so on these are the rows and these are the columns so guys this row is being defined by the TR tag and the data inside each cell is being defined by the T CD tag over here which stands for the table data and guys this header is being defined by the th tag which is the table header over here and outside all these tags we also have the main tag that is the table tag in order to define the entire table so guys with this knowledge let us move to the vs code now over here in order to create the table so first of all we will have a simple paragraph and then we will say below content is defined in a table so guys we have a very simple paragraph that is this below content is defined in a table and now on the next line we are going to define the table over here so when we type table as you can see VSS code is suggesting us this particular tag and when we press enter you can see that we have the starting tag and the ending tag so guys this is the shorthand format we can simply type the name of the tag and press enter in order to get the starting and the ending tag in the HTML now in between the starting and the ending tag what we need to Define is first of all we are going to Define this row which is going to have the table header so guys over here we will have the TR tag so when we type TR over here and press enter as you can see TR starting and the ending tag is being displayed over here and then inside the TR tag we will have the th tag over here since these are the headers that we want to Define so we have the th tag and when we press enter as you can see the starting and the ending tags are being displayed now we can simply have number which is the text for this header tag over here and then guys we are going to have another tag so again we are going to type th and then we will say string representation so guys as you can see inside the table starting and the ending tag first of all we have one row so inside this row we are having the two headers that is numbers and string representation we can also have one header over here or two headers or any number of headers based on your requirements that you want to Define so guys over here we are only taking two columns in this case so based on your requirements you can either increase or decrease the number of rows and columns in the HTML table now guys let me just save this file now and try reloading this page to see how the table appears over here so when we reload this page as you can see we have the numbers header and the string representation as the header which is being displayed with the Bold formatting over here now guys let us Define certain data as we have seen over here how we have defined the data in the Excel similarly we will Define the data in the HTML as well so again we are going to have another row over here so guys basically this is the first row as you can see now we need to come on the next line that is after this first row we are going to define the second row over here and inside that as well we are going to have two columns with this particular data that is one and o1 so guys we come over here to the vs code we again say TR in this case and this time we will use TD that's because it is not the header that we want to Define now we want to define the data inside a particular cell of the table so guys we use the table data that is the TD tag in this case so we use TD over here and then we simply provide one that is the number one over here and what is the String representation it is o1 so again we Define another TD in this case and then we say one over here now let me just save this file now and try reloading this page once again on the browser so as you can see another row has been added inside the table and it says one and then one over here now guys similarly let us add remaining data that is 2 3 4 and five numbers in this case so let us move to the vs code simply I will copy this TR data which is having the row with the first number in this case so I'm copying this and we will paste it four times over here in order to cover the remaining numbers so guys over here we will change two and then string representation will be two and then over here we will have three and then again we have the three word and then we have four and then the string representation that is four and then over here we have five and then again we have the string representation that is five so guys basically we have defined multiple rows over here and inside each row we are having the table data that is the TD tag and inside the TD tag we are having the actual data that needs to be displayed inside the cells of the table now guys let me just save this file now and try reloading this page on the browser once again so as you can see all the data is being displayed now in the tabular format so guys you can see under the headers that is numbers over here all the numbers are getting displayed in the left aligned format and in the string representation as well all the string representations of the numbers are getting displayed in the left aligned format so guys this is the main purpose of using the table that is it allows the web developers to arrange the data into rows and columns guys we can also use the border for this table so that it actually looks like a table for you so what we can do is we come over here to the vs code and then inside the head tag we can simply provide the style tag over here and for this style tag we can say table in this case and let's say for this table tag we need to provide the border the Border will be of one pixel size and it will be of the solid type and then let's say we want to give the color as black in this case so guys this is one of the ways in order to define the Border along with the width of the Border then this is the Border style like what type of Border we want to display and then this is the color of the border so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have got a border now to the table guys we can also have the border to this table data in the table as well over here so we can include the th and TD tags over here to the same styling in this case that's because we want the styling to be common so guys after table we can provide comma and then we can also provide th comma TD tags over here so guys this particular styling will be applied to all these Texs that we have defined over here in the HTML body so let me just save this file now and try reloading this page once again so as you can see it is being displayed Now using the borders over here here all the celles are having their own borders guys also we can align the text to the right in this case by default it is on left so what we can do is we can simply come over here and we say text align in this case so this is the property that can be used in order to align the text and we say write as the value so let me just save this file now and try reloading this page once again so as you can see the content of the entire table is being displayed on the right now so guys this is the very basic way in in order to display the table content inside the HTML so to summarize we need to have the main tag that is the table tag and then inside that individually we need to define the rows of the table the first row can be a header if you want to define the header and if you don't have any headers you can start with the TD tags as well the only difference between the TD that is the table data and the th that is the table header tag is that the content in the th tags will be displayed with the Bold formatting over here as you can see whereas the content with the TD tag will be displayed normally without the Bold formatting but you can apply the formatting based on your requirements to the TD tag as well using the internal or the external stylesheets guys apart from this you can also have the table cell that can contain all sorts of HTML elements that is it can have text which we have seen just now with the help of examples instead of text you can also have the images list links and other table as well so guys you can check out the images in the links as the content of the table data and this activity I'll leave up to you as a homework for you so now we will see table borders in HTML so guys the HTML tables can also have the borders of different styles and shapes and we are going to check this with the help of examples now in the vs code and we are going to see these CSS properties that is the Border property then we also have the Border collapse then background color then we have border radius style and then color so guys let us move to the vs code over here so previously we had defined an HTML table that is having the numbers and their string representation and this is how it looks right now over here so guys we had added the borders as well but without the borders how does it look let us remove the styling over here from the HTML code so when we remove the style from the HTML code let me just save this file now and try reloading this page so guys this is the very simple table that we had written previously without any borders and without any distinctions between the rows and the columns now guys let us add certain borders over here so what we can do is simply we have to come in the vs code so as you can see we have the table tag then we also have the TR tag th tag and TD tags so guys basically to these tags we are going to add the border so over here inside the head section we are going to define the style tag and over here we are going to apply B orders to the table tag and Then followed by comma we also have the th tag over here and then followed by comma we will also apply for the TD tag as well so guys whenever you are going to apply the common styling to multiple tags you can Define them on a single line separated by commas over here and inside the open and close curly braces we can have the styling that can be applied to the content of these tags over here so guys what we have to do is we are going to first Define the Border in this case and let's say we want to define the Border width as 1 PX and Then followed by the style that is the Border style it will be solid and Then followed by the color that is let's say we want the color of the border to be black over here so let me just save this file now and try reloading this page once again on the browser so as you can see all the cells that is the headers and then we also have the table data and then we also have the main table that is having the borders over here now guys there are double bord orders so we also have the border for the table cells over here and then again we are having the border for the outer table as well so what we can do is we can use the Border collapse property in this case so when we use the Border collapse property we are telling the browser to collapse these borders and display it only as a one border so let us use the Border collapse property as well so we come over here we say border collapse in this case and we use the collapse value for the Border collapse property let me just save this file now and try reloading this page so if you notice there are no double borders right now and there is only single border to the outer table that is the main table and also to the individual cells as well that we can see as the table data over here now guys let us provide certain padding as well to the entire content of the table so what we can do is we can provide the padding in this case so padding property and after colon let's say we provide two pixels over here as the padding let me just save this file now and try reloading this page so now we can see the spacing between the content of the table and the borders as well let us change the padding to five pixels so that we can clearly see the spaces in between the content on the border let me just reload this page once again so now the HTML table is looking little bit decent over here with the padding that we have already applied now guys let us move to another property over here we also have something called as background color for the table data so guys what we will do is let's say we want to provide the background color to the even rows that is the second row over here then we have the fourth row and the sixth Row in this case so what we can do is simply we have to come over here we will be defining the TR tag in this case but guys over here we only want the even rows to be having the background color so we provide colon and then we have something called as nth child over here so when we type nth you can see this particular suggestion from the vs code which we are going to use so guys it is n hyphen child over here and inside the open and close parenthesis we are going to provide the word that is even so guys basically this is nothing but this is the TR tag that we have defined over here to which The Styling needs to be implemented and this is the end the child meaning we are selecting that which TR Tex will be having this particular styling so inside this open and close curly braces we are going to have the background color over here guys no need to worry about the nth child over here for now we are going to learn more about it when we are going to see the CSS tutorial as well so please make sure that you subscribe to this YouTube channel that is programming for beginners because we are going to learn a lot about the HTML and the upcoming CSS tutorial as well and again much more knowledge as far as web development is concerned so guys over here simply the meaning of this is we are going to apply the background color to the even rows over here and what is the color that we want to apply let's say we want the aqua color to be applied so we are going to give this color name let me just save this file now and try reloading this page on the browser once again so as you can see the even rows are now getting this particular background color similarly we can also have the odd rows as well so when we change this even to odd in this case so the odd rows will be having the background color as Aqua so let me just just reload this page once again so as you can see the odd rows are now having the aqua background color so guys in this way you can easily apply the background color to the table content over here now guys let us move to another property we have something called as border radius as well so let us apply that so we will apply the Border radius to this table and th and then TD tags as well so when we say border radius in this case we need to apply certain value for for that radius so let's say we provide 10 pixels as the Border radius in this case let me just save this file now and try reloading this page once again to see what happens so as you can see the Border radius is now getting displayed over here and the color that we had applied is now showing the Border radius let us remove the Border collapse in this case so that we can clearly see the Border radius over here so when we remove this save this file now and try reloading this page as you can see we have the Border radius now and the borders are having certain kind of radius in this case both the entire table as well as the th and the TD tags are having the Border radius now let us move to another attribute we have something called as border style as well so guys we have already provided the Border style value over here that is the solid value in this case so basically the first value that we provide to this shorthand method that is the border is the Border width over here followed by the border style and Then followed by the Border color so guys individually you can have all these values as the Border width then border style and the Border color or you can have the Shand method that we have used that is border attribute along with that you can provide all the three values over here so guys basically this border style is having multiple values we can also have the dotted border as well so when we type dotted in this case so instead of the solid border we will be having the dotted borders so let me just save this file now and and try reloading this page once again so as you can see the borders are dotted for now and this is the way that we can have the Border style being implemented let us change the value to dashed over here so we can have the dashed borders as well so let me just save this file now and try reloading this page one again so as you can see the borders are having the Border styl as dashed let us move to another attribute over here we also have something called as border color in this case so guys the Border color is also provided over here that is the black color let us change the Border color to Red in this case so when we type red color name let me just save this file now and try reloading this page as you can see the Border color is changed to Red let me just change the Border style to solid in this case so when we change it to solid let me just save this file reload this page as you can see we are having the solid border over here with the red color so Guys these are certain properties for the borders that we can apply to the table and based on your requirements you can display the HTML table over here on the page so so now we will see how we can set the table size in HTML using the width and the height attributes so guys basically the HTML tables can have the different sizes for each column row or the entire table and that is what we are going to see with the help of examples we will first set the table width and then we will also see the table header width and then we will see the table row height so guys let us move to the vs code over here and this is the table that we had defined previously along with this particular internal CSS code as well and this is how the table is being displayed right now on the web page now guys let us say we want the entire table width to be displayed as the 100% of this page which means the width of the table will be same as the width of this device screen over here so what we can do is simply for the table tag we need to define the with attribute so guys over here we need to define the table once again because this particular CSS will only apply to the table tag and no other tag so basically th and TD tags will not have this particular width for now and that is why we are having another table tag over here inside the internal CSS code so guys over here we simply have the width attribute and then we will say 100% so this will make the table width extend to the device screen width so guys let me just save this file now and try reloading this page once again on the browser so as you can see the width of the table is being extended to the width of the screen right now now guys let me just add another column over here to make the table look more decent on the HTML page so what we will do is we will add another column over here so we have the header and then we say another column and then we will Define certain table data as well for the third column over here so we will say this is first number so guys basically we are just describing what the content of these particular rows are so we will say this is second number and so on up to the fifth number we are going to define the new tags over here so guys we have defined the content of the third column as well let me just save this file now and try reloading this page once again so as you can see now we are having three columns the First Column is the numbers then we have the string representing and we have another column which is having the description of all these rows over here now guys we can also change the width to another perc in this case so basically instead of having the 100% width over here we can also say to have 60% width of the device screen so let me just save this file now and try reloading this page so this is the 60% width over here and this is how we can change the size of the table now guys we can also have the table header width so guys basically let's let's say if you want the width of this particular header to be more compared to the width of the other headers so we can do that as well so what we have to do is let's say we provide 100% over here as the width of the table let me just reload this page once again to see the changes so over here we are having the 100% width of the table now guys what we will do is we will come over here and it is a third header that is another column so we will change the content to description over here to be more precise so let me just save this file now so over here the description is the header for which we want the width to be 50% So currently it is not 50% because it is not starting at the middle over here so what we can do is simply we can come to the th tag for the description header over here and then inside the th tag we will have the style attribute and this style attribute will have the width property in this case and we will say 50% should be taken by this particular header over here and all the values that are present inside this header so guys let me just save this file now and try reloading this page once again as you can see now the description column is taking the 50% of the entire 100% of the table and guys this is the way that we can provide the width of a particular column as well inside the TH or the TD tag as well inside which the data is being defined guys it is important to note that we have provided the style attribute just to this this particular header that is the th tag of this particular row that is the first row so using the width of this th data over here the other TD datas that are present in the third column will also have the same width over here this cell is having 50% so all the cells under this particular column will also have the width as 50% now guys let us see how we can change the height of a particular row so let's say we want this row that is the row having the number two over here to extend it height so what we can do is we can come over here to this row that is having the number two in this case we provide the style attribute so we say style and then inside this we can provide the height property and then guys let's say we have 150 pixels as the value for this particular height property inside the style attribute so let me just save this file now and try reloading this page once again so as you can see for this row that is having the number two the height has been increased to 150 pixels over here and that is how we can set the height of a particular row inside the table so guys this is the way that we can change the size of the table as you can see by using the internal CSS and then we have also seen how we can change the width of a particular header which will be followed by the other data that is present inside the same column and then we have also seen how we can change the height of a particular table Row in this case and this is this is how the table is being displayed on the HTML page right now after all the changes so now we will see table headers in HTML that is horizontal and vertical table headers so guys basically HTML tables can have headers for each column or row or for many columns or rows So based on your requirements we can have the headers in each column or in each row or in multiple columns and rows which we are going to see with the help of examples as well so guys the very first thing that we are are going to see is the horizontal headers which means the headers are present in the first row of the table so guys let us move to the VSS code now over here and first of all we will Define a paragraph and we will say below content is in HTML table so guys we have defined a very simple paragraph over here having this particular statement now guys we will Define a table so we will say table in this case and we have the starting and the ending tag of the table and now guys inside this table we are going to have the first row by using the TR tag that is the table row and in this first row we are going to have all the headers that we want to Define so guys we will be using the th that is the table header tag and in this case let's say we want to define the details of certain players so we say first name and then we copy paste the header and then we will say last name over here and then we will say age so again we will copy paste another header over here and we will say age in this case so guys basically we have defined three headers over here by using the th tags in this case so guys let me just save this file now and try reloading this page on the browser so as you can see below content is in HTML table this is the paragraph that we have defined and this is the first row of the table which is having the Bold formatting of the text now guys let us Define the table data in this case by using the TD tags so over here once again we will have another row in this case so in this row we will be defining the details of the first player so we will have the TD tag and then let's say we have Cristiano Ronaldo as the first player so we will have the TD tag in this case and then again we will have the table data tag for the last name as well so we will say Ronaldo in this case and let's say for the age we have once again another TD tag and currently his age is 38 years so we will say 38 years in this case so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have got the first name that is Christiano under the first name header and then we have last name header under which we have Ronaldo as the last name and then age as well that is 38 years in this case so guys basically this is the example of the horizontal header that we have defined for now in which case the headers are present on the first row of the table now guys let's say we want to Define another players data over here that is Leonel Messi so we will simply have to copy this TR tag in this case and then paste it after the first record in this case over here so we will say Leonel Messi so last name over here we have Messi in this case and then his age is 36 years currently so basically we have defined the details of this player as well that is the second player let me just save this file now and try reloading this page on the browser so as you can see this this is the second player that is Leonel Messi and his age is 36 years so guys basically this is the perfect example of the horizontal headers that we have defined for now we can also have the borders so quickly we will Define the style tag as well inside the head tag so over here we will say style and then we will give borders to table as well as the th and the TD tags so over here we will say th and TD tags and then we can simply say Border in this case and we will say 2 pixels width for that border and then it should be a solid border with a color that is black so guys let me just save this file now this particular CSS property will apply to the table then we have the table header and the table data tags over here so guys let us reload this page once again on the browser so as you can see the Border has been applied but over here we have the multiple borders in this case so we can simply have the table tag over here here and then we can have the property that is border collapse in this case and we can have the value as collapse so let me just save this file now and try reloading this page so as you can see we have the perfect border for all the TD th and the table tags over here so guys this is the example of the horizontal headers that we have seen now let us see the same example with the vertical headers as well which means the first name last name and the age headers should come on the left hand side over here in the first column so how should we create the table for that so guys over here what we will do is again we will create another table so first of all we will have a paragraph and we will say below is another table and then after this paragraph We Will Define the table tag over here now guys inside this table tag what we have to do is we need to provide the first TR now this TR will have the first element as the th tag which is the header tag over here and this time it will be first first name in this case now guys the second and the third element inside the first row over here should be the TD tags that will Define the first names that is Cristiano and Leonel so guys over here what we have to do is we need to provide the table data tag and then we will say Christiano that is the value of the first name for the first player and then again we will have the TD tag for the value of the first name of the second player so over here we will say Leon so guys let me just save this file now and try reloading this page once again on the browser so as you can see the first name we have defined in the leftmost column over here and this particular row is only having the first name in this case similarly we will have the last name and age as well in the second and the third rows over here so guys let me just copy and paste this TR that is the table row that we have defined over here two times and then in this case we will have last name and we will change the value to Ronaldo over here and this leonal will be changed to Messi in this case and then again in the third row we will have age as the vertical header and then over here we will have 38 years for Ronaldo and 36 years for Messi so guys let me just save this file now and try reloading this page on the browser so as you can see this is the example of the vertical headers that we have defined which can be displayed in the First Column over here and the first name we can see we have Cristiano then we have the last name as Ronaldo and his age is 38 years similarly for player two we have Leonel Messi and 36 years as first name last name and age respectively so guys this table is having the horizontal headers whereas this table is having the vertical headers in this case now guys let us move to another task over here we can also have the header alignment so basically to the th text we can provide the text align property so if you know notice the headers are aligned in the center for now by default so what we can do is we can align them on the left hand side so what we can do is over here in the style tag we can create another tag that is th and then this should have the text align as left so over here we will say text align and the value can be left in this case so guys let me just save this file now and try reloading this page if you notice the headers are at the center right now it should move to left over here so when we reload the this as you can see this is aligned to the left and also all these table headers are aligned to left and in this way you can set the text align property of any of the table headers or the table data elements now guys let us move to another task we can also have the call span to merge headers over here so guys basically what this means is let's say we only want to define the single header that is name over here instead of first name and last name but we want the values to be in different columns over over here so what we can do is we can merge these two columns in this case that is first name and last name can be removed and we can have a common name that is name as the name of the column so what we can do is we can have the call span attribute over here so guys basically these are the two headers that we want to transform into a single header so I'll just remove these lines of code over here and we will simply have one th tag and the label of this particular header is name in this case but guys this particular name should Span in two columns over here so that we come to know that these two columns are having the names of the players so guys what we can do is over here inside the starting th tag we have to provide the call span attribute so over here we can simply say call span and then we can say two in this case that's because the two cells needs to be merged together and we need to have the label as name over here so guys let me just save this file now and try reloading this page once again on the browser so as you can see the first name and last name were replaced now with this particular label that is nam which is a single label and it is occupying the space for these two cells over here we can have the text align as Center in this case so that the label is displayed properly and we come to know that both these cells are having the first name and last name of the players so simply we have to come over here in the style and for the text align property we can say Center value so let me just say this file now and try reloading this page once again on the browser so as you can see name is being aligned at the center now so guys this is the importance of the call span attribute it helps us in order to merge the multiple cells in the table now guys let us move to another task over here we have something called as table caption which is the details of the table that we want to show on the HTML page so we can use the caption tag immediately after table opening tag so guys over here we don't have any any other details for these tables apart from the paragraph that we have just defined so what we can do is we can also have the caption tag after the table tag over here in order to Define what exactly is present inside the HTML table that we have defined so guys over here after the table tag and before the first row in this case we will simply have the caption tag over here so when we say caption we need to provide certain text over here so let's say we provide player details in this case so guys basically this particular information should be present for this particular table just above this table so let me just save this file now and try reloading this page once again on the browser so as you can see player details is being displayed now on top of the table that we had defined now guys similarly we can have the caption for the second table as well so what we can do is simply we have to come over here in the second table and after this table tag and before the first table we can have the caption tag over here and then we can say player details part two so guys let me just save this file now and try reloading this page once again on the browser so as you can see this is the table caption that is being displayed just before the table which is being displayed on the browser so Guys these are some of the ways in order to define the table headers whether you want to define the horizontal table header or the vertical table header based on your requirements okay so now we will see table padding and spacing in HTML so guys HTML tables can adjust the padding inside the cells and also the space between the cells so we are going to check what is the difference between badding and spacing in HTML tables with the help of examples as well so basically a cell padding is the space between the cell edges and the cell content which means the data that we have defined and the border that is present for that particular table cell the space in between these two ele ments is called cell padding and by default the padding is set to zero so we can use the padding CSS property in this case so guys let us move to the vs code over here we already have a table which is being defined in this case which is having three rows over here the first row is having all the headers that is the first name last name and the age of the players that we want to Define and then the second row is having the player details in this case so as you can see we have the first name and the last name as Cristiano Ronaldo and his age is 38 years and the second player that is Leonel Messi and his age is defined as 36 years so these are the two records that we have displayed in the form of the HTML table so if I show you this is the table that is being defined over here now guys let us provide certain borders over here in order to understand what is the difference between padding and spacing and how we can apply them in the HTML table so guys over here what we have to do is inside the style tag we will use the text that is table and we will also have the header and we will also say table data all these Texs must have the border of one pixel in this case so we will say border which is having the width as 1 pixel and the Border type is solid in this case and we will say the Border color is black color in this case so guys this is the shorthand method in order to define the border of the table in HTML now guys let me just say this file now and try reloading this page on the browser so as you can see a one pixel border is applied to all the elements that is the entire table element over here and then in between you can see that the table header and the TD that is the table data which is having the player details are also having the borders over here we can have the Border collapse property for the entire table as well so that the border is displayed only once instead of these double lines in this case so guys over here we will have the table tag and they should have the Border collapse property in this case and the value should be collapse in this case so guys let me just save this file now and try reloading this page on the browser what is the importance of this border collapse property so guys over here you can see multiple lines in this case that is for each individual cell over here but when we reload this page once again you can see only one single border for all the cells and that is the importance of this border collapse that is being applied to the entire table over here now guys if you notice there is not much space in between the content that is let's say if we consider this Ronaldo as the last name over here we cannot see much space in between this particular content and the border that is surrounding this last name over here so what we can do is we can provide the padding property and provide certain space so that it looks good inside the table cell so guys over here where we have applied the Border we can simply come over over here and provide the padding property and the padding that we want to provide is let's say we want to provide 10 pixels as the padding from all the sides so guys basically you can also Define padding at each individual sides that is left top bottom and right but you can also use the padding property in order to apply the same value from all the four sides so guys let me just save this file now and try reloading this page on the browser so as you can see now we have some space in between the content and the borders that is surrounding the content over here so all the cells in this table is having 10 pixels of padding in this case so guys this is the meaning of the padding property over here that we have just seen now guys what is the meaning of cell spacing so basically cell spacing is the space between each cell by default the space is set to two pixels use border spacing CSS property in order to define the cell spacing so guys we have already seen that that by default the two pixels of spacing is present between all the cells so to understand it more clearly we have to remove the Border collapse property from the table so that multiple borders are being displayed once again so I'll just remove these lines of code over here let me just save this file now and try reloading this page so as you can see we have got the multiple borders once again for each and every cell over here now guys you can see that there is certain spacing in between the border that is covering the table data over here so this space is 2 pixels by default so we can increase or decrease it so we can remove it by using the Border collapse property or we can increase it by using the Border spacing property so guys let us use that as well so over here what we have to do is again we have to come over here and then we will say border spacing in this case and then let's say we want to provide 10 pixels of the Border spacing in this case so let me just save this file now and try reloading this page on the browser so as you can see all the cells now are having the 10 pixels of Border spacing in between them so guys this is the space in between the borders that is covering the table data content over here inside the HTML table and that is the meaning of this particular cell spacing over here so guys both these CSS properties that is padding and spacing are important as far as HTML tables are concerned So based on your requirements you can design your own tables and whatever padding and spacing is required you can Implement them by using these CSS properties so so guys HTML tables can have cells that span over multiple rows and columns so basically what is the meaning of a call span so it is the attribute that helps us to make a cell span over multiple columns and we use the call span attribute and similarly we also have the row Span in order to make a cell's pen over multiple rows we use the rows pen attribute over here so guys in in order to understand both these attributes we are going to create these two tables that is the first table is having the horizontal header over here and then we are having the data in the table and the second table is having the vertical table headers over here and this is the table data that we are going to Define and then guys what we can do is the first name and last name can be combined over here so basically in Microsoft Excel what we do is we click over here on the merge and center so when we do do this basically we are going to label it as name in this case and this is how we are going to combine the two cells in the HTML table as well and similarly we are going to combine these two rows over here in this case by using the rows pen so guys the first scenario will be done by using the call span over here and in the second table we can merge these two rows by using the row pan in this case so guys let us move to the vs code now over here and let us Define the first table that is having the the horizontal table headers so guys the first row is having the table headers in this case so we will have the header that is the first name over here and then we have last name and then age so in this case we will say last name and then age over here so guys all these three elements are the table headers in this case let me just save this file now and try reloading this page on the browser so as you can see these are the table headers that we have defined now guys we will Define the table data as well so we will have another row over here and the details of the first player that is Cristiano Ronaldo will be defined rowwise so over here we have the first name and then we will Define the last name over here and then we will Define age in this case that is 38 years okay similarly we will Define the details of the second player as well by using this second row so over here simply we will copy and paste these lines of code and then we will say the details of the second player that is Leon whose age is 36 years now guys let me just save this file now and try reloading this page on the browser so as you can see we have created this table in the HTML similar to the Microsoft Excel table that we have defined now guys how we can combine the first name and last name over here so before doing that let us apply certain border over here to the table so what we can do is simply we have to come in this style tag and then we will say table we will also have th and TD in this case case for which the Border CSS property will be applied the Border width will be 1 pixel and it will be a solid border and then the color of the Border will be black in this case so let me just save this file now and try reloading this page on the browser so as you can see now we have the borders as well we will also provide the Border collapse property to the TBL so that we don't see these multiple lines over here in between the cells as the borders so over here we have border collapse property and the value of this property will be collapse in this case let me just save this file now and try reloading this page so as you can see we have provided the Border collapse property as well let us also provide the padding as well so we will provide 10 pixels of padding so that we can see the spaces in between the data and the borders of the table so now you can see that there is certain spacing as well inside the table now guys what we will do is we will simply merge these two cell data that is first name and last name by using the call span attribute so guys what we have to do is the first name and last name headers are present in the first row over here and now we will remove these two headers over here and we will simply provide just one header which will have the label as name over here now guys what we have to do is since we have provided three values over here for the player details we need to adjust this particular First Column label in such a way that it occupies two cells over here so inside the th St starting tag we need to provide the call span attribute so as you can see this is the attribute that we can use and we just have to provide the number of cells that will be used in order to display this particular label so in this case these two cells will be displayed in just one cell that will be labeled as name over here so we provide the call span as two in this case so let me just save this file now and when we reload this page you will notice that the first name and last name will be removed moved now and these two cells will be combined and it will have the label as name over here so when we reload this page as you can see name is being displayed as the common label for the first name and the last name of the players and guys this is the importance of the call span attribute that is in order to merge the two cells column wise we can use the call span attribute inside the TH or the TD tags as well now guys let us move to another task that is how we can use the those pen so guys over here we will have to create another table in such a way that the table headers are present vertically over here in the First Column so let us Define this particular table quickly so in vs code what we will do is we will have another table tag over here and then inside this the very first row will be having the first element as the header which will be the first name over here and then guys the second and the third element will be having the first name of both the players so so over here we will have the TD tag and we will say the first name of the first player that is Cristiano and the third tag will be another TD tag and this time it will be the first name of the second player that is Leonel okay similarly we will have two more rows over here in which case the first element will be table header and the other two elements will be table data over here so let us Define that as well and over here in the second row we will have last name in this case so we will have details of the player that is Ronaldo and Messi in this case and then in the third row we will have the age so we will Define the age as 38 years and 36 years so guys we have defined all the data over here in the second table as well let me just save this file now and try reloading this page on the browser so as you can see we have the table headers in the first colum over here and the data is being displayed in the second and the third columns in this case guys let us Pro IDE certain spacing in between both the tables so we can simply have the line braks that is the BR tags over here so we will have multiple line braks in this case let me just save this file now and try reloading this page so as you can see this is the second table now now guys over here we had used the call span attribute in order to merge the two cells column wise now similarly we will use the row span attribute in order to merge the first name and the last name over here these two sets vertically so that we can say that Cristiano Ronaldo is the full name of the player so guys what we have to do is we have to come over here in the second table and we have to remove both the headers from here so first of all we will remove the first name and we will also remove the last name in this case and we will simply have just one header over here so we will say th and in this case we will give the label as name over here and then guys what this th is doing is it should have the space of the two rows over here so in the second row we are not going to Define any of the table headers but in the first row we have already defined and we need to provide the rose pan as two in this case so we provide Rose Pan and the value should be two so that it takes the space of both these cells over here inside the First Column so guys let me just save this file now and try reloading this page on the browser so now as you can see the first name and last name is not being displayed and instead of that we are getting the common label that is name over here that is occupying the space of the first and the second row over here inside the First Column and guys this is the way that we can use the rose pen based on our requirements so now we will see table styling in HTML using CSS so guys we can use CSS in HTML to make the tables look better and these are the examples that we are going to see with the help of VSS code as well so basically we will see zebra strips in order to add the background color on every other table row inside the table that we have defined in the HTML so guys to check this example we are going to Define this particular table as you can see it is kind of a calendar which is having the days that is Monday Tuesday Wednesday and up to Sunday in the first row and then in the other rows we have the dates over here from 1 up to 28 which is the number of days in the month of February provided it is not a leap year so guys we are going to Define this particular table in HTML so let us move to the vs code over here and inside the body section we will have table tag over here and for this table tag we will Define the caption as calendar over here so we will say calendar now guys simply what we have to do is we need to define the first row and it should have these days over here so what we can do is we will have the TR tag over here and then inside the table row tag we will have the table headers that is the th tags so the first th tag is having Monday as the value similarly we will have the other six th tags as well and we will Define the other days so we have Tuesday over here then we have wedes day and then we have Thursday and then we have Friday and then Saturday and then the last day that is Sunday over here so guys let me just save this file now and try reloading this page on the browser once again so as you can see we have defined the headers of the table we we have not provided any borders for now so we will provide it at the end of the creation of this particular table now guys we will Define the dates inside this table using the table row so once again we will have the table row over here which is the second row and then inside this we will have the table data this time because these are not the table headers these are the simple data that we want to Define inside the table so guys we have the date that is 1 over here similarly we will have the dates from 1 to 7 in this case so as you can see we have provided the dates from 1 to 7 let me just save this file now and try reloading this page on the browser so as you can see we have provided the dates as well so guys similarly I will quickly provide the dates in the other rows as well inside the vs code so guys as you can see we have provided the table data in the other rows as well over here let me just save this file now and try reloading this page once again on the browser so this is the way that our calendar looks like over here on the browser now guys let us provide certain borders as well to all the table cells over here so in the vs code we will come inside the head section and then we will provide the style tag over here and we will provide the border to the table and also to the table header that is the th tag and the TD tag as well which is the table data so simply we have to provide the Border property over here and let's say we provide one pixel that is the Border width and then border style will be solid in this case case and let's say we provide the color as black to the border of this table so let me just save this file now and try reloading this page on the browser so as you can see we have provided the borders as well over here and we will also provide the Border collapse property so that we don't get to see the double borders over here to all the cells of the table so inside the table tag we need to provide the Border collapse property over here and then the value will be collapse in this case and guys also we will provide certain padding so that we have some space over here between the content and the table borders so in this case we will provide padding of six pixels over here so we say padding as 6 pixels let me just save this file now and try reloading this page on the browser so as you can see we have provided the padding as well as the collapse property is helping us to display the borders of the cells only once now guys let us see how we can provide the zebra strips over here to the table so we will be adding the background color on every other table row so basically we are going to provide the background color to the even rows over here so let's say this is the second row so it should have certain background color and again to this fourth row as well we will be having the same background color so how we can achieve this particular task so guys simply we can come over here under the style tag and we will be providing the TR tag over here that's because we want to provide the background color to the entire row and then in this case we need to provide the background color to the even rows so what we can do is after the TR tag we can use colon and then we can use the nth child over here so guys under this nth child inside the parenthesis we can say even over here which means only to the even rows the property that we are going to Define under this particular tag will be applied so inside the curly braces we will have background color over here and then let's say we want to provide Aqua as the background color in this case to all the even rows of the table so guys let me just save this file now and try reloading this page on the browser once again so as you can see this aqua color that is the background color is being applied to the even rows over here to this particular table and that is how we can achieve this particular task of applying the zebra strips to the HTML table now guys similarly we can also have the vertical Ze strips so instead of having the color being applied to the rows we can apply it to the columns as well so let's say if we want to apply the colors to the even number of columns which means on Tuesday then on Thursdays and then on Saturdays so the background color of these columns should be applied with a particular color so how we can achieve that basically this is called vertical zebra strips in order to add the background color on every other table column in this case so guys what we can do is instead of having the table row we will be having the th and the TD in this case so since this particular cell is being defined with th and these cells are defined with the help of TD Tex we need to apply The Styling to the th and the TD tags over here so instead of having TR we will say th and then similarly we will copy this and we will provide comma and then paste this once again and this time we will say TD over here so guys to the T tag we are applying the nth child and then it should be even in this case and similarly for TD tag as well separated by a comma in this case we are applying the nth child and it is even in this case and we are having the same color that is the background color that is aqua over here so let me just save this file now and try reloading this page on the browser so as you can see we are getting column wise over here the even columns are having the background color as Aqua in this case and that is how we can simply achieve the vertical zbra strips over here now guys how do we combine the vertical and horizontal zbra strips so simply we can include the TR tag as well once again over here in this case I'll simply copy this particular section of this line and then after providing comma we will have TR as well over here so we say TR for which the nth child is even over here so for all the even rows and for all the even columns as well this particular background color will be applied so let me just save this file now and try reloading this page on the browser so as you can see the even columns are having the background color as well as the even rows that is the second row and the fourth row is also having the background color as Aqua which we have defined over here in the vs code so guys this is the way that we can achieve the combined vertical and horizontal zra strips in the HTML table now guys how we can provide the horizontal dividers over here so let us remove all the styling for now in this case so I'll remove all the lines from the style tag over here let me just save this file now and try reloading this page so there is no styling to this particular table right now so what are horizontal dividers so basically this is nothing but this is a simple bottom line over here that we want to draw after each row so how we can achieve that so guys simply we can provide the Border bottom property to all the table rows inside the table so what we have to do is inside the style tag we have to define the TR tag over here and inside the open and close curly braces we will be having the border and this time it will be applied to the bottom only so over here we will say 1 pixel border width and then we have the Border style as solid and then the color of the Border will be black color in this case so guys basically this border bottom will only be applied to the bottom of all the rows and not on all the four sides of the rows in this case so let let me just save this file now and try reloading this page on the browser so guys there is no change for now we cannot see the horizontal divider that's because we have not provided the Border collapse property to the table so over here what we need to do is we can Define the table tag as well and inside the table tag we need to provide the Border collapse property over here and the value of this border collapse property will be collapse in this case let me just save this file now and try reloading this page on the browser once again so now you can see that a horizontal divider is being displayed to all the table rows over here now guys let us move to another task over here we will be seeing hoverable table which can be achieved by using a hover selector to all the TR elements so guys what this will do is whenever we will get our cursor on the table Row the table row must be highlighted with some background color over here so let us achieve that in the vs code let me just remove all the styling over here and then let me just save this file now and try reloading this page on the browser now guys over here simply we will have the borders for the table and the table data so over here we have the table tag we have the table header and the table data tags as well and for this we will have the Border as one pixel width and the Border style will be solid and the color will be black in this case so guys let me just save this file now and try reloading this page on the browser let me provide the Border collapse property as well to the table tag over here so we have border collapse in this case for which the value is collapsed now and guys we will also provide the padding of six pixels over here so that we get to see certain spacing in between the content and the edges of the borders in this case so guys as you can see we are now having a decent table being displayed on this HTML page now guys let us implement the hover selector over here so what we can do is we can def find the TR tag that's because on a particular row if we get the cursor the entire row needs to be highlighted over here so after the TR tag we have colon and then simply we can provide hover so as you can see it applies while the user designates an element with a pointing device a mouse cursor in this case so basically we will use this hover and then what we will do is we will have a background color in this case so basically what we are saying is whenever user gets the Cur on a particular row of the table the background color will be set to this particular color that we are going to Define so guys let's say we Define the color that is gray in this case so gray color will be displayed as the background color for the entire row when we get the cursor on a particular row of the table so guys let me just save this file now and try reloading this page on the browser so after reloading if you see now when we get the cursor over here on the table Row the background ground color of the entire row is being set to the gray color now guys this is the way that we can use the hover selector in order to highlight a particular row inside the HTML table so now we will see table call group teag in HTML so guys basically the call group element is used to style specific Columns of a table so the call group element should be used as a container for the column specifications so guys previously we had created a table containing the calendar for the month of February for a particular year as you can see the first row is having all the name of the days over here and the other rows are having the dates of the month over here from 1 to 28 and we are also having the table caption that is calendar over here and the source code as you can see in this vs code over here we had defined the table tag and then after that we had the caption that is calendar which is being displayed at the top of the table over here and then the first row is having the names of the days in the month and then guys we have the remaining rows that are defining the dates over here for the month of February which is having the dates from 1 up to 28 considering that the year is not a leap year so guys what we are going to do is we are going to style only particular columns over here which can be done by using the call group tag so as you can see the call group element should be used as a container for the column specifications which we are going to see with the help of examples as well and each group is specified with a call element over here so guys basically inside the call group tag we will also have the call Tag which is going to Define which columns need to have a particular style so guys the span attribute inside the call Tag will specify how many columns that get the style over here and then we have the style attribute as well which specifies the style to give the columns so guys we will check this with the help of example as well and we can also have multiple call Elements inside call group tag so guys let us move to the vs code over here and let's say based on our requirements we want to have the background color for the first two days over here that is Monday and Tuesday and both these columns should have the background color as yellow over here so how we can Implement that so guys basically the call group tag can help us in order to achieve this task and this should come inside the table tag and after the caption tag so guys always remember if you are having the caption tag as well as the call group tag to be implemented so it will always come after the caption tag over here so as you can see this is the call group tag that we are going to use and it is having the starting tag and the ending tag over here which will just act as a container and then guys what we can do is we have to come inside this call group tag and then we can create the call Tag over here this call Tag is not going to have the end tag over here but we are going to have certain attributes that is the span attribute and the style attribute so guys the span attribute will Define how many columns need to have the style that we are going to Define so guys over here the span attribute will have the value as two that's because the first two columns need to have the background color as yellow as per our requirement so guys we come over here we provide the span as two and then we provide the style attribute over here and inside the style attribute we can easily provide the background color property and this background color property will have the name of the color as yellow as per our requirement so guys over here we have provided the background color is yellow for the call Tag which is having the value of span attribute s two over here so guys let me just save this file now and try reloading this page on the browser so as you can see the first two columns are having the color that is yellow guys I'll remove this hover property as well over here since it is not required for now so this is the hover property that that we had provided let me just save this file now and try reloading this page once again so now as you can see the first two columns are having the background color is yellow now guys let us say we have another requirement wherein we want to have the background color for Wednesday and Thursday as some other color so what we can do is again we can create a call tag over here so guys once again when we create the call tag and now we need to provide the span of two once again so that the third and the fourth column can be painted Ed with a particular background color so guys over here we provide the spam is equal to 2 and then again we provide the style attribute and then we use the background color property so guys in the background color let's say we want to provide the color as Aqua over here so guys the Wednesday and Thursday column should have the aqua color as the background color now that's because we have provided the span as two after the first call Tag over here so let me just save this file now and try reloading this page once again so as you can see these two columns are having the different background color now and that is the meaning of using the call group as a container and using the call Elements over here we can specify how many columns we want to style based on our requirements and we can provide the properties of the style attributes over here in this same call tag and then guys again we can have the multiple call tags over here in order to provide different styling properties to the remaining Columns of the table now guys let us say we want to skip this particular column and we want to color Saturday and Sunday with some other color so what we have to do is first of all we need to skip the column having the Friday label over here so we will be creating another call element in this case and then guys over here the span attribute should have the value as one and it will be a blank call element which means it is not going to have any style attribute over here that's because we don't want to provide any styling for this particular column that is having the Friday label and then guys what we can do is after providing this span is equal to 1 for this particular call element we can create another call element and this time the span must be two that's because this third call element is helping us in order to skip this column that is Friday and then we will move to Saturday and Sunday and that is why we can provide the span as two over here so that the style is applied to the last two columns so guys over here we will Pro provide the style and then let's say we provide the background color property and let's say we provide the color as yellow green in this case so guys let me just select this yellow green color let me just save this file now and if you notice the Friday column should be skipped over here that's because we have provided the blank call element in this case and then Saturday and Sunday should have the yellow green color as the background color so after saving this file let me just reload this page once again on the browser so as you can see see Saturday and Sunday is being styled with the background color that is yellow green in this case so guys in this way if you want to skip any of the columns over here you can provide the blank call element in this case whatever number of columns you want to style based on your requirements you can provide that many number of columns in the span attribute of the call tag in this case which will come under the container that is being defined by this call group tag guys apart from this you can also have the visibility property equal to collapse value which can be used to hide the columns so guys let us say in this particular table where Friday column is not having any style if you want to hide this particular column in this table so what we can do is we can come over here and to this call element which is the empty element in this case where we have specified just one column over here with the help of this pen attribute we can provide the style attribute in this case and then we can use the visibility properties so guys this visibility property will have the collapse value and when we use this particular value the column will be hidden when it is displayed in the HTML page so guys let me just save this file now and try reloading this page once again on the browser so as you can see the Friday column that was displayed is now being hidden over here due to the visibility property that is set to the collapse value so now we will see unordered list in HTML so guys HTML unordered list is used to group a set of related items in list and we are going to check this with the help of examples as well now an unordered list starts with the UL tag over here so as you can see we have the less than symbol and Then followed by UL which stands for unordered list and then we have the greater than symbol over here and this is the starting tag of unordered list we have the ending tag as well now each list item starts with the lii tag over here here so we have the less than symbol followed by the Li and then greater than symbol in order to define the list item inside the unordered list and then guys the list items will be marked with bullets that is the small black circles by default so guys let us check this with the help of examples now how we can Define the unordered list in the HTML page so guys over here I have defined the title as the unordered list in HTML simply we will have the paragraph inside the body and this paragraph will say that below content is an unordered list so we have defined a very simple paragraph having the statement below content is an unordered list now guys we will use the UL tag over here so when we type UL as you can see vs code is suggesting us this UL tag and we have created the starting tag and the ending tag in this case now guys inside this UL tag we need to define the list of items so we will be using the LI tag over here so when we we use the LI tag it is also having the starting tag and the ending tag over here and inside the LI tag we can Define the name of the item so let's say we Define coffee as one of the items over here and then similarly we will have more items so I'll copy this and paste this over here in the next lines and then let's say we Define another item as T and then one more item as milk in this case so guys we have three items over here inside the list which is being defined as is the unordered list now guys let me just save this file now and try reloading this page on the browser to see how the list items will be displayed so as you can see this is the list items I'll simply zoom in so that you can see the content properly so this is the way that unordered list items are being displayed with the help of the circular bullets over here in black color so guys this is the default appearance of the unordered list we can have any number of list items in this unordered list so over here let's say we create more items so we can simply copy and paste these list items in this case and let's say we say CocaCola over here as another drink and then let's say we have another list item as Pepsi so let me just save this file now and try reloading this page once again on the browser as you can see now we have five items in this case and all the items are having the prefix in this case it is a circular bullet over here which is defined as the unordered list which is not having any order now guys we can also change this appearance of the bullet in this case so as you can see we can use the list style type over here as the CSS property for the unordered list tag so what we have to do is inside the UL tag we need to define the style attribute so inside the style attribute we can say list style type over here so this is the property that we can use and it is having multiple values that you can see and the disk value is the default default value that is being seen right now so what we can do is we can change the value to Circle in this case so when we set the value to Circle it will be a circular appearance instead of a bullet appearance for the unordered list so guys let me just save this file now and try reloading this page on the browser so as you can see small circles are being displayed now for each and every item inside the unordered list and that is the meaning of the circle value for this list style type another value can be a square sare value as well so we can have the Square value let me just save this file now and try reloading this page once again on the browser so as you can see we have the squares now that are being displayed for this unordered list items now guys we can also have the nested list as well so let's say we want to describe more items inside this T that is we want to Define black T as well as green te in this case so we can have another unordered list inside this list item so what we have to do is we have to come over here and for this list item that is T in this case we can Define another unordered list by using the UL tag over here and inside the UL tag again we can have the LI tag in order to define the list item so let's say we have black T in this case so we Define black T and then again let's say we have another list item and this time we say green te so over here we have defined green te in this case let me just save this file now and try reloading this page on the browser to see how it looks so as you can see black tea and green tea are being displayed inside this list item that is T with a circular appearance over here so guys in this way we can also have the nested unordered list apart from this this list item can also be an image or a link as well which is pointing to another web page over here so guys you can try those things as well as a homework for you so that you can practice on your own so so now we will see ordered list in in HTML so guys HTML ordered list is used to group a set of related items in list and they will be having a particular order in which we Define them now guys an ordered list starts with the o tag over here so we have the less than symbol followed by o which is ordered list and Then followed by the greater than symbol and then inside the list each list item starts with the lii tag in this case so guys the list items will be marked with the numbers by default so let us check this with the help of examples in VSS code over here so guys previously we had written the unordered list items in this case and this is how the unordered list items looks on the web browser now guys what we will be doing is we will Define the ordered list as well below this unordered list so simply we are going to have a paragraph and then we will say below content is in ordered list we have a very simple statement that is below content is in in ordered list now guys we can simply use the o tag over here so when we type O as you can see this is the starting o tag and the ending o tag so in between these o Texs we will be defining our list items so we can simply have the Ali starting and the ending tag over here and then guys let's say we want to have the list of programming languages over here in a particular order so let's say we Define the first list item as Python and then we copy and paste this line of code to the remaining lines and then let's say we have another programming language that is Java and then let's say we have C++ over here and then let's say we have dot in this case guys we have taken these programming languages just for the example to show how the list items will be displayed in the ordered list it doesn't mean that python is ranked number one over here and Java is ranked number two over here this is just for the example purpose and all of the programming languages have their own advantages and disadvantages so let me just save this file now and try reloading this page once again on the browser so as you can see we have the paragraph that is below content is in ordered list and then we have all the programming languages that we have listed python Java C++ and Dot so guys as I have told you this is not the rankings that we are giving to the programming languages you can learn based on your interest and each and every programming language have their own advantages and disadvantages and if you want to learn more about python Python and Java programming languages I have created lot of videos related to the tutorials of these programming languages along with it we have also covered multiple Python and Java programs with the help of examples so guys you can watch all those videos which I have added in the playlist the links I have given Below in the description section so guys this is a way in order to display the ordered list in this case where by default we get the numbers that is 1 2 3 4 and so on based on the number number of list items in this case now guys we can also have the type attribute inside the o tag in order to mention how the list items should be displayed so by default as you can see over here the numbers are being displayed in this case but we can also have letters over here so let's say if you want to display all these programming languages with the help of the uppercase characters so what we have to do is inside the o tag we have something called as type attribute so as you can see it indicates it's the numbering type so it can be a lowercase letter or the uppercase letter or it can also have the Roman numerals as well so over here right now we will be using the uppercase letter in this case so let's say we provide capital A over here so let me just save this file now and try reloading this page once again on the browser so as you can see now the programming languages are being numbered with the uppercase characters that is a b c d and so on so guys similarly we can have the lowercase characters as well over here we need to provide the type that is lowercase a in this case so let me just save this file now and try reloading this page once again on the browser so as you can see we have a b c d and so on the lowercase letters are being displayed and these are used as the numbers for the ordered list we can also have the Roman numbers as well so let's say we provide capital I over here so let me just save this file now and try reloading this page so as you can see these are the Roman number numbers 1 2 3 4 and so on based on the number of the list items all the Roman numbers will be displayed over here in the ordered list now guys apart from this we also have the start attribute of the o tag so guys let us move to the default numbering system over here so we will change this type value to one in this case let me just save this file now and try reloading this page once again on the browser so we are getting 1 2 3 4 and so on but guys let's say if you want to start start with some other number let's say we want to start with the fifth number over here so what we can do is for the o tag we have the start attribute so over here we can provide the start attribute as you can see this integer attribute specifies the start value for the numbering of the individual list items so we can say that whatever value we provide to the start attribute from that value the list items will start so let's say we provide the number five in this case let me just save this file now and try reloading this page once again on the browser so as you can see the numbering is starting from the number that is five and then we have 6 7 8 and so on so guys in this way we can easily use the start attribute as well in order to start the ordered list from a particular number now guys we can also have the nested ordered list as well so inside one of the list items we can have another ordered list so let's say inside the Java list in this case we want want another ordered list over here so what we can do is after the ending tag of this Java list item we come over here and then we provide the ordered list tag that is O and then we again Define the list items and then let's say we want to define the Java versions 19 and 20 so over here we will say Java version 19 and then we will have another list item and then we will say Java version 20 in this case as the second list item inside the nested ordered list over here within Java list item so guys let me just save this file now and try reloading this page once again on the browser so as you can see inside this Java list item we have two more elements that we have defined which is again an ordered list over here that is being numbered as 1 and two and it is saying Java version 19 and Java version 20 in this case so guys in this way we can also have the nested ordered list over here and B based on our requirements we can also have images and other links over here inside of the simple text that we have defined in this ordered list and if you want to have the unordered list over here we can do that as well so instead of using the o tag in this case we can use the UL tag over here which defines the unordered list so we have changed the starting and the ending tag to the unordered list in this case let me just save this file now and try reloading this page once again on the browser so as you can see now a small circle is being displayed instead of the numbers over here which is the unordered list that we have defined inside the nested order list so Guys these are certain ways in order to display the ordered list and the nested ordered list as well so now we will see description list in HTML so guys a description list is a list of terms with a description of each term so let's say we have the list of items and we want to have some description for each and every item inside the list so we will be using the description list in HTML in such cases so guys we have the DL tag over here which defines the description list and then inside the DL tag we can have the DT tag which defines the term that is the list item that we want to Define and we also have the DD tag which describes each term that we have listed in the DT tag over here so guys let us check this with the help of examples in VSS code over here so previously we had seen the unordered list and the ordered list so I'll quickly remove these lines of code over here and then we will say below content is in description list in this case so guys we have a very simple statement below content is in description list and then we will also change description list in HTML now guys the main tag that we are going to use over here is the DL tag over here so we have the description list starting in the ending tag and then we are going to define the term that is the list item using the DT tag so over here we provide DT and then let's say we provide coffee as one of the list items over here and then guys what we can do is we can have the DD tag that describes the coffee item over here so we provide the Double D tag in this case and then we can simply say black hot drink in this case so over here we are just providing certain description for this coffee over here now guys let us say we have another element so again we will have the tag over here and then let's say we have milk in this case and then we will describe it with certain statement so let's say we have white cold drink in this case so guys basically we are describing what milk is over here so this is the format that we can use inside the DL tag first we have the DT tag and Then followed by The Double D tag over here in order to describe the DT term and then again we have more list items along with their descriptions so guys let let me just save this file now and try reloading this page once again on the browser so as you can see below content is in description list so this is the list of items that we have so first item we have coffee and then we have the description that is black hot drink over here and then the second item is milk which is a white cold drink in this case so guys if you have the requirement in such a way that you want to describe certain list of items over here you can have the description deson list in this case and use these DT and the DD tags over here in order to define the terms and the descriptions as well so now we will see class attribute in HTML so guys the HTML class attribute is used to specify a class for an HTML element and multiple HTML elements can share the same class so guys the basic idea behind using the class attribute is to provide certain styling to that particular HTML element and apart from this we can have the same class name being defined for the multiple HTML elements so that they can share the same styling now guys the Syntax for CSS of class is in such a way that to create a class we first write a period that is dot character over here and then followed by the name of the class that we have defined for that particular HTML element and then guys we Define the CSS properties within the curly braces so guys this dot character followed by the class name will be defined inside the style tag that we Define under the head section of the HTML page and then we are going to define the style properties inside the curly braces so guys let us check this with the help of examples now in the vs code over here so guys we have updated the title to class attribute in HTML and let's say we have the paragraph tag over here so we say P tag and then we will say this is first p paragraph So guys we have a very simple statement that is this is first paragraph and let's say we have another paragraph over here and we say this is second paragraph in this case now guys let's say we want to provide certain background color to this paragraph so what we can simply do is we can come over here to the P tag and inside the P tag we can provide the style attribute and then we can simply have the background color and let's say we provide the background color as yellow so let me just save this file now and try reloading this page once again on the browser so as you can see the first paragraph is having the background color that is yellow but the second paragraph is not having the background color so what we can do is we can simply copy paste this background color property of the style attribute to the second paragraph tag as well but guys in this way our code will become little complex and it will be little difficult in order to read the HTML code and with the increasing number of The Styling property the HTML code will become more worse if someone else is going to read your HTML code in future so guys what we can do is we can Define the class over here for the P tag in this case so simply we come inside the P tag over here and then we say class in this case and then let's say we give the name of the class as BG color so guys it depends on you what name you provide to your classes when you use in the HTML elements but make sure that these are sensible names and we can come to know the meaning of it what exactly the class name means and also these class names are case sensitives so you have to use the exact names over here and then again guys what we can do is name and paste to the second P tag as well so that we can Define the classes in both the paragraph tags now guys let me just save this file now and try reloading this page once again on the browser so as you can see we simply have the two State stying properties that we have defined for this particular class name that is BG color so now what we will do is we will come inside the head section and then we will Define the style tag over here now guys as I have told you this is the syntax that we first have to mention the period that is the dot character and Then followed by the class name so over here we provide the dot character and then the class name that is BG color over here now guys make sure that the name of this class name is matching with the class name that we have provided provided in the HTML elements so we can simply copy and paste over here in order to avoid any mistakes so this is the format that is we have the dot character followed by the name of the class and then what we have to do is we need to provide the open and close curly braces inside which we will be defining our styling properties now guys we will provide the background color over here so we can simply say background color in this case and then let's say the background color is yellow over here now let me just save this file now and since the classes are being mentioned in both the HTML elements that is both the paragraph text so in this case both the paragraphs should have this background color that is yellow now so let me just save this file now and try reloading this page once again on the browser so as you can see we have the background color that is yellow in this case and in this way we can easily use the classes in HTML in order to provide certain styling properties to the HTML element now guys apart from this we can also have different HTML elements that can use the same class attribute so what we can do is let's say we have div element over here so we Define another div element and we will say this is first div element and then let's say we have another second div element and we will Define the content as this is second Dev element in this case let me just save this file now and try reloading this page once again on the browser so as you can see we have both the div elements over here being displayed but let's say if we want to provide the same styling properties that is being applied to the first two paragraphs over here to the div elements as well so what we can do is simply we can Define this class that is BG color over here inside the div element as well so I'll copy this and paste it inside both the div elements let me just save this file now and try reloading this page once again on the browser so as you can see the styling prop properties to the div elements are also applied and in this way we can have the same class name being used for different HTML elements if we want to apply those styling properties now guys another important thing is the HTML element can also have multiple classes associated with it so let's say we have another class over here so we Define The Styling of another class so let's say we have the dot character followed by font size in this case the curly Braes we will Define the font size over here so let's say we have the font size property and we Define it as 26 pixels in this case so guys let's say we want the first paragraph to have this font size as 26 pixels so what we can do is since this class name is font size we can apply this class name to the first paragraph tag over here inside the class attribute but along with this we also want the BG color to be applied so that it also has the background color over here so what we can do is after this BG color we can provide the space character and then provide the name of the class that is font size in this case so guys we have applied multiple class names over here which are separated by the space characters and those styling properties from multiple classes will be applied to such HTML element which is mentioning multiple classes over here so in this case the first paragraph will be having the font size as 20 6 pixels and the other HTML elements will be having the default font size so let me just save this file now and try reloading this page once again on the browser so as you can see this is first paragraph is having the font size of 26 pixels compared to the other HTML elements that are being displayed with the default font size so guys in this way we can also combine the multiple styling properties from different classes and apply it to a single HTML element by using using those class names which will be separated by a space character over here so Guys these are the certain things that you should know while using the class names this property of HTML helps us in order to provide the similar styling properties to multiple HTML elements irrespective of their tags so now we will see ID attribute in HTML so guys the HTML ID attribute is used to specify a unique ID for an HTML element and we can use the styling Properties by using this ID attribute that we are going to check with the help of examples as well now guys you cannot have more than one element with the same ID in an HTML document previously we had seen that the class attribute name can be applied to more than one element but when we are using ID attribute we cannot assign it to more than one HTML element inside the HTML document and the Syntax for CSS of ID is in such a way that first we write a hash character so as you can see this is the hash character over here and then followed by the ID name in this case and then we Define the CSS properties within the curly braces so guys let us check this with the help of example now in the vs code over here so guys let's say we have the two paragraphs and then we have the content inside the first paragraph s this is first paragraph and then let's say we have another paragraph over here and then we will say this is second paragraph in this case now guys let's say we want to define the ID for this first paragraph over here so inside the starting P tag we provide the space character and Then followed by the ID attribute as you can see it defines a unique identifier which must be unique in the whole document so we are going to use this ID attribute and then we are going to say par one in this case so guys this is the name of the ID that is par 1 and we can use this par 1 ID over here inside the style text in order to provide certain styling to this first paragraph so let me just save this file now and try reloading this page on the browser so as you can see we have the two paragraphs over here but we don't have any styling So currently we have just applied the ID to this first paragraph but we have not provided any styling attributes to this ID so we will be providing the same over here so as I've told you the syntax for the CSS properties to be defined to the ID is by using the hash character and Then followed by the ID name so over here we will provide hash character followed by par 1 that is the name of this ID in this case and Then followed by the open and close curly braces inside which we will be having the CSS property so guys let's say we want to change the color of the font for this first paragraph over here so what we can do is simply we can provide the color property in this case and let's say we provide the color that is red over here so let me just save this file now and try reloading this page once again on the browser since this time we are providing the ID to the first paragraph and the color is red for this ID only the first paragraph will be having the color that will be updated now when we reload this page as you can see the color of this first paragraph is red over here so guys in this way we can easily use the ID attribute for a particular HTML element and provide certain styling attributes in this case now guys let's say we want to change the font size as well so over here we provide the font size property and let's say we provide 26 pixels as the value of the font size property over here let me just save this file now and try reloading this page once again on the browser so as you can see the font size of this particular paragraph has been updated and it is larger compared to the font size of the second paragraph which is being displayed with the default font size so guys based on your requirements you can have any styling properties over here being defined to this ID that we have defined inside the style Tex now guys what is the difference between the class and the ID so as I've told you ID is being used only with a single HTML element and we cannot use the same ID with multiple HTML elements but we can have the same class with the multiple HTML elements over here so let's say we have another class BG color in this case and then let's say we have the background color property over here and the value for this background color property is yellow and then let's say we also want to have the text align property for this class and we will say Center as the text align property and then let's say we want to use these styling properties that is being used in the BG color class name to this particular paragraph so what we can do is we can simply have the class attribute over here and then we can provide the name of the class that is BG color so in this way the second paragraph will be having the background color that is yellow and it will be also having the text align property as Center so let me just save this file now and try reloading this page once again on the browser so as you can see we have the yellow background color and the text align is also at the center now guys let us say we have another element over here so we have another div element in this case so when we provide div and then let's say we have this this is a div element as the content of this div tag so let me just save this file now and try reloading this page once again on the browser so we have a very simple statement that is this is a div element for this div tag now guys let us say we want to provide the same styling property that we have provided to the second paragraph over here to the div tag as well so what we can do is simply we can use this class name and provide the class attribute inside the div tag as well and give the value of this class name as BG color so when we save this file now and try reloading this page once again on the browser so the same styling property is being provided to this Dev element as well and that is the main difference over here between the class and the ID we can use the class name with the multiple HTML elements over here they can be of the same type or the different types as well but when we are talking about the ID of the HTML element it can only be used with a single HTML element and that is why the ID must be unique in nature now guys there is a very important application of IDs that is using the HTML bookmarks with ID so for example we have the Google search blog link over here I'll simply open this in the new tab and then guys what we are going to do is as you can see this is the content of the Google search Central blog over here and this is the Google search core updates heading in this case so guys I want to know what is the ID of this particular in so simply we will right click over here and click on the inspect option and then we use the select an element tool over here and simply highlight this particular heading as you can see this is the H2 heading which is having a particular ID so you can see this is the ID over here I'll simply copy this ID and what we will be doing is we will be providing a link that is by using the a tag in the HTML document and we will point it to this particular heading over here so what we have to do is simply I'll come over here and provide the a tag in this case and then let's say we provide the content that is click here in between the starting and the ending a tags now guys what we have to do is for the hre we need to provide the link to that web page so simply I'll copy this link of the URL and paste it over here and then we need to provide the hash character over here that's because we want to specify the ID of the HTML element that is present on this page so simply I'll come over here copy this ID once again and then paste it after the hash character so guys the main idea over here is to click on this particular link and go directly on this page where the user will be taken to this particular heading directly and that is what we are going to achieve with this task over here so guys let me just close this tab and then what we have to do is inside this a tag I will provide the target attribute as well which will help us in order to open this link in the new tab so over here the value will be provided as the underscore blank value in this case so that this link is opened in the new tab of the browser so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have the click here hyper Link in this case and when we click on this link a new tab is opened and as you can see we directly come over here to this heading in this case that is Google search core updates over here and if you notice in URL we also have the hash followed by the ID of that particular heading so guys this is the way that we can directly point out to a particular ID of the HTML element on that page and directly navigate to that particular Heading by using the hyperlinks so Guys these are certain things that you should know about the ID attribute in HTML so now we will see I frame in HTML so guys basically an HTML I frame is used to display a web page within another the web page so we are going to check this with the help of example as well how we can display a web page inside the already existing web page now guys the HTML iframe tag specifies an inline frame so basically whatever HTML element we have written in our code besides that HTML element the inline if frame will be displayed with the help of the iframe tag over here in HTML an inline I frame is used to embed another document within the current HTML do doent so let us check the example and along with it we are going to use the SRC which is the source attribute that is used to refer to another web page to display an iframe so guys let us move to the vs code over here and first of all we will change the title to ifame in HTML so we will say iframe in HTML now guys we will have a very simple paragraph So by using the P tag we will say below is an iframe element so guys over here we have a very simple statement that is below is an iframe element inside the paragraph now guys we will provide the I frame over here so basically when we type if frame as you can see this is the tag that we are going to use so this is the SRC attribute that we can use in order to provide which web page we want to display inside this iframe element now guys this another attribute that is frame border we can remove it for now and guys before defining it we need to have another web page over here so let me just go to the Explorer so as you can see we only have the test.html page over here so what we can do is we can add a new file in this case so we click on this new file option and then we will say if frame. HTML in this case so guys basically we will be creating another web page over here which will be used in order to display it inside the iframe so guys let us provide the HTML file tag over here so automatically we will get the boilerplate code with the help of the vs code special feature over here so guys inside this we will have a very simple paragraph and we will say this is an iframe web page so guys basically we are displaying the simple statement that is this is an iframe web page so that we come to know that this is the web page that is created to be displayed inside the iframe so guys let me just save this file now and move to the other file that is test.html so guys as you can see we can switch between the different HTML web pages over here by using these tabs on the vs code so this is the if frame. HTML file and we are going to test.html file now guys we can refer to this if frame. HTML that we have just created so inside the source attribute and inside the double codes we can simply provide if frame. HTML so this is the page that we want to display inside the iframe tag over here inside the test.html so guys let me just save this file now and try reloading this page on the browser so as you can see we will be using the test.html this time so when we refresh this page as you can see this is an iframe web page over here that is being displayed right now and guys you can see the border of the iframe as well which is the default CSS property that is applied to the iframe on this web page guys to make it more clear we can provide the background color as well to the if frame. HTML web page so what we will do is we will come to this if frame. HTML PB page over here and inside the head section we will Define the style and for the body tag we are going to display the background color so that we can easily know what are the boundaries of the iframe element inside the test.html so guys over here let's say we provide the aqua color as the background color for the entire iframe web page so let me just save this file now and come to the test.html and then this time when we reload this page as you can see this is the dimension of the iframe over here and we are getting to see this is an iframe web page now if you notice this is another web page and it is an independent web page over here if we go to the file explorer and as you can see this is the if frame. HTML file that is created so when we double click on this this particular if frame. HTML web page is being opened for you in another tab so guys this particular web page is being displayed in a small if frame over here inside the test.html page and that is the main purpose of this iframe element that is to display another web page inside the existing web page now guys apart from this it is very important that we also provide the title attribute which is used by screen readers to read out what the content of the iframe is so basically we come to this test.html and inside this iframe tag after the source attribute we provide the title attribute as well and then we say test I frame over here so guys basically whatever title we give inside this double codes it will be used by the screen readers in order to read the content of this title attribute so no change will be seen over here so when we just save this file now and try reloading this page once again on the browser there is no change when we provide the title attribute but it will be used by the screen readers whenever they are going to read the iframe content now guys apart from this you can also use the height and width attributes of the I frame so basically this is the default width and height that we have set so far over here we can explicitly set the width and height of the if frame in this case so after the title let me just provide the height of the I frame as 100 pixels over here so we provide 100 pixels and as well as the width as 100 pixels in this case so since the width and height are same the iframe will be displayed as a square I frame over here let me just save this file now and try reloading this page so as you can see it is a square I frame in this case guys we can increase the width and height over here so we will keep it as 300 pixels so it looks more decent over here so as you can see this is a square I frame in this case and that is how you can easily set the width and height of the I frame you can also use the CSS properties as well inside which you can provide the height and width properties when you are providing the style attribute for that if frame now guys by default the border of the iframe is being displayed so as you can see this is the gray border for the I frame so what we can do is we can remove the Border as well so simply we have to come over here and inside the style attribute in this case we provide the Border property and then for this border property we provide the value as none so guys what is the meaning of none value for the Border property it means there will be no border at all for this particular iframe HTML element so let me just save this file now and try reloading this page once again on the browser as you can see there is no order right now and it simply looks like it is some another element which is having a background color property and guys apart from this we can also have the border that is specified so simply we can provide two pixels over here and then solid and black color so guys basically we are providing the two pixels width of the border and it is a solid border and the color of the Border will be black over here let me just save this file now and try reloading this page so as you can see the border is being applied to this iframe element now now guys apart from this we can also have the iframe target for a link so what this means is we can also have the anchor tag over here so what we will be doing is we will Define the anchor tag and after clicking on that particular link that is the hyperlink that is being defined by the anchor tag the content of the iframe element will be updated so guys for this we will have another iframe page over here so what we will do is I will have another iframe HTML page so this time we will say iframe 1. HTML now guys inside this file we will again have the HTML code and again we will have the paragraph tag over here and then we will say this is another I frame but guys this time what we will do is we will have the background color of this page as yellow so we will provide the style tag inside the head tag over here and then for the body tag in this case we will provide the background color over here and the background color will be yellow in this case so guys let me just save this file now I'll show you this file that is being created that is iframe 1 over here so when we click on this this is the iframe 1 that is being created and we can independently view all these files over here I'll simply close these files now guys what we will do is by default the first if frame that we defined will be displayed over here but when we are going to click on a particular link the content of this if frame should change to the second I frame that we just defined with the yellow background color so what we are going to do is inside this test.html we will have a hyperlink over here so let's say we Define the a tag in this case and then we will have the content as click here so guys basically we are asking the user to click on this particular link and for the HF attribute we are going to point it to the iframe 1. HTML page that we just defined which is having the yellow background so guys over here iframe 1. HTML is being provided to the HD attribute now guys by default what is the meaning of this so basically this iframe 1. HTML page will be displayed on the same page where this test.html page is being displayed right now so guys let me just show you that so I'll save this file now and try reloading this page once again on the browser so as you can see since the iframe element is the inline element the anchor tag is being displayed over here to the right of this particular element and when we click on this particular link over here since we have given the HF attribute as iframe 1. HTML this page will be opened in this same tab so when I click on this as you can see this is another iframe so iframe 1. HTML is getting loaded over here but guys what we want to do is when we click on this link we want to open that page inside this iframe so how we can achieve that so basically what we have to do is first of all we need to provide the name to this if frame over here so let's say we provide the name attribute in this case and we simply say I frame over here as the name of this particular HTML element now guys we need to refer to this name when we click on this particular link and that can be done by providing the target attribute so guys if you remember the target attribute is used in order to open this particular web page in the same browser tab or the different browser tab so when we provide the blank value over here this particular page will be opened on a different browser Tab and by default the value is self right now which is making it open in the same browser tab but what we want is we want to open it in this particular iframe so we simply copy the name of this I frame and paste it to the Target attribute of the a tag over here now guys let me just save this file now and try reloading this page once again on the browser now guys when we click on this particular link the I frame with the yellow background should display in this particular iframe element so when I click over here as you can see this is another iframe is being displayed right now in the iframe element that was defined in the test.html element itself rather than opening this particular iframe 1. HTML in the same or different browser tab so guys this is another application wherein you can provide the target attribute as the name of the I frame for that particular hyperlink where you want to load a particular if frame inside the iframe HTML element so now we will see basic Java JavaScript with HTML so guys JavaScript makes HTML Pages more Dynamic and interactive so far we have seen only the HTML elements and tags that we use in order to design the web pages and also we have seen how we can style the HTML documents by using the CSS properties but guys we have not seen how we can click on a particular element inside the HTML document and change the content of the existing HTML element which is known as the dynamic property of a web page and how we can interact with the web page so guys basically this JavaScript helps us in order to interact with the HTML web page and get certain HTML elements updated as per our requirements now guys we are going to have a simple problem statement and we are going to solve this with the help of the example in the vs code and we are going to learn at least the basic JavaScript that we can use in the HTML apart from this we will also be having the upcoming videos in which we are going to learn a lot about the JavaScript that we can use along with the HTML to make our web pages interactive and dynamic so guys let us move to the problem statement so the very first thing that we are going to do is we are going to create a button over here so we move to the vs code so inside the body what we can do is first of all we will have the paragraph and then we will say click below button so guys we have a very simple statement that is Click below button over here now guys how do we create a button so we simply have to create the input tag over here so when we say input as you can see there are number of suggestions that is being provided by the vs code over here and we are looking for something that is input colon button in this case and when we click on this as you can see the type attribute should have the value that is button guys apart from this button value there are many values that you can set so if I show you these are all the suggestions so we can have the button in which case a button will be created over here then we can also have the check boxes and then we have the color then date date time so guys all these are the different types of inputs that we can have inside HTML and we are going to learn about these as well in the upcoming videos as well so for now in order to create the button we are going to select this value of the type attribute inside the input HTML element now guys we are supposed to set the value as well that is the text that is going to be displayed for this particular button so we will simply will say click me over here so guys basically this text will be displayed on the button in order to show what action will be taken when the user clicks on this button you can also have the submit value over here or you can also have the reload value in order to reload the entire page so guys it depends on the functionality of the button to have the value attribute for that particular button now guys let me just save this file now and try reloading this page on the browser so as you can see we have the click below button paragraph that is being displayed and then we have something called as click me and this is a button right now over here now guys nothing will happen when we click on this so as you can see when we click on this nothing is happening right now so guys we need to add certain functionality to this particular button element over here so what we will be doing is the next step is to create a paragraph with ID demo so guys we will do that after this button we will create another P tag over here and then this time we are going to provide the I ID and the ID that we have given is demo to this particular paragraph now guys what we have to do is we need to click the button to show the current date time in the demo paragraph So guys over here I'll simply provide demo paragraph As the text so that you can see where this paragraph is being displayed on the web page so when we reload this page once again as you can see demo paragraph is being displayed right now over here now guys what we want to do is when I click on this button right now we want want to change this demo paragraph to the latest date time that is provided by the system over here right now so currently when we click on this button nothing is happening right now so let me just come to the code over here what we have to do is to this input tag we need to provide the onclick attribute so as you can see we have something called as onclick attribute over here and then guys what we have to do is we need to find the paragraph with the ID that is demo and fill it with the current Tim stamp over here so what what we can do is we have to type document so as you can see document is the word that we have to use followed by Dot and then we have something called as get element by ID so as you can see this is the method that we are going to use that is get element by ID because this paragraph is having the ID that is demo over here so guys we are going to provide this ID inside the open and close parenthesis we need to provide the single codes over here since we have already used double codes and then we provide the demo that is the ID of this paragraph now guys this particular statement that is document. get element by ID and then providing this ID inside the single codes inside the open and close parenthesis will help us to find this particular HTML element that is paragraph over here now guys what we have to do is after finding this paragraph We need to provide Dot and then we need to say inner HTML so we want to change the content of this HTML element so we are going to use the inner HTML property over here so when we click on this and then after this we need to provide equal to and then we need to get the current time stamp of the system so simply we can provide the date and then followed by open and close parenthesis so guys this particular date is being used over here in order to get the current time stamp in this case so guys it may be little complex for you to understand this but slowly with time when we are are going to practice more about JavaScript you will come to know exactly what we are doing over here and along with the practice as well you can understand that basically we are getting the current time stamp of the system and assigning it to the paragraph that is having the ID which is demo over here by using the inner HTML property now guys let me just save this file now and try reloading this page once again on the browser and this time when we click on this particular button this text that is demo paragraph should get replaced with the current Tim stamp so let me just click over here so when we click on this as you can see the current Tim stamp right now along with the date is being displayed over here it is showing us the time in hours minutes and seconds right now when we click on this once again as you can see the minutes and seconds will change over here when we continuously click over here on this particular button so as you can see the time is being changed right now every second the time will get updated over here when we click on this button so this is a very basic JavaScript that we have seen over here right now apart from this what we have done is we have provided this particular statement within the tag over here but instead of having the onclick button and specifying all the steps of the JavaScript over here what we can do is I'll simply cut this and we can also have the script tag over here you can see that the script tag in HTML for JavaScript we can Define it inside the head section or within the body section as well so when we Define it inside the head section over here we can simply have the script and then guys what we can do is we can provide a function over here so we are going to learn more about the function as well in the upcoming videos when we are going to learn about JavaScript tutorial and then let's say we provide the name of the function as demo and then after the open and close parenthesis we provide the curly braces over here and inside the curly braces we provide the statement followed by the semicolon so guys this is is a simple format in order to define a function inside the JavaScript inside the script tag over here now guys function keyword is being followed by the function name and then we have the open and close parenthesis over here so guys what we have to do is we just need to call this function from this onclick attribute so simply we will have the demo function over here followed by open and close parenthesis now guys let me just save this file now and try reloading this page once again on the browser this time when we click on this button once again as you can see the date is being captured over here and it is being written in this demo paragraph So guys this is the way that we can provide the JavaScript line of code inside the script tag over here by defining the functions as well and calling that function on the click of a particular button we can have multiple buttons inside the HTML body tag and then guys we can have different functions based on their functionalities and have different Dynamic content being added to the HTML web page over here guys apart from this we can also set the style attributes with JavaScript so let's say we want this particular text to be displayed in the red color so by default it is being displayed in the black color over here so what we can do is again we can come over here in the demo function that's because when we click on this particular button we are calling the demo function over here with the help of the onclick attribute so guys the control flow comes over here to the demo function and sees that we are supposed to get the element by ID that is demo which is this particular paragraph and set it with the current time stamp by using the date function over here now guys what we will be doing is again we will find the paragraph with the ID that is demo over here so we will type document followed by Dot and then we say get element by ID and then inside the parenthesis we will again have the single quote over here and then we will say the ID is demo in this case and then guys what we can do is in order to set the color as red over here to this text we can provide dot followed by style attribute so guys basically we use the style attribute in order to change the color of a particular text as well when we use the CSS so the same thing we can do over here programmatically so after dot we provide style and Then followed by dot we can set color over here because that is the property that we use inside the style attribute when we Define the colors using CSS and then guys after this we can simply have equal to and inside the double codes we can give the value as red over here so that the color of the text is being changed to red and then after this we have a semicolon so let me just save this file now and try reloading this page once again on the browser so guys by default demo paragraph is being displayed in the black color right now that's because we have provided the style inside the demo function which will be called only after clicking this button so when we click on this button right now let me just click on this as you can see we are seeing the date by using this first line of code over here and by using the second line of code inside the demo function we are getting the color of this text as red color so guys this is the way that we can set the color of the text by using the JavaScript as well and apart from this we can also change the content of the HTML elements so guys this is a very basic JavaScript that we have seen right now in this HTML tutorial we will be seeing more JavaScript videos in the JavaScript tutorial as well in the upcoming videos so now we will see head element in HTML so guys basically the HTML head element is a container for the following elements which are title and then we have style meta link script and the base text so guys basically some of the texts we have already seen in the previous videos as well that are being used inside the head element which is a container for all these tags over here and guys the head element itself must be defined inside the HTML tag now guys one by one we are going to see all these tags over here so first of all the title tag it defines the title of the document and basically the title must be text only and it is shown in the browser's title bar or in the page tab over here so guys we have already seen this in the previous videos as well as you can see this is the HTML document the first tag is the HTML starting tag and then in the end we have the HTML ending tag as well and then inside this HTML tag we have two main tags that is the head tag which can have multiple tags over here that we have just defined right now and then we also have the body tag which defines the body of the web page so guys basically we have the title tag over here inside the head tag which defines the title of the document so as you can see we have head element in HTML so this is the title of this particular HTML document and when we save this file and try reloading this page you can see this title of the document that is head element in HTML on the browser tab over here so guys this is the main functionality of the title tag it helps us in order to display that title of the document on the tab and you must be defining the title of the document whenever you are creating new web pages now guys apart from this we also have the style tag over here which is used to define the style information for a single HTML page so guys what we can do is inside the head tag we also have the style tag over here so when we Define the style tag we can Define The Styling of the HTML elements that are present inside the body so let's say for example we want to define the background color of this body tag over here so what we can do is simply inside the style tag we Define the body tag first of all because for the body tag we want to define the background color so inside the body tag over here we provide the open and close curly Braes and then simply we provide the background color property as you can see when we type background over here we are getting number of Suggestions by the vs code so we can use the background color over here and simply we can Define the value of the color so let's say we want the background color of the entire body of the web page to be yellow color in this way we can Define the style that is the background color inside the style tag so let me just save this file now and try reloading this page once again on the browser as you can see the background color of the entire body has been updated to the yellow color that we have defined inside the style tag in this case so guys this is another important tag that we can use inside the head element of the HTML page now guys we also have the link attribute as well so it defines the relationship between the current document and an external resource so guys one of the best applications of the link link attribute is to link to another external stylesheet which means a CSS stylesheet that you have created so guys when you are going to actually work on big projects basically instead of having this internal Styles or the inline styles that you can Define inside a particular HTML element we are going to mostly deal with the external stylesheet so let me just open the Explorer over here and we will create a new file and we will name it as style. CSS so guys basically this name we have given is the style that is the file name followed by Dot and then the extension that we are using is CSS over here which means it is a CSS file where all our styling properties will be stored so guys let me just create this file and inside this file what we will be doing is let's say the style that we have provided right now for the body I'll just remove from here and paste it inside the style. CSS so basically all the Styles will be stored inside this style. CSS file in this case and let me just create another style for the paragraph tag over here and let's say for the paragraph tag we want the color of the text to be read in this case so when we provide color and then we can simply provide the value that is red so guys what this means is whatever paragraph that we are going to create inside our main HTML file over here will be having the red color of the text in this case so guys in this way we can Define multiple styles for the different HTML elements including multiple properties as well so guys let me just save this style. CSS file and come to this test. HTML I'll remove these style tags for now and then what we are going to do is simply we are going to have the P tag over here and then we will say this is paragraph one in this case and then again we will have another paragraph that is this is paragraph 2 so guys we have defined two simple paragraphs that is this this is paragraph 1 and 2 so guys currently we have not linked this style. CSS file to the test.html which we are going to do with the help of the link tag right now so let me just save this file now and show you how this file will look so when we reload this page as you can see there is no background color for now and even the paragraph being displayed are black in color right now that's because we have defined the style in the style. CSS but we have not linked this particular file to this HTM ml web page so guys what we have to do is inside the head tag we need to provide the link attribute right now and then we are going to use this link colon CSS which means the RL attribute which is the relation attribute it is telling HTML that the file that we are going to specify will be a stylesheet file so guys this is the RL attribute and the value that we must Define in order to link to a stylesheet file and then guys already the style. CSS file name is being taken over here so in the hre we need to provide this tile. CSS file name that we have just defined in this case so guys in this way what exactly we are doing is we are separating The Styling of the document that we have defined in the style.css file over here from the HTML code that we have returned so guys our code looks more cleaner in this case so this is one of the best practices that we must follow that is to create the HTML files and CSS files separately and to link them by using the link tag over here so that we have the separate stylesheets and the HTML files that can be maintained properly so guys let me just save this file now and this time when we reload this page we should get all the styles that are defined inside the style. CSS file so let me just reload this page as you can see we are getting the background color as well and we are getting the red color for this paragraph as well so guys in this way we can make use of this link tag in order to link to a particular external stylesheet file which is mostly the case when we are going to create major projects now guys let us move to another tag over here we have something called as meta in this case which is being used to specify the character set or the page description or the keywords or the author of the document and the viewport so guys basically this viewport settings is being used in order to make the page responsive which we are going to check in the upcoming videos as well so simply what we can do is we have have to come over here and we provide the meta tag in this case followed by colon and then you can see this VP over here which means viewport so when we select this option as you can see the name is provided as viewport and the content is width is equal to device width which means the entire device width will be used whenever the images or other HTML elements are going to scale automatically and then the initial scale is 1.0 over here so guys this is one of the important property of the meta tag that is using the viewport if you want your website to be responsive which means the pages should be displayed properly on the desktop as well as mobile and tablet devices so guys meta tag is being used to provide the viewport settings and apart from that you can also provide the character set the description of the page the keywords that will be used by the search engines in order to display your web page to the audiences when they are going to search for your keyword and then also the author of the document can be defined now guys apart from this we can also have the script tag over here which can be used to define the Cent side javascripts so basically inside the head tag we can also Define the script tag over here and then the script tag can have a particular function so we are going to learn more about the functions when we are going to see the JavaScript tutorial so over here we can have function and then the function name is let's say demo and then we can have our own JavaScript code over here so guys basically whatever JavaScript that we are going to write we can have it inside the script tag as well which can be defined inside the head tag over here inside the HTML now guys apart from this we also have the base tag over here which specifies the base URL or the target for all the relative URLs in the web page so guys what this means is we can also have the base tag over here in this case and we can provide the HF so guys what is the use case of this base tag so guys over here let's say we have a particular folder from where we want to show the images on our web pages so guys what we are going to do is we are going to provide this common directory path from where we are going to refer to that image so I'll simply copy this and paste it inside the HF attribute of the base tag over here so when we provide this value of the HF attribute and then in the end we need to provide the SL character over here now guys this is the base directory that we have defined now guys whatever image that we want to Define inside the body of the web page we can simply provide the name of that image now instead of providing the entire directory path to be displayed so guys let's say we want to provide the image over here along with the source in this case so what we need to provide is the source will be the name of this file so simply I'll copy this name of the file and then after that we provide the extension that is do PNG over here and guys simply this particular image will be displayed right now by using the the base directory path that we have already defined so guys let me just set the width and height of this particular image as well so let's say we have the width as 300 pixels over here and then let's say we have the height as 100 pixels in this case so guys let me just save this file now and try reloading this page once again on the browser so as you can see this image is being displayed right now by using the directory path that we have provided in the base tag over here now guys let's say we don't provide this base tag in this case so I'll just comment out this particular line by using the control and for/ keyboard keys on the windows so let me just save this file now and let us see whether this particular image will be displayed right now so basically when we reload this page once again as you can see the image is not being displayed that's because the HTML page is trying to find the image over here in this particular directory where the main HTML file is present that is test.html which we are viewing right now but guys the image is not present in this directory but it is present in another directory over here which we had defined inside the base tag so guys basically this base tag is being used over here as the target directory where we have to find all the resources that is being used inside the HTML document so when we provide the base tag once again along with the directory path over here from where we are going to extract all the images that we want to display on the HTML page let me just save this file now and try reloading this page once again on the browser so this time again the image is being displayed that's because we have provided the base tag along with the directory where all the resources are present so Guys these are some of the tags that can be defined inside the head element of the HTML so now we will see responsive web design in HTML so guys basically responsive web design is about creating web pages that look good on all devices so whether you view the web pages on the computer or desktop or your laptop or tablets or even your mobile phones so basically whatever web pages that we design using the HTML code it should be looking good on all the devices irrespective from where the viewer is viewing your web page now guys this design is called the responsive web design that means the HTML web page will adapt itself in order to look good on all the devices now a responsive web design will automatically etches for different screen sizes and the view ports responsive web design is about using HTML and CSS to automatically resize hide shrink or enlarge a website to make it look good on all the devices such as desktops tablets and phones so guys as I've told you responsive web design is nothing but it is the attempt in order to make the HTML and CSS in such a way that it should resize hide and Shrink or enlarge the existing HTML elements to different devices such as desktops tablets and mobile phones as well now in order to create the responsive website we add the meta tag over here so as you can see this is the meta tag with the name that is viewport and the content as the width is equal to device width and the initial scale is equal to 1 so guys this we are going to check with the help of example as well we need to mention this meta tag inside the head tag of the HTML document so guys let us move to the vs code over here I'll click here are all the lines of code for now so basically whenever we are going to create the new HTML code what we do is we first type HTML and as you can see HTML colon 5 this is the option that we will select so that we get the boiler plate code in the vs code so guys this is one of the important features of the VSS code it helps us in order to create the boiler plate code that is ready for use so that we can focus on our functionality of the web page now guys over here by default as you can see see this is the meta tag over here with the name that is viewport which is responsible in order to create this web page as a responsive web page so what we will do is first of all we will comment out this line over here so that we don't see a responsive web page that we are going to Define and then guys the title of this document we are going to Define it as responsive web page over here and now guys what we will be doing is first of all we will have the image so I'm going to define the image over here in which case we are going to display this image which is the thumbnail of one of the videos that we have already created so guys the directory path we are going to provide in the base tag over here so that we can refer to that particular path as the parent path so over here we provide the base tag and to the hrf we provide this directory path over here followed by the back slash in this case now guys since we have to use the horizontal scroll bar over here what we can do is we can use the word rep functionality of vs code so we have to come to this view menu over here and then you can see word RP in this case so basically we are using the word RP so that we can see the entire content on one screen without using the horizontal scroll bar over here guys this becomes important when we are having the text that is long enough that goes outside the screen width on this vs code now guys what we have to do is we need to provide the source of this image and then this is nothing but it is going to be the name of the file so let's say we want to Pro provide this file that is the image to be displayed on the web page so we provide the name of this file and the prefix that is the entire directory path is being provided in the base tag over here so we just have to provide the name of the file followed by PNG that is the extension in this case and then let's say we provide the alt attribute as test image over here which is the value so in case the image is not found over here then this test image will be displayed so let me just save this file now and try reloading this page on the browser so as you can see the image is being displayed over here but guys the image is right now enlarged in this case so what we can do is let's say we only want to display the 50% of the image as the width so we provide the width as the 50% so guys this will be the 50% of the screen that will be occupied by the image over here so let me just save this file now and try reloading this page so as you can see only 50% of the withd is being taken by the image right now over here guys what if we don't provide the extension so when we don't provide the extension so basically whatever text is being provided inside the alt attribute that text will be displayed that's because the HTML code will not be able to find this particular file because we have not provided the extension let me just save this file now and try reloading this page so as you can see test image that is the text inside the alt attribute is being displayed right now guys that is why it becomes very important that we provide the alt attribute over here so in case there are certain issues in order to find the files on the server then we can at least have the text being displayed to the user now guys what we are going to do is after this we are going to have the heading that is H1 over here and then we will say this is heading one in this case and then guys again we are going to have the paragraph and we will be having a long paragraph over here so guys for test content we are going to provide the lurm Epsom text so guys this is a long text and this is what we are going to select on the vs code so guys this is another important functionality of V code it provides a certain test data as well in order to test our web pages now guys let me just save this file now and try reloading this page on the browser so as you can see we are having the 50% width of the image that is being displayed and then we are having this is heading one that is being displayed using the edge1 tag and then we also have the P tag which is having certain content over here now guys how do we know whether this page is responsive or not so what we can do is we can press the F12 button on the keyboard so as you can see this is the Dave tools that is being opened right now over here and then on the left the second icon you can see toggle device toolbar so guys basically we are going to select this option so that we can see how this web page looks on different devices with different screen sizes so guys we just need to click over here on this particular icon so as you can see we have selected the responsive option over here we can select different options that is iPhone SE and then there are different options for the mobile phones and the tablets as well but currently we are going to see the responsive option and this is how it is being displayed right now I'll just decrease the size of this Dave console and then when we increase the size you can see that this is the perfect web page that is being displayed that is 50% of the width is being occupied by this image and then we have the heading and then we have the the paragraph as well now guys when we decrease the screen size as you can see the size of the image heading and paragraph is also decreasing up to this point and then guys what is happening is when we decrease the size more you can see that the paragraph is getting truncated now and then the heing is also getting truncated so guys this is the main issue when we are not making our web pages responsive over here when you decrease the width of the screen more as you can see now the image is getting truncated and not the entire image is being displayed right now so guys currently as you can see even the heading and the paragraph is not getting displayed properly right now not all the text is getting displayed currently so you can see this is the horizontal scroll bar that is present right now on this particular screen with very small width so guys what we can do is we can use the meta tag over here that we had just commented during the start of this video so we'll just remove the command from here and then we are going to set the view port property that is under the meta tag in this case so guys let me just save this file now and try reloading this page with the same width of the responsive device over here so when we reload this page as you can see the image is now set to the 50% of this particular current with right now and then the entire heading is being displayed this is heading one and then this paragraph is also being displayed right now and there is no horizontal scroll bar right now that you can see and if I moving left and right it is not moving so guys basically this is a complete responsive page right now just by using this viewport we are making the web page responsive which will adapt itself based on the width of the screen so as you can see the image is being displayed completely even though it is very small but it is not truncating the image or the text from the right hand side so guys in this way we can easily make our web pag is responsive over here and test it by using the Dave tools under which we have the responsive option over here now guys we can make the width of the image as 100% as well so let me just do that quickly so when we do it 100% that is the width of the image let me just refresh this page once again so as you can see the entire width of the device is being taken by this particular image and when we decrease the width of this screen you can see that the image is even scaling down its width automatically so guys this is the main functionality of having the responsive page over here it automatically shrink or enlarges the content that is present inside the web page which is responsive and then to disable this view we can again click on this particular icon over here so that it can be displayed on the normal web page so guys it becomes very important to include this particular line of code that is the meta tag along with the name attribute that is viewport and then this content attribute over here which gets automatically applied when you are writing the HTML code in the VSS code so so now we will see HTM ml style guide and best practices so guys in this video we will see what are the best practices that you must follow while you are writing the code in the HTML document and the same practices you should be following when you are going to work on the big projects as well so guys a consistent clean and tidy HTML code will make it easier for others to read and understand your code and that becomes very important when you're going to work along with your other team members as well so guys are some of the guidelines that you must follow so basically you should always declare the document type as the first line in your document so guys in the vs code what we can do is simply I'll remove all the lines of code over here and simply you can type HTML and the second option that is HTML colon 5 is the one of the simplest option that you can select while creating a new web page so when you select this option you will have the entire boilerplate code that is being generated by the vs code and simply you can start writing your HTML elements inside the body after updating the title of the document now guys what is this first best practice is we need to declare the document type as the first line so over here automatically we have defined the document type over here you can see less than symbol followed by exclamation and then we have the document type and then we have HTML and then greater than symbol so guys this is nothing but the first line of the HTML document that is the document type in this case and that is one of the best practices that you must follow and it will be automatically done with the help of the vs code special feature by generating the boiler plate code now guys apart from this you must use the lowercase element names so whenever you are going to write the content inside your body tag that is let's say you want to provide the H1 tag over here simply you can provide the H1 tag as you can see so this is the lowercase HTML element that we are using and inside this we can simply Define the content that is this is heading one and then let's say we have another div element over here so again we type div and then these are the lowercase HTML elements and this is another best practice that you must follow we can say this is div one over here so guys let me just save this file now and try reloading this page on the browser so as you can see the content is being displayed over here based on what we have written in our HTML document so guys the HTML elements must be always lowercase we must not use the uppercase letters so let's say over here we provide the uppercase letter that is div in this case so as you can see all these are uppercase HTML elements this will help us in order to display the content but guys this is not one of the best practices over here so when we save this file now and try reloading this page as you can see it is helping us in order to display the content but this is not the right practice in order to use the upper case letters for the HTML elements so we must avoid this and use these kinds of HTML Elements which are having all the lowercase letters as the name of the HTML element now guys we must also close all the HTML elements over here so if you notice we have created the H1 and the tip elements these are the starting tags over here and we are ending them with the ending tag which is having the forward slash over here and this is one of the best practices when we are creating the HTML elements there might be certain HTML Elements which do not have the ending tag over here so let's say when we have the input tag this tag doesn't have the ending element and that is why it is not getting automatically generated with the help of VSS code and then we also have the line break tag over here and this again is not having the ending element but what you can do is instead of having the ending element we can end them by using the forward slash over here which becomes very important when your HTML code will be by the XML or xhtml that is the other documents so guys you can end them by using the forward slash in this case just before the greater than symbol over here of the starting tag so one of the best practices is to close all the HTML elements with the ending tag over here for whichever HTML elements they are applicable now guys apart from this we must also use the lowercase attribute names so as you can see in this input tag over here we have provided the attributes and the attribute name is the the type in this case which is using all the lowercase letters over here similarly let's say inside the D we can have the class attribute so this class attribute must have all the lowercase characters over here and that is what we should be using which is one of the best practices in order to define the attributes with the lowercase letters now guys apart from this we must always quote the attribute values so by default whenever we are defining any of the attributes in the vs code you can see after this equal to symbol we are having the double codes over here so always the attribute values must be qued inside the double codes or the single codes over here in this case so as you can see the name of the class that is class name is being defined inside the double codes and then the type attribute is also having the value that is text inside the double quotes over here and that is the meaning of always quote attribute values so this is another best practice apart from that we also specify alt width and height for images so guys whenever we are going to provide the image tags over here so let's say we create the image tag in this case so we must provide the source attribute and apart from that we must be also having the alt attribute and the width and height attribute as well of the image so guys either we can have the width and height attributes directly inside the image tag or else we can also use the CSS properties as well by using the style attribute and providing the width and height properties inside the style attribute rute so these three attributes are a must when we are using the image tag in order to display the images on the web pages apart from that the spaces and the equal signs so guys basically you can see that there are no spaces before and after the equal to sign so guys providing the space characters before and after the equal sign is not one of the best practices over here so you should avoid this so as you can see we have provided the class attribute name and then we have the space character and then we have equal to and then we have another space character so Guys these space characters are useful when you are writing programs in Java or python which we have covered in the other playlist the links I have given in the description section below if you want to learn about the Java tutorial and the Python tutorial as well but in HTML these space characters are not required and these are not one of the best practices that you must follow so guys avoid having the space characters before and after the equal to operator over here whenever you are going to use the attributes inside the HTML elements guys apart from this avoid the long code lines so let's say we have the test paragraph over here so what we can do is we can simply provide the P tag in this case and then we have the test line that is lurm Epsom so guys when we use this text as you can see currently we have the view set as word r over here but when we disable this word rep as you can see this is a long text that is being written over here inside the HTML document ment so guys we must avoid this thing in order to avoid the horizontal scroll bar and we can simply use the word RAB over here and apart from this we should also avoid such large statements inside the web pages so if we see this web page how it looks let me just save this file now and try reloading this page once again on the browser as you can see from left to right the entire statement is being displayed so what we can do is we can display them separately so this second line can be displayed on another another line over here so that the width of the content is limited and users find it easy to read your content on the web page so guys this is another best practice that is to have the short sentences and to avoid the long code lines over here as well now guys apart from this we should never skip the title element so inside the head element over here as you can see we have the title that is the document in this case so let me just comment out this line so guys this thing that is commenting out the title tag over here or not having the title tag at all inside your HTML document this is not one of the best practices since it is used in order to display the content on the browser tab over here so when we reload this page as you can see it is displaying the name of this file right now but this is not the best practice we should always have the title of the web page over here and we should set it to the relevant string based on the content of the web page so in this case we will say HTML style guide over here so let me just save this this file now and try reloading this page so as you can see this title of the document is being displayed on the browser tab right now guys similarly we should not omit HTML and the body tags as well so we can remove this HTML and the body tags as well still it will display the web page as it is so let me just remove these text and let me just save this file now and try reloading this page as you can see it is being displayed but guys this is not one of the best practices we should have the HTML and the body tags as as well so that there are no issues in future and all the browsers read your HTML document properly apart from this we should not omit the head tag as well so similarly we should also have the head tag over here inside which there are multiple tags that we must be defining based on our requirements and then very important thing is setting the viewport which helps us in order to make our web page responsive so guys this is the very important line of code over here that is the meta tag along with the name that is viewport inside the head tag over here which will make our web page look good on all device screens so whether it is mobile or tablet or the computer device irrespective of the size of the screen the web page content will be looking decent as far as user experience is concerned so Guys these are some of the HTML best practices from the exhaustive list of all the best practices that you must follow so now we will see form in HTML so guys basically an HTML form is used to collect user input and we are going to check this with the help of examples as well in VSS code the user input is often sent to a server for processing so guys basically we are going to see the form example with the text input and a submit button along with the labels so guys let us move to the vs code over here so in the body tag what we are going to do is we are going to define the form and before that we are going to have the paragraph tag and then we will say below content is in form we will have the form tag over here so as you can see we have the starting form tag and by default we have something called as action attribute now guys inside this action attribute the value can be the name of the file where the user input will be delivered so that further processing can be done so guys we are not going to provide any value for now over here because this is required when we are going to do some server side processing over here now guys inside this form tag first of all we are going to have the label that will Define what input the user is expected to provide so basically we are going to ask the user for first name over here so guys this is nothing but a simple text that will be displayed on the browser so first name followed by a colon in this case this for attribute is present by default and I'm going to explain you what value should come inside the for attribute in some time so guys basically this is just a label that we have defined now let me just save this file now and show you how it looks on the browser so when we reload this page as you can see below content is in form and we are getting the label that is first name over here this is a simple text that we have defined now guys we want a text box over here so that the user can provide his or her first name in the text box so what we can do is after this label we need to provide the BR tag over here so that the text field comes on the next line because the label tag is the inline element that we have defined so after this we come on the next line and then we say input and guys there are many types of input over here you can provide the button input or the checkbox or color or date or date time as well we have email input as well so in this case we are looking for something called as text input so as you can see input followed by colon and then we have something called as text over here which is the type attribute of the input tag so as you can see this is the type attribute for which the value is assigned as text over here and this will help us to provide the text box so that the user can provide its input in the field now guys this name attribute will be used when we submit this particular form and the content goes to the server on the file that will be referenced by the action attribute over here so we can give certain name to this particular input so we can simply provide F name over here and the next attribute that is ID we can simply provide it as first name in this case so guys basically we are having the name as F name and by this F name this this particular input field value will be referred by the server side script and then apart from that we also have the ID over here that is the first name now guys let me just save this file now and try reloading this page once again on the browser so as you can see now we are having a text box over here that will allow the user to provide the input inside the text box in this case now guys what is the importance of this four attribute over here so basically inside the label tag we have the for attribute so that the user can simply click on this first name so what will happen is the ID of the input tag that will be provided inside this for attribute will be activated so guys for now if I show you when we click on this first name nothing is happening over here as you can see the cursor is not coming over here by default inside the text box so what we can do is we can provide the ID of this text box that is first name over here I'll simply copy this and paste it inside the value for this for attribute in this case now let us save this file now and try reloading this page once again on the browser and now if we try to click on this first name the cursor should automatically be activated inside this input field so guys let me just click over here so as you can see after clicking the cursor is activated over here and then we can simply provide the data inside the first name input field so guys this is the importance of this for attribute that helps us to attach that is to bind to a particular input field over here now guys similarly we will have another label for last name as well so what we can do is again we can provide the BR tag so that the last name can be displayed after this input text box over here and then simply I'll copy these lines of code and then paste it over here and simply we will give the ID as a last name in this case the name will be L name over here and then again we will give the ID as last name over here so that the user can simply click on this last name label so that the cursor is activated on the last name text box so let me just save this file now and try reloading this page once again on the browser so as you can see we are getting the last name text box as well over here we have repeated the labels so I'll just correct it quickly so as you can see now we have the first name and last name over here now guys simply we can have the submit Button as well so what we can do is after this we can simply have the input tag once again and this time we will have the submit button so as you can see input colon sub submit this is the emit abbreviation that is the feature provided by the vs code over here and if you are working on simple notepad you can simply type this input tag and Then followed by the space character and then we have something called as type attribute which should be equal to the submit value over here and then guys what value we want the submit button to be displayed so over here we can simply provide the string that is submit over here so this particular text will be displayed on the button so let me just save this file now and try reload loading this page once again on the browser so as you can see submit button is being displayed over here guys you can have any text over here in this case so submit one is the value so basically the string will be updated over here on the submit button so as you can see submit one is being displayed right now so whatever value you want to have for your submit button you can assign it using the value attribute guys we will add one more V tag over here so that it looks more decent so as you can see submit button is being separated with two BR tags over here so this is a very basic form that we have created for now basically the user will be able to provide the first name and the last name and then click on the submit so what will happen is the file name that is provided inside the action attribute over here will be called and along with that the file can access this first name and last name values that is provided by the user and guys this is the main purpose of using forms in HTML we can also provide certain styling to this form so let's say we want this form to be at the center of this page so what we can do is we can come to this head element and then we can provide the style tag over here so basically we are going to provide the form tag and then we can simply use the text align property and then we can use the value as Center over here so that the form can be aligned to the center of the page let me just save this file now and try reloading this page once again on the browser so as you can see the form is being Center aligned over here and and we can also provide the Border as well so let's say we provide the border and it is going to be 2 pixels over here which is of the type solid and then let's say we provide the color of the Border as red in this case let me just save this file now and try reloading this page once again on the browser so as you can see the border of this form is being given and it is a two pixels border with a red border color over here it is not looking that attractive but guys this is the basic knowledge that you should know about the forms over here in HT ml now guys apart from this we also have the other input types so for now we have checked the type that is text over here which only displays a single line text input field we also have something called as radio which helps us to display the radio button which can be used for selecting one of the many choices and then we also have checkbox which displays a checkbox for selecting zero or more number of choices and then we have also seen the submit that will help us in order to show the submit button which is used to submit the form and then we also have something called as the button similar to submit but in this case by default the button will not call the server side script that is provided in the actions so guys that is the main difference between the submit and button type over here so it basically displays the clickable button so guys all these we are going to learn in the upcoming videos as well so now we will see form attributes in HTML so guys basically there are different form attributes that we can use based on the requirements so the first form attribute is the action attribute which defines the action to be performed when the form is submitted so guys let us move to the vs code over here so we will simply remove the previous lines of code that we had written regarding the form so guys basically as you can see inside the form we have something called as action attribute over here we should be providing the file at the server site which will be responsible to handle the input that is provided by the user so guys instead of having the server s side scripting we will be handling it using the client side scripting over here so I'll just remove this entire form for now so that we get the practice once again in order to write the content of the form so guys we are Simply Having the paragraph that is below content is in form so let me just save this file now and try reloading this page on the browser so this is the content so far that we have written in the HTML now guys we will have the form over here and by default as you can see the action attribute is provided and over here we are not going to have any file but for now we will be using the client side scripting that is the JavaScript over here a very basic JavaScript function will be written so no need to worry with practice you will come to know how we can write the HTML along with the JavaScript code as well guys you can subscribe to my YouTube Channel programming for beginners because I'm going to cover the JavaScript tutorial in the upcoming videos as well so you can subscribe to this Channel and click on the Bell icon so that you get the notifications on the upcoming videos as well now guys what we are going to do is we are simply going to have the input of the type text so that we have the first name text box over here so this is the input of the type text and then the name that we are going to provide is the F name and then the ID we are going to provide it as the first name over here so guys let me just save this file now and try reloading this page on the browser so as you can see we have a text field over here but guys we should also have the label for this text field so that the user comes to know what is the input that is being expected from the user so what we can do is before this input we can simply provide the label over here and by default we are having the for attribute in this case and for this the value should be the ID of the input that we are binding this particular label with so guys basically when the user clicks on this label that is the first name over here we are going to provide this label so when the user clicks on this first name label the input that is this text field should get focused or automatically so we are going to bind it by using this ID I'll copy this and paste it inside the for attribute over here so after saving this file let me just reload this page as you can see we are getting the label that is first name and when we click on this label so as you can see the cursor is activated inside the text box field that is the first name over here now guys similarly we will have the last name as well so we are going to provide the BR tag over here and then simply we will copy and paste past these lines of code I will say last name in this case and then we have this last name over here and we also change the ID to last name in this case and the name will be L name over here so guys basically we also have the second text box in this case let me just reload this page as you can see we have the first name and the last name now now guys we are also going to have the submit button over here so let me just have another BR tag over here and then after this we will have the submit button so input followed by colon and then we have something called as submit in this case so guys basically the type value will be submit and the value that we are going to provide in this button is submit over here so that this text is displayed on the button so let me just save this file now and try reloading this page once again on the browser so as you can see submit is being displayed over here now guys what we will do is once we click on this submit we will display the alert by using the JavaScript on this web page so what we can do is we can additionally have the onclick attribute over here so guys this onclick attribute will help us in order to call the function that we will Define inside the JavaScript so guys when we provide the on click attribute and then we need to provide the name of the function or we can also have the JavaScript code being written over here but guys it is best practice in order to have the JavaScript code separated from your HTML code over here so what we can do is we can simply call the test function in this case so we provide the name of the function that is test followed by open and close parenthesis and then guys what we have to do is we need to Define this test function somewhere so inside the head section for now we will be creating the script tag over here and this script tag will help us in order to write the JavaScript so inside the script tag we will first of all have the keyword that is function and we need to Define this function that is test so after this function keyword we have the test that is the function name followed by open and close parenthesis and then we need to provide the open and close curly braces so guys this is how we create a function inside the JavaScript we will be covering about the JavaScript tutorial as well in the upcoming videos so over here what we have to do is first of all we need to extract the value that is provided by the user inside this first name text box over here so we can simply provide document in this case followed by Dot and then get element by ID so guys any HTML element that is having ID over here we can simply call the document that is the keyword followed by Dot and then get element by ID method and then inside this we can provide the ID of that particular HTML element so in this case we are having the first name as the ID so I'll simply copy this and paste this over here and then we need to get the value inside this text box so simply we can have the dot and then value in this case followed by semicolon so so guys this will return us the value that is provided by the user inside this input text box over here now after getting this value we can store it in a variable so in the left hand side we can simply provide where keyword followed by F name over here so guys this is nothing but it is a variable which is used in order to store data now guys this variable we can use in order to provide the alert that is to display the alert so simply we can call the alert function over here and inside the alert function we can simply provide this F name over here so basically we are just displaying the first name that is provided by the user inside the form in this case so let me just provide the semicolon over here so let me just save this file now and try reloading this page once again on the browser and then now we have to provide the first name and the last name so guys let me just provide programming as the first name and beginners as last name over here and then guys when we click on submit we we should see the alert that will just display the first name that is programming so when we click on this submit as you can see this page says programming over here and this is what is being displayed right now with the help of the JavaScript we are just providing the alert on the same page by taking the input from the user by using this form tag over here and in most of the cases this particular data will be sent to the server and a specific file that can be mentioned over here inside the action attribute will be responsible to handle that data so we come over here on the browser and click on okay as you can see we are getting this data on the URL as well because by default it is a get method over here so guys what is the get method we are going to check that as well now before that we also have something called as Target attribute so basically it specifies where to display the response that is received after submitting the form so guys basically when the user clicks on the submit button the data will go to the server and server will provide certain kind of response to the client as well so that response can either be displayed on the same browser tab or a different browser tab that is the new tab over here and that will be defined by this target attribute so guys we have already seen the target attribute previously using the anchor tag so this self value of the target attribute is set by default over here so basically the response from the server will be displayed on the same window but if we provide the target attribute value and as underscore blank over here then the response will be provided in the new tab in this case so guys you can set the value of this target based on your requirement now apart from this we also have something called as method attribute for which by default the method is get method it specifies the HTTP method to be used when submitting the form data so guys basically there are two types of method we have get and post so over here we have the method attribute and as you can see this get method is by by default in which case whatever data is being provided by the user and when the user clicks on the submit button the data will be passed to the server within the entire URL of the page so as you can see till this test.html we have this URL and Then followed by there is a question mark over here and then guys we have something called as F name and L name which we had defined as the name attributes over here inside the text Fields so those variables are being defined over here and the value are being also passed using the URL and these values are being taken from these text boxes for which the data was provided by the user and guys this is the meaning of the get method over here but in case of the post method when the value of this method is post the values will not be passed through the URL but it will be passed in the form of the HTML body parameters shortly we will see the difference between the cat and post after seeing all the attributes over here we also have something called as autocomplete attri attribute which specifies whether a form should have a autocomplete on or off and guys also we have the no validate attribute which specifies that the form data that is the input should not be validated when submitted one example for this no validate attribute can be while we are using the email IDs so we can validate on the client side whether the email ID that is provided by the user is a proper email ID or not so Guys these two attributes I'll leave up to you as a homework for you so that you can practice on your own now guys what is what is the difference between the get and post so basically there are certain notes about the get request over here so it appends the form data to the URL in name value p and that is what we have seen over here it is appending the data in the form of name and value p over here inside the URL itself apart from that we should never use the get to send sensitive data so guys this is just the first name and last name that we are sending what if there is a username and password over here so in that case we should not be using the get request that's because anyone will be able to know what you have sent as the password over here just by looking at the URL because get method will help the data that is the username and password to be passed with the help of the URL over here and then guys the length of the URL is limited that is 248 characters only can be used it is useful for form submissions where a user wants to bookmark the result and get is good for nonsecure data as I've have told you it is good for first name and last name kind of data but not for the sensitive data such as password or any other contact details that you don't want to be disclosed so basically the nonsecure data it can also be a query strings in Google so guys if you notice when we go to Google over here and type certain string so let's say we provide football as the string over here and when we press enter as you can see after this search we have something called as the Q field over here that is a variable and the value is football and then apart from that we have more name value pads over here so this is basically the get request that is being passed over here and the response we are getting from the server which is being displayed on the browser now guys apart from this we also have something called as post request over here it appens the form data inside the body of the HTTP request and the submitted form data is not shown in the URL so this is perfect when we are sending some sensitive data such as email IDs or passwords or Fields such as contact numbers apart from that post has no size limitations and can be used to send large amounts of data and form submissions with post cannot be bookmarked over here so Guys these are certain differences as far as get request and post request is concerned so now we will see form elements in HTML so guys basically there are various form elements in HTML so one of the form elements is input tag which takes the input from the user so guys let us check this with the help of example in the vs code over over here so first of all what we will do is we will Define the paragraph by using the P tag over here and then we will say below content is in form so guys we have a very simple statement that is below content is in form and then on the next line we will Define the form tag over here so we type form and as you can see this is the Mt abbreviation that is form tag over here we are going to select this and the action attribute helps us in order to provide the name of the server side file that will be responsible in order to handle the data when this form is submitted so guys we are going to ignore this particular action attribute for now since it deals with the file that is on the server side now guys what we are going to do is we are going to Simply provide the input tag over here so that the user can provide certain input so we will provide the input tag in this case and the type will be text over here so guys basically there are multiple types for the input tag so the type text helps us to have a single line text box that will help the user to provide certain data which we can send to the server now guys we can have a particular name to this text box so let's say we provide the name value as name over here and then let's say we provide the ID as YouTube channel so guys basically we are going to provide the YouTube channel name in this particular text box and that is why we have given the ID that is YouTube channel we can modify it as YouTube channel name over here so that it becomes more specific and over here as well we will say YT and then name over here so guys basically we have provided the input text box in this case let me just save this file now and try reloading this page once again on the browser so as you can see below content is in form and we are Simply Having the text box over here that will allow the user to provide certain data inside the text box in this case but guys this Standalone text box doesn't give us much idea about what kind of data is being expected from the user so basically we have another form element that is the label element which will Define the label for this input so guys what we can do is before this input we can have the label tag as well so over here we can provide the label and then guys we have something called as for attribute which will take the value as the ID of the input that we want this label to link with so guys this label will be related to this text box so we should have the ID of this text box being copied and pasted over here as the value of this for attribute so that when the user clicks on this label this particular input text field gets activated so we need to provide the label that is Youtube channel name over here so guys basically this is the simple text that will be displayed to the user so that he or she comes to know that what input is being expected to be provided inside this text box after this label we will have the line break so that the input is displayed on the next line line and over here as well we are going to have the line break in this case let me just save this file now and try reloading this page once again on the browser so as you can see now we have the YouTube channel name and this makes more sense since the user comes to know that inside the text box you are supposed to provide the name of this YouTube channel so guys basically this for attribute helps us in order to click on this label so that we can activate this text box over here so when we click on this YouTube channel name so as you can see the text box is being activated now and then we can simply provide the name of this YouTube channel which you should definitely subscribe if you have not done so so basically we have provided the name that is programming for beginners over here by using the simple label and the input text box now guys let us move to another element we have something called a select which helps us in order to provide the dropdown list so guys over here we can provide the select tag as well so when we provide the select tag we again have the name and the ID over here so let's say we provide the name as social media in this case so we are going to provide the list of social media platforms and the ID we will again keep it as social media so over here we will copy and paste it as the social media over here now guys what we have to do is in between the select starting and the ending tag we need to have the list of values being defined over here so simply we can have the option tag so as you can see option tag will help us in order to have the list of values that we can provide inside the select tag over here so basically the first option let us say we have YouTube as the first option in this case and then let me just copy this and paste it few times so that we can provide the different values for these options so let's say we have the second option is Facebook and then let's say the third option is Instagram over here and then let's say we have Twitter in this case so basically we have four social media platforms over here that we have defined and then guys we also have to provide the value attribute over here because this is the value that is going to be passed to the server and server will differentiate between all these list of values by using the value inside this value attribute so basically we are going to Simply have YouTube as the value over here and we can also have Facebook in this case as the value of the second option and then over here we have Instagram and for the last option we will simply have Twitter so guys basically these are nothing but the values that we have provided and these values will be used on the server side when the user clicks on the submit button these values will be passed for the list of options and guys the text that we have provided that is YouTube Facebook Instagram and Twitter over here this will be displayed at the UI site to the user so let me just save this file now and try reloading this page once again on the browser so as you can see we are getting a drop down field over here and we need to click on this drop down field and we will get all the options in this case so by default the first option is selected over here and when we click on this we can select one of the options so let's say we select Instagram over here so when we click on this so Instagram is selected in this case so guys basically whatever value is being selected over here it will be passed to the server for further processing and again we can have the label over here so after this BR line break we will have another line break over here and let's say we provide the label in this case and this label should belong to this select tag over here so I'll just copy the ID of the select tag and paste it over here and then we will say social media platforms over here so guys we have social media platforms and then we will again have the line break so that all the options are being displayed on the next line let me just save this file now and try reloading this page once again on the browser so as you can see we are getting the social media platforms over here now guys by default the first option will be selected that is YouTube so how do we make this second option that is Facebook as selected over here so simply what we can do is we can come to this option that is Facebook and after the value inside the starting tag we can simply provide selected attribute over here so as you can see if present this Boolean attribute indicates that the option is initially selected so we simply provide this selected option over here let me just save this file now and when we reload this page by default you will be seeing the Facebook option that is selected in this case so when we reload this page as you can see Facebook is being selected by default and then you have to click on this option and then you will see all the list of items that are present in the drop down so guys whatever option you want to display by default as selected option you can provide the selected keyword over here in order to show that particular option selected by default so over here we have selected Twitter in this case let me just save this file now and try reloading this page so as you can see Twitter is being selected by default over here guys similarly for the input field we can also have the value attribute over here so when we provide the value attribute we need to provide certain string over here so let's say we provide test SD string to the value attribute let me just save this file now so guys basically this test string will be displayed by default when the user reloads this page so when we reload this page as you can see test is the YouTube channel name by default and then user can provide the name of the YouTube channel based on the requirements now guys apart from this we have something called as text area which is the multiline input field so guys we can have the multiple line input field as well if you are expecting a long input from the user such as a feedback or the remarks input so guys what we have to do is inside the vs code over here we have something called as text area so as you can see this is the tag and then we can provide the name such as we can provide remarks over here and then again the ID that we are going to provide is remarks in this case and then guys we have something called as rows and calls over here so this is going to define the number of rows meaning how many number of rows vertically the text area will occupy the space and then horizontally how many columns the text area will be occupying the space so over here by default the rows are 10 and the columns are 30 in this case and then guys before this we can also have the label that is assigned to this text area so simply we will have the label and for the for attribute we are going to provide the ID of this text area so I'll simply copy the remarks ID and paste it over here and then simply we will provide the remarks label over here followed by colon and then we also have the line break over here at the end of the label and guys in between the text area tags we can provide the hint to the user we can say provide your remarks so guys let me just save this file now and try reloading this page once again on the browser so as you can see this is the multiline input field that is expandable over here so guys on the bottom right as you can see when you get the cursor it gets converted to this Arrow cursor over here and we can simply click it and drag it to the appropriate point so that we can increase or decrease the size of this particular text area and this is the hint that is provided to the user we can provide the remarks over here and we can simply say this is programming for beginers YouTube channel which I have subscribed so guys basically this is the multiline input that can be provided by the user with the help of the text area HTML element now guys apart from this we also have the button form element over here which will help us in order to display the clickable button so what we can do is simply inside the this form we can have the input tag over here followed by colon and then we have something called as button in this case so guys basically the type will be button so we have already seen the type that is text which is the input field the type button will be a clickable button and the value will be provided over here inside the value attribute which will be displayed on the button itself so for the value attribute we can simply say click me over here followed by exclamation mark So guys let me just save this file now and try reloading this page once again on the browser so as you can see we have this click me button which is being displayed on the right and when we click on this since we have not added any JavaScript code over here nothing will happen but we can simply click on this particular button and based on our requirements carry out the actions that we want to perform now simply we can have the line break after this text area so that the button is displayed on the next line over here so let me just save this file now and try reloading this page so as you can see over here we are getting the button that is being displayed on the UI now guys apart from this we have something called as field set and the legend as well which helps us in order to group the form elements and provide name to the form so guys this entire form that we have seen just now right from the YouTube channel name and then we have social media platforms which is the select element and then we have the remarks which is the text area and then we also have the button this entire form can be enclosed in between the field set which is nothing but grouping of the form elements so what we can do is we can have the field set tag over here so guys what we are going to do is first of all I'm going to set the word rap so that all the content is being displayed on this screen instead of using the horizontal scroll bar now after this form element over here we can simply have the field set in this case so this is the field set tag over here and I'll cut this field set ending tag and paste it after the last input that is the button over here now let me just save this file now and try reloading this page once again on the browser so as you can see we are getting a border in this case and this is defining our form that is all the form elements are present inside this border now guys we can also give the name to this form that will be displayed over here along with the border so what we can do is we can have the legend tag over here so we provide Legend tag and we simply have to Pro provide the name of the form so let's say we provide the name of the form as test form over here so let me just save this file now and try reloading this page on the browser so as you can see along with the Border we are getting the name that is test form over here with the help of the legend tag so guys this is the main functionality of the field set which will help us in order to group the entire content of the form and the legend tag that will give the name to that particular form so guys apart from this we also have something called as data list over here which will help us in order to display the list of the drop down options so guys what we will do is after this button we are going to have the data list over here so guys basically we are going to have the input tag over here and for this input tag instead of having the type attribute we will be having the list attribute so over here we will say list and we will give some value to this list so let's say we provide the browsers as the value to this list now guys we are supposed to define the list list of browsers which will be displayed as the drop down for this input list over here so what we can do is on the next line we can have the data list as the tag in this case and guys for this data list tag we are going to have the ID which will be equal to the value of this list attribute for this input so I'm going to copy this and paste it as the ID over here and in between this data list starting and the ending tag we are going to have the list of options so let's say the first op option over here is Chrome in this case and the value that we are going to provide is Google Chrome over here so we say Google Chrome and then after this we will have more options over here so we will say another browser as Firefox and then let's say we provide Safari as the third option and then let's say we have Edge as the fourth option so let's say over here we say Firefox Guys these values will be displayed on the UI that we provide in between the starting and the end ending tag and the values that we provide will be passed to the server so over here we have Safari as the third browser and then we have MS Edge that is Microsoft Edge as the fourth option over here now guys let me just save this file now and try reloading this page once again on the browser so as you can see we have CAU another input field over here and you can see there is a drop down option in this case so when we click on this drop down option as you can see these are the options that we have are getting so guys we are getting the value as well along with it the text that we had given that is Chrome over here for Google Chrome and then we are getting Firefox Safari and Edge so guys this is another way in order to show the list of options by using the data list and binding it with the input tag by using the list attribute which will have the value as the ID of the data list tag so Guys these are certain form elements that you can use based on your requirements so now we will see input type text in HTML form so guys basically this is the format we have the type attribute in order to Define what kind of input we are expecting from the user so in this case we are going to see the type attribute for which the value is text which defines a single line text input field so guys for example if you are having a website wherein there is a registration form and you want the user to provide the full name that is the first name and last name so such input Texs with the type text can be used in order to help the user provide the first name and the last name data apart from that while you are logging in into some of the websites you will be seeing that username is one of the text fields and that is of the type text over there so guys let us check this with the help of examples in vs code over here so first of all we will have a simple paragraph and then we will say below content is in HTML form so guys this is a very simple statement below content is in HTML form and then what we will do is we will Define the form over here and by default we are getting the action attribute we will ignore this particular attribute for now because we are just checking the input type that is a basic text field with the help of the input tag over here for which the type will be text so guys what we have to do is inside the form we can simply have the input followed by colon and then we can type text over here so guys this is the Mt abbreviation that is provided by the vs code which is one of the special features of the VSS code and this is the reason why majority of the software developers use VSS code as one of their editors so guys when we select this option as you can see the type is text over here and by default the input tag provides a type as text and this will be a basic text field that will be displayed on the UI so guys let me just save this file now and try reloading this page once again on the browser so as you can see below content is in HTML form form paragraph is being displayed and then we are having a simple text field over here that will allow the user to provide the data over here and guys this is a very simple way in order to provide a text field by using the input tag over here with the type attribute as text value guys apart from that we can also have the label for this particular text field so what we will do is we will provide the name as F name over here which is first name and then let's say we provide the ID as first name in this case now guys this particular ID will be used inside the label tag that we are going to Define so before this input tag we will say label in this case and we are having the for attribute which will be expecting the ID of the input tag that we want to link this particular label tag over here so what we will do is we will copy the ID that is first name and paste it as the value for this for attribute and then we will give the label as first name in this case so we have given the first name label over here after the label we will provide the line break in this case so that we can see the text field on the next line over here so guys let me just save this file now and try reloading this page once again on the browser so as you can see first name label is being provided over here and this is a basic text field that is being displayed right now and guys what is the importance of this for attribute so as you can see when we click on this first name the cursor will be activated inside this text field which is linked to this first name label so when we we click on this as you can see now we can provide the first name and we can type the first name over here inside the text field in this case now guys similarly we can also have the last name over here so what we can do is simply I'll copy this lines of code and paste it after the first input tag over here and then simply we can change the ID to last name in this case and over here as well we will change the ID to last name over here the name will be changed to L name we will update the label as well to last name in this case let let me just save this file now and try reloading this page once again on the browser so as you can see we have got the last name as well so when we click on this last name the text field is automatically activated over here and user can provide the required data in this particular text field as well now guys what happens when we provide the incorrect IDs for this for attribute so let's say we provide the last name ID to this first label over here and the first name ID to the second label over here so let me just save this file now and try reloading this page now what will happen is when we click on this first name since this first name is now linked to the second input field the cursor on the second input field will get activated when we click on this first name over here as you can see the cursor in the second input field is getting activated and whatever we type will be displayed in the second input field and when we click on this last name over here so when we click on this as you can see the cursor is getting activated on the first input field so guys that is the importance of providing the correct ID inside this for attribute so whichever input field we want to get activated we should provide the ID of that input field to this for attribute over here inside the label tag and Guys these are certain things you should know as far as input type of text is concerned so over here we are clicking on the correct label and the cursor is getting activated in the required input field over here this text field will be used a lot when you are going to work on the real projects as well so now we will see input type password in HTML form so guys basically we can have the input tag and we can set the value of the type attribute over here as password so that whatever content you type inside this particular input field will not be displayed on the UI and the main use case over here is when you are logging in into a particular website you are providing your username and when you type the password you don't want someone else to see while you're typing it on the screen and that is where we use the input type password over here which defines the password field in this case so guys let us check this with the help of examples in vs code over here so previously we had checked the input type that is text which allows us to provide certain kind of input with the help of a text field and this is how we can see the text field over here so guys what we will do is we will make some changes in this case so we will remove the second input field over here we will keep the first label as username in this case so we will change the label to username over here and the input type will be text and we will set the name as username which will be used by the server in order to refer to the value provided into this text field and the ID that we provide over here will be username in this case and as I've told you the ID of this input must be set as the value for the for attribute over here for the label so that when the user clicks on this username label the cursor for this text field will be activated so we change this to user name in this case let me just save this file now and try reloading this page on the browser so as you can see we have a simple text field over here with a username label and when the user clicks on this username this particular text field will get activated and we can simply provide the username for the login purpose now guys what we will do is we will have another field over here which will be the password field but we want that field to be of the type password so that whatever we type inside that particular text field will not be displayed over here since password should be secret so what we will do is I will simply copy and paste these lines of code over here that is label and input and for this input that is the second input over here we will change the type to password in this case so as you can see the type is equal to password and the name we will change it to password over here here and then the ID as well we will change it to password in this case now guys this particular ID should be linked to this label so I'll copy this ID and paste it inside the for attribute over here and the label should be password in this case so we have changed the label as well let me just save this file now and try reloading this page once again on the browser so as you can see we have got the password text field as well now guys because we have set the type as password over here whatever we type type inside this password text field will not be displayed to the user so when we start typing over here inside this text field so over here we are not able to see the characters that I am typing right now but the same thing when we type over here in the username you can see that we can type anything that we want and we can see it inside the text field over here so guys this is the main functionality of the input type password over here it doesn't allow anyone else to see what exactly you are typing inside that text box now guys when we are working of sending of this data that is username and password it is recommended that we use the post request over here so for example let's say we have another input that is the submit button over here so we will say input type submit and then the value that we provide is submit in this case let me just save this file now and try reloading this page as you can see we have provided submit button in this case so guys when we click on the submit Button as you can see username is equal to so some data will be sent sent over here that's because by default the method for this form tag is get request so we have another attribute over here that is method for which there are two values that we can use the get request which is by default the value that is set for this method attribute and that is what we are using right now over here and the post request which will help us in order to hide this data so by default the get request is being called over here so what exactly is happening I'll show you once again over here we will reload this page and let's say for username we provide username over here and for password we provide simple password in this case but guys when we click on submit over here as you can see the username is equal to username that was provided and password is equal to you can see that what I have typed over here is being displayed inside the URL so we should avoid this whenever we are dealing with submission of the form and that form contains some sensitive data so how we can avoid it is by using the post request over here so when we provide the post method and the request goes to the particular file that we Define in the action attribute in such case the username and password data will be sent as part of the HTTP request so guys it won't be displayed inside the URL over here so let me just save this file once again and try reloading this page on the browser so now if we provide the username in this case and then let's say I provide some password over here and click on submit as as you can see the URL is not displaying the username and password over here but it will be passed to the server as the HTTP request so in such cases when the passwords needs to be validated or if there is any sensitive data that is supposed to be sent on the server side we must use the post request over here by mentioning it to the method attribute of the form tag so that our sensitive data is protected from any other viewer who is trying to submit the form so guys this is the way that we can create the password text field using the HTML form so now we will see input type submit in HTML form so guys basically we can use the input tag along with the type attribute whose value can be submit in order to display the submit button so basically it defines a button for submitting the form data to a form Handler so guys let us check this with the help of examples in vs code so basically inside the form if you want to submit the form data we can use this submit button over here so first of all we will have a paragraph and it will say below content is in HTML form so guys we have a very simple statement over here below content is in HTML form and then guys we will be defining the form over here so as you can see by default we are getting the action attribute in this case for which the value should be a server side file which will be handling the input that is provided by the user in the text Fields inside this form so guys what we will be doing is we we will provide the text field for the username so basically we are going to have the input and Then followed by colon we are going to have text over here so as you can see the type is set to text in this case so basically it is going to display a normal text field over here and then we will say username as the name attribute and the ID attribute as username once again now guys let me just save this file now and try reloading this page on the browser so as you can see below content is an HTML form and and then we are getting the text field over here now guys we must also have the label that is associated to this text field so what we will do is before the input tag we will have the label tag over here and then we will bind this input tag with the help of the ID so we will copy this ID and paste it as the value for this for attribute over here for the label tag so guys I'll paste this ID for the for attribute and over here we will give the label as username in this case and then we will also give the braks for both the tags over here so guys basically we have defined the label over here for the username now guys we can also set a default value for this username text field so we also have something called as value attribute which can help us to provide the default value inside this text field when the user loads this page so we can simply provide user as the default value in this case so guys let me just save this file now and try reloading this page once again on the browser so as you can see username is the label and we are getting the default value that is user in this case and when the user clicks on the label or the text field the user will be able to edit this text field over here so we can simply provide our own username that we had used in order to register on a particular website now guys apart from this let us also provide the password text field over here so we will simply copy and paste these lines of code and then for this type we are supposed to change it to password in this case for the name attribute we will change it to password and ID as well we will change it to password over here and in this password text field we don't need any value because user will be providing his or her own password in the text field so we are going to remove the value part and then we will also provide the label as password over here and once again we are going to link this label with this input type that is password so I'll copy the ID inside the for attribute of the label so let me just save this file now and try reloading this page once again on the browser as you can see we have two Fields username and password now comes the most important part that is how we can create the submit button so guys basically we can have the input tag with the type submit over here so that the username and password that is provided by the user can be sent on the server for further processing so what we can do is again over here we have to provide the input and this time it should be of the type submit so as you can see input colon we have something called a submit over here this is the emit abbreviation that is provided by the vs code so guys basically type A submit and for this value attribute we can provide the text that we want to display on this submit button so guys simply we can provide submit in this case so the submit text will be displayed on the button so let me just save this file now and try reloading this page once again on the browser as you can see this is the submit button that we have created with the help of this type attribute for which the value is submit over here now guys when the user clicks on this submit the username and password will be passed to the server side for further processing so let's say we provide some username over here so we say programming and then let's say we provide test password over here so we say test password in this case so over here the data is masked that's because the password type of the input field doesn't allow us to see what data is being provided by the user so let me just click on submit over here so as you can see in the URL we are getting the username is equal to programming and password it is equal to test password over here and guys this is the way that the form is submitted by using the submit value for the type attribute in the input tag guys it is important that whenever you are submitting the form if it contains any sensitive data such as in this case we have the password field it is recommended that we send the data using the post method so by default inside the form the method attribute is having the the value as get and for that reason we will see all the form data being passed in the URL over here which is not the best practice as far as security is concerned so guys basically we can have the method attribute in this case and then we can say post over here so that whatever form data is present it is sent as part of the HTTP request inside the body and not as the URL over here so let me just save this file now and try reloading this page once again on the browser so now if we provide the username and password over here so let's say I provide username and then password is let's say password test in this case and when we click on submit over here now there is no URL change this time that's because we have provided the form data by using the post request over here and all the data is going as the part of body of the HTTP request so guys this is the way that we can easily create the submit button inside the form by using the type attribute for which the value can be submit for the input tag so now we will see input type reset in HTML form so guys basically the input tag along with the type value as reset will Define a reset button that will reset all the form values to their default values so guys let's say for example you have multiple text fields in a particular form and then when the user tries to enter some data and wants to reset all the data that is clear the data in such cases it would be very helpful in order to provide a button that will help the user to reset all the data and this input tag with the type reset will help us to do the same so let us check this with the help of examples in vs code so guys previously we had seen that we had provided the username text field along with that we had also provided the password text Fields along with their labels and then we had also provided the submit button we had provided the value that is user by default to the username text field so let me show you how it looks on the browser so this is the content of the previous code that we had return so we have a normal username and then we have the password and then we have the submit button in which case we can simply provide the username over here and we can also provide the password which will not be displayed to the user or any other person who is seeing your screen and then we have the submit button now guys let's say the user wants to clear all this data what we can do is simply we can have the input tag along with the type value which is reset over here so guys let me just Define that as well so we provide input followed by colon and then we have something called as reset over here guys this is the m abbreviation that we can use in the vs code over here as you can see input type reset will be autogenerated when we type this so if you're working on any other text editor such as notepad or notepad++ you need to manually type all these characters over here as you can see inside the tag we have the type attribute and the other attributes as well but if you are working with the V s code you can make use of this emit abbreviation over here so we click on this particular option as you can see this is the tag that is input followed by type attribute and then we have the reset value as the type now guys we can also have the value on this button to be set so either we can say reset or we can simply say clear over here so basically this is the text that will be displayed on the button in this case so let me just save this file now and try reloading this page once again on the browser so as you can see we have got the clear button over here now guys let's say I want to increase some spacing in between the submit and the clear button so what we can do is after this input of type submit button in this case we can have ENT and then nonbreaking space that is nbsp so guys basically this is helpful when you want to add certain space characters in between the HTML elements and to avoid them to break into multiple lines so over here when we select this nonbreaking space let me just save this file now and after reloading this page you will be noticing that the space between the submit and the clear button will increase over here so when we reload this as you can see the space got increased in this case and based on how many space characters you want you can provide the nonbreaking space characters over here after the submit button now guys what happens when we click on the clear button so for now there is no data in the username and the password fails and that is why we are not seeing any results over here but when we provide certain data so let's say we provide username and let's say we provide some test password over here and then either we can click on submit but let's say if we have provided some incorrect data over here in multiple Fields inside the form so simply we can click on clear over here so when we click on clear as you can see all the text boxes are cleared now and they will be having their default values if they have any so over here basically we have the user value as the default value inside the username that is we are getting that value but if we remove this value that is user from here then that content will be also removed so let me just refresh this page once again over here and when we provide the data once again that is username in this case and then let's say we provide password over here and then when we click on this clear button as you can see the text Fields got cleared and that is the main functionality of this reset value for the type attribute inside the input tag so now we will see input type rate video in HTML form so guys basically we can have the input tag and inside that we can have the type attribute value as radio which defines a radio button now guys what is a radio button so basically radio buttons let a user select only one of the limited number of choices so you will be having a list of choices and then you need to select only one element from that list of choice and for this purpose we can use the radio button inside the HTML form so guys guys let us check this with the help of examples in vs code so previously we had seen how we can set the input type as text over here then we have also seen the input type that is password we have also seen the input type that is submit and reset buttons over here and this is how the page looks like that is username which is a text field and then we have the password field over here and then we can have the submit button or the clear button in order to clear the data now guys over here we will be having the list of options that you you can select by using the radio buttons so let me just move to vs code over here and first of all we will have a simple paragraph and then we will say select your favorite web language so guys we have a very simple statement that is select your favorite web language over here and then we are going to have the radio buttons in this case so basically we are going to have the input tag and Then followed by colon and then we are going to have the radio option in this case so as you can see the type must be set to radio over here and then we can set the name and ID so guys let's say we provide the name as language over here and the ID let's say we provide HTML as the ID so basically this is a radio button that will be representing the option that is HTML over here I'll correct the spelling of language in this case and then guys we will be having two more options that is CSS and JavaScript so these are some of the web languages that we can select from so we have the ID that is CSS and then we have we have something called as JavaScript ID over here so Guys these are three radio buttons that we have defined let me just save this file now and try reloading this page once again on the browser so as you can see we are getting select your favorite web language we are getting the radio buttons in this case and when we click on this we can only select one of all these three options we cannot select multiple options over here now guys it doesn't make any sense because we are not getting to see the options in the form of the text string over here so what we can do is we can provide the labels to this radio buttons so after the first radio button over here we need to provide the label tag in this case and over here in the for attribute we can provide the ID of this HTML radio button so I'll copy this ID and paste this over here and then we can say I like HTML so guys this is the label that will be defined just besides the radio button that is the first radio button and then guys we want the second radio button to come on the next line so what we can do is after this label we can have the line break tag over here so we can have the BR tag in this case and then once again we will be having the label for the CSS and JavaScript as well so I'll simply copy this line of code and paste this over here and we will copy the ID as well and we will paste it to the for attribute in this case and then we will say I like CSS and guys once again we will copy the label tag over here for the third radio but button and then we will copy the JavaScript as well that is the ID and paste it for the for attribute of the label and then we will say I like JavaScript in this case let me just save this file now and try reloading this page once again on the browser so now as you can see we have some text string as well which is more sensible in order to select one of the options from this list of radio buttons over here and guys since we have provided the label tag and we have linked all those label tags with their respective input radio buttons over here we can simply click on this text string as well to select that particular radio button so let's say if I click on this I like HTML so when we click on this you can see that the radio button is selected over here and then when we click on this I like JavaScript over here so when we click on this this particular option is selected and once again when we click on I like CSS so the second radio button is selected over here so guys basically either you can use the radio radi buttons or we can also use the text over here since we have linked these labels to the radio buttons that are displaying on the left so guys this is the main functionality of having the radio buttons over here in order to select one of the options now guys it is important to note that for all the radio buttons we have provided the name attribute as same that is the language value but what if we provide the different values over here let's say I provide the name value as language one for CSS and language two for JavaScript now guys what will happen in this case so let me just save this file now and try reloading this page once again on the browser now if I select I like HTML so HTML option is getting selected but when we click on this I like JavaScript over here as you can see the third option is also getting selected over here the first option is also activated since we had selected it previously and if we select this I like CSS as well so this option is also getting selected so guys this is because we have kept the names as different for all the radio buttons so over here we have kept as language then we have language one and then we have language two so in order to make the user to select only one of the options from all these options you need to keep the name value as the same for all the radio buttons that you are referring to so let's say if I change the name of this particular JavaScript option to language over here now we have the radio buttons for the HTML and JavaScript that belongs to the same name so let me just save this file now and try reloading this page once again on the browser so now if we select I like HTML so the first option is getting selected but when we select the I like JavaScript so third option is getting selected and the first option was deselected over here so we can select one of the options in this case but in the second option for which we have kept the name as language one over here we can select it and we can see that the third option is still getting selected over here that's because for the second option as as well we need to keep the name value as same so when we change the value to language over here so all the three radio buttons are now having the same value of name attribute in this case let me just save this file now and try reloading this page so now you can select any one of the options from all these three options in this case so guys that is the importance of having the same value of the name attribute for all the radio buttons that you want to display but only want one option to be selected so now we we will see input type checkbox in HTML form so guys basically the input tag along with the type attribute that is having the value as checkbox will Define a checkbox on the UI now guys what do you mean by checkbox so basically checkboxes let a user select zero or more options of a limited number of choices so either you don't have to select any of the options or you can select one option or multiple options as well that is present inside the list of choices as part of check boxes over here so guys let us check this with the help of examples in vs code over here so previously we had seen the input types that is text and then we had also seen password we had seen the submit and the reset button over here and also we had seen the list of radio buttons out of which only one option can be selected and this is how the page looks like on the UI now guys this is not one of the best designs in HTML that's because we are having the submit and clear button in between which should be present at the end of the form over here at the bottom so guys what we will be doing is we will move these two buttons that is reset and submit buttons at the end of the form over here so I'm simply going to cut those lines of code and paste it over here now let me just save this file now enter I reloading this page so as you can see now we are having the submit and the clear buttons at the end now guys what we will do is after this list of radio buttons we will be having the list of check boxes as well so over here I'll simply remove the extra line break tags over here and then guys after the radio buttons what we will be doing is we will be providing the check boxes so over here simply we will provide the input followed by colon and then we have something called as checkbox over here now guys this is the Mt abbreviation which is one of the features of the vs code that we are using if you are using any other editor such as notepad or notepad++ then you have to manually type the entire content inside this tag along with the type attribute for which the value will be check boox over here now guys let us set the name as vehicle in this case so we will say vehicle one and then let's say we provide the ID as bike over here now guys similarly we will have two more options and these options will be car and boat over here so we will change the name to vehicle 2 and vehicle three in this case and the ID over here will be car and then the third option it will be boat in this case so we have just set the ID that is bike car and boat for all all these three options now guys let me just save this file now and try reloading this page once again on the browser so as you can see we are getting the three check boxes over here if you click on them these are getting selected in this case let me provide some line breaks before and after these check boxes so over here we will provide the line break and then over here as well we have to provide the line brakes so that we can see the check boxes properly so let me just reload this page once again so these are the three options that we can see on the UI now guys it doesn't make sense in order to see only those checkboxes so we can associate them with the labels as well so just like how we had done for the radio buttons over here we will be having the labels for the check boxes as well so simply after the check boox we need to provide the label so this label will be for the ID that is bike so we are going to copy this ID that is bike and provide it as the value for this for attribute to the label so that this particular label tag can be linked to the first the checkbox over here so guys we are going to provide the B and then after providing the value for this four attribute we can simply provide the label so we can say I have a bike now similarly we will have the labels for the other two checkboxes as well so we will be providing the line break once again over here after the label and we will simply copy the labels for the car and boat as well and then we will change the IDS so for the second checkbox label we will copy the ID over here and then we will say I I have a car and then this ID that is the third option we are going to set it as the for attribute for this last label and then we will say I have a boot in this case so guys let me just save this file now and try reloading this page once again on the browser so now as you can see we have the list of check boxes over here which are being displayed we can either select a zero of them or one or multiple of the options so in this case when we select I have a bike so this option is getting selected and let's say if you have the car as well so you can select this option also that is I have a car so we can click on the label as well in order to select this option so as you can see I have a car is getting selected you can also select I have a boat as well so this option is getting selected over here if you want to deselect any of the options you can click on that particular option once again so this option is getting deselected in this case so guys this is the main functionality of the checkboxes either you can select zero one or mult multiple of the options that are present as the list of check boxes we can also have the label before the list of check boxes over here so what we can do is simply we can have the paragraph in this case and then we can say select the mode of Transport that you own so guys basically we have a very simple statement over here and then let me just save this file now and try reloading this page once again on the browser so as you can see select the mode of Transport that you own and then we have these three options over here so you can select any of of the options based on your choices so now we will see input type button in HTML form so guys basically the input tag along with the type attribute for which the value that is set as button will Define a simple button inside or outside the HTML form so you can either Define this button inside the HTML form or outside the HTML form as well so let us check this with the help of examples in vs code so guys previously we had seen some of the input fields that is the text field field and then we have also seen the password field as well we have also seen the list of radio buttons as well along with it we had also seen the checkboxes list as well and then apart from that we had seen the submit and the reset input tags as well and this is how the UI looks like so we have the text field the password field and then the list of radio buttons then the list of checkboxes submit button and the clear button as well now guys what we are going to do is after this list of check boxes we will be having a simp button over here that will help us in order to display the alert so what we can do is after the list of check boxes over here simply we will have the input and Then followed by colon and then we will have the button over here so guys this is the m abbreviation as you can see so this is the feature that is provided by the vs code so we can simply have the input tag along with the type attribute that is button and the value attribute will have the value which will be displayed on the button so let's say we want to display click me over here so guys basically this particular text will be displayed on the button so let me just save this file now and try reloading this page on the browser so as you can see we are getting the click me button over here now guys we can apply our own styling over here with the help of the style attribute or we can also have the external CSS file as well so if we want to provide certain styling so let's say I provide the style attribute over here and let's say we want to provide the background color as red in this case and the font color is white so over here we will say color as white in this case so guys basically we are defining The Styling properties over here I'll just select the word RP options so that we can see the entire tag on one screen instead of having the horizontal scroll bar now guys let me just save this file now and try reloading this page once again on the browser so as you can see the background color of the button is changed to red and then we are getting the text color as white over here so guys when we click on this button nothing is happening so it is a part of JavaScript tutorial that we will be seeing in the upcoming videos as well so when we click on this button if we want it to react in a certain way based on our requirements we need to write certain code in the JavaScript so what we can do is for now over here we will be having the onclick attribute so when we say onclick we can provide certain small JavaScript code over here that will be triggered when we click on this particular button so let's say we provide Alert in this case and then inside the open and close parenthesis we simply provide certain string so let's say we provide subscribe to programming for beginners which is the name of the YouTube channel which you should definitely subscribe if you have not done so in order to learn a lot about the HTML and the upcoming web Technologies as well so guys basically this is a string that will be displayed inside the alert box over here subscribe to programming for beginners so let me just save this file now and when the user clicks on this button the alert should be displayed so let me just reload this page once again on the browser and now when we click on this button so as you can see this page says subscribe to programming for beginners so this is a kind of a alert that is being displayed over here on this particular browser and guys this is a part of a JavaScript by using the JavaScript code we can make this alert display on the web browser over here and this is a very basic button that we have seen so far we can also remove remove the styling properties over here so I'll quickly remove the styling properties so that it looks like a normal button in this case so let me just save this file now and try reloading this page so as you can see we have a very simple button in this case and when we click on this button again the alert is being displayed over here so whenever the user will click on the button based on the function that we have return over here that function will be called based on the requirement of the project so now we will see input type color in HTML form so guys basically the the input tag along with the typee attribute color is used to display the Color Picker from where you can pick the colors now guys depending on the browser support a Color Picker can show up in the input field over here so it depends on your browser the users browser that is being used in order to display your web page so guys whenever you are going to use the input tag along with the type value as color you need to test on the different browsers in order to check whether that particular browser supports the Color Picker or not so guys let us check this with the help of examples in vs code so previously we had written these lines of code over here which we will remove for now and then what we will do is simply we are going to have the Color Picker so basically we are going to have the label as well and then after the label we will have the input and then colon and then we have the color in order to have the type value as color over here now guys what we will do is depending on the users selection of the color we will change the background color of the entire page so we will have the name value as BG color over here so that it defines that we are going to change the background color by using this Color Picker and then similarly we will have the ID as the BG color over here and then we are going to copy this ID for this four attribute of the label tag so we are simply going to copy this ID that is BG color over here and then we will say select your background color and Then followed by a colon now this input tag will help us in order to show the Color Picker on the browser so guys let me just save this file now and try reloading this page on the browser over here so as you can see below content is in HTML form and you can see select your background color and by default black color is being displayed over here and when you click on this Color Picker as you can see you can change the color over here so you can also see that we can change the color to blue green or yellow colors as well and similarly based on your requirements you can set the color now guys by default the color that is being displayed over here is black so when we reload this page you can see that the color is black over here so what we can do is we can have the value attribute as well inside the input tag so we can simply provide the value and let's say we want the default color to be red over here so what we can do is simply we can provide the hex value of red color which is Hash character followed by 2 * F and then 4 * 0 so guys basically this is the first comp that is the red component in the hex color and Then followed by the green component which is zero and Then followed by two digits that is blue component which is again zero over here so guys let me just save this file now and try reloading this page once again so as you can see now we have the red color by default and when we click on this red color you can see that we can select any of the color that we want and then we can also drag this Color Picker over here and then accordingly the red green and blue components over here will be updated based on the selection of the colors in this case now guys what we are going to do is once we select the color over here we are going to set the color as the background color of this entire page so we need to add some JavaScript code over here so we will come to this head section and then we will Define the script tag in this case and then guys we are going to define a function so we are going to type function keyword followed by the name of the function so guys if you are not aware about the JavaScript don't worry we are going to write a very simple JavaScript function over here that will help us in order to just change the background color of the web page so this is the keyword that is function that we use in order to define the function followed by the name of the function and then we have the open and close parenthesis we are going to learn a lot about the JavaScript in the JavaScript tutorial videos that is going to be followed after the HTML tutorial so guys please make sure that you subscribe to this channel that is programming for beginners so that you get the notifications on the up coming videos as well now guys inside the curly braces what we have to do is we need to get the value of the color that we have set by using the input tag over here so simply we are going to define the variable by using the V keyword followed by the name of the variable that is color and the way that we get the value is by using the document keyword followed by Dot and then we have something called as get element by ID over here and then inside the parenthesis we provide the ID that is BG color in this case so guys we provide the ID over here followed by Dot and then we have something called as value so guys basically this particular line of code will help us in order to extract the color that we have set over here by default the color will be red but whatever color we set on the browser it will be extracted by using this line of code and that color will be saved in this variable now guys we just have to provide this variable to the background color property of this page over here so what we can do is again we can Define the document keyword followed by Dot and then this time we are going to use the body tag over here and then followed by dot inside the body tag we have something called as style because the background color property is present inside the style property so we are going to use the style property followed by Dot and then we have the background color over here so as you can see once we are typing vs code is suggesting us various attribut that can be used so over here we are going to use this background color in this case and then equal to we are going to provide this variable name that is color over here followed by semicolon so guys we have defined a function inside the JavaScript that will help us in order to set the background color of the body of the web page by getting the value from this input tag over here that we have defined as the color Pier now guys what we have to do is simply we need to call this function so so basically once you are selecting the color using this Color Picker we are going to have a button over here so simply we are going to have the line Brakes in this case and then we will Define the simple button over here so we say input colon button and this time we will say click me as the value of this button and what we have to do is when the user clicks on this button we need to call this test function over here so we can have the on click attribute in this case so we will say onclick attribute over here and simply we are going to provide the name of the function that is test followed by open and close parenthesis so guys once we click on this particular button that is having the value as click May the JavaScript function that we have written with the name that is test will be called and the color will be extracted from the Color Picker that we have set and then the background color will be set using that particular color that we have set now guys let me just save this file now and try reloading this page once again on the browser so so as you can see we have the select your background color and red color is being displayed over here so when we click on this and let's say I want to change the color to Yellow so I drag it over here and then let's say I want this particular shade of color and then what we have to do is simply we can click somewhere else since the color is already set over here in the Color Picker and in order to set the background color of this web page simply we need to click on this button that is Click me over here so when I click on this as you can see the background color of this web page is updated again if we want to update the background color to let's say green color in this case we will set it to light green and then when we click on this click me as you can see it is set to light green color now that is the background color of this web page so guys in this way we can easily use the Color Picker to select one of the colors from the Color Picker over here so let me just reload this page once again so in order to set the background color is red simply we can click on this button that is Click me so this particular red color is already set over here in order to set the color as blue in this case so we will change it to light blue over here and then when we click on this button as you can see the color of the background is updated now so now we will see input type date in HTML form so guys basically the input tag along with the type attribute that is date is used for input fields that should contain a date so basically inside a HTML form or it can be outside the HTML form as well if you want to show a input field that should allow the user to select one of the dates you can use the input tag along with the type attribute that is date over here now guys it is very important that you test the input tag with the type date on the different browsers because depending on the browser support a date picker can show up in the input field most of the latest browsers will be showing the date properly but some of the old browsers will not show the date properly so guys let us check this with the help of examples in vs code so previously we had seen how we can provide the input tag with the type color in order to have the Color Picker on the page over here now guys after this Color Picker we are going to have the input field with the type date as well so what I'm going to do is we are going to have the input followed by colon and Then followed by date over here so guys this is the input tag that we are going to use along with the type date in this case we are going to set the name attribute as birth date and then similarly we will copy this birth date and set it as ID as well for the same input tag over here now guys what we will be doing is we will also have the label in this case so let's say we Define the label and this label will be for this ID that is birth date so I'm going to copy this and paste this for the four attribute of the label and then we will say select your birth date in this case followed by colon so guys the user is supposed to select the date of birth by using this date picker and then guys we will also have the line breaks in this case so we will have the couple of PR tags as well so let me just save this file now and try reloading this page once again on the browser over here so as you can see select your birth date label is being displayed over here and then we have this date picker in this case now guys when the user clicks on this date picker he or she will be having the option to select one of the dates over here so when the user selects this 17th date in this case so it will be set as 17th December 2023 guys you can also change the month and year over here so as you can see the month that is December and the year that is 2023 is being displayed over here you can scroll down and see the future dates as well so let's say we select the 16th date over here so it is 16th of February 2024 so in similar way you can also select one of the past dates as well and let's say if you want to select one of the past dates that is in the 2000 year so we can simply click on this particular drop down arrow and then you can see that the ear are also getting mentioned and we can scroll up a little bit so that we can see the year 2000 in this case so as you can see this is the year that is 2000 and in the month of January let's say you want to select the date as 20 so when you select this as you can see 20th January 2000 date is being displayed over here and guys this is the very simple way that you can show the date picker to the user in order to select the date now guys what we will do is once the user clicks on this button that is Click me we want to extract the value that is being set by the user and show it as a alert on the web page over here so what we will be doing is we already have the input that is of the type button in this case and onclick attribute is pointing to this test function over here in the JavaScript so we simply have to change some lines of code over here inside the JavaScript so we will be removing these lines of code and let's say we provide the variable which will be storing the date that is being selected Ed by the user so guys we need to get the value that is being selected by the user on this particular date picker by using the ID so I'm going to copy this ID and over here we are going to use the document keyword followed by Dot and then get element by ID so guys this is a very basic JavaScript that we are writing over here and we are going to cover a lot about the JavaScript tutorial as well in the upcoming videos so make sure that you subscribe to this channel so that you get the notifications on the upcoming videos as well so after this we are going to have parenthesis and then inside the double codes we are going to have the ID that is birth date over here followed by Dot and then we will say value in this case in order to extract the value of the date that is selected by the user now simply we can use the alert function in this case so we type alert and then inside the parenthesis we have double codes and then we say birth date is followed by colon and simply we have to provide a plus operator because we are concatenating two strings in this case and Then followed by we need to provide the date variable which is storing the date that is being selected by the user so guys we provide the date variable in this case let me just save this file now and try reloading this page once again on the browser now guys whatever date user selects over here and when the user clicks on this button that is Click me we will be able to see the alert that will have that same date that was selected by the user now guys let us us select one of the dates in this case so let's say the user selects the date from one of the years that is 2005 over here so when we select 2005 and let's say it is the month of April and then let's say the date is 15th in this case so it is 15th of April 2005 and then when we click on this button that is Click me as you can see birth date is 2005 that is the year is being displayed followed by the month which is 04 Then followed by the date that is 15 over here so guys in this way we can also use the value that is being set by the user on this date piaker guys apart from this we also have some more attributes that is min and Max in order to restrict certain dates so let's say if we want the user to select only specific dates let's say from the Year 2005 and only from the month of April so what we have to do is simply we have to come over here in the input tag of the type date and then we have something called as main add attribute over here now guys inside this main attribute we have to provide the minimum date that the user can select so it is 205 followed by hun and then 04 and then we have 15 so guys this is the format that is being used right now so if I show you once again when we click on this this is the format that we should be using so let me just copy it from here and I'll paste it once again in this case so that there is no issues with the format so over here we will paste it similarly we will set the me Max attribute as well so we type the max attribute followed by the date so guys in this case we will be having the date as let's say 20th of April so over here we will set it as 2005 and the month is 04 and the date is 20 now guys let me just save this file now and try reloading this page once again on the browser now this time since we have set the minimum and maximum values of the dates as you can see the April that is 04 and 2005 that is the Year is already set over here and we will will only get the option to select the dates between the 15 to the 20th day of that particular month and year because that is the restrictions that we have put by using the Min and the max attributes over here so guys in this way you can also allow the user to only select the dates that are ranging in between the Min and the max values you can also have just the minimum value so that the user does not select the date before this particular value or you can also have just the max value as well so that the user does not select any of the values which is having the date higher than the max value so guys I'll leave that exercise up to you so that you can practice on your own as a homework for you so now we will see input type date time local in HTML form so guys basically the input tag along with the type attribute that is date time local will help us to specify the date along with the time as well as the input field with no time zone so basically whatever time is being selected by the user it will be the local time for that particular user over here now guys it depends on the browser support so you need to test this particular input tag on the different browsers in order to check whether some of the older browsers are still showing the input type with the date time picker or not so guys some of the older browsers might not support this particular type attribute but majority of the latest browsers will be able to show this date time picker so let us check this with the help of examples in vs code over here so basically previously we had seen how we can use the Color Picker by using the type that is color and also we have seen the date picker by using the type that is date this time we will be using the type that is date time local over here so again we will be defining the input followed by colon and this time we will be using this date time local over here so when we select this as you can see the type attribute is being selected as the date time local in this case and then then for the name attribute we will set it as date time over here so guys this is the name attribute and for the ID attribute as well we will set the string that is date time in this case and before this input we will also set the label as well so that the user is able to select the date as well as the time from this particular date time picker now guys for the four attribute we will set the ID of this datetime picker as the for attribute in this case so I'll simply paste this datetime string and then we will say select date time over here so we have select date time followed by colon and then guys after this input tag we will also have the couple of line braks so that the next button that is having the value click me will be displayed on the other line now let me just save this file now and try reloading this page once again on the browser so as you can see we have select a date time as the label and Then followed by the date time picker over here now guys we are having the date along with that we are are also having the time picker as well so as you can see we can select the time as well along with the date and the difference between the date and the date time local type is that for the simple date picker we can only select one of the dates over here but for the date time picker we can also select the time in this case so guys this is the basic difference between the type attribute that is date and the type attribute that is date time local over here so in case you have the requirement of setting the time as well you can use the date time local in this case so we can select one of the dates in this case so let's say we select 15th of December 2023 and the time is 18 over here so 18 0 0 so guys in this case we are setting the date as well as the time over here as you can see now guys let us say when we click on this button that is Click me we want to see the date as well as the time in the alert box so what we have to do is already we had return return the code over here that is having the on click attribute for this button that is Click me we are calling the test function that is already written in the JavaScript so guys this is a very basic function that we have written over here what we are doing is we will be getting the value of the datetime Picker and we will show that value inside the alert function so we simply have to set the ID that is date time over here and then we have to provide the alert that is date time is and Then followed by the variable in which the date time is being selected in this case so guys let me just save this file now Ander try reloading this page once again on the browser I'll select the date as 10th of December 2023 and then let's say the time is 1805 over here so when we set this 1805 in this case you can see that the date and time is being selected over here and when we click on this button that is Click me as you can see we are getting the year that is 2023 followed by the month that is 12 and Then followed by the date that is 10 and then guys we have this character that is T which is separating the date as well as the time time and then after this character we have the time that is 18 which is the hour and the 05 which is the minute in this case so guys in this way you can easily select the date time by using this date time picker over here let me change the timing in this case so we set the time is 2016 over here and then let's say we select the date is 20th of December so guys we have 20 December 2023 and then the time is 2016 so when we click on this button that is Click me over here you can see that we we have the 20th December 2023 date as well as the time that is set as 2016 over here as the alert so guys in this way you can easily use the datetime Picker based on your requirements so now we will see input type email in HTML form so guys basically the input tag along with the type email is used for input fields that should contain an email address so if you want the user to provide his or her email address you should be using the input tag along with with a type that is email over here and basically it is also having the builin validation that will be used in order to validate whether it is the proper email format that is provided by the user now guys you need to test this particular feature on different browsers because depending on the browser support the email address can be automatically validated when submitted so not all the browsers will validate whether the email is being correctly provided by the user but some of the latest browsers will help you in order to validate the email IDs that is provided by the user now guys some of the smartphones as well recognize the email type and add the Doom to the keyboard to match the email input so you will be noticing the Doom button on your keyboard when you are typing and providing your email address on some of the websites and this is one of the important features in the smartphones that can help the user in order to quickly provide the input so guys let us check this with the help of example samples and vs code so previously we had seen the different input Fields such as Color Picker then we had also seen date picker date time picker as well now we will see the input tag with the type email over here so guys simply we will provide the input followed by colon and then we have something called as email over here which is the Mt abbreviation so when we select this the type attribute will have the email value for this input tag now guys let us say we provide the name as email over here and same value we provide to ID attribute as well that is email in this case and we also have to provide the label so before the input tag we provide the label and for the for attribute we set the ID of this particular input tag that is email as the value for this for attribute now guys simply we can have the statement that is provide your email as the label over here followed by colon in this case so guys in this way we can allow the user to provide the email by using this input tag with the type attribute that is email over here let us provide a couple of line breaks after this input tag now let me just save this file now and try reloading this page once again on the browser so as you can see we have this provide your email label in this case and the user can provide the email inside this text box so let's say we provide programming at gmail.com so guys let's say we provide programming over here and when the user clicks on the submit button let us see whether the validation message is being displayed over here here so guys we need to add the submit button in this case because this particular button is the normal button and it is not related to the form so over here we will have the input followed by colon and then we have the submit button over here and we provide the value as submit in this case which will help the user in order to submit the details that is being provided over here and then guys what we will do is we will provide the method as get so that we can see the values that are provided by the user for all these input tag inside the URL itself so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have got the submit button now so let us provide the email over here so we just provide programming in this case and let me just click on this submit button so as you can see please include an at theate in the email address programming is missing an at theate so guys over here this particular web page is telling us that we don't have the at theate character which must be present inside the email address so let me just provide that at the rate as well and let us see if now our email address is being accepted over here so when we click on the submit Button as you can see please enter a part following at theate programming at theate is incomplete so guys over here the email addresses are designed in such a way that after the etherate we have something that is gmail.com or anything based on which platform you have created your email address so let's say we provide Gmail over here and let me just click on on the submit button now so as you can see now it is allowing us to submit over here and since we have provided the method as get we can see all the values of different parameters that are going inside the URL so as you can see we have the background color then we have the birth date date time as well as the email over here so as you can see programming and then we have the at theate which is being encoded as per 40 over here and then we have the Gmail that was provided by the user as the email address inside this text box so guys in this way you can easily use the input tag with the type attribute that is email in order to help the user provide his or her email address while he or she is submitting the form it will also help us in order to validate whether it is a proper format of the email or not based on your requirements so now we will see input Type image in HTML form so guys basically we can have the input tag along with the type that is image which defines an image as a submit button so guys inside of the submit button we can also have the input type that is image over here that will act as a submit button and it will be the image that will be displayed as a button over here now guys the path of the image is specified in the SRC attribute so let us check this with the help of examples and vs code as well it acts as a submit button and sends the coordinates of the user click as X and Y coordinates so guys let us move to the vs code over here and what we will be doing is after the submit button we will will also have the input type that is image so let us provide the line brakes over here so that the image is being displayed on the next line and then over here we will provide the input followed by colon and this time we will have the image in this case so guys it is important to note that we are having this input Type image inside the form over here so that the form attributes can be submitted and the form that is having the method attribute as get will help us in order to see all the value that is being set by by the user inside the browser URL so guys let us check this we have the input tag with the Type image over here and for the source part we will have one of the images that is sample image that I have already stored in this directory path where this particular test.html file is present now guys as the alternate we will provide submit as the value over here in case there is any issue as far as displaying of this image is concerned now guys apart from this we will also set the width and height of the image so let us say we have the width attribute has 50 pixels over here so we set it as 50 PX and then let's say we have the height attribute as well and we have the same value that is 50 pixel in this case so guys let me just save this file now and try reloading this page once again on the browser so as you can see this is the image that we have set over here guys the height and width of this particular image is set in such a way that it is not looking very clear but for the example purpose we will see what happens when when the user clicks on this particular image over here so guys let's say we click on this bottom right of this particular image so when we click on this as you can see the attributes are getting displayed over here in the URL so you can see that BG color that is the background color that is coming from the color pickle over here and then apart from that we have the birth date date time as well as email and then in the end as you can see we have something called as X which is 47 and then we also have y that is equal to 47 so this is nothing but the attributes where the user has clicked on this particular image over here now let us click on this image once again somewhere over here that is at the top left so when we click on this so as you can see again the attributes are updated over here and you can see that the X attribute is now set as 2 and Y attribute is now set as one over here so guys in this way we can come to know at which particular coordinates by using the X and Y coordinates over here the user has clicked when the user clicks on the image that represents the submit button inside the form so guys this is the basic functionality of the input tag that is having the type that is image over here we can set it as the normal image that is by having the source attribute we can set the image for this particular submit button and let's say when the image is not present inside the directory so let me just provide one over here that is sample uncore image 1.png which is not present inside that directory let me just save this file now and try reloading this page once again on the browser so as you can see since the image is not present so we can see what text is being provided as the alt attribute so that is what we can see over here that is submit in this case so guys in this way we should be having the alt attribute as well in case if there is any issues as far as displaying of the image is concerned on the browser let me just save this file once again and reload this page on the browser and if we click somewhere in the middle of this image so you can see that the parameters are updated once again and this time the x value is 23 and the Y value is 25 so guys since we have set the height and width as 50 pixels over here so we will see all the numbers between 0 to 50 in this case based on where the user clicks on that particular image so now we will see input type file in HTML form so guys basically the input tag along with the type file defines a file select field and a browse button for file uploads so basically if you have the requirement inside your HTML form to help the user in order to upload one of the files as attachment then you can use the input tag along with the type file and that is what we are going to check with the help of examples as well in the VSS code so let us check this in the VSS code over here I'll remove the previous lines of code that we had written so now over here we have a very simple statement that is below content is in HTML form inside the paragraph tag and then we have the form tag over here along with the method that is get request in this case now guys what we will do is we will have the input of the type file over here so input followed by colon and then we have the file in this case in order to have the type attribute as file over here and then guys for the name part we will provide the name as my file and simply we will copy and paste this value to the ID attribute as well and before this what we will do is we will also have the label and then for the for attribute we will have the ID of this input tag that is my file so we will simply copy this ID over here and then for the label part we will say select a file so that the user is able to select the file by using this particular input that is of the type file over here and then guys after this let us have the line breaks so over here we will have the BR tag and Then followed by the input tag with the type submit over here so we have the input tag with the type submit and the value that we will provide is submit in this case so guys basically this is the input tag that will help you in order to select one of the files such as JPG files or the PNG files as far as images are concerned or you can also select a PDF file or any other file of your choice now let me just save this file now and try reloading this page on the browser so as you can see below content is in HTML form and then we have this select a file label over here and we get this choose file button in this case with the help of this input tag with the type file over here now guys user will be able to choose the file in this case so when the user clicks on this button that is choose file you will be able to select the file by using the file explorer over here so let's say we choose this favicon JPG file in this case so I select this the file name is favicon over here and we click on open in this case so as you can see favicon do jpg is being selected and when the user clicks on submit this particular file will be sent on the server and we are going to check this with the help of the URL in this case so let me click on submit over here so as you can see my file in the URL it is equal to favicon do jpg so basically this particular file was sent on the server with the help of the get request and that is why we are getting the name of the file inside the URL and guys this is the way that you can use the input type file inside the HTML form in order to allow the user select one of the files based on your project requirement so now we will see input type hidden in HTML form so guys basically the input tag along with the type hidden defines a hidden input field that is not visible to a user so in case in your project requirements you want to have the hidden input field which is not supposed to be displayed to the user you can use the input tag along with the type hidden over here now a hidden field lets the web developers include data that cannot be seen or modified ified by the users when a form is submitted so let's say if you want the user to submit one of the values which is always going to be fixed when the user submits the form then you can have the input field along with the type hidden that will not be showed to the user but when the user submits the form this particular field will be also submitted and will be processed by the server it is very important to note that while the value is not a displayed to the user in the page content it will be visible and can be edited by the user by using the browsers developer tools or the view Source functionality so basically if the field is related to the security you should not use the hidden inputs as a form of security in that case so guys we will check this with the help of examples as well so let us move to the vs code over here so previously we had seen how we can use the input tag along with the type file which will allow the user in order to choose a file and submit to the server now guys after this input we will have another input over here which will be of the type hidden in this case now this particular input will not be displayed to the user and the name that we are going to give to this input field is hidden over here and the value that we want to be submitted to the server is 1 2 3 4 so guys basically this is the fixed value that will be submitted to the server when the user clicks on submit button and this value will be displayed on the URL since we are using the get request over here as the method for the form so so guys over here simply we will have the ID as well and we will say hidden in this case and this ID we are going to provide to the four attribute of the label as well so let me just provide the label and for the four attribute we will give the value as hidden and then we will say hidden input after this label so guys we have hidden input after this label which means after this label there is a hidden input which will not be displayed to the user but we can simply inspect this particular input and see what the value is present inside that input and then guys after this we will simply have the couple of line braks over here let me just save this file now and try reloading this page once again on the browser so as you can see hidden input after this label but we cannot see any input over here but when the user clicks on submit button in this case as you can see my file is equal to blank in this case that's because we have not selected any of the files over here but after that we have the hidden label over here and then we have the value as 1 2 3 4 that's because for that label we had set the value as 1 2 3 4 over here and on this web page we can simply inspect that hidden field so let me just right click over here and click on inspect button so now we can see all the elements over here of the HTML page and let me just go over here to the hidden input after this label when we click on this after this you can see the input of the type hidden in this case which is having the value as 1 2 3 4 so basically anyone who is aware about the HTML code can come over here and make the changes in this value so let's say we can change the value to 9876 over here and press enter in this case and then after this when we click on the submit Button as you can see hidden value is now containing 9876 over here so this particular value can be changed by the user if he or she is aware about this developer tools and can make changes over here for the value attribute of the Hidden input tag so guys you should not use this to perform one of the security measures but simply to allow the user in order to submit the form and along with it you want some constant value to be passed to the server then you can make use of this hidden input tag so now we will see input type month in HTML form so guys basically the input tag along with the type month allows the user to select a month and a year and this we are going to check with with the help of examples as well now depending on the browser support a date picker can show up in the input field and we are going to select one of the months and the year as well it is very important to note that the type month is not supported in Firefox Safari and Internet Explorer Lev let us move to the vs code over here and previously we had seen the input tag along with the type file and the type hidden as well now after this hidden input tag we are going to have another another input with the type month over here so input colon month as you can see this is the Mt abbreviation over here which is a special feature of the vs code that allows us in order to have the required attributes inside the input tag so guys over here we have the type as month that is set and then let's say we provide the name as month over here and the same value we provided to the ID attribute as well now before this we are also going to have the label and for the for attribute we are going to have the ID as month over here that's because when the user clicks on this particular label you will be seeing the month picker over here that will be displayed to the user in order to select one of the months and the year so guys over here we will say select a month in this case as the label and then after this input tag we are going to have couple of line braks over here so that the submit button is showed on the next line now let me just save this file now and try reloading this page on the browser so as you can see select a month the label is being displayed over here and then user can click on this particular label or you can also click on this icon over here in order to display the month and the years as well so when we click on the label as well so as you can see over here you can select one of the months in this case so let's say we go back to 2022 and then the month of April we want to select so when we select April 2022 it is being displayed over here and when the user clicks on submit button input field will be passed via the URL to the server that's because we have provided the method value as get request over here inside the form tag so guys let us submit this form over here so as you can see the month field is having the value as 2022 and the month that is 04 being displayed over here which is being passed to the server and guys this is the way that we can have the input field with the type month that will allow the user to select one of the months over here the past month or the future months can also be selected in this case so now we will see input type number in HTML form so guys basically the input tag along with the type number defines a numeric input field which will allow the user to only provide the numbers in this input field now you can also set the restrictions on what numbers are accepted so guys we will check this with the help of examples as well with the help of Min and Max attributes so let us move to the vs code over here and previously we had seen the different input types such as file and then hidden and the month type as well now we will provide another input field over here and this time we will have the type as number in this case so when we press enter as we can see the type is being defined as number over here and for the name field we will provide it as age because we will ask the user in order to provide the age of the user so guys the same value we will copy it as the ID as well for this particular particular input field and before this we will also have the label tag over here and for the for attribute we will have the value as age so that the user can click on this label and provide the number to this input field in this case so we will provide the label as provide your age in years followed by colon and then after this input tag we will also have the couple of line breaks so that the submit button is displayed on the next line so guys let me just save this file now and try reloading this page on the browser so as you can see provide your age and years is being displayed over here and the user will not be allowed to provide any of the alphabets or the special characters in this case that's because we have provided the input field with the type number which means it will only accept the numbers in this particular input field so guys over here let's say if I provide some string in this case so I'm not able to type the characters and only the numbers are being displayed over here let us try the special characters so over here I'm typing the special characters as well but it is not being displayed over here that's because the input field will only accept numbers in this case so let's say we provide the number as 105 in this case and when we click on submit button over here you can see that the age attribute is being displayed inside the URL with the value of5 over here now guys over here we can provide any number in this case let's say we provide 10,000 1,05 over here and click on submit so basically it is submitting that value but for the age Factor we need to restrict the numberers so that the user can specify the age in between two numbers over here the user can also provide a negative number in this case so when we go down over here as you can see negative numbers can also be displayed over here and we can increase this number as well so guys basically you can use these arrows in order to increment or decrement the numbers as well but guys let us put some restrict over here so the minimum age that we want is 18 in this case and the maximum age is 60 over here so we provide the main and the max attributes over here so as you can see the main attribute is equal to 18 and the max attribute is 60 in this case let me just save this file now and try reloading this page once again on the browser so now we will be able to restrict the age in between the 18 and the 16 numbers so as you can see when we are decreasing the number from 18 it is not decreasing so 18 is the minimum value that we can provide and 60 will be the maximum value so when we provide 59 and increase this number it is going to 60 and then when we click on the Arrow once again so it is not incrementing the value and when we click on the submit button the age is being taken as 60 over here and what if we provide a number which is greater than 60 manually so let's say we provide 67 over here and when we click on submit as you can see we are getting the validation value must be less than or equal to 60 so so basically this is the validation which will be displayed for the minimum number as well so when we provide 15 over here and click on submit so value must be greater than or equal to 18 over here so this is the validation that is automatically provided by the input field with the type number over here where we provide the Min and the max numbers in this case guys apart from this we can also have the step attribute which will increment or decrement the value by that particular step value over here so let's say we provide five as the step value let me just save this file now and try reloading this page once again on the browser and now if we provide any of the numers so let's say we provide 18 over here and when we increment it by one so over here when we press on this upper Arrow as you can see the next number is 23 that's because we have provided the step as five by default the step is set as one over here so that the user can increment or decrement the value by one but you can change that step value and we have set it S5 over here in this case so that is the reason why when we increment the value the value is getting increased by five and when we decrement the value the value is decreasing by five and that is how we can set the attributes that is min max and the step value as well apart from this we can also have the default value by setting the value attribute over here so let's say the default age of the user is 25 in this case so we provide the value is 25 let me just save this file now and try reloading this page so as you can see by default you will be able to see the ages 25 so now we will see input type range in HTML form so guys basically the input tag along with the type range defines a control for entering a number whose exact value is not important so we are going to display a slider control over here so basically the type range is responsible to display a slider control that the user can slide and select one of the values based on the range Now the default range values is from 0 up to 100 that we are going to check with the help of examples as well and we will also see the different attributes that are min max and step attributes so guys let us move to the vs code over here and previously we had seen the different input tags with the types file hidden month and the number as well now we are going to Define another input field over here so basically we are going to type input followed by colon and then we are going to say range over here so we type range so as you can see this is the Mt abbreviation over here which is one of the important features in the vs code so we select this option and the type attribute is set to range over here now guys for the name part we are going to set it as range in this case and for the ID as well we are going to keep the same value that is range and then over here we will set the label and we are going to set the for attribute as the range value over here now guys let's say we want the user to provide the age previously we had asked the user to provide the age inside the text field over here but now we are going to ask the user to provide the age with the help of the slider so over here we will say provide your age using slider in this case and Then followed by colon so guys basically a slider will be displayed to the user with the help of this input field with the type range in this case and by default the range value will be 0 up to 100 in this case let me just save this file now and and try reloading this page once again on the browser so as you can see provide your age using slider and this is the slider that the user can use in order to select one of the numbers using the slider now guys by default you cannot see the numbers over here so basically we are going to have another tag over here on the right side of the slider and we will have the output tag in this case so basically let's say after this input field we will have the output tag over here and this output tag will have the default value so let's say the default value in this case that we set is 20 over here and the same value we are going to set it as 20 in this case let me just save this file now and try reloading this page once again on the browser so the slider is adjusted at the value of 20 and the same value is being displayed in the output tag over here now guys when we slide this in between the two numbers we cannot see the change in this number which is being displayed inside the output tag so what we have to do is we have to write a JavaScript code and there is a attribute that we are going to use as you can see in order to display the value we have to use the JavaScript and this is one of the properties that we are going to use that is next element sibling so guys basically what is the meaning of this so after this input field we have the next element that is output which can be referred by using the next element sibling over here so what we have to do is inside this input field with the type range we will say on input over here so this is the attribute that we are going to use in such a way that when the user slides this particular slider over here the on input attribute will be called and inside this on input attribute we will be using the this keyword followed by Dot and then we are going to use this property that is next element sibling over here so we have next element sibling which is going to refer to this particular tag that is output in this case and Then followed by Dot and then we have something called as value so basically what we are doing is we are setting the next element siblings value over here to which value so again we need to provide equal to since we need to assign certain value to this particular sibling over here after this input tag and the value will come from this input itself so basically we are going to use the this keyword followed by Dot and then we will say value so guys over here we are taking the value of the slider by using this do value in this case and then this value will be assigned to the next element sibling which is the output tag in this case so let me just save this file now and try reloading this page once again on the browser now when the user slides over here as you can see the number is also getting updated so when the user goes to the extreme right you can see that the maximum number is 100 and to the extreme left the number is set to zero over here so guys in this way we can also have the number that is being displayed to the user by using the on input attribute and Then followed by the next element sibling property followed by Dot and then the value of the slider can be set to this particular property now guys apart from this we can also restrict the values that is the Min and the mix values over here so what we can do is inside the same input tag in this case we can provide main attribute over here and let's say the minimum attribute we want is 18 and the maximum attribute we want is 60 over here so let me just save this file now and try reloading this page once again on the browser so as you can see the value is set to 20 by default and when we take it to extreme left the value is 18 which is the minimum value and to the extreme right the maximum value is 60 over here and that is what we had set as the minan and the max value for this particular input field with the type range so guys this is the way that you can set the input field with the type range over here and also display the number to the user so that the user comes to know what is the number that is being selected by the user apart from that you can also have the step attribute as well so let's say we provide the minimum value as 1 and the maximum value as 50 over here and we provide the step as 10 so in this case the values will be incremented or decremented by 10 so let me just save this file now and try reloading this page once again on the browser so as you can see 20 is the default value and then when we take it back it is 1 and then 11 21 31 41 and then the last value will be 50 over here which is not being taken because the step value is 10 and the maximum value should be 51 over here so when we set it to 51 let me just save this file now and try reloading this page now as you can see the maximum value that can be taken is 51 over here so guys in this way you can also set the step attribute as well for the range input field so so now we will see input type te for telephone number in HTML form so guys basically the input tag along with the type te which stands for telephone is used for input field that should contain a telephone number with a pattern mentioned so we will check this with the help of examples in vs code as well so basically whenever you have the requirement wherein you want the user to provide the telephone phone number you can have the input field with the type te and you can also mention the pattern as well so let us check this with the help of example in vs code so I'll remove these lines of code that were return previously over here and inside this form simply we will have the input along with the type te so input followed by colon and then we have Teel and this is the EMT abbreviation which is one of the special features of vs code that is the editor which we are using so guys over here we will say telephone as the name attribute and ID as well we will provide it as the telephone that is the value of this input field and before this we will also have the label and for the four attribute we will paste the same value that is the ID of this input field as telephone over here and then we will ask the user to provide telephone number so guys basically we are asking the user to provide the telephone number over here and for now we have not provided any pattern in this case so basically when we don't provide any pattern it will act like a simple text field in which you can provide any data over here so let us check this without any pattern over here so we will provide the couple of line breaks in this case and Then followed by the submit Button as well so input colon submit and we will provide the value as submit over here so that the value on the button is displayed as the submit value so guys let me just save this file now and try reloading this page on the browser so as you can see below content is in HTML form form and then we are asking the user to provide the telephone number so the user can click on this label and as you can see the cursor is highlighted over here and you can provide the telephone number over here and apart from this it is also accepting the characters as well so when the user clicks on submit over here as you can see the telephone name is being provided in the URL that's because we have provided the method value as get request over here and all the values that are provided by the user in the HTML form will be passed as the parameters inside the URL and that is what we can see over here now guys there is no certain pattern in this case which the user has followed so what we can do is we can provide the pattern in this case so over here there is a pattern attribute and let's say we want the first three numbers to be provided by the user between 0 to 9 so we have the open and close square brackets over here and then we say 0 to 9 in this case and then open and close curly braces we we want three numbers over here and then followed by Hyun so guys basically over here we are trying to provide the pattern that the user must follow while providing the telephone number and While submitting the pattern will be checked whether the input that is provided by the user is correctly matching with the pattern or not and then only the value will be submitted so over here we have provided the first three numbers that is going from 0 up to 9 and Then followed by a hyphen and then let's say we want two more number numbers over here that should go from 0 to 9 so again we have inside the open and close square brackets 0 to 9 which is the range but this time we need only two numbers so inside the open and close curly braces we will provide two as the number and then again we provide Hyun and once again we want three digits over here so let's say I'll simply copy the first format in this case and paste this over here so guys basically first of all we are expecting the three digits in this case that should go from 0 to 9 followed by a hyphen over here and then we are expecting two digits from 0 to 9 followed by hyphen once again and then again we are expecting three digits from 0 to 9 in this case which completes our pattern over here of the telephone and then one more thing that we can provide is the placeholder which will tell the user what is the format that the form is expecting so over here simply we will provide 1 2 3 that is the first three digits followed by Hyun and then two more digits that is four and five followed by hyphen and then three more digits that is 6 7 8 and this completes our pattern that we have just defined over here for the pattern attribute in this case so guys let me just save this file now and try reloading this page once again on the browser so as you can see provide telephone number is now having the placeholder in this case that we have provided and then user can simply click over here and provide the numbers that is 1 2 3 and let's say if the user doesn't provide the numbers in this pattern so what will happen so over here let's say I provide 4 5 6 7 8 without any hyphen character that is Dash character over here so let me try submitting this so as you can see please match the requested format is being displayed over here and the form is expecting these two hyphens after the first three digits followed by two digits and then once again The Hyphen should be present so over here after first three digits we have hyen followed by two digits and one more hyphen over here followed by three digits in this case let me just click on submit once again over here so now as you can see the form is getting submitted with the telephone number that is provided by the user over here so in this way we can provide the telephone number with this particular format we can have any other number over here as far as we are using the correct pattern for the telephone number that we are providing so when the user clicks on submit once again so as you can see this is the updated telephone number that is provided by the user and anytime the pattern is not matched over here so let's say we provide another number wherein we provide four digits after the second hyphen in this case so when we click on submit over here we are getting the error message that is please match the requested format so basically this exact pattern needs to be matched by the user While submitting the form and based on your project requirement you can provide the required format that you want the user to provide the telephone numbers so so now we will see input type time in HTML form so guys basically the input tag along with the the type time allows the user to select a time with no particular time zone over here so basically the user will be provided the input field that will allow the user to select one of the time that is the hours and the minutes based on the user's requirement so over here depending on the browser support a Time picker can show up in the input field so basically the user will have the As and the minutes to select based on the time picker over here so let us check this with the help of example in vs code over here so previously we had seen the input tag along with the type te which helps us to provide the telephone number in a particular pattern now this time we will have another input tag over here followed by colon and this time we will have time in this case so this is the Mt abbreviation so as you can see input tag along with the type time over here which will help us in order to select the time and over here we will provide the name as time and ID as well we will provide the same value that is time over here and before this we will have the label and we will ask the user to provide the time and for the for attribute we have copied the time value over here and we will ask the user to provide time in this case followed by colon and then after this let us have couple of line braks over here with the help of BR tags so let me just save this file now and try reloading this page once again on the browser so as you can see provide time label is being displayed over here and when the user clicks on this label Button as you can see this particular input field is now having the focus the user can simply click on this clock item over here that is the icon and when the user clicks over here as you can see we have the hours as well and the minutes as well over here so the hours it will go from 0 0 up to 23 so let's say what is the current time right now it is 1633 so we select 17 and then let's say we want to select 30 over here so 1730 is the time so we select the 77 130 and when we click on the submit button the 1730 time should go as part of the parameter inside this URL since we have provided the method as get request over here so when we click on submit Button as you can see the time parameter is having 17 followed by a colon so over here we are having the asky value of the colon that is percentage 3 a in this case and Then followed by 30 which represents the minute so basically we have the hour that is 17 and minute that is 30 over here which is being passed to the server with the help of the get request so guys we can select any time over here we can also select the pass time in this case so let's say we select 1036 in this case and then we press submit as you can see the time is being passed as 1036 to the server for further processing so in this way we can have the input field that will help the user in order to select the time in the form of hours and minutes so now we will see input type URL in HTML form so guys basically the input tag along with the type URL is used for input fields that should contain a URL address so basically let's say if you have a URL or a link to a particular web page and you want to provide it inside one of the text boxes on one of the websites that will help you in order to have certain validations in place so guys depending on the web browser the URL field can be automatically validated when submitted so it depends on the browser that the user uses in order to F the form or provide the URL in one of the input fields that is being developed by you so you should test it thoroughly on different browsers whenever you are going to use the input tag along with the type URL and some of the smartphones also recognize the URL type and adds a doom to the keyboard to match the URL so basically this is one of the important features of the smartphone in today's date that it will help the user in order to provide a DOT button on the keyboard while the user is providing the URL in the input field that is provided by the developer so guys let us check this with the help of example in vs code over here so previously we had seen the input field with the type telephone number and the type that is time over here which will allow the user to provide the telephone number and the time respectively now after this we will have another input field followed by colon and this time we will have the type as URL so we simply type URL over over here and this is the memt abbreviation which is one of the special features of vs code in this case so guys as you can see we have the input tag along with the type URL and over here for the name attribute we will say URL in this case and for the ID attribute we will say URL once again and before this we will also have the label over here and for the for attribute we will say URL so that when the user clicks on this particular label this input field is focused so that the user can Pro provide the required link or the URL to the web page so over here we will say provide web page Link in this case followed by colon so we are asking the user to provide the web page link which is also known as URL to a particular web page and after this input tag we will have couple of line breaks over here so let me just save this file now and try reloading this page once again on the browser so as you can see provide web page link label is being displayed over here and when the user clicks on this particular particular label the input field is getting focused in this case and the user can provide the URL over here so let's say we provide Google as the URL so is this the correct URL no in this case this is not the correct format of the URL still we will test it let me just click on submit button over here as you can see please enter a URL error message is being displayed over here so let me just provide Doom over here in this case so let us check whether now this URL will be submitted or not so when we click on submit so again please enter a URL so the important thing that we are missing over here in this case is the https so whenever we go to the web browser and type one of the URLs so let's say we want to go to Google so simply we can provide google.com over here but automatically the browsers are designed in such a way that they provide the https prefix over here before the domain so that is what is being expected over here in the HTML form as well so before this let us say we provide https followed by colon and then two times forward slashes over here now this is the correct URL that will be accepted by this input field of type URL over here so let me just click on submit button once again so as you can see URL parameter is being displayed over here in the URL and then after that we have the https and the entire URL that we have provided in this case it is displaying the asky characters over here for the Lear and the forward slashes that we had provided so guys in this way you can provide any of the URLs based on your project requirements and ask the user to paste a particular link to the web page if the user is expected to do so but make sure that you test this input field on different browsers because we never know what browser the actual user is using while he or she is submitting the HTML form or using it outside the HTML form as well so now we will see input type week in HTML form so guys basically the input tag along with the type week allows the user to select a week and a year so basically the user will be provided with the input field where he or she can select the week of the entire year and that particular year as well now depending on the browser support a date picker can show up in the input field so it is very important for you as a developer to check your input field on the different browsers whether it is supported by the various versions of the browsers so let us check this with the help of example in vs code over here so previously we had seen the various input field types that is telephone and the time and the URL as well now we will have another input field so over here we will say input followed by colon and this time we will have the week type over here so that the user is able to select one of the weeks of the year so the type is weak in this case and let's say we provide the name as weak over here and the same value we will provide it as the ID attribute in this case now before this input tag we will also have the label so that the user comes to know that a week is supposed to be selected from his or her side so over here we will provide the value for the for attribute as weak in this case and Then followed by select a weak and then colum so guys basically we have a label and Then followed by the input tag over here of the type week in this case and then we will have BR tags over here that is line braks so that the submit button is displayed on the next line so let me just save this file now and try reloading this page once again on the browser so as you can see select a week label is being displayed and Then followed by the input field where the user is expected to select one of the weeks so when we click on this calendar icon over here as you can see a calendar is being displayed and user can select the entire week from a particular year so let's say we want to select the next week in this case so we can click on any of the dates over here so let's say we select this so it says week 51 of the Year 2023 and then when we click on submit over here as you can see the week name is being displayed as the parameter inside the URL followed by the year that is 2023 and Then followed by week 51 over here which you can further process based on your requirements so guys in this way user can easily select the required week based on the data that the user wants to select over here we can select any of the past weeks as well and click on submit and then accordingly the week will be passed to the server for further processing we can also select one of the future weeks over here so let's say we go to the year 2027 in this case and then let's say we have the month of December over here and we select the first week of December over here and week 48 2027 is the year when we click on submit 2027 week 48 is being displayed in the URL so guys in this way you can simply have the input field and allow the user to have one of the weeks for a particular year so now we will see input attribute value in the input field so guys basically the input value attribute specifies an initial value for an input field which will be the default value when the user clicks on submit button without providing any value to this input field so basically it means the value attribute will help us to provide the default value inside the input field let us check this with the help of examples and vs code over here so I'll remove the previous lines of code in this case and we will only keep the form tag over here and then guys inside this form tag what we will do is we will have a P tag that is the paragraph tag in this case and then we will say below content is in HTML form so basically we have a very simple statement that is below content is in HTML form and simply we will ask the user to provide the first name and the last name over here here so simply we will have the input with the type text in this case so we have the input tag along with the type text and then let's say the name attribute is f name and the same value we provided inside the ID as well and before that we will have the label and for the for attribute we will say F name over here so that this particular label is linked to the input field in this case and then we will say first name over here as the label followed by colon now guys this is this is a very simple text field in this case and we will not have any value inside this input field so let us have a submit button in this case so we provide input followed by colon and then we have the type submit over here and the value will be submit in this case let me just save this file now and try reloading this page once again on the browser so as you can see we have two times below content is in HTML form so previously we had provided another paragraph before that form as well so I'll just remove one paragraph in this case let me just save this file now and try reloading this page so as you can see we have the first name over here followed by colon and then simply we have the input field in this case guys we want the submit button to be on the next line so simply we will provide a couple of line braks over here using the BR tag so let me just save this file now and try reloading this page once again on the browser so as you can see we have a simple text field that is first name in which we can provide the first name over here now guys let's say we want certain default value to be provided inside the first name so what we can do is we can have the value attribute for this input tag so after this ID we will provide the value attribute and let's say the first name with the value John will be the default value over here so let me just save this file now and try reloading this page once again on the browser so as you can see when the user loads this particular page the default value that is drawn will be displayed to that user inside the first name input Field in in this case and then user can provide his or her own name over here or simply click on submit button so that the value that is drawn will be passed to the server so when we click on the submit button over here as you can see inside the URL we have the F name parameter followed by equal to and the value is JN in this case that's because the default value that we have provided in the first name input field is John over here similarly we can have another input field as well so let's say we simply copy these lines of code and past it after the first name over here and we provide L name in this case that is last name as the name and ID and for the for attribute as well we provide the L name as the value and instead of first name we will say last name as the label and for the value part we will say do in this case so guys basically the first name is John last name is do so we have John do as the full name of the user as the default value for both these input Fields so let me save this file now and try reloading this page once again on the browser so as you can see we have the first name that is having the value default value of John and the last name is having the default value as do and when we click on submit button simply without providing any data over here so these two names that is John and do will be passed to the server as the URL with the F name and the L name as the parameters we can also modify the first name and last name over here so simply we can say program programming and then for the last name we can say beginners over here so let me just click on submit button now so basically the first name and last name has been updated that is programming and then beginners as the last name in this case which is being passed to the server so in this way we can have the default values for the required input Fields based on your project requirements by using the value attribute over here inside the input tag so now we will see input attribute read only in input field so guys basically the input readon attribute specifies that an input field is a readon field so basically let's say if you want the input field to be displayed to the user but you don't want the user to provide any of the values inside that input field then you can provide this attribute that is read only which will allow the user to only read that particular content inside the input field now a read only input field cannot be modified however a user can tab to it which means the user can press on the tab key on the keyboard and go to that particular input field also the user can highlight it and copy the text from it so basically all the other things can be done inside this readon input field but the user cannot modify this field now the value of the read only input field will be sent when submitting the form so when the user submits that particular form the input field value that is present inside the read only field will be sent to the form so guys let us check this with the help of examples in vs code so previously we had seen the input fields that were having the value attribute which will be shown by default now guys let us say we only have the first name as the input field and we will remove these lines of code that is the last name over here and this time we will again have the text input field in this case and for the name attribute we will give the value as test and the same value we provided to ID and before this we will Pro provide the label and for the four attribute we will say test as the value and then the label that we will give is read only field in this case followed by colon so guys over here we have provided the label that is read only field and then after that we have this input field over here and then after this let us have couple of line breaks in this case but guys currently this is a normal text field over here so let me just save this file now and try reloading this page once again on the browser so as you can see the label is being displayed but the user can provide any of the values over here so by default we will provide some values so let's say we provide the value as customer in this case let me just save this file now and try reloading this page once again so as you can see customer is getting displayed over here as a default value but still the user can modify it and user can provide any of the details based on the requirements so what we have to do is in order to make this field as read only that is this the user should not be able to modify it we will simply provide the readon attribute as you can see this is the attribute that we can provide and it doesn't require any value to be provided so it is basically the read only keyword that you have to provide inside this input field over here so guys let me just save this file now and try reloading this page once again on the browser so as you can see customize a default value but this time when you click on this input field there is no curve C that is appearing and then over here when I'm typing the characters I'm not able to modify this field now so since we have provided this input field with the readon attribute the user will not be able to modify this particular field and apart from that user can click on the submit button in order to submit this form so when we click on the submit Button as you can see we have the F name parameter over here and the test parameter as well that we have provided to this read only Fe and the value for this is customer over here so basically whatever value is being provided in the readon field it will be passed to the server and since we have used the get request we can see the parameters being passed as the part of URL so guys in this way you can easily create the input field with a read only value over here and allow the user to submit the form with that particular default value so now we will see input attribute disabled in input field so guys basically the input dis disabled attribute specifies that an input field should be disabled by disabled what we mean is a disabled input field is unusable and unclickable as well so basically this is a kind of a readon field that we had seen previously so over here as well the user will not be able to modify the content of the input field which is having the attribute as disabled over here and apart from this functionality the value of the disabled input field will not be sent when some submitting the form so basically this is the main difference between the readon attribute and the disabled attribute the readon attribute will help the user to send the input field value that is set by default to the server whereas the disabled input field will not be able to send the value that is provided inside this input field so guys let us check this with the help of examples in vs code over here so simply we will have the input field and this time we will have the text input field over here and for the name part we will say disabled in this case and then for the ID as well we will provide the same value that is disabled and before this we are going to have the label and for the four attribute we have the same value that is disabled over here and then we will give the label as disabled field in this case and Then followed by colon we have this input field after this and let us say we have couple of line brakes over here so that the submit button is displayed on the next line so let me just save this file now and try by reloading this page once again on the browser so as you can see we have the disabled field label being displayed over here but we have the normal input field right now which we can modify and send to the server as well so what we can do is we want a default value to be provided inside this input field so we will say value attribute and let's say we provide disabled as the value over here so let me just save this file now and try reloading this page once again on the browser so as you can see disabled value is being displayed over here but right now user is able to modify this input field and will be able to send this value to the server after submitting this form so what we have to do is in order to make this input field as disabled simply we have to come to the end and type disabled keyword so as you can see this is the keyword that is disabled being suggested by the vs code over here in order to make this input field disabled so that the user is not able to modify it and nor he or she will be able to send the value to the server after submitting the form so let me just save this file now and try reloading this page once again on the browser so as you can see now the background of this input field is slightly updated the color can be shown as a gray color over here and when we click on this particular input field we are not able to focus it and also the user is not able to type inside this input field over here whereas in the read only we were able to highlight this input field over here but we are not able to modify it so let us see what is the difference between read only and disabled field over here so when we click on the submit button in order to submit the form as you can see F name that is John is being provided to the server inside the URL and we have test for which the value is customer so basically the read only field value is being passed to the server in the form of URL since we have used the get request as the method type for the HTML form whereas the disabled field is not being passed to the server and that is the main difference between the read only and the disabled field over here so in case you have any of the requirements in the project that you want to disable a particular input field as a part of functionality in such a way that you don't want that particular field value to be passed to the server then simply you can provide the disabled keyword to the required input field over here so that the user is no longer able to modify that input field and the value will not go to the server so now we will see input attribute size in input field so guys basically the input size attribute specifies the visible width in characters of an input field so basically the size attribute is responsible in order to specify the visible width of the input text box the default value for the size that is the width of the text box is 20 that we have seen so far and it is very important to to note that the size attribute only works with following input types that is text search telephone number URL email ID and password so guys basically these are the only input fields on which the size attribute can be implemented and you can simply increase or decrease the width of that input field as far as UI which means user interface is concerned so let us check this with the help of examples in BS code over here so previously we had seen the different attributes that are value then we had also seen read only attribute and the disabled attribute as well now let us have another input and this time we will have the input field of the type search over here so that we can increase the width or decrease the width of this particular input field so we are going to have the input tag along with the type search and over here for the name part we will provide the value as search and for the ID as well we will provide the value as search in this case let me provide the label as well before the input field and for the for attribute we will provide the value as search over here and the label that we will provide is search your term or phrase so we have a very simple statement over here that is search your term or phrase which is the part of the label and the user can simply provide a term or a phrase as well having list of words based on the requirements so guys by default the size of this particular input field will be 20 so let me just save this file now and try reloading this page once again on the browser so as you can see we have got search your term of phas and then we have this input field over here for which the width is 20 right now by default let me just provide couple of line brakes over here after this input field so that the submit button is displayed on the Le line so let me just reload this page once again on the browser after providing the line brakes so as you can see the width of this particular input field is 20 right now by default so let us say we want to increase the width so that the user is able to search for some term over here so let's say programming for beginners which is the name of this YouTube channel that you should definitely subscribe if you have not done so so basically when we provide programming for beginners over here as you can see not the entire phrase can be seen within this particular width of the input field which is 20 by default so let us say we want to provide the size as 40 in this case so simply we can provide size and then provide a number that is 40 over here by default it is set to 20 in other input Fields wherever we don't provide the size attribute so let me just save this file now and try reloading this page once again on the browser so as you can see the width of this input field is increased now and we can say programming for beginners so this phrase we can easily see without actually scrolling horizontally and again we can can provide more characters over here on the right so we can say please subscribe so as you can see the entire phrase can be seen right now and then further we can type more content over here HTML tutorial so the longer the phrase the characters on the left hand side will code on the extreme left over here so that it is not visible right now within the same input field so guys this is the main reason to use the size attribute in order to increase the width of a particular input field where the user is expected to provide the large input in the form of text phrases we can also decrease the size of this input field so let's say we make the size as 10 over here let me just save this file now and try reloading this page once again on the browser so as you can see the size of this input field is now smaller compared to the default size which is 20 right now which can be seen on the other input Fields as well so guys in this way you can easily set the size attribute to any of the input Fields provided the type of the input Fields belong to text search telephone number URL email and password so now we will see input attribute max length in input field so guys basically the input max length attribute specifies the maximum number of characters allowed in an input field so basically if you want the input field to be limited with a particular number of characters to be entered by the user we can use the max length attribute and provide the maximum number of characters that the user can provide in this input field it is very important to note that when a max length is set the input field will not accept more than the specified number of characters and there will be no validations so this particular attribute does not provide any feedback over here to the user why the input field is not taking any more characters so if you want to alert the user you must write certain JavaScript code in order to mention a particular message that the maximum length is not allowing the user to enter more characters in the same input field so guys let us check this with the help of examples in vs code over here so basically previously we had seen the different attributes such as the value attribute then we had also seen the read only and the disabled attributes as well apart from that we had also seen the size attribute which mentions the width of the input field so guys we will have another input field over here of the type text in this case and basically we are going to have the max length attribute for this input type and the name for this input field will be remarks in this case so we will provide the value of the name attribute as remarks and the same value we will provide to the ID attribute as well and let me just provide the label before this input field for the for attribute we will provide the value as remarks so that we link this particular label to the input field that we have defined and then we will say the remarks s the label followed by colon and then guys let me just provide couple of line breaks over here so that the submit button is displayed on the next line so let me just save this file now and try reloading this page once again on the browser so as you can see remarks label is being displayed over here and you can provide your remarks in this case so basically you can provide any number of characters right now by default because we have not provided any max length attribute over here for now so you can limit the the number of characters that is being provided by the user over here so let's say we want the user to provide maximum of 10 characters in this case so let's say we provide max length in this case as the attribute and the value that we provide is 10 over here so that maximum of 10 characters can be allowed in this particular remarks input field so let me just save this file now and try reloading this page once again on the browser now if we type something so let's say programming and then I'm not able to type type anymore that's because the number of characters that is 10 is completed over here so when we type these characters we have 1 2 3 4 5 6 7 8 9 10 so as you can see 10 characters are completed over here after which we are not able to type any of the characters in this particular input field so guys this is the main functionality of the max length attribute that we can use to the input field in order to limit the input that is provided by the user While submitting the form in case you have any requirements in such a way that you want to limit the number of characters being provided by the user to let's say 50 characters or 100 characters then you can simply use the max length attribute for that input field so that the user is not able to provide number of characters that is more than the max length attribute over here so now we will see input attribute Min and Max in input field so guys basically the input min and Max attributes specify the minimum and maximum values for an input field so let's say for example if you want the user to provide his or her age and the age should be between the minimum value of 18 years and the maximum value of 60 years then you can simply use the Min and Max attributes so that the user provide the age between these two values which can be a part of a client side validation over here so the Min and the max attributes work with the following input types so as you can see number range date date time local month time and week so Guys these are the input field types that will be used on which the Min and the max attributes will be applicable you cannot provide the Min and Max attributes on the input type that is text or search or the telephone number as well so these are the only input fields that you should use while you are implementing the Min and Max attributes now it is very important to note that you should use the Max and the Min attributes together to create a range of legal values so as we have just discussed we will take the input from the user in such a way that the minimum and the maximum values for the age should be between the 18 and the 60 years of age so let me just move to the vs code over here so basically after this input tag that we had seen previously in order to see the max length we will provide another input field over here which will be of the type number in this case and for the name attribute we will provide the value Val as age and the ID attribute we will provide the value as age once again and for the label part we will again have the for attribute having the value as age over here and the label that we will provide is provide your age in this case followed by colon and then after this input field we will have couple of line breaks over here so that the submit button is displayed on the next line so let me just save this file now and try reloading this page once again on the browser so as you can see provide your age is getting displayed over here so you can simply provide the age of the user so let's say 25 years or 30 years now guys there is no validation over here right now you can simply provide 10 years as well over here as the age and click on submit button over here so as you can see the form is getting submitted with the age value as 10 in this case but based on our requirements we want the age of the user to be between 18 and 60 years of age so what we will do is inside this input field we will have another attribute that is main attribute over here and we will set it as 18 in this case and the max attribute as well for which the value should be 60 over here so let me just save this file now so basically we are setting the range in this case for which the minimum value is 18 and the maximum value is 60 over here let me just reload this page once again on the browser so now if you provide the age so let's say when we provide the age as 15 in this case and when we press on submit over here as you can see value must be greater than or equal to 18 is getting displayed over here so when we increase the age to let's say 18 years and when we press submit now as you can see the form is getting submitted with the age is equal to 18 and in this way we can provide the minan value and the max value as well let us test the max value also so over here let me just provide the age is 62 in this case and when we press on submit Button as you can see value must be less than or equal to 60 over here so let me just set the age to 60 over here in this case and when we press submit button over here the age value is set to 60 while passing the value to the server using the get method so guys in this way we can easily use the Min and the max values over here when we provide the age as 40 which is in between the 18 and the 60 years of age which is the minimum and the maximum values that this particular input field is accepting so when we press on submit button the form is again getting submitted so as you can see age is equal to 40 is getting passed to the server so guys in this way if you have the requirements of asking the user to provide a certain number between the range for which the minimum and the maximum values are provided you can use the Min and the max attributes for that particular input field so that the user only provides the values in between these range values over here so now we will see input attribute multiple in input field so guys basically the input multiple attribute specifies that the user is allowed to enter more than one value in an input field and this we are going to check with the help of examples as well now the multiple attribute works with the input types that is email and file over here so basically let us check this with the help of example where the input field type is file over here in which case we can select a multiple files to be uploaded to the server so guys let us move to the vs code over here and I'll simply remove the previous lines of code in this case that we had written previously so now as you can see we have a very simple statement that is below content is in HTML form inside the paragraph tag and then over here we have the form tag along with the method that is get request so that whatever parameters are being submitted by the user we can see those parameter values inside the URL on the browser so guys over here what we have to do is we will have the input field with the type file in this case so basically we are going to have the input along with the type file over here and then in this case we will say name as file and ID as well as file over here and then before this we will have the label and then we will have the for attribute value as the file value in this case now for the label we will say select multiple files so guys basically we are asking the user to select multiple files over here and then user will be able to submit by using the submit Buton button so let us have couple of line braks over here after which we will have the submit button in this case by using the input type submit and then for the value we will have the value as submit in this case so guys currently we have not provided the attribute multiple in this case so let us check how this particular input Field Works on the browser so let me just save this file now and try reloading this page once again on the browser so as you can see below content is in HTML form and then we have the select multiple files label but currently we have not provided the multiple attribute over here so when the user clicks on this choose file basically the Explorer will open over here based on the machine that the user is using and then user can select one of the files over here in this case so guys basically I have come to a particular path over here on my machine you can navigate to your own directory path over here and then when I try to select multiple files over here now guys how do we select multiple files in this case so as as you can see we have selected this favicon image over here which is a JPG image in this case but let's see if I want to select another image that is sample image so I will press the control key on the keyboard and then try selecting the sample image as well but this time when we select this we are only able to select one image that is sample image now which is the second image that is selected so by default the user will be able to select only one file here that's because we have not provided the multiple attribute so when the user selects one of the files in this case and clicks on open basically that particular file will be displayed to the user in order to be sent to the server now guys how do we select the multiple files over here so basically we can go to the VSS code over here and simply we can provide the multiple attribute in this case so as you can see this is the multiple keyword that we need to provide in the input field of the type file or of the type email as well so let me just save this file now and try reloading this page once again on the browser now if you notice we have choose files in this case previously it was just choose file over here which allows only single file to be selected so basically we can select multiple files now so when I click on this button again the Windows Explorer will open and then we can select let's say this particular file and then if I want to select the second file as well I will press the control key on the keyboard and then click the left mouse key over here so as you can see sample image and favicon both the files are getting selected Ed over here and when we click on open in this case so it says two files which means two files are selected by the user and when we click on submit over here as you can see file is equal to favicon jpg and again there is a file parameter and then it says the name of the other file that is sample image.png so guys in this case both the files are getting sent to the server for further processing and in this way we can select multiple files by using the multiple keyword for the input field based on our requirements so now we will see input attribute placeholder in input field so guys basically the input placeholder attribute specifies a short hint that describes the expected value of an input field a sample value or a short description of the expected format will be shown inside that input field so guys basically the short hint is displayed in the input field before the user enters a value so guys we will check this with the help of exam examples as well and the placeholder attribute works with the input types such as text search URL telephone number email and password as well so guys let us check this with the help of examples in VSS code over here so previously we had seen the input tag along with the type file for which we had the multiple keyword which will allow us in order to select the multiple files in this case now guys what we will do is let's say we have the username and password over here and we don't have the labels for that them so in this case we will simply have the input with the type text over here and then for the name part we will say username in this case and for the ID as well we will say username over here now guys we are not going to have any labels in this case and we are going to provide the placeholder as well and similarly we will also have the password over here so we will say input colon and then we will say password in this case so we have the input field with the type password over here and for the name part we will say name as password and ID as well as password over here and after the username field we will have couple of line braks over here so that the username and the password fields are separated by using couple of line Brakes in this case and after the password as well we will have the line brakes now guys let me just save this file now and try reloading this page once again on the browser so as you can see we have a simple input field over here but it doesn't display any label on the left hand side or on the top of the input field so one alternate way in order to provide the hint to the user is to provide a placeholder inside the input field so that the user comes to know what data is expected from his or her site to be provided in these input Fields so we can simply go to this input field that is the username field over here and we can have the placeholder in this case and we can say username so basically this particular text will be displayed inside the input field over here so that the user can provide his or her username over here and then similarly we will have another placeholder inside the password text box so over here we will say placeholder and then we will say password in this case so guys basically we are not providing the labels over here with the help of label text but we are providing the placeholders in this case so let me just save this file now and try reloading this page once again on the browser so as you can see this is the hint to the user that is being provided so that the user understands that this particular input field is expecting a username and the second input field is expecting some password over here so simply we will provide some username in this case so we say programming over here and then for the password part simply we will say password in this case and since it is of the type password the data is being masked over here so guys let me just click on submit in this case so as you can see username is equal to programming and password is being displayed as password in this case inside the URL guys this is not one of the best practices in order to pass the password to the server by using the get request because it is being displayed inside the URL on the browser so we need to use the post request method but in order to Simply understand the example of the placeholder we have considered this particular example of input Fields So based on your requirements you can provide the string or the phrase as well inside the input Fields by using the placeholder attribute so now we will see input attribute required in input field so guys basically the input required attribute specifies that an input field must be filled out before submitting the form so basically this required attribute actually needs the users to provide the data inside this particular input field which is having the attribute that is required now guys the required attribute works with the input type such as text search URL telephone number email password date picker number checkbox radio and file so guys as we can see there are maximum input field types over here which are covered as far as required attribute is concerned so guys let us check this with the help of example in vs code over here so previously we had seen the input tag along with the type file over here then we had also seen the text and the password types we had used the placeholder attribute and the multiple attribute as well now guys what we will do is we will have another input field and we will ask the user to provide age in this case so we will have the input field with the type number in this case so as you can see the input tag along with the type number over here and then the age attribute will have the value as age in this case and ID as well we will keep it as age over here now guys we will also provide the label so that the user understands that he or she is supposed to provide the age so basically for the four attribute we will have the value that is age and the the label we will provide it as provide your age followed by colon so guys after this we will have couple of line breaks so that the submit button is displayed on the next line now guys first of all we will see what happens when we don't provide the required attribute over here so simply let me just save this file now and try reloading this page once again on the browser so as you can see we have the provide your age label and then the input field is being provided but guys we have not provided the required attrib to any of these fields for now so simply if the user comes over here and clicks on submit basically the form will be submitted in this case with all the blank values for all the parameters so as you can see file is equal to blank then username and password is also blank and the age is also blank now guys this is not one of the best practices in order to send the password as a get request over here that's because anyone can see the password inside the URL so I'll simply remove this line of code over here that is having input field password in this case let me just save this file now and try reloading this page once again on the browser so now if we submit it once again as you can see all the values are blank for now so guys what we have to do is compulsorily we want the user to at least provide the age if they are not providing any other inputs over here so what we can do is simply for this input field with the type number in which case we are dealing with the age input field we will come to the end and we will we will say required in this case so guys basically this required attribute is used in order to make the user provide some data to this particular input field so let me just save this file now and try reloading this page once again on the browser so as you can see we have this provide your age input field in this case and then when we click on submit over here as you can see please fill out this field so basically this validation is being thrown by this particular browser and depending on the browser different message can can be displayed based on which browser is being used by the user so guys irrespective of which browser is being used by the user but basically a validation message will be thrown if the input field is kept blank and the user tries to submit the form so we need to provide some age over here so let's say if we provide 25 that is some number in the form of age in the input field and then when the user clicks on submit now the form accepts that particular input and will be sending all the values of the parameter to the server but since user has provided only the age parameter over here the age parameter is having the value and the other two attributes are having the blank values over here but guys this is the main functionality of the required attribute so whatever input Fields you want the user to provide some data with you can use this required attribute to all those input fields we can also provide the required attribute to this username field as well so let's say when we provide the required attribute over here let me just save this file now and try reloading this page once again on the browser so now if we try to submit the form it is asking to please fill out this field that is username over here so let me just provide some username in this case so we have provided programming as the username so now let me just click on submit over here but we also have the required field that is age in this case so it is saying please fill out this field as well so we provide 25 as the age and when we click on submit over here so now the HTML form is accepting the inputs that is provided by the user that is username as well as age in this case because those are the input fields which are marked as required so guys this is the way that required attributes work over here in HTML input Fields so now we will see input attribute step in input field so guys basically the input step attribute specifies the legal number intervals for an input field so for example if the step is equal to three that is being set for a particular input field the legal numbers could be 3 0 3 6 and so on so basically when we increment or decrement the current number inside the input field it will be increased or decreased by this step value that is three over here in this case now an important tip over here is the attribute can be used together with the Max and the Min attributes to create a range of legal values and we will check this with the help of examples as well and the Step at attribute works with the input types such as number range date date time local month time and week so guys let us check this with the help of example in code over here now guys we will have another input field which will be of the type number in this case so input followed by colon and then we have number over here and what we will say is the name will be quantity in this case so basically we are asking the user in order to select the quantity of a product so guys basically it will be feasible for a ecommerce website to have the text box in order to provide the quantity so that the user can order a particular order and based on the quantity it can be delivered to the user so we will keep the name value as quantity and the ID value as quantity as well and then for the label we will say label in this case and for the for attribute we will say Quantity as the value and then we will say select quantity so guys this is just an example that we are implementing over here so that the user can select the quantity and the requirement is in such a way that the user can only select the quantity in the multiples of even numbers that means either the quantity can be 2 or 4 or 6 and so on so the user should not be able to select the quantity which is an odd number so guys over here what we have to do is we need to provide the step value as two in this case because every time the value should be increased by two and minimum value that we we can provide is two over here so basically if the user is selecting the quantity so the minimum value will be two because zero cannot be set over here so the minimum value we have set is two in this case and every time the user increases the quantity it should be in the step of two we can also select the value attribute over here so we can simply say value and then it is equal to two so that initially the value of the quantity input field will be set as two in this case now guys after this input field we we will have couple of line braks over here so that the submit button is displayed on the next line inside the form so let me just save this file now and try reloading this page once again on the browser so as you can see select quantity label is being displayed over here and we are seeing the value of two that's because we have kept the value attribute S2 over here and the minimum value will also be two so the user cannot go with a value that is less than two in this case and every time when the user wants to increment this value by using the up Arrow over here the value will be incremented with a step of two so as you can see four is being selected now and then again when the user increments the value is six right now and when the user decreases the number so let's say we click on this down arrow so again it is decreased by two in this case so the value is four right now and then again when we decrease it so the value is two right now and then we cannot decrease it anymore further that's because the minimum value is set as two in this case and that is how we can apply the range this particular quantity input field by providing the main attribute and we can optionally provide the max attribute as well so guys this is the main functionality of the step attribute in order to increase the number with the step value that is being provided inside that input field so now we will see input attribute autofocus in input field so guys basically the input autofocus attribute specifies that an input field should automatically get get focus when the page loads so by default there will be no focus on any of the input Fields when the user loads a particular web page but in case if you want the focus to be set on a particular input field when the user loads the page then you can use the autofocus attribute for that particular input field so guys let us check this with the help of example in vs code over here so I'll remove the previous lines of code that we had written and then guys simply we are having a statement over here that is below content is in HTML form inside the paragraph tag and inside the form what we will do is we will simply have two text boxes that is first name and last name over here so we will say input of the type text in this case and then over here for the name attribute we will say F name and the ID as well we will keep it as F name over here and before this input field we will also have the label tag over here and for the for attribute we will keep the value as F name and then we will say first name in this case followed by colon done and then guys similarly we will have the last name as well so we will have couple of line breaks first of all after the first name input field and then we will paste this for last name over here so simply we will change the label as last name in this case and we will keep the name value as L name and copy the same value to ID and the for attribute as well so guys we have two text boxes that is first name and last name over here and then after this again we will have couple of line breaks in this case And Then followed by a submit button over here so we have input of the type submit and the value will be submit in this case so that the user is able to submit this form along with the first name and last name data in this case now guys let me just save this file now and try reloading this page on the browser so as you can see we have the below content is in HTML form and then we have first name and last name over here now guys if you notice there is no focus on any of these two input Fields right now and that is the default behavior of all the input Fields there will be no focus on any of the input Fields by default so what you have to do is let's say if you want the first name to be autofocused when the user loads this particular web page so what we can do is simply for this input field related to first name at the end we can simply say autofocus over here so guys this is one of the attributes that will help us in order to provide the focus to this particular input field when the user loads the web page so let me just save this file now and try reloading this page once again on the browser so now as you can see if you notice automatically the first name input field is getting the focus over here after the user reloads this page so if you want the last name to be focused so simply you can remove this autofocus from the first name input field and provide the autofocus attribute to the last name input field so let me just save this file now and try reloading this page once again on the browser so as you can see last name is now having the focus automatically when the user comes to this particular web page and guys this is the way that you can provide the autofocus on any of the input Fields based on your requirements while you are expecting the user to submit the HTML form it is a best practice to provide the autofocus at the start of the form that is the first input field over here so that the user starts providing the data that is required from his or her side and this is one of the best practices that you can follow so so now we will see input attribute height and width in input field so guys basically the input height and width attributes specify the height and width of an element and this we are going to check with the help of examples as well we will define an image as the submit button inside the form with a particular height and width attributes that will set the images height and width so guys let us move to the vs code over here so so I'll remove the previous lines of code that we had written and then we will only keep a paragraph that is having a simple statement that is below content is in HTML form so currently we don't have any form over here so we will Define the form so for the action attribute we are not going to provide any server side file in order to process the data further since we are only looking for the examples on the client side and then for the method part we will set it as get method in this case and then inside the form let us say we have a normal text box over here so basically we will have the input of the type text so input colon text and then as you can see this is the input with the type text over here and for the name we will provide F name in this case so that the user can provide the first name over here and then for the ID part as well we will provide the value as F name in this case and before this input we will also have the label and for the for attribute we will keep the value as F name so that whenever user clicks on this particular label the focus is given to this particular input field so for the label we will say first name over here so we have the label as first name followed by input field and then guys let us have couple of line breaks in this case after which we are going to have the submit button with the help of the image so over here we will say input followed by colon and then we have something called as image over here so guys instead of having the submit button we can have the image as well that can help help us in order to submit this form so we are going to use the Type image in this case so we need to provide the values for these attributes over here one is the SRC which is the source attribute for which we need to provide the directory path of the image that we want to display so guys over here we have a sample image that we can use in order to display it inside the form as the submit button so I'm going to provide the name of that file that is sample image now guys since this HTML that is test HTML is already present in this particular directory as you can see this is the file that we are editing right now and that is the reason why we can simply provide the name of the PNG file that is the image file over here in case your image is present in some other directory then you need to provide the entire directory path in order to access that image and to be displayed on the web page so guys over here we have provided the name of the file and apart from this we will also give it the alt attribute as submit over here so that in case the image is not being displayed for some reason then we can at least have the submit text being displayed inside of the image that was supposed to be displayed on the web page now guys by default the size of the image that will be displayed will be based on the image that you are providing but let's say if we want to provide the width and the height of the image so over here we can simply provide width attribute and let's say we provide the width as 150 pixels over here so we Prov provide 150 PX and in the same way we have to provide the height attribute as well so in this case let us say we provide the height attribute as 100 pixels over here so guys this is the way that we can provide the width and the height of a particular HTML element specifically we use it for the images whether it is the IMG tag or the input tag along with the Type image over here so guys let me just save this file now and try reloading this page on the browser so as you can see below content is in H HML form and then we have the input field that is the first name over here after which we have this image that is being displayed over here so this image over here is acting like a submit button in this case guys it depends on your requirement based on what height and width you want to display the image that will act as a submit button so over here let's say we provide the first name as John in this case and when we click on this image that is acting as a submit button so as you can see inside the URL F name parameter is being passed over here and the value is drawn in this case and also guys it is very important to note that we also get the X and Y attributes over here which is the coordinates on which the user has clicked on this particular submit image over here so guys this is the very simple way in order to adjust the height and width of the image you can set the height and width based on your requirements so let's say we provide the width as 100 pixels over here and for the height part let us say we provide the height value as 60 pixels let me just save this F file now and try reloading this page once again on the browser so as you can see the image width and height is adjusted now based on the height and width that we have provided inside our code so now we will see input attribute list in input field so guys basically the input list attribute refers to the data list element that contains the predefined options for an input element so basically in case you want to have the list of elements to be displayed with the help of the input element then you can have the input along with the list attribute over here and you can provide the ID of the data list element that you can Define later on so guys basically this input tag will now have the list of dropdown items from which the user can select one of the items so guys let us check this with the help of examples in vs code over here so previously we had defined the input tag with the type text over here which was having the F name that is the first name that the user wants to Define and also we had the submit button in the form of the image so guys what we will do is after this first input tag we will have another input tag over here so this time we are not going to Define any type over here but instead of this we are going to have the list attribute so guys basically the input tag along with the list attribute will help us in order to have the drop down list in this case so over here let's say we provide the value as list one so guys basically this should be the ID of the data list tag that we are going to Define now so basically after this input tag we can Define the data list tag as well so in this case we Define data list tag and then inside this data list tag we can have the ID in this case so the ID must be equal to the value of this list attribute that we had defined so I'll just simply copy this and paste this over here as the ID attribute of the data list tag and then guys we can have the list of items that we want to display So currently if we check the web page there will be no items that will be displayed so let me just check this I'll save this file now and try reloading this page on the browser so as you can see we have this input field being displayed over here there are no values that is being displayed right now inside this input field guys what we will do is we will replace this particular image with the submit Button as well so over here after the data list we will have coup of line breaks in this case and then instead of having the input tag along with the Type image over here we will simply have the input tag along with the type submit in this case so that a simple text value can be displayed with the help of the submit button so over here we have the value as submit so let me just save this file now and try reloading this page once again on the browser so now as you can see we have the submit button but the important thing is we need to have certain drop down values over here so that the user can select one of the values from this list so guys over here what we have to do is inside this data list tag we need to Define our options with the help of the option tag so over here simply we will have the option tag in this case we can remove the ending tag over here so I'll simply remove this and then we can have different options inside the value attribute of the option tag so let's say we have the label for this input tag as the mode of Transport so over here for the input part we will also have the ID as well and then we will say transport in this case and the same ID we can provide it as the value for the four attribute over here and then we can say select your mode of Transport so guys basically we are asking the user to select the mode of transport and then we will have the list of options from which the user can select the mode of Transport so let's say we provide the first option as bike in this case and some more couple of options over here so we will say car and the third third option is bus in this case so guys we have three options over here that is bike car and bus so guys let me just save this file now and try reloading this page once again on the browser so now as you can see select your mode of Transport label is being displayed and if you see over here there's a drop down that is getting displayed right now inside this input field and when we click on this drop down option as you can see bike car and bus options are getting displayed over here so we can simply select one of the options so let's say we we Select Car in this case so basically this particular option is getting selected and then simply we can click on submit button over here so that the parameter gets submitted to the server but guys in this case we are only able to see F name over here that's because for the input field we have not provided the name attribute and it is very important that whenever you are passing any of the values from the HTML form then you should have the name attribute as well so in this case we will provide the name attribute as the value that is same as ID in this case so let me just provide the transport value over here guys what if we provide the ending tag for the option in this case so let me just provide that as well to all the three options and then we will also provide the value in between the option tags over here so we will say buy and then we have car and then we have bus over here as all the three options being displayed as text over here so let me just save this file now and try reloading this page once again on the browser so now if we go and select the mode of Transport over here in this case so let's say we select car as the option and first name as John and then let me just click on submit button so as you can see F name is getting displayed over here as John which is getting passed as the part of URL that's because we have provided the method as get request over here for the form tag and then the second parameter that is transport is being displayed with the value of car that the user selected While submitting the form so guys in this way you can easily have the drop down options with the help of of the input tag and along with it you can provide the list attribute which will have the value of the ID of the data list element that you are going to Define just like how we have defined over here that is the data list element and inside the data list element you can have different options over here along with their values in this case from which the user can select one of the values so now we will see input attribute autocomplete in input field so guys basically the input autocomplete attribute specifies whether a form or the input field should have autocomplete on or off so when we say autocomplete on when the user starts typing he or she will be provided the list of values that was already typed by him or her previously and when the autoc complete is off there will be no suggestions that will be provided by the HTML form or the input field so basically the autocomplete allows the browser to predict the value and when the user starts to type in a field the browser should display the options to F in the field based on the earlier typed values so guys basically whatever suggestions is being provided by the browser it is the OWN users value that was provided to the browser in the previous sessions and there will be no new values that will be provided by the browser so the autocomplete attribute works with the form and the following input types such as text search URL telephone number email password date Pickers range and and color so guys let us check this with the help of examples in vs code over here so previously we had the first name as the input field now what we will do is again we will have the last name as well so we will simply copy these lines of code and paste it after the first name input field and then over here we will say l name in this case which will stand for last name over here so we say last name and then we will again copy the L name value to the name attribute and the ID attribute as as well so guys basically we will ask the user to provide the first name and the last name as well and we had also provided the drop down list item with the help of the input tag and the data list tag over here so we will keep those options as it is so let me just save this file now and try reloading this page on the browser so as you can see we have the first name and last name over here apart from this we also have the drop down list in this case now guys by default the auto complete will be on for this input type that is text over over here so if we simply go to the first name input field over here and click on this text box as you can see John and programming these were some of the values that I had provided previously to the text boxes and for the last name as well as you can see we have beginners and do that was provided to the last name input field that we had seen in the previous examples so Guys these are the autocomplete suggestions that we can see now guys what if you don't want to see the autocomplete suggestions over here so simply we we can come to this last name in this case the input field and then after this we can have the auto complete attribute so as you can see this is the attribute that we are going to use and then this should be off in this case so when we say autocomplete is off then the browser will not provide any suggestions to the user for this particular input field so guys let me just save this file now and try reloading this page once again on the browser now if we go and click on this last name over here as you can see there is no suggestions that is being provided in this case and if we click on the first name input field we can still see the suggestions that's because by default the autoc complete is on over here so again we can provide the autocomplete attribute and we can provide the value as off in order to turn off the suggestions so let me just save this file now and try reloading this page once again on the browser so now if we go and click on this input field there are no suggestions that is being displayed by the browser so guys this is the way that we can provide the auto complete or the auto suggestion feature to the user and based on the browser history of the user the suggestions will be provided by the browser to the user so now over here we have kept the autoc complete on for the first input field that is f name over here and let me just reload this page once again on the browser so now if we come and click on this input field so now we are able to see the values as the suggestions by the browser so now we will see input attribute form in input field so guys basically the input form attribute specifies the form the input element belongs to so we will check this with the help of examples as well in vs code so we have something called as form attribute that you can specify inside the input field when you have that input field outside the form tag so guys the value of this attribute must be equal to the ID attribute of the form element it belongs to so guys let us check this with the help of examples to make it more clear so over here inside the vs code what we have is the first name label along with the input field that is first name and the last name as well apart from this we also have the drop down list with the help of the input tag and the list attribute that we had seen previously with the help of the data list tag so guys over here for the Simplicity purpose we will remove these lines of code that is displaying the drop down list of items in this case and then we will also remove the line brakes over here let me just save this file now and try reloading this page once again on the browser so as you can see we have first name and last name over here and when the user clicks on submit button the first name and last name attributes will be submitted to the server now guys what if we also want to include the email of the user who is trying to submit the form so let's say if we have the email input field outside this form tag over here so after this form tag we will have the input field in this case with the type email so as you can see we have the input tag along with the type email over here and the same value that is email we will provide it as the value of the name attribute and the ID attribute as well and before this we are also going to have the label and for the for attribute we will say email over here and we will provide the label as email so as you can see we have the label as email followed by colon and then we have the input field in this case let me just provide couple of line breaks over here after this input tag and also after the submit button so that the next input field can be displayed on the next line so let me just save this file now and try reloading this page once again on the browser so as you can see after the submit button we have the email input field as well but guys if you remember when we click on the submit button only the elements of the form that is the first name and the last name will be provided to the server so let us check that so if we provide John in this case and let's say we provide the last name as to and when we click on submit so so as you can see F name is equal to John and L name is equal to do these two parameters are getting submitted but apart from this let us say we want to also submit the email attribute over here so when the user provides his or her email over here inside this input field and clicks on submit button we want that particular email data as well to go to the server for further processing so in this case what we can do is when we have the input field outside the form tag and we want that in input Fields data to go to the server with the help of the other form attributes we can have the ID for this form so basically we are going to define the ID in this case and we can simply say form one over here and then guys the same value of the ID that is form one we need to copy and paste it as the value to the form attribute for the input tag so the data from this particular input tag that is email is what we want to be passed to the server so we can simp simply come over here to the input tag and provide a form attribute in this case and this value should be same as the ID of the form itself with which the input data should go to the server so over here let me just paste this value that is form one in this case so let me just save this file now and try reloading this page once again on the browser guys previously we had seen that only first name and last name were getting submitted to the server with the help of the URL now let us say we Pro provide John in this case and do in this case and let me just click on submit over here without providing any data to this email input field so when we click on submit as you can see we have the F name and L name but apart from that we also have the email attribute which was not being passed previously since we had not linked this particular email input field with the form which is containing only these two elements over here but now since we have linked the email input field with the form that is form one one the parameter that is email is also getting passed over here so when we provide John in this case and let's say we provide some email ID in this case so we provide test at gmail.com and when we click on submit button over here as you can see John do and the email that is test gmail.com is getting submitted to the server for further processing and we can see this as part of URL that's because the method value is get request over here for the form tag in this case so guys this is the way that we can link any particular input field which is present outside the form tag with the form so that the data inside that input field can be passed with the help of the other data which is being passed with the help of the submission of the form so now we will see input attribute form action in input field so guys basically the input form action attribute specifies the URL of the file that will process the input when the form is submitted so basically the file must be present on on the server site for which we need to provide the URL to the form action attribute so guys if you remember inside the form tag we have the action attribute which specifies the file on the server site it can be any PHP file or any other file which is responsible to handle the request that is coming from the client side now guys if you have some other file that will handle the request that is coming from the client side like for example if you want the request to be handled in a different way when it is coming from the admin so we can have the form action attribute that is attached to the submit button which is separately displayed for the admin over here so it is important to note that this attribute overwrites the action attribute of the form element so even if we have the action attribute inside the form element but the form action attribute that we are going to specify inside the input field is going to override the action attribute that is present inside the form element so guys the form action attribute works with the following input types that is submit button and the image type as well which X has a submit Button as we had seen previously so guys let us check this with the help of examples in vs code over here so previously we had written certain text boxes that is first name and then last name and then we also had submit button over here and outside the form tag we also had the input type email in this case which we tried to link to that particular form by providing the input tag outside the form so guys what we are going to do is I'm going to remove these lines of code over here since we don't need input tag in this example and we are also going to remove the ID attribute from the form tag now guys over here the form tag is having the default action attribute and let's say we have something called as action 1. PHP so guys this is the file that is responsible in order to handle the request that is going from the client side which is having the dat data that is the first name and the last name over here now guys let us say we want some other file to handle the same data over here with the help of another submit button so what we will do is we will have another submit button in this case so we say input colon submit and then as you can see this input tag is of the type submit and then what we can do is the value we can set it as submit as admin over here so guys basically this normal submit button is for the normal user and when the admin logs into the application then admin must click on this particular submit button which is having the value as submit as admin over here so when the normal user clicks on this submit button the server side file that is action 1. PHP will be called along with the required data that will be passed to the server now guys when the admin clicks on this particular submit button we need some other file to handle this particular data that is going to the server so what we can do is we can provide the form action attribute over here so we say form action attribute inside this input tag that is of the type submit in this case so we say form action and then we need to provide the file name in this case that will handle the request that is going from the admin so over here slash and then let's say we say action uncore admin.php so guys basically when the user clicks on this particular submit button that is submit as admin this particular particular file that is action uncore admin will be called and not this file that is action 1. PHP and this is the main functionality of the form action attribute that allows us in order to overwrite the name of the file on the server which will be responsible in order to handle the request that is being passed by the client side so guys let me just save this file now Ander try reloading this page once again on the browser so as you can see we have two buttons that is submit and submit as admin over here guys when the user provides any data in this case so let's say we provide John and the last name is do over here and when the user clicks on the submit as admin the request will be passed to this file that is action admin.php and not action 1. PHP and when the user clicks on this simple submit button the request will be passed to the action 1. PHP which is being provided as the action attribute inside the form tag so guys this will be the main difference so if we click on this submit as admin over here it says your file couldn't be accessed that's because it is trying to find that action uncore admin.php file as you can see this particular file is getting the values of the parameters that was set by the user so you can see the values as well that is f name is John and L name is do over here now guys if we go back once again in this case and we provide the same data that is John do and when we click on this normal submit button now so when we click on this as you can see action 1. PHP file is being called on the server site and this is the main functionality of the action attribute and the form action attribute that we have just seen so in case you want some other server side file to be used in order to process the data that is being passed by the user you can provide some other file with the help of the form action attribute that will be linked to the submit button inside the form so now we will see input attribute form ENC type in input so guys basically the input form ENC type attribute specifies how the form data should be encoded when submitted and it is only applicable when the forms are with the method is equal to post value so guys basically over here ENC stands for encoding and what type of encoding is done when the data is being submitted by the form with the method post is defined by the form ENC type over here it is very important to note that this attribute overrides the ENC type attribute of the form element so by default we have certain value that is assigned to the ENC type attribute which will be overridden by this form ENC type attribute and this particular attribute works with the following input types that is submit and image so guys basically the submit button or the image button that we have inside the form in order to submit the form data will have the attribute that is form ENC type for which we will have certain value so guys let us check this with the help of examples in vs code over here so basically I'll remove previous lines of code that we had return and we will only keep the paragraph that is below content is in HTML form so guys now we will Define the form with the post request over here so we have the method with the post value and then inside the form what we will do is we will have the field with the first name so we will Define the input with the type text over here and then we will have the name attribute as F name in this case and the same value we will paste it inside the ID attribute as well and before this we will also have the label that is having the for attribute as F name and then we will say first name in this case followed by colon so guys we have a single field over here after which we are going to have couple of line braks in this case now guys simply we will have the submit button over here so input colon submit in this case and we will keep the value as submit so that this particular value is displayed on the submit button so guys let me just save this file now and try reloading this page on the browser so as you can see we have the first name label and then simply we can provide the first name inside this input field and since the method is of the post value over here inside the form we won't be able to see the parameters being passed as the part of URL when we click on submit so guys when we click on submit in this case there is no change in the URL that is happening but the value is going to the server based on the post method over here but but guys currently the encoding type of the data that is going to the server is the default value what if we want the data to be encoded in a different way so what we can do is inside the submit button we can have the form ENC type over here so as you can see this is the attribute that we can use in this case and it has three values so by default it is text/plain data that is being passed to the server and we can also select multiart / form data over here so if we select this so basically this will be the encoding that will be done to this particular data that is being sent to the server so guys currently we won't be able to see any change but when we are going to learn about the server side scripting and handling the data that is coming from the client side over there we will be seeing the difference between the various values of the form ENC type attribute over here so let me just save this file now and try reloading this page once again on the browser so now if we provide some data over here so let's say I provide the first name is on and click on submit button so basically the data is getting encoded with the help of this particular value and it is passed to the server so guys in this way you can easily provide the value to the form ENC type and based on your requirements you can select one of the values of this particular attribute and handle the data accordingly that is being passed to the server so now we will see input attribute form method in input field so guys basically the input form method attribute defines the http method for sending the form data to the action URL so basically we have two types of HTTP method one is get and another is post so basically the get request helps us in order to send the data by enclosing the data within the URL itself and the user can see what are the different values of the parameters that is being passed to the server and the other HTTP method that is post request does not allow the parameters to be displayed inside the URL and Guys these are the two types of HTTP methods that we can use while we are sending the form data to the server so whenever you are sending certain sensitive data such as password or any other personal information it is recommended that you use the post method of the HTTP request so that it is not being displayed inside the URL when the user clicks on the submit button now guys it is very important to note that the attribute overrides the method attribute of the form element so BAS basically inside the form tag we have the attribute that is Method attribute which can be the get request or the post request but explicitly if we provide the form method attribute inside the submit button inside the form then that particular value will override the value that is being provided to the form tag over here so basically the form method attribute works with the following input types that is submit and image so guys let us check this with the help of examples in vs code over here so previously we had written certain lines of code in this case we have a paragraph that is below content is in HTML form and then we have a form tag over here inside which we have the method of the post request so guys in this case the values of the parameters that is this input field having the name that is f name will not be displayed inside the URL when the user clicks on submit button so I'll just remove this attribute that is form ENC type that we had seen previously so so basically we have the value of method as post request over here so we should not be able to see the value of the first name inside the URL when the user clicks on submit button let me just save this file now and try reloading this page on the browser so as you can see we have below content is in HTML form and we have the label that is first name over here so let's say we provide the first name as John in this case and when we click on submit as you can see we are not able to see the F name parameter inside the URL that's because we have provided the post method over here so guys similarly we can also have the password input in this case so let me just copy these lines of code and paste this over here after the first name and in this case we will have the password as the input type and the name attribute we will update it to password in this case and the same value we will set it to the ID of the input tag as well and for the four attribute of the label we will set it as password and and in this case we will change the label to password over here let me just save this file now and try reloading this page once again on the browser so now if we provide the first name as John and let's say we provide password as password in this case and click on submit so basically the values are getting submitted to the server and it is also not getting displayed inside the URL and that is how you should be using the post request in order to send certain sensitive data in this case it is the password which is a sensitive data which should not be visible to other users now guys how we can use the form method attribute inside the submit button So currently as we have seen the method type is post request but can we override this method type yes we can do so by using the form method attribute inside the submit button over here so inside this particular input tag that is related to submit button we can have the form method in this case and for this form method attribute we can simply set it as get request so guys basically what we are telling the form to do is pass these values that is the first name and the password as the get request so that those values can be seen inside the URL so let me just save this file now and try reloading this page once again on the browser so now if we try to provide the first name and password let us see what happens so when we provide John as the first name and password as the password value in this case and when we click on submit button over here as you can see F name is equal to John and password is equal to password is getting displayed over here inside the URL and this is the functionality of the get request which is the HTTP method inside the form so guys basically we were able to override this value of the method that is equal to post with the help of the form method over here which we set it as get in this case inside this particular submit button let us now do the reverse of this I'll remove this particular attribute that is the form method and simply we will have the get request as the method attribute inside the form tag over here so guys basically by default we will be sending the labels as the part of URL now so let me just save this file now and try reloading this page once again on the browser so now if we provide the first name that is programming in this case and password as pass in this case and when we click on submit button by default the first name and the password are getting passed as the part of the URL that's because we have set the method type as get request over here and what if we provide the form method over here once again so we provide the form method with the value as post this time that's because we don't want the password to be displayed as the part of the URL while sending the data to the server so this time we are setting the form method attribute as post value so let me just save this file now and try reloading this page once again on the browser and now if you provide the first name that is programming and password as pass in this case let me click on submit so as you can see the data is being submitted to the server and we are no longer able to see the data as part of the URL that's because we have set the form method as post inside the submit button so basically this particular attribute is overriding the value of the method attribute that we had set while defining the form tag in this case so now we will see input attribute form Target in input field so guys basically the input form Target attribute specifies a name or a keyword that indicates where to display the response that is received after submitting the form so in short this form Target attribute will be used in order to display the response that is coming from the server site in the same window or the new window so guys we will check this with the help of examples as well it is important to note that this attribute overrides the target attribute of the form element so guys basically inside the form tag we have the target attribute as well by default it is set to one particular value and that value will be overridden by the form Target attribute that we will Define so this form Target attribute works with the following input types that is submit and image so we can mention the form Target attribute inside the submit or the image buttons that are being used in order to submit the form data so guys let us check this with the help of examples in vs code over here here so previously we had written some lines of code it is having the paragraph with the help of ptag and it says below content is in HTML form and then guys we have the form with the method that is get request over here and then the first label we are having as the first name for the first name and then we have another label that is password along with the input type that is password in this case in order to allow the user to provide the password and then guys we have a submit button over here I'll remove this particular attribute that is form method which we had seen previously so guys let me just save this file now and try reloading this page on the browser so as you can see we have first name and the password fields in this case so if you provide certain data that is programming in the first name and let's say we provide a password to the password field as well and when we click on submit as you can see both these parameters that is first name and password are getting sent to the server with the help of URL now guys this is not one of the best practices in order to send some sensitive data to the server with the help of the get request that's because anyone can see that data inside the URL over here so whenever you are sending certain sensitive data like in this case we are sending some password over here we should be using the post method but in order to understand this particular example we are setting the method type as get request over here so that we understand the form Target attribute so guys basically by default we have a Target attribute over here for which the value is already set to underscore self in this case so guys this is the default value that the form behaves While submitting any form over here so let me just save this file now and try reloading this page once again on the browser we will see how the submission of the form Works in this case when we have provided the target attribute over here so let me provide the first name is John and let us say we provide pass as the password and when we click on submit Button as you can see we have the F name and the password parameters important point is over here when the response will come from the server it will be displayed on the same tab that is the same window of this particular browser what if we want the response to be displayed in the new window over here that is the new tab so guys what we will do is in such a case instead of setting the target attribute over here we will set the form Target attribute inside the submit button so in this case we will have the the form Target attribute and in this case simply we can have underscore and the blank value so guys basically when we set the underscore blank value for the form Target the response will come to the new window that is the new tab of the server and it is going to overwrite the current value of the target attribute as well that we have defined inside the form tag so let me just save this file now and try reloading this page once again on the browser so now if we provide the first name let us say say we provide programming as the first name and password as password field and when we click on submit button now so as you can see there is a new window that is opened right now and using that new window we will be receiving the response from the server so guys basically this is the main difference the first window or tab over here is still having the data and the moment we click on this submit button a new window will be opened and the server response will be displayed inside the new window so let me just show you that once again over here I'll close this window right now and we are having just one tab opened on this browser and when we click on submit in this case so as you can see the second tab is opened right now and the response will be displayed on this particular window so guys this is the main functionality of the form Target attribute that we can use While submitting the form and we can provide the value inside the submit button in this case so now we will see form attribute no validate in form tag so guys basically the no validate attribute is a form attribute and when it is present the no validate specifies that all of the form data should not be validated when submitted so guys previously we had seen the attribute that is required which makes the user to provide certain value inside the input field that's because that particular input field is mandatory with the help of the required attribute but guys when we provide the no validate attribute inside the form tag then it overwrites any of the input fields that is having the required attribute and this is what we are going to see with the help of examples as well so guys let us move to the vs code over here and we have a very simple statement that is below content is in HTML form inside the paragraph tag so what we will do is we will provide the form with the method type that is get request over here and inside the form we will have two Fields the first field is the first name so over here we will set it as input colon text and for the name attribute we will set it as F name and the same value we will copy to the ID attribute as well and then before this we will also have the label tag and for the for attribute we will have the same value that is f name and we will Define the label as first name in this case followed by colon so guys basically we have the input field that is the first name over here and then after this we are going to have couple of line breaks in this case now guys similarly we will have the email address as well as the second input field so we'll simply copy these lines of code and paste it over here and instead of type text we will have email in this case and for the name attribute we will copy the same value that is email and for the ID attribute as well we will keep the value as email over here for the for attribute of the label tag we will keep the value as email and instead of first name we will have the email label over here followed by colon we are asking the user to provide the first name and the email address and in this case we will make the email address input field mandatory so what we have to do is inside this input tag that is of the type email we will provide the required input field so guys basically this attribute is responsible in order to make the user to provide some data before submitting the form so guys after these couple of line breaks over here we will again have the submit button in this case so input colon submit which is going to define the submit button and for the value attribute we will have the submit value for this button so guys let me just save this file now and try reloading this page on the browser so as you can see we have the below content is an HTML form paragraph being displayed over here and then we have two fields that is first name and the email address over here now guys if we simply try to submit this form then as you can see we are getting the message that is please fill out this field that's because we have kept this input field that is email address as mandatory with the help of the required attribute over here so guys only after we provide certain data to this email input we will be able to submit this form so let me just provide some test data over here so as you can see we have provided test gmail.com now let me just click on submit button so now as you can see the F name and the email parameters are being displayed inside the URL over here which is being passed to the server so guys in this way the required field works now guys what if we don't want any of of the validations inside the form when the user wants to submit this form so what we can do is we can use the no validate attribute that can be used inside the form tag so over here after the method that is get request we will simply provide no validate in this case so this is the attribute that is responsible in order to remove all the validations from the input Fields set are present inside the form so let me just save this file now and try reloading this page once again on the browser now if you notice without providing any data we will be able to submit the form that's because we have provided the no validate attribute inside the form tag so let me just click on submit button over here so as you can see the F name and the email parameters are being passed to the server with the help of the URL over here because we have kept the method type as get request so if you notice we have not provided any data inside the email address even though we have kept the email address as required over here that's because we have provided the no validate attribute inside the form tag and the moment we remove this no validate attribute from the form tag let me just save this file now and try reloading this page once again on the browser so now if we try to submit without providing any data to the email address it should through the validation message over here so when we click on submit Button as you can see it says please fill out this field this is the way that no validate Works in order to remove all the validations from the the form Fields over here we have set the no validate attribute once again and when we refresh this page once again over here and when we click on submit as you can see now we are able to submit the data to the server without any validations so now we will see input attribute form no validate in input field so guys basically input form no validate attribute specifies that an input element should not be validated when submitted and the form no validate attribute works with the foll input types that is submit button over here so guys let us check this with the help of examples in vs code so previously we had seen that inside the form tag we had two fields that is the first name and the email address now for the email address we have kept the attribute that is required which means that the email address is required right now and previously we had also seen what is the functionality of the no validate it will allow us to disable all the validations so guys I'll remove this no validate attribute over here and simply we will have the form tag along with the method that is get request so that all the parameters can be seen inside the URL so we have the first name without the required attribute and we have the email with the required attribute which means the user should provide certain data inside the email field over here before submitting the form so guys after this we have the submit button in this case let me just save this file now and try reloading this page on the browser so as you can see we have have the first name and the email Fields over here and simply if we click on the submit button without providing any data so as you can see we have the message that is please fill out this field that's because we have provided the required attribute to this email input field so guys let me just provide certain data over here so as you can see we have provided test at gmail.com in this case so let me click on submit once again this time so as you can see the form is getting submitted and we are not having any value for the first name that's because we have not provided any data and moreover it is not having the required attribute as well which means the field is not mandatory before submitting the form but the email data was provided and the same can be seen over here email is equal to test at gmail.com so guys in this way the required attribute is working but guys let us say we want to disable the validations on all the input fields at are present inside the form tag so simply we can come to the input field over here that is related to the submit button and we can provide the form no validate attribute so as you can see we have this form no validate attribute in this case which will help us in order to disable all the validations that are currently present for all the input Fields inside the form tag over here so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have the first name and the email and this time without providing any data I will we will be clicking on the submit button and we will see what will happen so when we click on the submit Button as you can see the data is getting submitted to the server and we can see F name and email are getting passed to the server over here without any values that's because we have not provided any values to the input Fields over here but guys the important thing in this case is even though email address was marked as required field over here still it is not throwing the validation that's because we have provided the form no validate attribute inside the input button that is representing the submit button in this case for the form tag so guys in this way based on your requirements if you want to disable all the validations for the input fields that are present inside the form tag you can either use the form no validate attribute that is linked to the submit button over here or simply you can use the no validate attribute as well inside the form tag in this case so now we will see canvas Graphics using HTML canvas tag so guys basically the HTML canvas element is used to draw graphics on the fly with the help of the JavaScript so guys we are going to check this with the help of examples as well the canvas element is only a container for the graphics and inside the container we can draw different elements we will be using the JavaScript to actually draw the graphics so basically the HTML element is not sufficient in order to draw the graphics but inside this particular particular container we need to use the JavaScript code in order to draw the different Graphics which can have several methods for drawing the parts boxes circles text and adding some images as well so guys we will check the examples for drawing a line in the canvas so let us move to the VSS code over here in order to see how you can draw the canvas and draw a line inside the canvas so guys basically over here for the title of this document we will say HTML canvas in this case and then after this inside the body we will have a P tag that is the paragraph tag and then we will say below is a HTML canvas element so guys basically we are just having a simple statement that is below is a HTML canvas element and after this we are going to have the canvas tag over here as you can see this is the Mt abbreviation that is provided by the vs code so we have the opening canvas tag and the closing canvas tag and inside this we can have the height and width as well and along with it it is very important that we should also have the ID for this canvas so basically first of all we are going to define the ID and we are simply going to say it as my canvas over here and we will Define the width as 200 pixels in this case and also the height parameter we are going to Define it as 100 pixels so guys basically we have defined the canvas with the ID my canvas over here so that we can use this ID inside the JavaScript code and the width and the height are 200 and 100 pixels respectively now guys let me just save this file now and try reloading this page on the browser so as you can see we have a paragraph that is below is a HTML canvas element and we cannot see anything on this page after this guys over here there is an invisible canvas element that is being displayed so if you right click over here and click on the inspect element as you can see the blue area on the web page is the canvas that is being highlighted now guys in order to see it normally without the inspect tool what we can do is we can have the border for the canvas element so we will move to the vs code over here and after this title tag we are also going to define the style tag in this case and simply we are going to use the canvas tag in this case and we are going to have the Border property over here we will set the Border as 2 pixels that is the width of the border and then we are going to make the Border style as solid and the color of the Border as black in this case so guys basically we have the two pixels solid black border color so let me just save this file now and try reloading this page once again on the browser so now as you can see the canvas element is being displayed over here and this is the width and the height of the canvas now guys let us move to the first activity over here how we can draw a line in the canvas so basically we are going to draw the line from the top left section of the canvas that is from this portion to the bottom right portion that is over here here so we are going to draw a diagonal line in this case from top left to bottom right so guys over here the coordinates is 0 0 and this particular coordinate since we know that the width is 200 so the xaxis is going from left to right so if you have learned mathematics we have the xaxis that goes from left to right and the y axis as well that goes from bottom to left but in this case the positive area of the white axis goes from top to bottom over here so this particular point in this case will be at the x coordinates which is equal to 200 and the y coordinate will be equal to 100 that's because the height is 100 pixels over here so we have to come from 0 0 coordinates to 200 and 100 coordinates in this case so guys what we have to do is we need to add certain JavaScript code over here so after this canvas element at the end of the body section we are going to have the script tag as well and inside the script tag we can use the ID of this document in order to identif ify the canvas element and draw the line inside that canvas so guys basically we are going to use the document do get element by ID so over here you can see there's a get element by ID method that we can use so this is the method that we will be using and inside the parenthesis inside the double codes we are going to provide the my canvas ID which we have set to the canvas element over here so guys this particular code is responsible in order to identify the HTML ele element that we have already defined and we are going to assign it to a variable so in this case we will have the variable that is C in this case which stands for canvas over here and then after the statement we are going to have the semicolon in order to end that statement now guys we are going to use this C variable in order to get the context so in which context we want to draw the line we need to draw the line inside this canvas so we say C followed by Dot and then we say get context over here so basically this is the method that is being used in order to get the context and we want the context in the twodimensional format so we simply say 2D inside the double codes and then guys this particular function will return a value which we will store it in the context variable so over here simply we are going to Define another variable that is CTX which stands for context in this case so we are using the short form that is CTX over here and from now on we are going to use this variable that is CTX X in order to draw the line from 0 0 coordinates up to 100 coordinates so guys what we have to do is after semicolon simply we have to use this CTX that is context followed by Dot and then we have to say move two in this case so that we can move to a point that is the coordinates 0 0 so guys basically with the help of this move to Method over here we are getting the cursor to the 0 0 coordinates and then we need to draw the line up to 2 200 and 100 coordinates over here that is the bottom right so what we have to do is we will use CTX variable once again followed by Dot and then we have something called as line two in this case so guys basically line two method will be helping us in order to draw the line up to a particular coordinates which we are going to Define so over here we are going to define the xaxis as 200 and Y AIS as 100 in this case so this is the coordinates that we are pointing to and then then guys after this simply we have to call the stroke method so over here again we call CDX followed by Dot and then we have the stroke method followed by semicolon so Guys these three lines of code is responsible in order to draw the line along these coordinates that we have defined that is 0 0 up to 20000 so let me just save this file now and try reloading this page once again on the browser so as you can see after reloading this page the line has been drawn inside the canvas from 0 0 coordinates up to 100 coordinates in this case so guys this is the most basic example in order to draw the line inside the canvas now guys similarly we can draw a circle in the canvas as well in this case we will be using the method called as Arc so over here what we will be doing is I'll simply remove these lines of code in this case and then first of all we are going to call the begin path method so CTX followed by Dot and then we have something called as begin path in this case so that the context comes to know that we are going to draw a path that we are going to Define with the help of the upcoming statements as well so after this particular line of code we will say context that is CTX followed by Dot and then we have something called as Arc now guys this particular Arc method takes five arguments the first argument is the xaxis so over here what we will be doing is we want to draw the circle at the center of the canvas over here so the xais should be at the center of this particular entire width of the canvas so guys basically the first parameter should be in terms of xais and it will be located at the center of the circle so we are going to define the circle over here at the center and what will be the center point of that Circle it will be the halfway of the width which is 200 ided 2 which gives us 100 pixels so over here we will say 100 pixels in this case followed by comma and then we want the Y AIS so for the height part we have 100 pixels as the height so we want it at the center so it will be 50 pixels over here so we say 50 in this case which will be the Y coordinates and then guys it will take the radius of the circle that we want to draw so let's say if we provide 40 in this case and then after that it is going to take two angles that is the starting angle and the ending angle so guys initially we want to start from the zero angle and then draw it towards the 3 60th angle which will be the complete circle so in this case we will give 0 followed by comma and then 360 so this is the starting angle and this is the ending angle over here so after this we need to provide semicolon and then guys the last statement is going to be the context do stroke method which will help us in order to draw this particular Arc so over here we will say CDX followed by Dot and then we have the stroke function in this case followed by semicolon so guys using these three lines of code we will be able to see how a circle can be drawn inside the canvas so let me just save this file now and try reloading this page once again on the browser so as you can see we are successfully able to draw the circle inside the canvas by using these parameters now guys if we want the center of the circle to be at the extreme left that is at the zero the xaxis so what we can do is instead of having this value that is 100 at the xais we can simply provide zero which means the center of this circle will be at this particular line for which xais will be zero so let me just save this fin now and try reloading this page once again on the browser so as you can see Center is over here where xaxis is zero and we are able to see a semicircle over here okay similarly let's say we want the Y AIS to be at the zero position which means the center should be over here so we will be able to see only the quarter of this circle so let us try that as well so so instead of this y AIS which is 50 we will simply provide it as zero let me just save this file now and try reloading this page once again on the browser so as you can see Center is over here and it is drawing a circle which is going outside of this canvas but we are able to see only this particular Arc which is just the quarter of the circle so guys in this way you can play around with these numbers and see where the circle is getting displayed inside the canvas now guys apart from this we can also write some text in the canvas as well so how we can do that I'll simply remove these lines of code that is required in order to draw a circle over here now guys we are simply going to call the font property so in this case we will say context followed by Dot and then we have something called as font and let's say we want the font size to be 26 pixels so over here we say 26 pixels and the font family to be aial in this case followed by semicolon so guys first of all we need to define the font of the text that we want to write inside the can element and then after that we are going to f that text using the context followed by Dot and then we have something called as fi text in this case and then after this we are going to have a sample text so let's say we say Hello World in this case followed by comma and then we want to define the position as well so let's say if we want to write this text at the coordinates 50 pixels which is at the xaxis and 50 pixels from the Y AIS so over here simply we will say 5050 followed by comma and then 50 so guys basically this is the text that we want to write and these are the coordinates from where we want to start that particular text and then after this we are going to have semicolon let me just save this file now and try reloading this page once again on the browser so as you can see Hello World text is getting displayed inside the canvas and it is starting from the coordinates that is 50 pixels from the xaxis and 50 pixels from the Y AIS over here so Guys these are certain operations that you can carry out inside the canvas element you can achieve a lot with the help of the canvas element and in the upcoming videos as well we are going to learn a lot about this canvas element and how we can make the elements animate inside this canvas element so that we can create some kind of games as well and apart from that we are also going to see how we can interact with the elements inside the canvas element so guys make sure that you subscribe to this YouTube channel that is programming for beginners because we are going to learn a lot about canvas element in the upcoming videos as well and apart from this if you want to know more about the different functions that can be used inside the canvas element we have this developer. mozilla.org website where you can know the different apis that we can use in order to render the canvas so as you can see canvas rendering context 2D so inside this page we are having multiple functions that can be used by you in order to achieve your requirements so when we go to this particular page as you can see there are multiple property and the functions that you can call in order to Define your own designs inside the canvas element and apart from this it is also having the basic elements as well that you can try from your own side so now we will see video tag in HTML to display a video so guys basically the HTML video element is used to show a video on a web page so in case you want to display a video which is already hosted on a server on which your website is hosted so you can easily use a video tag in order to display that particular video on your web page now guys we are going to see the controls attribute that adds video controls such as how to play pause and increase or decrease the volume of the video and we are also going to see how we can use the muted and the autoplay attribute in order to let your video start playing automatically but it will be muted so guys let us check this with the help of examples in VSS code over here so I'll simply remove the previous lines of code that we had written in this case and we will update the title to HTML video over here so guys the very first thing is we will have the paragraph that is below is a HTML video so we'll update this content to video over here and then after this paragraph simply we are going to have the video tag so as you can see inside the starting video tag we have something called as SRC element for which we need to provide the name of the video that we want to include on our web page so guys over here I have kept a Sample video inside this particular directory in which we are having the test.html web page that we are currently editing right now so simply we can use the sample video. MP4 which is the extension of this video that we want to show on the web page now guys if you have the video on some other directory then you have to provide the entire directory path so that the video can be successfully displayed inside the web browser so guys after providing the value to this SRC attribute which is the name of the video that we want to include it is best practice to provide the width and the height attributes as well so that the particular video that we want to display is properly displayed on the screen so over here we will say width of 400 pixels in this case and let's say we want the height of this particular video to be 250 pixels so over here we say height is equal to 250 pixels now guys let me just save this file now and try reloading this page on the browser so as you can see based on the width and height of the video element that we have defined inside our code we are able to see the video that is being displayed over here but guys we don't have any controls over here so when we take the cursor on this particular video it is simply looking like a image and we cannot click on this particular video as well in order to start this video so what we have to do is we need to use the controls attribute inside this video tag in order to display the play pause and the volume buttons over here so guys simply after this particular height attribute inside the starting video tag we will say controls in this case so as you can see this is the attribute that is being suggested by the vs code as well so we are going to use this controls attribute let me just save this file now and try reloading this page once again on the browser so now as you can see we have this play button along with it we also have the duration of this video and we also have the speaker which will handle the volume of the video and we can also expand this video to the full screen screen and apart from that we have some more options as well you can see playback speed can also be adjusted from here and we can also select the picture in picture option in this case so guys let me just click on the play button over here so that we can play the video Welcome to another video in which we are going to learn html text that you can use in the HTML so guys basically so as you can see the video was playing right now when we clicked on this play button below are some of the basic HTML Texs that we have already seen in the previous we can also mute it by using this speaker icon over here and it is still being played at the background in this case so guys this is one of the ways in which you can provide the video tag and provide certain video that is being hosted on your website server over here now guys apart from this we also have some other options we can also use the muted attribute along with the autoplay attribute as well so let's say when the user comes on this web page you want this particular video to be autop played so what we can do is simply we have to come over here after the controls option we can provide autoplay attribute as well and apart from this we also have to provide the muted attribute that's because some of the web browsers do not allow autoplay without the muted attribute so if we provide the autop play let me just save this file now and try reloading this page once again on the browser so as you can see the autop play is not working right now the video is not getting autop played that's because we we have not provided the muted attribute so both the attributes needs to be provided in order to successfully autoplay the video so over here let me just provide the muted attribute as well so let me just save this file now and try reloading this page once again on the browser so as you can see the video has already started playing itself but it is in mute right now that's because the autoplay feature will only work with the muted attribute so guys this is one of the ways in which you can provide a video on your web page and also provide the different controls in order to pause or play the video or make this video full screen over here as you can see we have expanded the size of this video so that the user experience is better in this case so now we will see how we can display the YouTube video in HTML so guys the easiest way to play videos in HTML is to use YouTube and in this case the video will be hosted by the YouTube but you will be able to display it on your web page by using the if frame tag so over here the logic in order to use the YouTube video is to make use of the video ID to display the video on the HTML web page so guys over here I have the sharable link of a particular video from the YouTube so as you can see this is the video that we want to display and out of this link we only want this particular ID of the video that we want to display on the web page so we need to have a prefix that is https followed by code Lear and then two * forward slashes and then we are going to have youtube.com followed by forward slash and then embed and then after this forward slash we are going to have any ID of the video that you want to display so guys basically this is the prefix that we are going to use so guys let us check this with the help of example and vs code over here so I'll simply remove the previous lines of code that we had WR and we will have the paragraph that will display below is a HTML video from YouTube so guys we have a very simple statement inside the paragraph over here and then we will use iframe Tag over here and this iframe starting tag will have the SRC attribute inside which we need to have the value of the YouTube video that we want to display so guys over here simply we are going to copy this particular link that is the embedded Link in this case and paste it inside the SRC that is the source attribute and then guys it is very important that we should also have the width and the height of this particular if frame so simply we are going to have the width that is 400 pixels in this case and height as well that we are going to Define with 250 pixels in this case so guys basically this is the width and the height of the video that we want to display on the web page and always remember that we should have this particular prefix before providing the ID of the video that we want to display on the web page now guys let me just save this file now and try reloading this page once again on the browser so as you can see below is a HTML video from YouTube and this particular if frame is successfully able to display the video from the YouTube in this case so based on the ID of the video that we provide the video will be displayed over here on the web page and simply we need to click on this particular icon that is YouTube in order to play the video so when we click on this welcome to another video in which we are going to learn about the basic html text as you can see it has started playing the video and it is also showing the different controls from the YouTube in this case so we have the closed captions as well and then we have the more settings icon as well so guys the advantage in order to host the video on YouTube and Link that particular YouTube video ID to your web page is that you don't have to store these long videos which is going to take more memory on your web server but simply you can link the YouTube video to your web page and display it to your audiences and apart from this it is also going to have the controls from the YouTube as well which your users can use in order to have the better user experience and in case if you want to change this particular YouTube video Simply you have to come to the source code in this case and inside the SRC attribute you simply have to change the video ID over here so that the video is updated on the web browser so we have come to the conclusion of this HTML tutorial video hopefully you have got enough knowledge about HTML and how you can use different tags in the HTML in order to make different websites based on your requirement s comment in the comment section below if you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video till then stay tuned
