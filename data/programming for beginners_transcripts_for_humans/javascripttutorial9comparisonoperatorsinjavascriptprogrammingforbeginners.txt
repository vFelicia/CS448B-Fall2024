With timestamps:

00:00 - so now we will see comparison operators
00:02 - in JavaScript So Below are some of the
00:04 - comparison operators in JavaScript that
00:07 - you can use in order to compare the two
00:09 - numbers or the two strings or the two
00:11 - variables as well so guys basically we
00:13 - have two times equal to operator in
00:16 - order to check whether the two numbers
00:18 - or the two strings are equal and when we
00:20 - provide the three times equal to
00:22 - operator as you can see it is going to
00:24 - check whether the value is equal and
00:26 - also apart from that it is also going to
00:28 - check whether the type type of both the
00:30 - variables or both the values are equal
00:32 - or not on the left hand side and the
00:34 - right hand side of this particular
00:36 - operator now guys it is very important
00:38 - to note that whenever you are going to
00:39 - use these comparison operators it is
00:42 - going to either return true or false so
00:45 - basically only one output will be
00:46 - provided out of these two values that is
00:49 - true and false over here we also have
00:51 - not equal to in this case and then again
00:53 - when we provide exclamation mark
00:55 - followed by two * equal to operator it
00:57 - is not equal value or not equal type in
01:00 - this case apart from all these operators
01:03 - we have more basic operators over here
01:05 - that is greater than symbol then we have
01:07 - less than symbol then we have greater
01:08 - than or equal to or less than equal to
01:11 - and then we also have the Turner
01:13 - operator that we can use as far as the
01:15 - comparison operators are concerned so
01:17 - guys let us check all these with the
01:18 - help of examples in vs code over here so
01:21 - what we are going to do is let us say we
01:23 - provide the two variables so we provide
01:25 - the const keyword followed by the first
01:27 - variable that is a so let's say we
01:29 - provide the variable that is 10 over
01:31 - here as the value of the variable and
01:34 - another variable that is B in this case
01:36 - we provide the number that is 11 over
01:39 - here now guys let us say we want to
01:41 - check whether both the numbers are equal
01:43 - so simply we can use the two * equal to
01:46 - operator over here so inside the
01:48 - console. log statement simply we can say
01:51 - the first variable that is a in this
01:54 - case followed by two * equal to and Then
01:56 - followed by the other variable that is B
01:59 - in this case so guys basically this is
02:01 - the expression which is helping us in
02:03 - order to check whether both these
02:05 - variable values are equal or not please
02:08 - note that these values will be compared
02:11 - over here and it will return true when
02:13 - both the values are same and it will
02:16 - return false when both the values are
02:17 - not same so guys let me just save this
02:20 - file now and try running this code on
02:22 - the terminal over here so let me just
02:24 - change this directory so basically we
02:25 - are under the JavaScript folder in this
02:28 - case so now we will run the node command
02:30 - over here followed by the name of the
02:32 - JavaScript file so guys as you can see
02:35 - we are getting the output that is false
02:37 - in this case which means a is not equal
02:40 - to B over here so guys what we will do
02:42 - is simply I will change the value of B
02:44 - now to 10 so that both the variable
02:47 - values are equal now and this expression
02:50 - must return true in this case so when we
02:52 - save this file now and try running this
02:54 - code once again over here so as you can
02:56 - see we are getting the output as true
02:58 - this time because we have made both the
03:00 - values as same over here now guys what
03:02 - is the importance of using three times
03:05 - equal to in this case so guys what we
03:07 - will do is let us say the first variable
03:09 - is having the value that is 10 as a
03:11 - number and for the second variable that
03:13 - is B we want it to be in the form of
03:15 - string over here so guys basically we
03:17 - will say double quotes in this case and
03:19 - then inside this we are going to provide
03:21 - the number that is 10 now guys this a
03:24 - value that is 10 is different from this
03:27 - B value which is 10 because the type of
03:30 - this particular B variable is string
03:32 - over here now in order to confirm this
03:34 - simply we can use the type of operator
03:36 - in this case so we will say console. log
03:39 - statement over here simply we can
03:41 - provide the type of operator which is
03:44 - used in order to check the type of a
03:46 - particular variable which means what
03:49 - kind of value that particular variable
03:51 - is holding so guys basically we say type
03:53 - of followed by the space character and
03:55 - then the name of the variable so let's
03:57 - say when we provide the variable a we
03:59 - want to check the type of this
04:01 - particular variable a let me just save
04:03 - this file now and try running this code
04:05 - once again so as you can see we are
04:07 - getting the output as number over here
04:09 - so this thing is telling us that the
04:11 - variable a is having the value of the
04:13 - type number over here and that is
04:15 - correct because we are having the number
04:17 - 10 in this case but guys for the
04:18 - variable B since we have provided the
04:21 - value inside the double Cotes over here
04:24 - whenever we are using the double quotes
04:25 - or the single code the value is
04:27 - represented as a string value so
04:30 - basically when we check the type of this
04:32 - particular variable that is B over here
04:34 - let me just save this file now and try
04:36 - running this code once again over here
04:38 - so as you can see it is now telling us
04:40 - that the B variable is having the value
04:43 - of the type string in this case so guys
04:45 - basically a is having the value of the
04:48 - type number and B is having the value of
04:51 - the type string over here so let us now
04:53 - check whether both these variables are
04:55 - equal or not to basically when we use 2
04:58 - * equal to operator over here the values
05:01 - of the variables will be checked and the
05:03 - data type will not be checked over here
05:05 - so when we save this file now and try
05:07 - running this code once again over here
05:09 - as you can see we are getting the value
05:10 - as true that's because the values for
05:13 - both these variables are same but the
05:15 - data type is different so in order to
05:17 - check the data type as well you have to
05:20 - use the three * equal to operator in
05:22 - which case the type will also be checked
05:25 - so guys over here we will provide
05:27 - another equal to operator so we have a
05:29 - equal to equal to equal to and then B
05:32 - over here so basically let us see what
05:34 - will be the output so when we save this
05:36 - file now and try running this code once
05:38 - again over here as you can see this time
05:40 - we are getting false that's because even
05:43 - though the values are same for the
05:45 - variable A and B but the data types are
05:48 - different for a we have the data type as
05:50 - number and for B we are having the data
05:52 - type as string so guys always remember
05:55 - whenever you are working on any project
05:57 - it is very important that you compare
05:59 - the values as well as the type of the
06:02 - variables that you are comparing so
06:04 - three * equal to operator is recommended
06:06 - compared to the two times equal to
06:08 - operator as it might give you unexpected
06:10 - results as we have seen since it
06:13 - compares the number and the string and
06:15 - the output can be true in that case so
06:17 - you should also check the type of the
06:19 - variable that you are comparing now guys
06:21 - similarly we have the not equal to
06:23 - operator as well so let us say we
06:25 - provide the number that is 11 over here
06:27 - so simply we will provide a followed by
06:30 - exclamation mark over here followed by
06:32 - the equal to operator this means we are
06:35 - asking whether this a is not equal to B
06:38 - yes in this case because 10 is not equal
06:40 - to 11 so this particular expression
06:42 - should return true over here so let me
06:44 - just save this file now and try running
06:46 - this code once again over here as you
06:48 - can see we are getting the value as true
06:50 - that's because a is actually not equal
06:52 - to B and when we make them equal to so
06:55 - let us say we provide the value as 10
06:57 - for B in such a way that a is now equal
07:00 - to B so is a not equal to B no in this
07:03 - case because both are equal so this
07:05 - particular expression will return false
07:07 - over here so let me just save this file
07:09 - now and try running this code once again
07:11 - so as you can see we are getting false
07:13 - in this case and then guys similarly we
07:15 - can compare the type as well by
07:17 - providing the two * equal to over here
07:20 - after the exclamation mark So in this
07:22 - case let us provide 2 times equal to so
07:25 - is a not equal to B this time no because
07:28 - both the values are equal so so let me
07:29 - just save this file now and try running
07:31 - this code once again over here as you
07:33 - can see we are getting false over here
07:35 - let me just change the value to 11 in
07:37 - this case and when we save this file now
07:39 - and try running this code as you can see
07:42 - we are getting true because both the
07:43 - values are not equal and behind the
07:45 - scenes it is also checking for the type
07:48 - as well so when both the values are same
07:50 - that is a and b are having the values as
07:52 - 10 over here and also the data type is
07:54 - number let us see what will be the
07:56 - output in this case as you can see we
07:58 - are getting false over here here but if
08:00 - we provide this B value as a string
08:03 - value in this case and keep the value
08:05 - same so let me just provide the double
08:07 - codes over here and we have provided the
08:09 - value as 10 over here so this time the
08:13 - data type is not matching so even though
08:15 - the value is matching over here but the
08:17 - data type of both the variables are not
08:19 - matching and that is why this particular
08:21 - expression should return true in this
08:23 - case so when we save this file now and
08:25 - try running this code once again over
08:27 - here as you can see we are getting the
08:29 - output is true in this case so guys in
08:31 - this way you can use the not equal to
08:33 - operator as well apart from this we can
08:35 - also see whether a number is greater
08:37 - than the other number so let us check
08:39 - that as well so this time let us provide
08:42 - the B value as 15 over here and we will
08:44 - check whether a is greater than b so
08:47 - when we provide the greater than symbol
08:49 - it will check whether this particular a
08:51 - value on the left hand side is it equal
08:54 - to B no in this case because 10 is less
08:57 - than 15 over here so when we save this
08:59 - file now and try running this code once
09:01 - again over here as you can see we are
09:03 - getting false that's because a is not
09:05 - greater than b similarly on the reverse
09:08 - side we can use a is less than b over
09:10 - here it will give us the result as true
09:12 - this time because a is actually less
09:14 - than b this time over here so guys when
09:16 - we provide a less than b let us see what
09:19 - will be the output when we run this code
09:21 - once again as you can see we are getting
09:23 - the value as true now guys let us say
09:25 - both the values are same over here so we
09:27 - provide the value of a as 15 as well so
09:29 - a is equal to B this time so what will
09:32 - be the output of a is less than b over
09:35 - here so let us check that so when we
09:37 - save this file now and try running this
09:39 - code once again over here as you can see
09:41 - we are getting false that's because a is
09:44 - not less than b it is exactly equal to B
09:47 - so guys if the value of B is 15 over
09:50 - here the maximum value of a must be 14
09:53 - in order for this particular expression
09:55 - to be true so guys let us check that as
09:57 - well when we provide the a value as 14
10:00 - so this time the a is less than b over
10:02 - here so we will get the result as true
10:04 - over here so as you can see we are
10:06 - getting the result as true and if you
10:08 - want to check whether a is less than b
10:10 - but you want that particular expression
10:12 - to return true even if both the values
10:14 - are same so let's say we have the value
10:17 - of a as 15 and B also has 15 over here
10:20 - and you want this particular expression
10:22 - to be true this time so we have to use a
10:25 - less than or equal to B this time so
10:27 - guys basically it is going to check
10:29 - whether a is less than b if not then it
10:32 - is going to check whether a is equal to
10:34 - B so if one of the condition is
10:36 - satisfied so basically it is going to
10:38 - return true over here so when we save
10:40 - this file now this time we will get true
10:42 - over here since a is equal to B so as
10:44 - you can see we are getting true over
10:46 - here but if we remove this equal to
10:48 - operator this will return as false
10:50 - because both the variable values are
10:52 - same so as you can see we are getting
10:53 - false over here so guys similarly the
10:56 - greater than or equal to operator will
10:58 - work in the same way so let me know in
11:00 - the comment section below what will be
11:02 - the output if we provide a greater than
11:05 - or equal to B over here whether it will
11:07 - be true or false when both the values of
11:10 - the variables that is a and b is equal
11:12 - to 15 over here let us see whether your
11:14 - answer is correct or not now guys apart
11:16 - from this we have another very important
11:18 - operator that is called as Turner
11:20 - operator over here in which case we use
11:22 - the question mark operator so guys let
11:24 - us check that as well so what we have to
11:26 - do is we need to provide certain
11:29 - condition over here so let me just
11:30 - change this condition to a is less than
11:33 - or equal to B this time so guys
11:35 - basically we are using this particular
11:37 - operator a is less than or equal to B we
11:40 - have provided the values as 15 and 15 so
11:43 - basically what exactly is happening over
11:45 - here is this particular expression will
11:47 - return true over here so let me just
11:49 - confirm that so when we run this code
11:51 - once again you can see that the result
11:53 - is true but guys what we can do is we
11:56 - can print some other string over here
11:58 - when the result result is true and if
12:00 - the result is not true we can print
12:02 - something else so after the condition
12:04 - that we have provided over here this
12:06 - particular expression is called
12:08 - condition in this case so after this we
12:10 - have to provide the question mark as the
12:12 - Turner operator and after this question
12:15 - mark we have to provide something to be
12:17 - printed on the console when the
12:19 - condition is true over here so let us
12:21 - say we want to print one when this
12:23 - particular expression is true and if
12:26 - this particular expression is false we
12:28 - want to print two on the console so
12:30 - after we provide the true statement we
12:32 - provide colon over here and then we
12:34 - provide the other statement that is two
12:37 - which will be executed when the
12:38 - expression is false so guys let us check
12:41 - this as well so when we save this file
12:42 - now so currently a is less than or equal
12:45 - to be yes it is since both the values
12:47 - are same so it is going to return true
12:49 - over here so basically for the true
12:51 - statement this particular number that is
12:53 - one will be printed on the console so
12:55 - when we run this code on the terminal as
12:58 - you can see we are getting one over here
13:00 - but guys let us say we provide the value
13:02 - of a as 20 over here in which case this
13:05 - particular expression will be false
13:07 - since a is not less than or equal to B
13:10 - over here so when we save this file now
13:12 - and try running this code once again
13:13 - over here as you can see we are getting
13:15 - the number as two because we are getting
13:17 - the false output for this particular
13:19 - expression now guys instead of providing
13:22 - the numbers we can simply provide the
13:24 - string as well that will be more
13:25 - sensible so we can say a is less than or
13:30 - equal to B so guys basically within the
13:33 - double codes over here we have provided
13:35 - the statement to be printed on the
13:36 - console similarly for the false
13:38 - expression as well instead of two we
13:41 - will provide another string over here
13:43 - inside the double code so we will say a
13:45 - is not less than b over here so guys
13:49 - when a is less than b it is going to
13:51 - print this statement and when a is not
13:53 - less than b it is going to print this
13:55 - particular statement for the false
13:57 - expression so when we see this file now
14:00 - currently a is not less than b over here
14:02 - so let us see what will be printed on
14:04 - the terminal so when we run this code
14:06 - once again as you can see a is not less
14:08 - than b is getting printed over here but
14:11 - let us say we want this particular
14:13 - expression to be true so in this case we
14:15 - have provided the value of a as 10 and B
14:18 - is 15 over here so this time a is less
14:20 - than b so when we run this code once
14:22 - again you can see that a is less than or
14:25 - equal to B this time so guys in this way
14:27 - you can use the Turner operator remember
14:30 - that first we have to provide the
14:32 - expression by using some comparison
14:34 - operators that we have used so far and
14:37 - then after that we have to use this
14:38 - question mark operator which is called
14:40 - as tary operator as well and then the
14:43 - first expression will be the true
14:45 - expression and Then followed by the
14:46 - colon we will provide the output to be
14:49 - provided when the expression is false
14:51 - over here so guys comment in the comment
14:53 - section below whether you have learned
14:54 - something out of this video please make
14:56 - sure that you like this video so that it
14:58 - reaches to more people and subscribe to
15:00 - this channel so that you get the
15:01 - notifications on upcoming videos as well
15:04 - I'll see you in the next video in which
15:05 - we are going to complete an exercise on
15:08 - arithmetic operators in JavaScript so
15:11 - stay tuned

Cleaned transcript:

so now we will see comparison operators in JavaScript So Below are some of the comparison operators in JavaScript that you can use in order to compare the two numbers or the two strings or the two variables as well so guys basically we have two times equal to operator in order to check whether the two numbers or the two strings are equal and when we provide the three times equal to operator as you can see it is going to check whether the value is equal and also apart from that it is also going to check whether the type type of both the variables or both the values are equal or not on the left hand side and the right hand side of this particular operator now guys it is very important to note that whenever you are going to use these comparison operators it is going to either return true or false so basically only one output will be provided out of these two values that is true and false over here we also have not equal to in this case and then again when we provide exclamation mark followed by two * equal to operator it is not equal value or not equal type in this case apart from all these operators we have more basic operators over here that is greater than symbol then we have less than symbol then we have greater than or equal to or less than equal to and then we also have the Turner operator that we can use as far as the comparison operators are concerned so guys let us check all these with the help of examples in vs code over here so what we are going to do is let us say we provide the two variables so we provide the const keyword followed by the first variable that is a so let's say we provide the variable that is 10 over here as the value of the variable and another variable that is B in this case we provide the number that is 11 over here now guys let us say we want to check whether both the numbers are equal so simply we can use the two * equal to operator over here so inside the console. log statement simply we can say the first variable that is a in this case followed by two * equal to and Then followed by the other variable that is B in this case so guys basically this is the expression which is helping us in order to check whether both these variable values are equal or not please note that these values will be compared over here and it will return true when both the values are same and it will return false when both the values are not same so guys let me just save this file now and try running this code on the terminal over here so let me just change this directory so basically we are under the JavaScript folder in this case so now we will run the node command over here followed by the name of the JavaScript file so guys as you can see we are getting the output that is false in this case which means a is not equal to B over here so guys what we will do is simply I will change the value of B now to 10 so that both the variable values are equal now and this expression must return true in this case so when we save this file now and try running this code once again over here so as you can see we are getting the output as true this time because we have made both the values as same over here now guys what is the importance of using three times equal to in this case so guys what we will do is let us say the first variable is having the value that is 10 as a number and for the second variable that is B we want it to be in the form of string over here so guys basically we will say double quotes in this case and then inside this we are going to provide the number that is 10 now guys this a value that is 10 is different from this B value which is 10 because the type of this particular B variable is string over here now in order to confirm this simply we can use the type of operator in this case so we will say console. log statement over here simply we can provide the type of operator which is used in order to check the type of a particular variable which means what kind of value that particular variable is holding so guys basically we say type of followed by the space character and then the name of the variable so let's say when we provide the variable a we want to check the type of this particular variable a let me just save this file now and try running this code once again so as you can see we are getting the output as number over here so this thing is telling us that the variable a is having the value of the type number over here and that is correct because we are having the number 10 in this case but guys for the variable B since we have provided the value inside the double Cotes over here whenever we are using the double quotes or the single code the value is represented as a string value so basically when we check the type of this particular variable that is B over here let me just save this file now and try running this code once again over here so as you can see it is now telling us that the B variable is having the value of the type string in this case so guys basically a is having the value of the type number and B is having the value of the type string over here so let us now check whether both these variables are equal or not to basically when we use 2 * equal to operator over here the values of the variables will be checked and the data type will not be checked over here so when we save this file now and try running this code once again over here as you can see we are getting the value as true that's because the values for both these variables are same but the data type is different so in order to check the data type as well you have to use the three * equal to operator in which case the type will also be checked so guys over here we will provide another equal to operator so we have a equal to equal to equal to and then B over here so basically let us see what will be the output so when we save this file now and try running this code once again over here as you can see this time we are getting false that's because even though the values are same for the variable A and B but the data types are different for a we have the data type as number and for B we are having the data type as string so guys always remember whenever you are working on any project it is very important that you compare the values as well as the type of the variables that you are comparing so three * equal to operator is recommended compared to the two times equal to operator as it might give you unexpected results as we have seen since it compares the number and the string and the output can be true in that case so you should also check the type of the variable that you are comparing now guys similarly we have the not equal to operator as well so let us say we provide the number that is 11 over here so simply we will provide a followed by exclamation mark over here followed by the equal to operator this means we are asking whether this a is not equal to B yes in this case because 10 is not equal to 11 so this particular expression should return true over here so let me just save this file now and try running this code once again over here as you can see we are getting the value as true that's because a is actually not equal to B and when we make them equal to so let us say we provide the value as 10 for B in such a way that a is now equal to B so is a not equal to B no in this case because both are equal so this particular expression will return false over here so let me just save this file now and try running this code once again so as you can see we are getting false in this case and then guys similarly we can compare the type as well by providing the two * equal to over here after the exclamation mark So in this case let us provide 2 times equal to so is a not equal to B this time no because both the values are equal so so let me just save this file now and try running this code once again over here as you can see we are getting false over here let me just change the value to 11 in this case and when we save this file now and try running this code as you can see we are getting true because both the values are not equal and behind the scenes it is also checking for the type as well so when both the values are same that is a and b are having the values as 10 over here and also the data type is number let us see what will be the output in this case as you can see we are getting false over here here but if we provide this B value as a string value in this case and keep the value same so let me just provide the double codes over here and we have provided the value as 10 over here so this time the data type is not matching so even though the value is matching over here but the data type of both the variables are not matching and that is why this particular expression should return true in this case so when we save this file now and try running this code once again over here as you can see we are getting the output is true in this case so guys in this way you can use the not equal to operator as well apart from this we can also see whether a number is greater than the other number so let us check that as well so this time let us provide the B value as 15 over here and we will check whether a is greater than b so when we provide the greater than symbol it will check whether this particular a value on the left hand side is it equal to B no in this case because 10 is less than 15 over here so when we save this file now and try running this code once again over here as you can see we are getting false that's because a is not greater than b similarly on the reverse side we can use a is less than b over here it will give us the result as true this time because a is actually less than b this time over here so guys when we provide a less than b let us see what will be the output when we run this code once again as you can see we are getting the value as true now guys let us say both the values are same over here so we provide the value of a as 15 as well so a is equal to B this time so what will be the output of a is less than b over here so let us check that so when we save this file now and try running this code once again over here as you can see we are getting false that's because a is not less than b it is exactly equal to B so guys if the value of B is 15 over here the maximum value of a must be 14 in order for this particular expression to be true so guys let us check that as well when we provide the a value as 14 so this time the a is less than b over here so we will get the result as true over here so as you can see we are getting the result as true and if you want to check whether a is less than b but you want that particular expression to return true even if both the values are same so let's say we have the value of a as 15 and B also has 15 over here and you want this particular expression to be true this time so we have to use a less than or equal to B this time so guys basically it is going to check whether a is less than b if not then it is going to check whether a is equal to B so if one of the condition is satisfied so basically it is going to return true over here so when we save this file now this time we will get true over here since a is equal to B so as you can see we are getting true over here but if we remove this equal to operator this will return as false because both the variable values are same so as you can see we are getting false over here so guys similarly the greater than or equal to operator will work in the same way so let me know in the comment section below what will be the output if we provide a greater than or equal to B over here whether it will be true or false when both the values of the variables that is a and b is equal to 15 over here let us see whether your answer is correct or not now guys apart from this we have another very important operator that is called as Turner operator over here in which case we use the question mark operator so guys let us check that as well so what we have to do is we need to provide certain condition over here so let me just change this condition to a is less than or equal to B this time so guys basically we are using this particular operator a is less than or equal to B we have provided the values as 15 and 15 so basically what exactly is happening over here is this particular expression will return true over here so let me just confirm that so when we run this code once again you can see that the result is true but guys what we can do is we can print some other string over here when the result result is true and if the result is not true we can print something else so after the condition that we have provided over here this particular expression is called condition in this case so after this we have to provide the question mark as the Turner operator and after this question mark we have to provide something to be printed on the console when the condition is true over here so let us say we want to print one when this particular expression is true and if this particular expression is false we want to print two on the console so after we provide the true statement we provide colon over here and then we provide the other statement that is two which will be executed when the expression is false so guys let us check this as well so when we save this file now so currently a is less than or equal to be yes it is since both the values are same so it is going to return true over here so basically for the true statement this particular number that is one will be printed on the console so when we run this code on the terminal as you can see we are getting one over here but guys let us say we provide the value of a as 20 over here in which case this particular expression will be false since a is not less than or equal to B over here so when we save this file now and try running this code once again over here as you can see we are getting the number as two because we are getting the false output for this particular expression now guys instead of providing the numbers we can simply provide the string as well that will be more sensible so we can say a is less than or equal to B so guys basically within the double codes over here we have provided the statement to be printed on the console similarly for the false expression as well instead of two we will provide another string over here inside the double code so we will say a is not less than b over here so guys when a is less than b it is going to print this statement and when a is not less than b it is going to print this particular statement for the false expression so when we see this file now currently a is not less than b over here so let us see what will be printed on the terminal so when we run this code once again as you can see a is not less than b is getting printed over here but let us say we want this particular expression to be true so in this case we have provided the value of a as 10 and B is 15 over here so this time a is less than b so when we run this code once again you can see that a is less than or equal to B this time so guys in this way you can use the Turner operator remember that first we have to provide the expression by using some comparison operators that we have used so far and then after that we have to use this question mark operator which is called as tary operator as well and then the first expression will be the true expression and Then followed by the colon we will provide the output to be provided when the expression is false over here so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video in which we are going to complete an exercise on arithmetic operators in JavaScript so stay tuned
