With timestamps:

00:00 - hey what's up guys welcome to another
00:02 - video in which we are going to learn
00:03 - about encapsulation in Python
00:05 - Programming so guys encapsulation is one
00:08 - of the key features in object-oriented
00:10 - programming because encapsulation refers
00:13 - to the bundling of attributes and
00:15 - methods inside a single class so we have
00:18 - seen so far the various attributes and
00:20 - methods that we have been creating
00:22 - inside the class that functionality of
00:24 - the Python Programming is called
00:26 - encapsulation now it prevents outer
00:28 - classes from accessing and changing
00:30 - attributes and methods of a class so far
00:33 - we have seen that all the attributes and
00:35 - methods were public in nature but in
00:37 - this case we are going to create some
00:39 - private attributes which cannot be
00:42 - directly accessed outside the class so
00:44 - this also helps us to achieve data
00:46 - hiding over here now in Python we denote
00:49 - private attributes using the underscore
00:51 - as the prefix either we can have the
00:54 - single underscore or the double
00:55 - underscore so let us check this with the
00:57 - help of example now over here as you can
00:59 - see in this example we have the class
01:01 - computer and then we also have the
01:03 - Constructor that is in it followed by
01:05 - the self which is the parameter for that
01:07 - object that is being passed and then
01:09 - self dot Max price so as you can see
01:12 - over here we have the prefix that is
01:14 - double underscore followed by Max price
01:16 - so this is one of the attributes of this
01:19 - computer class over here and we are
01:21 - providing the value of 900 to this Max
01:23 - price over here inside the Constructor
01:25 - now apart from this Constructor we have
01:27 - more couple of functions inside this
01:29 - class as you can see we have the cell
01:31 - function over here which simply prints
01:33 - the selling price is the self followed
01:36 - by Dot and then the max price so
01:37 - basically this statement will help us in
01:40 - order to print this value that is the
01:42 - max price value of the computer and then
01:44 - we have another method that is set max
01:46 - price which takes the object that is
01:48 - using the self and then it also takes
01:51 - the price over here so in case you want
01:53 - to set another Max price for this
01:55 - computer you can use this set max price
01:58 - function what it will do is it will will
02:00 - simply update the value of the max price
02:02 - of the computer as you can see with this
02:04 - particular statement so guys let us take
02:06 - this with the help of example now what I
02:08 - will do is I'll simply copy these lines
02:10 - of code since I am a little bit lazy in
02:12 - order to type them again so we are going
02:14 - to paste it inside the vs code so over
02:16 - here what we are going to do is we are
02:19 - going to print the max price of the
02:21 - computer so first of all we are going to
02:23 - create the object that is comp one over
02:25 - here followed by equal to and then we
02:28 - have the computer class name so
02:30 - basically since a Constructor is not
02:32 - taking any other parameter apart from
02:34 - this self which is the object itself so
02:36 - we need not have to provide any
02:37 - parameter over here while instantiating
02:39 - this object that is comp one now what we
02:42 - will do is simply we will call the cell
02:44 - function over here that is this
02:46 - particular function so we can use the
02:48 - comp one object followed by Dot and then
02:51 - we have the cell function so after this
02:54 - open and close parenthesis so let me
02:56 - just save this file now and try running
02:57 - this code so basically this print
02:59 - statement should get executed and it
03:01 - should be displayed on the terminal so
03:03 - I'll just run this code now as you can
03:05 - see selling price is 900 so what exactly
03:08 - happened is when the control Flow came
03:10 - over here that is comp 1 it is equal to
03:12 - computer The Constructor of this class
03:14 - that is the init method was called and
03:17 - inside this what we have done is this
03:19 - private attribute so guys basically this
03:21 - double underscore denotes that this is
03:23 - the private attribute of the computer
03:25 - class so basically this private
03:27 - attribute was initialized inside the
03:30 - Constructor and the value of 900 was
03:32 - being assigned to this particular
03:34 - attribute and then what we did is when
03:36 - the control Flow came over here that is
03:38 - while calling the cell function
03:40 - basically this print statement was
03:42 - executed so selling price it is equal to
03:45 - this self dot Max price got printed over
03:48 - here which is 900 right now now guys let
03:50 - us do another thing what we will do is
03:52 - we will try to access this private
03:55 - attribute from outside of this class so
03:57 - over here we will call comp 1 once again
04:00 - followed by Dot and then we can call
04:02 - this private attribute that is the max
04:04 - price so as you can see this Max price
04:07 - is getting suggested by the vs code so
04:09 - we will call this Max price and what we
04:11 - will do is we will try to assign another
04:13 - value that is 1000 over here to this Max
04:16 - price and then again let us say we want
04:18 - to call this print statement so again we
04:21 - will call this cell method over here so
04:23 - I'll just copy this line of code and
04:25 - paste this over here let me just save
04:26 - this file now and try running this code
04:28 - so as you can see selling price 900 this
04:31 - is a statement that was printed by
04:33 - calling the first cell method and then
04:35 - the second time the cell method was
04:37 - called again the selling price was equal
04:39 - to 900 so guys why so that's because
04:41 - this Max price is the private attribute
04:44 - and we directly cannot access this
04:47 - attribute by using this object we need
04:49 - to have another method inside the
04:52 - computer class in order to assign
04:54 - another value to the private attribute
04:56 - and that is why we have this method that
04:59 - is the set max price along with the
05:01 - parameter price which it is going to
05:03 - take in order to replace the existing
05:06 - Max price over here so what we can do is
05:08 - we are going to call the comp one object
05:11 - once again followed by Dot and this time
05:14 - instead of directly accessing this Max
05:16 - price we are going to call this set max
05:18 - price over here so set max price and it
05:21 - is expecting two parameters the first
05:23 - parameter is the self which is going to
05:25 - be passed by default which is going to
05:27 - be the comp one object and then the
05:29 - second parameter is the price which we
05:31 - are going to pass to this method so
05:34 - again what we will do is simply we are
05:36 - going to provide this thousand price
05:37 - that we try to assign to the max price
05:40 - directly over here so set max price and
05:42 - then again let's say we want to print
05:44 - the selling price over here so again we
05:46 - are going to call the sell method once
05:48 - again so comp one dot cell so over here
05:51 - the only difference is we are calling
05:53 - the method that is the set max price and
05:55 - we are passing the value of the new Max
05:57 - price over here which is going to be
05:59 - pass to this price and then the max
06:02 - price value will be the updated price
06:04 - that we have just set so guys let me
06:06 - just save this file now and try running
06:07 - this code so as you can see selling
06:09 - price 900 and then selling price 900
06:12 - once again and the third time that we
06:14 - tried by using the set max price over
06:16 - here it was thousand so this time it is
06:18 - selling price it is equal to one
06:20 - thousand so guys by using this method in
06:23 - order to set the value of a private
06:25 - attribute we were successfully able to
06:28 - update the value of this private
06:30 - attribute and this is the main
06:32 - functionality which we call it as
06:33 - encapsulation as far as object oriented
06:36 - programming in Python is concerned so
06:38 - guys let us run this code once again by
06:40 - a different value let's say the max
06:41 - price over here we set it to 2000 so let
06:44 - me just save this file now and try
06:45 - running this code so this time the
06:47 - selling price is coming over here once
06:49 - again as 2000 and guys this is the way
06:51 - in order to hide certain attributes of a
06:54 - class you can have them as the private
06:56 - attribute by prefixing and use the
06:59 - different method thirds in order to set
07:01 - their values by using the objects of
07:03 - that class so guys practice on your own
07:05 - so that are different inputs you get
07:07 - different outputs please make sure that
07:09 - you like this video so that it reaches
07:10 - to more people and subscribe to this
07:12 - channel so that you get the
07:13 - notifications on upcoming videos as well
07:15 - the next video that we are going to talk
07:17 - about is method overriding in Python
07:20 - Programming so stay tuned

Cleaned transcript:

hey what's up guys welcome to another video in which we are going to learn about encapsulation in Python Programming so guys encapsulation is one of the key features in objectoriented programming because encapsulation refers to the bundling of attributes and methods inside a single class so we have seen so far the various attributes and methods that we have been creating inside the class that functionality of the Python Programming is called encapsulation now it prevents outer classes from accessing and changing attributes and methods of a class so far we have seen that all the attributes and methods were public in nature but in this case we are going to create some private attributes which cannot be directly accessed outside the class so this also helps us to achieve data hiding over here now in Python we denote private attributes using the underscore as the prefix either we can have the single underscore or the double underscore so let us check this with the help of example now over here as you can see in this example we have the class computer and then we also have the Constructor that is in it followed by the self which is the parameter for that object that is being passed and then self dot Max price so as you can see over here we have the prefix that is double underscore followed by Max price so this is one of the attributes of this computer class over here and we are providing the value of 900 to this Max price over here inside the Constructor now apart from this Constructor we have more couple of functions inside this class as you can see we have the cell function over here which simply prints the selling price is the self followed by Dot and then the max price so basically this statement will help us in order to print this value that is the max price value of the computer and then we have another method that is set max price which takes the object that is using the self and then it also takes the price over here so in case you want to set another Max price for this computer you can use this set max price function what it will do is it will will simply update the value of the max price of the computer as you can see with this particular statement so guys let us take this with the help of example now what I will do is I'll simply copy these lines of code since I am a little bit lazy in order to type them again so we are going to paste it inside the vs code so over here what we are going to do is we are going to print the max price of the computer so first of all we are going to create the object that is comp one over here followed by equal to and then we have the computer class name so basically since a Constructor is not taking any other parameter apart from this self which is the object itself so we need not have to provide any parameter over here while instantiating this object that is comp one now what we will do is simply we will call the cell function over here that is this particular function so we can use the comp one object followed by Dot and then we have the cell function so after this open and close parenthesis so let me just save this file now and try running this code so basically this print statement should get executed and it should be displayed on the terminal so I'll just run this code now as you can see selling price is 900 so what exactly happened is when the control Flow came over here that is comp 1 it is equal to computer The Constructor of this class that is the init method was called and inside this what we have done is this private attribute so guys basically this double underscore denotes that this is the private attribute of the computer class so basically this private attribute was initialized inside the Constructor and the value of 900 was being assigned to this particular attribute and then what we did is when the control Flow came over here that is while calling the cell function basically this print statement was executed so selling price it is equal to this self dot Max price got printed over here which is 900 right now now guys let us do another thing what we will do is we will try to access this private attribute from outside of this class so over here we will call comp 1 once again followed by Dot and then we can call this private attribute that is the max price so as you can see this Max price is getting suggested by the vs code so we will call this Max price and what we will do is we will try to assign another value that is 1000 over here to this Max price and then again let us say we want to call this print statement so again we will call this cell method over here so I'll just copy this line of code and paste this over here let me just save this file now and try running this code so as you can see selling price 900 this is a statement that was printed by calling the first cell method and then the second time the cell method was called again the selling price was equal to 900 so guys why so that's because this Max price is the private attribute and we directly cannot access this attribute by using this object we need to have another method inside the computer class in order to assign another value to the private attribute and that is why we have this method that is the set max price along with the parameter price which it is going to take in order to replace the existing Max price over here so what we can do is we are going to call the comp one object once again followed by Dot and this time instead of directly accessing this Max price we are going to call this set max price over here so set max price and it is expecting two parameters the first parameter is the self which is going to be passed by default which is going to be the comp one object and then the second parameter is the price which we are going to pass to this method so again what we will do is simply we are going to provide this thousand price that we try to assign to the max price directly over here so set max price and then again let's say we want to print the selling price over here so again we are going to call the sell method once again so comp one dot cell so over here the only difference is we are calling the method that is the set max price and we are passing the value of the new Max price over here which is going to be pass to this price and then the max price value will be the updated price that we have just set so guys let me just save this file now and try running this code so as you can see selling price 900 and then selling price 900 once again and the third time that we tried by using the set max price over here it was thousand so this time it is selling price it is equal to one thousand so guys by using this method in order to set the value of a private attribute we were successfully able to update the value of this private attribute and this is the main functionality which we call it as encapsulation as far as object oriented programming in Python is concerned so guys let us run this code once again by a different value let's say the max price over here we set it to 2000 so let me just save this file now and try running this code so this time the selling price is coming over here once again as 2000 and guys this is the way in order to hide certain attributes of a class you can have them as the private attribute by prefixing and use the different method thirds in order to set their values by using the objects of that class so guys practice on your own so that are different inputs you get different outputs please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is method overriding in Python Programming so stay tuned
