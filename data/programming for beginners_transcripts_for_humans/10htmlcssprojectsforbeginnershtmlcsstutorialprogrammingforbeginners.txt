With timestamps:

00:00 - so now we will create a very simple
00:01 - calculator with the help of the HTML and
00:04 - the CSS as you can see this is the
00:06 - simple calculator that we are going to
00:08 - create so first of all we are going to
00:10 - create a folder over here inside the
00:12 - HTML CSS projects folder so we are going
00:15 - to create the folder that is named as
00:17 - calculator since we are going to create
00:19 - a simple calculator over here now guys
00:22 - inside this calculator folder we are
00:24 - going to create the HTML and the CSS
00:26 - files so first of all we will create
00:28 - index.html file in this case and then we
00:31 - are going to create another file in
00:32 - order to provide the styling with the
00:34 - help of the CSS file so guys over here
00:37 - we have the style. CSS file as well so
00:39 - guys inside the index.html file we will
00:42 - have our HTML elements so we are going
00:44 - to use the Mt abbreviation that is
00:46 - exclamation mark in order to create the
00:49 - HTML template over here and for the
00:51 - title part we are simply going to
00:53 - provide the string that is simple
00:55 - calculator now because apart from this
00:57 - inside the body tag we are going to
00:59 - provide our code so what we are going to
01:01 - do is first of all we are going to
01:03 - create a diff tag with the class that is
01:05 - main class over here and inside this we
01:07 - are supposed to have the text area so
01:09 - for reference over here I have opened
01:11 - the calculator in this case that is a
01:13 - standard calculator so this box over
01:15 - here where all the numbers will appear
01:17 - will be represented by this particular
01:19 - text area so guys over here we will
01:21 - provide the text area is the name and
01:23 - the ID as well so I have provided the
01:25 - text area value for the name and ID part
01:28 - and then initially we will Prov provide
01:30 - the data as zero in this case now guys
01:32 - after this we are going to have another
01:34 - diff tag with the class container where
01:36 - we are going to Define all these buttons
01:38 - that you can see so guys we can create
01:40 - all these buttons with the help of the
01:42 - diff tags over here so we are going to
01:44 - have the diff tag with the class Row in
01:46 - this case and every button will be
01:48 - represented with the help of this
01:49 - particular class that is row over here
01:51 - so guys first of all we have this button
01:53 - that is C so in this case let us provide
01:56 - the data as well and I'm simply going to
01:58 - copy this line of code over here and we
02:00 - are going to provide other buttons at is
02:02 - C and then back space and then we have
02:04 - divide so guys over here for the clear
02:06 - part we will provide the capital x
02:08 - letter and then over here we will
02:10 - provide the Divide symbol so guys
02:12 - basically we have created the four Tex
02:14 - with the help of the class that is row
02:16 - over here which we are going to use
02:18 - inside the style. CSS file let me just
02:20 - save this file now and try opening this
02:22 - file on the browser so simply I'm going
02:24 - to copy this path over here or simply
02:26 - you can also use the live server feature
02:28 - so basically you can install the live
02:31 - server extension on the vs code that
02:33 - will help you in order to go live over
02:35 - here so guys simply we can use this
02:37 - feature as well so let me click over
02:39 - here on the go live Button as you can
02:41 - see so it is starting right now and
02:43 - basically by default this will be the
02:45 - URL where your server will be live and
02:47 - you will be able to view the HTML web
02:50 - page now guys whatever changes you make
02:52 - in the HTML and the style. CSS file over
02:55 - here will be reflected on this HTML page
02:58 - so over here we have not defined the CSS
03:00 - file to be linked to this particular
03:02 - HTML page so simply we are going to use
03:05 - this link tag over here along with the r
03:07 - attribute that is stylesheet and the hrf
03:10 - attribute will have the style. CSS file
03:12 - the file that we have created over here
03:14 - in order to define the CSS properties so
03:17 - guys let me just save this file now and
03:19 - the changes will be automatically
03:20 - reflected over here now guys what we
03:22 - want to do is we want all these buttons
03:25 - that is having these particular text to
03:27 - be present on one particular row over
03:29 - here and also we want them to have
03:31 - certain background color along with the
03:33 - fixed width and height so guys what we
03:35 - will do is first of all for the main
03:37 - class that is for the main calculator
03:39 - over here we will Define certain CSS
03:41 - properties so let's say we Define the
03:43 - background color as a yellow color for
03:45 - the entire calculator and we want it to
03:48 - be present at the middle of the screen
03:50 - over here so guys what we have to do is
03:52 - let us also provide certain padding of
03:54 - 20 pixels so let me just save this file
03:56 - now and without actually reloading the
03:58 - page you will see see that the changes
04:00 - are now getting reflected on this
04:02 - particular URL that's because of the
04:04 - live server that we are using now guys
04:06 - what we want to do is we want to have
04:08 - the fixed width of this particular
04:10 - calculator so let's say we have the
04:12 - width of 40% over here as far as the
04:15 - entire width of the screen is concerned
04:17 - so as you can see this is the 40% let us
04:19 - reduce the width to 30% over here so as
04:22 - you can see this is the 30% withd and
04:24 - also in order to get this particular
04:26 - calculator at the middle of the screen
04:28 - simply we can provide Mar margin equal
04:30 - to Auto over here so guys when we
04:32 - provide margin equal to Auto let me just
04:34 - save this file now and as you can see
04:36 - now the calculator is getting displayed
04:38 - at the middle of the screen over here
04:40 - now guys let us provide certain CSS
04:41 - properties for this diff TX in such a
04:44 - way that all these elements are
04:46 - displayed in one particular row over
04:48 - here so what we have to do is we need to
04:50 - use this particular container class in
04:52 - this case so guys let me just correct
04:54 - the spelling of this container class
04:56 - over here and then inside the style. CSS
04:58 - file we need to make use of this
05:00 - particular class that is container and
05:02 - then guys we need to provide the display
05:04 - property it is equal to grid that's
05:06 - because the layout that is getting
05:08 - displayed on this calculator app it is
05:10 - in the form of the grid layout over here
05:12 - so guys similarly we are going to make
05:14 - use of this grid layout in this case let
05:16 - me just save this file now and if we see
05:18 - the changes there are no changes right
05:20 - now that's because only one column is
05:22 - configured by default and that is why
05:24 - all the diff tags are coming inside just
05:26 - one column over here in order to
05:28 - increase the number of columns we need
05:30 - to make use of the grid template column
05:32 - CSS property and then for this
05:34 - particular CSS property we need to
05:36 - provide the width of the columns so guys
05:38 - either you can provide some length
05:40 - measurement or else you can also provide
05:42 - the auto keyword so that the width of
05:44 - the columns is taken automatically and
05:46 - since we need four columns over here in
05:49 - order to provide the buttons inside the
05:51 - calculator in the form of the grid
05:53 - layout we will be providing the auto
05:55 - keyword four times over here so when we
05:57 - save this file once again and if you
05:59 - notice is the changes over here as you
06:01 - can see all the diff tags are now
06:02 - getting displayed on just one line and
06:05 - they are separated with the help of the
06:06 - columns inside the grid now guys apart
06:08 - from this also we want to provide
06:10 - certain CSS properties to all these
06:12 - buttons which are represented with the
06:14 - help of the diff tag over here so let me
06:16 - just copy the class name that is Row in
06:18 - this case and then guys what we will do
06:20 - is we will provide the fixed width and
06:22 - height over here so let's say we have 40
06:24 - pixels of width and then also the 40
06:26 - pixels of height in this case so we
06:28 - provide the height attribute as well and
06:30 - also we want to provide certain
06:31 - background color so let's say we have
06:33 - the background color as gray color over
06:35 - here so when we save this file you will
06:37 - see that these are the changes that are
06:38 - getting reflected in this case we have
06:40 - all the columns that are getting
06:42 - displayed over here and we have the
06:43 - fixed width and height for this
06:45 - particular diff tag apart from this we
06:47 - will also get these characters at the
06:49 - center of the box over here so what we
06:51 - will do is simply we will provide the
06:52 - text align it is equal to Center and in
06:55 - order to get the letters vertically
06:57 - aligned we can provide the line height
06:59 - attribute as well so simply we will
07:02 - provide the line height attribute in
07:04 - this case which must be equal to the
07:06 - height of this particular row class so
07:08 - it is 40 pixels over here when we save
07:10 - this file now so as you can see all the
07:12 - letters are now getting displayed at the
07:14 - middle of the button guys we can provide
07:16 - a lighter version of this gray color
07:17 - over here so let me just change the gray
07:19 - color to this particular lighter version
07:21 - so when we save this file now as you can
07:23 - see these are the buttons that are
07:24 - getting displayed now guys let me just
07:26 - zoom in little bit so that we can see
07:28 - the calculator prop properly over here
07:30 - as you can see these are the top four
07:32 - buttons that are getting displayed over
07:33 - here now guys apart from this also we
07:35 - want to align this content inside the
07:37 - text area at the right hand side so
07:39 - simply what we can do is we can have the
07:41 - text area tag over here and simply we
07:44 - can provide the text align attribute so
07:46 - in this case we will provide text align
07:48 - it is equal to right over here so when
07:50 - we save this file as you can see now the
07:52 - number is getting displayed on the right
07:53 - hand side okay similarly what we will do
07:56 - is we will have these numbers and also
07:58 - the multiplication icon over here inside
08:00 - the second row as far as this container
08:03 - is concerned so simply we have to come
08:05 - inside the index.html file and I'll copy
08:08 - these lines of code over here and simply
08:10 - we need to provide the content that is 7
08:13 - 8 9 and then multiplication so over here
08:16 - we will provide seven s the number then
08:18 - 8 and then N9 and then this
08:19 - multiplication s the small X letter so
08:22 - let me just save this file now and if
08:24 - you notice the change over here as you
08:25 - can see these are the buttons that are
08:27 - getting displayed on the second row now
08:29 - guys apart from this we can also provide
08:31 - certain row Gap over here so that there
08:33 - is certain Gap in between the rows in
08:36 - this case so simply inside the CSS file
08:38 - for the container class we can provide
08:40 - the row Gap over here and a row gap of 5
08:43 - pixels can provide a good amount of Gap
08:45 - in between the rows so when we save this
08:47 - file now as you can see we have caught
08:49 - the gaps in between the rows now now
08:51 - guys apart from this we will also
08:53 - provide the other numbers as well so let
08:55 - me just copy paste these lines of code
08:57 - once again over here inside the HTML
08:59 - file file so guys we have the third row
09:01 - over here inside the container and this
09:03 - is how the buttons look like in this
09:05 - case apart from this let me just quickly
09:07 - provide the last two rows over here as
09:09 - well inside this calculator so guys as
09:11 - you can see we have also provided the
09:13 - last two rows over here and apart from
09:15 - this we have also adjusted certain width
09:17 - of the main class and the text area as
09:20 - well in which case we have provided the
09:22 - number of columns and the number of rows
09:24 - in such a way that it aligns better
09:26 - along with the other buttons over here
09:28 - inside the container now guys what we
09:30 - can do is in order to make these buttons
09:32 - look more decent we will provide the
09:34 - background color of white for all these
09:36 - numbers over here so simply for the
09:38 - numbers inside this calculator we are
09:40 - going to provide another class name that
09:42 - is number in this case and then guys let
09:44 - me just copy this class name to the
09:46 - other numbers as well so that only for
09:48 - these numbers we are going to have the
09:50 - white color as the background color and
09:52 - then after providing the background
09:54 - color as well we are going to also have
09:56 - the hover pseudo class that will change
09:59 - the background color when we get the
10:00 - mouse cursor on the buttons over here so
10:02 - simply inside the style. CSS file we
10:05 - will provide the number class in this
10:07 - case and then guys we are simply going
10:08 - to provide the background color of white
10:10 - color over here let me just save this
10:12 - file now so as you can see we have all
10:14 - these numbers with the white color in
10:16 - this case apart from this we can also
10:18 - have certain borders as well so guys as
10:19 - you can see we have the white colors for
10:21 - all these numbers right now apart from
10:23 - this let us have some different shade of
10:25 - white color over here so basically we
10:27 - are going to have this shade of white
10:29 - color over here so as you can see this
10:31 - is the background color now guys when we
10:32 - get the mouse cursor on this particular
10:35 - row that is the button we want to change
10:37 - the background color to some different
10:39 - color in this case so what we can do is
10:41 - for this row class over here simply we
10:43 - are going to have the H Udo class and
10:46 - inside this we are going to have the
10:47 - background color so let's say we want to
10:49 - have the background color as gray color
10:51 - in this case let me just save this file
10:53 - now so now if we get the mouse cursor
10:55 - over here as you can see it is changing
10:57 - the background color to the gray color
10:59 - which means it is giving some feedback
11:01 - to the user that this is the button that
11:03 - is going to be clicked in this case
11:04 - apart from this also we will provide the
11:06 - cursor it is equal to pointer over here
11:09 - let me just save this file now so as you
11:10 - can see the cursor is getting updated to
11:13 - the pointer icon over here we can have
11:15 - some other version of the gray color as
11:17 - well based on your requirements so let
11:19 - me just change it to some lighter
11:20 - version of the gray color over here let
11:22 - me just save this file now so as you can
11:24 - see the buttons are now getting a
11:26 - different background color in this case
11:28 - so guys based on your requirements you
11:30 - can have the different background colors
11:32 - or any other CSS properties with the
11:34 - help of these class names just like how
11:36 - we have defined inside the CSS file over
11:38 - here guys we can also have multiple
11:40 - class names for a particular HTML
11:43 - element as you can see these numbers are
11:45 - having two class names over here and
11:47 - from two different class names we are
11:49 - having the multiple CSS properties and
11:51 - the CSS property that is defined at the
11:53 - later stage inside the external CSS file
11:56 - will be implemented on the user
11:58 - interface that is on the web page over
12:00 - here so guys in this way we have
12:02 - successfully created a very simple
12:04 - calculator with the help of the HTML and
12:06 - the CSS properties comment in the
12:08 - comment section below whether you have
12:10 - learned something out of this video
12:11 - please make sure that you like this
12:13 - video so that it reaches to more people
12:15 - and subscribe to this channel so that
12:16 - you get the notifications on upcoming
12:18 - videos as well I'll be creating more
12:20 - HTML and the CSS projects in the
12:22 - upcoming videos so stay tuned so guys we
12:25 - are going to create a responsive
12:26 - navigation bar that will look like this
12:28 - that is the horizontal navigation bar
12:30 - over here along with some background
12:32 - color when we get the mouse cursor on
12:34 - this Nave bar items and then when we
12:37 - decrease the width of the screen over
12:39 - here which means when we view this on
12:41 - smaller devices the navigation bar will
12:44 - be converted to the vertical navigation
12:46 - bar over here so guys we will check this
12:48 - with the help of the HTML and the CSS
12:51 - code so guys over here inside the HTML
12:53 - CSS projects folder we are going to
12:56 - create another folder that is navigation
12:59 - bar in this case and then inside the
13:01 - navigation bar folder we are going to
13:03 - have the index.html file and the
13:06 - style.css files over here so guys let me
13:09 - just create the style. CSS file as well
13:12 - so guys we have created both the files
13:13 - over here so inside the index.html we
13:17 - are going to have the HTML code so let
13:19 - me just use this Mt abbreviation that is
13:21 - exclamation mark in order to have the
13:24 - default HTML template and then guys for
13:26 - the title part we are going to have the
13:29 - navigation bar as the title of this page
13:31 - and also we are going to link this style
13:34 - CSS file with the help of this link tag
13:37 - over here now apart from this inside the
13:39 - body tag we are going to define the HTML
13:41 - elements so what we are going to do is
13:44 - let's say we have the diff tag with the
13:46 - class Nave bar over here so simply we
13:48 - are going to create the diff tag with
13:50 - the class that is Nave bar in this case
13:53 - and then guys inside this we are going
13:54 - to have more diff tags that are going to
13:57 - have the navigation bar item so guys
14:00 - simply we are going to create the diff
14:02 - tag with the class item over here inside
14:04 - which we are going to have the a tag
14:06 - with the HH character s the hre and the
14:09 - first element that we have for our
14:11 - navigation bar is the home so basically
14:14 - this is the first item inside the
14:15 - navigation bar and similarly we are
14:17 - going to have multiple items over here
14:20 - so let's say we have the second item as
14:22 - block and the third item as videos and
14:24 - then the fourth items as languages that
14:27 - are programming languages over here let
14:29 - me just save this file now and click on
14:31 - this go live icon that can help us in
14:34 - order to display the web page on the
14:36 - browser so guys this can be done with
14:38 - the help of the live server extension on
14:40 - the vs code so if you see on the web
14:43 - browser over here these are the four
14:45 - items that we want to include inside a
14:47 - navigation bar now Guys these are
14:49 - looking just like simple links on the
14:52 - web page but we want to convert it into
14:54 - a horizontal navigation bar and when we
14:57 - reduce the width of the screen over over
14:59 - here the navigation bar should be
15:01 - updated to a vertical navigation bar so
15:03 - we will check that as well with the help
15:05 - of the media queries over here so guys
15:07 - simply we have to go inside the style.
15:10 - CSS file in order to actually make this
15:13 - naar class look like a navigation bar so
15:16 - over here what we will do is simply we
15:18 - are going to provide certain CSS
15:20 - properties for the class name that is
15:22 - Nave bar so we need to provide a DOT
15:24 - character followed by the class name
15:26 - that is Nave bar over here and then guys
15:28 - inside this let us have certain
15:30 - background color first of all so we will
15:32 - have a dark background color that is
15:34 - black color over here and then apart
15:36 - from this we also want to make the
15:38 - display equal to Flags so that all the
15:41 - items inside the naar bar class that are
15:44 - these tags over here must be displayed
15:47 - in a row by default guys when we provide
15:50 - the display equal to Flags over here by
15:52 - default the flex direction is a row and
15:55 - all the elements will be displayed in
15:56 - one row over here so when we save this
15:58 - file now and check the changes on the
16:00 - browser as you can see we have the black
16:03 - color as the background color in this
16:05 - case and also we have all the links over
16:07 - here that are getting displayed with the
16:08 - blue color over here guys we are going
16:10 - to make certain changes for these diff
16:13 - tags so what we have to do is simply we
16:15 - will use the class name that is item
16:18 - since the item class name is
16:19 - representing all the diff tags over here
16:22 - that is individual items inside the flex
16:25 - container so guys simply we have to
16:27 - provide this item item class over here
16:30 - and first of all we will provide the
16:32 - padding of 10 pixels in this case and
16:34 - then apart from this what we want to do
16:36 - is all the a tags inside this item class
16:39 - must have some CSS properties so we are
16:42 - going to define the item class and then
16:45 - all the a Tex inside the item so we are
16:48 - going to use the a selector over here
16:50 - first of all we will have the text
16:52 - decoration as none so that we don't have
16:54 - any underline for any of the text that
16:57 - are getting displayed apart from this we
16:59 - will also change the font color to white
17:02 - color so instead of the blue color that
17:04 - is getting displayed over here the white
17:06 - color must be displayed for all these
17:08 - characters so guys let me just save this
17:10 - file now and check the changes so as you
17:12 - can see these are the changes that are
17:14 - getting displayed over here so guys
17:16 - basically this is a very simple
17:17 - navigation bar that we have just created
17:20 - now what we will do is when we get the
17:22 - mouse cursor on any of these diff tags
17:24 - over here we want to change the
17:26 - background color for that particular
17:28 - diff tag that is the navigation bar item
17:31 - so since the diff tag is represented
17:33 - with the help of this item class over
17:35 - here I'm going to copy this item class
17:38 - and then we need to provide the hover
17:41 - sudo class over here for which we want
17:43 - to change the background color so guys
17:45 - we will change the background color to
17:47 - red color in this case when the user
17:49 - gets the mouse cursor on the diff tag
17:51 - with the class item so let me just save
17:54 - this file now and let us see the changes
17:56 - so as you can see when we get the mouse
17:58 - cursor over here the background color
18:00 - for the diff tags are now getting
18:02 - updated to the red color and this is how
18:05 - the user will be able to get the
18:06 - feedback that he or she will be able to
18:09 - click on that particular navigation bar
18:11 - item now guys you will notice there is
18:13 - certain space on the left hand side and
18:15 - on top of this navigation bar that's
18:18 - because by default certain margin is
18:20 - provided to the body tag over here so
18:22 - simply we will provide the body tag in
18:24 - this case and then let me just provide
18:26 - the margin is equal to auto and also
18:29 - padding is equal to Auto and then apart
18:31 - from this we will also provide the Box
18:34 - sizing CSS property as border box over
18:36 - here so guys it is a best practice in
18:38 - order to provide these three lines of
18:40 - code at the start of the CSS file so
18:43 - that there is no margin and padding that
18:46 - is provided by default to any of the
18:48 - HTML elements that we are going to
18:50 - Define on our web page and then apart
18:52 - from this when we say box sizing equal
18:54 - to border box so any of the padding or
18:57 - the Border spaces that are included for
18:59 - the HTML elements the width and height
19:02 - that is taken by those parameters that
19:04 - is borders and padding will be also
19:07 - included as part of the width and height
19:09 - of the HTML elements so guys that is one
19:11 - of the important aspect when you are
19:13 - designing your web page so when we save
19:16 - this file now you will notice that there
19:17 - is no space on the left hand side and on
19:20 - top of this particular navigation bar
19:22 - right now so guys if you want to add
19:24 - more navigation bar items over here
19:26 - simply you have to come inside the HT
19:28 - HTML file and you can simply copy paste
19:31 - these lines of code in this case and
19:33 - then guys simply we can provide some
19:35 - more items as far as navigation bar
19:37 - items are concerned so let's say we
19:39 - provide the contact tab over here and
19:41 - then apart from this we will also
19:43 - provide about us option in this case and
19:45 - let us also provide certain programming
19:47 - languages so over here we can provide
19:49 - Java for which I have created a separate
19:51 - playlist if you want to learn more about
19:53 - Java tutorial and the Java programs as
19:56 - well I have provided the links to the
19:57 - playlist in the description section
19:59 - below apart from this I have also
20:01 - created the playlist for the Python
20:03 - programming language so you can watch
20:05 - out those videos as well the links I
20:07 - have given in the description section
20:08 - below so guys when we save this file now
20:11 - if you notice there are more items that
20:13 - are getting displayed over here on the
20:15 - navigation bar so guys in this way we
20:17 - can simply create a navigation bar using
20:20 - the display equal to flex and the other
20:22 - CSS properties that we have just seen
20:24 - now guys the problem in this particular
20:26 - navigation bar right now is it is a
20:28 - horizontal navigation bar and when we
20:31 - decrease the width of the screen so
20:33 - let's say I have opened the console
20:35 - section over here and when we decrease
20:37 - the width as you can see some of the
20:39 - items are now going on the right hand
20:41 - side and now at the bottom of the screen
20:43 - we are getting the horizontal scroll bar
20:45 - over here guys this is not one of the
20:47 - best practices as far as designing web
20:49 - page is concerned so what we can do is
20:51 - simply we can see what is the maximum
20:54 - width so as you can see over here we are
20:56 - decreasing the width and somewhere over
20:58 - here around 550 pixels the horizontal
21:00 - navigation bar is looking fine in this
21:02 - case and then guys after this when we
21:04 - reduce the size more you can see that it
21:07 - is trying to reduce its size let's say
21:09 - at around 500 pixels or less we want the
21:11 - navigation bar to be displayed as a
21:13 - vertical navigation bar so guys what we
21:16 - can do is simply we can use the media
21:19 - query over here so how do we do that so
21:21 - inside the style. CSS file we will use a
21:24 - media query in this case so we use media
21:27 - screen over here and after this we use
21:29 - the end keyword and then inside the
21:32 - parenthesis we use the max width in this
21:35 - case so guys we need to provide the max
21:37 - width of 500 pixels and then inside the
21:40 - curly braces what we have to do is since
21:42 - we have provided the display equal to
21:44 - flex for the Nave bar over here simply
21:47 - I'm going to copy these lines of code in
21:49 - this case and paste it inside the media
21:52 - screen and then guys we want this Nave
21:54 - bar to have the flex direction as column
21:57 - so by default the flex direction is Row
22:00 - in this case so simply I'm going to
22:02 - provide the flex Direction instead of
22:05 - the other CSS properties and we are
22:07 - going to change it to column over here
22:09 - so guys whenever the width of the screen
22:11 - is 500 pixels or below the flex
22:14 - Direction equal to column will be
22:16 - implemented for that particular Nave bar
22:18 - class over here which is the navigation
22:21 - bar so let me just save this file now
22:23 - and when we decrease the width of the
22:25 - screen now so as you can see below 500
22:29 - pixels the navigation bar is looking
22:31 - like a vertical navigation bar right now
22:34 - so guys in this way we can easily use
22:36 - the media query in order to convert the
22:39 - navigation bar from horizontal to
22:41 - vertical or visce Versa and then apart
22:43 - from this we have already implemented
22:46 - the other hover properties and the
22:47 - background color changes as well guys
22:50 - based on your requirements you can
22:51 - provide your own CSS properties in the
22:53 - same code in this case so comment in the
22:55 - comment section below whether you have
22:57 - learned something out of this video
22:59 - please make sure that you like this
23:00 - video so that it reaches to more people
23:02 - and subscribe to this channel so that
23:04 - you get the notifications on upcoming
23:06 - videos as well I'll see you in the next
23:08 - video in which we are going to create
23:09 - more HTML and CSS projects so stay tuned
23:14 - so guys we are going to create this kind
23:15 - of login form over here that is going to
23:18 - have certain border radius and apart
23:20 - from this it is also going to have some
23:22 - box Shadow as well and when we get the
23:24 - mouse cursor on the submit button it is
23:26 - going to increase its size with the help
23:28 - of the scale function that will be used
23:31 - with the help of the transform CSS
23:33 - property so guys over here let us create
23:35 - the login form folder in this case so
23:37 - simply we are going to create another
23:40 - folder over here inside the HTML CSS
23:42 - projects and then guys apart from this
23:44 - inside this login form folder we are
23:47 - going to create two files that is the
23:50 - index.html file and the other file in
23:52 - order to handle the CSS properties so we
23:55 - will have style. CSS file as the
23:57 - external C CSS file over here now guys
24:00 - what we will do is simply inside the
24:02 - index.html file we are going to write
24:05 - our HTML elements so over here inside
24:08 - the title tag we are going to say login
24:11 - form in this case so we are going to
24:13 - create a very simple login form over
24:15 - here and also we are going to link the
24:18 - external stylesheet with the help of the
24:20 - link tag over here and the hrf attribute
24:22 - it is equal to style. CSS file in this
24:25 - case so guys simply we are going to
24:27 - create a form tag over here inside the
24:29 - container class which will be
24:31 - represented by the diff tag in this case
24:33 - so guys over here we have the container
24:35 - class with the help of the div tag and
24:38 - then inside this we are going to create
24:39 - a form tag over here also we are going
24:42 - to assign the ID for this form tag so
24:44 - over here let us provide the value as
24:46 - form over here now simply we are going
24:48 - to have two fields in this case that is
24:50 - username and password so let me just
24:53 - provide the first input with the help of
24:55 - the type that is text over here and simp
24:58 - we are going to have the name as
25:00 - username and ID also equal to username
25:03 - over here let us also have couple of
25:05 - line breaks in this case so that the
25:07 - next input that is password can be
25:10 - displayed on the new line so guys over
25:12 - here we have the type is equal to
25:14 - password and simply we are going to have
25:16 - the name and ID values as password over
25:19 - here and then again we are going to have
25:21 - the line breaks in this case and then
25:24 - guys after this we are going to have the
25:26 - submit button over here so simply we are
25:28 - going to have the input tag with the
25:31 - type button in this case and the value
25:33 - must be submit just like how we have in
25:35 - the other forms so guys let me just save
25:38 - this file now and let us click on this
25:40 - go live button so that with the help of
25:42 - the live server extension we are able to
25:45 - see our web page on the web browser and
25:47 - whatever changes we make inside this
25:49 - particular HTML and the CSS files will
25:52 - be directly reflected on this particular
25:54 - web page over here so as you can see
25:56 - these are the two input boxes that we
25:58 - have provided and this is the submit
26:00 - button now guys let us provide certain
26:02 - CSS properties to all these HTML
26:05 - elements so first of all inside the form
26:07 - what we are going to do is we will have
26:09 - the h2 tag over here and we will say F
26:12 - below form so guys basically this is the
26:15 - instruction to the user in order to feel
26:17 - the below form in this case also we are
26:20 - going to have certain background color
26:21 - for this diff tag which is represented
26:24 - by this container class so let me just
26:26 - copy this class name and inser the
26:28 - style. CSS file we are going to have the
26:31 - background color over here and let's say
26:33 - we provide the background color as aqua
26:35 - color let me just save this file now so
26:37 - if you notice that this particular color
26:39 - is getting displayed for the diff tag
26:41 - which is taking the entire width of the
26:43 - screen so guys we can reduce the width
26:46 - of this particular diff tag by providing
26:48 - the width CSS property and let's say we
26:50 - provide 30% as the width in this case so
26:53 - basically we have reduced the width over
26:55 - here also we will provide the padding so
26:57 - let's see we have we have the padding
26:58 - CSS property and we provide the value as
27:02 - 20 pixels over here so as you can see we
27:04 - have provided the padding as well and
27:06 - then apart from this let us also get the
27:09 - diff tag at the center of the screen by
27:11 - providing the margin is equal to Auto
27:14 - and also we will have some margin from
27:16 - the top side as well so let's say we
27:18 - have 20 pixels of margin from the top so
27:21 - as you can see we are getting this diff
27:23 - tag that is the container class at the
27:25 - center of the screen now now guys let us
27:27 - say we want all these HTML elements that
27:29 - is the input fields and the submit
27:31 - button to be present at the center of
27:33 - this particular container so what we can
27:35 - do is simply we can use the text align
27:38 - CSS property and provide the value as
27:40 - Center over here so as you can see all
27:43 - the HTML elements are now present at the
27:45 - center of this particular container
27:47 - because apart from this we will also
27:48 - provide some placeholder over here so
27:51 - that the user comes to know what kind of
27:53 - data is expected over here so inside the
27:55 - input Tex we are going to provide the
27:58 - placeholder and then we will say enter
28:01 - username over here for the username
28:03 - input field and also for the password
28:06 - field we are going to provide enter
28:09 - password in this case so let me just
28:11 - save this file now so as you can see we
28:13 - are getting the placeholders over here
28:15 - now guys what we will do is for both
28:17 - these input fields we are also going to
28:19 - provide certain padding in this case so
28:21 - simply we are going to provide the IDS
28:23 - that is username and password in this
28:25 - case so since we are going to have have
28:28 - the common CSS properties for both these
28:30 - fields we are going to provide the ID
28:33 - and separate them by using the comma in
28:35 - this case so guys over here what we want
28:37 - to do is we want to provide the padding
28:40 - of let's say five pixels in this case
28:42 - let me just save this file now so as you
28:43 - can see there is certain spacing when
28:45 - the user provides certain data over here
28:48 - now guys apart from this we will also
28:50 - provide certain CSS properties to this
28:52 - particular submit button so simply we
28:54 - are going to use the ID that is submit
28:57 - over here with the help of the hash
28:58 - character and then let us provide
29:01 - certain background color first of all
29:03 - and it will be the version of the green
29:05 - color so guys let us pick one of the
29:07 - colors in this case so as you can see
29:09 - this is the color that we want over here
29:11 - let me just save this file now and as
29:13 - you can see there is no color that is
29:14 - getting implemented over here that's
29:16 - because we have not provided the ID to
29:18 - the submit button in this case so let us
29:21 - do that as well so simply we are going
29:23 - to provide the ID is equal to submit so
29:25 - now if you see there is the color that
29:27 - is getting displayed apart from this we
29:30 - will also provide the padding of let's
29:32 - say 5 pixels over here and then guys
29:34 - after this also we want some box Shadow
29:37 - to be implemented so let's say we
29:39 - provide the Border as one pixels solid
29:42 - black color over here so let us provide
29:45 - the black color Border in this case so
29:47 - as you can see this is the black color
29:49 - border and also let us provide the
29:51 - Border radius as well before the Box
29:53 - Shadow so we will provide the Border
29:56 - radius of 5 pixels so as you you can see
29:58 - this is the Border radius if I zoom in
30:00 - little bit you can see there is a border
30:02 - radius that can be seen so guys after
30:04 - this what we want to do is also we will
30:07 - provide the Box Shadow over here so
30:09 - simply we will provide the Box Shadow
30:12 - and the horizontal and the vertical
30:14 - Shadow we want to keep it as zero pixels
30:16 - but we want to provide the blur effect
30:18 - so let's say we provide the five pixels
30:20 - as blur effect and the color must be
30:22 - black in this case let me just save this
30:24 - file now so if you notice there is a box
30:27 - sh that is getting implemented over here
30:30 - for this particular submit button now
30:32 - guys when we get the mouse cursor over
30:34 - here the cursor icon must be updated to
30:36 - hand in this case so simply we will
30:39 - provide the cursor it is equal to
30:41 - pointer over here so when we save this
30:43 - file now as you can see the cursor is
30:46 - now getting updated to the hand icon
30:48 - over here and also we want it to scale
30:50 - little bit so that the size of this
30:52 - button increases when the user gets the
30:54 - mouse cursor on this particular button
30:56 - so guys what we want to do is simply we
30:59 - need to make use of the hover sudo class
31:01 - over here so when we say submit followed
31:04 - by colon we have something called as
31:06 - hover sudo class so in this case simply
31:09 - we can make use of the transform CSS
31:12 - property which is having scale as one of
31:14 - the function so guys we need to provide
31:16 - the value of scaling over here so when
31:18 - we provide 1.2 it is going to increase
31:21 - its size against the horizontal and the
31:24 - vertical Dimensions so when we save this
31:26 - file now and let us see the changes this
31:28 - so as you can see the button size is
31:30 - increasing now and it is due to the
31:32 - scale function that we have used with
31:34 - the help of the transform CSS property
31:37 - also guys we want a smooth transition
31:39 - when the scaling is happening so simply
31:41 - we can use the transition CSS property
31:43 - over here so we will use the transition
31:46 - CSS property and in this case we want to
31:49 - transform it smoothly so over here we
31:51 - will make use of this transform CSS
31:54 - property and the time must be let's say
31:56 - 0.3 seconds over here so simply we
31:59 - provide the time as 0.3 seconds when we
32:01 - save this file now and when we get the
32:03 - mouse cursor over here there's a smooth
32:05 - transition that you can see right now as
32:08 - far as the scaling of this button is
32:09 - concerned so guys in this way we have
32:12 - created a simple login form over here
32:14 - instead of providing the string that is
32:16 - field below form we can say login form
32:19 - in this case so as you can see this is
32:21 - the login form now similar to The Box
32:23 - Shadow and the Border radius that we
32:25 - have provided to this button over here
32:27 - we can provide the Border radius and the
32:29 - Box Shadow to this container as well so
32:32 - what we will do is inside the style. CSS
32:34 - file for this container simply we are
32:37 - going to define the Border radius of
32:39 - let's say 10 pixels over here so when we
32:42 - save this file now as you can see
32:43 - there's a border radius of 10 pixels
32:45 - right now and also we want a certain box
32:48 - Shadow over here so let's say we provide
32:50 - a box Shadow with the help of the blur
32:52 - effect over here and we provide the
32:55 - black color as the Box Shadow so as you
32:57 - can see this this is the black color box
32:59 - shadow that is getting provided to this
33:01 - container that is the login form and
33:03 - also we can provide multiple box Shadows
33:06 - over here so after providing comma after
33:08 - the first box Shadow we can provide the
33:11 - second box shadow that is having 20
33:13 - pixels of blur effect and let's say we
33:16 - want the dark blue color this time that
33:18 - will be spread across 20 pixels after
33:21 - the border of the container so when we
33:22 - save this file now you will notice that
33:25 - there is a dark blue color that is
33:26 - getting displayed after after the border
33:28 - of the container which is giving this
33:30 - particular login form a decent look over
33:32 - here so guys in this way based on your
33:34 - project requirements you can create
33:36 - attractive login forms so that the user
33:38 - can provide the username and password
33:40 - and any other details as per the project
33:42 - requirements so guys comment in the
33:44 - comment section below whether you have
33:46 - learned something out of this video
33:48 - please make sure that you like this
33:49 - video so that it reaches to more people
33:51 - and subscribe to this channel so that
33:53 - you get the notifications on upcoming
33:55 - videos as well I'll see you in the next
33:57 - video where we are going to create more
33:59 - HTML and the CSS projects so stay tuned
34:02 - so now we are going to create a search
34:04 - bar that will have a glowing effect when
34:06 - the user clicks on this particular
34:08 - search bar over here so as you can see
34:11 - we have the Border color and also the
34:13 - Box Shadow CSS property has been
34:15 - implemented over here in order to
34:17 - provide the glowing effect for this
34:19 - particular search box so let us move to
34:21 - the vs code so first of all we will
34:23 - create another folder inside this HTML
34:26 - CSS projects so B basically we will say
34:29 - glowing search bar over here so guys we
34:31 - have this folder name inside which we
34:33 - are going to create two more files at is
34:36 - index.html and the style. CSS files so
34:39 - guys we have the index.html file over
34:41 - here and the other file that is style.
34:44 - CSS that will help us to provide the CSS
34:46 - properties now guys inside this
34:48 - index.html file we are going to create
34:51 - the HTML elements so let us provide the
34:54 - title of this particular web page so
34:56 - basically we we are going to say glowing
34:59 - search bar in this case and then after
35:01 - this we are going to link the style. CSS
35:05 - file with the help of this link tag over
35:07 - here and the RL attribute will be
35:10 - stylesheet and the hdf attribute will be
35:13 - style. CSS file now guys inside the body
35:16 - tag what we are going to do is let us
35:18 - first of all have the div tag with the
35:19 - class container over here inside which
35:22 - we are going to define the input with
35:24 - the type search in this case so guys
35:26 - basically this is the input with the
35:28 - type search that will help us in order
35:31 - to create a search bar so we are going
35:33 - to have the value as search for the name
35:35 - and the ID attribute over here and apart
35:38 - from this we are also going to provide
35:40 - the placeholder for this input field and
35:42 - we will provide the value as for your
35:45 - search so guys basically this is the
35:47 - placeholder text that will be displayed
35:49 - inside the search bar let me just save
35:51 - this file now and let us open the live
35:53 - server in this case with the help of the
35:55 - co live button that you can see so guys
35:58 - basically this is the search bar that we
35:59 - have created now guys let us provide
36:02 - certain CSS properties for this search
36:04 - bar and the container class as well
36:07 - which is represented by the diff tag
36:09 - over here so first of all we will have
36:11 - the container class in this case and
36:13 - also we will have certain background
36:15 - color so let's say we have the white
36:17 - version of the background color over
36:19 - here so simply we are going to provide
36:21 - the white color in this case and let us
36:23 - have this particular shade of white
36:25 - color over here let me just save this
36:27 - file now as you can see this is the
36:29 - shade of the white color it is a kind of
36:31 - grayish color that is set as the
36:33 - background color for the container we
36:35 - will also have certain padding over here
36:37 - so let's say we have a padding of 20
36:39 - pixels and also we will set the text
36:42 - align as Center so that we can see the
36:44 - search bar at the center of this
36:46 - particular container so as you can see
36:48 - this is the search bar that is getting
36:50 - displayed over here now guys what we
36:51 - want to do is when the user gets the
36:54 - mouse cursor over here inside the search
36:56 - bar and clicks on we want to have a
36:58 - glowing effect outside of this
37:01 - particular border of the search bar so
37:03 - simply we are going to provide certain
37:06 - CSS properties to this search bar first
37:08 - of all so we will use the ID that is
37:10 - search in this case so we have to use
37:12 - the hash character followed by search
37:15 - over here so basically we are going to
37:17 - increase the padding so let's say we
37:19 - provide the padding of 5 pixels over
37:21 - here so as you can see there is certain
37:23 - spacing that is provided inside the
37:25 - search bar over here guys when we get
37:27 - the the mouse cursor over here we need
37:29 - to make use of the focus Pudo class in
37:32 - this case so simply I'm going to copy
37:34 - paste this line of code over here we are
37:36 - going to remove this padding CSS
37:38 - property and we will say Focus that is
37:40 - the sudo class with the help of this
37:42 - colon over here and then after this we
37:45 - need to make the Border color so let's
37:47 - say we have the border of two pixels and
37:50 - it is of the type solid and we will
37:52 - provide some Blue version of the Border
37:54 - color over here so simply we are going
37:56 - to Pro blue color in this case and let
37:59 - us change the color to light blue over
38:01 - here and let's say this is the color
38:03 - that we want to have as the border so
38:06 - let me just save this file now and now
38:07 - when we get the mouse cursor over here
38:09 - you will not be able to see any changes
38:11 - over here that's because there is a
38:12 - default outline that is getting
38:14 - displayed right now so guys what we can
38:16 - do is simply we can provide outline it
38:19 - is equal to none in this case when we
38:21 - save this file now as you can see there
38:23 - is a blue color border that is getting
38:25 - displayed over here right now let us
38:27 - change the background color of this
38:28 - container to some darker version so
38:30 - let's say we have the black color for
38:32 - this background color over here so that
38:34 - we can properly see the Border color of
38:37 - this particular search bar so when we
38:39 - save this file now there is no change
38:41 - right now so as you can see we have not
38:43 - provided the semicolon over here so guys
38:45 - it is very important that we provide the
38:47 - semicolon after the values of the CSS
38:49 - properties so as you can see now we have
38:52 - the Border color that is light blue
38:54 - color for this particular search bar now
38:57 - guys what we we can do is simply we can
38:59 - also provide the Box Shadow over here
39:01 - with the same color so we are going to
39:03 - provide the Box shadow of let's say 0
39:05 - pixels horizontal and the vertical
39:07 - shadow in this case and let's say we
39:09 - provide 20 pixels of the same color as
39:12 - the blur effect for the Box Shadow so
39:15 - I'll just copy paste this particular RGB
39:17 - color over here let me just save this
39:19 - file now and now when we get the mouse
39:22 - cursor inside this particular search bar
39:24 - and click on it you can see that there
39:26 - is a glowing effect that can be seen
39:28 - over here due to this box Shadow and the
39:31 - border that we have provided in this
39:33 - case for this particular search bar so
39:35 - guys in this way you can provide the
39:37 - glowing effect for the search bar with
39:39 - the help of these CSS properties apart
39:42 - from this we can also have the Border
39:43 - radius as well so let's say we have the
39:46 - radius of 10 pixels so you can see that
39:48 - there's a radius that is getting
39:50 - provided over here and when we click on
39:52 - the search bar you can see that there is
39:53 - a glowing effect that can be seen over
39:56 - here so guys comment in the comment
39:57 - section below whether you have learned
39:59 - something out of this video please make
40:01 - sure that you like this video so that it
40:03 - reaches to more people and subscribe to
40:05 - this channel so that you get the
40:06 - notifications on upcoming videos as well
40:08 - I'll see you in the next video where we
40:10 - are going to create more HTML and the
40:12 - CSS projects so stay tuned so now we are
40:16 - going to create a simple loading
40:17 - animation that will look like this as
40:20 - you can see this is a circular loading
40:21 - animation and we can display this
40:23 - loading animation with the help of just
40:26 - HTML and CSS say whenever you are
40:28 - retriving data to be displayed to the
40:30 - user so guys let us move to the VSS code
40:33 - so guys over here inside the HTML CSS
40:35 - projects folder we are going to create
40:38 - new folder over here and we will say
40:40 - loading animation in this case and
40:42 - inside this folder we are going to
40:44 - create couple of files over here so the
40:46 - first file will be index.html file and
40:50 - the other file will be representing the
40:52 - CSS file that is style. CSS file so guys
40:55 - basically we are going to make use of
40:57 - this external CSS file over here so
41:00 - inside our HTML file in this case we are
41:02 - going to make use of this particular Mt
41:04 - abbreviation that is exclamation mark in
41:07 - this case that will help us in order to
41:09 - create this particular HTML template in
41:12 - order to create the web page so guys
41:14 - over here for the title tag we are going
41:17 - to provide the string that is loading
41:19 - animation over here and also we are
41:21 - going to link this external style. CSS
41:24 - file over here with the help of the link
41:26 - tag inside the HTML file so guys after
41:30 - this inside the body tag what we are
41:32 - going to do is simply we are going to
41:34 - create a diff tag with the class that is
41:36 - loading over here so guys basically this
41:39 - DFT tag will help us in order to create
41:41 - the loading animation on the web page so
41:43 - let us provide certain CSS properties to
41:45 - this diff tag over here we are going to
41:48 - make use of this class name that is
41:49 - loading and inside the style. CSS file
41:52 - we will provide the dot character
41:54 - followed by the name of this class now
41:57 - what we will do is simply we are going
41:59 - to provide a fixed width and height for
42:01 - this particular diff tag so let's say we
42:03 - have 200 pixels of width and 200 pixels
42:07 - of height over here so basically it is a
42:09 - square box initially and apart from this
42:12 - we are also going to provide the
42:13 - background color so let's say we provide
42:15 - the gray color as the background color
42:18 - and then guys for the body part as well
42:20 - we are going to provide certain dark
42:22 - color as the background color so you
42:24 - make use of this body tag and inside the
42:27 - braces we will provide the background
42:29 - color and let's say we provide the black
42:31 - color as the background color over here
42:33 - let me just save this file now and let
42:35 - us make use of this live server so
42:37 - simply we have to click on this go live
42:39 - in this case so guys as you can see we
42:41 - have the black color is the background
42:43 - color over here and we have created the
42:45 - diff tag successfully that is in the
42:47 - form of a square box in this case let us
42:50 - get the square box at the center of the
42:52 - page over here so what we will do is
42:54 - inside the style. CSS file for the
42:57 - loading class simply we are going to
42:59 - provide the margin it is equal to Auto
43:02 - and then apart from this from Top as
43:04 - well we are going to create certain
43:06 - margin so let us provide the 20 pixels
43:09 - of margin from Top let me just save this
43:11 - file now and if we see on the web page
43:13 - right now the diff tag is at the center
43:16 - of the screen over here now since we
43:18 - want a loading animation out of this
43:20 - diff tag first of all we will have to
43:22 - convert the square box to a circle so
43:25 - what we will do is simply we can make
43:27 - use of the Border radius esss property
43:30 - and when we provide the Border radius as
43:33 - 50% the square shape will be converted
43:36 - to Circular shape over here so let me
43:38 - just save this file now and as you can
43:40 - see on the web page there is a circle
43:42 - that is getting created over here now
43:44 - guys instead of using the background
43:46 - color that is coloring this circle as a
43:48 - gray color we will make use of the
43:50 - Border color over here so let me just
43:53 - comment out this background color in
43:55 - this case and simply we will provide the
43:57 - border of let's say 20 pixels and the
44:00 - Border type will be solid in this case
44:02 - and the same color that is gray color we
44:04 - are going to provide for this particular
44:06 - border when we save this file now so as
44:08 - you can see we have created a circular
44:10 - shape diff tag over here now guys on one
44:13 - side we want the Border color to be
44:16 - white color so let's say on the top side
44:18 - we want the Border color to be white
44:19 - color so that we can see the loading
44:22 - icon out of this diff tag so what we
44:24 - have to do is we need to separate out
44:27 - these values that we have provided
44:29 - inside the Border CSS property so I'm
44:31 - going to comment out this line of code
44:33 - and we are going to separate it in such
44:35 - a way that we have to provide all these
44:38 - values separately so first of all we
44:40 - will provide the Border width over here
44:43 - of same value that is 20 pixels and then
44:45 - the Border style must be solid in this
44:47 - case so we provide border style CSS
44:50 - property and it is of the type solid and
44:53 - the Border color must be gray so simply
44:55 - we make use of this border color CSS
44:57 - property now guys when we provide the
44:59 - value for this border color the first
45:01 - color will represent the top color over
45:04 - here followed by the right color and
45:06 - then we have the bottom color and then
45:08 - we have the left color in this case so
45:10 - the first color that we want to provide
45:12 - is white color that will be provided at
45:14 - the top side of the border for this
45:17 - particular circular shape diff tag and
45:19 - then after this on the right hand side
45:21 - we want the gray color and then on the
45:23 - bottom side we again want the gray color
45:26 - and on the left side as well we want the
45:28 - gray color over here so guys basically
45:30 - only the top side must be white in this
45:32 - case so that we can see the loading icon
45:35 - so when we save this file now as you can
45:37 - see there's a border color of white
45:39 - color at the top of this particular
45:41 - circle now simply in order to make this
45:44 - circle look like a loading animation we
45:46 - need to rotate it by 360° and we have to
45:50 - continue the rotation so what we can do
45:52 - is we can make use of the key frames
45:55 - over here which is very important
45:56 - important when you make any of the
45:58 - animations inside the CSS so guys we
46:01 - make use of at theate character followed
46:03 - by key frames keyword over here and then
46:06 - followed by the space character and then
46:08 - simply let us give the name to this
46:10 - animation that is loading over here and
46:12 - then after this we need to provide the
46:13 - curly presses now guys we need to define
46:16 - the different stages of the loading so
46:18 - let's say at the 0% which is at the
46:20 - start of the loading we don't want any
46:23 - rotation so simply we can provide the
46:25 - transform CSS property and inside this
46:27 - we are going to make use of this rotate
46:30 - function which is going to have the
46:32 - value as 0° over here so at 0% we don't
46:36 - want any rotation now similarly at 100%
46:39 - that is at the end of the animation we
46:42 - want the rotation to be 360° which means
46:45 - this particular Circle should start from
46:47 - the 0° and then at the end of the
46:49 - animation it should be completely
46:51 - rotated by 360° over here so for 100% in
46:55 - this case we need to Prov by transform
46:57 - CSS property once again and then we need
47:00 - to make use of the rotate function and
47:02 - simply we provide the value that is 360°
47:05 - over here so guys in this way from 0% to
47:08 - 100% we have provided the different
47:10 - animations you can also provide the
47:12 - animations to the intermediate
47:14 - percentages that is 10% 25% or 50% and
47:19 - so on based on your animation
47:21 - requirements so guys in this case
47:22 - currently we only want to rotate this
47:25 - particular icon and that is why we have
47:27 - provided the transform CSS property with
47:30 - the help of the rotate function over
47:31 - here let me just save this file now and
47:34 - you will not see any changes right now
47:36 - on this web page that's because we have
47:38 - to link this particular key frames that
47:41 - is loading with this particular diff tag
47:43 - that is having the class name that is
47:44 - loading over here so what we can do is
47:47 - inside this loading class we can make
47:49 - use of the animation name CSS property
47:52 - and in this case we need to make use of
47:54 - this name that is loading over here and
47:56 - then after after this we also have to
47:58 - provide the animation duration so let's
48:00 - say we want the duration to be 2 seconds
48:03 - so within 2 seconds the icon will rotate
48:06 - itself from 0° to 360° over here and
48:10 - then after this we want to rotate it
48:13 - infinite number of times so basically we
48:15 - make use of this animation iteration
48:17 - count over here and we provide the value
48:20 - that is infinite in this case let me
48:22 - just save this file now and if you see
48:24 - the web page as you can see in 2 seconds
48:26 - means the icon is getting rotated over
48:29 - here and in this way we can easily
48:31 - create the loading animation now guys
48:33 - you can see that the speed is decreasing
48:35 - at the end of the animation so simply we
48:37 - can make use of another CSS property
48:39 - that is animation timing function in
48:42 - order to keep the speed linear over here
48:44 - so simply we provide the value that is
48:46 - linear in this case that will keep the
48:48 - speed of the loading animation same
48:51 - throughout the animation so when we save
48:53 - this file now you will see that the
48:55 - speed is linear right now and there is
48:57 - no decrease or increase in the speed as
49:00 - far as the loading animation is
49:01 - concerned so guys based on your
49:03 - requirements you can have the different
49:05 - color for this particular loading
49:06 - animation that will match along with the
49:08 - background color of this particular web
49:10 - page and then based on the JavaScript
49:12 - code once your data is successfully
49:15 - retrived from the database or from the
49:17 - internet you can hide this particular
49:20 - loading animation it becomes very
49:22 - important in order to keep your users
49:24 - engaged with the help of such animations
49:26 - on the the web page whenever you are
49:28 - retriving data with the help of
49:30 - JavaScript so guys this is one of the
49:32 - ways in order to create the loading
49:34 - animation on your web page with the help
49:36 - of the HTML and the CSS comment in the
49:39 - comment section below whether you have
49:40 - learned something out of this video
49:42 - please make sure that you like this
49:43 - video so that it reaches to more people
49:46 - and subscribe to this channel so that
49:47 - you get the notifications on upcoming
49:49 - videos as well I'll see you in the next
49:51 - video with a different HTML and the CSS
49:53 - project so stay tuned so guys we are
49:57 - going to create these social media icons
49:59 - it will help your users on the website
50:02 - to share the URL to the different social
50:04 - media platforms and when the user gets
50:06 - the mouse cursor on these social media
50:08 - icons they are going to scale up little
50:10 - bit and that is how you can provide a
50:12 - good user experience for your user so
50:14 - guys let us move to the vs
50:16 - code so let us create another folder
50:19 - over here since it is the sixth project
50:21 - we are naming it as 06 uncore and then
50:24 - we will say social media icons in this
50:27 - case and then guys inside this folder
50:29 - let us create two files that is
50:31 - index.html file which will help us in
50:34 - order to create the web page and then
50:36 - apart from this we will also create the
50:38 - style. CSS file that will help us in
50:40 - order to provide the different CSS
50:42 - properties now guys over here inside the
50:44 - index.html file let us create the HTML
50:47 - template over here and for the title
50:50 - part we will say social media icons so
50:53 - guys basically this is the title and
50:55 - then we are going to link the style. CSS
50:57 - file by using this link colar CSS Mt
51:00 - abbreviation and then we are going to
51:02 - provide hrf it is equal to style. CSS
51:05 - now guys apart from this in order to
51:07 - create the social media icons we can
51:10 - include the external stylesheet over
51:12 - here so as you can see we are going to
51:14 - make use of this box icons.com website
51:18 - which helps us in order to provide the
51:19 - different icons and basically we are
51:21 - going to make use of this stylesheet so
51:24 - let me just copy this link I will
51:26 - provide both these links in the
51:27 - description section below so guys over
51:29 - here after copying the external CSS file
51:32 - we are going to paste it inside the head
51:34 - section of the body tag over here so
51:36 - basically this is the link that is going
51:38 - to be used in order to make use of the
51:41 - different icons at a present on the
51:43 - website so guys over here what we will
51:45 - do is first of all we will create a div
51:47 - tag with the class container over here
51:49 - inside which we will have different
51:51 - social media icons and then in this case
51:53 - we are going to have the a tag so over
51:55 - here we have the a tag in this case and
51:58 - let me just provide the class as Link in
52:00 - this case and then after this inside the
52:03 - a tag we can have the it tag now guys
52:05 - how you can display the links over here
52:07 - so let us open this website that is box
52:09 - icons.com so basically this is the
52:12 - website that we are going to use and
52:13 - then you can see that there are
52:15 - different icons you can provide on your
52:17 - web page so guys over here let's say
52:19 - first of all we want the Facebook icon
52:21 - so the moment you search for Facebook
52:23 - you can see different social media icons
52:26 - that can can be used on your web page so
52:28 - let's say we want to make use of this
52:30 - particular icon so when we click on this
52:32 - additional information will be provided
52:34 - on the right hand side we need to switch
52:36 - to the font section over here and as you
52:38 - can see this is the link that is
52:39 - provided so let me just zoom in little
52:41 - bit so that you can see properly so
52:43 - basically this is the font and this is
52:45 - the tag that we are supposed to include
52:47 - so let me just click on this and
52:49 - basically it will get copied on the
52:51 - clipboard so over here inside the a tag
52:54 - we are supposed to provide this I tag
52:56 - over here that we have copied and
52:58 - basically it is having the class with
52:59 - this particular value so guys what this
53:01 - will do is it will display the icon on
53:04 - the web page so let us check this on the
53:06 - web browser let me just save this file
53:08 - now and let us open the live server over
53:10 - here by clicking on this go live button
53:13 - so as you can see this is the icon that
53:15 - is getting displayed over here on the
53:17 - top left now guys similarly what we will
53:19 - do is we will make use of the other
53:21 - icons as well from that same website so
53:23 - let me just copy paste these lines of
53:25 - code over here and simply instead of
53:27 - Facebook we are going to make use of the
53:30 - other social media icons so we have
53:32 - Twitter over here and then we also have
53:34 - YouTube in this case and then let's say
53:36 - we have Instagram as well so over here
53:39 - we provide the Instagram so basically
53:41 - you just need to change the class name
53:42 - in this case you can also come over here
53:45 - on the box icons website and then you
53:47 - can provide the icon that you want to
53:49 - display so let's say you want to search
53:51 - for YouTube over here so YouTube icon
53:54 - will be displayed and then simply you
53:56 - can call copy paste this itag from this
53:58 - particular website so guys basically we
54:00 - have included four icons over here let
54:02 - us add another one that is Snapchat as
54:04 - well so instead of Instagram we will say
54:07 - Snapchat in this case it is best
54:08 - practice to copy this it tag from this
54:11 - website so that you don't get any issues
54:13 - while you are renaming the class names
54:15 - over here so guys let me just save this
54:17 - file now and when we see the same web
54:19 - page over here as you can see these are
54:21 - all the icons that are getting displayed
54:23 - in this case now guys since we have
54:25 - included all these social media icons
54:27 - inside the a tag that is why we are
54:29 - getting the underline and all of them
54:31 - are having the color that is blue color
54:33 - in this case what we will have to do is
54:35 - we will provide the CSS properties for
54:38 - all these classes that we have provided
54:40 - over here so first of all let us copy
54:42 - this container class in this case and
54:44 - then let's provide some CSS properties
54:46 - over here to The Container class so
54:48 - first of all we will say display it is
54:50 - equal to flex and then we want to get it
54:52 - at the middle of the screen so let's say
54:54 - we provide justify content as Center
54:56 - over here let me just save this file now
54:58 - as you can see all the icons are now
55:00 - getting displayed at the center of this
55:02 - page as far as horizontal alignment is
55:04 - concerned now guys let us also provide
55:06 - certain margin from top so that we have
55:08 - some spacing from top of the page as
55:10 - well so we provide 50 pixels of margin
55:12 - from Top over here now guys let us
55:14 - provide certain CSS properties to this
55:16 - link class as well so that the
55:18 - properties will be applied to the icons
55:21 - so over here we provide dot followed by
55:23 - the class name that is linked in this
55:24 - case and then what we will do is is
55:26 - first of all we will provide the width
55:28 - and height for this particular link
55:29 - class so let's say we have the width of
55:31 - 30 pixels over here and also we will
55:34 - provide the height of 30 pixels in this
55:36 - case so that we get a square box out of
55:38 - this link class over here and also we
55:40 - want to make this link as a circular
55:42 - shape length so what we will do is
55:44 - simply we will say border radius it is
55:47 - equal to 50% in this case and let us
55:49 - temporarily give some background color
55:51 - over here so that we can identify the
55:54 - area of this glass that is length so let
55:56 - let me just save this file now so if you
55:57 - notice we have all these circular shaped
56:00 - link over here now guys inside the
56:02 - circles we want all these icons to be
56:04 - present at the center of the circle so
56:06 - what we will do is again we will say
56:08 - display it is equal to flex this time
56:10 - and then we will say justify content it
56:12 - is equal to Center so that they are at
56:14 - the center as far as the horizontal
56:16 - alignment is concerned and then we will
56:18 - get them at the center as far as
56:20 - vertical alignment is concerned so we
56:23 - have to make use of the Align items over
56:25 - here and again then we will make use of
56:27 - the center value so as you can see all
56:29 - the icons are now at the center of the
56:32 - circle in this case now guys we will
56:33 - have to remove the underlines that are
56:35 - coming over here so simply we will say
56:37 - text decoration it is equal to none and
56:39 - also we will change the font color over
56:42 - here so let's say we provide the color
56:44 - as white color in this case so simply we
56:46 - provide the color as white we need to
56:48 - have certain dark background color in
56:50 - this case so what we will do is let's
56:52 - say we provide the dark background color
56:54 - that is black this time so when we save
56:56 - the this file so as you can see the
56:57 - background color of the circle is black
56:59 - in color and the icons are displayed as
57:01 - white in color now guys apart from this
57:03 - we will also have to provide certain
57:05 - spacing in between all the links so let
57:08 - us provide the margin for all the links
57:10 - over here so we simply have to provide
57:12 - the margin CSS property and let's say we
57:14 - provide 10 pixels of space from all the
57:16 - sides so when we save this file now as
57:18 - you can see all the icons are now
57:20 - separated with certain space in between
57:22 - them now guys instead of giving the
57:24 - black color as the background color over
57:26 - here we need to provide the colors that
57:28 - are actually present on these websites
57:30 - of the social media icons so what we
57:32 - will do is simply we will comment out
57:34 - this line of code that is background
57:36 - color over here and we will provide the
57:38 - inline style property in this case so
57:40 - basically inside the a tag which is
57:42 - having the class link over here since
57:44 - all the links will be having different
57:46 - background colors so we are going to
57:48 - provide the style attribute in this case
57:50 - and let us provide the background color
57:52 - CSS property and the Facebook social
57:54 - media icon is having some version of
57:56 - blue color over here so let us set that
57:59 - as well so this version of Blue we have
58:00 - set already so let me just save this
58:02 - file now and you can see that Facebook
58:04 - is now having the blue color as the
58:06 - background color over here the other
58:08 - icons are not visible right now because
58:10 - their color is white in color and the
58:12 - background color is also white in color
58:14 - for now so guys let us set the
58:16 - background color for the other social
58:17 - media icons as well so I'll quickly make
58:19 - the changes over here so as you can see
58:21 - we have provided the background colors
58:23 - for all the links over here apart from
58:25 - this for the social media icons that is
58:27 - Instagram and Snapchat we have provided
58:29 - the icon color as black so that it
58:32 - matches well with the light color
58:33 - background over here so let me just save
58:35 - this file now and when we see this page
58:37 - on the web browser as you can see this
58:39 - is the way that the icons are getting
58:41 - displayed over here which is giving it a
58:43 - decent look after we have provided the
58:45 - background colors for the icons and
58:47 - having the background as a circular
58:49 - shape now guys when we hover over this
58:51 - particular social icons we want to scale
58:54 - the icons to some extent so what we do
58:56 - is simply inside the style. CSS file
58:58 - over here let me just provide the link
59:01 - class in this case and then we will
59:02 - provide the hover codo class over here
59:05 - and simply we will say transform in this
59:07 - case and then we will say scale by 1.2
59:11 - that is a measure by which we want to
59:13 - scale the icon let me just save this
59:15 - file now and now when we get the mouse
59:17 - cursor over here as you can see the
59:19 - social media icons are increasing its
59:21 - size along with the background over here
59:23 - now if we want the smooth transition
59:26 - what we will do is simply inside the
59:27 - link class over here we will provide
59:30 - transition it is equal to all so that
59:32 - whatever changes happen to the link
59:34 - class all of them will have the
59:36 - transition and then apart from this we
59:38 - will have to provide certain timing so
59:40 - let's say we want 0.5 seconds during
59:42 - which the transition will complete so
59:44 - let me just save this file now and now
59:46 - if you see the transition as you can see
59:48 - it is a smooth transition which is
59:50 - helping the icon to increase its size
59:52 - along with the background that we have
59:54 - provided so guys in this way we can
59:56 - create the horizontal social media icons
59:59 - that can help the users in order to
60:01 - share your link on the different social
60:03 - platforms that they are using now guys
60:05 - apart from this since we have provided
60:06 - the display it is equal to flex value
60:09 - and by default the flex direction is
60:11 - horizontal in this case that is the row
60:13 - Direction over here if you want the
60:15 - social media icons to be displayed in
60:17 - the vertical Direction simply what you
60:19 - have to do is inside the container after
60:22 - display is equal to flex you can provide
60:24 - Flex Direction over here by default it
60:26 - is row but this time we can make it as
60:28 - column so that all the items are getting
60:31 - displayed in the vertical Direction so
60:33 - when we save this file now and view this
60:35 - page on the web browser as you can see
60:37 - these are the social media icons that
60:39 - are getting displayed in the vertical
60:41 - Direction over here so guys in this way
60:43 - you can change the direction of the
60:44 - icons that are getting displayed based
60:46 - on your project requirements so guys
60:48 - comment in the comment section below
60:50 - whether you have learned something out
60:51 - of this video please make sure that you
60:52 - like this video so that it reaches to
60:54 - more people and subscribe to to this
60:56 - channel so that you get the
60:57 - notifications on upcoming videos as well
60:59 - I'll see you in the next video in which
61:01 - we are going to create more HTML and CSS
61:04 - projects so stay tuned so now we will
61:06 - create a button animation and this is
61:08 - the button that is getting displayed
61:10 - over here and when we get the mouse curs
61:12 - on this button as you can see this is
61:14 - the animation that we are going to
61:15 - create just with the help of plain HTML
61:18 - and the CSS properties so guys let us
61:20 - move to the vs code so let us create a
61:23 - new folder inside the HTML CSS project
61:26 - so over here we will create the folder
61:28 - and we will name it as 07 and then we
61:31 - will say button animation in this case
61:33 - so guys basically this is the new folder
61:35 - that we have created inside this we will
61:37 - create our HTML and the CSS files so we
61:40 - have index.html file and the style. CSS
61:44 - file as well guys basically we have both
61:46 - these files over here now inside the
61:48 - index.html file we will make use of this
61:50 - Mt abbreviation that is exclamation mark
61:53 - and when we press enter as you can see
61:55 - we have this HTML template that is
61:57 - getting generated so over here for the
61:59 - title part simply we will say button
62:01 - animation this time and then after the
62:03 - title we will link the style. CSS file
62:06 - that we have created using this link
62:08 - colon CSS M abbreviation so guys
62:11 - basically we have to set the hrf it is
62:13 - equal to the name of the file that is
62:15 - style. CSS file over here now guys
62:17 - inside the body tag what we have to do
62:19 - is we will make use of the a tag that is
62:22 - the anchor tag over here and we will
62:24 - have the class name that is button in
62:26 - this case so guys basically we are going
62:28 - to convert this a tag into a button and
62:31 - we will have the animation inside the
62:33 - button over here so guys we have set the
62:35 - text as overover me in this case so guys
62:37 - let me just save this file now and let
62:39 - us start the live server over here from
62:40 - the bottom right so as you can see this
62:42 - is the link that is getting displayed
62:44 - that is having the text over me in this
62:46 - case now guys let us provide certain CSS
62:48 - properties to this a tag so that we can
62:51 - convert this link into a button so guys
62:53 - over here inside the style. CSS file
62:56 - first of all we will have the body tag
62:58 - over here so that we can have the button
63:00 - tag at the center of the screen so that
63:02 - we can get this a tag at the center of
63:04 - the screen in this case so let me just
63:07 - provide the display it is equal to flex
63:09 - and then simply we will say justify
63:11 - content it is equal to Center let me
63:13 - just save this file now so as you can
63:14 - see we are getting the link at the
63:16 - center of the screen over here apart
63:18 - from this we will also provide align
63:20 - items it is equal to Center in this case
63:22 - so as you can see we are getting the
63:24 - link at the center of the page as far as
63:26 - the horizontal alignment is concerned
63:28 - now guys what we will do is simply we
63:30 - will provide certain CSS properties to
63:32 - this button class over here let me just
63:34 - rename this class name to BTN because
63:37 - the button keyword is also reserved for
63:39 - the button tag in this case let me just
63:41 - rename this class name to BTN so that we
63:44 - don't get confused with the button tag
63:46 - inside HTML so guys over here we are
63:48 - going to make use of this class that is
63:50 - BTN so inside the style. CSS file we
63:53 - have the dot character followed by the B
63:56 - n now guys over here first of all let us
63:58 - provide the padding of 10 pixels from
64:00 - top and bottom and 20 pixels from left
64:03 - and right in this case also we will have
64:05 - certain border over here so let's say we
64:07 - have two pixels of border which is of
64:09 - the type solid this time and then we
64:12 - will have the color that is 764 AB BC as
64:15 - far as the X color is concerned so guys
64:17 - this is the color that we are going to
64:18 - use in order to have the Border color
64:21 - and also the text color must be the same
64:23 - color so guys it is a best practice in
64:25 - order to copy this value of the hex
64:27 - color and save it inside a variable so
64:30 - guys over here inside the body tag we
64:32 - will create a variable that is button
64:34 - color over here so guys basically we
64:36 - have this button color variable and let
64:38 - us provide this hex color this time so
64:40 - basically this is the variable that we
64:42 - can use anywhere we want to make use of
64:44 - this color inside the body tag so guys
64:47 - over here simply we have to make use of
64:49 - the we function and inside the wear
64:51 - function we will make use of this
64:53 - variable that we have defined that is
64:55 - button color over here remember that we
64:57 - have to provide two times highy fun
64:59 - while using the variable and also while
65:02 - declaring the variable over here either
65:04 - inside the root selector or the body
65:06 - selector so let me just save this file
65:08 - now and let us see the Border over here
65:10 - so as you can see we are getting the
65:12 - border that is of the two pixels solid
65:14 - type this time now guys this text color
65:16 - should also have the same border color
65:18 - over here so what we will do is simply
65:20 - we will say color it is equal to where
65:23 - function and then we will make use of
65:24 - this variable so let me just save this
65:26 - file now so as you can see both the
65:28 - colors are same now and then apart from
65:30 - this what we will do is simply we will
65:33 - remove the underline by using the text
65:35 - decoration it is equal to none and also
65:37 - we will provide certain border radius so
65:40 - that we get a good corners for this
65:42 - particular button so simply we will have
65:44 - the Border radius of 20 pixels let me
65:47 - just save this file now so as you can
65:48 - see the link is now converted to a
65:50 - button that is getting displayed over
65:52 - here apart from this let us also provide
65:54 - certain margin from top so that we have
65:57 - certain spacing from top so we have
65:59 - provided the 50 pixels margin from top
66:01 - of this button now guys let us create
66:03 - the animation inside this button over
66:06 - here and before that simply if you want
66:08 - to change the color of the button you
66:10 - can simply come over here and make
66:11 - changes to this color so let's say we
66:13 - want to change it to some green color
66:15 - over here so when we change this color
66:17 - to Green let's say we are using this
66:19 - particular color let me just save this
66:21 - file now so as you can see the button
66:23 - border is now converted to green color
66:25 - along with it the text is also changed
66:27 - to green color over here so guys this is
66:29 - the way that you can make use of the
66:30 - variables and simply you can make the
66:32 - changes at one location so that the
66:35 - changes are applied at all the locations
66:37 - wherever you have used that particular
66:39 - variable so as you can see this is the
66:41 - color that we are using now guys apart
66:42 - from this what we have to do is we have
66:44 - to create a rectangular shape element on
66:47 - this web page so that we can create the
66:50 - animation for this button when we get
66:52 - the mouse cursor on this particular
66:54 - button so simply we will make use of
66:56 - this button class over here and we can
66:58 - make use of the seudo element that is
67:00 - before so guys basically this before and
67:02 - after seudo elements will help us in
67:05 - order to create new HTML elements
67:07 - without having to provide those HTML
67:10 - elements inside the HTML page so guys
67:12 - let us check that how we can do it with
67:14 - the help of the before Pudo element so
67:16 - over here we have made use of this
67:18 - button class which is representing this
67:21 - a tag over here always remember that if
67:23 - you want to create the new HTML element
67:25 - Elements by using the before or the
67:27 - after sudo element you can do so only
67:30 - for the container tags you cannot do it
67:32 - for the tags which are not containers so
67:35 - let's say if you have the input tag
67:36 - which is not a container tag you cannot
67:39 - make use of the before and after sudo
67:41 - elements in order to add new HTML
67:44 - elements so guys inside the girly braces
67:46 - first of all we have to make use of the
67:48 - content CSS property and simply we will
67:50 - keep it as blank over here that is
67:52 - double Cotes in this case now guys apart
67:54 - from this we also have to make use of
67:56 - the position CSS property it must be
67:58 - absolute so guys whenever we are making
68:00 - use of this position equal to Absolute
68:02 - CSS property we need to have the
68:04 - container So currently the container is
68:07 - button class over here and we have to
68:09 - make the position as relative for this
68:11 - parent container this time so over here
68:13 - we set the position as relative and then
68:16 - for the position equal to Absolute we
68:18 - can provide the top left bottom or right
68:20 - CSS properties so where do we want this
68:23 - box to occur exactly over here at the
68:25 - top left left corner of the button so
68:27 - simply we will say top it is equal to
68:29 - Zer and also left it is equal to0 so
68:31 - that the top left corner of this
68:33 - particular new element is aligned over
68:36 - here at the top left of the button now
68:38 - guys apart from this we also want this
68:41 - element to have the width equal to 100%
68:43 - which should cover the entire button and
68:46 - also the height of 100% over here so
68:48 - simply we will say width it is equal to
68:50 - 100% And also the height CSS property is
68:54 - 100% this time time and then apart from
68:56 - this letters also have certain
68:58 - background color so simply we will make
68:59 - use of the same color by using the wear
69:02 - function and then we will use this
69:03 - button color over here let me just save
69:05 - this file now and now if you see on the
69:07 - web page there is a square box that is
69:09 - covering the entire button over here now
69:12 - guys this particular square box is
69:14 - present on top of the button that we had
69:16 - already created so basically if we don't
69:18 - provide the top and left CSS property
69:20 - over here let us see what happens so we
69:23 - have commented out these lines of code
69:24 - let me just save this file now as you
69:26 - can see it is getting placed somewhere
69:28 - over here and not exactly at top of the
69:31 - button which is behind this particular
69:33 - rectangular box and then guys we also
69:35 - want this rectangular box to be present
69:37 - behind the button so what we can do is
69:40 - simply we will set the Z index CSS
69:42 - property to minus one over here so that
69:45 - it goes behind the current button that
69:47 - is already present on the web page so
69:49 - when we save this file now it has gone
69:52 - behind the button over here and since
69:54 - the text color is also having that
69:56 - variable we are not able to make it out
69:58 - because the text color of the hover me
70:00 - text is also having the same color over
70:02 - here what we will do is instead of
70:04 - having this color simply we will set the
70:06 - color as white this time so when we say
70:08 - color it is equal to White you will be
70:10 - able to see the hover me text which
70:12 - means the button is now at the top of
70:14 - the rectangular box and when we remove
70:16 - the Z index over here which is minus one
70:18 - now the rectangle shape is on the top of
70:21 - the button so guys this is the way that
70:23 - you can make the rectangular box that
70:25 - you you have created by using this
70:27 - before sudo element go behind the button
70:30 - this time so guys when we save this file
70:31 - now so basically this particular
70:33 - rectangular box is present behind the
70:36 - button right now and then guys what we
70:37 - will do is simply I'll remove this color
70:39 - over here and UNC commmand this line of
70:41 - code and also we want the top and left
70:43 - to be zero so that the Box comes exactly
70:46 - on top of the button so let us remove
70:48 - these commments over here and then let
70:50 - me just save this file now so as you can
70:52 - see the box is exactly at the top of the
70:54 - button now guys we want to move this box
70:56 - on the left hand side and when we get
70:58 - the mouse cursor on this button over
71:00 - here the Box should come behind the
71:03 - button so that we can see the cool
71:05 - animation so what we will do is we will
71:07 - make use of the transform CSS property
71:10 - and then we will say translate X this
71:12 - time so guys basically this will help us
71:14 - in order to move the box and we will say
71:17 - 100% this time so let me just save this
71:19 - file now so as you can see the box has
71:21 - moved to the left right now and when we
71:24 - get the mouse cursor over here the Box
71:26 - should come behind this particular
71:27 - button so simply what we can do is we
71:30 - can make use of the hover Udo class over
71:32 - here so guys basically we will make use
71:34 - of this button class over here and on
71:36 - Hover event which means we make use of
71:38 - this hover class we want this portion
71:41 - that is before portion over here to come
71:43 - on the right hand side so simply after
71:45 - the hover Pudo class we will make use of
71:47 - the before pseudo element over here in
71:50 - this way and then after this what we
71:52 - have to do is the before element should
71:54 - move on the he so simply we will say
71:56 - transform and then we will say translate
71:59 - X it should go to the original position
72:01 - which is zero position over here for the
72:03 - x coordinate so when we say zero let me
72:06 - just save this file now and when we get
72:08 - the mouse cursor now on the button as
72:10 - you can see the rectangular shape
72:12 - element is now coming behind the button
72:14 - over here now guys we want the smooth
72:16 - transition this time so simply what we
72:18 - will do is we will say transition CSS
72:21 - property over here for the button class
72:23 - we will say all and then we will say 1
72:25 - second as the timing and the same line
72:27 - of code should be present for the before
72:29 - element as well for the button class so
72:31 - over here we have provided the
72:32 - transition all it is equal to 1 second
72:35 - now guys whatever changes happen to the
72:37 - button or the rectangular element over
72:39 - here it will happen with a transition of
72:41 - 1 second so when we save this file now
72:43 - and now when we get the mouse cursor
72:45 - over here as you can see there's a
72:46 - transition of 1 second that we can see
72:48 - now guys we also want to hide this
72:50 - rectangular element before we get the
72:52 - mouse cursor over here on the button so
72:54 - what we get can do is simply inside the
72:56 - button class we will say overflow CSS
72:59 - property it must be hidden so guys
73:01 - whatever elements are present outside of
73:04 - the border of this particular button
73:06 - class will be hidden by default so let
73:08 - me just save this file now so as you can
73:09 - see there is no element that can be seen
73:11 - and when we get the mouse cursor over
73:13 - here as you can see this is the way that
73:15 - the animation is happening now guys when
73:17 - the element covers the button we want to
73:19 - change the text of the hover me that is
73:21 - present over here to white color so what
73:23 - we can do is simply we will say button
73:26 - class and then we will have the hover
73:27 - pseudo class over here and then we will
73:30 - have the color it is equal to white
73:31 - color let me just save this file now and
73:33 - now when we get the mouse cursor over
73:35 - here as you can see there is a smooth
73:37 - transition that is happening and the
73:39 - color of the overover me text is also
73:41 - getting converted to white color in this
73:43 - case so guys in this way you can create
73:45 - a cool animation over here with the help
73:47 - of the HTML and the CSS properties now
73:49 - guys if you want to change the color of
73:51 - the button simply as I have told you you
73:53 - can come to this variable and then
73:55 - change the color so let's say we want
73:57 - some version of the green color over
73:59 - here so let's set the color to green
74:01 - color this time and when we save this
74:02 - file now as you can see this is the
74:04 - button that is getting displayed on the
74:06 - web page and when we get the mouse
74:07 - cursor over here you can see the cool
74:10 - button animation that is happening so
74:11 - guys in this way you can set the
74:13 - required color based on your
74:15 - requirements as per the project so guys
74:17 - comment in the comment section below
74:18 - whether you have learned something out
74:20 - of this video please make sure that you
74:21 - like this video so that it reaches to
74:23 - more people and subscribe to this
74:25 - channel so that you get the
74:26 - notifications on upcoming videos as well
74:28 - I'll see you in the next video in which
74:29 - we are going to create more HTML and CSS
74:32 - project so stay tuned so now we are
74:35 - going to create a card hover animation
74:37 - over here so basically we are going to
74:39 - create the simple card along with some
74:41 - box Shadow over here and when the user
74:44 - gets the mouse cursor on this card as
74:46 - you can see on the right hand side we
74:48 - are going to animate certain HTML
74:50 - elements with the help of the Pudo
74:52 - elements that we will Define inside the
74:55 - the external stylesheet using the CSS
74:57 - properties so guys basically this is the
74:59 - cardover animation that we are going to
75:01 - create so guys let us move to the vs
75:03 - code so now we will create a new folder
75:06 - inside HTML CSS projects so in this case
75:09 - we are going to create 08 uncore and
75:12 - then card over animation as the name of
75:15 - the folder and then guys inside this we
75:17 - are going to create two files that is
75:19 - the index.html file and the style. CSS
75:23 - file as well so guys basically we have
75:25 - both these files inside the card hover
75:27 - animation folder and then inside the
75:29 - HTML file we are going to make use of
75:32 - this EMT abbreviation in order to
75:34 - generate this HTML template so guys
75:36 - inside the title tag we are going to say
75:39 - card over animation as the title of the
75:42 - page and we are going to link this
75:45 - style. CSS file as the external
75:47 - stylesheet over here by using the link
75:50 - colon CSS M abbreviation so guys
75:53 - basically for the hdf attribute we have
75:55 - to provide the external stylesheet as
75:57 - you can see now guys inside the body tag
76:00 - we are going to create the diff tag with
76:02 - the class container so basically we have
76:05 - the class over here for the diff tag and
76:07 - inside this div we are going to create
76:09 - another diff tag over here and then
76:11 - simply we are going to have the class
76:13 - name that is card and then inside this D
76:15 - tag we are going to have two more div
76:17 - tags first of all we will have the diff
76:19 - tag with the class name over here so for
76:22 - this we are going to set the name as
76:24 - programming for beginners that is the
76:26 - name of this YouTube channel that you
76:28 - should definitely subscribe if you have
76:30 - not done so and then apart from this we
76:32 - are going to have another diff tag with
76:34 - the class roll over here and then for
76:36 - this diff tag we are going to say
76:38 - YouTuber and coder over here so guys
76:40 - basically we have these two statements
76:43 - inside the diff tags let me just save
76:45 - this file now and let us see how the
76:47 - changes look like on the browser so we
76:49 - are going to run this live server over
76:51 - here so these are the two statements
76:53 - that are getting displayed over here now
76:55 - guys we are going to provide certain CSS
76:57 - properties in this case so first of all
76:59 - for the container class let us Define
77:01 - certain CSS properties over here so guys
77:03 - let us provide the width in this case so
77:05 - let's say we have 250 pixels of width
77:07 - and also a height over here so basically
77:10 - we will provide the height of 600 pixels
77:12 - this time apart from this we will also
77:14 - provide the white color as the
77:17 - background color over here let us change
77:19 - the version of the white color this time
77:21 - and let us provide this grayish color as
77:24 - the background color for this particular
77:26 - container class let me just save this
77:28 - file now so as you can see this is the
77:29 - container that is getting displayed let
77:31 - us adjust the height in this case so
77:34 - that we can see the card properly on the
77:36 - screen so we have provided the width of
77:38 - 200 pixels and the height of 300 pixels
77:40 - over here and this is how the card will
77:42 - look like now guys what we will do is we
77:45 - want to get this card at the center of
77:46 - the screen over here so simply we will
77:49 - provide margin as Auto Value this time
77:52 - so when we save this file as you can see
77:54 - the card is now present at the center of
77:56 - the screen apart from this we will also
77:58 - provide certain CSS properties to the
78:00 - card class that is present inside the
78:02 - container so guys what we can do is we
78:05 - can simply provide the card class name
78:07 - over here and also we will set the width
78:09 - and height as 100% so that the card
78:12 - class takes the entire width and height
78:14 - of the container class over here and
78:16 - then apart from this we will also
78:18 - provide display it is equal to flex and
78:21 - we will say justify content as Center so
78:24 - that we are able to get this text at the
78:26 - center of this particular container so
78:29 - when we save this file now as you can
78:30 - see we are getting programming for
78:32 - beginners and then YouTuber and coder
78:34 - over here guys by default the flex
78:36 - direction is row over here so what we
78:38 - have to do is we need to make the flex
78:40 - direction as column so that both these
78:43 - strings are displayed vertically so guys
78:45 - over here we will say Flex Direction it
78:48 - is equal to column let me just save this
78:50 - file now so as you can see now both the
78:52 - text are now present at the center of
78:54 - the container as far as vertical
78:56 - alignment is concerned apart from this
78:58 - we will also provide text align it is
79:00 - equal to Center so that we get them at
79:03 - the center of the container as far as
79:05 - horizontal alignment is concerned apart
79:07 - from this let us also provide certain
79:09 - border radius over here for the
79:10 - container class so let's say we have the
79:13 - Border radius this time of 20 pixels and
79:16 - also we will provide the Box Shadow over
79:18 - here so we will provide the blur effect
79:20 - with the color that is black in this
79:22 - case so guys basically we have 0 pixels
79:25 - of horizontal and vertical box Shadow
79:27 - and we are providing the blur effect of
79:29 - 20 pixels with the black color when we
79:32 - save this file now as you can see it is
79:34 - giving the shadow over here for this
79:36 - particular card let us also adjust the
79:39 - background color over here to some
79:41 - extent so that it looks more decent so
79:43 - as you can see it is now looking more
79:45 - decent over here after adjusting the
79:47 - background color guys as for your
79:49 - requirements you can provide your own
79:51 - background color based on the project
79:53 - requirements now guys apart from this we
79:55 - will make use of the before and after
79:57 - sudo elements in order to create more
79:59 - HTML elements over here that will help
80:01 - us in order to provide the hover
80:04 - animation so what we will do is for the
80:07 - card class we are going to create the
80:09 - before Pudo element so in this case we
80:12 - make use of the card class followed by
80:14 - two * colon and then we will say before
80:17 - seudo element and then guys over here
80:19 - what we have to do is first of all we
80:21 - will have to provide the content it is
80:23 - equal to blank so we provide two times
80:26 - double string over here and then apart
80:28 - from this we also have to set the
80:30 - position it is equal to Absolute now
80:33 - guys since we are making the position
80:34 - equal to Absolute over here we need to
80:36 - make the position equal to relative for
80:38 - this particular card class so over here
80:41 - we will provide the position it is equal
80:43 - to relative this time and now since we
80:45 - have provided the position equal to
80:47 - Absolute for this before sudo element we
80:49 - can simply provide the top CSS property
80:52 - as zero and also the left CSS this
80:54 - property as zero so that this new
80:57 - element starts from the top left corner
80:59 - of this particular card and then apart
81:01 - from this we will also set the width as
81:04 - 100% over here and also the height as
81:07 - 100% so that it takes the entire width
81:11 - and height of the card in this case now
81:13 - guys apart from this let us also provide
81:15 - the background color over here so we
81:18 - will provide a blue version of the
81:19 - background color this time and let us
81:22 - set this lighter Blue version and as the
81:24 - background color for this before element
81:26 - when we save this file now as you can
81:28 - see the entire card is now getting
81:30 - covered with the help of this before
81:32 - sudo element now guys apart from this
81:34 - what we have to do is we will provide
81:36 - the transform CSS property as well in
81:39 - which case we are going to provide the
81:41 - skew over here so we are going to
81:43 - provide the skew by 30° so when we save
81:46 - this file now as you can see this is the
81:49 - skew CSS property that is applied on
81:51 - this particular pseudo element and let
81:54 - us also to translate it to the right
81:55 - hand side so basically for this
81:57 - transform CSS property after the skew
81:59 - function that we have provided we can
82:01 - simply provide the translate function as
82:04 - well so we will provide translate X and
82:06 - we will move it by 50% over here when we
82:09 - save this file now as you can see we
82:11 - have moved it by 50% let us move it by
82:14 - 100% over here and see how it looks like
82:16 - so in this case we have moved it to 100%
82:19 - this time so guys in this way we have
82:22 - provided one of the HTML Elements by
82:24 - using using the before seudo element
82:26 - which is part of this particular card
82:28 - class over here now guys let me just
82:29 - adjust the background color for the Pudo
82:32 - element to this particular Blue version
82:33 - of the color so as you can see this is
82:35 - the Pudo element that is getting
82:37 - generated over here now guys similarly
82:39 - we will have another HTML element with
82:42 - the help of the after sudo element over
82:44 - here so simply I'm going to copy paste
82:46 - these lines of code over here and
82:48 - instead of having before we will say
82:50 - after this time and all the CSS
82:52 - properties will be same except the skew
82:54 - for which we have to provide -30° so
82:58 - that it is opposite to the one that we
83:00 - have already created so when we save
83:02 - this file now as you can see this is the
83:04 - way that the after element is also
83:06 - getting created over here now guys the
83:08 - portion that is going outside of this
83:10 - particular card we want to hide it so
83:12 - simply what we can do is for this
83:14 - container we can again provide the
83:16 - position it is equal to relative again
83:18 - since it is a container and simply we
83:20 - will say overflow it is equal to Hidden
83:23 - so that whatever h HML is outside of the
83:26 - boundary of the container it will be
83:27 - hidden so when we save this file now the
83:29 - portion of the Pudo elements that we had
83:32 - created which was going outside of the
83:34 - card is Now hidden this time guys apart
83:36 - from this we will also provide certain
83:38 - opacity as well to both these Pudo
83:40 - elements so over here we will provide
83:43 - the opacity CSS property and let's say
83:45 - we provide the opacity it is equal to
83:47 - 0.7 so that we have certain kind of
83:50 - transparency which can be used in order
83:52 - to display this text when we get these
83:55 - hudo elements at the center of this card
83:57 - during the card over animation so guys
84:00 - we have provided the opacity as well of
84:02 - 0.7 for both these cards now guys
84:05 - similarly we will create the before and
84:07 - after seudo elements for this container
84:10 - class as well but this time we will make
84:12 - changes as far as translate X is
84:14 - concerned so over here simply I'm going
84:16 - to copy paste these lines of code once
84:18 - again and instead of the Dot card over
84:21 - here we will have dot container this
84:23 - time for both before and the after
84:26 - pseudo elements and then we are going to
84:28 - keep all the CSS properties same over
84:30 - here except the translate X this time in
84:33 - which case we are going to make it as
84:35 - 85% over here so guys basically the
84:38 - translate X for both that is before and
84:40 - after Pudo elements will be 85% this
84:43 - time when we save this file now as you
84:45 - can see we have another layer of the
84:47 - same sudo elements that is getting
84:50 - displayed over here now guys apart from
84:52 - this we can also provide certain box
84:54 - Shadow for the Pudo elements that we had
84:57 - created previously so that we can see
84:59 - them properly over here so inside this
85:01 - card class with the before element
85:03 - simply we are going to provide the Box
85:06 - Shadow this time and then we will have
85:09 - the 10 pixels of box Shadow and we will
85:11 - have the color as blue so let us see how
85:13 - it looks like when we save this file now
85:15 - as you can see this is the Box shadow
85:18 - that is getting appeared over here
85:20 - similarly we are going to have the box
85:21 - Shadow for the after pseudo element ment
85:24 - as well so when we save this file now as
85:26 - you can see over here we are getting the
85:28 - Box Shadow this time now guys when we
85:30 - get the mouse cursor on this card we
85:32 - want the Udo elements to come towards
85:35 - the left hand side over here so what we
85:37 - can do is simply on Hover event we can
85:40 - change the translate X CSS property so
85:43 - guys over here first of all for the card
85:46 - class we are going to define the hover
85:49 - sudo class over here and then after this
85:51 - we want to change the translate X
85:53 - property for the pseudo element over
85:56 - here so guys simply for the card class
85:57 - in this case we are going to make use of
85:59 - the hover class over here and then we
86:02 - are going to make use of the seudo
86:04 - element that is before and then what we
86:06 - have to do is we will simply say
86:08 - transform and then we can say translate
86:11 - this time and we will have translate X
86:14 - and it should come to 50% over here so
86:17 - guys basically we are moving the before
86:19 - sudo element by 50% on left hand side
86:22 - and then guys similarly for the after
86:24 - sudo element as well we want the same
86:26 - transformation so we provide comma and
86:29 - then we provide the after sudo element
86:31 - over here so basically as you can see
86:33 - the skew is getting removed over here so
86:36 - simply what we can do is we can also
86:38 - provide the skew as well so we need to
86:40 - provide it separately so over here we
86:43 - have provided the translate X it is
86:44 - equal to 50% and also we will keep the
86:47 - skew as 30° over here and then apart
86:51 - from this for the after sudo element as
86:53 - well we will again translated by 50% and
86:56 - the skew this time must be -30° so over
86:59 - here we can provide the -30° as the skew
87:02 - parameter so guys when we get the mouse
87:04 - cursor over here as you can see it is
87:06 - moving now towards the left but guys
87:08 - basically we want the smooth transition
87:10 - as well so what we will do is we have to
87:12 - provide the transition CSS property to
87:14 - all these sudo elements so basically we
87:17 - will say transition all and then we will
87:20 - provide 0.5 seconds over here and simply
87:23 - I'm going to copy copy paste these lines
87:25 - of code for all the pseudo elements so
87:28 - that we have the transition that is
87:30 - smooth this time and then apart from
87:32 - this let us also increase the translate
87:34 - X so that it doesn't go towards the
87:36 - extreme left of the card so basically we
87:38 - are going to keep it as 80% over here
87:41 - for both these pseudo elements this time
87:43 - so when we save this file now as you can
87:46 - see this is the way that the transition
87:48 - is happening over here similarly we will
87:50 - provide the transition for the container
87:52 - Pudo elements that is before before and
87:54 - after so instead of having the class we
87:56 - will simply say container over here and
87:59 - then we will provide the translate X
88:01 - this time it should be 65% over here so
88:04 - when we say 65 so that there is a gap of
88:06 - 15% between the Udo elements of both
88:09 - that is the card class and the container
88:11 - class as well so when we get the mouse
88:12 - cursor over here as you can see we are
88:15 - getting the animation for this
88:16 - particular card over here so guys
88:18 - basically we have the issue over here
88:20 - when we get the mouse cursor on this
88:21 - particular sudo element the other sudo
88:24 - Udo element is going back to its
88:25 - original position so in order to solve
88:28 - that we can simply provide the container
88:30 - H class for all these Transformations
88:33 - that we have provided so let me change
88:35 - that quickly over here so guys as you
88:36 - can see we have the hover Udo class for
88:39 - the container class over here and then
88:41 - after that we have provided the before
88:44 - and after sudo element for the card
88:46 - class and also the before and after Pudo
88:48 - element for the container class as well
88:50 - so when we save this file now now you
88:52 - can see that all the elements are now
88:54 - coming together as far as the animation
88:56 - is concerned so guys in this way you can
88:58 - create the simple card hover animation
89:01 - over here based on your requirements you
89:03 - can change the colors as well and then
89:05 - apart from this we can also make some
89:06 - changes to the text that is getting
89:08 - displayed over here so we can also
89:10 - provide certain scaling as far as the
89:12 - transformation of this text is concerned
89:15 - when the user gets the mouse cursor on
89:17 - these cards over here so guys comment in
89:19 - the comment section below whether you
89:20 - have learned something out of this video
89:22 - please make sure that you like this
89:23 - video video so that it reaches to more
89:25 - people and subscribe to the channel so
89:27 - that you get the notifications on
89:29 - upcoming videos as well I'll see you in
89:31 - the next video in which we are going to
89:32 - create more HTML and CSS projects so
89:36 - stay tuned so now we are going to
89:38 - display these analytics icons as you can
89:41 - see this is the like or the heart icon
89:43 - and then we have the comment icon as
89:45 - well and then we have the share icon as
89:47 - well and when the user gets the mouse
89:49 - cursor over here on these icons they are
89:51 - going to scale themselves by 1.5 times
89:54 - time so guys let us move to vs code so
89:56 - guys let us create another folder over
89:58 - here inside the HTML CSS projects folder
90:01 - so in this case we are going to have the
90:03 - folder name as analytics data so guys
90:06 - basically we have this new folder over
90:08 - here inside which we are going to create
90:10 - the index.html file and the style. CSS
90:14 - file as well so now we have created both
90:16 - the files over here now inside the
90:18 - index.html file we are going to quickly
90:21 - create the HTML document and we we have
90:24 - the title that is analytics data for
90:27 - Instagram so guys simply we are going to
90:29 - have three icons over here in order to
90:31 - have the like button comment button and
90:33 - the share button in this case now apart
90:35 - from this we will also link the external
90:38 - stylesheet that is style. CSS file with
90:40 - the help of the link tag over here and
90:42 - the HF it is equal to style. CSS now
90:45 - guys inside the body tag over here
90:47 - simply we are going to have the diff tag
90:49 - with the class container this time and
90:52 - then inside this we are going to have
90:54 - the a tag first of all so basically we
90:56 - make use of this a tag inside which we
90:59 - are going to make use of the Box icon so
91:02 - guys basically in order to make use of
91:04 - the icons you can simply use the Box
91:06 - icons.com website where you will find
91:09 - the CSS link over here so simply I'm
91:11 - going to copy this particular link I
91:13 - will provide both these links in the
91:15 - description section below so let me just
91:17 - copy this link and paste it under the
91:20 - head section of the HTML file so guys
91:23 - basically the this is the URL from where
91:25 - the icons will be referenced and will be
91:28 - displayed on the web page wherever we
91:30 - are going to make use of the Box icons
91:32 - now guys after this we have to go to the
91:35 - website that is box icons.com so simply
91:37 - let me just open this website on the
91:39 - browser so guys over here this is the
91:41 - Box icons website now over here simply
91:44 - you can search for the different icons
91:46 - so the first icon that we want to use is
91:48 - the heart icon this time so simply we
91:50 - have searched for heart and when we
91:52 - press enter as you can see this is the
91:54 - icon that we want to use you can use any
91:57 - of the icons based on your project
91:59 - requirements now guys we will click on
92:01 - this particular icon and as you can see
92:03 - on the right hand side we have to go to
92:05 - this font option and then we have this I
92:08 - tag over here with the class name so
92:10 - guys basically this class is used in
92:13 - order to refer to this particular icon
92:15 - from the box icons website so let me
92:18 - just copy this I tag over here inside
92:20 - the a tag and then after this we will
92:23 - also have the span tag over here and
92:25 - simply we will have the class as data
92:27 - for the span tag and then we will have
92:29 - the content as 60 over here so we can
92:33 - have any dummy data over here in order
92:35 - to show the count of the hearts and then
92:37 - apart from this let me just copy paste
92:39 - these lines of code that is the links
92:42 - multiple times over here instead of
92:44 - heart in this case we are going to have
92:46 - the other icons that is comment and the
92:49 - share button so over here we search for
92:52 - comment and basically this is this is
92:54 - the command that we want to show on the
92:56 - web page so when we click on this we are
92:58 - going to copy this particular itch and
93:00 - similarly let me copy the itag for the
93:03 - share icon as well so guys over here as
93:05 - you can see we have the itags with the
93:07 - different class names that will help us
93:09 - in order to display the icons on the web
93:11 - page now guys let me just save this file
93:13 - now and let us start the live server
93:15 - over here so guys as you can see these
93:17 - are the three icons that we have
93:19 - displayed on the web page so guys now we
93:21 - will provide certain CSS properties to
93:23 - these CL classes that we have defined
93:25 - inside the HTML file so inside the
93:27 - style. CSS file for the container class
93:30 - let us provide certain background color
93:32 - over here and this time we will provide
93:34 - the white version of the background
93:36 - color over here so guys basically we
93:38 - will set this particular background
93:39 - color this time and also we will provide
93:41 - the padding so let's say from top and
93:43 - bottom we want 10 pixels of padding and
93:46 - from left and right we want 20 pixels of
93:48 - padding let me just save this file now
93:51 - as you can see this is the diff tag that
93:53 - is getting displayed over here guys
93:55 - apart from this we will also set the
93:56 - width as well so let's say we provide
93:59 - the width of 30% over here when we save
94:01 - this file as you can see this is the div
94:04 - that is getting displayed and then after
94:06 - this also we will make the display it is
94:09 - equal to flex and also we will set the
94:11 - justify content it is equal to Center so
94:14 - that all the icons are displayed at the
94:17 - center as far as the horizontal
94:19 - alignment is concerned now guys you can
94:21 - see that there is no spacing in between
94:23 - these icons so what we will do is
94:25 - instead of providing the center as the
94:27 - justify content we will say space evenly
94:30 - over here so when we save this file now
94:32 - as you can see there is enough space
94:34 - over here in between all the icons now
94:36 - guys what we can do is simply we can
94:38 - also provide the Border radius as well
94:41 - so we will provide the 20 pixels value
94:43 - for the Border radius and also we will
94:45 - provide the Box Shadow so let me just
94:48 - provide the horizontal and vertical box
94:50 - Shadow and over here we will provide the
94:52 - shadow as dark blue color this time so
94:55 - when we save this file now as you can
94:57 - see we are getting the dark blue color
94:59 - as the shadow for this particular diff
95:01 - tag now guys let us get this D tag at
95:04 - the center of the screen so simply we
95:06 - will provide margin it is equal to Auto
95:08 - so as far as the horizontal alignment is
95:11 - concerned we have got the diff tag at
95:13 - the center of the screen guys this is
95:15 - just a part of the web page in which
95:17 - case you can provide all these icons
95:19 - which is the part of the analytics and
95:21 - user can interact with these icons in
95:24 - order to like comment or share and if
95:27 - you are new to this YouTube Channel
95:28 - please make sure that you subscribe to
95:30 - this YouTube channel so that you get the
95:31 - notifications for the upcoming videos in
95:34 - which we are going to create more HTML
95:36 - and CSS projects now guys so far we have
95:38 - provided the required CSS properties for
95:40 - this particular diff tag now inside the
95:43 - diff tag we need to provide the CSS
95:45 - properties for all these links which are
95:47 - being represented by this a tag over
95:49 - here so guys what we will do is simply
95:51 - we will provide the class name over here
95:54 - as link this time for the a TXS and then
95:57 - let me just copy the class names for all
95:59 - the a tags over here so that we can
96:02 - provide the CSS property to this link
96:04 - class so guys let me just copy this link
96:07 - class name over here and then inside
96:09 - this first of all we will provide text
96:11 - decoration as none so that we don't get
96:14 - this underline as you can see so when we
96:16 - save this file now there is no more
96:18 - underline apart from this we want to
96:20 - change the font color to Black by
96:22 - default so we provide the black color is
96:24 - the font color so when we save this file
96:26 - now you can see the changes this time
96:28 - now guys what we want to do is we want
96:30 - to change the font colors of these icons
96:33 - as well we will keep this heart icon as
96:35 - red color so instead of providing the
96:38 - CSS properties inside the external style
96:41 - sheet we will simply provide the inline
96:43 - style over here so for this particular
96:45 - IE class that is having the heart icon
96:48 - simply we will provide the style and we
96:50 - will say color it is equal to Red this
96:52 - time so when we say save this file now
96:54 - as you can see we are getting the red
96:56 - color over here apart from this we will
96:58 - also provide the color CSS property for
97:01 - the other two icons as well so for the
97:03 - comment part let us provide the color as
97:06 - blue over here and for the share part
97:08 - let us provide the other color that is
97:11 - green color this time so guys basically
97:12 - we have the red blue and green color for
97:15 - all these icons when we save this file
97:17 - now as you can see these are the colors
97:19 - that are getting displayed over here now
97:21 - guys when the user gets the mouse cursor
97:23 - on these icons we want to increase its
97:25 - size so what we can do is simply inside
97:28 - the link class we need to refer to this
97:30 - it tag over here so we come to this
97:33 - style. CSS file we provide this link
97:36 - class and then the I tag over here and
97:38 - then after this we want to make use of
97:41 - the transform CSS property in which case
97:43 - we will make use of the scale function
97:46 - over here we will say that it should
97:48 - scale by 1.3 times this time so when we
97:51 - save this file now so if you see the
97:53 - change this already there is a scaling
97:54 - that is happening over here now guys we
97:56 - want the scaling on the mouse hover so
97:59 - we have left out the hover sudo class
98:01 - this time so simply we provide the colon
98:04 - after the it tag and then we say hover
98:06 - sudo class when we save this file now as
98:09 - you can see these are the default sizes
98:10 - for all these icons and when we get the
98:13 - mouse cursor over here you can see that
98:15 - the scaling is happening by 1 point
98:17 - three times over here let us increase
98:19 - the scaling by 1.5 this time so that it
98:22 - gives a decent look so when we save this
98:24 - file now as you can see this is a
98:26 - scaling that is happening and we want
98:28 - the scaling to happen smoothly so simply
98:31 - for the link class we can provide the
98:33 - transition CSS property and we can say
98:36 - all over here and let's say we provide
98:38 - 0.5 second as the timing so when we save
98:41 - this file now we still cannot see the
98:43 - transition that is happening smoothly so
98:45 - guys we have done the mistake over here
98:47 - this CSS property should belong to the
98:49 - it tag this time so basically we will
98:51 - provide the link class follow by the it
98:54 - tag and then over here we will provide
98:56 - the transition CSS property we will say
98:59 - all and then 0. 5 seconds so since we
99:02 - are making the changes for this I tag
99:05 - the transition property should be
99:07 - associated with the I tag over here so
99:09 - when we save this file now and get the
99:11 - mouse cursor over here as you can see
99:13 - the transition is happening now the
99:15 - scaling of the icon is happening to 1.5
99:17 - times with the 0.5 seconds timing so
99:20 - guys in this way you can provide your
99:22 - own buttons based on your requirements
99:24 - with the help of these icons the links I
99:26 - have already given in the description
99:28 - section below so comment in the comment
99:29 - section below whether you have learned
99:31 - something out of this video please make
99:33 - sure that you like this video so that it
99:34 - reaches to more people and subscribe to
99:36 - this channel so that you get the
99:38 - notifications on upcoming videos as well
99:40 - I'll see you in the next video in which
99:42 - we are going to create more HTML and the
99:44 - CSS projects so stay tuned so guys now
99:48 - we are going to create this simple
99:50 - registration form in which case we are
99:52 - going to have multiple input Fields over
99:54 - here along with the password input field
99:56 - as well and when the user gets the mouse
99:59 - cursor on any of the input Fields as you
100:01 - can see when we click on this input
100:02 - field over here we are going to get this
100:05 - feedback with the help of this box
100:06 - Shadow on that input field so guys
100:09 - basically when you click on any of the
100:11 - input Fields over here we will have the
100:13 - box Shadow for that particular input
100:15 - field and apart from this when we get
100:17 - the mouse cursor on this register button
100:20 - it is going to scale itself with the
100:22 - help of the scale function so guys we
100:24 - are going to create this registration
100:25 - form so let us move to the vs code so
100:28 - now we will create another folder over
100:30 - here inside the HTML CSS projects we
100:33 - will name it as registration form so
100:36 - guys basically we have this new folder
100:37 - that is created inside this we are going
100:40 - to create the HTML and the CSS files so
100:43 - basically we have the index.html file
100:46 - and the style.css file which will be the
100:49 - external style sheet over here now guys
100:51 - inside the HTML file we are going to
100:53 - create this HTML document and then we
100:56 - will have the title that is registration
100:59 - form over here for the title tag and
101:02 - then we will also link the external
101:04 - stylesheet with the help of this link
101:06 - tag over here so we have the HF it is
101:08 - equal to style. CSS file now guys over
101:11 - here inside the body tag we will have
101:13 - the div tag with the class container
101:16 - inside which we are going to have the
101:18 - different input fields that will help
101:20 - the user in order to complete the
101:22 - registration so guys basically we have
101:24 - the stiff tag with the class container
101:26 - over here now let us provide certain
101:28 - input Fields over here so we use the
101:30 - input tag along with the type it is
101:32 - equal to text and then the first input
101:34 - field will be the full name over here we
101:37 - will also keep the ID value as same that
101:39 - is full name this time and then we will
101:42 - also have the placeholder and we will
101:44 - say enter full name over here so guys
101:47 - basically we have the full name as the
101:48 - first input field apart from this
101:50 - letters also have the class attribute
101:52 - this time and then we will say input
101:55 - hyphen field over here so guys basically
101:57 - we are going to provide certain CSS
101:59 - properties to this class name and then
102:02 - after this let us provide certain line
102:04 - brakes over here so we have couple of
102:06 - line brakes this time now similarly we
102:09 - will provide more input Fields over here
102:11 - so let me just copy paste this line of
102:13 - code and then after the full name we
102:15 - will ask the user to provide the
102:17 - username over here and then the same
102:19 - value we will provide for the ID part as
102:21 - well and for the placeholder as well and
102:24 - then for the third input field we will
102:27 - ask the user to provide password so that
102:29 - the user can set the username and
102:31 - password over here so basically we have
102:33 - the password as the third field and then
102:36 - we will ask to confirm the password so
102:39 - basically user is supposed to provide
102:41 - the password once again so that there is
102:43 - no mistake that is made by the user so
102:45 - basically we have confirm password as
102:48 - the placeholder this time guys for these
102:50 - two input fields that is password and
102:52 - confirm password we will keep the type
102:54 - as password over here so that it is not
102:56 - visible to anyone else on the screen so
102:58 - basically we have set the type as
103:00 - password over here and then guys in the
103:02 - end we want the email of the user to be
103:05 - set so basically so we have provided the
103:07 - name value as email over here and also
103:09 - the ID as well and for the placeholder
103:12 - as well we have updated the enter email
103:14 - this time so guys basically we have all
103:16 - these input Fields inside the container
103:19 - and then guys after this also we will
103:20 - provide the button as well for
103:22 - registration so simply we provide the
103:24 - button tag over here and also we will
103:26 - provide the class as register over here
103:29 - so this is the button tag with the class
103:31 - register and also we will have the text
103:33 - that is register for this particular
103:35 - button let me just save this file now
103:37 - and start the server so that we can see
103:39 - the changes on the web page so guys as
103:41 - you can see these are all the input
103:43 - Fields by default that are getting
103:45 - displayed over here we have not provided
103:47 - any CSS properties so far so guys
103:50 - basically we are going to provide the
103:52 - CSS property these one by one in order
103:54 - to make this registration form look more
103:57 - attractive so guys what we will do is
103:59 - inside the style. CSS file first of all
104:02 - we will make use of this class name that
104:03 - is container over here so we simply
104:05 - provide dot followed by the container
104:07 - class and then we will have the width of
104:11 - 30% so let's say we have the width of
104:13 - 30% over here also we will provide
104:15 - certain background color so let's say we
104:18 - have this light version of green color
104:20 - as the background color this time so let
104:22 - me just save this file now as you can
104:24 - see we have this light version of the
104:26 - green color as the background color over
104:28 - here apart from this we will also set
104:31 - the display it is equal to flex and
104:33 - since all the flex items must be present
104:36 - in a column so basically we will set the
104:38 - flex direction as column over here so
104:40 - when we save this file now as you can
104:42 - see these are all the flex items that
104:45 - are displayed right now now guys apart
104:47 - from this we also want to set the
104:49 - padding as well so simply we will keep
104:51 - the padding as 20 pixels and also we
104:53 - will provide certain border radius over
104:55 - here so we provide the Border radius of
104:57 - 20 pixels once again we will provide the
105:00 - Box Shadow so over here we will provide
105:03 - 10 pixels of blur effect with the color
105:06 - that is black color over here when we
105:08 - save this file now as you can see this
105:10 - is the registration form that is getting
105:12 - displayed this time now guys apart from
105:13 - this we also want the margin it is equal
105:16 - to Auto so that we can get the
105:18 - registration form at the center of the
105:20 - screen over here as far as the
105:22 - horizontal alignment is concerned so as
105:24 - you can see this is a very simple
105:26 - registration form that the user can use
105:28 - in order to register himself or herself
105:31 - now guys after this let us provide
105:33 - certain CSS properties for these input
105:35 - Fields over here so simply we are going
105:37 - to make use of this class name that is
105:40 - input hyphen field so let me just copy
105:42 - this class name and then inside the
105:44 - style. CSS file we will make use of this
105:47 - class name over here first of all let us
105:49 - provide certain padding so let's say we
105:52 - have the padding of 10 pixels over here
105:54 - also we have the Border radius of 10
105:57 - pixels let me just save this file now as
106:00 - you can see this is the way that the
106:01 - registration form is getting displayed
106:03 - this time apart from this let us also
106:05 - remove the line brakes that we have
106:07 - provided since it is creating the Extra
106:10 - Spaces in between the input Fields so
106:13 - guys over here we have only kept one
106:14 - line break let me just save this file
106:16 - now and as you can see these are all the
106:18 - input fields that are getting displayed
106:20 - over here now guys what we want to do is
106:22 - when the user gets the mouse cursor over
106:24 - here and clicks on any of the input
106:26 - fields we want certain box Shadow to be
106:29 - provided to these input Fields so simply
106:32 - inside the style. CSS file we have to
106:35 - make use of this class name that is
106:37 - input field over here and we will make
106:39 - use of the pseudo class that is focused
106:42 - this time so guys basically this Pudo
106:44 - class is responsible in order to provide
106:47 - any CSS properties when the user gets
106:49 - the mouse cursor on the input field and
106:52 - Clicks in inside the input field over
106:54 - here so that is the time when those CSS
106:57 - properties will be applied so guys over
106:59 - here what we will do is simply we will
107:01 - provide the Box Shadow over here and
107:03 - this time we will say 10 pixels of box
107:06 - Shadow and we will provide the blue
107:08 - color as the Box Shadow this time when
107:10 - we save this file now when we get the
107:12 - mouse cursor over here and click on it
107:14 - as you can see we are getting the blue
107:16 - color over here and when we click on the
107:18 - other input Fields as well we are
107:19 - getting the blue color as the Box Shadow
107:22 - let us in increase the blur effect to 15
107:25 - pixels over here when we save this file
107:27 - now as you can see the blue color is now
107:29 - getting more visible over here with the
107:31 - light green background color that we
107:33 - have provided to The Container now guys
107:35 - apart from this let us also provide
107:36 - certain CSS properties to this register
107:39 - button over here so simply we will make
107:41 - use of this register class and then we
107:44 - will provide certain CSS properties to
107:46 - this register class by using the dot
107:49 - character so over here first of all we
107:51 - will provide the width as minimum
107:53 - content over here let me just save this
107:55 - file now as you can see only the
107:57 - required space is being taken by this
107:59 - particular button also for this
108:01 - container we will set the Align items so
108:03 - that we get all the items at the center
108:06 - of the container so when we say align
108:07 - items it is equal to Center as you can
108:10 - see all the input fields and the
108:12 - register button is now at the center of
108:14 - the container and for the input field we
108:17 - will set the width as 80% over here so
108:20 - that there is no Extra Spaces that is
108:22 - left as you can see on the left hand
108:24 - side and the right hand side of the
108:25 - input Fields so basically we will keep
108:28 - the width as 80% over here so as you can
108:30 - see 80% of the space is being taken by
108:33 - all the input Fields this time now guys
108:35 - for the register button let us provide
108:37 - more CSS properties over here so we will
108:40 - provide the background color over here
108:42 - as green color also we will set the
108:44 - color as white color that is the font
108:46 - color over here and then apart from this
108:49 - we will also set the padding of let's
108:51 - say 5 pixels time and the Border radius
108:54 - as well so simply we will say border
108:56 - radius of 10 pixels and we save this
108:58 - file now as you can see this is the
109:00 - button that is getting displayed over
109:02 - here we will also remove the border so
109:04 - simply we will say border it is equal to
109:07 - none and let us increase the padding to
109:09 - 10 pixels this time so this is a decent
109:12 - register button that is getting
109:14 - displayed over here also we want to
109:16 - change the cursor icon so we will set
109:19 - the cursor it is equal to pointer so
109:21 - when we get the mouse cursor over here
109:22 - here on the register button it is
109:24 - getting converted to the hand tool over
109:26 - here now guys apart from this when the
109:28 - user gets the mouse cursor on this
109:30 - register button we want to scale the
109:32 - button so how we can do that so simply
109:34 - we will make use of the over sudo class
109:37 - over here so we will say register colon
109:40 - over and then simply we will say
109:42 - transform and this time we will make use
109:44 - of the scale and it should scale by 1.2
109:47 - times over here so when we save this
109:49 - file now and when we get the mouse
109:51 - cursor over here as you can see the
109:53 - button is scaling Itself by 1.2 times
109:56 - that we have provided and if we want the
109:58 - smooth transition simply we will provide
110:00 - the transition CSS property to this
110:03 - register button over here so we provide
110:05 - transition and we will say all and this
110:08 - time we will say 0.5 seconds as the
110:10 - timing when we save this file now and
110:13 - now when we get the mouse cursor as you
110:15 - can see there's a smooth transition that
110:17 - is happening over here the register
110:19 - button is increasing its size so guys
110:21 - basically this is the way that you can
110:23 - provide the transition effect to any of
110:25 - the HTML elements based on your
110:27 - requirements and then guys when we get
110:29 - the mouse cursor over here and click on
110:31 - any of the input Fields basically we are
110:33 - getting the Box shadow of the blue color
110:36 - this time so that the user gets the
110:38 - feedback that this is the input field
110:40 - that is getting clicked and you are
110:42 - supposed to provide the data inside this
110:44 - field so guys simply let us provide
110:46 - certain data over here so we have
110:48 - programming for beginners that is the
110:50 - name of this YouTube channel which you
110:51 - should definitely Please Subscribe if
110:53 - you have not done so and let us provide
110:55 - the programming as the username also we
110:58 - will provide the password so let's say
111:00 - we provide some password over here and
111:03 - also we want to confirm password so
111:05 - simply we provide the password and then
111:08 - we will provide certain email ID over
111:10 - here so program at
111:12 - gmail.com and then simply the user have
111:14 - to go to register over here in order to
111:17 - register himself or herself so guys this
111:19 - is a very simple registration form that
111:21 - we have created just by using the plane
111:23 - HTML and the CSS properties so guys
111:26 - comment in the comment section below
111:28 - whether you have learned something out
111:29 - of this video please make sure that you
111:31 - like this video so that it reaches to
111:33 - more people and subscribe to this
111:34 - channel so that you get the
111:36 - notifications on upcoming videos as well
111:38 - I'll see you in the next video in which
111:39 - we are going to create more HTML and the
111:41 - CSS projects so stay tuned

Cleaned transcript:

so now we will create a very simple calculator with the help of the HTML and the CSS as you can see this is the simple calculator that we are going to create so first of all we are going to create a folder over here inside the HTML CSS projects folder so we are going to create the folder that is named as calculator since we are going to create a simple calculator over here now guys inside this calculator folder we are going to create the HTML and the CSS files so first of all we will create index.html file in this case and then we are going to create another file in order to provide the styling with the help of the CSS file so guys over here we have the style. CSS file as well so guys inside the index.html file we will have our HTML elements so we are going to use the Mt abbreviation that is exclamation mark in order to create the HTML template over here and for the title part we are simply going to provide the string that is simple calculator now because apart from this inside the body tag we are going to provide our code so what we are going to do is first of all we are going to create a diff tag with the class that is main class over here and inside this we are supposed to have the text area so for reference over here I have opened the calculator in this case that is a standard calculator so this box over here where all the numbers will appear will be represented by this particular text area so guys over here we will provide the text area is the name and the ID as well so I have provided the text area value for the name and ID part and then initially we will Prov provide the data as zero in this case now guys after this we are going to have another diff tag with the class container where we are going to Define all these buttons that you can see so guys we can create all these buttons with the help of the diff tags over here so we are going to have the diff tag with the class Row in this case and every button will be represented with the help of this particular class that is row over here so guys first of all we have this button that is C so in this case let us provide the data as well and I'm simply going to copy this line of code over here and we are going to provide other buttons at is C and then back space and then we have divide so guys over here for the clear part we will provide the capital x letter and then over here we will provide the Divide symbol so guys basically we have created the four Tex with the help of the class that is row over here which we are going to use inside the style. CSS file let me just save this file now and try opening this file on the browser so simply I'm going to copy this path over here or simply you can also use the live server feature so basically you can install the live server extension on the vs code that will help you in order to go live over here so guys simply we can use this feature as well so let me click over here on the go live Button as you can see so it is starting right now and basically by default this will be the URL where your server will be live and you will be able to view the HTML web page now guys whatever changes you make in the HTML and the style. CSS file over here will be reflected on this HTML page so over here we have not defined the CSS file to be linked to this particular HTML page so simply we are going to use this link tag over here along with the r attribute that is stylesheet and the hrf attribute will have the style. CSS file the file that we have created over here in order to define the CSS properties so guys let me just save this file now and the changes will be automatically reflected over here now guys what we want to do is we want all these buttons that is having these particular text to be present on one particular row over here and also we want them to have certain background color along with the fixed width and height so guys what we will do is first of all for the main class that is for the main calculator over here we will Define certain CSS properties so let's say we Define the background color as a yellow color for the entire calculator and we want it to be present at the middle of the screen over here so guys what we have to do is let us also provide certain padding of 20 pixels so let me just save this file now and without actually reloading the page you will see see that the changes are now getting reflected on this particular URL that's because of the live server that we are using now guys what we want to do is we want to have the fixed width of this particular calculator so let's say we have the width of 40% over here as far as the entire width of the screen is concerned so as you can see this is the 40% let us reduce the width to 30% over here so as you can see this is the 30% withd and also in order to get this particular calculator at the middle of the screen simply we can provide Mar margin equal to Auto over here so guys when we provide margin equal to Auto let me just save this file now and as you can see now the calculator is getting displayed at the middle of the screen over here now guys let us provide certain CSS properties for this diff TX in such a way that all these elements are displayed in one particular row over here so what we have to do is we need to use this particular container class in this case so guys let me just correct the spelling of this container class over here and then inside the style. CSS file we need to make use of this particular class that is container and then guys we need to provide the display property it is equal to grid that's because the layout that is getting displayed on this calculator app it is in the form of the grid layout over here so guys similarly we are going to make use of this grid layout in this case let me just save this file now and if we see the changes there are no changes right now that's because only one column is configured by default and that is why all the diff tags are coming inside just one column over here in order to increase the number of columns we need to make use of the grid template column CSS property and then for this particular CSS property we need to provide the width of the columns so guys either you can provide some length measurement or else you can also provide the auto keyword so that the width of the columns is taken automatically and since we need four columns over here in order to provide the buttons inside the calculator in the form of the grid layout we will be providing the auto keyword four times over here so when we save this file once again and if you notice is the changes over here as you can see all the diff tags are now getting displayed on just one line and they are separated with the help of the columns inside the grid now guys apart from this also we want to provide certain CSS properties to all these buttons which are represented with the help of the diff tag over here so let me just copy the class name that is Row in this case and then guys what we will do is we will provide the fixed width and height over here so let's say we have 40 pixels of width and then also the 40 pixels of height in this case so we provide the height attribute as well and also we want to provide certain background color so let's say we have the background color as gray color over here so when we save this file you will see that these are the changes that are getting reflected in this case we have all the columns that are getting displayed over here and we have the fixed width and height for this particular diff tag apart from this we will also get these characters at the center of the box over here so what we will do is simply we will provide the text align it is equal to Center and in order to get the letters vertically aligned we can provide the line height attribute as well so simply we will provide the line height attribute in this case which must be equal to the height of this particular row class so it is 40 pixels over here when we save this file now so as you can see all the letters are now getting displayed at the middle of the button guys we can provide a lighter version of this gray color over here so let me just change the gray color to this particular lighter version so when we save this file now as you can see these are the buttons that are getting displayed now guys let me just zoom in little bit so that we can see the calculator prop properly over here as you can see these are the top four buttons that are getting displayed over here now guys apart from this also we want to align this content inside the text area at the right hand side so simply what we can do is we can have the text area tag over here and simply we can provide the text align attribute so in this case we will provide text align it is equal to right over here so when we save this file as you can see now the number is getting displayed on the right hand side okay similarly what we will do is we will have these numbers and also the multiplication icon over here inside the second row as far as this container is concerned so simply we have to come inside the index.html file and I'll copy these lines of code over here and simply we need to provide the content that is 7 8 9 and then multiplication so over here we will provide seven s the number then 8 and then N9 and then this multiplication s the small X letter so let me just save this file now and if you notice the change over here as you can see these are the buttons that are getting displayed on the second row now guys apart from this we can also provide certain row Gap over here so that there is certain Gap in between the rows in this case so simply inside the CSS file for the container class we can provide the row Gap over here and a row gap of 5 pixels can provide a good amount of Gap in between the rows so when we save this file now as you can see we have caught the gaps in between the rows now now guys apart from this we will also provide the other numbers as well so let me just copy paste these lines of code once again over here inside the HTML file file so guys we have the third row over here inside the container and this is how the buttons look like in this case apart from this let me just quickly provide the last two rows over here as well inside this calculator so guys as you can see we have also provided the last two rows over here and apart from this we have also adjusted certain width of the main class and the text area as well in which case we have provided the number of columns and the number of rows in such a way that it aligns better along with the other buttons over here inside the container now guys what we can do is in order to make these buttons look more decent we will provide the background color of white for all these numbers over here so simply for the numbers inside this calculator we are going to provide another class name that is number in this case and then guys let me just copy this class name to the other numbers as well so that only for these numbers we are going to have the white color as the background color and then after providing the background color as well we are going to also have the hover pseudo class that will change the background color when we get the mouse cursor on the buttons over here so simply inside the style. CSS file we will provide the number class in this case and then guys we are simply going to provide the background color of white color over here let me just save this file now so as you can see we have all these numbers with the white color in this case apart from this we can also have certain borders as well so guys as you can see we have the white colors for all these numbers right now apart from this let us have some different shade of white color over here so basically we are going to have this shade of white color over here so as you can see this is the background color now guys when we get the mouse cursor on this particular row that is the button we want to change the background color to some different color in this case so what we can do is for this row class over here simply we are going to have the H Udo class and inside this we are going to have the background color so let's say we want to have the background color as gray color in this case let me just save this file now so now if we get the mouse cursor over here as you can see it is changing the background color to the gray color which means it is giving some feedback to the user that this is the button that is going to be clicked in this case apart from this also we will provide the cursor it is equal to pointer over here let me just save this file now so as you can see the cursor is getting updated to the pointer icon over here we can have some other version of the gray color as well based on your requirements so let me just change it to some lighter version of the gray color over here let me just save this file now so as you can see the buttons are now getting a different background color in this case so guys based on your requirements you can have the different background colors or any other CSS properties with the help of these class names just like how we have defined inside the CSS file over here guys we can also have multiple class names for a particular HTML element as you can see these numbers are having two class names over here and from two different class names we are having the multiple CSS properties and the CSS property that is defined at the later stage inside the external CSS file will be implemented on the user interface that is on the web page over here so guys in this way we have successfully created a very simple calculator with the help of the HTML and the CSS properties comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll be creating more HTML and the CSS projects in the upcoming videos so stay tuned so guys we are going to create a responsive navigation bar that will look like this that is the horizontal navigation bar over here along with some background color when we get the mouse cursor on this Nave bar items and then when we decrease the width of the screen over here which means when we view this on smaller devices the navigation bar will be converted to the vertical navigation bar over here so guys we will check this with the help of the HTML and the CSS code so guys over here inside the HTML CSS projects folder we are going to create another folder that is navigation bar in this case and then inside the navigation bar folder we are going to have the index.html file and the style.css files over here so guys let me just create the style. CSS file as well so guys we have created both the files over here so inside the index.html we are going to have the HTML code so let me just use this Mt abbreviation that is exclamation mark in order to have the default HTML template and then guys for the title part we are going to have the navigation bar as the title of this page and also we are going to link this style CSS file with the help of this link tag over here now apart from this inside the body tag we are going to define the HTML elements so what we are going to do is let's say we have the diff tag with the class Nave bar over here so simply we are going to create the diff tag with the class that is Nave bar in this case and then guys inside this we are going to have more diff tags that are going to have the navigation bar item so guys simply we are going to create the diff tag with the class item over here inside which we are going to have the a tag with the HH character s the hre and the first element that we have for our navigation bar is the home so basically this is the first item inside the navigation bar and similarly we are going to have multiple items over here so let's say we have the second item as block and the third item as videos and then the fourth items as languages that are programming languages over here let me just save this file now and click on this go live icon that can help us in order to display the web page on the browser so guys this can be done with the help of the live server extension on the vs code so if you see on the web browser over here these are the four items that we want to include inside a navigation bar now Guys these are looking just like simple links on the web page but we want to convert it into a horizontal navigation bar and when we reduce the width of the screen over over here the navigation bar should be updated to a vertical navigation bar so we will check that as well with the help of the media queries over here so guys simply we have to go inside the style. CSS file in order to actually make this naar class look like a navigation bar so over here what we will do is simply we are going to provide certain CSS properties for the class name that is Nave bar so we need to provide a DOT character followed by the class name that is Nave bar over here and then guys inside this let us have certain background color first of all so we will have a dark background color that is black color over here and then apart from this we also want to make the display equal to Flags so that all the items inside the naar bar class that are these tags over here must be displayed in a row by default guys when we provide the display equal to Flags over here by default the flex direction is a row and all the elements will be displayed in one row over here so when we save this file now and check the changes on the browser as you can see we have the black color as the background color in this case and also we have all the links over here that are getting displayed with the blue color over here guys we are going to make certain changes for these diff tags so what we have to do is simply we will use the class name that is item since the item class name is representing all the diff tags over here that is individual items inside the flex container so guys simply we have to provide this item item class over here and first of all we will provide the padding of 10 pixels in this case and then apart from this what we want to do is all the a tags inside this item class must have some CSS properties so we are going to define the item class and then all the a Tex inside the item so we are going to use the a selector over here first of all we will have the text decoration as none so that we don't have any underline for any of the text that are getting displayed apart from this we will also change the font color to white color so instead of the blue color that is getting displayed over here the white color must be displayed for all these characters so guys let me just save this file now and check the changes so as you can see these are the changes that are getting displayed over here so guys basically this is a very simple navigation bar that we have just created now what we will do is when we get the mouse cursor on any of these diff tags over here we want to change the background color for that particular diff tag that is the navigation bar item so since the diff tag is represented with the help of this item class over here I'm going to copy this item class and then we need to provide the hover sudo class over here for which we want to change the background color so guys we will change the background color to red color in this case when the user gets the mouse cursor on the diff tag with the class item so let me just save this file now and let us see the changes so as you can see when we get the mouse cursor over here the background color for the diff tags are now getting updated to the red color and this is how the user will be able to get the feedback that he or she will be able to click on that particular navigation bar item now guys you will notice there is certain space on the left hand side and on top of this navigation bar that's because by default certain margin is provided to the body tag over here so simply we will provide the body tag in this case and then let me just provide the margin is equal to auto and also padding is equal to Auto and then apart from this we will also provide the Box sizing CSS property as border box over here so guys it is a best practice in order to provide these three lines of code at the start of the CSS file so that there is no margin and padding that is provided by default to any of the HTML elements that we are going to Define on our web page and then apart from this when we say box sizing equal to border box so any of the padding or the Border spaces that are included for the HTML elements the width and height that is taken by those parameters that is borders and padding will be also included as part of the width and height of the HTML elements so guys that is one of the important aspect when you are designing your web page so when we save this file now you will notice that there is no space on the left hand side and on top of this particular navigation bar right now so guys if you want to add more navigation bar items over here simply you have to come inside the HT HTML file and you can simply copy paste these lines of code in this case and then guys simply we can provide some more items as far as navigation bar items are concerned so let's say we provide the contact tab over here and then apart from this we will also provide about us option in this case and let us also provide certain programming languages so over here we can provide Java for which I have created a separate playlist if you want to learn more about Java tutorial and the Java programs as well I have provided the links to the playlist in the description section below apart from this I have also created the playlist for the Python programming language so you can watch out those videos as well the links I have given in the description section below so guys when we save this file now if you notice there are more items that are getting displayed over here on the navigation bar so guys in this way we can simply create a navigation bar using the display equal to flex and the other CSS properties that we have just seen now guys the problem in this particular navigation bar right now is it is a horizontal navigation bar and when we decrease the width of the screen so let's say I have opened the console section over here and when we decrease the width as you can see some of the items are now going on the right hand side and now at the bottom of the screen we are getting the horizontal scroll bar over here guys this is not one of the best practices as far as designing web page is concerned so what we can do is simply we can see what is the maximum width so as you can see over here we are decreasing the width and somewhere over here around 550 pixels the horizontal navigation bar is looking fine in this case and then guys after this when we reduce the size more you can see that it is trying to reduce its size let's say at around 500 pixels or less we want the navigation bar to be displayed as a vertical navigation bar so guys what we can do is simply we can use the media query over here so how do we do that so inside the style. CSS file we will use a media query in this case so we use media screen over here and after this we use the end keyword and then inside the parenthesis we use the max width in this case so guys we need to provide the max width of 500 pixels and then inside the curly braces what we have to do is since we have provided the display equal to flex for the Nave bar over here simply I'm going to copy these lines of code in this case and paste it inside the media screen and then guys we want this Nave bar to have the flex direction as column so by default the flex direction is Row in this case so simply I'm going to provide the flex Direction instead of the other CSS properties and we are going to change it to column over here so guys whenever the width of the screen is 500 pixels or below the flex Direction equal to column will be implemented for that particular Nave bar class over here which is the navigation bar so let me just save this file now and when we decrease the width of the screen now so as you can see below 500 pixels the navigation bar is looking like a vertical navigation bar right now so guys in this way we can easily use the media query in order to convert the navigation bar from horizontal to vertical or visce Versa and then apart from this we have already implemented the other hover properties and the background color changes as well guys based on your requirements you can provide your own CSS properties in the same code in this case so comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video in which we are going to create more HTML and CSS projects so stay tuned so guys we are going to create this kind of login form over here that is going to have certain border radius and apart from this it is also going to have some box Shadow as well and when we get the mouse cursor on the submit button it is going to increase its size with the help of the scale function that will be used with the help of the transform CSS property so guys over here let us create the login form folder in this case so simply we are going to create another folder over here inside the HTML CSS projects and then guys apart from this inside this login form folder we are going to create two files that is the index.html file and the other file in order to handle the CSS properties so we will have style. CSS file as the external C CSS file over here now guys what we will do is simply inside the index.html file we are going to write our HTML elements so over here inside the title tag we are going to say login form in this case so we are going to create a very simple login form over here and also we are going to link the external stylesheet with the help of the link tag over here and the hrf attribute it is equal to style. CSS file in this case so guys simply we are going to create a form tag over here inside the container class which will be represented by the diff tag in this case so guys over here we have the container class with the help of the div tag and then inside this we are going to create a form tag over here also we are going to assign the ID for this form tag so over here let us provide the value as form over here now simply we are going to have two fields in this case that is username and password so let me just provide the first input with the help of the type that is text over here and simp we are going to have the name as username and ID also equal to username over here let us also have couple of line breaks in this case so that the next input that is password can be displayed on the new line so guys over here we have the type is equal to password and simply we are going to have the name and ID values as password over here and then again we are going to have the line breaks in this case and then guys after this we are going to have the submit button over here so simply we are going to have the input tag with the type button in this case and the value must be submit just like how we have in the other forms so guys let me just save this file now and let us click on this go live button so that with the help of the live server extension we are able to see our web page on the web browser and whatever changes we make inside this particular HTML and the CSS files will be directly reflected on this particular web page over here so as you can see these are the two input boxes that we have provided and this is the submit button now guys let us provide certain CSS properties to all these HTML elements so first of all inside the form what we are going to do is we will have the h2 tag over here and we will say F below form so guys basically this is the instruction to the user in order to feel the below form in this case also we are going to have certain background color for this diff tag which is represented by this container class so let me just copy this class name and inser the style. CSS file we are going to have the background color over here and let's say we provide the background color as aqua color let me just save this file now so if you notice that this particular color is getting displayed for the diff tag which is taking the entire width of the screen so guys we can reduce the width of this particular diff tag by providing the width CSS property and let's say we provide 30% as the width in this case so basically we have reduced the width over here also we will provide the padding so let's see we have we have the padding CSS property and we provide the value as 20 pixels over here so as you can see we have provided the padding as well and then apart from this let us also get the diff tag at the center of the screen by providing the margin is equal to Auto and also we will have some margin from the top side as well so let's say we have 20 pixels of margin from the top so as you can see we are getting this diff tag that is the container class at the center of the screen now now guys let us say we want all these HTML elements that is the input fields and the submit button to be present at the center of this particular container so what we can do is simply we can use the text align CSS property and provide the value as Center over here so as you can see all the HTML elements are now present at the center of this particular container because apart from this we will also provide some placeholder over here so that the user comes to know what kind of data is expected over here so inside the input Tex we are going to provide the placeholder and then we will say enter username over here for the username input field and also for the password field we are going to provide enter password in this case so let me just save this file now so as you can see we are getting the placeholders over here now guys what we will do is for both these input fields we are also going to provide certain padding in this case so simply we are going to provide the IDS that is username and password in this case so since we are going to have have the common CSS properties for both these fields we are going to provide the ID and separate them by using the comma in this case so guys over here what we want to do is we want to provide the padding of let's say five pixels in this case let me just save this file now so as you can see there is certain spacing when the user provides certain data over here now guys apart from this we will also provide certain CSS properties to this particular submit button so simply we are going to use the ID that is submit over here with the help of the hash character and then let us provide certain background color first of all and it will be the version of the green color so guys let us pick one of the colors in this case so as you can see this is the color that we want over here let me just save this file now and as you can see there is no color that is getting implemented over here that's because we have not provided the ID to the submit button in this case so let us do that as well so simply we are going to provide the ID is equal to submit so now if you see there is the color that is getting displayed apart from this we will also provide the padding of let's say 5 pixels over here and then guys after this also we want some box Shadow to be implemented so let's say we provide the Border as one pixels solid black color over here so let us provide the black color Border in this case so as you can see this is the black color border and also let us provide the Border radius as well before the Box Shadow so we will provide the Border radius of 5 pixels so as you you can see this is the Border radius if I zoom in little bit you can see there is a border radius that can be seen so guys after this what we want to do is also we will provide the Box Shadow over here so simply we will provide the Box Shadow and the horizontal and the vertical Shadow we want to keep it as zero pixels but we want to provide the blur effect so let's say we provide the five pixels as blur effect and the color must be black in this case let me just save this file now so if you notice there is a box sh that is getting implemented over here for this particular submit button now guys when we get the mouse cursor over here the cursor icon must be updated to hand in this case so simply we will provide the cursor it is equal to pointer over here so when we save this file now as you can see the cursor is now getting updated to the hand icon over here and also we want it to scale little bit so that the size of this button increases when the user gets the mouse cursor on this particular button so guys what we want to do is simply we need to make use of the hover sudo class over here so when we say submit followed by colon we have something called as hover sudo class so in this case simply we can make use of the transform CSS property which is having scale as one of the function so guys we need to provide the value of scaling over here so when we provide 1.2 it is going to increase its size against the horizontal and the vertical Dimensions so when we save this file now and let us see the changes this so as you can see the button size is increasing now and it is due to the scale function that we have used with the help of the transform CSS property also guys we want a smooth transition when the scaling is happening so simply we can use the transition CSS property over here so we will use the transition CSS property and in this case we want to transform it smoothly so over here we will make use of this transform CSS property and the time must be let's say 0.3 seconds over here so simply we provide the time as 0.3 seconds when we save this file now and when we get the mouse cursor over here there's a smooth transition that you can see right now as far as the scaling of this button is concerned so guys in this way we have created a simple login form over here instead of providing the string that is field below form we can say login form in this case so as you can see this is the login form now similar to The Box Shadow and the Border radius that we have provided to this button over here we can provide the Border radius and the Box Shadow to this container as well so what we will do is inside the style. CSS file for this container simply we are going to define the Border radius of let's say 10 pixels over here so when we save this file now as you can see there's a border radius of 10 pixels right now and also we want a certain box Shadow over here so let's say we provide a box Shadow with the help of the blur effect over here and we provide the black color as the Box Shadow so as you can see this this is the black color box shadow that is getting provided to this container that is the login form and also we can provide multiple box Shadows over here so after providing comma after the first box Shadow we can provide the second box shadow that is having 20 pixels of blur effect and let's say we want the dark blue color this time that will be spread across 20 pixels after the border of the container so when we save this file now you will notice that there is a dark blue color that is getting displayed after after the border of the container which is giving this particular login form a decent look over here so guys in this way based on your project requirements you can create attractive login forms so that the user can provide the username and password and any other details as per the project requirements so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video where we are going to create more HTML and the CSS projects so stay tuned so now we are going to create a search bar that will have a glowing effect when the user clicks on this particular search bar over here so as you can see we have the Border color and also the Box Shadow CSS property has been implemented over here in order to provide the glowing effect for this particular search box so let us move to the vs code so first of all we will create another folder inside this HTML CSS projects so B basically we will say glowing search bar over here so guys we have this folder name inside which we are going to create two more files at is index.html and the style. CSS files so guys we have the index.html file over here and the other file that is style. CSS that will help us to provide the CSS properties now guys inside this index.html file we are going to create the HTML elements so let us provide the title of this particular web page so basically we we are going to say glowing search bar in this case and then after this we are going to link the style. CSS file with the help of this link tag over here and the RL attribute will be stylesheet and the hdf attribute will be style. CSS file now guys inside the body tag what we are going to do is let us first of all have the div tag with the class container over here inside which we are going to define the input with the type search in this case so guys basically this is the input with the type search that will help us in order to create a search bar so we are going to have the value as search for the name and the ID attribute over here and apart from this we are also going to provide the placeholder for this input field and we will provide the value as for your search so guys basically this is the placeholder text that will be displayed inside the search bar let me just save this file now and let us open the live server in this case with the help of the co live button that you can see so guys basically this is the search bar that we have created now guys let us provide certain CSS properties for this search bar and the container class as well which is represented by the diff tag over here so first of all we will have the container class in this case and also we will have certain background color so let's say we have the white version of the background color over here so simply we are going to provide the white color in this case and let us have this particular shade of white color over here let me just save this file now as you can see this is the shade of the white color it is a kind of grayish color that is set as the background color for the container we will also have certain padding over here so let's say we have a padding of 20 pixels and also we will set the text align as Center so that we can see the search bar at the center of this particular container so as you can see this is the search bar that is getting displayed over here now guys what we want to do is when the user gets the mouse cursor over here inside the search bar and clicks on we want to have a glowing effect outside of this particular border of the search bar so simply we are going to provide certain CSS properties to this search bar first of all so we will use the ID that is search in this case so we have to use the hash character followed by search over here so basically we are going to increase the padding so let's say we provide the padding of 5 pixels over here so as you can see there is certain spacing that is provided inside the search bar over here guys when we get the the mouse cursor over here we need to make use of the focus Pudo class in this case so simply I'm going to copy paste this line of code over here we are going to remove this padding CSS property and we will say Focus that is the sudo class with the help of this colon over here and then after this we need to make the Border color so let's say we have the border of two pixels and it is of the type solid and we will provide some Blue version of the Border color over here so simply we are going to Pro blue color in this case and let us change the color to light blue over here and let's say this is the color that we want to have as the border so let me just save this file now and now when we get the mouse cursor over here you will not be able to see any changes over here that's because there is a default outline that is getting displayed right now so guys what we can do is simply we can provide outline it is equal to none in this case when we save this file now as you can see there is a blue color border that is getting displayed over here right now let us change the background color of this container to some darker version so let's say we have the black color for this background color over here so that we can properly see the Border color of this particular search bar so when we save this file now there is no change right now so as you can see we have not provided the semicolon over here so guys it is very important that we provide the semicolon after the values of the CSS properties so as you can see now we have the Border color that is light blue color for this particular search bar now guys what we we can do is simply we can also provide the Box Shadow over here with the same color so we are going to provide the Box shadow of let's say 0 pixels horizontal and the vertical shadow in this case and let's say we provide 20 pixels of the same color as the blur effect for the Box Shadow so I'll just copy paste this particular RGB color over here let me just save this file now and now when we get the mouse cursor inside this particular search bar and click on it you can see that there is a glowing effect that can be seen over here due to this box Shadow and the border that we have provided in this case for this particular search bar so guys in this way you can provide the glowing effect for the search bar with the help of these CSS properties apart from this we can also have the Border radius as well so let's say we have the radius of 10 pixels so you can see that there's a radius that is getting provided over here and when we click on the search bar you can see that there is a glowing effect that can be seen over here so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video where we are going to create more HTML and the CSS projects so stay tuned so now we are going to create a simple loading animation that will look like this as you can see this is a circular loading animation and we can display this loading animation with the help of just HTML and CSS say whenever you are retriving data to be displayed to the user so guys let us move to the VSS code so guys over here inside the HTML CSS projects folder we are going to create new folder over here and we will say loading animation in this case and inside this folder we are going to create couple of files over here so the first file will be index.html file and the other file will be representing the CSS file that is style. CSS file so guys basically we are going to make use of this external CSS file over here so inside our HTML file in this case we are going to make use of this particular Mt abbreviation that is exclamation mark in this case that will help us in order to create this particular HTML template in order to create the web page so guys over here for the title tag we are going to provide the string that is loading animation over here and also we are going to link this external style. CSS file over here with the help of the link tag inside the HTML file so guys after this inside the body tag what we are going to do is simply we are going to create a diff tag with the class that is loading over here so guys basically this DFT tag will help us in order to create the loading animation on the web page so let us provide certain CSS properties to this diff tag over here we are going to make use of this class name that is loading and inside the style. CSS file we will provide the dot character followed by the name of this class now what we will do is simply we are going to provide a fixed width and height for this particular diff tag so let's say we have 200 pixels of width and 200 pixels of height over here so basically it is a square box initially and apart from this we are also going to provide the background color so let's say we provide the gray color as the background color and then guys for the body part as well we are going to provide certain dark color as the background color so you make use of this body tag and inside the braces we will provide the background color and let's say we provide the black color as the background color over here let me just save this file now and let us make use of this live server so simply we have to click on this go live in this case so guys as you can see we have the black color is the background color over here and we have created the diff tag successfully that is in the form of a square box in this case let us get the square box at the center of the page over here so what we will do is inside the style. CSS file for the loading class simply we are going to provide the margin it is equal to Auto and then apart from this from Top as well we are going to create certain margin so let us provide the 20 pixels of margin from Top let me just save this file now and if we see on the web page right now the diff tag is at the center of the screen over here now since we want a loading animation out of this diff tag first of all we will have to convert the square box to a circle so what we will do is simply we can make use of the Border radius esss property and when we provide the Border radius as 50% the square shape will be converted to Circular shape over here so let me just save this file now and as you can see on the web page there is a circle that is getting created over here now guys instead of using the background color that is coloring this circle as a gray color we will make use of the Border color over here so let me just comment out this background color in this case and simply we will provide the border of let's say 20 pixels and the Border type will be solid in this case and the same color that is gray color we are going to provide for this particular border when we save this file now so as you can see we have created a circular shape diff tag over here now guys on one side we want the Border color to be white color so let's say on the top side we want the Border color to be white color so that we can see the loading icon out of this diff tag so what we have to do is we need to separate out these values that we have provided inside the Border CSS property so I'm going to comment out this line of code and we are going to separate it in such a way that we have to provide all these values separately so first of all we will provide the Border width over here of same value that is 20 pixels and then the Border style must be solid in this case so we provide border style CSS property and it is of the type solid and the Border color must be gray so simply we make use of this border color CSS property now guys when we provide the value for this border color the first color will represent the top color over here followed by the right color and then we have the bottom color and then we have the left color in this case so the first color that we want to provide is white color that will be provided at the top side of the border for this particular circular shape diff tag and then after this on the right hand side we want the gray color and then on the bottom side we again want the gray color and on the left side as well we want the gray color over here so guys basically only the top side must be white in this case so that we can see the loading icon so when we save this file now as you can see there's a border color of white color at the top of this particular circle now simply in order to make this circle look like a loading animation we need to rotate it by 360° and we have to continue the rotation so what we can do is we can make use of the key frames over here which is very important important when you make any of the animations inside the CSS so guys we make use of at theate character followed by key frames keyword over here and then followed by the space character and then simply let us give the name to this animation that is loading over here and then after this we need to provide the curly presses now guys we need to define the different stages of the loading so let's say at the 0% which is at the start of the loading we don't want any rotation so simply we can provide the transform CSS property and inside this we are going to make use of this rotate function which is going to have the value as 0° over here so at 0% we don't want any rotation now similarly at 100% that is at the end of the animation we want the rotation to be 360° which means this particular Circle should start from the 0° and then at the end of the animation it should be completely rotated by 360° over here so for 100% in this case we need to Prov by transform CSS property once again and then we need to make use of the rotate function and simply we provide the value that is 360° over here so guys in this way from 0% to 100% we have provided the different animations you can also provide the animations to the intermediate percentages that is 10% 25% or 50% and so on based on your animation requirements so guys in this case currently we only want to rotate this particular icon and that is why we have provided the transform CSS property with the help of the rotate function over here let me just save this file now and you will not see any changes right now on this web page that's because we have to link this particular key frames that is loading with this particular diff tag that is having the class name that is loading over here so what we can do is inside this loading class we can make use of the animation name CSS property and in this case we need to make use of this name that is loading over here and then after after this we also have to provide the animation duration so let's say we want the duration to be 2 seconds so within 2 seconds the icon will rotate itself from 0° to 360° over here and then after this we want to rotate it infinite number of times so basically we make use of this animation iteration count over here and we provide the value that is infinite in this case let me just save this file now and if you see the web page as you can see in 2 seconds means the icon is getting rotated over here and in this way we can easily create the loading animation now guys you can see that the speed is decreasing at the end of the animation so simply we can make use of another CSS property that is animation timing function in order to keep the speed linear over here so simply we provide the value that is linear in this case that will keep the speed of the loading animation same throughout the animation so when we save this file now you will see that the speed is linear right now and there is no decrease or increase in the speed as far as the loading animation is concerned so guys based on your requirements you can have the different color for this particular loading animation that will match along with the background color of this particular web page and then based on the JavaScript code once your data is successfully retrived from the database or from the internet you can hide this particular loading animation it becomes very important in order to keep your users engaged with the help of such animations on the the web page whenever you are retriving data with the help of JavaScript so guys this is one of the ways in order to create the loading animation on your web page with the help of the HTML and the CSS comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video with a different HTML and the CSS project so stay tuned so guys we are going to create these social media icons it will help your users on the website to share the URL to the different social media platforms and when the user gets the mouse cursor on these social media icons they are going to scale up little bit and that is how you can provide a good user experience for your user so guys let us move to the vs code so let us create another folder over here since it is the sixth project we are naming it as 06 uncore and then we will say social media icons in this case and then guys inside this folder let us create two files that is index.html file which will help us in order to create the web page and then apart from this we will also create the style. CSS file that will help us in order to provide the different CSS properties now guys over here inside the index.html file let us create the HTML template over here and for the title part we will say social media icons so guys basically this is the title and then we are going to link the style. CSS file by using this link colar CSS Mt abbreviation and then we are going to provide hrf it is equal to style. CSS now guys apart from this in order to create the social media icons we can include the external stylesheet over here so as you can see we are going to make use of this box icons.com website which helps us in order to provide the different icons and basically we are going to make use of this stylesheet so let me just copy this link I will provide both these links in the description section below so guys over here after copying the external CSS file we are going to paste it inside the head section of the body tag over here so basically this is the link that is going to be used in order to make use of the different icons at a present on the website so guys over here what we will do is first of all we will create a div tag with the class container over here inside which we will have different social media icons and then in this case we are going to have the a tag so over here we have the a tag in this case and let me just provide the class as Link in this case and then after this inside the a tag we can have the it tag now guys how you can display the links over here so let us open this website that is box icons.com so basically this is the website that we are going to use and then you can see that there are different icons you can provide on your web page so guys over here let's say first of all we want the Facebook icon so the moment you search for Facebook you can see different social media icons that can can be used on your web page so let's say we want to make use of this particular icon so when we click on this additional information will be provided on the right hand side we need to switch to the font section over here and as you can see this is the link that is provided so let me just zoom in little bit so that you can see properly so basically this is the font and this is the tag that we are supposed to include so let me just click on this and basically it will get copied on the clipboard so over here inside the a tag we are supposed to provide this I tag over here that we have copied and basically it is having the class with this particular value so guys what this will do is it will display the icon on the web page so let us check this on the web browser let me just save this file now and let us open the live server over here by clicking on this go live button so as you can see this is the icon that is getting displayed over here on the top left now guys similarly what we will do is we will make use of the other icons as well from that same website so let me just copy paste these lines of code over here and simply instead of Facebook we are going to make use of the other social media icons so we have Twitter over here and then we also have YouTube in this case and then let's say we have Instagram as well so over here we provide the Instagram so basically you just need to change the class name in this case you can also come over here on the box icons website and then you can provide the icon that you want to display so let's say you want to search for YouTube over here so YouTube icon will be displayed and then simply you can call copy paste this itag from this particular website so guys basically we have included four icons over here let us add another one that is Snapchat as well so instead of Instagram we will say Snapchat in this case it is best practice to copy this it tag from this website so that you don't get any issues while you are renaming the class names over here so guys let me just save this file now and when we see the same web page over here as you can see these are all the icons that are getting displayed in this case now guys since we have included all these social media icons inside the a tag that is why we are getting the underline and all of them are having the color that is blue color in this case what we will have to do is we will provide the CSS properties for all these classes that we have provided over here so first of all let us copy this container class in this case and then let's provide some CSS properties over here to The Container class so first of all we will say display it is equal to flex and then we want to get it at the middle of the screen so let's say we provide justify content as Center over here let me just save this file now as you can see all the icons are now getting displayed at the center of this page as far as horizontal alignment is concerned now guys let us also provide certain margin from top so that we have some spacing from top of the page as well so we provide 50 pixels of margin from Top over here now guys let us provide certain CSS properties to this link class as well so that the properties will be applied to the icons so over here we provide dot followed by the class name that is linked in this case and then what we will do is is first of all we will provide the width and height for this particular link class so let's say we have the width of 30 pixels over here and also we will provide the height of 30 pixels in this case so that we get a square box out of this link class over here and also we want to make this link as a circular shape length so what we will do is simply we will say border radius it is equal to 50% in this case and let us temporarily give some background color over here so that we can identify the area of this glass that is length so let let me just save this file now so if you notice we have all these circular shaped link over here now guys inside the circles we want all these icons to be present at the center of the circle so what we will do is again we will say display it is equal to flex this time and then we will say justify content it is equal to Center so that they are at the center as far as the horizontal alignment is concerned and then we will get them at the center as far as vertical alignment is concerned so we have to make use of the Align items over here and again then we will make use of the center value so as you can see all the icons are now at the center of the circle in this case now guys we will have to remove the underlines that are coming over here so simply we will say text decoration it is equal to none and also we will change the font color over here so let's say we provide the color as white color in this case so simply we provide the color as white we need to have certain dark background color in this case so what we will do is let's say we provide the dark background color that is black this time so when we save the this file so as you can see the background color of the circle is black in color and the icons are displayed as white in color now guys apart from this we will also have to provide certain spacing in between all the links so let us provide the margin for all the links over here so we simply have to provide the margin CSS property and let's say we provide 10 pixels of space from all the sides so when we save this file now as you can see all the icons are now separated with certain space in between them now guys instead of giving the black color as the background color over here we need to provide the colors that are actually present on these websites of the social media icons so what we will do is simply we will comment out this line of code that is background color over here and we will provide the inline style property in this case so basically inside the a tag which is having the class link over here since all the links will be having different background colors so we are going to provide the style attribute in this case and let us provide the background color CSS property and the Facebook social media icon is having some version of blue color over here so let us set that as well so this version of Blue we have set already so let me just save this file now and you can see that Facebook is now having the blue color as the background color over here the other icons are not visible right now because their color is white in color and the background color is also white in color for now so guys let us set the background color for the other social media icons as well so I'll quickly make the changes over here so as you can see we have provided the background colors for all the links over here apart from this for the social media icons that is Instagram and Snapchat we have provided the icon color as black so that it matches well with the light color background over here so let me just save this file now and when we see this page on the web browser as you can see this is the way that the icons are getting displayed over here which is giving it a decent look after we have provided the background colors for the icons and having the background as a circular shape now guys when we hover over this particular social icons we want to scale the icons to some extent so what we do is simply inside the style. CSS file over here let me just provide the link class in this case and then we will provide the hover codo class over here and simply we will say transform in this case and then we will say scale by 1.2 that is a measure by which we want to scale the icon let me just save this file now and now when we get the mouse cursor over here as you can see the social media icons are increasing its size along with the background over here now if we want the smooth transition what we will do is simply inside the link class over here we will provide transition it is equal to all so that whatever changes happen to the link class all of them will have the transition and then apart from this we will have to provide certain timing so let's say we want 0.5 seconds during which the transition will complete so let me just save this file now and now if you see the transition as you can see it is a smooth transition which is helping the icon to increase its size along with the background that we have provided so guys in this way we can create the horizontal social media icons that can help the users in order to share your link on the different social platforms that they are using now guys apart from this since we have provided the display it is equal to flex value and by default the flex direction is horizontal in this case that is the row Direction over here if you want the social media icons to be displayed in the vertical Direction simply what you have to do is inside the container after display is equal to flex you can provide Flex Direction over here by default it is row but this time we can make it as column so that all the items are getting displayed in the vertical Direction so when we save this file now and view this page on the web browser as you can see these are the social media icons that are getting displayed in the vertical Direction over here so guys in this way you can change the direction of the icons that are getting displayed based on your project requirements so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video in which we are going to create more HTML and CSS projects so stay tuned so now we will create a button animation and this is the button that is getting displayed over here and when we get the mouse curs on this button as you can see this is the animation that we are going to create just with the help of plain HTML and the CSS properties so guys let us move to the vs code so let us create a new folder inside the HTML CSS project so over here we will create the folder and we will name it as 07 and then we will say button animation in this case so guys basically this is the new folder that we have created inside this we will create our HTML and the CSS files so we have index.html file and the style. CSS file as well guys basically we have both these files over here now inside the index.html file we will make use of this Mt abbreviation that is exclamation mark and when we press enter as you can see we have this HTML template that is getting generated so over here for the title part simply we will say button animation this time and then after the title we will link the style. CSS file that we have created using this link colon CSS M abbreviation so guys basically we have to set the hrf it is equal to the name of the file that is style. CSS file over here now guys inside the body tag what we have to do is we will make use of the a tag that is the anchor tag over here and we will have the class name that is button in this case so guys basically we are going to convert this a tag into a button and we will have the animation inside the button over here so guys we have set the text as overover me in this case so guys let me just save this file now and let us start the live server over here from the bottom right so as you can see this is the link that is getting displayed that is having the text over me in this case now guys let us provide certain CSS properties to this a tag so that we can convert this link into a button so guys over here inside the style. CSS file first of all we will have the body tag over here so that we can have the button tag at the center of the screen so that we can get this a tag at the center of the screen in this case so let me just provide the display it is equal to flex and then simply we will say justify content it is equal to Center let me just save this file now so as you can see we are getting the link at the center of the screen over here apart from this we will also provide align items it is equal to Center in this case so as you can see we are getting the link at the center of the page as far as the horizontal alignment is concerned now guys what we will do is simply we will provide certain CSS properties to this button class over here let me just rename this class name to BTN because the button keyword is also reserved for the button tag in this case let me just rename this class name to BTN so that we don't get confused with the button tag inside HTML so guys over here we are going to make use of this class that is BTN so inside the style. CSS file we have the dot character followed by the B n now guys over here first of all let us provide the padding of 10 pixels from top and bottom and 20 pixels from left and right in this case also we will have certain border over here so let's say we have two pixels of border which is of the type solid this time and then we will have the color that is 764 AB BC as far as the X color is concerned so guys this is the color that we are going to use in order to have the Border color and also the text color must be the same color so guys it is a best practice in order to copy this value of the hex color and save it inside a variable so guys over here inside the body tag we will create a variable that is button color over here so guys basically we have this button color variable and let us provide this hex color this time so basically this is the variable that we can use anywhere we want to make use of this color inside the body tag so guys over here simply we have to make use of the we function and inside the wear function we will make use of this variable that we have defined that is button color over here remember that we have to provide two times highy fun while using the variable and also while declaring the variable over here either inside the root selector or the body selector so let me just save this file now and let us see the Border over here so as you can see we are getting the border that is of the two pixels solid type this time now guys this text color should also have the same border color over here so what we will do is simply we will say color it is equal to where function and then we will make use of this variable so let me just save this file now so as you can see both the colors are same now and then apart from this what we will do is simply we will remove the underline by using the text decoration it is equal to none and also we will provide certain border radius so that we get a good corners for this particular button so simply we will have the Border radius of 20 pixels let me just save this file now so as you can see the link is now converted to a button that is getting displayed over here apart from this let us also provide certain margin from top so that we have certain spacing from top so we have provided the 50 pixels margin from top of this button now guys let us create the animation inside this button over here and before that simply if you want to change the color of the button you can simply come over here and make changes to this color so let's say we want to change it to some green color over here so when we change this color to Green let's say we are using this particular color let me just save this file now so as you can see the button border is now converted to green color along with it the text is also changed to green color over here so guys this is the way that you can make use of the variables and simply you can make the changes at one location so that the changes are applied at all the locations wherever you have used that particular variable so as you can see this is the color that we are using now guys apart from this what we have to do is we have to create a rectangular shape element on this web page so that we can create the animation for this button when we get the mouse cursor on this particular button so simply we will make use of this button class over here and we can make use of the seudo element that is before so guys basically this before and after seudo elements will help us in order to create new HTML elements without having to provide those HTML elements inside the HTML page so guys let us check that how we can do it with the help of the before Pudo element so over here we have made use of this button class which is representing this a tag over here always remember that if you want to create the new HTML element Elements by using the before or the after sudo element you can do so only for the container tags you cannot do it for the tags which are not containers so let's say if you have the input tag which is not a container tag you cannot make use of the before and after sudo elements in order to add new HTML elements so guys inside the girly braces first of all we have to make use of the content CSS property and simply we will keep it as blank over here that is double Cotes in this case now guys apart from this we also have to make use of the position CSS property it must be absolute so guys whenever we are making use of this position equal to Absolute CSS property we need to have the container So currently the container is button class over here and we have to make the position as relative for this parent container this time so over here we set the position as relative and then for the position equal to Absolute we can provide the top left bottom or right CSS properties so where do we want this box to occur exactly over here at the top left left corner of the button so simply we will say top it is equal to Zer and also left it is equal to0 so that the top left corner of this particular new element is aligned over here at the top left of the button now guys apart from this we also want this element to have the width equal to 100% which should cover the entire button and also the height of 100% over here so simply we will say width it is equal to 100% And also the height CSS property is 100% this time time and then apart from this letters also have certain background color so simply we will make use of the same color by using the wear function and then we will use this button color over here let me just save this file now and now if you see on the web page there is a square box that is covering the entire button over here now guys this particular square box is present on top of the button that we had already created so basically if we don't provide the top and left CSS property over here let us see what happens so we have commented out these lines of code let me just save this file now as you can see it is getting placed somewhere over here and not exactly at top of the button which is behind this particular rectangular box and then guys we also want this rectangular box to be present behind the button so what we can do is simply we will set the Z index CSS property to minus one over here so that it goes behind the current button that is already present on the web page so when we save this file now it has gone behind the button over here and since the text color is also having that variable we are not able to make it out because the text color of the hover me text is also having the same color over here what we will do is instead of having this color simply we will set the color as white this time so when we say color it is equal to White you will be able to see the hover me text which means the button is now at the top of the rectangular box and when we remove the Z index over here which is minus one now the rectangle shape is on the top of the button so guys this is the way that you can make the rectangular box that you you have created by using this before sudo element go behind the button this time so guys when we save this file now so basically this particular rectangular box is present behind the button right now and then guys what we will do is simply I'll remove this color over here and UNC commmand this line of code and also we want the top and left to be zero so that the Box comes exactly on top of the button so let us remove these commments over here and then let me just save this file now so as you can see the box is exactly at the top of the button now guys we want to move this box on the left hand side and when we get the mouse cursor on this button over here the Box should come behind the button so that we can see the cool animation so what we will do is we will make use of the transform CSS property and then we will say translate X this time so guys basically this will help us in order to move the box and we will say 100% this time so let me just save this file now so as you can see the box has moved to the left right now and when we get the mouse cursor over here the Box should come behind this particular button so simply what we can do is we can make use of the hover Udo class over here so guys basically we will make use of this button class over here and on Hover event which means we make use of this hover class we want this portion that is before portion over here to come on the right hand side so simply after the hover Pudo class we will make use of the before pseudo element over here in this way and then after this what we have to do is the before element should move on the he so simply we will say transform and then we will say translate X it should go to the original position which is zero position over here for the x coordinate so when we say zero let me just save this file now and when we get the mouse cursor now on the button as you can see the rectangular shape element is now coming behind the button over here now guys we want the smooth transition this time so simply what we will do is we will say transition CSS property over here for the button class we will say all and then we will say 1 second as the timing and the same line of code should be present for the before element as well for the button class so over here we have provided the transition all it is equal to 1 second now guys whatever changes happen to the button or the rectangular element over here it will happen with a transition of 1 second so when we save this file now and now when we get the mouse cursor over here as you can see there's a transition of 1 second that we can see now guys we also want to hide this rectangular element before we get the mouse cursor over here on the button so what we get can do is simply inside the button class we will say overflow CSS property it must be hidden so guys whatever elements are present outside of the border of this particular button class will be hidden by default so let me just save this file now so as you can see there is no element that can be seen and when we get the mouse cursor over here as you can see this is the way that the animation is happening now guys when the element covers the button we want to change the text of the hover me that is present over here to white color so what we can do is simply we will say button class and then we will have the hover pseudo class over here and then we will have the color it is equal to white color let me just save this file now and now when we get the mouse cursor over here as you can see there is a smooth transition that is happening and the color of the overover me text is also getting converted to white color in this case so guys in this way you can create a cool animation over here with the help of the HTML and the CSS properties now guys if you want to change the color of the button simply as I have told you you can come to this variable and then change the color so let's say we want some version of the green color over here so let's set the color to green color this time and when we save this file now as you can see this is the button that is getting displayed on the web page and when we get the mouse cursor over here you can see the cool button animation that is happening so guys in this way you can set the required color based on your requirements as per the project so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video in which we are going to create more HTML and CSS project so stay tuned so now we are going to create a card hover animation over here so basically we are going to create the simple card along with some box Shadow over here and when the user gets the mouse cursor on this card as you can see on the right hand side we are going to animate certain HTML elements with the help of the Pudo elements that we will Define inside the the external stylesheet using the CSS properties so guys basically this is the cardover animation that we are going to create so guys let us move to the vs code so now we will create a new folder inside HTML CSS projects so in this case we are going to create 08 uncore and then card over animation as the name of the folder and then guys inside this we are going to create two files that is the index.html file and the style. CSS file as well so guys basically we have both these files inside the card hover animation folder and then inside the HTML file we are going to make use of this EMT abbreviation in order to generate this HTML template so guys inside the title tag we are going to say card over animation as the title of the page and we are going to link this style. CSS file as the external stylesheet over here by using the link colon CSS M abbreviation so guys basically for the hdf attribute we have to provide the external stylesheet as you can see now guys inside the body tag we are going to create the diff tag with the class container so basically we have the class over here for the diff tag and inside this div we are going to create another diff tag over here and then simply we are going to have the class name that is card and then inside this D tag we are going to have two more div tags first of all we will have the diff tag with the class name over here so for this we are going to set the name as programming for beginners that is the name of this YouTube channel that you should definitely subscribe if you have not done so and then apart from this we are going to have another diff tag with the class roll over here and then for this diff tag we are going to say YouTuber and coder over here so guys basically we have these two statements inside the diff tags let me just save this file now and let us see how the changes look like on the browser so we are going to run this live server over here so these are the two statements that are getting displayed over here now guys we are going to provide certain CSS properties in this case so first of all for the container class let us Define certain CSS properties over here so guys let us provide the width in this case so let's say we have 250 pixels of width and also a height over here so basically we will provide the height of 600 pixels this time apart from this we will also provide the white color as the background color over here let us change the version of the white color this time and let us provide this grayish color as the background color for this particular container class let me just save this file now so as you can see this is the container that is getting displayed let us adjust the height in this case so that we can see the card properly on the screen so we have provided the width of 200 pixels and the height of 300 pixels over here and this is how the card will look like now guys what we will do is we want to get this card at the center of the screen over here so simply we will provide margin as Auto Value this time so when we save this file as you can see the card is now present at the center of the screen apart from this we will also provide certain CSS properties to the card class that is present inside the container so guys what we can do is we can simply provide the card class name over here and also we will set the width and height as 100% so that the card class takes the entire width and height of the container class over here and then apart from this we will also provide display it is equal to flex and we will say justify content as Center so that we are able to get this text at the center of this particular container so when we save this file now as you can see we are getting programming for beginners and then YouTuber and coder over here guys by default the flex direction is row over here so what we have to do is we need to make the flex direction as column so that both these strings are displayed vertically so guys over here we will say Flex Direction it is equal to column let me just save this file now so as you can see now both the text are now present at the center of the container as far as vertical alignment is concerned apart from this we will also provide text align it is equal to Center so that we get them at the center of the container as far as horizontal alignment is concerned apart from this let us also provide certain border radius over here for the container class so let's say we have the Border radius this time of 20 pixels and also we will provide the Box Shadow over here so we will provide the blur effect with the color that is black in this case so guys basically we have 0 pixels of horizontal and vertical box Shadow and we are providing the blur effect of 20 pixels with the black color when we save this file now as you can see it is giving the shadow over here for this particular card let us also adjust the background color over here to some extent so that it looks more decent so as you can see it is now looking more decent over here after adjusting the background color guys as for your requirements you can provide your own background color based on the project requirements now guys apart from this we will make use of the before and after sudo elements in order to create more HTML elements over here that will help us in order to provide the hover animation so what we will do is for the card class we are going to create the before Pudo element so in this case we make use of the card class followed by two * colon and then we will say before seudo element and then guys over here what we have to do is first of all we will have to provide the content it is equal to blank so we provide two times double string over here and then apart from this we also have to set the position it is equal to Absolute now guys since we are making the position equal to Absolute over here we need to make the position equal to relative for this particular card class so over here we will provide the position it is equal to relative this time and now since we have provided the position equal to Absolute for this before sudo element we can simply provide the top CSS property as zero and also the left CSS this property as zero so that this new element starts from the top left corner of this particular card and then apart from this we will also set the width as 100% over here and also the height as 100% so that it takes the entire width and height of the card in this case now guys apart from this let us also provide the background color over here so we will provide a blue version of the background color this time and let us set this lighter Blue version and as the background color for this before element when we save this file now as you can see the entire card is now getting covered with the help of this before sudo element now guys apart from this what we have to do is we will provide the transform CSS property as well in which case we are going to provide the skew over here so we are going to provide the skew by 30° so when we save this file now as you can see this is the skew CSS property that is applied on this particular pseudo element and let us also to translate it to the right hand side so basically for this transform CSS property after the skew function that we have provided we can simply provide the translate function as well so we will provide translate X and we will move it by 50% over here when we save this file now as you can see we have moved it by 50% let us move it by 100% over here and see how it looks like so in this case we have moved it to 100% this time so guys in this way we have provided one of the HTML Elements by using using the before seudo element which is part of this particular card class over here now guys let me just adjust the background color for the Pudo element to this particular Blue version of the color so as you can see this is the Pudo element that is getting generated over here now guys similarly we will have another HTML element with the help of the after sudo element over here so simply I'm going to copy paste these lines of code over here and instead of having before we will say after this time and all the CSS properties will be same except the skew for which we have to provide 30° so that it is opposite to the one that we have already created so when we save this file now as you can see this is the way that the after element is also getting created over here now guys the portion that is going outside of this particular card we want to hide it so simply what we can do is for this container we can again provide the position it is equal to relative again since it is a container and simply we will say overflow it is equal to Hidden so that whatever h HML is outside of the boundary of the container it will be hidden so when we save this file now the portion of the Pudo elements that we had created which was going outside of the card is Now hidden this time guys apart from this we will also provide certain opacity as well to both these Pudo elements so over here we will provide the opacity CSS property and let's say we provide the opacity it is equal to 0.7 so that we have certain kind of transparency which can be used in order to display this text when we get these hudo elements at the center of this card during the card over animation so guys we have provided the opacity as well of 0.7 for both these cards now guys similarly we will create the before and after seudo elements for this container class as well but this time we will make changes as far as translate X is concerned so over here simply I'm going to copy paste these lines of code once again and instead of the Dot card over here we will have dot container this time for both before and the after pseudo elements and then we are going to keep all the CSS properties same over here except the translate X this time in which case we are going to make it as 85% over here so guys basically the translate X for both that is before and after Pudo elements will be 85% this time when we save this file now as you can see we have another layer of the same sudo elements that is getting displayed over here now guys apart from this we can also provide certain box Shadow for the Pudo elements that we had created previously so that we can see them properly over here so inside this card class with the before element simply we are going to provide the Box Shadow this time and then we will have the 10 pixels of box Shadow and we will have the color as blue so let us see how it looks like when we save this file now as you can see this is the Box shadow that is getting appeared over here similarly we are going to have the box Shadow for the after pseudo element ment as well so when we save this file now as you can see over here we are getting the Box Shadow this time now guys when we get the mouse cursor on this card we want the Udo elements to come towards the left hand side over here so what we can do is simply on Hover event we can change the translate X CSS property so guys over here first of all for the card class we are going to define the hover sudo class over here and then after this we want to change the translate X property for the pseudo element over here so guys simply for the card class in this case we are going to make use of the hover class over here and then we are going to make use of the seudo element that is before and then what we have to do is we will simply say transform and then we can say translate this time and we will have translate X and it should come to 50% over here so guys basically we are moving the before sudo element by 50% on left hand side and then guys similarly for the after sudo element as well we want the same transformation so we provide comma and then we provide the after sudo element over here so basically as you can see the skew is getting removed over here so simply what we can do is we can also provide the skew as well so we need to provide it separately so over here we have provided the translate X it is equal to 50% and also we will keep the skew as 30° over here and then apart from this for the after sudo element as well we will again translated by 50% and the skew this time must be 30° so over here we can provide the 30° as the skew parameter so guys when we get the mouse cursor over here as you can see it is moving now towards the left but guys basically we want the smooth transition as well so what we will do is we have to provide the transition CSS property to all these sudo elements so basically we will say transition all and then we will provide 0.5 seconds over here and simply I'm going to copy copy paste these lines of code for all the pseudo elements so that we have the transition that is smooth this time and then apart from this let us also increase the translate X so that it doesn't go towards the extreme left of the card so basically we are going to keep it as 80% over here for both these pseudo elements this time so when we save this file now as you can see this is the way that the transition is happening over here similarly we will provide the transition for the container Pudo elements that is before before and after so instead of having the class we will simply say container over here and then we will provide the translate X this time it should be 65% over here so when we say 65 so that there is a gap of 15% between the Udo elements of both that is the card class and the container class as well so when we get the mouse cursor over here as you can see we are getting the animation for this particular card over here so guys basically we have the issue over here when we get the mouse cursor on this particular sudo element the other sudo Udo element is going back to its original position so in order to solve that we can simply provide the container H class for all these Transformations that we have provided so let me change that quickly over here so guys as you can see we have the hover Udo class for the container class over here and then after that we have provided the before and after sudo element for the card class and also the before and after Pudo element for the container class as well so when we save this file now now you can see that all the elements are now coming together as far as the animation is concerned so guys in this way you can create the simple card hover animation over here based on your requirements you can change the colors as well and then apart from this we can also make some changes to the text that is getting displayed over here so we can also provide certain scaling as far as the transformation of this text is concerned when the user gets the mouse cursor on these cards over here so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video video so that it reaches to more people and subscribe to the channel so that you get the notifications on upcoming videos as well I'll see you in the next video in which we are going to create more HTML and CSS projects so stay tuned so now we are going to display these analytics icons as you can see this is the like or the heart icon and then we have the comment icon as well and then we have the share icon as well and when the user gets the mouse cursor over here on these icons they are going to scale themselves by 1.5 times time so guys let us move to vs code so guys let us create another folder over here inside the HTML CSS projects folder so in this case we are going to have the folder name as analytics data so guys basically we have this new folder over here inside which we are going to create the index.html file and the style. CSS file as well so now we have created both the files over here now inside the index.html file we are going to quickly create the HTML document and we we have the title that is analytics data for Instagram so guys simply we are going to have three icons over here in order to have the like button comment button and the share button in this case now apart from this we will also link the external stylesheet that is style. CSS file with the help of the link tag over here and the HF it is equal to style. CSS now guys inside the body tag over here simply we are going to have the diff tag with the class container this time and then inside this we are going to have the a tag first of all so basically we make use of this a tag inside which we are going to make use of the Box icon so guys basically in order to make use of the icons you can simply use the Box icons.com website where you will find the CSS link over here so simply I'm going to copy this particular link I will provide both these links in the description section below so let me just copy this link and paste it under the head section of the HTML file so guys basically the this is the URL from where the icons will be referenced and will be displayed on the web page wherever we are going to make use of the Box icons now guys after this we have to go to the website that is box icons.com so simply let me just open this website on the browser so guys over here this is the Box icons website now over here simply you can search for the different icons so the first icon that we want to use is the heart icon this time so simply we have searched for heart and when we press enter as you can see this is the icon that we want to use you can use any of the icons based on your project requirements now guys we will click on this particular icon and as you can see on the right hand side we have to go to this font option and then we have this I tag over here with the class name so guys basically this class is used in order to refer to this particular icon from the box icons website so let me just copy this I tag over here inside the a tag and then after this we will also have the span tag over here and simply we will have the class as data for the span tag and then we will have the content as 60 over here so we can have any dummy data over here in order to show the count of the hearts and then apart from this let me just copy paste these lines of code that is the links multiple times over here instead of heart in this case we are going to have the other icons that is comment and the share button so over here we search for comment and basically this is this is the command that we want to show on the web page so when we click on this we are going to copy this particular itch and similarly let me copy the itag for the share icon as well so guys over here as you can see we have the itags with the different class names that will help us in order to display the icons on the web page now guys let me just save this file now and let us start the live server over here so guys as you can see these are the three icons that we have displayed on the web page so guys now we will provide certain CSS properties to these CL classes that we have defined inside the HTML file so inside the style. CSS file for the container class let us provide certain background color over here and this time we will provide the white version of the background color over here so guys basically we will set this particular background color this time and also we will provide the padding so let's say from top and bottom we want 10 pixels of padding and from left and right we want 20 pixels of padding let me just save this file now as you can see this is the diff tag that is getting displayed over here guys apart from this we will also set the width as well so let's say we provide the width of 30% over here when we save this file as you can see this is the div that is getting displayed and then after this also we will make the display it is equal to flex and also we will set the justify content it is equal to Center so that all the icons are displayed at the center as far as the horizontal alignment is concerned now guys you can see that there is no spacing in between these icons so what we will do is instead of providing the center as the justify content we will say space evenly over here so when we save this file now as you can see there is enough space over here in between all the icons now guys what we can do is simply we can also provide the Border radius as well so we will provide the 20 pixels value for the Border radius and also we will provide the Box Shadow so let me just provide the horizontal and vertical box Shadow and over here we will provide the shadow as dark blue color this time so when we save this file now as you can see we are getting the dark blue color as the shadow for this particular diff tag now guys let us get this D tag at the center of the screen so simply we will provide margin it is equal to Auto so as far as the horizontal alignment is concerned we have got the diff tag at the center of the screen guys this is just a part of the web page in which case you can provide all these icons which is the part of the analytics and user can interact with these icons in order to like comment or share and if you are new to this YouTube Channel please make sure that you subscribe to this YouTube channel so that you get the notifications for the upcoming videos in which we are going to create more HTML and CSS projects now guys so far we have provided the required CSS properties for this particular diff tag now inside the diff tag we need to provide the CSS properties for all these links which are being represented by this a tag over here so guys what we will do is simply we will provide the class name over here as link this time for the a TXS and then let me just copy the class names for all the a tags over here so that we can provide the CSS property to this link class so guys let me just copy this link class name over here and then inside this first of all we will provide text decoration as none so that we don't get this underline as you can see so when we save this file now there is no more underline apart from this we want to change the font color to Black by default so we provide the black color is the font color so when we save this file now you can see the changes this time now guys what we want to do is we want to change the font colors of these icons as well we will keep this heart icon as red color so instead of providing the CSS properties inside the external style sheet we will simply provide the inline style over here so for this particular IE class that is having the heart icon simply we will provide the style and we will say color it is equal to Red this time so when we say save this file now as you can see we are getting the red color over here apart from this we will also provide the color CSS property for the other two icons as well so for the comment part let us provide the color as blue over here and for the share part let us provide the other color that is green color this time so guys basically we have the red blue and green color for all these icons when we save this file now as you can see these are the colors that are getting displayed over here now guys when the user gets the mouse cursor on these icons we want to increase its size so what we can do is simply inside the link class we need to refer to this it tag over here so we come to this style. CSS file we provide this link class and then the I tag over here and then after this we want to make use of the transform CSS property in which case we will make use of the scale function over here we will say that it should scale by 1.3 times this time so when we save this file now so if you see the change this already there is a scaling that is happening over here now guys we want the scaling on the mouse hover so we have left out the hover sudo class this time so simply we provide the colon after the it tag and then we say hover sudo class when we save this file now as you can see these are the default sizes for all these icons and when we get the mouse cursor over here you can see that the scaling is happening by 1 point three times over here let us increase the scaling by 1.5 this time so that it gives a decent look so when we save this file now as you can see this is a scaling that is happening and we want the scaling to happen smoothly so simply for the link class we can provide the transition CSS property and we can say all over here and let's say we provide 0.5 second as the timing so when we save this file now we still cannot see the transition that is happening smoothly so guys we have done the mistake over here this CSS property should belong to the it tag this time so basically we will provide the link class follow by the it tag and then over here we will provide the transition CSS property we will say all and then 0. 5 seconds so since we are making the changes for this I tag the transition property should be associated with the I tag over here so when we save this file now and get the mouse cursor over here as you can see the transition is happening now the scaling of the icon is happening to 1.5 times with the 0.5 seconds timing so guys in this way you can provide your own buttons based on your requirements with the help of these icons the links I have already given in the description section below so comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video in which we are going to create more HTML and the CSS projects so stay tuned so guys now we are going to create this simple registration form in which case we are going to have multiple input Fields over here along with the password input field as well and when the user gets the mouse cursor on any of the input Fields as you can see when we click on this input field over here we are going to get this feedback with the help of this box Shadow on that input field so guys basically when you click on any of the input Fields over here we will have the box Shadow for that particular input field and apart from this when we get the mouse cursor on this register button it is going to scale itself with the help of the scale function so guys we are going to create this registration form so let us move to the vs code so now we will create another folder over here inside the HTML CSS projects we will name it as registration form so guys basically we have this new folder that is created inside this we are going to create the HTML and the CSS files so basically we have the index.html file and the style.css file which will be the external style sheet over here now guys inside the HTML file we are going to create this HTML document and then we will have the title that is registration form over here for the title tag and then we will also link the external stylesheet with the help of this link tag over here so we have the HF it is equal to style. CSS file now guys over here inside the body tag we will have the div tag with the class container inside which we are going to have the different input fields that will help the user in order to complete the registration so guys basically we have the stiff tag with the class container over here now let us provide certain input Fields over here so we use the input tag along with the type it is equal to text and then the first input field will be the full name over here we will also keep the ID value as same that is full name this time and then we will also have the placeholder and we will say enter full name over here so guys basically we have the full name as the first input field apart from this letters also have the class attribute this time and then we will say input hyphen field over here so guys basically we are going to provide certain CSS properties to this class name and then after this let us provide certain line brakes over here so we have couple of line brakes this time now similarly we will provide more input Fields over here so let me just copy paste this line of code and then after the full name we will ask the user to provide the username over here and then the same value we will provide for the ID part as well and for the placeholder as well and then for the third input field we will ask the user to provide password so that the user can set the username and password over here so basically we have the password as the third field and then we will ask to confirm the password so basically user is supposed to provide the password once again so that there is no mistake that is made by the user so basically we have confirm password as the placeholder this time guys for these two input fields that is password and confirm password we will keep the type as password over here so that it is not visible to anyone else on the screen so basically we have set the type as password over here and then guys in the end we want the email of the user to be set so basically so we have provided the name value as email over here and also the ID as well and for the placeholder as well we have updated the enter email this time so guys basically we have all these input Fields inside the container and then guys after this also we will provide the button as well for registration so simply we provide the button tag over here and also we will provide the class as register over here so this is the button tag with the class register and also we will have the text that is register for this particular button let me just save this file now and start the server so that we can see the changes on the web page so guys as you can see these are all the input Fields by default that are getting displayed over here we have not provided any CSS properties so far so guys basically we are going to provide the CSS property these one by one in order to make this registration form look more attractive so guys what we will do is inside the style. CSS file first of all we will make use of this class name that is container over here so we simply provide dot followed by the container class and then we will have the width of 30% so let's say we have the width of 30% over here also we will provide certain background color so let's say we have this light version of green color as the background color this time so let me just save this file now as you can see we have this light version of the green color as the background color over here apart from this we will also set the display it is equal to flex and since all the flex items must be present in a column so basically we will set the flex direction as column over here so when we save this file now as you can see these are all the flex items that are displayed right now now guys apart from this we also want to set the padding as well so simply we will keep the padding as 20 pixels and also we will provide certain border radius over here so we provide the Border radius of 20 pixels once again we will provide the Box Shadow so over here we will provide 10 pixels of blur effect with the color that is black color over here when we save this file now as you can see this is the registration form that is getting displayed this time now guys apart from this we also want the margin it is equal to Auto so that we can get the registration form at the center of the screen over here as far as the horizontal alignment is concerned so as you can see this is a very simple registration form that the user can use in order to register himself or herself now guys after this let us provide certain CSS properties for these input Fields over here so simply we are going to make use of this class name that is input hyphen field so let me just copy this class name and then inside the style. CSS file we will make use of this class name over here first of all let us provide certain padding so let's say we have the padding of 10 pixels over here also we have the Border radius of 10 pixels let me just save this file now as you can see this is the way that the registration form is getting displayed this time apart from this let us also remove the line brakes that we have provided since it is creating the Extra Spaces in between the input Fields so guys over here we have only kept one line break let me just save this file now and as you can see these are all the input fields that are getting displayed over here now guys what we want to do is when the user gets the mouse cursor over here and clicks on any of the input fields we want certain box Shadow to be provided to these input Fields so simply inside the style. CSS file we have to make use of this class name that is input field over here and we will make use of the pseudo class that is focused this time so guys basically this Pudo class is responsible in order to provide any CSS properties when the user gets the mouse cursor on the input field and Clicks in inside the input field over here so that is the time when those CSS properties will be applied so guys over here what we will do is simply we will provide the Box Shadow over here and this time we will say 10 pixels of box Shadow and we will provide the blue color as the Box Shadow this time when we save this file now when we get the mouse cursor over here and click on it as you can see we are getting the blue color over here and when we click on the other input Fields as well we are getting the blue color as the Box Shadow let us in increase the blur effect to 15 pixels over here when we save this file now as you can see the blue color is now getting more visible over here with the light green background color that we have provided to The Container now guys apart from this let us also provide certain CSS properties to this register button over here so simply we will make use of this register class and then we will provide certain CSS properties to this register class by using the dot character so over here first of all we will provide the width as minimum content over here let me just save this file now as you can see only the required space is being taken by this particular button also for this container we will set the Align items so that we get all the items at the center of the container so when we say align items it is equal to Center as you can see all the input fields and the register button is now at the center of the container and for the input field we will set the width as 80% over here so that there is no Extra Spaces that is left as you can see on the left hand side and the right hand side of the input Fields so basically we will keep the width as 80% over here so as you can see 80% of the space is being taken by all the input Fields this time now guys for the register button let us provide more CSS properties over here so we will provide the background color over here as green color also we will set the color as white color that is the font color over here and then apart from this we will also set the padding of let's say 5 pixels time and the Border radius as well so simply we will say border radius of 10 pixels and we save this file now as you can see this is the button that is getting displayed over here we will also remove the border so simply we will say border it is equal to none and let us increase the padding to 10 pixels this time so this is a decent register button that is getting displayed over here also we want to change the cursor icon so we will set the cursor it is equal to pointer so when we get the mouse cursor over here here on the register button it is getting converted to the hand tool over here now guys apart from this when the user gets the mouse cursor on this register button we want to scale the button so how we can do that so simply we will make use of the over sudo class over here so we will say register colon over and then simply we will say transform and this time we will make use of the scale and it should scale by 1.2 times over here so when we save this file now and when we get the mouse cursor over here as you can see the button is scaling Itself by 1.2 times that we have provided and if we want the smooth transition simply we will provide the transition CSS property to this register button over here so we provide transition and we will say all and this time we will say 0.5 seconds as the timing when we save this file now and now when we get the mouse cursor as you can see there's a smooth transition that is happening over here the register button is increasing its size so guys basically this is the way that you can provide the transition effect to any of the HTML elements based on your requirements and then guys when we get the mouse cursor over here and click on any of the input Fields basically we are getting the Box shadow of the blue color this time so that the user gets the feedback that this is the input field that is getting clicked and you are supposed to provide the data inside this field so guys simply let us provide certain data over here so we have programming for beginners that is the name of this YouTube channel which you should definitely Please Subscribe if you have not done so and let us provide the programming as the username also we will provide the password so let's say we provide some password over here and also we want to confirm password so simply we provide the password and then we will provide certain email ID over here so program at gmail.com and then simply the user have to go to register over here in order to register himself or herself so guys this is a very simple registration form that we have created just by using the plane HTML and the CSS properties so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video in which we are going to create more HTML and the CSS projects so stay tuned
