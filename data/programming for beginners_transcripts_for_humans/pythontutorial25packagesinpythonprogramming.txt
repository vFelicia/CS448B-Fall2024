With timestamps:

00:00 - hey what's up guys welcome to another
00:02 - video in which we are going to learn
00:03 - about packages in Python Programming so
00:06 - guys a package is a container that
00:08 - contains various functions to perform
00:10 - specific tasks so for example let's say
00:13 - the math package that we had seen
00:14 - previously it includes the square root
00:17 - function to perform the square root of a
00:19 - number and this math package we had
00:21 - imported previously as well so while
00:23 - working on big projects we have to deal
00:25 - with a large amount of code and writing
00:27 - everything together in the same file
00:29 - will make our code look messy and we
00:32 - also want our code to be readable so we
00:34 - cannot afford that so instead we can
00:37 - separate our code into multiple files by
00:39 - keeping the related code together inside
00:42 - the packages so let us check what the
00:44 - package model structure in Python
00:45 - Programming looks like so over here as
00:48 - you can see we have a package that is
00:49 - game at the outside and in order to make
00:52 - the python interpreter understand that
00:55 - this is a package we need to have a file
00:57 - with this name that is underscore
00:59 - underscore follow by in it and then 2
01:01 - times underscore followed by dot Pi so
01:03 - this is the file that will tell the
01:06 - python interpreter to treat this game as
01:08 - one of the packages and then inside that
01:10 - we can have more sub packages so as you
01:12 - can see we have a sub package called
01:14 - sound inside which there are different
01:16 - sounds that can be present we have
01:18 - another sub package that is image and
01:20 - then we have another sub package at this
01:21 - level and in all these sub packages we
01:24 - have this underscore underscore init
01:26 - followed by two times underscore and
01:28 - then dot Pi these files must be present
01:31 - in order to make the python interpreter
01:33 - understand that these are the sub
01:35 - packages inside the main package that is
01:37 - game so guys let us check this with the
01:39 - help of examples how we can create the
01:41 - packages and how we can use them in our
01:43 - projects so basically this is our main
01:45 - code that is python code over here what
01:47 - I will do is I will come out of this and
01:50 - I'll create a new folder so let's say I
01:52 - have create the game folder over here
01:54 - and inside this folder what we have to
01:56 - do is we will be creating these sub
01:58 - packages over here but before for
02:00 - creating these are packages let us
02:01 - create this file that is the init file
02:03 - which will tell the python interpreter
02:05 - that this is a package so we will come
02:08 - over here we say new file and then two
02:10 - times underscore we have init and then
02:13 - underscore dot Pi so this is one of the
02:16 - files over here which will tell the
02:18 - python interpreter that this is a
02:20 - package and we will keep the file as
02:22 - blank over here for now and we will come
02:24 - to this game and then again we will
02:26 - create another folder this time it is
02:28 - going to be the sound package so we have
02:30 - sound package over here and inside this
02:32 - we will again create a file that is the
02:34 - init file so we have init file over here
02:39 - so we will keep this init file as it is
02:41 - for now so we have created game and then
02:43 - inside that we have a sub package that
02:45 - is sound let us create a file inside the
02:48 - sound package so what we will do is
02:49 - inside this we will create a new file
02:52 - over here and then we will say load Dot
02:54 - py and inside this file let's say we
02:57 - Define the function that is load and
03:00 - then we have a colon over here so what
03:02 - we will do is we will simply have the
03:04 - print statement and we will say inside
03:07 - sound
03:09 - package and load function so guys this
03:14 - will tell us that we are inside the
03:15 - sound package and inside the load
03:17 - function over here now guys let us say
03:19 - we want to create another sub package
03:21 - that is level and we want to create the
03:24 - start python file over here so what we
03:26 - will have to do is we again come to this
03:28 - game and then we create another folder
03:30 - and then we have this level sub package
03:33 - and inside this package again we will
03:35 - create the init file so we have this
03:37 - init dot p y over here we will keep this
03:41 - file blank for now and then what we will
03:43 - do is over here inside the level we will
03:45 - create another new file and we will say
03:47 - start dot py so this is another python
03:50 - file and what we can do is we can Define
03:52 - the function that is start followed by
03:55 - open and close parenthesis and then we
03:58 - can simply have the print function so
04:00 - guys what I'm going to do is I'm just
04:01 - going to copy and paste this print
04:04 - statement from here so we print and
04:07 - paste this over here and I'll say inside
04:10 - level package and start function guys we
04:14 - will just rename this function name as
04:15 - start followed by underscore function so
04:18 - that we come to know that this is the
04:20 - function that we are calling same thing
04:22 - we are going to do with the load as well
04:23 - so underscore function over here so guys
04:26 - pretty much we have created some good
04:28 - packages over here the outer package is
04:30 - the game and then we have two packages
04:32 - that is level and sound each of those
04:34 - packages are having the init file over
04:37 - here and then they are having their own
04:39 - functions at a start and load.py so now
04:42 - we will come out of this package that is
04:44 - outside the game package and we already
04:46 - have our main file that is python
04:48 - underscore code so what we have to do is
04:50 - let's say we want to call those
04:52 - functions that is start.py and over here
04:54 - that is low dot py so what we have to do
04:57 - is first of all we need to import the
04:59 - packages so while importing what we can
05:02 - do is import followed by game as you can
05:04 - see this game is coming now this is the
05:06 - auto complete feature of the vs code
05:08 - which is very code so we can use this
05:10 - game followed by dot as you can see both
05:13 - the sub packages that we had created are
05:15 - also being suggested over here so what
05:17 - we can do is let's say we provide level
05:19 - over here followed by Dot and then as
05:21 - you can see start that is the python
05:23 - file name that is start.py is getting
05:26 - suggested so we will use this so this is
05:29 - the way that we can import one of the
05:31 - files inside the existing packages so
05:33 - over here we have created the user
05:35 - defined packages and the user defined
05:37 - files which are having the user defined
05:39 - functions as well and those functions we
05:41 - are going to call now we can simply
05:43 - provide the print function and Then
05:45 - followed by again we will use the
05:47 - package name followed by Dot and then
05:49 - the sub package name that is level
05:51 - followed by Dot and then the start that
05:54 - is the name of the Python file followed
05:56 - by dot as you can see we are getting the
05:58 - start function as the selection so we
06:01 - will use this and then after this start
06:03 - function we have the open and close
06:04 - parenthesis since it is the function
06:06 - over here so let me just save this file
06:08 - and try running this code to see what
06:10 - will be the output as you can see inside
06:12 - level package and start function so this
06:15 - is a string that we had provided in our
06:17 - start function over here that is inside
06:19 - level package and start function let's
06:22 - say we want to call this load function
06:23 - over here so what we can do is again we
06:26 - will have the print statement and Then
06:28 - followed by in the same way we are going
06:30 - to call the load function so game
06:32 - followed by we need to get the sound sub
06:34 - package so over here we are not getting
06:36 - the sound sub package that's because we
06:38 - have not imported the sound yet so again
06:41 - we are going to have another import and
06:44 - then we have game followed by dot this
06:46 - time we are going to import the sound
06:47 - sub package followed by Dot and then we
06:50 - have load so now this time once we
06:52 - provide dot as you can see sound is
06:54 - getting also suggested over here so
06:55 - sound follow file dot we have load and
06:58 - then load function over here open and
07:00 - close parenthesis let me just save this
07:02 - file and try running this code now as
07:04 - you can see inside level package and
07:06 - start function and again inside sound
07:08 - package and load function is getting
07:10 - printed because that is the content that
07:13 - we had provided over here so guys this
07:15 - is the way that we can import different
07:16 - packages and the files inside those
07:19 - packages and call those functions as
07:21 - well now guys previously I have shown
07:23 - you what is the shorthand method so
07:25 - instead of typing everything that is
07:26 - packages and sub packages over here we
07:29 - can simply use the shorthand method over
07:31 - here while importing the library so
07:33 - after this we have the space character
07:35 - followed by the as keyword and then
07:37 - let's say I provide the name as the
07:39 - level and over here I provide the name
07:42 - as sound so what we can do is simply we
07:45 - can use the level and sound over here so
07:48 - let's say I provide level followed by
07:50 - Dot and then we have start function and
07:52 - over here once again this entire thing
07:55 - can be replaced and we can provide sound
07:57 - because that is the name that we have
07:59 - given to this package and the library
08:01 - hierarchy that we have imported so let
08:04 - me just save this file and try running
08:05 - this code pretty much the output will be
08:07 - same that is those two strings are
08:09 - getting printed over here once again as
08:11 - you can see but this is the shorthand
08:12 - method that we can use so guys this is
08:15 - the way that you can organize your code
08:17 - into different packages and write
08:19 - different methods as well inside those
08:21 - packages and the python files hopefully
08:23 - you have got enough knowledge about the
08:25 - packages in order to create your next
08:27 - big project as far as Python programming
08:30 - language is concerned please make sure
08:31 - that you practice on your own so that on
08:33 - different inputs you get different
08:34 - output also make sure that you like this
08:37 - video so that it reaches to more people
08:38 - and subscribe to this channel so that
08:40 - you get the notifications on upcoming
08:42 - videos as well the next video that we
08:44 - are going to talk about is numbers type
08:46 - conversion and Mathematics in Python
08:49 - Programming so stay tuned

Cleaned transcript:

hey what's up guys welcome to another video in which we are going to learn about packages in Python Programming so guys a package is a container that contains various functions to perform specific tasks so for example let's say the math package that we had seen previously it includes the square root function to perform the square root of a number and this math package we had imported previously as well so while working on big projects we have to deal with a large amount of code and writing everything together in the same file will make our code look messy and we also want our code to be readable so we cannot afford that so instead we can separate our code into multiple files by keeping the related code together inside the packages so let us check what the package model structure in Python Programming looks like so over here as you can see we have a package that is game at the outside and in order to make the python interpreter understand that this is a package we need to have a file with this name that is underscore underscore follow by in it and then 2 times underscore followed by dot Pi so this is the file that will tell the python interpreter to treat this game as one of the packages and then inside that we can have more sub packages so as you can see we have a sub package called sound inside which there are different sounds that can be present we have another sub package that is image and then we have another sub package at this level and in all these sub packages we have this underscore underscore init followed by two times underscore and then dot Pi these files must be present in order to make the python interpreter understand that these are the sub packages inside the main package that is game so guys let us check this with the help of examples how we can create the packages and how we can use them in our projects so basically this is our main code that is python code over here what I will do is I will come out of this and I'll create a new folder so let's say I have create the game folder over here and inside this folder what we have to do is we will be creating these sub packages over here but before for creating these are packages let us create this file that is the init file which will tell the python interpreter that this is a package so we will come over here we say new file and then two times underscore we have init and then underscore dot Pi so this is one of the files over here which will tell the python interpreter that this is a package and we will keep the file as blank over here for now and we will come to this game and then again we will create another folder this time it is going to be the sound package so we have sound package over here and inside this we will again create a file that is the init file so we have init file over here so we will keep this init file as it is for now so we have created game and then inside that we have a sub package that is sound let us create a file inside the sound package so what we will do is inside this we will create a new file over here and then we will say load Dot py and inside this file let's say we Define the function that is load and then we have a colon over here so what we will do is we will simply have the print statement and we will say inside sound package and load function so guys this will tell us that we are inside the sound package and inside the load function over here now guys let us say we want to create another sub package that is level and we want to create the start python file over here so what we will have to do is we again come to this game and then we create another folder and then we have this level sub package and inside this package again we will create the init file so we have this init dot p y over here we will keep this file blank for now and then what we will do is over here inside the level we will create another new file and we will say start dot py so this is another python file and what we can do is we can Define the function that is start followed by open and close parenthesis and then we can simply have the print function so guys what I'm going to do is I'm just going to copy and paste this print statement from here so we print and paste this over here and I'll say inside level package and start function guys we will just rename this function name as start followed by underscore function so that we come to know that this is the function that we are calling same thing we are going to do with the load as well so underscore function over here so guys pretty much we have created some good packages over here the outer package is the game and then we have two packages that is level and sound each of those packages are having the init file over here and then they are having their own functions at a start and load.py so now we will come out of this package that is outside the game package and we already have our main file that is python underscore code so what we have to do is let's say we want to call those functions that is start.py and over here that is low dot py so what we have to do is first of all we need to import the packages so while importing what we can do is import followed by game as you can see this game is coming now this is the auto complete feature of the vs code which is very code so we can use this game followed by dot as you can see both the sub packages that we had created are also being suggested over here so what we can do is let's say we provide level over here followed by Dot and then as you can see start that is the python file name that is start.py is getting suggested so we will use this so this is the way that we can import one of the files inside the existing packages so over here we have created the user defined packages and the user defined files which are having the user defined functions as well and those functions we are going to call now we can simply provide the print function and Then followed by again we will use the package name followed by Dot and then the sub package name that is level followed by Dot and then the start that is the name of the Python file followed by dot as you can see we are getting the start function as the selection so we will use this and then after this start function we have the open and close parenthesis since it is the function over here so let me just save this file and try running this code to see what will be the output as you can see inside level package and start function so this is a string that we had provided in our start function over here that is inside level package and start function let's say we want to call this load function over here so what we can do is again we will have the print statement and Then followed by in the same way we are going to call the load function so game followed by we need to get the sound sub package so over here we are not getting the sound sub package that's because we have not imported the sound yet so again we are going to have another import and then we have game followed by dot this time we are going to import the sound sub package followed by Dot and then we have load so now this time once we provide dot as you can see sound is getting also suggested over here so sound follow file dot we have load and then load function over here open and close parenthesis let me just save this file and try running this code now as you can see inside level package and start function and again inside sound package and load function is getting printed because that is the content that we had provided over here so guys this is the way that we can import different packages and the files inside those packages and call those functions as well now guys previously I have shown you what is the shorthand method so instead of typing everything that is packages and sub packages over here we can simply use the shorthand method over here while importing the library so after this we have the space character followed by the as keyword and then let's say I provide the name as the level and over here I provide the name as sound so what we can do is simply we can use the level and sound over here so let's say I provide level followed by Dot and then we have start function and over here once again this entire thing can be replaced and we can provide sound because that is the name that we have given to this package and the library hierarchy that we have imported so let me just save this file and try running this code pretty much the output will be same that is those two strings are getting printed over here once again as you can see but this is the shorthand method that we can use so guys this is the way that you can organize your code into different packages and write different methods as well inside those packages and the python files hopefully you have got enough knowledge about the packages in order to create your next big project as far as Python programming language is concerned please make sure that you practice on your own so that on different inputs you get different output also make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is numbers type conversion and Mathematics in Python Programming so stay tuned
