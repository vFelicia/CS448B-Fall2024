With timestamps:

00:00 - hey what's up guys welcome to another
00:02 - video in which we are going to learn
00:03 - about Anonymous or Lambda function in
00:06 - Python Programming so guys in Python an
00:08 - anonymous or Lambda function is a
00:11 - special type of function without the
00:13 - function name so we use the Lambda
00:15 - keyword instead of Def that is defined
00:18 - to create a Lambda function so as you
00:20 - can see this is the syntax previously we
00:22 - had used the def keyword in order to
00:25 - create the normal functions but this
00:27 - time we are going to use the keyword
00:29 - that is Lambda along with the arguments
00:31 - which are optional over here and then
00:33 - followed by a colon and then we have the
00:35 - expression so this is one of the
00:37 - examples of the Lambda function over
00:39 - here we have the Lambda keyword followed
00:41 - by the colon over here and then we have
00:44 - the expression that is we are printing
00:46 - the hello world string and this entire
00:48 - function that is the anonymous function
00:50 - which is not having any name over here
00:53 - is being assigned to a variable that is
00:55 - grid and then this grid needs to be
00:57 - called as you can see called the Lambda
00:59 - over here along with the open and close
01:01 - balance SS so when we have this line of
01:04 - code over here this Lambda function will
01:06 - be called and hello world will be
01:07 - printed on the screen so guys let us
01:09 - check this with the help of example over
01:11 - here so what we will do is simply we
01:13 - will have the Lambda keyword first of
01:15 - all and Then followed by a colon and
01:18 - then let's say we want to print the name
01:20 - of this YouTube channel that is
01:21 - programming for beginners which you
01:23 - should definitely subscribe if you have
01:25 - not done so so we have programming for
01:28 - beginners over here so this is a Lambda
01:30 - function or the anonymous function
01:32 - without having any name and then let's
01:35 - say we assign it to a variable and we
01:37 - can simply provide the variable name as
01:39 - Str and then we have the equal to
01:41 - operator over here now what we have to
01:43 - do is simply we need to call this Str
01:45 - variable so over here on the new line we
01:48 - will have Str followed by open and close
01:51 - parenthesis and this is the way that we
01:53 - call the anonymous function so let me
01:55 - just save this file and try running this
01:56 - code now
01:59 - so as you can see programming for
02:00 - beginners is getting printed over here
02:02 - and this is one of the simple examples
02:05 - as far as Anonymous function or Lambda
02:07 - function is concerned in Python
02:09 - Programming now guys very important
02:10 - thing what if you have certain arguments
02:12 - which you want to print so this is kind
02:14 - of a static function which is having a
02:16 - fixed string that you want to print but
02:18 - let's say you want to provide some
02:20 - string over here while calling the
02:22 - function so in case let's say we have
02:24 - this argument as this is a string that
02:29 - we want to print so this Str that is the
02:31 - Lambda function is being called but this
02:34 - value needs to be caught by this Lambda
02:36 - function over here so what we can simply
02:38 - do is we can take this argument after
02:40 - this Lambda keyword as we have seen in
02:43 - this syntax after the Lambda keyword we
02:45 - have the list of arguments that we can
02:47 - take and use them in the form of
02:49 - Expressions over here so what we will do
02:51 - is let's say I provide Lambda and Then
02:53 - followed by X so this x variable will
02:56 - have this value whatever we pass while
02:58 - we are calling this is Str function that
03:00 - is the anonymous function so this x we
03:02 - can use in our expression inside this
03:04 - Lambda function so let's say I provide a
03:06 - label over here string
03:08 - past and Then followed by colon and then
03:12 - I have comma and Then followed by this x
03:14 - variable which is being passed so this
03:16 - is a string it is one of the arguments
03:18 - that we are passing to the Lambda
03:20 - expression and the X variable will be
03:22 - assigned to this value and it will be
03:24 - printed by using this print statement so
03:27 - let me just save this file and try
03:28 - running this code now so as you can see
03:30 - string past this label is getting
03:32 - printed and then the value of x which
03:34 - was passed from this calling of the
03:37 - Lambda function over here that is this
03:39 - is a string and the same thing is
03:41 - getting printed over here so guys this
03:43 - is the way that we can pass arguments or
03:45 - parameters to our Lambda or Anonymous
03:47 - functions over here now guys there is
03:49 - another variation can we have the
03:51 - multiple arguments let's say we have two
03:53 - or more numbers for which we need to
03:55 - find the sum of those numbers can we
03:57 - find the sum of those numbers by using
03:59 - the Lambda function so let us quickly
04:01 - check this with the help of examples
04:03 - over here so what we will do is again we
04:05 - will Define the Lambda function over
04:07 - here so we have Lambda keyword and this
04:09 - time we will take two numbers so let's
04:11 - say the two numbers are stored in these
04:13 - variables that is X and Y and Then
04:14 - followed by a colon and then what we can
04:16 - do is simply we can print the sum of
04:18 - these two numbers so we put X Plus y
04:21 - over here so this is the expression
04:23 - print X Plus Y and over here in the
04:25 - Lambda we have defined the two variables
04:28 - over here now what we can do is we can
04:30 - assign it to another variable so let's
04:32 - say we have ADD underscore numbers as
04:35 - the variable name so we have ADD
04:37 - underscore numbers and then Lambda
04:39 - keyword followed by these two variables
04:41 - it is X and Y and then print X Plus y
04:43 - over here so what we can simply do is we
04:46 - can call this add numbers and provide
04:49 - the two numbers that we want to add so
04:51 - we just use this add numbers over here
04:53 - and then let's say the two numbers that
04:55 - we provide is 10 and 20 so we are
04:57 - expecting the sum that is 10 plus 20 to
05:00 - be displayed by using this expression
05:01 - over here so let me just save this file
05:04 - and try running this code now
05:06 - so as you can see we are getting some
05:07 - syntax error Lambda expression
05:09 - parameters cannot be parenthesized so
05:12 - what we can do is we can simply remove
05:13 - these parentheses that we have provided
05:16 - so when we are providing multiple
05:17 - arguments in the Lambda function we need
05:19 - not have to provide the parenthesis we
05:21 - can separate them using the commas over
05:23 - here so let me just save this file and
05:25 - try running this code so as you can see
05:27 - 30 is getting displayed we can format
05:29 - this string and have some label as well
05:31 - so what we can do is we have the double
05:33 - quotes over here and we say sum of
05:36 - numbers and then colon and then comma X
05:39 - Plus y so let me just save this file and
05:41 - try running this code now as you can see
05:43 - sum of numbers that is 30 is getting
05:45 - displayed another way that we can print
05:47 - the sum of these numbers is just by
05:49 - returning the sum of these numbers and
05:51 - printing them over here outside the
05:53 - Lambda function so while returning any
05:55 - of the Expressions we need not have to
05:57 - have the return keyword we can simply
05:59 - have the expression over here so as you
06:01 - can see the two numbers were passed that
06:02 - is 10 and 20 it will be taken by this
06:04 - Lambda function in the form form of X
06:06 - and Y X Plus y will be computed and then
06:09 - it will be returned to this function
06:12 - which was called by using the add
06:13 - numbers now we can simply print this so
06:16 - we can have the print function over here
06:18 - and inside the print function we call
06:20 - the add numbers with these two numbers
06:22 - let's say this time we provide some
06:23 - other numbers that is hand rate and
06:25 - let's say 150 so the sum should be 100
06:28 - plus 150 which should be 250 over here
06:30 - let me just save this file and try
06:32 - running this code now so as you can see
06:33 - 250 is getting printed and again we can
06:36 - have some labels over here in order to
06:38 - Define exactly what this function is
06:40 - doing so guys practice on your own so
06:42 - that on different inputs you get
06:43 - different output this Lambda function
06:45 - becomes very important which is also
06:47 - called Anonymous function when you don't
06:49 - want to define the function explicitly
06:51 - and you have very less number of
06:52 - operations to be carried out by using
06:54 - this Anonymous function so guys please
06:56 - make sure that you like this video so
06:58 - that it reaches to more people and
06:59 - subscribe to this channel so that you
07:01 - get the notifications on upcoming videos
07:03 - as well the next video that we are going
07:04 - to talk about is we variable scope in
07:07 - Python Programming so stay tuned

Cleaned transcript:

hey what's up guys welcome to another video in which we are going to learn about Anonymous or Lambda function in Python Programming so guys in Python an anonymous or Lambda function is a special type of function without the function name so we use the Lambda keyword instead of Def that is defined to create a Lambda function so as you can see this is the syntax previously we had used the def keyword in order to create the normal functions but this time we are going to use the keyword that is Lambda along with the arguments which are optional over here and then followed by a colon and then we have the expression so this is one of the examples of the Lambda function over here we have the Lambda keyword followed by the colon over here and then we have the expression that is we are printing the hello world string and this entire function that is the anonymous function which is not having any name over here is being assigned to a variable that is grid and then this grid needs to be called as you can see called the Lambda over here along with the open and close balance SS so when we have this line of code over here this Lambda function will be called and hello world will be printed on the screen so guys let us check this with the help of example over here so what we will do is simply we will have the Lambda keyword first of all and Then followed by a colon and then let's say we want to print the name of this YouTube channel that is programming for beginners which you should definitely subscribe if you have not done so so we have programming for beginners over here so this is a Lambda function or the anonymous function without having any name and then let's say we assign it to a variable and we can simply provide the variable name as Str and then we have the equal to operator over here now what we have to do is simply we need to call this Str variable so over here on the new line we will have Str followed by open and close parenthesis and this is the way that we call the anonymous function so let me just save this file and try running this code now so as you can see programming for beginners is getting printed over here and this is one of the simple examples as far as Anonymous function or Lambda function is concerned in Python Programming now guys very important thing what if you have certain arguments which you want to print so this is kind of a static function which is having a fixed string that you want to print but let's say you want to provide some string over here while calling the function so in case let's say we have this argument as this is a string that we want to print so this Str that is the Lambda function is being called but this value needs to be caught by this Lambda function over here so what we can simply do is we can take this argument after this Lambda keyword as we have seen in this syntax after the Lambda keyword we have the list of arguments that we can take and use them in the form of Expressions over here so what we will do is let's say I provide Lambda and Then followed by X so this x variable will have this value whatever we pass while we are calling this is Str function that is the anonymous function so this x we can use in our expression inside this Lambda function so let's say I provide a label over here string past and Then followed by colon and then I have comma and Then followed by this x variable which is being passed so this is a string it is one of the arguments that we are passing to the Lambda expression and the X variable will be assigned to this value and it will be printed by using this print statement so let me just save this file and try running this code now so as you can see string past this label is getting printed and then the value of x which was passed from this calling of the Lambda function over here that is this is a string and the same thing is getting printed over here so guys this is the way that we can pass arguments or parameters to our Lambda or Anonymous functions over here now guys there is another variation can we have the multiple arguments let's say we have two or more numbers for which we need to find the sum of those numbers can we find the sum of those numbers by using the Lambda function so let us quickly check this with the help of examples over here so what we will do is again we will Define the Lambda function over here so we have Lambda keyword and this time we will take two numbers so let's say the two numbers are stored in these variables that is X and Y and Then followed by a colon and then what we can do is simply we can print the sum of these two numbers so we put X Plus y over here so this is the expression print X Plus Y and over here in the Lambda we have defined the two variables over here now what we can do is we can assign it to another variable so let's say we have ADD underscore numbers as the variable name so we have ADD underscore numbers and then Lambda keyword followed by these two variables it is X and Y and then print X Plus y over here so what we can simply do is we can call this add numbers and provide the two numbers that we want to add so we just use this add numbers over here and then let's say the two numbers that we provide is 10 and 20 so we are expecting the sum that is 10 plus 20 to be displayed by using this expression over here so let me just save this file and try running this code now so as you can see we are getting some syntax error Lambda expression parameters cannot be parenthesized so what we can do is we can simply remove these parentheses that we have provided so when we are providing multiple arguments in the Lambda function we need not have to provide the parenthesis we can separate them using the commas over here so let me just save this file and try running this code so as you can see 30 is getting displayed we can format this string and have some label as well so what we can do is we have the double quotes over here and we say sum of numbers and then colon and then comma X Plus y so let me just save this file and try running this code now as you can see sum of numbers that is 30 is getting displayed another way that we can print the sum of these numbers is just by returning the sum of these numbers and printing them over here outside the Lambda function so while returning any of the Expressions we need not have to have the return keyword we can simply have the expression over here so as you can see the two numbers were passed that is 10 and 20 it will be taken by this Lambda function in the form form of X and Y X Plus y will be computed and then it will be returned to this function which was called by using the add numbers now we can simply print this so we can have the print function over here and inside the print function we call the add numbers with these two numbers let's say this time we provide some other numbers that is hand rate and let's say 150 so the sum should be 100 plus 150 which should be 250 over here let me just save this file and try running this code now so as you can see 250 is getting printed and again we can have some labels over here in order to Define exactly what this function is doing so guys practice on your own so that on different inputs you get different output this Lambda function becomes very important which is also called Anonymous function when you don't want to define the function explicitly and you have very less number of operations to be carried out by using this Anonymous function so guys please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is we variable scope in Python Programming so stay tuned
