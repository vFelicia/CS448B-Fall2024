With timestamps:

00:00 - so now we will see functions in
00:01 - JavaScript guys it is very important to
00:03 - note over here that functions is a very
00:06 - important subject in JavaScript and you
00:08 - are going to use a lot of functions when
00:10 - you're are going to create real world
00:12 - assignments in the projects as well so
00:14 - guys basically a JavaScript function is
00:17 - a block of code designed to perform a
00:19 - particular task and this JavaScript
00:21 - function is executed when something
00:24 - invokes it or calls it so guys inside
00:26 - the JavaScript function we can have the
00:28 - block of code which will be executed
00:31 - whenever we call that particular
00:32 - function so in short basically the
00:35 - functions are used in order to execute
00:37 - the same line of code multiple times
00:39 - whenever we want to execute them on
00:42 - different instances so guys over here as
00:44 - you can see this is the syntax first of
00:46 - all we have to declare the function so
00:48 - this is the function definition syntax
00:50 - over here we use the function keyword
00:53 - which is reserved by the JavaScript
00:55 - followed by the space character and then
00:57 - we have the function name and then guys
00:59 - inside the parenthesis we have the
01:01 - optional parameters that we can provide
01:04 - so guys basically this is nothing but
01:06 - the name of the variables that we have
01:08 - to provide while passing the parameters
01:10 - and we can use these parameters inside
01:12 - the body of the function so over here
01:15 - after the closing parenthesis on the
01:17 - right hand side we have the open and
01:19 - close curly braces so as you can see
01:20 - this is the open curly braces and then
01:22 - we have the closing curly braces in
01:24 - between both these curly braces we have
01:27 - the entire code to be executed so guys
01:29 - basically this is the function
01:31 - definition and then simply we can use
01:33 - the name of this function that we have
01:35 - defined in order to call it so as you
01:38 - can see this is the function call
01:40 - basically we provide the name of the
01:42 - function using which we have defined the
01:44 - function over here followed by the open
01:46 - and close parenthesis so if we have not
01:48 - provided any of the parameters for this
01:50 - function definition then we don't have
01:53 - to provide any of the parameters over
01:55 - here so simply we have to provide open
01:57 - and close parenthesis so guys let us
01:59 - check how we can use functions with the
02:01 - help of examples so first of all we will
02:03 - see the example without the function
02:05 - parameters over here so let us move to
02:08 - the vs code in this case and simply I'm
02:10 - going to remove the previous lines of
02:12 - code that we had written so first of all
02:14 - we will Define the function so as you
02:16 - can see we have to use the function
02:18 - keyword over here so simply we will type
02:21 - function keyword followed by the space
02:23 - character and let us say we want to add
02:25 - two numbers by using this function so
02:28 - simply we will name name the function as
02:30 - ADD over here and then we provide the
02:32 - open and close parenthesis now guys
02:34 - inside this parenthesis we can provide
02:37 - the parameters which are optional so
02:39 - first of all we will check the example
02:41 - of the functions without parameters so
02:43 - after these parenthesis over here we
02:45 - need to provide the open and close curly
02:47 - braces now inside these curly braces we
02:50 - have to provide our lines of code so
02:52 - guys what we want to do is we need to
02:54 - Define two numbers over here so let's
02:56 - say we provide a that is the variable it
02:59 - is equal to 10 over here and let us say
03:01 - we provide another variable that is B it
03:04 - is equal to 20 and then what we want to
03:06 - do is simply we want to add both these
03:09 - numbers so over here we will provide
03:11 - console. log statement and we will print
03:14 - the addition of both the numbers so
03:16 - let's say we provide a + b that is the
03:19 - expression which is simply going to add
03:21 - the values of both these variables that
03:23 - is a and b and it is going to print the
03:26 - sum of both these numbers on the
03:28 - terminal so guys in this way we we have
03:30 - successfully defined the function by
03:31 - using the function keyword followed by
03:33 - the name of the function that is ADD
03:35 - over here and then we don't have any
03:37 - parameters so simply we have provided
03:39 - the open and close parenthesis and
03:42 - within the open and close curly braces
03:44 - we have the lines of code that we have
03:46 - return now guys simply after defining
03:47 - this function will it work let us see
03:50 - let me just save this file now and try
03:51 - running this code using the node keyword
03:54 - over here on the terminal so as you can
03:56 - see we don't get any output in this case
03:58 - that's because currently we have only
04:01 - defined the function the second part in
04:03 - order to make these lines of code
04:05 - execute is to call this particular
04:07 - function so as I have told you we need
04:09 - to call the function by using the name
04:11 - of the function followed by the
04:13 - parenthesis over here and inside the
04:15 - parenthesis we can provide the optional
04:17 - parameters so in this case we are not
04:19 - working with any of the parameters over
04:21 - here so simply we will provide the name
04:24 - of the function that is add in this case
04:26 - followed by open and close parenthesis
04:28 - so guys basically the control flow is
04:29 - coming over here it came to know that we
04:32 - have a function definition in this case
04:34 - and then over here on the seventh line
04:36 - we are having the function call so when
04:38 - this particular line of code is executed
04:41 - the control flow goes to that particular
04:43 - function definition and then line by
04:45 - line all the statements will be executed
04:48 - over here so guys let me just save this
04:50 - file now and try running this code once
04:52 - again on the terminal so as you can see
04:54 - we get 30 as the output that's because
04:57 - the A and B are having the values of 10
04:59 - and 20 and the sum of both these numbers
05:02 - is 30 so guys in this way we can call
05:04 - the function in order to execute the
05:06 - lines of code now guys if we want to
05:08 - call this function once again then
05:10 - similar to this particular line of code
05:12 - we can simply provide another function
05:14 - call over here that is add in this case
05:16 - so again the function will be called and
05:18 - these three lines of code will be
05:19 - executed let me just save this file now
05:22 - and try running this code once again
05:23 - over here as you can see we are getting
05:25 - the result 32 times in this case that's
05:27 - because we have called the function two
05:29 - times over here so guys in this way you
05:31 - can define a simple function and then
05:33 - call it by using the name of the
05:35 - function let us move to the next example
05:37 - over here we will check the example with
05:40 - the function parameters so guys
05:41 - basically so far we have checked the
05:43 - function definition without the
05:45 - parameters that we have not provided so
05:48 - guys what we will do is we will provide
05:49 - certain parameters over here while we
05:52 - are calling the function and those
05:54 - parameters or the values will be passed
05:56 - to the parameters over here on the
05:58 - function definition so what we want to
06:00 - do is let us say the two numbers that we
06:02 - want to add is five and six so basically
06:05 - we provide the first number that is five
06:07 - followed by comma and then we provide
06:09 - another parameter that is six in this
06:11 - case guys you can provide any number of
06:13 - parameters over here currently we are
06:15 - providing two parameters and basically
06:18 - the parameters must be separated by
06:20 - using the comma in this case so
06:22 - basically in this way this particular
06:24 - add function is being called by using
06:26 - these two parameters that is five and
06:27 - six but guys in the function definition
06:30 - also we want a certain variable to take
06:33 - these parameters as values so over here
06:35 - what we will do is simply we will
06:37 - provide the variable name that is a
06:39 - followed by comma and then B so since we
06:42 - are providing two parameter values we
06:44 - must have the two variables that must
06:46 - receive those values over here inside
06:48 - the function definition and then guys
06:50 - simply we can remove these lines of code
06:53 - over here that's because now we are not
06:55 - having the fixed values inside the
06:57 - function body but the values are getting
07:00 - passed when the function is getting
07:01 - called from here so basically five and
07:03 - six will be assigned to these variables
07:06 - that is a and b and then again we will
07:08 - add these A and B that is a plus b over
07:11 - here will be executed and the sum will
07:13 - be displayed on the console similarly on
07:16 - the second call as well simply I'm going
07:18 - to provide 15 as the first number
07:20 - followed by comma and let's say we
07:22 - provide N9 as the second number over
07:24 - here so guys by using parameters we can
07:27 - provide any of the values which will be
07:29 - assigned to the variables that we have
07:31 - provided for this function definition in
07:33 - this case and those parameters or the
07:36 - variables will be used inside the body
07:39 - of the function in order to execute
07:41 - certain lines of code so guys let me
07:43 - just save this file now and try running
07:44 - this code once again over here on the
07:46 - terminal so as you can see the output
07:48 - that we are getting is for the first
07:50 - call it is 11 that's because 5 + 6 it is
07:53 - equal to 11 over here and then for the
07:55 - next call that is 15 + 9 it is returning
07:58 - us the 2 four as the sum of both these
08:01 - numbers so guys in this way if you want
08:03 - to pass the parameters with different
08:05 - values in order to add two numbers then
08:08 - you need to use the parameters while
08:09 - calling the function so guys this is as
08:11 - far as the example with the function
08:13 - parameters are concerned now guys
08:15 - another thing that we can have is we can
08:17 - also return a particular value from the
08:20 - function so we have something called as
08:22 - return statement over here so guys
08:24 - instead of printing the sum of both
08:27 - these numbers over here that is a and b
08:29 - what we will do is we will print the
08:31 - result outside of this function so let
08:33 - me just comment out this line of code
08:35 - over here so instead of providing the
08:38 - console. log statement we will provide
08:40 - the return statement over here so
08:42 - basically we have provided the variables
08:44 - that is a and b while we are calling the
08:46 - function we will keep it as it is but
08:48 - over here we will return the addition of
08:51 - both these numbers so simply we have to
08:53 - use the return keyword in this case
08:55 - which is the return statement and then
08:57 - we will provide the expression that is a
08:59 - a plus b in this case so guys basically
09:02 - what we have done is instead of printing
09:04 - the addition of both these numbers we
09:06 - are returning the sum of both these
09:08 - numbers over here now guys it is very
09:10 - important to note that when we are
09:12 - returning something from the function
09:13 - there must be a variable outside of this
09:16 - function which will be able to take that
09:18 - particular value which is getting
09:20 - returned from the function over here so
09:22 - simply I'm going to show you the example
09:24 - with just one call over here of the add
09:26 - function so what we are doing is the
09:28 - control flow is calling the add function
09:30 - in this case so five and six numbers are
09:33 - getting passed as parameters to A and B
09:36 - and then we are returning a plus b over
09:38 - here now if we don't have any variable
09:40 - in this case on the left hand side of
09:42 - the add function that we are calling
09:45 - then what will happen let us check that
09:46 - as well so let me just save this file
09:48 - now and try running this code once again
09:50 - over here as you can see nothing is
09:52 - happening that's because we are not
09:54 - doing anything about the a plus b that
09:56 - is the sum of both these numbers which
09:59 - are getting returned from the function
10:01 - so what we have to do is we have to
10:03 - provide the variable name so let's say
10:05 - we provide the let keyword followed by
10:07 - the variable name that is result over
10:09 - here and then followed by the equal to
10:11 - operator so what exactly is happening
10:14 - over here is we are having the function
10:16 - getting called in this case that is ADD
10:18 - function with the values five and six
10:21 - over here and then this particular
10:22 - function is providing the expression
10:25 - that is A + B in this case and the sum
10:27 - is getting returned over here and this
10:29 - this particular value of sum will be
10:31 - assigned to this result variable and
10:33 - simply we can provide the console. log
10:36 - statement over here and then we can say
10:39 - the sum of these numbers is result so as
10:42 - you can see we have used the string
10:44 - literal over here we have provided the
10:46 - statement that is the sum of these
10:48 - numbers is and Then followed by the
10:50 - dollar symbol in this case and inside
10:52 - the open and close curly braces over
10:54 - here we are having the variable name
10:57 - that is result in this case so guys
10:58 - basically the addition of these two
11:01 - numbers will be done by the function and
11:03 - it is going to return the value which is
11:05 - going to be printed with the help of the
11:07 - result variable so let me just save this
11:09 - file now and try running this code once
11:11 - again over here on the terminal so as
11:13 - you can see the sum of these numbers is
11:16 - 11 so this is the way that we can use
11:18 - the return statement as well whenever
11:20 - you are going to return something from
11:22 - the function we need certain variable
11:24 - over here in order to assign the value
11:26 - that is being returned by the function
11:28 - in this case simply we can change the
11:30 - numbers again so over here let us say we
11:32 - provide the number that is 50 and
11:34 - another number is 25 over here when we
11:37 - save this file now and try running this
11:39 - code once again so as you can see the
11:41 - sum of these numbers is 75 now guys what
11:44 - will be the output when we have the two
11:46 - numbers that is 50 over here and 100 in
11:49 - this case so basically we have these two
11:51 - parameters comment in the comment
11:52 - section below what will be the statement
11:54 - that will be printed over here along
11:56 - with the correct value of the result let
11:58 - us see whether your answer is correct or
12:00 - not now guys why do we use functions so
12:03 - basically with functions you can reuse
12:05 - the code as we have seen already simply
12:08 - we have to call that particular function
12:10 - with the required parameters that is
12:12 - expected by this function definition in
12:14 - this case apart from this you can also
12:16 - write the code that can be used many
12:19 - times and apart from this you can also
12:20 - use the same code with different
12:22 - arguments to produce different results
12:24 - so we had already seen the calling of
12:26 - the add function over here multiple
12:28 - times with the help of different
12:30 - parameters for the first set of
12:32 - parameters we were getting the sum as 11
12:34 - and for the second set of parameters we
12:36 - were getting the sum as 24 Guys these
12:38 - are certain important points to note
12:40 - about why to use functions please make
12:42 - sure that you like this video so that it
12:44 - reaches to more people and subscribe to
12:46 - this channel so that you get the
12:47 - notifications on upcoming videos as well
12:50 - I'll see you in the next video in which
12:51 - we are going to talk about Arrow
12:53 - functions in JavaScript so stay tuned

Cleaned transcript:

so now we will see functions in JavaScript guys it is very important to note over here that functions is a very important subject in JavaScript and you are going to use a lot of functions when you're are going to create real world assignments in the projects as well so guys basically a JavaScript function is a block of code designed to perform a particular task and this JavaScript function is executed when something invokes it or calls it so guys inside the JavaScript function we can have the block of code which will be executed whenever we call that particular function so in short basically the functions are used in order to execute the same line of code multiple times whenever we want to execute them on different instances so guys over here as you can see this is the syntax first of all we have to declare the function so this is the function definition syntax over here we use the function keyword which is reserved by the JavaScript followed by the space character and then we have the function name and then guys inside the parenthesis we have the optional parameters that we can provide so guys basically this is nothing but the name of the variables that we have to provide while passing the parameters and we can use these parameters inside the body of the function so over here after the closing parenthesis on the right hand side we have the open and close curly braces so as you can see this is the open curly braces and then we have the closing curly braces in between both these curly braces we have the entire code to be executed so guys basically this is the function definition and then simply we can use the name of this function that we have defined in order to call it so as you can see this is the function call basically we provide the name of the function using which we have defined the function over here followed by the open and close parenthesis so if we have not provided any of the parameters for this function definition then we don't have to provide any of the parameters over here so simply we have to provide open and close parenthesis so guys let us check how we can use functions with the help of examples so first of all we will see the example without the function parameters over here so let us move to the vs code in this case and simply I'm going to remove the previous lines of code that we had written so first of all we will Define the function so as you can see we have to use the function keyword over here so simply we will type function keyword followed by the space character and let us say we want to add two numbers by using this function so simply we will name name the function as ADD over here and then we provide the open and close parenthesis now guys inside this parenthesis we can provide the parameters which are optional so first of all we will check the example of the functions without parameters so after these parenthesis over here we need to provide the open and close curly braces now inside these curly braces we have to provide our lines of code so guys what we want to do is we need to Define two numbers over here so let's say we provide a that is the variable it is equal to 10 over here and let us say we provide another variable that is B it is equal to 20 and then what we want to do is simply we want to add both these numbers so over here we will provide console. log statement and we will print the addition of both the numbers so let's say we provide a + b that is the expression which is simply going to add the values of both these variables that is a and b and it is going to print the sum of both these numbers on the terminal so guys in this way we we have successfully defined the function by using the function keyword followed by the name of the function that is ADD over here and then we don't have any parameters so simply we have provided the open and close parenthesis and within the open and close curly braces we have the lines of code that we have return now guys simply after defining this function will it work let us see let me just save this file now and try running this code using the node keyword over here on the terminal so as you can see we don't get any output in this case that's because currently we have only defined the function the second part in order to make these lines of code execute is to call this particular function so as I have told you we need to call the function by using the name of the function followed by the parenthesis over here and inside the parenthesis we can provide the optional parameters so in this case we are not working with any of the parameters over here so simply we will provide the name of the function that is add in this case followed by open and close parenthesis so guys basically the control flow is coming over here it came to know that we have a function definition in this case and then over here on the seventh line we are having the function call so when this particular line of code is executed the control flow goes to that particular function definition and then line by line all the statements will be executed over here so guys let me just save this file now and try running this code once again on the terminal so as you can see we get 30 as the output that's because the A and B are having the values of 10 and 20 and the sum of both these numbers is 30 so guys in this way we can call the function in order to execute the lines of code now guys if we want to call this function once again then similar to this particular line of code we can simply provide another function call over here that is add in this case so again the function will be called and these three lines of code will be executed let me just save this file now and try running this code once again over here as you can see we are getting the result 32 times in this case that's because we have called the function two times over here so guys in this way you can define a simple function and then call it by using the name of the function let us move to the next example over here we will check the example with the function parameters so guys basically so far we have checked the function definition without the parameters that we have not provided so guys what we will do is we will provide certain parameters over here while we are calling the function and those parameters or the values will be passed to the parameters over here on the function definition so what we want to do is let us say the two numbers that we want to add is five and six so basically we provide the first number that is five followed by comma and then we provide another parameter that is six in this case guys you can provide any number of parameters over here currently we are providing two parameters and basically the parameters must be separated by using the comma in this case so basically in this way this particular add function is being called by using these two parameters that is five and six but guys in the function definition also we want a certain variable to take these parameters as values so over here what we will do is simply we will provide the variable name that is a followed by comma and then B so since we are providing two parameter values we must have the two variables that must receive those values over here inside the function definition and then guys simply we can remove these lines of code over here that's because now we are not having the fixed values inside the function body but the values are getting passed when the function is getting called from here so basically five and six will be assigned to these variables that is a and b and then again we will add these A and B that is a plus b over here will be executed and the sum will be displayed on the console similarly on the second call as well simply I'm going to provide 15 as the first number followed by comma and let's say we provide N9 as the second number over here so guys by using parameters we can provide any of the values which will be assigned to the variables that we have provided for this function definition in this case and those parameters or the variables will be used inside the body of the function in order to execute certain lines of code so guys let me just save this file now and try running this code once again over here on the terminal so as you can see the output that we are getting is for the first call it is 11 that's because 5 + 6 it is equal to 11 over here and then for the next call that is 15 + 9 it is returning us the 2 four as the sum of both these numbers so guys in this way if you want to pass the parameters with different values in order to add two numbers then you need to use the parameters while calling the function so guys this is as far as the example with the function parameters are concerned now guys another thing that we can have is we can also return a particular value from the function so we have something called as return statement over here so guys instead of printing the sum of both these numbers over here that is a and b what we will do is we will print the result outside of this function so let me just comment out this line of code over here so instead of providing the console. log statement we will provide the return statement over here so basically we have provided the variables that is a and b while we are calling the function we will keep it as it is but over here we will return the addition of both these numbers so simply we have to use the return keyword in this case which is the return statement and then we will provide the expression that is a a plus b in this case so guys basically what we have done is instead of printing the addition of both these numbers we are returning the sum of both these numbers over here now guys it is very important to note that when we are returning something from the function there must be a variable outside of this function which will be able to take that particular value which is getting returned from the function over here so simply I'm going to show you the example with just one call over here of the add function so what we are doing is the control flow is calling the add function in this case so five and six numbers are getting passed as parameters to A and B and then we are returning a plus b over here now if we don't have any variable in this case on the left hand side of the add function that we are calling then what will happen let us check that as well so let me just save this file now and try running this code once again over here as you can see nothing is happening that's because we are not doing anything about the a plus b that is the sum of both these numbers which are getting returned from the function so what we have to do is we have to provide the variable name so let's say we provide the let keyword followed by the variable name that is result over here and then followed by the equal to operator so what exactly is happening over here is we are having the function getting called in this case that is ADD function with the values five and six over here and then this particular function is providing the expression that is A + B in this case and the sum is getting returned over here and this this particular value of sum will be assigned to this result variable and simply we can provide the console. log statement over here and then we can say the sum of these numbers is result so as you can see we have used the string literal over here we have provided the statement that is the sum of these numbers is and Then followed by the dollar symbol in this case and inside the open and close curly braces over here we are having the variable name that is result in this case so guys basically the addition of these two numbers will be done by the function and it is going to return the value which is going to be printed with the help of the result variable so let me just save this file now and try running this code once again over here on the terminal so as you can see the sum of these numbers is 11 so this is the way that we can use the return statement as well whenever you are going to return something from the function we need certain variable over here in order to assign the value that is being returned by the function in this case simply we can change the numbers again so over here let us say we provide the number that is 50 and another number is 25 over here when we save this file now and try running this code once again so as you can see the sum of these numbers is 75 now guys what will be the output when we have the two numbers that is 50 over here and 100 in this case so basically we have these two parameters comment in the comment section below what will be the statement that will be printed over here along with the correct value of the result let us see whether your answer is correct or not now guys why do we use functions so basically with functions you can reuse the code as we have seen already simply we have to call that particular function with the required parameters that is expected by this function definition in this case apart from this you can also write the code that can be used many times and apart from this you can also use the same code with different arguments to produce different results so we had already seen the calling of the add function over here multiple times with the help of different parameters for the first set of parameters we were getting the sum as 11 and for the second set of parameters we were getting the sum as 24 Guys these are certain important points to note about why to use functions please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video in which we are going to talk about Arrow functions in JavaScript so stay tuned
