With timestamps:

00:00 - hey what's up guys welcome to another
00:02 - video in which we are going to write
00:03 - Python program to display the powers of
00:06 - the number that is 2 using the anonymous
00:08 - function and the map function so guys
00:10 - previously we had seen how we can get
00:12 - the powers of 2 using the for Loop in
00:14 - the previous Python program so guys by
00:17 - just using one line of code over here
00:19 - inside the for Loop we can easily get
00:21 - the powers of 2 but guys in this program
00:23 - we are going to check how we can use the
00:25 - map function along with the anonymous
00:27 - function as well in order to achieve the
00:30 - same task so over here in the vs code
00:32 - what we will be doing is I'll just clear
00:34 - these lines of code and then guys we are
00:36 - going to use the map function over here
00:38 - so as you can see this is the map
00:39 - function it takes two parameters the
00:42 - first parameter is the function itself
00:44 - so guys over here I will say the name of
00:46 - the function that is power over here and
00:48 - then the second parameter it can be the
00:51 - list so basically we are going to have
00:53 - the list of numbers in order to find the
00:55 - Power of 2 so we will Define the list
00:57 - over here let's say we have four numbers
00:59 - that is 1 2 3 and then 4 so guys we are
01:02 - going to find only four powers over here
01:04 - that is 2 raised to 1 then 2 raised to 2
01:06 - 2 raised to 3 and 2 raised to 4. so guys
01:09 - the second parameter is nothing but it
01:11 - is the iterable over here and the first
01:13 - parameter in this case is the function
01:15 - that we want to execute so basically we
01:18 - are going to Define this function so we
01:20 - are going to use the TEF keyword
01:22 - followed by the power function over here
01:24 - and this function it will take one
01:26 - number at a time the first number will
01:28 - be one so this number will be taken over
01:30 - here and it will be passed to this
01:31 - function that is power so over here we
01:34 - will take the number as I and then
01:36 - inside this what we will be doing is we
01:38 - will simply return 2 raised to I so over
01:41 - here 2 and then 2 times multiplication
01:43 - and then I over here so guys basically
01:46 - we are doing 2 raised to 1 for the very
01:48 - first instance over here and then we are
01:50 - getting 2 raised to 2 2 raised to 3 2
01:52 - raised to 4 so 1 at a time this power
01:55 - function will be called by using this
01:57 - map function over here now guys we are
01:58 - going to store this result inside
02:00 - another variable so over here we will
02:03 - simply say map underscore result and
02:06 - then equal to so guys what is happening
02:08 - behind the scenes is one number is being
02:10 - taken at a time and then this power
02:12 - function is being called and one at a
02:15 - time these parameters are being passed
02:17 - to this power function and then we are
02:19 - getting the result and getting it stored
02:21 - in the map result now guys we can simply
02:23 - print this map result by converting it
02:25 - into the list so over here what we will
02:28 - do is we will have the print statement
02:30 - and then we will have the list function
02:32 - over here inside this list function we
02:35 - can simply provide the map result over
02:37 - here so we'll provide map result so the
02:40 - result that we should be expecting is 2
02:41 - raised to 1 that is equal to 2 and 2
02:44 - raised to 2 it is 4 then 2 raised to 3
02:46 - is 8 and 2 raised to 4 is 16 all the
02:48 - numbers should be present inside this
02:50 - list over here which is going to be
02:52 - printed so let me just save this file
02:53 - now and try running this code so as you
02:55 - can see we are getting this list that is
02:57 - 2 4 8 and then 16. so guys this is the
02:59 - the way that we can easily use the map
03:01 - function in order to find the Power of
03:04 - 2. Now guys we have also said that we
03:06 - are going to write the anonymous
03:08 - function so instead of this power
03:10 - function what we can do is we can simply
03:12 - remove this power function and we can
03:14 - Define the anonymous function that is
03:17 - Lambda it is going to take one parameter
03:19 - which we will name it as I over here and
03:21 - then colon and then we have to provide
03:23 - the same expression that we have
03:24 - provided over here in the return
03:26 - statement so I'll just copy this and
03:28 - paste this over here so guys now we have
03:30 - got rid of the power function we can
03:32 - remove this definition of the power as
03:34 - well and with the help of the map
03:36 - function and the anonymous function
03:38 - inside the map function we are achieving
03:40 - the same task over here let me just run
03:43 - this code once again I'll just enter
03:45 - another number that is 5 so 2 raised to
03:47 - 5 will be also computed and will be
03:49 - stored in the map result which will be
03:51 - printed again so let me save this file
03:53 - now and try running this code as you can
03:55 - see we are getting 2 4 8 16 and then 32
03:58 - so guys this is the way that we can find
04:00 - the Power of 2 over here using the map
04:03 - and the anonymous function over here we
04:05 - can have some more labels as well we can
04:07 - say power of 2 and then colon and then
04:11 - we can have the list of this map result
04:13 - so basically what we will be having is
04:15 - the label over here that is power of 2
04:17 - and then the list of all the elements
04:19 - for which we have already found the
04:21 - power of 2 guys can we have the range
04:23 - function over here instead of this list
04:25 - let us try that so when we provide range
04:28 - over here so this is the range function
04:31 - and then inside this range let's say we
04:33 - provide the number 10 so it will go from
04:35 - 0 up to 9 so let me just save this file
04:37 - now and try running this code so as you
04:39 - can see yes we can provide the range
04:41 - function as well it is going from 0 that
04:43 - is 2 raised to 0 is 1 and then 2 raised
04:45 - to 1 is 2 then we have 4 8 16 32 64 128
04:50 - 256 and then 512 so guys basically it is
04:54 - going from 2 raised to 0 up to 2 raised
04:56 - to 9 in this case so guys this is the
04:58 - way that we can easily use the the
05:00 - combination of the map function along
05:02 - with the anonymous function in order to
05:04 - find the Power of 2 apart from finding
05:06 - the power of 2 we can have any other
05:08 - expression over here based on your
05:10 - requirements so guys practice on your
05:12 - own so that on different inputs you get
05:14 - different outputs please make sure that
05:16 - you like this video so that it reaches
05:17 - to more people and subscribe to this
05:19 - channel so that you get the
05:20 - notifications on upcoming videos as well
05:22 - the next video that we are going to talk
05:24 - about is Python program to add arrays
05:27 - using the map function so stay tuned

Cleaned transcript:

hey what's up guys welcome to another video in which we are going to write Python program to display the powers of the number that is 2 using the anonymous function and the map function so guys previously we had seen how we can get the powers of 2 using the for Loop in the previous Python program so guys by just using one line of code over here inside the for Loop we can easily get the powers of 2 but guys in this program we are going to check how we can use the map function along with the anonymous function as well in order to achieve the same task so over here in the vs code what we will be doing is I'll just clear these lines of code and then guys we are going to use the map function over here so as you can see this is the map function it takes two parameters the first parameter is the function itself so guys over here I will say the name of the function that is power over here and then the second parameter it can be the list so basically we are going to have the list of numbers in order to find the Power of 2 so we will Define the list over here let's say we have four numbers that is 1 2 3 and then 4 so guys we are going to find only four powers over here that is 2 raised to 1 then 2 raised to 2 2 raised to 3 and 2 raised to 4. so guys the second parameter is nothing but it is the iterable over here and the first parameter in this case is the function that we want to execute so basically we are going to Define this function so we are going to use the TEF keyword followed by the power function over here and this function it will take one number at a time the first number will be one so this number will be taken over here and it will be passed to this function that is power so over here we will take the number as I and then inside this what we will be doing is we will simply return 2 raised to I so over here 2 and then 2 times multiplication and then I over here so guys basically we are doing 2 raised to 1 for the very first instance over here and then we are getting 2 raised to 2 2 raised to 3 2 raised to 4 so 1 at a time this power function will be called by using this map function over here now guys we are going to store this result inside another variable so over here we will simply say map underscore result and then equal to so guys what is happening behind the scenes is one number is being taken at a time and then this power function is being called and one at a time these parameters are being passed to this power function and then we are getting the result and getting it stored in the map result now guys we can simply print this map result by converting it into the list so over here what we will do is we will have the print statement and then we will have the list function over here inside this list function we can simply provide the map result over here so we'll provide map result so the result that we should be expecting is 2 raised to 1 that is equal to 2 and 2 raised to 2 it is 4 then 2 raised to 3 is 8 and 2 raised to 4 is 16 all the numbers should be present inside this list over here which is going to be printed so let me just save this file now and try running this code so as you can see we are getting this list that is 2 4 8 and then 16. so guys this is the the way that we can easily use the map function in order to find the Power of 2. Now guys we have also said that we are going to write the anonymous function so instead of this power function what we can do is we can simply remove this power function and we can Define the anonymous function that is Lambda it is going to take one parameter which we will name it as I over here and then colon and then we have to provide the same expression that we have provided over here in the return statement so I'll just copy this and paste this over here so guys now we have got rid of the power function we can remove this definition of the power as well and with the help of the map function and the anonymous function inside the map function we are achieving the same task over here let me just run this code once again I'll just enter another number that is 5 so 2 raised to 5 will be also computed and will be stored in the map result which will be printed again so let me save this file now and try running this code as you can see we are getting 2 4 8 16 and then 32 so guys this is the way that we can find the Power of 2 over here using the map and the anonymous function over here we can have some more labels as well we can say power of 2 and then colon and then we can have the list of this map result so basically what we will be having is the label over here that is power of 2 and then the list of all the elements for which we have already found the power of 2 guys can we have the range function over here instead of this list let us try that so when we provide range over here so this is the range function and then inside this range let's say we provide the number 10 so it will go from 0 up to 9 so let me just save this file now and try running this code so as you can see yes we can provide the range function as well it is going from 0 that is 2 raised to 0 is 1 and then 2 raised to 1 is 2 then we have 4 8 16 32 64 128 256 and then 512 so guys basically it is going from 2 raised to 0 up to 2 raised to 9 in this case so guys this is the way that we can easily use the the combination of the map function along with the anonymous function in order to find the Power of 2 apart from finding the power of 2 we can have any other expression over here based on your requirements so guys practice on your own so that on different inputs you get different outputs please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is Python program to add arrays using the map function so stay tuned
