hey guys in today's video we're going to be going over cs50 problem set 3 plurality but before you jump into that make sure you subscribe to the channel with notifications on so you never miss a single cs50 solution okay now let's jump straight into the program okay so what is this program about basically it's based on one simple rule which is that whoever gets the most votes wins the election okay so we need to make some sort of election program so what it's really about let me just take you through a quick scenario so you understand what it's about so the user inputs dot slash plurality which is the name of the program and it's a command line argument they also write alice bob and charlie right you may recall command line arguments from previous problem sets so we're using it again here so these are the names of the candidates that they want to include so they run the program with the names of the candidates as a command line argument okay and then our program should prompt them for number of voters and let's just say for an example here the user inputs four the user then has to type the name of the candidate that they want to vote for so let's say voter one votes for alice they type alice and second voter also works for alice third was for charlie and fourth votes for bob so over here the winner is the person with the most votes and that's whose name we need to print so we can clearly see that alice has two votes whereas charlie and bob have one vote each so based on this program we know that the program needs to print the name alice because alice won and so our program is to output alice pretty simple so far just one thing we need to mention here is that our program also needs to check whether or not uh the name they typed has is actually a name of candidate in the command line argument right so they need to vote for someone who's a candidate right so okay it's a pretty simple program let's just go through a different scenario very quickly once again the user inputs the same thing alice bob and charlie when he runs the program so these are the names of the candidates and our program again prompts them for how many voters there are and there are four voters in this case and this time no one votes for bob for bob um but they vote for alice and charlie so alice over here has two votes and charlie has two votes so in this case remember whoever gets the most votes wins the election and that's whose name we need to print but over here no one really wins because they get two votes each it's a tie so in the event of a tie we need to print both users names okay whoever has the most votes that's whose name we need to print so it doesn't matter we need to print both people's names okay so in this case when it's two votes for ellis tools for charlie our program will have to output alice charlie the two winners of the election okay so it's a pretty a simple program speaking logically uh but let's take a look at how we actually implement that in code okay so this is the plurality file it's a source code right cs50 gives this to us i do not write this code and okay so let's just go through the code real quick so we have an idea of what we're dealing with here so first things first they have some header files include cs50 standard io and string okay then they say default define max nine okay as the maximum number of candidates okay and over here we have a struct right if you recall from the lectures i think the first problem set that involves structs but it's basically just grouping data types together right it can have one or more variables so over here it has a string called name and an int called votes okay which makes sense because a candidate has a name and has a certain number of votes right and over here candidate is not the name of the struct it's the data type that comes out so candidate now becomes a data type right it's just like an it's just like a string now it's new data type called candidate which has a string and an int okay sort of make that clear and next it says okay candidate candidates max okay so this might seem a bit vague but uh just break it down here if we had an array this is just basically defining an array right so the data type is not an entire string it's now the data type as candidate and the name of the array is candidates and the population of the array is max and over here we can see that they defined max as nine which means there can be a maximum of nine candidates okay and now they have they make a function here called candidate account they make a variable called candidate count and they define it as an end okay and over here we have some prototypes bool vote string name okay so it's a function called vote that takes name as an input and outputs a bool true or false and then we have a print winner function which uh doesn't give any opera it's just printing so okay now the main program starts into main entire c string rgb right because we have command line arguments so first things first it checks for invalid usage so what does this mean rc needs to be greater than 2 obviously because if you remember dot slash plurality the name of the program itself is already this is this is already an argument this is already an argument right so this is arc v zero so it needs to be greater than two because you can't just type dot slash plurality because then you won't have any candidates and you can't just have two because then it's just plurality and bob there's only one candidate so it needs to be priority alice bob that's the minimum right it should be greater than two so it needs to be at least three candidates that people get to vote for at least two candidates people get to vote between so it should so greater than two because plurality is one and then alice has one and bob is another right so it's three command line arguments so rxc needs to be greater than two obviously so they've already checked for invalid usage here so again this is code that they give us and now they want to populate the area of candidates okay so they say candidate count equals arg c minus one okay and why is this again i just explained it right so over here rx is three but we don't count plurality is a candidate dot slash polarity so that's why we have two candidates in this case right just an example and over here if candidate count is greater than max print maximum number of candidates is nine right so again they don't want us to have more than nine candidates this is an arbitrary rule that they give us right we don't have more than nine candidates okay fair enough so once again they've already done most of the heavy lifting for us they've done the error checking things like that so we know that we're going to get a valid number uh a valid uh input from our users right okay now let's move on okay so now they have a for loop and i equal to zero so they're looping through the candidates right ios and cannot account i plus plus which just means moves through the candidates one by one and candidates i dot name okay so this is this candidate is an array right but remember uh has two two variables in the array there's a struct so there's name and there's votes so candid name is arg v i plus one and why is it i plus one because again the zeroth is dot slash polarity plurality so that's full of the alice let's say alice's candidate one is yeah so this is arc v one we can't have arc v zero because r v zero is pluralty okay so that's my candidate name is rbi i plus one and candidate votes obviously starts at zero right okay because no one has gotten any votes yet so let's move on uh int voter count and this is just prompting the user for some input right so you're saying get into number of orders so prompting the user for the number of voters there are as we said in our earlier example here right voters and the user inputs how many voters there are so now we need to loop all loop through all the voters to ask them for their vote right so it depends on how many voters there are look to the voters one by one and keep on asking vote would you vote for right vote vote vote okay and again they're checking for invaluable again they're doing all the error checking for us so again our job is pretty easy and finally they just print winner okay so you notice here there may be two things there are two things that we need to do right we need to write the vote function and finally we write the print winner function right because they're prototypes but they don't actually define the function so that's our job most of the heavy lifting is done we just need to fill out that we just need to fill out two functions right that's all we have to write code for so bool vote string name okay so it's a function called vote that takes name as an input and gives out a bool true or false okay it seems pretty simple what we need to do what so what is this word function about what do we need to do in the board function so basically we just need to see whether the name the user typed matches any of the names in the array of candidates right so whoever the user voted for it needs to match with at least one name in the candidates array which is the command line argument so if the user typed if if what the user type matches with a name of the in the array of candidates then update their vote total and return true right so if alice is a candidate and the user types alice they vote for alice we need to update alice's vote total right we need to add one to it and if it doesn't match if they type for example the candidates are alice bob and charlie and they type david right then we don't up we don't want to update anyone's vote totals right there will be an error okay so this is what the word function is about it's very simple so let's see how we just implement this in code okay let's see if the name of the user type matches any of the names in the re of candidates right so how do we do this it's very very simple so first things first we obviously need to loop through the array of candidates so let's make a simple for loop 4 and i equal to 0 set it to zero and again we need to loop through all the candidates so we go through ils and canada count and i plus plus just loop through them one by one so okay so we need to see if the name of the user if the name the user typed matches any of the names and the array of candidates right so how can we check that it sounds like we need an if right if the name of the user if the name of the user type matches under your candidate so if let me just do this simply here if the name right which is what the user typed is equal to candidates i dot name what do we need to do we want to update the candidates vote right so candidates i dot votes plus plus right so this is very simple right it's exactly what we said earlier if the name of the user typed matches any of the names in the array of candidates update the vote total because that's who they're voting for right so but there's something wrong here if you notice because this this works for ins right when you say equals equal so if this is equal to this i'll be the vote total but that's not how quite uh that's not how it works for strings so for strings it turns out the specific function you have to use which is stir comp string compare it compares two strings okay so again if you want to compare ends this way would work but we're not comparing against we're comparing strings so we'll need to follow how to compare strings which is in this format all right again this is not something you would know it's something you have to read through the manual for right you need to read through the guide so there's not a common sense or anything like that so if you compare strings and apparently the way we do that is stir com string compare name comma candidate name equals equal zero and this is just the way to write it right it doesn't really mean anything but this is just how we compare two strings together all right so if stir compare so basically if the name matches any of the name of the candidates if the name of the user types might say any of the name of the candidates increase that candidate's votes right because that's what the user voted for okay oh and obviously we need to return true right because it's a bool so if this happens then return true otherwise if the name doesn't match then return false makes sense so far it's very simple right we just updated the vote total of the candidates now we just need to print the winner so how exactly do we tell the computer hey whoever has the most votes just print that name so it turns out the computer is not smart enough to do that so we need to break it down for the computer so so the objective of the print winner function is print whoever has the most votes right that's obvious the computer can't do that we do not tell the computer to do that so instead we'll break it down at two steps find out the maximum number of votes that someone got and then print the names of the people whose votes equals the max votes okay so that sounds a bit confusing let me just give you a quick example so what is the most number of votes anyone got okay so let's say well let's create a function let's create a variable called max votes and let's set it to zero and now let's say this is a different example so let's say alice got three votes billy got two and charlie got 4 votes and we know this because we know the total vote count because we've already done the vote function right over here we've already calculated the votes how many votes each person has now we still print the winner so first we need to find out the maximum number of votes that someone got so maxwell starts at zero and then we need to loop through the array of candidates right so again we see that alice has three votes okay so so far the computer knows that okay the most number of votes anyone has got so far is three so it's going to update the max votes to three and this is this is just um just speaking it out logically here but we need to implement this in code obviously then it's gonna go to billy it's gonna check uh billy got two votes so the maximum number of what someone got is still three and then finally it goes to charlie and it says oh charlie you got four votes so the maximum number of what someone got is actually four right and then we need to print the names of the people whose votes equals the max votes so whoever got four votes we need to print the names of those people right and it's actually very simple this is just a twostep process of printing whoever has the most votes because the computer can't simply print whoever has the most votes so how do we do this in code find out the maximum vote someone got and it's just exactly how i explained it in this scenario here how do we do that well let's take a look well first things first we need to know that we know we know that we need to loop through the array of candidates right because we need to go to candidates one by one but before that let's start a variable let's call it max votes right and just initialize it to zero so let's just say int max votes the name of the name of the variable into maxwell's equal to zero and then now we need a for loop and i equal to zero right this set uh initialize it to zero the index and we need to keep on going with the number of candidates right so in canada count and i plus plus it just means go through it one by one okay so now what what is this condition here we need to check if if any candidate's vote totals is greater than the max votes we want to update the max votes to that total right that sounds a bit confusing but let me just type it out here so if the candidate's votes right candidates i dot was which you've already calculated in the previous function is greater than max votes what do we want to do we want update the max votes total to that candidate's votes right and again it sounds a bit confusing i understand but this is that's that's the logical explanation of it right so if that's the maximum zero right it comes back to the example it's gonna keep on going so it's gonna update the vote total accordingly as it sees alice it says okay the max vote so far is three because it's you can see that if canada votes is greater than max votes right so three is greater than zero so it's gonna update from zero it's gonna update to three and this is gonna go to billy's votes and it's to check uh is candidates what's greater than the max votes at the moment uh 2 is not greater than 3 so no it's going to go to charlie it's going to check is the candidate's votes greater than our max votes total at the moment yes it is 4 is greater than 3. so max votes will now need to be updated to whatever charlie's votes is so this is a simple way of doing that if the candidate's vote is greater than the max votes set the max votes equal to that candidate's votes right and the reason this might be confusing is you may see the equal sign as being equal to but that's not how it is in programming right so what this means is assign the value of the right hand side to the left hand side right so it's not equal to but rather whoever has the most votes right if the candidate has greater votes than the max votes set the max votes equal to that number right that's a very important distinction and it's why most people will be confused in this part we found out so far how many votes does the person with the maximum number of votes have right so what's the most number of votes anyone got in this case it's four in my example so the max votes is four now we need to print the names of people whose votes equal to max votes in other words whoever got four votes we want to print their names right so how do we go about doing that well once again we know that we need to loop through the entire uh candidates right we want to look through the entire list of candidates so once again same thing and i equal to zero keep on going as long as highest less than candidate account right we're going to look through all the candidates and we want to go one by one so i plus plus so now what we want to do here it's the same logic right so now if the candidate's votes is equal to the max votes we want to print that candidate's name right so if candidates right if the candidate's votes equals equal to the max votes and this is equals equals which means equal to not assigning any value anywhere over here we're assigning the value over here we're saying if if if the cannot got the maximum number of words then what do you want to do you want to print the candidate's name and how do we do that well it's obviously a string the name is a string so percent s and let's make a new line and what do we want to print we're going to print the candidates name okay so this might be a little bit confusing but just go through one more time and i'm sure you'll get it so this is this is basically the pseudo code find out the maximum number what someone got and in this case it's four right so we looped through and we found out that the maximum number of votes anyone got was four so now we know max votes is four print the names of the people whose votes equal to max votes so print out the name of whoever got four votes and again the objective is simply print out whoever is the most votes we just need to break it down so that the computer understands it right break it down in two simple steps okay and so far this has made complete sense right it's a very logical program a lot of the heavy lifting was done for us okay so now let's go ahead and make plurality reality okay compile so that's good sign now let's go ahead and just try running it let's say alice bob and charlie as we've been doing number of voters let's say four and let's just try alice alice bob charlie okay prints out alice which is correct let's go two votes uh let's try one more time uh let's say alice bob charlie once again are the candidates this time for voters as well but this time no one votes for poor old bob so it's alice alice charlie charlie and it prints out alice charlie okay so everything seems to be correct but once again just double check never hurts to check with cs50 themselves and this is um copy and pasting code from the cs50 website so let me go ahead and do that it's going to go ahead and check the code for any errors right so far seems to be correct everything's working well and guys if you're not subscribed to the channel please make sure to subscribe make sure to leave a like on this video if it helped at all because i put my all into these videos and i really hope it helps you guys so please return the favor if you can subscribe to the channel put notifications on and let's see if we're correct over here page sorry so yeah everything seems to be correct right it's a very simple program as long as you i think the main thing people struggle with is breaking this down the print winner function and to print whoever has the most votes right it just seems so logical but we need to break it down into find out the maximum of what someone got and then print the names of the people who got the maximum number of votes right the biggest struggle here but once you understand that logical part of it everything else becomes much much easier and we can see here everything's green which means everything's good to go before submitting you can just go ahead and do style 50 i'm not going to do it now but style 50 and then finally can just submit thank you so much for watching guys make sure to leave a like on this video if it helped make sure to subscribe the channel support me and thank you so much for watching bye david