the jump from week 0 to Week 1 in cs50 can be very challenging that's why they recently introduced practice problems as a way to bridge that Gap now before we move further make sure to leave a like on this video And subscribe to this channel for regular cs50 content and without further Ado let's jump straight into the first practice problem debug so basically what's going to happen here is they're going to give us some code and our job is not to write code from scratch but rather to correct problems with that code right they're going to give us faulty code and we have to kind of fix it to make it a working program but first things first is we need to go to code.cs30.io and log in using our GitHub account so if you don't have that I recommend just signing up it takes two minutes it's very simple when you have that it says to go inside a terminal window and type CD right okay and by the way guys you won't have any of these files on the left here I have them because I've done other problem sets but your left side is going to be completely empty let's type CD and enter okay let's see what we do next and the prompt type mkdir debug okay which stands for maker directory called debug okay make dirt debug and we'll see that sadly there's a file that appeared here called debug okay that's going to be your only file so far CD debug which means change directory to debug and again that's not very important you don't really have to know that but that's what CD stands for and now before the prompt we see we have a debug here which is good they write the word debug and then copy and paste this thing into your terminal window to download the slab's distribution code okay whatever that means we don't care let's go ahead and copy and paste it let's do what it tells us to okay some fancy lines here again we don't care about that let's go into our debug folder now that we care about and let's go into debug.c okay and here is our code again the objective is to become familiar with C syntax and learn to debug buggy code right so before we get to debugging it let's try to understand what the program is trying to do let's go through line by line include cs50.h okay that's including the cs50 library int main void okay that's the equivalent of saying when green flags clicks on scratched it has a command ask for your name and where you live it has a variable called name and get string is used to get some string from the user right it's prompting the user for some input and says what is your name okay so the program should ask the user what is your name and then it has a variable called location and get string where do you live okay so we need to make a program that prompts the user and asks them what is your name and then ask them where do you live okay seems pretty straightforward and then we want to say hello so we want to print hello blank from blank and these when you see a percentage sign that's called a placeholder so we don't know what we want to say yet but we know that we're going to get what we want to say from the user so hello blank from blank and take these from name and location so it basically means hello name from location so let's say the user inputs what is your name they say David and ask them where do you live they say Boston right so it's going to print out hello David from Boston if you're completely new to programming as most people are we don't really know what's wrong with this code nothing really jumps out at us so easiest way to check what's wrong with the code is by trying to compile it okay so let's clear this how we compile code is make and then the name of the programs we literally type make and then the name of the program is debug so debug so let's compile it okay and it immediately gives us an error and let's try to sort of decode what this is saying debug.c 9 colon 5. okay so what this means how do you read this is there is an error on line 9 in the fifth character let's try to read what the error says use of Undeclared identifier name so what does that mean so over here when you define a variable you need to assign some sort of a data type to it right we can't just say name what is a name we need to tell the computer the name is indeed as we know we want to get a string from the user and stored in name so name is obviously going to be a string right the computer doesn't know that we have to tell it that and that's what this error tells us here use of Undeclared identifier name so let's go ahead and type string name so string name equals get string what is your name okay so we've solved that that problem let's go ahead and try to compile the program again and again we get another error and let's try to read this 952 which means it's on the ninth line the 52nd character and what's the error it expected a semicolon at the end of Declaration okay and it literally says to insert a semicolon at the end of this right semicolon in C is like a full stop in English we have to say it so let's go ahead and get the syntax correct semicolon here let's solve this error right and now we can kind of intuitively tell that you know we did this for name do we have to do the same thing for location as well well let's go ahead and see let's go ahead and make debug compile the code and again it says there is the enter on line 10 use of Undeclared identifier location and again that's because we didn't declare what data type location is right just like we did for name let's go ahead and say location is a string right and now do we need a semicolon to the end here well it's kind of obvious we do but just for the purpose of taking it step by step let's see what the computer tells us let's try to make debug and again as expected on line 10 there is another error expected semicolon at the end of Declaration okay so let's go ahead and put that in and by the way guys I'm doing this step by step so you kind of get the feel for how to read errors right how to interpret errors so line 10 expected this right it's a bit vague but as you do more and more of it you're gonna get more comfortable with reading errors now there's no clear errors right we don't know what what else is wrong so let's try to make debug again compile the code and okay we see there is an error in line 13 implicit Declaration of function print is invalid okay so if you remember from the lectures when we want to print something out we don't say print right the function is called print F in C the function is called print F to output something so if you're in Python then print would be enough but here we're doing in C so it's called print F Okay so we've made a print F now let's try once again to compile the code and okay we have an error in the same line in line 13 again with the same printf so did we really solve that problem let's read the error message implicitly declaring Library function print f and let's see what the solution is they said include the header standard io.h okay so this time it literally gives us the solution which is include the header standard iodar H so the function print f is in the standard i o Library okay so just like we included csfd.h we now include standard io.h and now let's go ahead and try to compile the program once again let's make debug okay and we are met with another error okay it's on line 14. hello percent I from percent I okay so there is an error here in the percentage that's because percent I is a placeholder for an integer right so hello percent I for percent I is wrong because the values that we want to input here are not integers right it's name and location which are both strings right so a placeholder for a string is not denoted by percent I but rather present s so let's replace these I's okay so hello percent s from present s again because both name and location are strings so hopefully we've solved it all here make debug and again we get another error on line 14 again problematic line here expected semicolon after expression right we forgot to put the semicolon after the print okay so let's go ahead and do that and now let's try to make our program again make debug okay thankfully no error messages here so right let's go ahead and run the code and how you run something is dot slash the program name so in this case it would be dot slash debug run it okay what is your name that's good it asks us for a name let's say our name is David where do you live let's say Boston hello David from Boston okay so it seems to be working well here but if you notice it just looks a little bit ugly right because it prompts us for New command on the same line which doesn't look very nice so let's try to create a new line and how we create a new line in C is by typing backslash n now you wouldn't know this is not common knowledge this is the syntax of c and that's what we're trying to learn in this practice problem right so let's make a new line let's once again compile let's make debug okay it works dot slash debug once again let's say we're it from Boston and hello Dave from Boston and this time prompt us for a command on a completely new line so it just looks a little bit better right it doesn't make the code more correct the code was already correct it just makes it a little more readable a little more user friendly and now at the end of every problem set we need to check our code right the way we do that is using cs50s check 50 function okay so let's copy and paste this from Harvard's website check 50. this is going to go and check for the correctness of our code so while waiting guys please make sure to like this video if it was helpful make sure to subscribe to this Channel with notifications on if you want me to continue posting these videos right I'm going to be posting videos every single week so please subscribe with notifications on go ahead and leave a like on this video okay all green which means it's all good and we've conquered this process problem now this is one of the easier practice problems right the next one is going to be a little more difficult so stay tuned for that that's coming in the next week or so so make sure to subscribe with notifications on and I'll see you guys in the next one bye David