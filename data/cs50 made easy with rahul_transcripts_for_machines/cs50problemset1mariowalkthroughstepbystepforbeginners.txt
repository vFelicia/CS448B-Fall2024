hey guys it's me Mario okay no it's not today we're actually going to be doing the cs50 problem set one Mario walkthrough this is going to be a stepbystep guide for beginners so what's the program actually about the we'd print a pyramid whose height depends on the user so if the user inputs a height of eight we need to print a pyramid with the height of eight if the user inputs a height of four when you print a pair mid with a height of four and so on and so forth now the only condition is that the user it needs to input a number between one can hit so anything outside the range I mean to be prompt them for another height so if the user inputs zero that's outside the one to eight range so we need to replant them again ask for another eye if the input the number 42 we need to replumb them again right so we need to keep on we prompt ting them as long as the range is outside one to eight right and then we need to print permit according to the height that they type in so how can we go about doing this well first of all let's do su the normal stuff let's include our libraries which are standard i/o dot H and cs50 dot H all right now we want to start the program and remember how we do that is int main void and this is basically the equivalent of saying when green flag clicked on scratch right so now we want to prompt the user for some input right so let's create a variable let's call it height height equals now how do we get some input from the user while using the get function right so height equals to get underscore and what type of data do you want here we want a number between 1 and 8 right so that's an integer so we write get underscore int now we prompt the user for some input let's say enter height here and don't forget the semicolon at the end ok so we don't want to just do this once as we said earlier we want to keep on doing this as long as the input a number outside the 1 to 8 range right so for this we use a loop and we can essentially use a dowhile loop which basically means do the following while a certain condition is true so we want to prompt the user for input while height is less than 1 or 10 remember how we say or with those two lines or height is greater than 8 right so no new information here so no new information here so far what we're saying is as long as the height is less than 1 or greater than 8 we need to keep on asking the user saying enter height here all right and now let's just inform the computer that height is an integer so this in type this is just defining the height and just tell the computer hey height is an integer all right so that's what we've done so far let's test out the program let's say make Mario ok compiled dot slash Mario to run it let's try a height 10 ok ask us can let's say hi zero okay after skin let's say height for okay so so far we know the program works right but now what do we need to do we don't we just want to get some input we actually need to go about building the permit being to print the pyramid right so for that now let's just take a look at the pyramid first of all so when we look at the pyramid here we can see that there's some sort of pattern right like there is one hash in the first line to ashes and second line three ashes in the third line and so on and so forth so we know that it somehow involves using loops all right so let's first of all make a loop let's use a for loop so for now in the now we need to put some sort of variable right we can call this variable anything at all we can called ijk X David whatever you want but for the purposes of this video since it's a beginner video I'm just gonna call the variable rule and it has no function at all I'm just calling it row because it helps me remember stuff so I'm calling it a row because I want this to make a new row I want this Lou to make a new row so I said to zero I'll put a condition row less than height row plus plus all right so within this for loop I want to say printf a newline and remember how we do a new line is just backslash n right so basically what I've said here so far is as long as Rho is less than height print a new line all right that's basically what I've said so far and so why is this condition true why do we want to print a new row as almost Rho is less than high because you might be thinking isn't true equal to the height right because we can see Row 1 Row 2 Row 3 Row 4 and the pyramid has height of 4 Behrman with the height of 4 has 4 rows so why do we want to do rule less than height well the explanation is very simple now remember we initialized row to 0 which basically means a pyramid with a height of 4 and we if we start counting from 0 the last row we'll get is 3 so we can see that row 0 has one hash Row 1 has two hashes and so on so now a pair of the height of 4 and the last row is 3 which is why we want to keep on printing a new row as long as Rho is less than hype now what if you put it as less than equal to height then we would actually get a new row here with five hashes and that'll be row four now we don't want this because then the height of the pyramid would be five right so the condition here should be as long as Rho is less than height all right so that makes sense so far but now when we look at the pyramid we don't just want to print new lines before printing every new line we actually want to print a hash all right so we want to print a hash so we need to make another loop right because there is a pattern for the hashes as well like one hash in the first line two hash in the second three in the third and so on so we know we know another loop and let's put that loop inside the row loop so let's call it another for loop let's call this one column because rows go down called Krauss so just intuitively you can name it anything literally anything just for the purposes of clarity I'm gonna name it column so for a column equals to zero initializing column to zero some condition we don't know what yet column plus plus and for this we want to print a hash write printf a hash all right and semicolon now how do we go about finding out what the condition is let's just test it out first let's say call them less than height all right and remember we have to tell the computer that row and column I ins as well so let's just go ahead and do that in row okay this is informing the computer that ruin column are int right now that that's done let's try to compile the program make Mario okay compiles let's run it dot slash Mario let's see how for okay so it prints something but it's not a pyramid right we don't want to block we want a pyramid so we know that there is a problem with the condition here we don't want the same condition for a row and column we need to make it something else something different so the condition I'm gonna put is column less than row and basically what it means now is as long as column is less than or equal to row print a hash so how does this make sense how do we like put some logic into this well it's very simple so basically what I'm saying so far is if column is less than or equal to row print hash right that's my condition so because the column loop is nested inside the row loop remember here column loop is within the row loop every time Row is increased column is initialized to 0 so let's just read that one more time every time row is increase column is initialized to 0 all right just get that in your head and that's because the loop is nested within the rule loop alright so let me just give you an example here now let's take a parameter at the height of three okay so in the first loop true is 0 because we initialized it to 0 and column is here as well so now it's gonna check for the condition the first loop is column less than or equal to row yes because 0 is equal to 0 the condition is true so we print a hash now column is going to try to increase to 1 and then it's gonna check again is column less than or equal to row and this time the condition is not true because 1 is greater than 0 so column is greater than row so it wouldn't print a new hash here so it prints newline and goes to the second loop alright and the second loop it's been row plus plus now so row is 1 and column is once again initialized to 0 all right now it's gonna check is the condition true is column less than or equal to row yes it is because 0 is less than 1 so it's gonna print a new hash and now column will try to increase again and again it's gonna check his column less than or equal to row yes because 1 is equal to 1 all right so it's gonna print another hash and now column will try to increase again it's gonna see column 2 and now we check again is column less than or equal to row and now it's not right because 2 is greater than 1 column is greater than row the condition is not true so we won't print another hash and instead we're gonna print a new line and then we go to the third loop now it's been row plus plus again so row is 2 and column is once again initialized to 0 that's the key that's the key here column is initialized to 0 all right so now it's gonna check is column less than or equal to row yes it is because 0 is less than 2 and hopefully hopefully you're seeing some pattern here hopefully you're getting the hang of this now column we'll try to increase again column is 1 row is 2 is column less than or equal to row yes it is because 1 is less than 2 right so we print another hash now Collin will try to increase again so now it's gonna check again is column less than or equal to row yes it is because 2 is equal to 2 right it's going to print another hash now column will try to increase again and it's gonna say column equals 3 now I'll check for the condition again and column is greater than row so it does not meet this condition so if one print another hash and that's the end of the program because we chose a parameter at the height of 3 and this is just an example so now we can see that on row 0 we have one hash on Row one we have two hashes and in Row two we have three hashes all right and if you look at the initial pyramid here this makes sense because on Rosi row we have one hash on Row one we have two hashes and so on and so forth so hopefully it makes sense so far let's try to compile the program make Mario and I'll slash Mario to run it that's right BAM I died of four okay so it does print a pyramid right but it's not quite the pyramid we want because you can see that our pyramid the one we print is left aligned whereas the one we're required to print by cs50 is a right aligned pyramid so how do we convert this pyramid from left aligned right aligned let's take a look at that so how do we how do we convert it right so here we have a left aligned pyramid and we want it to be right aligned okay so all right how do we go about doing that well we can do is simply add spaces so let's add some spaces there all right so now we can see that all of a sudden the pyramid has become a right aligned pyramid right now just um just forget about these objects here like let's just assume they're spaces all right I'm just putting those objects the symbols just for clarity's sake so let's assume these are spaces and all of a sudden we have a right aligned pyramid so we now know that to convert a pyramid from left aligned right aligned all we need to do is add spaces so how do we actually go about doing that well we need to know how many spaces we should print on every row right so let's try to find some sort of relationship between height spaces and rows so for example let's just take a pyramid of height for all right and this is row zero Row 1 Row 2 and Row 3 so we can see that on row zero there are three spaces I Row 1 there are two spaces and Row two there's one space right so let's try to figure out a relationship somehow okay so a pyramid of height for row zero 3 spaces height is 4 rows 1 2 spaces height is 4 row is 2 1 space alright so hopefully you're starting to see a pattern here somewhat 4 0 3 4 1 2 4 2 1 all right so I deducted a pattern here which I think you can as well which is that height minus Rho minus 1 is equal spaces so 4 minus 0 minus 1 is equal to 3 4 minus 1 minus 1 is equal to 2 4 minus 2 minus 1 is equal to 1 and so on and so forth all right so this works with the payment of any height so let's take another example so let's say height of pyramid is 6 and on a 0 there are five spaces right 6 minus 0 minus one is equal to five six minus one minus one is equal to four so hopefully our so hopefully already understand the pattern here and we came up with the formula right which is basically space equals to height minus Rho minus one and this is just the formula we deducted here so now we know the formula how do we actually go about putting it into code right so now we can see here that on every single Lion the spaces come before the hashes right paces and then the hashes so it makes sense here then we put this that we put the loop for the spaces before the loop for the hashes right so let's make another loop here another for loop within the roll loop right before we print a new line we want to put spaces first so this makes sense so for let's create another variable called space four space equals to zero space less than height minus Rho minus one space plus plus right this is just the Commission is just the formula we found out earlier so for this we want to actually just printf a space all I do is press the space bar and semicolon let's compile the program hopefully it works all right we got an error and that's because we've forgotten to find that space is an int all right so space here what by the way we can also just like right in here instead like intro if you don't wanna do it up there but I just prefer for like just to make it neat right I just put it all the top so these are all ends and now let's try to make Mario again compile it all right well duh / Mario I'd write here for all right so it does print what we want that's great let's write again does slash Mario that's try five alright so it seems to work right works well now before submitting the program we let's actually check all right so cs50 will check it for us so what how we do that is we just need to copy this line over here copy to the terminal window and now it's gonna automatically check for us and actually in a while it's gonna prompt us for a github username all right type that in and our password as well all right so once you check all that you can actually check for the formatting as well and this is South 50 and there are points for this as well so you might as well do it so you copy this into the terminal window as well the same way we just did and when you're satisfied with these you can actually just go ahead and submit the final program right that's just by copying this into the terminal window all right I don't know submit it because I've already submitted it so you can just go ahead and do that and we can see that everything here is correct everything green so all works well so you can just go ahead and submit it so that's it for this video guys I hope you enjoyed it I hope it was clear if you have any questions leave them in the comments below and let me know which from said you want me to tackle next I'm thinking of doing the Mario more comfortable next so make sure to stay tuned for that but I'll also be doing the rest of cash credit week 2 week 3 before so make sure to subscribe for all that and yep hope you enjoy guys bye David