hey guys today i'm going to be going over cs50 lab 1 populations now this is going to be a stepbystep guide for beginners so please don't skip to the code don't skip to the solution but actually understand this step by step so let's first look at the information that they give us so assuming we have a population of n llamas and number of llamas let's say every year we gain n over three llamas as n over three llamas are born and we lose and over four llamas and over four llamas let's say die so the the population for the next year will be n the starting population plus n over three as we gain energy llamas minus n over 4 as we lose n over 4 llamas so given that let's say how many years will it take to reach 25 llamas ending population if the starting population is 20 llamas right so for this uh let's go over a quick example so the starting population let's say in this example is 20 and let's say we gain 20 over three llamas and when you put this on a calculator 20 divided by 3 is actually 6.6667 whatever but since we can't have 0.666 llamas we can't have a fraction of a lama we just ignore whatever is after the decimal so let's say we gain 6 and we lose 20 over 4 and over 4 llamas which is 5. so 20 plus 6 minus 5 gives us an ending population of 21. so now the ending population of year 1 carries over as the starting population of year two so now once again we repeat the same formula n over three and over four so 21 plus 21 over three minus 21 over 4 which is 21 plus 7 minus 5 which gives us 23 and once again this carries over to year 3 starting population 23 plus 7 minus 5 following the same formula the ending population is 25. so we can see that it takes us three years to get from 20 to 25 right so now let's say the user inputs a starting size of 20 an ending size of 25 our program needs to output years three all right so it seems pretty simple logically now let's jump right into the code and one more thing we need to keep in mind is that the minimum number of starting population for llamas is nine so there needs to be a minimum of nine llamas all right so since we know there's first thing we need to do is prompt for start size right this is the notes given by the program itself so prompt for start size how do we do that well first of all we need to make a variable right we need to declare a variable called uh for to capture the start size and we can just call it a start for simplicity you can call anything you want you can call it n even can call it mg whatever you want i'm calling it start for logical purposes just to help me kind of focus on it and know that that's the start size so we call in start and again i'm declaring it as an int because it's a number right we need to get some form of number from the user so that's why it's an integer or a number and now we need to use a loop to keep on asking the user for some input right so we can use a do while loop which basically means do the following while a certain condition is true so what do we need to do we need to ask the user for some input right so let's say start equals and how do we get some input from the user we're using the get function so get underscore and we need to get an integer from the user so get underscore int and let's prompt them let's say starting population starting population and so we need to keep on reprompting them for starting population if they input a number less than nine right that's just what what they tell us to do that's the instructions so while start is less than nine keep on prompting for a start size and let's see how this works so far make populations okay compiles dot slash populations okay so it asks us for starting population let's try putting in let's say two and it asks us again because it doesn't fulfill the condition so let's say 8 and again 8 is less than 9 so it's going to keep on asking us for a new starting population now let's say 10 and it doesn't ask us anymore because 10 is greater than 9 so it seems like this part of the program is correct already now we need to prompt the user for a certain end size so let's once again declare it in called end just for clarity purposes again you can call this anything you want um and again we use a do while loop because there is certain condition attached to the end to the number that we need to get so we do the following while a certain condition is true and again end equals get underscore data type is int again because we need to get a number from the user get underscore end this time we'll say ending population all right and what should the condition be here well thinking about it logically the ending population always needs to be greater than the starting population right so we can have the condition here while start is greater than end keep on asking the user for a new ending population right so let's try once again make populations okay compiles dot slash populations uh starting population let's say 10 ending population let's try to trick let's give it five and it asks us again because we said when you keep on asking if start is less than end and in this case we have input and n number which is less than start it's going to ask us again and let's try 9 and again it asks us because 9 is less than 10 and let's say 11. okay so it doesn't prompt us for an ending once again because we have finally fulfilled the condition that end is greater than start so we've gotten we've got the user input now we need to actually make the program that calculates the number of years and once again kind of intuitively you can sort of guess that we need another integer called years right but this time we don't want to ask the user for the number of years but rather our program is to calculate that integer so let's just say in tiers and once again we need to keep on calculating the number of years we need to keep on updating the number of years right so once again we can infer that we need to use a sort of loop and just to keep things simple let's use a do while loop same loops as we used previously so do the following while a certain condition is true and so for this case what do we need to do well we need to calculate the population in the next year like in the following years right and for that if you recall from earlier we have some sort of formula n plus n over three as we gain n over three minus n over four as we lose n over four so from there we can kind of infer let's just try to write it in the encoding right start equals start right n equals n plus start divided by three as we gain n over three llamas minus start divided by four as we lose enough for llamas so every time this happens we're basically telling the computer hey computer update the starting population and this is the value to update it to start plus start over 3 minus start over 4. and this is just nothing more than what we've deduced in the very beginning here which is n plus n over 3 minus n over 4. so every time this happens what do we need to do we need to update the number of years right we need to add an attach an additional year so to do that we can type year plus plus right so every time this happens it's another year so what condition should be here while start is less than end okay and why is this condition here don't worry i'm not gonna leave it at that let's actually look deeper into it now all right so why should the condition be start less than end so let's once again take the same example if the user inputs a starting size of 20 an ending size of 25 all right and the condition is start less than end so in year one it's going to check starting population is 20 is start less than end so is 20 less than 25 yes so we add one year as we said here if this is true then add one year so then we'll go to the next year where the starting population is 21. so is start less than end is 21 less than 25 yes so we add a year again and then we move to the next year and here the starting population is 23 just like we calculated earlier so is 23 less than 25 is start less than end yes 23 is less than 25 so add a year and again this is a loop so it's going to go to the next year again and here the starting population becomes 25. so is 25 less than 25 no 25 is equal to 25 it's not less than 25 so here the loop will not continue so we don't add another year and we stop the loop here all right so this is why the condition is start less than end so hopefully everything's clear so far and now all that's left to do is print the number of years and for that we use a very simple function called printf printf let's say years colon and we need to print the number of years right but we don't know how but the number of years is not a fixed amount it depends on the user input so for that we can use a placeholder an integer percent i and the value percent i needs to take is from the variable called year all right so how we do that is we put comma here which basically means that print the number of years that is there was character that was calculated earlier and so we do that but if you notice now the program is not quite done and that's because every year i mean every time this happens every time this happens we're going to want to keep on adding a year but what's the starting number of years well the years start at zero so we actually need to first initialize the variable year to zero all right so interior equals zero and every time this happens do a year plus plus while the while start is less than end right so so far everything makes sense logically hopefully if it doesn't rewatch the video rewatch this part or maybe leave a comment down below if you really don't understand i can help explain it further but everything makes sense so far logically we initialize here to zero we do year plus plus every time this happens while this condition is true and then we print the number of years finally so let's try make populations compile the program okay everything's gone smoothly dot slash populations to run it okay starting populations let's say from the example area 20 ending population 25 and it says years three so it's correct but just one stylistic issue here is that it's prompting me for the next line of code in the same line so we don't want that it looks not very pretty so let's make a new line here let's do backslash n for a new line and let's compile it again make populations all right dot slash populations starting population 20 ending population 25 and now it looks nice right everything is in one line starting populations ending populations and years and it prompts us for the code in the next line so let's just look at the instructions here let's try one of their examples just to make sure that our code is correct start size of 100. let's run our program again dot slash populations start size is 100 ending population they want us to put a million and years should be 115 if our program is correct so a million ending population and here is one on five so our program appears to be correct but just to double check you can use you copy this it's from the i'll put the link down below but it's just from cs50s website you copy this and you paste it into your terminal window all right i've already done it so i'm not going to do it again but you can do it check make sure it's correct and it should show everything green and once you do that don't forget to check the style as well just to make sure there are points for style so to maximize your number of points your grade you should check for style as well and when everything's correct all you have to do is submit do that by copying this code over here so that's it for this video guys thank you so much for watching make sure to like and subscribe if this video helped comment down below if you have any questions and i'll do my best to answer every single question and that's all for today thanks for watching guys bye david