hey guys congratulations on completing cs50s lecture zero this is the first step that you'll presumably take into your journey of programming so let's just jump right into the screen here and the first problem set of this course is we need to make a program on a programming language called scratch all right and this is the program right here so unlike most coding languages it's not based on text but rather on puzzle pieces as we can see here so it's more of a graphic programming language and it's the perfect introduction for us to understand the logic of programming all right so we can see here that we have a cat and any object on scratch is called a sprite so this cat right here is a sprite so in order to do this problem set they give us certain criteria that we have to fulfill this is from cs50 themselves um but let's ignore this for a minute and let's focus on scratch all right so we're supposed to make any sort of game or interactive story or anything that involves some sort of interaction so i've decided that i want to make a game you can make anything at all um i want to make a game all right but i don't want the game to have a cat i want to make some sort of paddle ball game you know the ones that we used to play when we were kids yeah so uh first of all i don't want this cat so let me delete the sprite right here all right so it's a blank screen and so i want to add a sprite and for that i come to the bottom right corner here and it pops up here so choose a sprite so the first thing i want is a ball okay perfect there's a ball right here okay so there's a ball and i also want a paddle right i want to make a battle ball game so choose a sprite again bottom right corner and paddle all right let me just search for a pedal pedal okay perfect so we have a ball and a paddle the two sprites required to make this project but first of all what's the first thing i want i want the ball to move how do i go about doing that so if you look at the left side menu here there's a tab called motion and the first puzzle piece here is something called move 10 steps okay that sounds about right i want the ball to move so let me just try that and to run any program on scratch we click the green flag right so let's hit the green flag and nothing appears to be happening and that's because i didn't tell the program to do this when the green flag is clicked so let me jump on you over here to events and drag this over here when green flag clicked move 10 steps and by the way when you start off with scratch you won't you won't necessarily know that when green flag clicked is under events but eventually as you mess around with the program a bit you're going to get the hang of it so i already knew there was an events but you might have to look around here maybe scroll a bit and find when green flag clicked and now we know it's in events all right so let's run it now click the green flag and the ball does move but i have to keep on clicking the green flag for it to move i don't want this to happen i want to just keep moving automatically by itself and for this if you remember from the lecture we can use something called a loop which basically means do something again and again and in this case i want the ball to move forever i want the ball to keep on moving all right so for that we can use a forever loop which again is an event so i want to use a forever loop and let me just drag it here it'll automatically combine over there all right so now the move 10 steps is within the forever loop okay now let's try to hit the green flag oh so the ball did move quite a bit and it's still moving but when it hits the edge of the screen it just stops and we don't want that to happen what we want is we want the ball to bounce when it hits an edge right so let's look again you scroll try to find something that makes sense and here we see a puzzle piece called if on edge bounce and that sounds about right so let's drag it here under the move 10 steps still within this forever loop and let's play the program and now we can see that it actually bounces but again i want the ball to sort of interact with the paddle and move around here and there so this is not the best way to do it as we can see it's just rolling from side to side so let me stop the program there and how might we go about sort of pointing the ball in a certain direction so we can see here that there's a puzzle piece called point in direction so let me just put it in my forever loop and point in direction and this is 90 degrees presumably yes so the ball is currently running on 90 degrees because it's going from side to side so rather than 90 why don't we make it a 45 and let's see what happens now oh what is happening so the ball is moving but when it's on the edge it's not bouncing and it keeps on trying to go through that one side so we must have made some error in our code and don't worry this is completely normal everyone makes errors all right so how can we fix the error now is the problem so let's start the program and we can see here that we put the point in direction puzzle piece in the forever loop so it's going to forever point in that direction but that's not what we want we wanted to just point in the direction once when when the green flag is clicked so we take out this point in direction from our forever loop and we instead put it above it here and then when a green flag clicked so let's see what happens now okay perfect so we can see that you know there are some puzzle pieces that we don't want to put in the forever loop because there are some things that we don't want to do forever but again as we can look at the game here it's not much of a game the ball is moving right through the pedal right we don't want the ball to move through the pedal we wanted to interact with the pedal so it sounds like we need to do some more programming all right so it sounds like when the ball touches the pedal we want it to move back where we wanted to hit back we want the battle to hit the ball sort of so how do we go about doing that well if you think about it we need a condition right we can say something like if the ball hits the battle then it should move rather than simply go through it so what might we be using here we need to use us an if function right so where can we find an if function well again we won't know this but if you mess around with scratch enough you'll know that it's under controls you're not expected to know this beforehand though i just do so this sounds like the correct puzzle piece if something happens then something should happen all right let's put it in our forever loop if what if the ball is touching the paddle right so this is our condition if something happens then something so if the ball is touching the pedal it sounds like we might need to use the sensing tab here because if it's touching something all right again this is sort of something you think about you mess around scratch and it'll come naturally to you so we can see here under sensing there is a puzzle piece called touching but we don't want it to be touching moist mouse pointer so we click on the arrow oh and there is paddle so touching paddle okay so if the ball is touching the paddle then what we wanted to do we want the ball to turn around and then move the steps again so we wanted to turn around sounds like something we could use in motion and then we wanted to what what can we use here we want it to perhaps turn right we want to turn let's say 180 degrees and hit right back so let's try that green flag clicked oh okay seems like it worked but again this is not a very fun game because there's no way we can move the paddle right so how about now we can switch the code we can switch the sprite that we're writing code for so here we can see that the ball is selected so this is the code for our ball it's a script for the ball and now we click on the paddle here and okay so it's blank again because we have not written any scripts for the battle so for the paddle what do we want we want to be able to move it somehow so it sounds like we're going to need the motion so how do we go about moving this let's look around here how about set x to something all right let's drag it here first set x to minus 30. uh by the way set x is just referring to set the position of the sprite on the xaxis if you remember from math class x is the horizontal axis and y is the vertical axis so set x to something but i don't want to set it to minus 30 i want to set it to wherever my mouse is so again it sounds like we need to sense where the mouse is so perfect we see here that there's a pencil piece called mouse x so set to mouse x and let's not make the same mistake as before like we did in ball here we need to put when green flag clicked and if you remember that's an event so when green flag clicked set x to mouse x so let's see what happens here what why is it not moving let's try this again and again it doesn't appear to move and that's because it's only following this instruction once it's only setting its location on the xaxis one time rather than doing it forever it's only when the green flag is clicked that it's following where the mouse is so again we need to use a forever loop here under the control section so let's put that inside there okay so now let's try it out oh wow so now it does work okay that's pretty cool so far but this is not a very fun game uh because first of all if i miss if the ball misses the paddle nothing happens so that's not very fun there should be some sort of way to die or something like that so how do we go about doing that well we don't want it to hit the bottom side right so if it hits somewhere below the pedal we want to say game over or something we want the game to stop basically so for that we can use another sprite and if you remember uh just click here bottom right choose a sprite and let's say we just want a line let's see if there's okay there's a line here put it below the pedal so now what code can we write for the line basically just thinking out loud here we want we want the game to stop basically when the ball hits the red line right so currently nothing happens when the ball hits the red line because we haven't programmed anything for the red line so if we miss the ball and the ball hits the red line we need to we need the game to stop we need to be game over you know so first of all for the line here again let's not mess about first things first when green flag clicked when green flag clicked what do we want to do again let's not make the same mistake as before let's we want whenever the ball hits the red line we want the game to stop so it sounds like we need to forever be checking is the ball hitting the red line no is the ball hitting the red line is the ball hitting we want to keep on asking the computer that so for line it seasons that we need on the forever loop so forever if the ball is hitting the red line we want the game to stop so it sounds like the if condition here sounds about right so forever if the ball is touching the red line the ball is touching the red line sounds like something we can use with sensing so if touching again we can come to the drop down here and if touching the ball right we're writing code for the red line so if the red line is touching the ball then we want the game to stop stop sounds like something that could come under events if i'm not mistaken and turns out it's not it's actually under control right so it's just a game of trial and error here to find the pieces but the logic the conditions stay the same so under control here there's a stop so if the red line is touching the ball then stop all all right so now let's run the program again let's see if it works okay let me miss and it does stop okay that's a good sign let's try to restart the game by clicking the green flag again and again we can see that there is some sort of error here we click the green flag and the ball moves 10 steps but when the bomb moves 10 steps it's still hitting the red line so we wanted to move again and again until it's no more hitting the red line so we need to click the green flag multiple times here and that doesn't seem very fun so instead what we can do is we go back to our ball here how about when green flag clicked the ball moves to a random position doesn't that sound nice so rather than starting over here on the red line it'll start from any random position so go to any random position again sounds like something in motion and right here we have a puzzle piece called go to random position and this is perfect so again try to think over it should this be in the forever loop or should it be outside the forever loop my logic tells me that it should be forever it should be outside the forever loop because i don't want the ball to go to random position forever but only at the start of the game when the green flag is clicked so let's test it out now let us die click the green flag and okay we saw it started from a random position let's try it again hit the green flag okay so there's a there's also a bug here because when we do a random position the random position can also be where the red line is but that's just uh you know that's an edge case so let's try again start from random random random random all right so it seems to be pretty uh going pretty well but again this is first of all a pretty boring game i'd say uh let's try to spice it up a bit so first of all i think making a backdrop would be nice so over here in the bottom right corner we don't add another sprite we want to add a backdrop here choose a backdrop bottom right corner and i want to make it something let's say it seems nice here what i want to make it something related to space space let me search for one here and this background looks pretty nice okay so the game already starting to look a little more fun um but again uh how we could make this game a bit more fun is by keeping track of our score right because right now the ball is just bouncing off the paddle it's going here and there and with the red line it hits the red line it stops but let's try to make a score to keep track of your progress in the game that sounds pretty fun and when we want to store a value we sort in a variable okay so let's the menu here we click variables and let's make a variable so let's make a variable let's call it score for all sprites okay so instantly here we can see on the top left corner there's something called score so let's try to play the game okay the ball hits the pedal but the score isn't updating and that's because we haven't actually done any programming with the score we just put it there so now when do we want the score to increase well we want it to increase every time the ball hits the paddle right so if the ball is touching the paddle increase score by one that's sort of the way you say to the computer right so over here we can see change variable by one okay so we want to change i get the drop down menu here change score by one if the ball is touching the paddle right so 280 degrees and change score by one and also another thing we should do is in the beginning of the game we need to set our score to zero so here we can change set score to zero and again we'll put it here and oh wait so over here you might be thinking why do i need to set the score to zero at the beginning isn't it already zero so okay let's let's listen to the counter argument let's not put the score but here we have change score by one if the ball is touching the battle okay let's do this let's try it out okay and the score is updating so one two every time the ball hits the paddle the score is being updated so this is a pretty fun game but let's see what happens when i die here i know i wanna start a new game i hit the green flag but we see that the score started from five instead of from zero right so that's why in the beginning we need to set the score to zero so again we do events when green flight clicked move to variables here set score to zero so that's why we need to do it uh we've shown the demonstration all right so again the game seems to be working perfectly let's try to die on purpose here hit the green flag again and the score resets to zero all right so the game seems to be working very well um but again it's just missing a little bit of that you know so let's try to add maybe a sound every time the ball hits the paddle that sounds like it could be fun so in the menu luckily here we have sound so okay play sound pop until done that sounds pretty fun so where where might we drag it here here in the ball script we can see that when green fly clicked if the ball is touching the paddle then play sound pop that sounds like it makes sense you know so green flag clicked that's right oh you can hear that sound pop okay so that's pretty fun the game is already looking very nice and when it dies what happens okay so again a sound effect when it dies might be fun as well again this is not needed just it's just to make the game a little more fun a little more interactive so we come over here to click the line and we write a script for the line uh let's say if the ball is touching if the line is touching the ball then let's play sound uh we can record a sound here uh so you can actually record any sound you want with your computer's microphone but i'm not gonna do that right now so let's just say play sound pop all right ideally it'll be a different sound but let's just try it out here pop all right that's pretty fun let's see what happens when we die okay and so this is our game we can see that it's very simple all you have to do is work on the logic step by step and that's it so now let's check our game that we made against cs50s criteria right and this is found on cs50's website i can leave the link in the description below so first criteria is your game must have your project must have at least two sprites at least one of which must resemble something other than a cat so we got our program here okay ball paddle line it seems that we have three sprites and none of them are cats so okay we fulfill this criteria your project must have at least three scripts total okay so remember scripts are like whenever green flight clicked that's one script so here we have a script one two paddle has its own script here three and line has its own script so we have four scripts so okay it fulfills this condition your project must use at least one condition and remember what a condition is it's like if something happens then something so we can see here that we use a condition on the ball if touching paddle then so that's a condition so paddle we don't have a condition and line we do have a condition so if touching ball then stop so we use two conditions here and the criteria is that we have at least one so okay we fulfill that criteria it must use at least one loop so again here the forever that's a loop do something forever and again we have a forever loop here and we have another forever loop here so we have three loops and we need at least one okay so we fulfill that condition let's use at least one variable and again score here is a variable that's where we store our score and finally it needs to use at least one sound and we do have a sound here place on pop until done so it fulfills the criteria your project should be more complex than most of those demonstrated in the lecture so this isn't quite that complex it's a very simple game so maybe we could do something to make it a little more fun a little more interesting and a little more complex so here are some things to consider how might you increase difficulty let's say a program where the ball starts off slow and gets faster the higher your score is so let's say in the beginning the ball moves slowly slowly slowly and let's say when you reach a score of 5 we want the game to get a bit more difficult so the ball becomes faster the ball speed becomes faster how might we do that well i'm not going to tell you the answer because that's for you to figure out but we know we can change the ball speed by changing the number of steps the ball moves so let's say here instead of 10 steps i move it 20 steps you can see the ball is a lot faster okay but we don't want it just like that we want it to be only if like let's say just like a game logic as the game progresses the difficulty should increase as well so how do we make it in such a way where if the score reaches a certain amount then only should the speed become faster maybe we could use something like if score is above 10 then move 20 steps forever i don't know something like that i'm not going to tell you how to do it this is something you should figure out and again how would you add lives to the game with the game only stops after you missed three times rather than one so currently here if the ball hits the red line once you immediately die the game stops but what if i wanted to have lives let's say three lives so the game would only stop when i when the ball hits the red line three times how would we go about doing that could we perhaps make another variable called lives so when green flight clicked set lives to three and every time the ball hits the red line decrease lives by one maybe maybe something like that that's something for you to figure out again and what if i wanted to move the paddle with my keyboard rather than a mouse so again how might we go about doing that these are some things that i'm going to leave open to you guys leave it in the comments below if you have an idea on how to do it walk it through logically try to think about each of these scenarios and again you don't have to do this this is just a game that i made like from scratch you can make your own game obviously make it a little more complex than this is a rather simple game and yeah hopefully you enjoyed that video guys thank you so much for watching and as usual bye david