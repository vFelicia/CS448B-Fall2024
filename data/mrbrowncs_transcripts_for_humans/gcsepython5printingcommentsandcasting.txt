With timestamps:

00:00 - hey in this fifth video I want to talk
00:01 - about printing and how it can output
00:03 - stuff to the user I would also talk
00:04 - about comments and casting as we go I
00:07 - would also like to start transitioning
00:08 - away from the interactive mode which is
00:10 - really really useful for us playing
00:11 - around and getting used to things and
00:12 - we'll still use it at some point but I
00:14 - want us to use a script mode because we
00:16 - want to be writing the proper programs
00:18 - which we can download and run so I'm
00:20 - going to keep using red blitz but you
00:22 - can also do mr. Michaux so in repla on
00:24 - the left hand side this is our script
00:25 - mode and Envoy right hand side is our
00:27 - interactive shell we can still use the
00:29 - interactive shell but now we can start
00:31 - to write code on script mode in script
00:34 - mode and run it and it will show the
00:36 - output over here
00:37 - so really the interactive show now is
00:39 - where the output is shown you can
00:40 - imagine the user running your program on
00:43 - their computer this would this show is
00:46 - what shows what they would see let's
00:48 - start with outputting data because we've
00:49 - done that already in our first video
00:51 - where we typed in prints hello world
00:55 - like that and we did it in the
00:59 - interactive show so we didn't see these
01:00 - colors for colors often come from you
01:03 - Wafaa come from the IDE so in this case
01:05 - is a repla online IDE but alternatively
01:07 - we could do it in idle which is awesome
01:10 - colors for colors are different so here
01:12 - let's just do hello here prints goes to
01:15 - purple in repla goes to blue that color
01:17 - scheme is just a down to you for
01:19 - creators or the IDs the color schemes is
01:21 - the help us it doesn't help for computer
01:23 - there being different colors it's a way
01:25 - for us to distinguish between different
01:26 - constructs in Python so this color here
01:29 - blue in repla this refers to a built in
01:32 - function and we'll see many more of
01:33 - these as we go so in script mode I've
01:36 - written my print hello world I've done
01:38 - some blank lines here Beth fine
01:40 - nothing's contained on them I now can
01:42 - hit run up here and run the code before
01:44 - I was just pressing enter and it would
01:46 - do it for us perhaps be interactive show
01:48 - it works differently to script mode and
01:50 - we get hello world to you notice a bit
01:52 - slower sometimes on replica least to run
01:54 - this that's why the interactive shell
01:57 - can be sometimes better but for longer
02:00 - programs it doesn't it's different so
02:03 - we've got hello world same idea in pipe
02:06 - in idle except to get to your script
02:08 - mode we can go to file new file and this
02:12 - window pops up just
02:14 - my other screen is where we would write
02:17 - our code instead and if you want to
02:18 - replicate the same sort of look as on
02:22 - replicant have it side by side we could
02:24 - just drag it across and have a split
02:26 - screen like that same idea here so I've
02:28 - typed in my code on the left hand side
02:30 - of the strip mode but now you've got to
02:32 - make sure you go to run and run module
02:33 - and then it last you to save it you save
02:35 - your file and then it will run in the
02:36 - shell so it's a bit more of a faff
02:38 - honestly doing it in idle but very
02:42 - advantageous to do it offline as well
02:43 - one of the advantages of doing it in I
02:45 - do is you've got that file saved on your
02:47 - computer if you want to get the file
02:49 - which is stored on rep let you go over
02:51 - here and download a zip all of your
02:54 - files will be on the left hand side in
02:55 - this report they call it you download it
02:58 - as a zip extract it and your file will
03:00 - be there and if you want to give it to
03:01 - someone else fastest one where you can
03:02 - do it anyway so printing so what
03:04 - printing does at its core is take
03:06 - whatever is inside these brackets and
03:09 - output it to V user and put it in the
03:12 - form of text on the user's screen so
03:14 - this hello world here was actually
03:15 - output it not by python but by whatever
03:18 - program repla is write whatever language
03:22 - repla is running on the equivalent of a
03:24 - print statement of that language was
03:25 - used to show hello world on the screen
03:27 - all the stuff here was shown to us as
03:29 - users with some equivalent of a print
03:32 - statement except for most programs we
03:34 - are used to are what we call graphical
03:36 - user interfaces you'll notice how in the
03:38 - initial learning of Python we're just
03:40 - going to use command-line interfaces
03:42 - which are quite different to what we are
03:44 - used to which is where we have in a
03:45 - shell just output lines or input into
03:47 - Mempa and it will react like that so
03:49 - programs we're making at the start a
03:51 - very different a programs we're used to
03:53 - the Python can be used to make the fancy
03:55 - graphical programs once you know the
03:57 - basics so carne inside about hello world
04:00 - we've got a string we can also print say
04:02 - an integer is 5 a whole number can also
04:04 - print say 5 - 5 point 5 that you notice
04:09 - when I'm typing stuff in at least in
04:10 - wrap blur not so much in idle or idle
04:12 - does it occasionally a box pops up this
04:15 - is trying to help us by giving more
04:17 - details about Python which is which can
04:19 - be got useful it's showing us here what
04:21 - else we can put it inside shrink a print
04:24 - function beyond just a value which is
04:25 - useful
04:27 - you can ignore for time beings click
04:28 - away and now we can run this and it will
04:30 - do the same thing can see each print
04:32 - statement is doing it on a separate line
04:33 - if you particularly want to get rid of
04:36 - this you can instead add a comma after
04:38 - your first value you are trying to print
04:40 - and as it says actually in this helpful
04:43 - prompt if we type end like this
04:46 - go equals we can supply what we call a
04:49 - parameter to end is a variable which is
04:52 - submitted to this function and we can
04:54 - stay instead of the default type in say
04:58 - an empty string like that we'll have a
05:00 - space and now if I run it you'll notice
05:03 - for hello world it's followed by five
05:05 - because for hello world print statement
05:08 - is not ending on a new line it's ending
05:10 - on just a space and so there's a space
05:12 - between the hello world and the five say
05:15 - we have some shopping application I want
05:17 - to output the price you could do
05:18 - something like an output saying I don't
05:20 - know for price is five pounds or even we
05:25 - can have a price is some variable called
05:27 - price which a variable would be replaced
05:29 - at one time maybe with an input so what
05:31 - I've done here I've done a hash symbol
05:33 - what you see a hash tag and say Twitter
05:36 - this is what we call a comment so a
05:38 - comment is really good because a comment
05:40 - is where we can kind of type anything we
05:41 - want to but without actually turning up
05:45 - in our actual programs if I run this now
05:47 - nothing will appear here because a
05:48 - comment is completely ignored by the
05:51 - computer so a comment is good if you're
05:53 - wanting to write a message if you
05:54 - yourself will to someone else they're
05:56 - also really important to explain what
05:58 - your code is doing because often code
05:59 - can be a bit complex and if you're
06:02 - sharing it if someone else a comment it
06:04 - can help make sense so anyway let's say
06:05 - we're trying to get this output the
06:07 - price is whatever this price the
06:09 - variable is let's save as price variable
06:11 - for time being is just five pounds maybe
06:13 - so in step five and if we want to print
06:16 - this out we could do print five or could
06:19 - use read print price because five is
06:21 - assigned to price and so when I do print
06:23 - price it replaces price for five which
06:26 - is what's been saved and so we'll just
06:27 - get five fair this isn't matching what
06:29 - we have here so instead you can do
06:31 - something like we could do the price
06:35 - is pound because all of that is a string
06:37 - this up here is not an integer it's a
06:41 - different days to have you put us around
06:42 - it in quotes the price is not a string
06:45 - it's an integer and so we can use for
06:47 - comic gain in the print statement to
06:50 - separate out two values so if I run this
06:53 - now we will get to a price is pound sign
06:57 - space five so almost what I wanted up
07:00 - here using print statements with commas
07:02 - on is really good if you have different
07:04 - datatypes you're wanting to combine
07:05 - somehow because if we did something like
07:07 - the price is pound and then after that
07:11 - quote we did a plus and the price this
07:14 - will not work because five is an integer
07:16 - and we're trying to add an integer to a
07:18 - string which it doesn't like we can fix
07:22 - this by doing something called casting
07:23 - casting from an integer back to a string
07:27 - by surrounding this price with an SDR
07:32 - function so like a print this is built
07:35 - into Python is done to help us so to
07:38 - make sure you have enough brackets
07:40 - because really we are evaluating this
07:42 - first and then including it in our
07:43 - prints Damon and now this will work the
07:47 - advantage if we are getting rid of this
07:50 - space after pound sign because by
07:52 - default for where it was naturally is
07:55 - when you have a comma it replaces vac
07:57 - comma with the separator and by default
07:59 - we're separator is a space if you really
08:01 - wanted to get rid of this like with the
08:03 - end extra parameter you type in set and
08:07 - set this to be an empty string and it
08:10 - gets rid of a separator working as a
08:12 - space a space as a character we just
08:15 - don't see it on-screen
08:16 - so generally casting it's converting
08:20 - data types and we do this by using a
08:21 - shorthand version of datatype so we can
08:24 - do for example int as to us as a comic
08:26 - again could do for example int is 5 as a
08:30 - character this will convert int this
08:33 - will convert for string version of 5
08:35 - into vintage a version of 5 so we can
08:37 - use it in calculation so that's going to
08:39 - use 4 then a second when we do inputs of
08:40 - a vice-versa
08:42 - we can do STR and convert 5 back to that
08:46 - character
08:46 - now before we look at inputting pause
08:48 - this video and have a look at these
08:50 - questions and I recommend you try some
08:52 - of this code out yourself and have a
08:54 - little play around

Cleaned transcript:

hey in this fifth video I want to talk about printing and how it can output stuff to the user I would also talk about comments and casting as we go I would also like to start transitioning away from the interactive mode which is really really useful for us playing around and getting used to things and we'll still use it at some point but I want us to use a script mode because we want to be writing the proper programs which we can download and run so I'm going to keep using red blitz but you can also do mr. Michaux so in repla on the left hand side this is our script mode and Envoy right hand side is our interactive shell we can still use the interactive shell but now we can start to write code on script mode in script mode and run it and it will show the output over here so really the interactive show now is where the output is shown you can imagine the user running your program on their computer this would this show is what shows what they would see let's start with outputting data because we've done that already in our first video where we typed in prints hello world like that and we did it in the interactive show so we didn't see these colors for colors often come from you Wafaa come from the IDE so in this case is a repla online IDE but alternatively we could do it in idle which is awesome colors for colors are different so here let's just do hello here prints goes to purple in repla goes to blue that color scheme is just a down to you for creators or the IDs the color schemes is the help us it doesn't help for computer there being different colors it's a way for us to distinguish between different constructs in Python so this color here blue in repla this refers to a built in function and we'll see many more of these as we go so in script mode I've written my print hello world I've done some blank lines here Beth fine nothing's contained on them I now can hit run up here and run the code before I was just pressing enter and it would do it for us perhaps be interactive show it works differently to script mode and we get hello world to you notice a bit slower sometimes on replica least to run this that's why the interactive shell can be sometimes better but for longer programs it doesn't it's different so we've got hello world same idea in pipe in idle except to get to your script mode we can go to file new file and this window pops up just my other screen is where we would write our code instead and if you want to replicate the same sort of look as on replicant have it side by side we could just drag it across and have a split screen like that same idea here so I've typed in my code on the left hand side of the strip mode but now you've got to make sure you go to run and run module and then it last you to save it you save your file and then it will run in the shell so it's a bit more of a faff honestly doing it in idle but very advantageous to do it offline as well one of the advantages of doing it in I do is you've got that file saved on your computer if you want to get the file which is stored on rep let you go over here and download a zip all of your files will be on the left hand side in this report they call it you download it as a zip extract it and your file will be there and if you want to give it to someone else fastest one where you can do it anyway so printing so what printing does at its core is take whatever is inside these brackets and output it to V user and put it in the form of text on the user's screen so this hello world here was actually output it not by python but by whatever program repla is write whatever language repla is running on the equivalent of a print statement of that language was used to show hello world on the screen all the stuff here was shown to us as users with some equivalent of a print statement except for most programs we are used to are what we call graphical user interfaces you'll notice how in the initial learning of Python we're just going to use commandline interfaces which are quite different to what we are used to which is where we have in a shell just output lines or input into Mempa and it will react like that so programs we're making at the start a very different a programs we're used to the Python can be used to make the fancy graphical programs once you know the basics so carne inside about hello world we've got a string we can also print say an integer is 5 a whole number can also print say 5 5 point 5 that you notice when I'm typing stuff in at least in wrap blur not so much in idle or idle does it occasionally a box pops up this is trying to help us by giving more details about Python which is which can be got useful it's showing us here what else we can put it inside shrink a print function beyond just a value which is useful you can ignore for time beings click away and now we can run this and it will do the same thing can see each print statement is doing it on a separate line if you particularly want to get rid of this you can instead add a comma after your first value you are trying to print and as it says actually in this helpful prompt if we type end like this go equals we can supply what we call a parameter to end is a variable which is submitted to this function and we can stay instead of the default type in say an empty string like that we'll have a space and now if I run it you'll notice for hello world it's followed by five because for hello world print statement is not ending on a new line it's ending on just a space and so there's a space between the hello world and the five say we have some shopping application I want to output the price you could do something like an output saying I don't know for price is five pounds or even we can have a price is some variable called price which a variable would be replaced at one time maybe with an input so what I've done here I've done a hash symbol what you see a hash tag and say Twitter this is what we call a comment so a comment is really good because a comment is where we can kind of type anything we want to but without actually turning up in our actual programs if I run this now nothing will appear here because a comment is completely ignored by the computer so a comment is good if you're wanting to write a message if you yourself will to someone else they're also really important to explain what your code is doing because often code can be a bit complex and if you're sharing it if someone else a comment it can help make sense so anyway let's say we're trying to get this output the price is whatever this price the variable is let's save as price variable for time being is just five pounds maybe so in step five and if we want to print this out we could do print five or could use read print price because five is assigned to price and so when I do print price it replaces price for five which is what's been saved and so we'll just get five fair this isn't matching what we have here so instead you can do something like we could do the price is pound because all of that is a string this up here is not an integer it's a different days to have you put us around it in quotes the price is not a string it's an integer and so we can use for comic gain in the print statement to separate out two values so if I run this now we will get to a price is pound sign space five so almost what I wanted up here using print statements with commas on is really good if you have different datatypes you're wanting to combine somehow because if we did something like the price is pound and then after that quote we did a plus and the price this will not work because five is an integer and we're trying to add an integer to a string which it doesn't like we can fix this by doing something called casting casting from an integer back to a string by surrounding this price with an SDR function so like a print this is built into Python is done to help us so to make sure you have enough brackets because really we are evaluating this first and then including it in our prints Damon and now this will work the advantage if we are getting rid of this space after pound sign because by default for where it was naturally is when you have a comma it replaces vac comma with the separator and by default we're separator is a space if you really wanted to get rid of this like with the end extra parameter you type in set and set this to be an empty string and it gets rid of a separator working as a space a space as a character we just don't see it onscreen so generally casting it's converting data types and we do this by using a shorthand version of datatype so we can do for example int as to us as a comic again could do for example int is 5 as a character this will convert int this will convert for string version of 5 into vintage a version of 5 so we can use it in calculation so that's going to use 4 then a second when we do inputs of a viceversa we can do STR and convert 5 back to that character now before we look at inputting pause this video and have a look at these questions and I recommend you try some of this code out yourself and have a little play around
