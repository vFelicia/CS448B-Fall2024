With timestamps:

00:00 - hello and welcome to a series of videos
00:01 - which I'm calling Python challenges the
00:04 - idea being in these videos I'm going to
00:05 - set a programming task for you to try
00:08 - and then I'll show you how to do it so
00:10 - I'll show you the solution and I'll do
00:12 - it myself
00:13 - the idea being if you're learning
00:14 - programming really you can't properly
00:16 - learn the skill of Python or skill of
00:18 - programming without practicing yourself
00:19 - and so these are meant to give you
00:21 - another opportunity to practice skills
00:23 - in this miniseries they'll get
00:26 - progressively harder or back as your
00:28 - idea at least hopefully it'll provide
00:30 - some challenge for you but right now
00:32 - we're just doing a really simple chatbot
00:33 - in this video because I want to just
00:35 - practice some fairly well for kind of
00:39 - most basic skills you learn when you're
00:41 - doing programming so printing d-nev user
00:43 - input
00:44 - assigning variables and doing some basic
00:46 - arithmetic calculations these challenge
00:49 - videos are made in support of a set of
00:52 - tutorials I made on Python which will be
00:54 - linked to that playlist in the
00:55 - description if you're not aware of it I
00:57 - imagine most people watching this are in
00:59 - that palace because o intersperse for
01:01 - tutorials with V challenges because
01:03 - really is important to practice what
01:05 - you're learning at the end of each of
01:06 - these videos I have these tutorial
01:08 - videos I have got a like or try now
01:10 - exercise but they'll tend to be a little
01:12 - bit shorter than these challenge videos
01:15 - and also trying hours are for that video
01:17 - these sorts of these challenges are
01:19 - going to span a few videos at least so
01:21 - in this case there are five videos which
01:22 - cover the content needed for this so
01:25 - right now we're going to start by
01:27 - creating what I'm calling a simple chat
01:29 - bot so a chat bot is a program where you
01:32 - can interact as a user will for program
01:35 - in some capacity so this could just be
01:37 - like a parrot repeating stuff back at
01:39 - you they can be quite clever I mean
01:41 - nowadays we'll have things like a lexer
01:42 - and siri apparently this logo on the
01:44 - left is for Siri where we have a much
01:46 - more interactive experience you know you
01:48 - can ask for pretty much anything a make
01:50 - and reply with what seems like a
01:52 - customized message to you the very rely
01:54 - on loads of complicated things like
01:56 - natural language processing machine
01:57 - learning and may draw in data from loads
02:00 - of different sources
02:00 - right now we're just having an effective
02:03 - vehicle parrot is just ripping stuff
02:05 - back because I want to be able to create
02:07 - a simple trap or program where the user
02:08 - can have a basic conversation with a
02:10 - program the user is going to be asked
02:11 - questions and
02:13 - Peter's going to be able to respond
02:14 - using their answer making it slightly
02:16 - interactive so it's not quite
02:18 - interactive in the same way as a lexer
02:20 - or Siri would be but we can do something
02:22 - like this where in blue we have your
02:25 - computer's output and in black we have
02:27 - the input so first of all what is your
02:29 - name is being asked user types in Guido
02:31 - presses enter and Guido is used in the
02:34 - following output from a computer so the
02:36 - actual input from a user is being used
02:38 - along in the program so it does make it
02:40 - a little bit interactive and allows us
02:42 - to try out a few different skills like
02:45 - basic maths because we can also ask some
02:48 - math questions so it can't become a bit
02:50 - like a quiz if you want it to and of
02:51 - course you can expand this if you want
02:53 - to make it more impressive if you know
02:55 - more Python but you know that'll do for
02:58 - right now assuming you are just
03:00 - beginning so to help you to help guide
03:02 - you towards how we can solve this and
03:04 - really now the goal here is not to
03:06 - create a chatbot you can sell for loads
03:08 - of money to Apple or Amazon the goal is
03:11 - to practice four skills and so here are
03:13 - some success criteria which rule if you
03:15 - hit each of these bullet points will
03:16 - mean you've created a good program so I
03:18 - want to be at least eight lines of code
03:20 - we want to be able to use prim
03:21 - statements input statements use
03:23 - variables preferably more than one have
03:25 - some comments which explain the code
03:26 - that's really important so good habit to
03:28 - get into and try and use some non string
03:30 - data types so numbers and we can use
03:34 - those numbers and integers and floats in
03:36 - over to operations so doing the more
03:38 - advanced ones like modulo or
03:40 - exponentiation would be really good as
03:42 - well so I'd really recommend now you
03:44 - pause a video over on this slide or the
03:47 - previous slide to understand the tasks
03:50 - have a go at yourself it shouldn't take
03:52 - too long and then right now I'll show
03:55 - you a solution of course your solution
03:58 - doesn't need to match mine totally we
04:01 - want to have a bit variety but if you
04:03 - try and hit these criteria that would be
04:06 - perfect so I've copied and pasted them
04:08 - in here so I can keep track of what I'm
04:09 - doing but I don't want me to be part of
04:11 - my program so if I run out I'll get an
04:13 - error because visa this is not valid
04:15 - Python code I've got invalid syntax and
04:18 - so if I want to get rid of this and make
04:20 - sure we're not get rid of it but make
04:21 - sure it's not being run by the computer
04:23 - I can surround it in triple quotes
04:26 - I may not show this in a video actually
04:28 - yet but triple quote is like a
04:30 - multi-line comment and so a single
04:32 - comment is just a line of code which
04:35 - doesn't ever get running by for computer
04:37 - allows us to explain our code allows us
04:39 - to draw stuff down maybe do a bit of
04:41 - debugging to get rid of a line if you
04:43 - want to keep it but not actually run it
04:45 - but it doesn't work over multiple lines
04:47 - so that is a nice trick okay so minimum
04:52 - eight lines of code we can sort of just
04:54 - do that eventually
04:55 - first of all let's do a print statement
04:57 - so if I start off by doing something
04:59 - similar to the example I showed I could
05:01 - just do print hello maybe we do hello
05:04 - how are you and so I'm doing print is a
05:07 - built-in function to Python I won't
05:08 - explain all of this stuff all over again
05:10 - I've hidden the tutorials we have print
05:13 - we have our brackets and we supply some
05:15 - data in these and the way print works is
05:17 - anything inside the brackets will get
05:20 - shown to the user on the screen I should
05:22 - say this program is going to be just
05:23 - over a command line so just text
05:25 - somewhat serious something like Alexa
05:28 - can be done either voice as well not
05:31 - only text okay so that's fine for us our
05:33 - program is not a very it's not
05:34 - interactive at all I'm running it it
05:36 - ends and that's it it's only one line so
05:39 - you want to be able to get some input
05:41 - from the user so what I can do is now
05:42 - use input print is for output input is
05:45 - for input and what we can just we can
05:49 - just have input like this and if I
05:52 - assign it to a variable so if I do
05:56 - because just took office what intro it's
05:58 - a good idea to try and give your
05:59 - variables names which aren't random but
06:02 - it's a little bit hotter to name that
06:04 - one so I want here just a reply so if I
06:06 - now run this we're still only hello how
06:08 - are you but now there's a prompt here
06:10 - for me to as a user type something in so
06:12 - I can type in I'm good thanks press
06:16 - ENTER now our program ends
06:18 - so we've sought some work to do here but
06:19 - what's happening is this value I'm
06:21 - typing in I'm good thanks is being saved
06:23 - under the name intro and so I can use
06:26 - intro 8 at my program to refer to that
06:28 - value so it's been temporarily saved
06:30 - once this program ends that value is
06:32 - lost maybe as an attempt to make this
06:34 - interactive we can print again and print
06:36 - something like
06:37 - or we could try and use for users
06:40 - answers so if I now set up in quotes
06:41 - because quotes make it a string so some
06:44 - text data you essentially I find out I
06:46 - could intro in Simon's brackets I can
06:48 - just repeat this back to the user bitola
06:51 - add something on to this so I can do is
06:53 - follow this reference of our variable
06:57 - with a comma and this allows me to then
07:00 - supply it some text data after it so if
07:02 - I do what can we do if I let's let's do
07:06 - it just before intro so if I say instead
07:09 - of saying I'm good thanks so we said
07:11 - hello how are you and I just said I'm
07:12 - well we could do we could get for
07:16 - computer to say I'm also and then repeat
07:19 - back whatever for user set so if I add
07:22 - back comma to separate it because we're
07:24 - dealing here because we it's just it's a
07:29 - way we can separate it because what will
07:30 - happen if I just do do I'm alright this
07:33 - time I'm also I'm alright a bit bit
07:36 - silly but it does the job of repeating
07:39 - back to the user so this comma is being
07:42 - replaced is in this line for commas
07:45 - being replaced by a space a space the
07:49 - space character is a character I could
07:51 - also do a plus instead for concatenation
07:54 - is one of our operators but I can I want
07:58 - to make sure I had a space because
08:01 - otherwise it's just going to be joined
08:03 - together so if I do okay or not I'm also
08:07 - I'm oh we've got the no gap between or
08:10 - so and I'm so comma in print is quite
08:13 - useful for that purpose
08:14 - let's now try and hit our use of
08:16 - nourishing datatypes and have a little
08:18 - practice with this by now maybe asking
08:20 - about age in Python we have two
08:22 - numerical data types we have integers
08:25 - and strings I integers and floats not
08:29 - string the strings of the text but it
08:31 - can also numbers as text just not
08:33 - treated as the same thing as integers or
08:35 - floats so you can see in the third line
08:38 - I've left the insides of these brackets
08:40 - empty what you can't do but also you can
08:43 - put text inside this in a form of a
08:45 - string inside for quotes and it is a bit
08:48 - like it's called wrapping a print
08:49 - statement inside
08:50 - in person because any phenotype in
08:52 - between the brackets will get shown to
08:54 - be using the same way the print wore so
08:55 - if I now do could do what is your age
09:01 - and then I can make this interactive by
09:06 - maybe we are wanting to upstage our user
09:10 - and we could just say because they're my
09:12 - ages 10 years plus your age maybe just a
09:15 - short practice so you could do my age is
09:18 - and then we could again reference this
09:23 - variable so we could do age and now use
09:25 - plus term so I've got this arithmetic
09:29 - operation simple one we're just adding a
09:31 - number to another number and that will
09:34 - be fine for now except it won't quite be
09:36 - fine I mean firstly I've added a space
09:38 - here we know this we know this comma is
09:42 - going to add a space for us like I did
09:43 - up in 94 but also we're gonna come
09:46 - across an issue here which you may well
09:47 - have come across as well if you've tried
09:49 - this I just do I'm eclairs well spent a
09:51 - property this time I'm also I'm okay
09:53 - what was your age and if I do I am 25
09:57 - we're gonna get an error because it says
09:59 - type arrow can you concatenate string
10:01 - not integer to string concatenate is
10:03 - where we are trying to add two bits of
10:06 - words to get two words together two
10:08 - strings I'm for plus operator it can be
10:12 - both addition and also concatenation
10:14 - depending on the datatypes here we have
10:16 - an issue of later types and view is for
10:18 - all inputs from the user are strings by
10:21 - default all inputs are treated as text
10:24 - even if I have a number in so hopefully
10:26 - the users going to enter a number like
10:28 - 25 but 25 to a computer when its input
10:31 - is treating about like text and not a
10:33 - number so in line 7 is getting confused
10:36 - it can't add 10 as an integer 225 as a
10:41 - string so you need to make sure we cast
10:43 - this value into an integer cost it from
10:46 - a string into an integer this means
10:47 - converting it really and why we do this
10:49 - is by wrapping a function around our
10:53 - value so I can just add a reference to
10:56 - int into the built-in function to
10:58 - convert from another data type into an
11:01 - integer and I make sure I add these
11:03 - brackets either side of my own
11:04 - when I end up with two brackets on the
11:06 - entire fighter shift this along so it
11:09 - can get a little bit confusing but now
11:11 - we should let Aramis of our issues if I
11:13 - could just type in okay here was age 25
11:16 - we should get 35 printed out to the user
11:19 - maybe I should delete these criteria as
11:21 - we go because we can also maybe add a
11:23 - comment on at this stage to be able to
11:26 - get rid of that one so a comment like I
11:29 - said before you can do this multi-line
11:30 - comment with triple quotes but you can
11:33 - also just a single line comment with a
11:34 - hash tag symbol or just a hash symbol as
11:38 - it's probably properly called and so now
11:40 - it can maybe explain what's going on in
11:41 - line 7 this might be quite useful if
11:42 - you're showing your coach and someone is
11:44 - a bit confused but what's going on we
11:45 - could say by default or with inputs
11:50 - strings but we want age to be treated as
11:55 - an integer so we cast it and say that
11:59 - right quite long line but that what that
12:01 - will do as we get rid of that criteria
12:03 - two criterion I should say so let's try
12:07 - and just use we have used one over two
12:09 - operation bullets use one of the
12:11 - slightly more or slightly more tricky
12:13 - ones in there trickier to understand
12:14 - what's going on so we could do something
12:16 - like was in the example so we posed a
12:18 - question to you the user let's do this
12:20 - in a print statement why not could do
12:24 - what is let's do 27 mod 4 now we could
12:30 - have a variable could answer now let me
12:32 - just get the user don't need to put
12:33 - anything in here to answer this for us
12:36 - and again we want this to be treated as
12:38 - a number but actually here it doesn't
12:40 - matter so much because we're not gonna
12:42 - be able to actually see if it's correct
12:43 - yet we need to learn about if statements
12:45 - first but then we can sort of take this
12:49 - answer and compare it to the correct
12:50 - answer so we can get the computer to
12:52 - work out what the value is here so very
12:54 - something like but correct answer is I
12:59 - mean like in line eights full of us with
13:01 - a comma and get to work out what the
13:03 - answer is so here lindy 27 i'm a symbol
13:06 - the operator for modular division in
13:08 - python is 4 % and then it was my for
13:13 - like that whatever what operator does is
13:15 - fine for remainder in sunday
13:18 - the division here is 27/4 how many times
13:21 - has four guys 27 when it goes in six
13:24 - whole times because 6 times 4 is 24 7
13:27 - times 4 is 28 which is above 27 and so
13:30 - it doesn't go in completely we have some
13:32 - remainder and so it's not going to be 0
13:34 - here but here the remainders got the
13:36 - result from 37 mph or should be 3
13:39 - because we have 4 going in 27 that goes
13:42 - in 6o times remainder 3 and that is what
13:45 - mod returns so we should get free
13:49 - printed out here if we try this maybe
13:51 - it's fingers crossed this works but do
13:54 - all of this again what's doing somewhat
13:57 - foolish to say vs. 5 go down to 3 so
14:00 - it's not really interactivity we could
14:02 - add in a bit further along something
14:04 - like a bit like in my example we could
14:05 - say you said what did they say what we
14:09 - can use the answer variable to compare
14:11 - it like I say if we want to actually
14:13 - make it more like a quiz and actually
14:15 - properly compare the proper answer to
14:18 - their answer we can read to you some of
14:21 - my if statements to actually do about
14:23 - comparison which will be covered in the
14:24 - next few tutorial videos ok so this is
14:28 - not a particularly lovely program in
14:32 - terms of well I mean it's a start right
14:35 - and the whole point is to practice for
14:37 - basic skills we can work our way up
14:38 - you'll see if you try this and play
14:40 - around with it will be certain issues so
14:42 - for example here hello how are you could
14:44 - say no I'm saying hi but that's fine I
14:47 - could do it here where we wanting it to
14:50 - be a whole number we're trying to cast
14:52 - it to a whole not if I don't type in a
14:53 - hi now if I type in hi again let's open
14:56 - a string it's now trying to convert a
14:58 - word into an integer and it can't do it
15:01 - so we get an error so in future videos
15:03 - quite a few videos time actually we'll
15:05 - figure out ways we can avoid this you
15:07 - can't avoid this with loops and also
15:09 - with for something called exception
15:10 - handling and so there are some issues
15:12 - with our code already also it's a bit
15:13 - inconsistent right I mean sometimes I'm
15:15 - going onto a new line when I'm doing my
15:17 - answers so to say okay and sometimes I'm
15:21 - being asked on the same line and this is
15:23 - because I've sometimes using print and
15:25 - sometimes using just input to sort of
15:28 - ask for stuff to the user
15:31 - print every time use print goes on to
15:32 - new line unless you add in and she
15:34 - changed that so it's a bit bit messy you
15:38 - might want to add in a space when we use
15:39 - input because otherwise our prompt goes
15:41 - right after our question and a loose but
15:45 - messy it's nice to add a space I I think
15:47 - personally so there's some work we can
15:49 - do and of course in future videos we can
15:51 - make this code a lot more complex so if
15:54 - you would like to see this code and have
15:56 - a look at it I'll be a link in the
15:57 - description please don't sell it I'm
15:58 - sure it's worth lots of money and also
16:01 - please ask any questions in the comment
16:03 - section as well

Cleaned transcript:

hello and welcome to a series of videos which I'm calling Python challenges the idea being in these videos I'm going to set a programming task for you to try and then I'll show you how to do it so I'll show you the solution and I'll do it myself the idea being if you're learning programming really you can't properly learn the skill of Python or skill of programming without practicing yourself and so these are meant to give you another opportunity to practice skills in this miniseries they'll get progressively harder or back as your idea at least hopefully it'll provide some challenge for you but right now we're just doing a really simple chatbot in this video because I want to just practice some fairly well for kind of most basic skills you learn when you're doing programming so printing dnev user input assigning variables and doing some basic arithmetic calculations these challenge videos are made in support of a set of tutorials I made on Python which will be linked to that playlist in the description if you're not aware of it I imagine most people watching this are in that palace because o intersperse for tutorials with V challenges because really is important to practice what you're learning at the end of each of these videos I have these tutorial videos I have got a like or try now exercise but they'll tend to be a little bit shorter than these challenge videos and also trying hours are for that video these sorts of these challenges are going to span a few videos at least so in this case there are five videos which cover the content needed for this so right now we're going to start by creating what I'm calling a simple chat bot so a chat bot is a program where you can interact as a user will for program in some capacity so this could just be like a parrot repeating stuff back at you they can be quite clever I mean nowadays we'll have things like a lexer and siri apparently this logo on the left is for Siri where we have a much more interactive experience you know you can ask for pretty much anything a make and reply with what seems like a customized message to you the very rely on loads of complicated things like natural language processing machine learning and may draw in data from loads of different sources right now we're just having an effective vehicle parrot is just ripping stuff back because I want to be able to create a simple trap or program where the user can have a basic conversation with a program the user is going to be asked questions and Peter's going to be able to respond using their answer making it slightly interactive so it's not quite interactive in the same way as a lexer or Siri would be but we can do something like this where in blue we have your computer's output and in black we have the input so first of all what is your name is being asked user types in Guido presses enter and Guido is used in the following output from a computer so the actual input from a user is being used along in the program so it does make it a little bit interactive and allows us to try out a few different skills like basic maths because we can also ask some math questions so it can't become a bit like a quiz if you want it to and of course you can expand this if you want to make it more impressive if you know more Python but you know that'll do for right now assuming you are just beginning so to help you to help guide you towards how we can solve this and really now the goal here is not to create a chatbot you can sell for loads of money to Apple or Amazon the goal is to practice four skills and so here are some success criteria which rule if you hit each of these bullet points will mean you've created a good program so I want to be at least eight lines of code we want to be able to use prim statements input statements use variables preferably more than one have some comments which explain the code that's really important so good habit to get into and try and use some non string data types so numbers and we can use those numbers and integers and floats in over to operations so doing the more advanced ones like modulo or exponentiation would be really good as well so I'd really recommend now you pause a video over on this slide or the previous slide to understand the tasks have a go at yourself it shouldn't take too long and then right now I'll show you a solution of course your solution doesn't need to match mine totally we want to have a bit variety but if you try and hit these criteria that would be perfect so I've copied and pasted them in here so I can keep track of what I'm doing but I don't want me to be part of my program so if I run out I'll get an error because visa this is not valid Python code I've got invalid syntax and so if I want to get rid of this and make sure we're not get rid of it but make sure it's not being run by the computer I can surround it in triple quotes I may not show this in a video actually yet but triple quote is like a multiline comment and so a single comment is just a line of code which doesn't ever get running by for computer allows us to explain our code allows us to draw stuff down maybe do a bit of debugging to get rid of a line if you want to keep it but not actually run it but it doesn't work over multiple lines so that is a nice trick okay so minimum eight lines of code we can sort of just do that eventually first of all let's do a print statement so if I start off by doing something similar to the example I showed I could just do print hello maybe we do hello how are you and so I'm doing print is a builtin function to Python I won't explain all of this stuff all over again I've hidden the tutorials we have print we have our brackets and we supply some data in these and the way print works is anything inside the brackets will get shown to the user on the screen I should say this program is going to be just over a command line so just text somewhat serious something like Alexa can be done either voice as well not only text okay so that's fine for us our program is not a very it's not interactive at all I'm running it it ends and that's it it's only one line so you want to be able to get some input from the user so what I can do is now use input print is for output input is for input and what we can just we can just have input like this and if I assign it to a variable so if I do because just took office what intro it's a good idea to try and give your variables names which aren't random but it's a little bit hotter to name that one so I want here just a reply so if I now run this we're still only hello how are you but now there's a prompt here for me to as a user type something in so I can type in I'm good thanks press ENTER now our program ends so we've sought some work to do here but what's happening is this value I'm typing in I'm good thanks is being saved under the name intro and so I can use intro 8 at my program to refer to that value so it's been temporarily saved once this program ends that value is lost maybe as an attempt to make this interactive we can print again and print something like or we could try and use for users answers so if I now set up in quotes because quotes make it a string so some text data you essentially I find out I could intro in Simon's brackets I can just repeat this back to the user bitola add something on to this so I can do is follow this reference of our variable with a comma and this allows me to then supply it some text data after it so if I do what can we do if I let's let's do it just before intro so if I say instead of saying I'm good thanks so we said hello how are you and I just said I'm well we could do we could get for computer to say I'm also and then repeat back whatever for user set so if I add back comma to separate it because we're dealing here because we it's just it's a way we can separate it because what will happen if I just do do I'm alright this time I'm also I'm alright a bit bit silly but it does the job of repeating back to the user so this comma is being replaced is in this line for commas being replaced by a space a space the space character is a character I could also do a plus instead for concatenation is one of our operators but I can I want to make sure I had a space because otherwise it's just going to be joined together so if I do okay or not I'm also I'm oh we've got the no gap between or so and I'm so comma in print is quite useful for that purpose let's now try and hit our use of nourishing datatypes and have a little practice with this by now maybe asking about age in Python we have two numerical data types we have integers and strings I integers and floats not string the strings of the text but it can also numbers as text just not treated as the same thing as integers or floats so you can see in the third line I've left the insides of these brackets empty what you can't do but also you can put text inside this in a form of a string inside for quotes and it is a bit like it's called wrapping a print statement inside in person because any phenotype in between the brackets will get shown to be using the same way the print wore so if I now do could do what is your age and then I can make this interactive by maybe we are wanting to upstage our user and we could just say because they're my ages 10 years plus your age maybe just a short practice so you could do my age is and then we could again reference this variable so we could do age and now use plus term so I've got this arithmetic operation simple one we're just adding a number to another number and that will be fine for now except it won't quite be fine I mean firstly I've added a space here we know this we know this comma is going to add a space for us like I did up in 94 but also we're gonna come across an issue here which you may well have come across as well if you've tried this I just do I'm eclairs well spent a property this time I'm also I'm okay what was your age and if I do I am 25 we're gonna get an error because it says type arrow can you concatenate string not integer to string concatenate is where we are trying to add two bits of words to get two words together two strings I'm for plus operator it can be both addition and also concatenation depending on the datatypes here we have an issue of later types and view is for all inputs from the user are strings by default all inputs are treated as text even if I have a number in so hopefully the users going to enter a number like 25 but 25 to a computer when its input is treating about like text and not a number so in line 7 is getting confused it can't add 10 as an integer 225 as a string so you need to make sure we cast this value into an integer cost it from a string into an integer this means converting it really and why we do this is by wrapping a function around our value so I can just add a reference to int into the builtin function to convert from another data type into an integer and I make sure I add these brackets either side of my own when I end up with two brackets on the entire fighter shift this along so it can get a little bit confusing but now we should let Aramis of our issues if I could just type in okay here was age 25 we should get 35 printed out to the user maybe I should delete these criteria as we go because we can also maybe add a comment on at this stage to be able to get rid of that one so a comment like I said before you can do this multiline comment with triple quotes but you can also just a single line comment with a hash tag symbol or just a hash symbol as it's probably properly called and so now it can maybe explain what's going on in line 7 this might be quite useful if you're showing your coach and someone is a bit confused but what's going on we could say by default or with inputs strings but we want age to be treated as an integer so we cast it and say that right quite long line but that what that will do as we get rid of that criteria two criterion I should say so let's try and just use we have used one over two operation bullets use one of the slightly more or slightly more tricky ones in there trickier to understand what's going on so we could do something like was in the example so we posed a question to you the user let's do this in a print statement why not could do what is let's do 27 mod 4 now we could have a variable could answer now let me just get the user don't need to put anything in here to answer this for us and again we want this to be treated as a number but actually here it doesn't matter so much because we're not gonna be able to actually see if it's correct yet we need to learn about if statements first but then we can sort of take this answer and compare it to the correct answer so we can get the computer to work out what the value is here so very something like but correct answer is I mean like in line eights full of us with a comma and get to work out what the answer is so here lindy 27 i'm a symbol the operator for modular division in python is 4 % and then it was my for like that whatever what operator does is fine for remainder in sunday the division here is 27/4 how many times has four guys 27 when it goes in six whole times because 6 times 4 is 24 7 times 4 is 28 which is above 27 and so it doesn't go in completely we have some remainder and so it's not going to be 0 here but here the remainders got the result from 37 mph or should be 3 because we have 4 going in 27 that goes in 6o times remainder 3 and that is what mod returns so we should get free printed out here if we try this maybe it's fingers crossed this works but do all of this again what's doing somewhat foolish to say vs. 5 go down to 3 so it's not really interactivity we could add in a bit further along something like a bit like in my example we could say you said what did they say what we can use the answer variable to compare it like I say if we want to actually make it more like a quiz and actually properly compare the proper answer to their answer we can read to you some of my if statements to actually do about comparison which will be covered in the next few tutorial videos ok so this is not a particularly lovely program in terms of well I mean it's a start right and the whole point is to practice for basic skills we can work our way up you'll see if you try this and play around with it will be certain issues so for example here hello how are you could say no I'm saying hi but that's fine I could do it here where we wanting it to be a whole number we're trying to cast it to a whole not if I don't type in a hi now if I type in hi again let's open a string it's now trying to convert a word into an integer and it can't do it so we get an error so in future videos quite a few videos time actually we'll figure out ways we can avoid this you can't avoid this with loops and also with for something called exception handling and so there are some issues with our code already also it's a bit inconsistent right I mean sometimes I'm going onto a new line when I'm doing my answers so to say okay and sometimes I'm being asked on the same line and this is because I've sometimes using print and sometimes using just input to sort of ask for stuff to the user print every time use print goes on to new line unless you add in and she changed that so it's a bit bit messy you might want to add in a space when we use input because otherwise our prompt goes right after our question and a loose but messy it's nice to add a space I I think personally so there's some work we can do and of course in future videos we can make this code a lot more complex so if you would like to see this code and have a look at it I'll be a link in the description please don't sell it I'm sure it's worth lots of money and also please ask any questions in the comment section as well
