00:00 - hi everyone welcome to my channel my
00:03 - name is saldina
00:04 - and i make i.t and programming related
00:06 - videos so
00:07 - if that is something that is of interest
00:09 - to you consider subscribing to my
00:11 - channel
00:11 - and give this video a thumbs up as well
00:14 - and in this particular video i want to
00:16 - talk about
00:17 - polymorphism now the first thing that i
00:19 - want to do is i want to explain
00:21 - what is polymorphism polymorphism
00:24 - describes the ability of
00:26 - an object for example to have multiple
00:29 - forms now that means that you can have
00:33 - two or more objects that inherit from
00:36 - the same base class
00:38 - those objects can have the method that
00:41 - has the same name
00:42 - but different implementation meaning
00:44 - different behavior
00:46 - and i'm going to demonstrate that on an
00:48 - example
00:49 - now here i have some code that we have
00:51 - written
00:52 - in my previous courses so if you haven't
00:55 - watched those make sure to do so the
00:57 - links to those videos are going to be in
00:59 - the description
01:01 - and i'm very quickly going to go over
01:03 - this code
01:04 - so here i have click created a class
01:07 - that is called
01:07 - youtube channel that class has three
01:10 - private
01:11 - properties name subscribers count and
01:14 - then
01:14 - published video titles and then it has
01:18 - one protected property which is owner
01:21 - name now this private properties these
01:24 - are available only in this class
01:27 - and then these protected properties
01:29 - these are available in derived classes
01:31 - as well
01:32 - and then here we have public methods as
01:35 - well
01:36 - and this here is our constructor so it
01:39 - just
01:40 - initializes values of these properties
01:44 - i'm going to collapse that and then here
01:48 - we have
01:48 - get info method with which just
01:51 - writes out information about our youtube
01:54 - channel
01:55 - and then these subscribe and unsubscribe
01:58 - methods
02:00 - these just increase or decrease the
02:03 - the number of our subscribers
02:06 - let's collapse that and then publish
02:08 - video method
02:10 - it just um adds another video to this
02:13 - published video titles
02:15 - list so that would be our youtube
02:19 - channel base class and then here
02:21 - we have cooking youtube channel which is
02:23 - a specific type of youtube channel
02:26 - that inherits from this base class here
02:29 - and that cooking youtube channel has its
02:32 - own constructor which is this one here
02:35 - and here we have just invoked the
02:37 - constructor of
02:38 - our base class and then here we have
02:41 - implemented a method which is called
02:44 - practice and it says
02:46 - that when you practice and you have a
02:48 - cooking youtube channel you will have to
02:50 - be practicing
02:52 - cooking and then learning new recipes
02:54 - and experimenting with spices
02:56 - now what i want to do is i want to
02:58 - create another
02:59 - derived class so i'm going to copy this
03:05 - okay and then this derived class should
03:08 - be
03:09 - called for example let's paste the name
03:12 - here
03:13 - so singer's youtube channel and i'm
03:16 - going to paste the name
03:17 - here as well on my constructor so
03:21 - this is going to be a youtube channel
03:23 - about singing
03:24 - now as you can see this singer's youtube
03:27 - channel
03:28 - has this practice method as well but
03:30 - this implementation
03:32 - is not right for my singers youtube
03:34 - channel because
03:35 - if you're a singer you are not going to
03:37 - benefit really from
03:38 - practicing cooking and then from
03:40 - learning recipes
03:41 - and experimenting with spices but what
03:44 - you should do instead is you should
03:46 - practice something else so i'm going to
03:49 - copy
03:50 - that so that i don't make a typo
03:54 - like this so someone who
03:57 - is trying to make a singer's youtube
04:00 - channel
04:01 - is going to take singing classes and
04:03 - then learning new songs
04:05 - and then he should as well be learning
04:07 - how to dance because
04:08 - i believe that singers should know how
04:10 - to dance as well
04:12 - okay so now we have implemented
04:15 - this singer's youtube channel and as you
04:18 - can see as i already demonstrated
04:20 - it has this same method which is
04:23 - practice
04:24 - but this method has different
04:26 - implementation
04:27 - than this one and as you can see here
04:30 - this is the implementation of our
04:32 - practice method
04:33 - on our cooking channel and then this
04:35 - here is the implementation
04:37 - on our singers youtube channel so what i
04:40 - want to do now
04:41 - is i want to create this singer's
04:42 - youtube channel here we already have
04:45 - cooking youtube channel
04:47 - so it is a video it is a code from one
04:49 - of my previous videos
04:51 - and then what i want to do is i want to
04:53 - create um
04:54 - singer's youtube channel so let's call
04:57 - it
04:57 - um singers
05:00 - youtube channel and let's say that it is
05:04 - going to be called for example
05:06 - john sings like this and then owner
05:09 - is going to be a guy named john
05:13 - like this okay now after i have created
05:17 - this cooking youtube channel and then
05:20 - this singer's youtube channel
05:21 - you can probably call it singing youtube
05:24 - channel or something like that
05:26 - this is the best name that i could come
05:28 - up with okay
05:30 - so now what i want to do is i want to
05:32 - invoke
05:33 - methods on these two classes and the
05:36 - methods that i want to invoke are going
05:37 - to be
05:38 - these two so practice and then this
05:40 - practice method as well so here i'm
05:42 - going to say
05:43 - cooking youtube channel dodge practice
05:46 - like this and then let's invoke the same
05:49 - method for my singers youtube channel
05:52 - like this and now if i run my program
05:57 - as you can see it says that amy is
05:59 - practicing cooking
06:01 - and then john is taking singing classes
06:04 - and learning new songs and learning
06:06 - how to dance i can imagine that
06:09 - okay now after i have invoked these two
06:13 - methods you can really see oh
06:15 - i have stopped my program i'm sorry so
06:18 - here you can see that this
06:20 - cooking youtube channel has invoked its
06:23 - own method so
06:24 - this cooking youtube channel has invoked
06:26 - the method that has been
06:28 - implemented in this cooking youtube
06:30 - channel class which is
06:31 - this one here and then this
06:34 - invocation so this singer's youtube
06:36 - channel when you invoke practice method
06:39 - on that
06:40 - this method here is going to be invoked
06:42 - so this method that is implemented in
06:45 - singer's youtube channel class now let's
06:48 - add another thing
06:49 - and that is going to be here in this
06:52 - practice method
06:53 - and then in this practice method as well
06:55 - what i want to do
06:56 - is i want to say that each time that
06:59 - our user practices cooking and then
07:02 - practices
07:03 - singing what is going to happen is the
07:06 - quality of that youtube channel is going
07:08 - to increase
07:09 - so in order to track that quality
07:12 - content
07:13 - rating i'm going to create a property
07:15 - and that is going to be here
07:17 - in this youtube channel in this base
07:19 - class so i'm going to make that property
07:22 - protected protected because i want to
07:24 - have it accessible
07:26 - in my cooking youtube channel and then
07:28 - in my singer's youtube channel as well
07:30 - so i want that property to i want to
07:32 - access that property from my derived
07:34 - classes and because of that
07:36 - i'm going to make it protected so here
07:38 - i'm going to say
07:39 - and and let's call it content quality
07:46 - like this okay and initially
07:49 - i want to set the value of this content
07:51 - quality variable
07:53 - in this constructor here i want to set
07:55 - it to zero
07:57 - like this because i want to say that
07:59 - when you create your youtube channel
08:01 - this constructor here is going to be
08:03 - invoked and you are going to have zero
08:05 - subscribers and you are going to have a
08:08 - zero knowledge about content quality so
08:11 - your rate content quality rate is going
08:13 - to be
08:14 - zero so let's close that
08:17 - and then what i want to do here in this
08:20 - practice method
08:21 - is i want to say each time that you
08:23 - practice your content quality should
08:25 - increase
08:26 - so let's increase that variable
08:29 - content where is it
08:34 - content quality plus plus so i'm going
08:36 - to increment
08:37 - that content quality and then i'm going
08:39 - to do the same
08:41 - here like this now let's say for example
08:45 - that
08:46 - my um the singer here john
08:49 - he is going to practice a lot so he has
08:53 - practiced five times more than amy
08:56 - did so if i run my program now
08:59 - you can see that john is practicing and
09:02 - then
09:03 - again and again and again so he is
09:06 - practicing a lot
09:07 - and amy is not really so what do i want
09:11 - to do with this content quality property
09:14 - well
09:14 - let's say that i want to implement
09:16 - another method and that method is going
09:18 - to be
09:19 - as well implemented here in this base
09:21 - class and that method is going to be
09:23 - called
09:24 - uh check analytics because that check
09:27 - analytics
09:28 - method should be available for all
09:30 - youtube channels so that is not
09:32 - something that is specific for
09:34 - this cooking youtube channel only or for
09:36 - this
09:37 - singing youtube channel so singer
09:39 - youtube channel
09:40 - but that method should be available for
09:43 - all
09:43 - youtube channels and because of that i'm
09:46 - going to implement it in this
09:47 - base class so let's say void
09:51 - check analytics
09:56 - like this okay
09:59 - and now what i want to do in this check
10:02 - analytics method
10:03 - is i want to use this property this
10:06 - content quality property in a following
10:08 - way so i want to say
10:10 - if content quality is
10:13 - less than 5 i want to write out a
10:16 - message to my user so i want to say
10:19 - c out and then let's write out the name
10:21 - of this youtube channel
10:23 - like this and then let's add
10:26 - a message which is going to say let me
10:29 - copy that
10:32 - okay this is going to say that this
10:35 - channel has a bad quality content
10:37 - because
10:38 - this content quality has a rating that's
10:41 - that
10:42 - is less than five and let's add
10:45 - and line and then what is going to
10:47 - happen if this content quality is not
10:50 - uh less than five so if it is equal to
10:52 - five or greater than five
10:55 - i'm going to put else block here
10:58 - and what i want to say here
11:01 - okay is that this channel has
11:05 - a good content great content actually
11:09 - okay like this now what am i going to do
11:13 - with this check analytics method well
11:15 - i'm going to try to invoke it
11:17 - here but the way that i want to try to
11:20 - invoke this
11:22 - this method that we just implemented is
11:24 - going to be in a following
11:26 - way so there is one very interesting
11:29 - thing
11:29 - when it comes to polymorphism and the
11:32 - thing is related to pointers
11:34 - um at this point i haven't made videos
11:37 - about pointers on my channel but if you
11:39 - are watching this video sometime in the
11:40 - future then
11:41 - those videos are probably available on
11:43 - my channel so make sure to
11:45 - look for them on my channel and then in
11:47 - the description of this video as well
11:49 - so let's create a pointer and that
11:52 - pointer is going to be a pointer
11:54 - of our base class so a pointer of type
11:58 - youtube channel okay like this and let's
12:02 - call it
12:03 - youtube one and what i want to do
12:06 - is i want to assign to this pointer here
12:09 - address
12:10 - of this cooking youtube channel and you
12:14 - can do that you can assign to a pointer
12:17 - of a base class an address
12:20 - of derived class so i'm going to say
12:23 - here
12:24 - please this pointer assign address
12:27 - of this cooking youtube channel class
12:30 - like this and then what i want to do is
12:33 - i want to create another pointer
12:35 - let's call it youtube youtube2 and then
12:38 - to this youtube2
12:39 - pointer i want to assign the address of
12:42 - my singer's youtube
12:44 - channel like this so one more time
12:47 - a pointer of base class
12:50 - can point to a variable of
12:53 - derived class now what i can do
12:57 - using these pointers is i can invoke
13:00 - method that i have just created which is
13:04 - this one
13:05 - here so check analytics so let's do that
13:08 - let's say
13:09 - youtube channel one and then um
13:12 - let's invoke this method let's say check
13:15 - analytics
13:16 - like this and if you just noticed it has
13:19 - changed my
13:20 - dot to this symbol here because this is
13:22 - used when you want to invoke
13:24 - methods using pointers so i'm going to
13:29 - copy this again for my second youtube
13:31 - channel
13:32 - like this and now if i run my program
13:37 - as you can see our john has been
13:40 - practicing
13:40 - a lot and then amy has been practicing
13:44 - only
13:44 - one time so here after i have invoked
13:48 - these two methods this first method says
13:50 - that
13:51 - amy's kitchen has bad quality content
13:54 - because she hasn't been practicing
13:55 - enough
13:56 - and then after this youtube channel to
13:59 - check analytics
14:00 - you can see that it writes out this
14:03 - message that
14:04 - john sings channel has great content
14:07 - because
14:07 - he has been practicing a lot as you can
14:10 - see here
14:12 - okay so here we have
14:16 - used polymorphism in order to implement
14:19 - this practice method in our cooking
14:22 - youtube channel and then
14:23 - in our singers youtube channel so
14:26 - implementation
14:27 - of our singers youtube channel practice
14:29 - method is here and then
14:31 - for our cooking youtube channel our
14:32 - practice method looks like this
14:35 - and we have done that thanks to the
14:38 - polymorphism so
14:39 - different implementations but the same
14:43 - method name and then i have demonstrated
14:46 - here
14:47 - how you can use pointers to point
14:50 - to an object of derived class and you
14:54 - can store that
14:55 - in a pointer of base class and then we
14:58 - have invoked
14:59 - this check analytics methods using these
15:03 - pointers of base class
15:06 - so i hope that you enjoyed this video if
15:08 - you did
15:09 - give it a thumbs up and don't forget to
15:12 - subscribe to my channel
15:13 - click the bell icon as well and i'm
15:15 - going to see you in my next video
15:18 - bye