00:00 - hi guys and welcome to a new video where
00:02 - i will teach you how to build a user
00:04 - interface game with c plus plus
00:07 - so this is a beginner friendly project
00:10 - so if you don't have much experience
00:12 - with building user interface
00:14 - applications welcome this is a video for
00:16 - you
00:17 - so in this video we are going to use c
00:19 - plus builder and rad studio which stands
00:22 - for rapid application development and
00:25 - i'm going to leave a link in the
00:26 - description that you can use in order to
00:28 - download it and try it out for free and
00:31 - i will also link some more videos where
00:33 - i teach you about building user
00:34 - interface applications and games with c
00:37 - plus so make sure to watch those videos
00:39 - as well
00:40 - so with that being said
00:42 - let me show you the application that we
00:44 - are going to build
00:45 - so here is the application that we are
00:46 - going to build and it's actually pretty
00:49 - self-explanatory it says please enter
00:51 - the number
00:52 - so i will enter number five and click
00:55 - confirm and now the situation on our
00:58 - user interface has changed a little bit
01:00 - it says now you can guess the number and
01:04 - also we have a wrong attempts counter
01:06 - here it is zero so far so let's try to
01:09 - guess the number let's enter number one
01:11 - and click confirm and we get a helper
01:14 - message which says number two low and
01:17 - also we made one wrong attempt
01:20 - so let's try with a bigger number let's
01:22 - try with number 10 for example so i will
01:24 - click confirm again and now it says that
01:27 - the number is too big and also we made
01:30 - two wrong attempts so let's try third
01:33 - time with the number in the middle so
01:36 - number five and i click confirm and now
01:39 - it says you won congratulations
01:42 - so that is the application that i'm
01:44 - going to show you how to build
01:47 - so as you already know when i show you
01:49 - how to build a particular application i
01:51 - like to divide it into several steps so
01:53 - that it is easier for you to understand
01:56 - and i'm going to do that this time as
01:58 - well so the first step is to create our
02:01 - project so
02:02 - let's create a new multi-device
02:04 - application with c
02:06 - builder it is going to be blank
02:08 - application and i will click ok
02:10 - and now our project has been created now
02:13 - the second step is going to be to create
02:15 - a user interface which means that now we
02:18 - are going to
02:19 - put on this form here all the controls
02:22 - that our application should contain and
02:25 - i will just drag and drop those controls
02:27 - from this palette here the first thing
02:30 - that i will need is a label
02:34 - so t label this is going to be
02:37 - our title
02:38 - okay
02:39 - and then we need an edit
02:42 - so
02:43 - an input field where we are going to
02:45 - enter our number
02:47 - i will just make it a little bit bigger
02:49 - and then we need a button
02:52 - okay i will put it
02:54 - here and i will also make it a little
02:57 - bit bigger like this and then we need a
03:01 - message label so another label
03:05 - where we will write
03:07 - a helper message to our user okay and
03:11 - then one more thing that we need is
03:13 - going to be
03:14 - a label where we will write out the
03:17 - count of the attempts that our user has
03:20 - made so i will put it here like this
03:24 - okay and then i will make this form a
03:28 - little bit smaller so i believe that is
03:31 - all for the user interface if we forgot
03:33 - something we are going to come back and
03:35 - then add it later
03:37 - so the second step that i want to do is
03:39 - i want to change the names of these
03:41 - controls here and they currently have
03:44 - default names which are label one label
03:47 - two label three button one edit one and
03:49 - so on and what i want to do instead is i
03:53 - want to name them according to their
03:55 - purpose and the reason for doing that is
03:57 - because i want to access these controls
04:00 - from my c plus code and it is going to
04:03 - be much easier to remember which control
04:05 - is which
04:06 - if they have meaningful names
04:09 - so
04:11 - instead of this being called label one i
04:13 - will call it title label and then this
04:16 - label tree will be called counter label
04:18 - and then label two will be called
04:21 - helper label and so on so let's do that
04:25 - i will click on my label one and here i
04:27 - will change its name property so i will
04:30 - call it title
04:31 - label
04:34 - okay and then label two will be
04:37 - helper
04:39 - label
04:41 - okay and then label three
04:43 - will be
04:44 - counter label
04:47 - button one will be called confirm button
04:52 - and then this edit one will be called
04:56 - numbers
04:57 - edit
04:58 - like this
04:59 - so with this we have changed the names
05:03 - of all of our controls and now we can
05:05 - proceed with step number three
05:07 - the third step is building the logic and
05:11 - since our game is a game for two users i
05:14 - will separate this into two parts the
05:17 - first part is going to be building the
05:18 - logic for our user who will initially
05:21 - enter the number and then the second
05:23 - part will be building the logic for the
05:25 - user who should guess that number so
05:28 - let's build that first part of the logic
05:31 - i am going to open this unit 1.cpp and
05:35 - then this unit 1.cpp again
05:38 - and here i'll just make it a little bit
05:41 - bigger so that you can read and here we
05:43 - will build the first part of the logic
05:46 - so inside this constructor here what i
05:49 - want to do is i want to define what is
05:51 - going to happen when our application
05:54 - starts initially so
05:56 - what i want to happen when our
05:58 - application initially starts is i want
06:01 - to change a few things first thing is
06:04 - that i want to write out the title here
06:06 - so i want to say something like please
06:08 - enter the number and then this counter
06:11 - label will be equal to zero
06:14 - and this helper label will be empty so
06:16 - there will be no helper message at this
06:19 - point so let's return to our unit 1.cpp
06:23 - and here i will say that title label
06:27 - its text property will be equal to
06:32 - please
06:33 - enter the number
06:36 - like this
06:38 - okay
06:39 - and then as i said
06:41 - our counter label
06:44 - its text
06:46 - property let's just make it capital t so
06:49 - its text property will be equal to zero
06:53 - and the third thing is
06:55 - helper label
06:58 - and
07:00 - its text will be empty like this so if i
07:04 - start my program let's see what is going
07:06 - to happen okay
07:07 - as you can see here it says please enter
07:09 - the number and then the counter is zero
07:13 - so what i want to happen next is when my
07:16 - user enters the number let's say for
07:18 - example number 55 and clicks on this
07:21 - confirm button
07:22 - i want this number here to be removed i
07:25 - also want to store it so that we know
07:28 - which number our first user has entered
07:30 - and then i will give the opportunity to
07:33 - my second user to guess this number here
07:37 - so
07:37 - what i want to do now is i will build
07:39 - the logic for this confirm button so
07:42 - let's close the application and then i
07:45 - will go to my unit 1.fmx
07:48 - and here i'm going to create on click
07:51 - event handler for this button here so
07:54 - how do you do that well you just double
07:56 - click on that control and as you can see
08:00 - it has created a method which is a
08:03 - handler which will be invoked every time
08:06 - that our user clicks on confirm button
08:09 - so here i'm going to write the logic of
08:12 - what is going to happen when the user
08:14 - clicks on that button
08:16 - so
08:18 - here i want to do the following the
08:20 - first thing that i want to do is i want
08:21 - to check
08:22 - if we are writing the logic for the
08:25 - first user or for the second user so the
08:27 - first thing that we are going to need is
08:29 - actually two things
08:31 - and those are two variables the first
08:34 - one that is going to tell us if the
08:36 - number has already been entered and then
08:38 - the second variable will be
08:40 - a variable where we are going to store
08:42 - the number that our first user enters
08:45 - which means the number that our second
08:46 - user has to guess so let's create those
08:50 - two variables
08:51 - i will do it
08:52 - here and the first one is going to be of
08:55 - type
08:56 - bowl
08:57 - and it is going to be called is
09:00 - number
09:01 - entered
09:03 - okay and initially i will give it the
09:05 - value of
09:07 - false now you can do that
09:09 - here or you can do it here as well in
09:12 - the constructor and then if you don't
09:14 - assign any value the default value that
09:16 - is assigned to both variables is false
09:19 - so you are not going to make mistake in
09:22 - any of those three cases so that is the
09:25 - first thing and then the second thing is
09:28 - another variable of type int and that is
09:31 - going to be our guess
09:33 - number
09:34 - and here i'm going to store the number
09:37 - that my first user enters now what i
09:40 - want to do with this is number entered
09:43 - variable is inside this confirm button i
09:46 - want to check if my number has been
09:49 - entered i want to let my second user to
09:52 - guess that number
09:53 - but if that number has not been entered
09:56 - that means that i first need to let my
09:59 - first user to enter that guess number so
10:03 - let's write the logic for our first user
10:06 - i will say if
10:08 - and then i will use
10:09 - this variable here so
10:11 - if
10:12 - the number is not
10:14 - entered please pay attention that i
10:17 - added this not here so if the number is
10:21 - not entered please do the following code
10:25 - so please perform this block of code
10:27 - here so what is going to happen if that
10:29 - number has not been entered already well
10:32 - i will take
10:34 - the input from this edit here so i will
10:38 - take its text and i will store it
10:41 - into this variable here so
10:44 - i will say that my guess
10:47 - number
10:48 - is equal to
10:50 - numbers
10:52 - edit
10:53 - so that is the name of our edit
10:56 - so numbers edit its text property and i
11:01 - want to convert it to
11:04 - integer number like this so that is
11:07 - going to be the first step so i have
11:09 - taken the input from my user and stored
11:13 - it into this guess number variable and
11:16 - now i'm going to say that now
11:19 - the number
11:20 - has been entered so now this variable
11:23 - becomes
11:24 - true and then i want to do something
11:27 - else and that will be that i want to
11:29 - change this title label i will write out
11:32 - a message for my second user
11:35 - so i will return
11:36 - here and
11:38 - i will say that
11:39 - title
11:40 - label its text will be equal to
11:46 - now you can guess
11:48 - the number
11:50 - so this is a message for our second user
11:54 - so let's run our program and let's see
11:56 - what we have achieved so far
11:58 - so
12:01 - okay it says please enter the number and
12:04 - here i enter the number 55 for example
12:07 - and i click confirm okay
12:10 - and now it says now you can guess the
12:13 - and then we don't see the rest of the
12:16 - message so we are going to make this
12:17 - label a little bit bigger that's the
12:19 - first thing and then the second thing is
12:21 - that now we need to also remove this
12:23 - number because it doesn't make sense to
12:25 - say now you can guess the number while
12:28 - the number is still being available in
12:29 - this input field so let's fix those two
12:32 - things
12:34 - okay the first thing is i will make this
12:37 - title label a little bit bigger like
12:40 - this and then the second thing is i want
12:42 - to clear the text from my numbers edit
12:45 - so i will say numbers
12:48 - edit
12:50 - it's text
12:51 - property will be equal to
12:54 - an empty string like this so let's run
12:57 - our program again
12:59 - okay so again it says please enter the
13:02 - number and i will enter the number 66
13:05 - and if i click confirm
13:07 - as you can see it says now you can guess
13:10 - the number and the number has been
13:12 - cleared so what we can do now is we can
13:15 - write the second part of the logic which
13:18 - is the logic for the user who is going
13:20 - to guess the number so we are going to
13:23 - write that second part of the logic in
13:25 - the else block so here it says if the
13:29 - number is not entered please make the
13:32 - first user enter that number
13:35 - else which means if the number is
13:37 - entered then we are going to make our
13:40 - second user guess that number so i'm
13:43 - going to say
13:44 - else
13:45 - and here i will write the second part of
13:49 - the logic so there are three things that
13:52 - could potentially happen in this else
13:54 - block so three things that our second
13:56 - user can do the first option is that he
13:59 - successfully guesses the number the
14:02 - second option is that he enters the
14:04 - number which is too low so a smaller
14:07 - number than our first user and then the
14:10 - third option is that he enters a number
14:12 - which is too big and we are going to
14:15 - cover all of those three situations so
14:20 - the first thing that i need to do is i
14:22 - need to take the number that my second
14:24 - user entered so let's create a variable
14:28 - of type
14:29 - end
14:30 - and i will call it
14:32 - second
14:34 - user's
14:35 - number
14:36 - and inside this variable i will store
14:39 - the number from my numbers
14:43 - edit text property i just want to
14:46 - convert it to
14:47 - int
14:48 - like this
14:50 - okay so this is the number that our
14:52 - second user has entered so what we have
14:54 - to do now is we have to check if this
14:57 - second user's number is equal to the
15:00 - guess number so the number that our
15:02 - first user has entered so i will say
15:06 - if
15:08 - and then i will compare the two so i
15:10 - will say if second user's number is
15:12 - equal to
15:14 - guess
15:15 - number
15:16 - like this
15:18 - what i want to do in this situation
15:21 - is i want to write out a message to my
15:24 - user so i will use my
15:27 - helper label
15:29 - and inside its text property i will say
15:35 - u1
15:38 - okay
15:39 - and then congratulations
15:44 - and then another thing that i want to do
15:46 - is i want to disable my confirm button
15:49 - because there is no reason for him to be
15:51 - able to execute this method anymore
15:54 - after he guesses the number so i will
15:57 - say
15:59 - confirm
16:01 - button
16:02 - and i will use its
16:04 - enabled property and set it to false
16:08 - like this and if this here happens if
16:12 - our user guesses the number i will just
16:15 - say return
16:18 - like this
16:19 - okay so this is the situation where our
16:22 - user guesses the number correctly but
16:25 - there are also other situations where
16:27 - our user enters the number which is
16:29 - greater than the first user's number and
16:32 - then number which is lower
16:34 - so after i have checked this in the
16:38 - situation where this here is not true
16:41 - i will proceed with an else
16:44 - if
16:45 - which is going to check
16:47 - the following
16:48 - so
16:49 - inside this else if i will say
16:52 - please check if the second user's number
16:56 - is greater
16:58 - than guess number
17:00 - like this
17:01 - so in this situation i will write out a
17:03 - helper message to my user which says
17:07 - your number is too big so i will use
17:10 - this helper label
17:12 - and inside its text property i will say
17:17 - number
17:18 - two
17:19 - big
17:20 - like this
17:21 - one more thing that needs to happen is
17:23 - we have to show the number of attempts
17:26 - that our user made
17:28 - and we also need to increase that
17:31 - counter of attempts every time that our
17:34 - user enters a wrong number so in order
17:37 - to do that let's create a variable of
17:40 - type int
17:41 - and i will call it
17:43 - attempts counter
17:48 - like this and initially it is going to
17:50 - have the value of zero because when we
17:53 - first start our application our user has
17:55 - not made any attempts so in the
17:58 - situation where our user enters a number
18:00 - which is too big i will say that
18:04 - attempts counter
18:07 - will be incremented by one like this and
18:10 - then another thing that i want to do is
18:12 - i want to show that attempts counter so
18:15 - i will use
18:17 - counter label
18:19 - and inside its text property i will put
18:24 - this value here
18:27 - like this
18:28 - okay so let's test this code so far i'm
18:32 - going to run the program
18:34 - okay so the first user enters the number
18:37 - 55 and i click confirm so the number has
18:42 - been deleted so now i can guess
18:45 - the number so i will enter the number 99
18:48 - for example and if i click confirm here
18:51 - i get the message which says number two
18:53 - big and then attempts counter is set to
18:56 - one and then if i try another number
18:59 - which is 88 for example and click on
19:01 - confirm as you can see my attempts
19:04 - counter has been incremented
19:07 - okay so that works as expected and the
19:10 - third situation that we need to cover is
19:13 - when our user enters the number which is
19:15 - too low so let's stop the program and
19:19 - here i will write out a final
19:23 - which is a situation when our user
19:26 - enters the number which is too small
19:29 - so here we have covered the situation
19:31 - where the numbers are equal
19:33 - and then we have also checked if the
19:35 - second number is greater than the first
19:38 - number so the only situation that
19:40 - remains is that the second number is
19:43 - smaller than the first number so i will
19:46 - write that part of the logic inside this
19:49 - final else block so i will say that here
19:53 - our helper message will say something
19:55 - else so it will say
19:57 - that number is too
20:00 - low so the number that's that our second
20:02 - user has entered is too small and then i
20:05 - will do this part here
20:07 - as well so i will say please increment
20:10 - this attempts counter and then show the
20:12 - number of attempts so i'm going to run
20:15 - my program again
20:17 - okay
20:18 - and here i will enter the number 66 i
20:21 - will click confirm okay and now i can
20:24 - guess the number so let's enter number
20:26 - 77 i click confirm okay and it says that
20:31 - number is too big and here is our
20:33 - counter of attempts so let's delete this
20:36 - number and let's try with another number
20:39 - let's say for example 55 and i click
20:41 - confirm and now it says that the number
20:44 - is too low
20:46 - and the counter of attempts is two
20:49 - so let's attempt number 66 and i will
20:53 - click confirm and as you can see it says
20:55 - congratulations you won so that is the
20:58 - game that i wanted to show you how to
21:00 - build and one more thing that i want to
21:02 - do is since this else if and then this
21:06 - else block are sharing this part of the
21:09 - code as you can see it is same here and
21:11 - here
21:12 - i want to move that part of the code
21:15 - outside
21:16 - of those blocks so i will remove it from
21:19 - here
21:20 - and i can now remove these curly
21:23 - brackets
21:24 - okay
21:25 - and then from here
21:27 - as well
21:28 - so now what is going to happen is that
21:31 - if this second number is greater than
21:34 - the first number it is going to write
21:36 - out this message and then it will
21:38 - proceed and execute this part of the
21:40 - code and then in case that this final
21:43 - else happens it is going to write out
21:46 - this message and then again it is going
21:48 - to proceed and execute this part of the
21:51 - code so the behavior is going to stay
21:53 - the same and then one more thing that i
21:55 - can do as well is i can use
21:57 - pre-increment here
21:59 - and with that i can remove this line of
22:03 - code so i can say please first increment
22:07 - this variable and then put it inside
22:10 - this counter label okay so if i run my
22:14 - program again
22:15 - let me show you that the behavior stays
22:17 - the same so i will enter the number
22:20 - 78 and i click confirm so let's guess
22:24 - the number let's try number 100 and i
22:27 - click confirm okay number is too big i
22:30 - try 77 for example i click confirm
22:34 - number of attempts is 2 and that number
22:36 - is too low so let's try number 78 and if
22:39 - i click confirm as you can see now it
22:41 - says you won congratulations and the
22:43 - number of attempts was two
22:46 - so that is the game that i wanted to
22:47 - show you and now you can play it with
22:49 - your friends or you can share it with
22:51 - them and teach them how to build the
22:53 - game themselves
22:55 - and if you enjoyed the video please give
22:57 - it a thumbs up because that means a lot
22:59 - to me and it also means a lot for the
23:01 - youtube algorithm and if you have any
23:03 - questions or any topics that you would
23:05 - like to see in the future
23:07 - let me know in the comment section
23:08 - thank you very much for watching and i'm
23:10 - going to see you in some other video bye