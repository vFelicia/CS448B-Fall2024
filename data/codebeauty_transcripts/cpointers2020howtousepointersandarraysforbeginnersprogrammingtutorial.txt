00:00 - hi everyone welcome to my channel in
00:03 - this video i want to talk about pointers
00:05 - and arrays and if you watched the first
00:07 - video of this playlist you remember that
00:10 - i said that one of the common uses of
00:12 - pointers is using them with arrays so in
00:15 - this video i want to demonstrate how
00:17 - that works so let's jump straight to our
00:20 - visual studio
00:22 - and let's create an array of type end
00:25 - and i'm going to call that array lucky
00:27 - numbers
00:31 - like this and let's say that i have five
00:34 - lucky numbers for example and those are
00:37 - two three five seven nine
00:40 - oh that's five numbers already
00:42 - okay so
00:44 - these here are my lucky numbers and now
00:48 - i want to show you one thing so what is
00:51 - going to happen if i say for example c
00:53 - out
00:54 - lucky numbers and let's add a line so
00:58 - what is going to be written out if i
01:00 - write out just the name of my array
01:03 - let's check that
01:04 - if i run this program
01:07 - as you can see we get an address but
01:10 - what is this address
01:12 - this address here so the name of our
01:15 - array is actually the address of the
01:18 - first element of that array and in order
01:21 - to prove that
01:22 - let's write out the address of the first
01:24 - element of this array to check if these
01:27 - two are going to be the same so here i
01:29 - want to write out the address
01:32 - of the first element which is the
01:35 - element with index 0. so now if i'm
01:39 - telling the truth these two should be
01:42 - the same so if i run my program
01:45 - as you can see indeed we get the same
01:48 - address which means
01:50 - again
01:51 - the name of the array is the address of
01:54 - the first element of that array now
01:59 - that means that this lucky number's name
02:02 - behaves as a pointer and these square
02:05 - brackets here are behaving as a operator
02:08 - for dereferencing so if i say for
02:11 - example c out lucky numbers
02:14 - of
02:15 - 2
02:16 - i'm going to get the element that has
02:20 - index two so this here is going to be
02:23 - the first address and then it is going
02:25 - to add two more addresses to that
02:28 - element and we are going to get the
02:30 - value that is stored there so lucky
02:33 - numbers name is the address of the first
02:36 - element it is going to add two more
02:38 - addresses to that so
02:40 - one
02:41 - two so this line of code here is going
02:44 - to give us the value of five let's add
02:47 - end line and run our program in order to
02:49 - demonstrate that
02:52 - and as you can see indeed we get the
02:54 - value of 5.
02:56 - now there is another way to do this same
02:59 - thing here and that is going to be the
03:01 - following way so i can say c out
03:04 - please write out
03:06 - this lucky numbers which as we already
03:09 - demonstrated is the address of this
03:11 - first element so i'm going to put that
03:13 - here
03:14 - and then i can use arithmetic operators
03:17 - on this so i can say
03:18 - please add to this lucky numbers
03:21 - two more address spaces and then
03:24 - dereference this
03:27 - so we use star symbol for that
03:30 - and then i'm going to add and line
03:32 - and these two lines of code
03:35 - so this one here and this one here
03:37 - should behave the same
03:39 - so if i run my program now as you can
03:42 - see we get the same value so these two
03:45 - lines of code are doing the same thing
03:47 - which means that this line of code here
03:50 - is using these square brackets in order
03:53 - to dereferentiate the element with that
03:56 - index which is index 2 and we know that
03:59 - the indexing starts with 0 so 0 1 2 and
04:02 - we get the value of 5.
04:04 - and then this second line of code here
04:07 - uses this star symbol in order to
04:10 - referentiate this expression here and
04:12 - what this expression here says it says
04:15 - lucky numbers which is the address of
04:18 - the first element as we demonstrated
04:20 - here so please use the address of the
04:23 - first element and then add two more
04:26 - address spaces to that so the address of
04:30 - the first element if i add two more to
04:32 - that it's going to be the address of one
04:35 - two so the address of this one here and
04:38 - then if i dereferentiate that i get this
04:42 - value which is stored on that address so
04:45 - these two lines of code are writing out
04:47 - the same thing so
04:50 - let me very quickly show you how you can
04:52 - enter the values for this array and then
04:55 - write them out because here we have
04:57 - hard-coded values so i'm going to delete
05:00 - this
05:02 - and
05:03 - i'm going to comment these two lines of
05:05 - code as well no actually i'm going to
05:06 - comment all of these because we don't
05:09 - need them anymore but i'm going to leave
05:10 - them for you so that you can
05:13 - see how these are used in order to
05:15 - dereferentiate
05:17 - your array so as i said we want to enter
05:20 - values for our array now so in order to
05:23 - do that i'm going to use for loop so i
05:26 - will say 4
05:28 - and then our for loop starts
05:30 - with i equal to 0 because that is the
05:33 - index of our first element and then
05:36 - considering that our array has five
05:38 - elements and the last one has index of
05:41 - four we are going to run our for loop
05:44 - while i is less than or equal to
05:47 - four and in each iteration we are going
05:50 - to increment the value of our i
05:52 - okay and in order to enter values for
05:56 - our array let's write out a message so
05:58 - i'm going to say see out number so
06:00 - please enter a number
06:03 - that is going to be the message for our
06:04 - user
06:05 - and then i'm going to input
06:08 - a value from my console
06:10 - into
06:11 - lucky numbers of i
06:14 - so this here means please enter the
06:16 - value into our lucky numbers array to
06:20 - element that has the same index that our
06:23 - i holds in that iteration so in the
06:26 - first iteration index 0 in the second
06:28 - iteration index 1 and then in the third
06:30 - iteration index 2 and so on so this for
06:35 - loop here is going to help us to enter
06:38 - the values into our lucky numbers array
06:41 - and in order to show that i'm going to
06:43 - put here a breakpoint and that means
06:46 - that our program is going to stop its
06:48 - execution when it comes to this line
06:50 - here
06:51 - so
06:52 - if i run my program
06:54 - as you can see it asks me to enter a
06:56 - number so i'm going to say 2
06:59 - 5 7
07:01 - 9 and 13 so those were five numbers that
07:04 - we had to enter for our lucky numbers
07:06 - array and if i press enter one more time
07:09 - as you can see
07:11 - our program has been stopped in this
07:13 - line of code here and if i hover over my
07:16 - lucky numbers here we have values that
07:19 - we have entered for our array so value
07:21 - of 2 5 7 9 and 13 which are the values
07:26 - that we have entered here
07:29 - so i'm going to stop my program now
07:33 - please stop
07:34 - okay
07:36 - and now what i want to do is i want to
07:38 - use this other approach to write out the
07:41 - numbers that these lucky numbers array
07:44 - is holding so let's use another for loop
07:47 - i'm going to copy this one
07:49 - okay and then what this second for loop
07:52 - is going to do it is just going to write
07:55 - out these numbers but okay let's use
07:58 - this approach for now so i'm going to
08:00 - just change this to c out and then
08:03 - use these other redirection signs and
08:06 - after each number i'm going to add
08:09 - an empty space
08:12 - okay
08:13 - like this
08:14 - and instead of using this approach here
08:16 - so instead of
08:17 - using these square brackets in order to
08:19 - differentiate
08:21 - the element on that position let's use
08:24 - this approach here so i'm going to say
08:27 - please
08:28 - use lucky numbers
08:30 - so which is the address of the first
08:32 - element
08:34 - and then to that i want to add the value
08:36 - of my i so
08:38 - plus i like this
08:41 - and this is going to move
08:44 - okay
08:45 - so this expression here is going to help
08:47 - us to access all of the elements of this
08:50 - lucky numbers array so from the one that
08:53 - has index zero
08:54 - until we come to the one that has index
08:57 - four and because we don't want to write
08:59 - out addresses because this here is going
09:01 - to give us the address
09:03 - but we want to write out the values that
09:05 - are stored on those addresses we will
09:07 - have to de-reference this expression
09:09 - here so for that i will use star symbol
09:13 - and i'm going to remove this breakpoint
09:15 - now and i'm going to start my program to
09:18 - see what is going to happen
09:22 - okay
09:23 - and let's enter 2 3 5 7
09:26 - 19
09:28 - and as you can see we get values of 2 3
09:31 - 5 7 and 19 which we have entered okay
09:34 - let's stop this program now and there is
09:37 - one more thing that i want to show you
09:39 - what is going to happen if i change this
09:42 - max value from four to five like this so
09:46 - what is going to happen in this
09:47 - particular situation let's run our
09:50 - program
09:52 - and enter numbers again so 2 5 7 13 15.
09:58 - okay as you can see now
10:00 - here we have these five numbers that we
10:03 - have entered so 2 5 7 13 15 those are
10:06 - the ones here
10:07 - and then the last one is something that
10:10 - we do not recognize what is this this is
10:12 - some junk number that we definitely have
10:14 - not entered here so this number here is
10:18 - something that does not belong to our
10:20 - lucky numbers array and here we have
10:24 - accessed someone else's memory space so
10:27 - we have this result because we change
10:30 - the max value from four to five here and
10:34 - as we already know our lucky numbers has
10:36 - five elements the last one having the
10:39 - index of four which is this one here
10:42 - and then here we added one more
10:44 - iteration so now we are trying to access
10:47 - the element with index five and that
10:50 - element with index five does not belong
10:52 - or does not exist in our lucky numbers
10:56 - array so this element here this is
11:00 - memory location that belongs to someone
11:02 - else and we accessed that
11:05 - trying to dereferentiate the pointer to
11:08 - the element that is sixth element so we
11:11 - have five elements in our lucky numbers
11:14 - array and then if we add one more
11:16 - address space to that we get this here
11:20 - which is memory location that belongs to
11:23 - someone else and if we just randomly
11:26 - change and access memory locations that
11:28 - do not belong to us we can cause very
11:32 - very big problems so i advise you to be
11:35 - very careful when iterating through your
11:38 - arrays and to access only memory
11:40 - locations that belong to that array that
11:43 - you are iterating so indicates that your
11:46 - array has five elements that those are
11:48 - going to be from zero to four so indexes
11:51 - from zero to four in the case that your
11:53 - array has ten elements for example those
11:56 - are going to be indexes 0 to 9 and so on
12:00 - so again be very very careful to not
12:03 - access memory locations that do not
12:06 - belong to you so i hope that now you
12:08 - have an idea on how
12:10 - pointers and arrays go together and as
12:13 - well we have seen some of the potential
12:15 - problems that can happen if you are not
12:17 - careful enough when working with
12:19 - pointers and arrays
12:21 - so again i advise you to be very careful
12:24 - uh when working with pointers and arrays
12:26 - and not access memory locations memory
12:29 - addresses that do not belong to you so
12:32 - thank you for watching this video if you
12:35 - enjoyed it if you learned something new
12:36 - give it a thumbs up and subscribe to my
12:39 - channel hit that bell icon as well you
12:41 - can follow me on my other social media
12:43 - if you want links for those are going to
12:45 - be in the description of this video
12:47 - thank you for watching and i'm going to
12:49 - see you in my next video bye