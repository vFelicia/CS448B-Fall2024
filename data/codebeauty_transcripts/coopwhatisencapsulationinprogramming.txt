00:00 - hi everyone my name is saldina and i
00:03 - make it and programming related videos
00:06 - so if that is something that is of
00:07 - interest to you consider subscribing to
00:09 - my channel
00:10 - and give this video a thumbs up as well
00:13 - and in this particular video i want to
00:15 - talk about encapsulation
00:17 - here i have code that we have written in
00:20 - the previous videos of this course so if
00:22 - you haven't watched those make sure to
00:24 - check them out
00:25 - i'm going to link them in the
00:26 - description of this video
00:28 - and i'm going to go over this code very
00:31 - quickly so that you can understand what
00:32 - we have written here
00:34 - so here i have created this youtube
00:36 - channel class
00:37 - which has four public attributes and
00:40 - those are
00:41 - name owner name subscribers count and
00:44 - then list of published video titles
00:46 - and then here we have a youtube channel
00:49 - constructor
00:50 - and then this get info method as well
00:53 - that just
00:54 - writes out information about our youtube
00:57 - channel and
00:58 - here's the code of our constructor okay
01:01 - and then in our main function we have
01:04 - created an
01:05 - object of this youtube channel class and
01:08 - we have assigned it these two values for
01:11 - our name
01:12 - and our owner name and then we have as
01:15 - well
01:15 - added three videos to this published
01:18 - videos
01:19 - list and here we have written out
01:21 - information about our channel
01:23 - so if i run this code now as you can see
01:26 - this is how it behaves it writes out
01:28 - information about our youtube channel
01:31 - now what i want to talk about in this
01:33 - video is
01:34 - encapsulation and what does this
01:36 - principle of encapsulation says
01:39 - well encapsulation says that these
01:41 - properties here
01:43 - should not be public these should be
01:46 - private and then the way to change the
01:48 - value the data that you store
01:50 - inside these properties should be really
01:53 - using methods that you
01:54 - expose and then you give access to those
01:57 - methods to your user
01:59 - and then using those methods obeying the
02:01 - rules of those methods
02:03 - your user can change the value of these
02:05 - properties
02:06 - okay so let me introduce a problem here
02:10 - so that you can really understand why we
02:12 - need an
02:13 - encapsulation so what happens if i say
02:16 - for example
02:17 - that youtube channel so this that we
02:20 - have created
02:21 - has let's say a million subscribers
02:26 - okay this is a million now we have
02:28 - assigned a million subscribers to this
02:30 - youtube channel
02:32 - and this should not be allowed if i run
02:34 - this program
02:36 - you can see that this youtube channel
02:38 - has a million subscribers now but
02:41 - this is not the natural way to gain
02:43 - subscribers for your youtube channel
02:45 - what you should do instead is you should
02:48 - give
02:48 - your user the ability to invoke
02:50 - subscribe and unsubscribe
02:52 - methods and then using those methods you
02:54 - are going to increase or decrease
02:56 - this subscribers counter so let's do
03:00 - that
03:00 - let's first hide these properties from
03:03 - our user so
03:04 - from whoever is going to use this class
03:06 - here
03:07 - so how do you hide these well you make
03:10 - them private
03:11 - so here instead of using public access
03:13 - modifier i'm going to use
03:15 - private access modifier so i'm going to
03:18 - say private
03:20 - oh private like this
03:23 - and then these should stay public so i'm
03:26 - going to put
03:27 - public here
03:30 - like this okay
03:33 - and then as you can see we have a
03:36 - problem here it says that this
03:37 - subscriber's count
03:39 - is inaccessible and then this
03:42 - public this published video titles as
03:44 - well as
03:45 - inaccessible meaning that we cannot
03:47 - access these private members of
03:49 - our class these private members can be
03:52 - accessed only
03:53 - within this class itself so how we are
03:56 - going to give
03:57 - our user the ability to change this
03:59 - subscriber's counter well as i said we
04:02 - are going to create
04:03 - methods so let's create two methods the
04:05 - first one is going to be
04:07 - void void subscribe
04:11 - like this and then what this method
04:14 - should do
04:15 - it should increase this subscriber's
04:18 - counter so here i'm going to say
04:20 - subscribers counter like this
04:24 - plus plus using this increment operator
04:26 - we are going to
04:28 - increase the value that we store in this
04:30 - variable by one
04:31 - and then we are going to have as well
04:33 - unsubscribe method so i'm going to copy
04:35 - this
04:37 - paste it here and let's say unsubscribe
04:41 - and then here i'm going to say that
04:45 - this subscriber's count is going to be
04:47 - decremented
04:48 - so now if i i will have to comment this
04:51 - code here
04:53 - and then i'm going to delete this code
04:56 - here
04:56 - and now if i want to increase or
04:58 - decrease subscribers for my channel
05:01 - what i will have to do is i will have to
05:03 - invoke one of these two methods so let's
05:05 - say for example
05:07 - youtube channel dot subscribe like this
05:11 - okay and let's invoke this method
05:15 - um three times for example and now if i
05:18 - run this program
05:21 - as you can see my channel so code beauty
05:25 - channel
05:25 - has three subscribers and now let's say
05:28 - for example that i haven't published
05:29 - videos in a while
05:31 - so people decide to unsubscribe so i'm
05:34 - going to invoke this unsubscribe method
05:38 - like this and if i invoke this get info
05:42 - after that i should have two subscribers
05:44 - well
05:45 - oh as you can see i have two subscribers
05:48 - now because three people have subscribed
05:50 - and then
05:50 - one person has unsubscribed from my
05:53 - channel
05:54 - okay so we have this code here as well
05:58 - that was underlined meaning that it has
06:01 - a
06:02 - compile time error and it says remember
06:06 - published video titles is inaccessible
06:08 - meaning
06:09 - that now we cannot access this published
06:12 - video titles list anymore because
06:14 - it is private now so i'm going to expose
06:18 - a method
06:19 - that is going to publish videos for me
06:22 - so here i want to create a method
06:24 - of type void which is going to be called
06:27 - publish video
06:30 - publish video
06:33 - like this and then here i want to
06:37 - add a video to my published video
06:40 - titles like this so i'm going to say
06:43 - published video titles
06:45 - push back and then what i want to do is
06:48 - i want to pass a value here which value
06:50 - well
06:51 - we are going to receive that value as a
06:53 - parameter in our function so here i'm
06:55 - going to add
06:56 - an argument a parameter and that is
06:58 - going to be of type string
07:00 - and let's call it title like this
07:04 - and now we are going to use this title
07:07 - here so we are going to push this title
07:10 - in our push
07:10 - in our published videos titles
07:14 - okay like this now if i want to invoke
07:18 - this method i'm going to invoke it like
07:21 - this so i'm going to say
07:23 - youtube channel dot publish video
07:26 - like this and then i'm going to do the
07:28 - same thing here
07:30 - and then here and here
07:34 - as well okay so now we have created
07:38 - these methods that we invoke and then
07:41 - using these methods
07:42 - we change these properties and these
07:44 - properties should be
07:46 - private meaning these should be
07:47 - encapsulated
07:49 - okay and now as you can see
07:53 - we have a channel called code beauty and
07:56 - then owner is
07:57 - myself and subscribers is
08:00 - two and then these are videos that i
08:02 - have published
08:03 - so far now if you look at this
08:06 - unsubscribe method you will notice
08:08 - that it has a bug what is that bug well
08:12 - let's delete these three lines of code
08:14 - let's delete these subscribe method
08:16 - invocations
08:17 - and if i run my program now what is
08:20 - going to happen
08:22 - as you can see it says that my
08:23 - subscribers count is equal to minus
08:26 - one and that does not really make sense
08:29 - so you cannot have minus one
08:31 - subscriber and we are going to fix that
08:33 - problem
08:34 - if we put here inside this unsubscribe
08:37 - method a check so we want to check
08:40 - if our subscribers count
08:43 - is greater than zero and only in that
08:46 - situation if that subscriber's count is
08:48 - greater than zero
08:49 - zero only then we can decrease this
08:52 - subscriber's count value so if i run my
08:55 - program now
08:58 - as you can see we have invoked this
09:00 - unsubscribe method
09:02 - but we still have zero subscribers and
09:04 - now we have fixed that bug that we had
09:07 - because
09:07 - if no one has subscribed to our channel
09:09 - then no one can
09:10 - unsubscribe from it okay so that was a
09:13 - bug that i wanted to fix
09:15 - and then what you can do here because
09:18 - here we have exposed
09:19 - these three methods that really
09:21 - manipulate the values that are stored
09:24 - inside these properties
09:25 - and then these two properties there is
09:27 - no way to change them outside of this
09:30 - class so what you can do for them for
09:32 - example
09:33 - is you can create a getter and a setter
09:36 - meaning
09:36 - a method that's that is called for
09:38 - example get name
09:40 - and that method is going to return you
09:42 - the value that is stored inside this
09:44 - name variable and then a setter method
09:48 - meaning set name method that is going to
09:50 - receive
09:51 - um parameter which is going to be called
09:54 - name for example and
09:55 - inside that set name method you are just
09:58 - going to change
09:59 - the value that is stored inside this
10:01 - name property and then you can do the
10:03 - same for this
10:04 - owner name as well so you can create a
10:07 - gether and
10:08 - a setter method so let's go over this
10:11 - encapsulation rule one more time
10:13 - so encapsulation rule says that all of
10:16 - these properties should be
10:18 - private meaning they shouldn't be
10:20 - accessible
10:21 - outside of this class and you do that
10:25 - by making them private so you put this
10:28 - private access modifier here and then
10:32 - how do you change the values that you
10:34 - store inside your properties well
10:36 - you expose a public methods
10:39 - that are going to change the data that
10:42 - you are
10:42 - storing inside your properties and here
10:45 - we have created
10:47 - these three public methods that are
10:49 - going to change the data stored inside
10:51 - our
10:52 - subscribers count uh property and then
10:54 - inside our
10:55 - published video list property here
10:58 - so you can for these two properties
11:00 - again you can create
11:02 - getter and setter method and if some of
11:04 - you do that
11:05 - please put that code in the comment
11:07 - section and i'm going to review it
11:09 - so if you enjoyed this video give it a
11:11 - thumbs up
11:12 - and don't forget to subscribe to my
11:14 - channel and hit that bell icon as well
11:16 - and i'm going to see you in my next
11:18 - video bye