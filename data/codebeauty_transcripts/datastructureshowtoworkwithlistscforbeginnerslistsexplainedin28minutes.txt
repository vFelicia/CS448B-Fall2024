00:00 - hi guys and welcome to my channel in
00:01 - this video I'm going to teach you about
00:03 - list data structure together we are
00:06 - going to create an application so that
00:08 - you can practice and apply everything
00:10 - that you learn so let's go straight to
00:12 - the point a list in any programming
00:15 - language is a data structure so it is
00:17 - used to store a collection of data which
00:20 - means multiple items of the same type
00:24 - and the reason why you would put your
00:25 - data in a list is because it makes it
00:28 - easier and faster to work with your data
00:31 - so it is easy to add new elements to the
00:33 - list to remove existing elements to
00:36 - order your data sorted by some criteria
00:38 - and so on so let me give you a few
00:40 - examples of lists in real life and in
00:43 - programming so in real life it is easy
00:46 - to create let's say a shopping list so
00:49 - you would simply write down all of the
00:51 - items that you want to buy so when you
00:53 - go shopping and you buy those items you
00:55 - simply check them or you scratch them
00:57 - off and you remove them from your list
00:59 - and the same applies in programming so
01:01 - you can easily create a list
01:03 - programmatically and to that list you
01:05 - can easily add new elements or remove
01:08 - existing elements now something that is
01:10 - a benefit in programming but it is not
01:13 - as easy in real life is that in
01:15 - programming lists give you a lot of
01:18 - options to work with your data in an
01:21 - easy and quick way for example if you
01:24 - have a list of all of the students of
01:26 - some University in real life it would
01:28 - take you a lot of time in order to let's
01:31 - say sort those students alphabetically
01:34 - or sort them by grade or any other
01:36 - criteria but in programming that is
01:39 - something that you can do in a matter of
01:41 - seconds so in programming we use lists
01:44 - in order to store our data and then to
01:46 - work with that data in a quick and easy
01:49 - way a list can contain multiple elements
01:51 - but it can also be an empty list which
01:53 - means that it contains zero elements an
01:57 - example of a list like that would be a
01:59 - list of all of the boys that I've dated
02:02 - Now counter of that list would be zero
02:04 - but that is still perfectly valid list
02:07 - the entire purpose of using lists is to
02:10 - organize your data so that it is easy
02:12 - and fast to work with that data for
02:15 - example you can make a program where you
02:17 - can create a list of all of the boys or
02:21 - girls that you like and then you can
02:23 - write a message that says hi you're very
02:26 - pretty would you like to go on a date
02:29 - and then instead of of sending that
02:30 - message to each person individually what
02:33 - you can do is you can send it to the
02:35 - entire list so this way using lists is
02:39 - going to save you a lot of time but this
02:42 - is not a program that we will build
02:43 - today because I'm not teaching you how
02:45 - to be a playboy I'm teaching you how to
02:48 - be a programmer which is basically the
02:50 - same thing and before we start building
02:52 - our application there is something
02:54 - important that I want to tell you so if
02:56 - you enjoy my teaching style and if you
02:58 - like learning from my YouTube videos
03:00 - then you can definitely learn a lot more
03:03 - from my practical programming course you
03:05 - can find it at this site here code beuty
03:08 - academy.com this course will cover
03:10 - everything that you need from beginner
03:12 - to expert and I will be there for all of
03:15 - your questions to speed up your progress
03:17 - and to help you start a successful
03:19 - career in just a few months a lot of
03:22 - students who joined code be Academy just
03:24 - four months ago have already started
03:26 - their first job thanks to the things
03:28 - that they learned in this course so why
03:31 - wouldn't you also be one of them and if
03:33 - you're not sure if this course is for
03:35 - you or not you can try it out for 7 days
03:38 - because we have 7-Day money back
03:40 - guarantee which means that if you don't
03:42 - like it for any reason you will get all
03:44 - of your money back no questions asked so
03:47 - now instead of coming up with excuses
03:49 - use the discount code that I will leave
03:51 - in the description to finally learn
03:53 - programming and enjoy all of the
03:55 - benefits that programming career offers
03:58 - now let's return to our program and let
04:00 - me show you how to create a list so you
04:03 - simply say list and then inside these
04:06 - angled brackets you put the type of data
04:09 - that you will store in your list so I
04:12 - want to have a list of strings so I will
04:15 - say please create a list of strings and
04:17 - then I need to give a name to my list so
04:20 - let's call it shopping
04:24 - list like this so here I have created a
04:28 - list of strings it's it is called
04:30 - shopping list and now what I want to do
04:33 - is I want to initialize that list to be
04:36 - empty at the moment so you do that by
04:39 - simply saying please create a new list
04:41 - of strings and you use these parentheses
04:44 - to indicate that right now it is going
04:47 - to be an empty list so this is how you
04:50 - create an empty list but you can also
04:52 - create a list that contains some
04:55 - elements so instead of using these
04:57 - closed parentheses that are te you will
05:00 - use curly brackets instead and then
05:03 - inside these curly brackets you will put
05:06 - the elements of your list so since we
05:08 - have specified that this is going to be
05:10 - a list of string that means that all of
05:13 - the elements of this list should be
05:16 - strings so in order to specify the
05:19 - elements you use these double quotation
05:22 - marks because we are talking about
05:23 - strings so the first element of my
05:26 - shopping list will be for example
05:28 - chocolate
05:30 - like this and then if I want to specify
05:32 - the second element I need to add this
05:34 - comma sign okay so here I will add the
05:37 - second element let's say
05:40 - banana okay and then let's say
05:44 - sugar and let's add also milk and Fifth
05:49 - Element will be for example
05:52 - cereal okay so this list contains five
05:57 - elements and again since the elements of
05:59 - this list should be string you need to
06:01 - specify them under these quotation marks
06:04 - and also you need to separate elements
06:07 - with this comma sign and also please
06:09 - notice that the last element doesn't
06:11 - have this comma sign because after it we
06:14 - don't have any more element so we don't
06:16 - need comma sign so this is how you can
06:19 - create a list that initially contains
06:22 - some elements so when this list here is
06:24 - added I have said that it will contain
06:27 - these five elements now the question is
06:30 - how can we print all of these elements
06:33 - of the list to our user how can we show
06:35 - them in our console it is actually very
06:38 - easy to do that we have a special Loop
06:41 - that is called for each and this is how
06:44 - you write it so you say for each and
06:47 - then inside these parentheses you say
06:49 - for each
06:51 - string item in shopping list and then
06:56 - here you specify what do you want to
06:58 - happen for for each item in your
07:01 - shopping list and here I simply want to
07:03 - write each item in the console so once
07:07 - more for each Loop is used in order to
07:10 - iterate through all of the items of your
07:13 - list so here you say for each item and
07:17 - then this is the type of your item so
07:20 - item is of type string so for each item
07:24 - in my shopping list what I want to do is
07:27 - I simply want to print that it item in
07:30 - the console so now if I start the
07:33 - program as you can see here is our
07:36 - entire list printed in the console these
07:39 - items are the ones that we have added to
07:41 - our list initially which means when we
07:43 - created this list it was created with
07:46 - these initial items so now the question
07:49 - is is there a way to add new items to
07:52 - the list after we have created it and
07:55 - the answer is yes and it is actually
07:58 - very simple to do that so let's do it
08:00 - here before our for each Loop you simply
08:03 - say shopping list. add and then inside
08:07 - these parentheses you specify the item
08:10 - that you want to add so I will put it
08:12 - under these quotation marks because we
08:14 - are adding a string so what do I want to
08:17 - add to my shopping list well let's say
08:20 - lemon okay and then let's add one more
08:23 - item so let's also add Apple like this
08:27 - so now this list should contain these
08:30 - initial five items plus these two items
08:34 - that we have added after the list was
08:36 - created so now if I start the program as
08:40 - you can see now our list contains both
08:43 - these five initial items and then these
08:46 - two newly added items so as I just
08:49 - demonstrated it is super easy to add new
08:51 - items to your list you simply say
08:53 - shopping list which is the name of your
08:55 - list and then dot add and then you
08:58 - specify the item that you want to add to
09:01 - your list so let me show you another
09:03 - interesting and important functionality
09:05 - and that is the following if you take a
09:08 - look at these items of the list you will
09:11 - notice that they are printed in the
09:13 - exact same order that we added them in
09:17 - so here we first added chocolate and
09:19 - then banana and then sugar milk cereal
09:22 - lemon and apple and we have that same
09:25 - order here so now the question is is
09:29 - there an easy way to sort these items
09:32 - let's say that we want to sort them
09:34 - alphabetically so is there an easy way
09:37 - to do that and the answer is yes
09:40 - actually there is an extremely easy way
09:43 - to sort your items so here after I have
09:47 - added all of my items I can simply say
09:50 - shopping list. sort and this method here
09:54 - is going to sort all of the elements of
09:57 - my shopping list so now when I print
09:59 - them they will be in the alphabetical
10:02 - order so if I start a program as you can
10:05 - see we first have apple and then banana
10:09 - and then cereal chocolate lemon milk and
10:12 - sugar and since the elements of our list
10:14 - are strings that means that sort method
10:17 - is going to sort them in the
10:19 - alphabetical order so from A to Z but if
10:23 - the elements of your list are for
10:25 - example numbers then sort method is
10:28 - going to sort them from from the
10:29 - smallest to the biggest so 1 2 3 4 5 and
10:33 - so on so far we have learned how we can
10:36 - add new elements to our list in an easy
10:39 - way and also how we can sort the
10:42 - elements of our list in the alphabetical
10:45 - order now let's see how we can remove
10:48 - elements from our list and for removing
10:50 - elements from our list we use method
10:52 - called remove so you simply say shopping
10:56 - list. remove and then here here under
10:59 - quotation marks you will specify the
11:02 - element that you want to remove for
11:04 - example if I say banana banana should be
11:07 - removed from our list so if I start the
11:10 - program as you can see now inside our
11:13 - list there is no more banana so these
11:16 - are list Basics and so far we have
11:18 - learned how to create a list and then
11:21 - how to initialize that list with some
11:23 - initial elements and then how to add new
11:27 - elements to our list how to sort our
11:29 - list and then how to remove existing
11:32 - elements from the list and then here is
11:34 - for each Loop that we use in order to
11:37 - iterate through all of the items of our
11:39 - list and here what I'm doing is I am
11:42 - simply printing every element to the
11:44 - console so now let's see how we can
11:46 - apply this knowledge in order to create
11:49 - a useful program so what I want to do is
11:52 - the following here I'm hardcoding the
11:55 - elements that I want to add to my list
11:57 - and then the elements that I want to to
11:59 - remove so instead of hardcoding them
12:01 - like this I want to ask my user that he
12:05 - enters the element that he wants to add
12:07 - or the element that he wants to remove
12:10 - so let's see how we can create that
12:12 - program so let's remove this code
12:14 - because we will not need it anymore and
12:17 - then this for each Loop can stay we will
12:19 - use this later okay so what we have
12:22 - currently is we have this shopping list
12:25 - which has these five items initially so
12:29 - what I want to do is I want to create a
12:32 - string variable I will call it user
12:35 - input like this so what I want to do is
12:39 - I want to ask my user to enter his own
12:43 - ingredient and then I will remove that
12:45 - ingredient from this shopping list and
12:49 - instead of doing that just once what I
12:51 - will do is I will use a loop and I will
12:55 - do that as long as there are items in
12:59 - inside this list so as long as the count
13:03 - of this list here is not zero so here I
13:06 - will say while and the condition will be
13:11 - the following so while shopping list.
13:15 - count is not equal to zero so as long as
13:19 - this condition here is true as long as
13:22 - my list is not empty what I will do is
13:25 - the following I will print this list
13:29 - list okay so let's add an output here
13:32 - let's say console. right line and here I
13:35 - will say this is your list okay so I
13:40 - will print my list and after the user
13:43 - can see the entire list then I will ask
13:46 - him to enter his own input to enter the
13:49 - element that he wants to remove so here
13:51 - I will say again
13:54 - console. right line and here let's say
13:56 - item to remove
13:59 - okay so then I will say user input is
14:03 - equal to console readline so whatever
14:06 - the user types into the console I will
14:09 - read that and then store it inside this
14:11 - variable here and then I will simply say
14:15 - shopping
14:16 - list. remove and the item that I want to
14:20 - remove is this one that the user has
14:22 - entered and we will repeat this code as
14:25 - long as this condition here is true
14:28 - which means as long as our list is not
14:31 - empty so in each iteration we will print
14:34 - the entire list and then we will ask our
14:37 - user to enter his input and then we will
14:40 - remove that element from the list and do
14:42 - it all over again as long as the count
14:45 - of the list is not zero so let's start
14:49 - our program okay it says this is your
14:51 - list and here we have five items that
14:54 - our list initially contains and here it
14:57 - is asking to enter the item that we want
14:59 - to remove so if I say
15:02 - banana and press enter again it says
15:05 - this is your list but this time we don't
15:08 - have banana in our list because it was
15:11 - removed and then here it is asking again
15:14 - item to remove so if I say for example
15:17 - milk as you can see milk is no longer
15:20 - part of our list now there are two
15:23 - things that I would like to do here in
15:25 - order to optimize the user experience of
15:28 - this program so the first thing is this
15:30 - part here it says item to remove and
15:32 - then we are entering that item in the
15:35 - next line so what I would like to happen
15:38 - is I would like to enter that item in
15:41 - this same line so how can we achieve
15:43 - that well here where you are printing
15:47 - item to remove to the console instead of
15:49 - saying console. right line you simply
15:51 - say console do right so now if I start
15:54 - the program as you can see it says item
15:57 - to remove and I will enter that item in
15:59 - the same line so here I will say
16:02 - serial and as you can see it stays in
16:05 - the same line and here we get our list
16:07 - again and again it asks us to enter the
16:10 - item that we want to remove so that is
16:12 - the first thing that will optimize the
16:14 - user experience a little bit and then
16:16 - the second thing that I want to do is I
16:19 - don't want to have multiple lists on the
16:21 - screen so I don't want to have this list
16:24 - here and then this list here because it
16:26 - is very hard for the user to understand
16:28 - what is happening happening so instead
16:30 - what I would like to do is I would like
16:32 - to have my current list printed always
16:35 - on the top of the screen and then below
16:37 - it I want to ask the user to enter the
16:39 - item that he wants to remove and when he
16:41 - removes the item I will refresh the
16:44 - entire screen so that again at the top
16:47 - he can see current list and then this
16:49 - question to enter the item that he wants
16:52 - to remove so how can we do that it is
16:55 - actually very easy so what you will do
16:57 - is after you remove the item that you
17:00 - need to remove you will simply say
17:03 - console do clear like this so that is
17:07 - going to clear your entire console
17:09 - before it starts the next iteration so
17:12 - now if we start our program again here
17:15 - we get our list and then it is asking us
17:18 - to enter the item to remove so I will
17:20 - say milk and when I press enter as you
17:24 - can see this entire screen is refreshed
17:27 - and the milk has this disappeared from
17:29 - the screen so if I say here for example
17:32 - sugar again that item was removed and
17:36 - this way it is much easier and much more
17:39 - user friendly for your user to
17:41 - understand what is happening so this is
17:44 - an easy program that you can create and
17:46 - that is going to remove items from your
17:48 - list based on what the user has typed
17:51 - you can also adjust this program so that
17:53 - instead of removing elements from the
17:55 - list it adds elements to the list so
17:58 - let's see how we can do that so here
18:01 - instead of saying shopping list. remove
18:04 - I will simply say shopping list do add
18:07 - and then I will change this text here so
18:10 - I will say item to add okay so now if I
18:14 - start the program let's see what is
18:16 - going to be the behavior so if I say
18:19 - onion as you can see onion will be added
18:21 - to the list if I say
18:24 - tomato tomato will be added to the list
18:27 - as well and then let's say
18:29 - orange
18:31 - lemon and so on so this is an easy way
18:35 - to add elements to your list
18:37 - programmatically so now that we know how
18:39 - to both add and remove elements what I
18:42 - want to do is I want to create a program
18:45 - that is going to do both so when my user
18:48 - enters his input I will check if that
18:51 - item exists in my list and if it does
18:54 - exist then I will remove it from the
18:56 - list but if it does not exist then I
18:59 - will add it to my list so let's see how
19:02 - we can do that so as I said if our list
19:05 - contains the item that the user has
19:08 - entered then we will remove it from the
19:11 - list but if our list does not contain
19:14 - that item then we are going to add it to
19:17 - our list so now the question is how can
19:20 - we check if the list contains some item
19:22 - or not well it's actually very easy to
19:26 - do that so here after the user enters
19:29 - his input I will simply say if shopping
19:33 - list do contains user input this is the
19:38 - method that you use in order to check if
19:41 - this list here contains this item so if
19:45 - it contains this item what I want to do
19:48 - is I simply want to remove it from the
19:50 - list else meaning if it does not contain
19:54 - that item then I want to add it to my
19:57 - list and this here is all of the code
20:00 - that you need I will just make one small
20:02 - change here so I will say enter your
20:05 - item so after the user enters his item
20:10 - then I will check if that item exists in
20:12 - our list if it does I will remove it and
20:15 - if it does not then I'm going to add it
20:18 - to my list so now let's test this
20:22 - program okay so here is our list
20:25 - initially now let's add an item that
20:27 - doesn't exist let's say
20:30 - tomato okay and as you can see tomato
20:33 - was added if I say apple apple will also
20:38 - be added to my list but if I say for
20:40 - example milk milk already exists in my
20:43 - list so when I press enter milk will be
20:46 - removed from my list if I say banana
20:50 - banana should also be removed so enter
20:53 - and as you can see banana was removed so
20:56 - now if I enter for example milk again as
20:59 - you can see milk will be added again at
21:02 - the end of my list now even though our
21:04 - program works we still have one hidden
21:07 - bug here and that is the following if I
21:10 - enter for example sugar but I enter it
21:13 - with all capital letters and I press
21:16 - enter what do you think will happen and
21:19 - as you can see now we have sugar here
21:22 - and sugar here this one is with
21:25 - lowercase and this one is with capital
21:28 - letters the same way if I enter for
21:31 - example sugar like this and I press
21:34 - enter we will get another sugar added to
21:38 - our program and the reason for this is
21:40 - because for your application these three
21:44 - elements are not the same thing so even
21:47 - though for you and me sugar written like
21:50 - this and like this and like this is
21:52 - absolutely the same thing but for your
21:55 - program it is not because it makes a
21:58 - difference between lowercase letters and
22:00 - uppercase letters so U lowercase is not
22:04 - the same as U uppercase so now because
22:08 - of this we will have duplicate items in
22:11 - our list and we need to figure out a way
22:14 - to fix this problem so that we don't get
22:16 - these duplicate items so if the user
22:19 - enters sugar it doesn't matter if he
22:21 - enters it with capital letters or
22:23 - lowercase letters if sugar exists in our
22:27 - list it should be removed so we should
22:29 - not add duplicate item we should remove
22:33 - existing item so the easiest way to fix
22:35 - this problem is to make our program
22:37 - always work with lowercase letters so
22:40 - regardless if our user is typing capital
22:43 - letters or lowercase letters our program
22:46 - in the background will always work with
22:48 - lowercase so how can we do that well
22:52 - it's actually very easy so here when I'm
22:55 - adding the item to my shopping list I
22:57 - will say whatever the user has inputed
23:00 - please convert that into lower so I'm
23:03 - using this to lower method to convert
23:06 - this text into lowercase letters and
23:09 - then when I'm removing I will also say
23:11 - to lower okay and also when I check if
23:15 - that item exists or not I will also
23:19 - convert it to lowercase like this so
23:22 - with these three little changes we have
23:25 - made our entire program to work with
23:27 - lower case letters which means that when
23:30 - we check if the item contains we check
23:33 - in lowercase when we remove we remove in
23:36 - lowercase and when we add new items we
23:38 - convert them to lowercase and we add
23:40 - them as lowercase letters now the only
23:44 - thing that can make you a problem
23:45 - potentially is if you have here items
23:49 - that are written with capital letters so
23:52 - please make sure to check your initial
23:54 - items and make sure to write them all
23:56 - initially with lower case letters so you
23:59 - should not have chocolate written like
24:01 - this for example or banana written like
24:04 - this or any capital letters in your list
24:07 - initially so everything should be
24:09 - lowercase and then your program is going
24:12 - to work without any problems so now if I
24:16 - start the program let's see what is
24:18 - going to be Its Behavior so if I say for
24:21 - example onion but I type it like this so
24:25 - lowercase o and then capital letter n i
24:28 - i o n like this and if I press enter it
24:32 - will be entered in my list but
24:35 - everything will be in lowercase letters
24:38 - and then also when I decide to remove
24:40 - this item if I say for example onion
24:43 - like this so all capital letters it is
24:46 - still going to be removed from my list
24:48 - because as I said in the background
24:50 - everything is working with lowercase
24:53 - letters and also if I say banana it will
24:57 - remove banana and then
24:59 - sugar milk like this and let's also
25:03 - remove cereal and
25:05 - chocolate Okay and then
25:10 - chocolate and as you can see now our
25:13 - program is going to stop because here
25:16 - this condition says that this Loop is
25:18 - going to run until your list is not
25:21 - empty so when your list becomes empty
25:24 - this Loop will end and since we don't
25:26 - have anything after that that means that
25:28 - our entire program is going to stop now
25:31 - if you don't want your program to stop
25:33 - when your list becomes empty you can
25:35 - change this condition here so you can
25:38 - make this while loop to be an infinite
25:42 - Loop so you can simply say here while
25:45 - true so while this condition here is
25:47 - true and since we have hardcoded it here
25:51 - then it will always be true so that
25:54 - means that this Loop here will run
25:57 - forever so if I start my program this
26:00 - program will run Forever Until I press
26:03 - this close button manually so now if I
26:07 - start my program I can empty this list
26:09 - completely so let's say
26:12 - chocolate and then
26:14 - banana sugar milk
26:18 - cereal okay and as you can see your
26:21 - program is still going to work so that
26:23 - you can add new items to your list so if
26:25 - I say for example Apple Apple will be
26:29 - added if I say milk again milk will be
26:32 - added and then again if I decide to
26:34 - empty my entire
26:37 - list again the program is not going to
26:40 - stop so that is how you can work with
26:42 - lists in programming if you have any
26:44 - questions or any topics that you would
26:46 - like to see in the future let me know in
26:48 - the comment section and then if you
26:49 - enjoyed this video give it a big thumbs
26:51 - up so that I know to create more videos
26:54 - like this in the future also if you like
26:56 - learning from my YouTube videos then you
26:58 - are the person who is going to benefit
27:00 - the most from my practical programming
27:02 - course because there you are going to
27:05 - learn everything that you need to know
27:06 - about programming from beginner to
27:09 - expert so that you can start a
27:10 - successful career as a software
27:12 - developer I have created all of the
27:14 - video lessons that you need to watch and
27:16 - all of the exercises that you need to do
27:19 - and I will be there through the entire
27:21 - process to help you and to answer any
27:23 - questions that you have so that your
27:25 - progress is optimal and so that you can
27:28 - get a job and start a career as soon as
27:31 - possible if you have any questions about
27:33 - the course you can leave them in the
27:34 - comment section and I will make sure to
27:36 - reply and if you decide to join there
27:39 - will be a special discount coupon code
27:41 - that I will leave in the description so
27:43 - that you can save some money so thank
27:45 - you very much for watching and I will
27:47 - see you in some other video bye