00:00 - hi everyone welcome to my channel
00:01 - welcome to another video of C++
00:03 - functions if you're a beginner to C++
00:06 - make sure to watch my C++ for beginners
00:09 - playlist and there you can really find
00:12 - some of the most important concepts that
00:15 - you need to understand as someone who
00:17 - learns C++ and also you can find a lot
00:20 - of exercises that you are going to find
00:22 - useful for practicing C++ and in this
00:26 - video I wanted to talk about functions
00:28 - more specifically about function
00:31 - parameters or arguments and before we
00:34 - start make sure to subscribe to my
00:36 - channel and click the bell icon as well
00:38 - so that you are notified when I publish
00:41 - my next video and also follow me on my
00:44 - other social media profiles so through
00:46 - code Beauty Instagram and Twitter
00:48 - accounts in order to get a little bit of
00:50 - a sneak a peek into a developer's life
00:53 - so how really developer life looks like
00:56 - so without further ado let's start with
00:59 - today's lesson so as I said in this
01:02 - video I want to talk about C++ function
01:05 - parameters or arguments and the first
01:08 - thing that I want to explain is what are
01:10 - parameters so what are arguments and in
01:13 - my previous video we have talked about
01:15 - C++ functions so if you haven't watched
01:18 - that video made sure to do so I'm going
01:20 - to link it here and sometimes a function
01:24 - needs to receive a certain value a
01:26 - certain variable and then perform a
01:29 - certain task on that value so on that
01:31 - variable or it really needs the value of
01:33 - that variable in order to perform a
01:35 - certain task so let's explain how we are
01:39 - going to create a function that receives
01:41 - a parameter in C++ so here I am going to
01:44 - add a function of return type void and
01:49 - I'm going to say that that function is
01:52 - going to be called let's say introduce
01:55 - me introduce me like this and then in
01:59 - these parentheses here we can put
02:02 - parameters that our function is going to
02:04 - receive and after that in these curly
02:09 - brackets we are going to put the body of
02:11 - our phone
02:12 - so as I said in these parentheses here
02:15 - we are going to put parameters and they
02:18 - are specified in the following way so
02:20 - first you are going to write out the
02:22 - type of your parameter and that is going
02:24 - to be trained like this and then we are
02:29 - going to specify the name of our
02:31 - parameter and that is going to be what's
02:34 - a name so we want to pass in this
02:37 - function that is going to introduce our
02:39 - user we want to really pass the name of
02:42 - our user and then what our function is
02:45 - going to do we are going to put in these
02:47 - curly brackets here and that is going to
02:50 - be really to introduce our user so our
02:53 - function is going to write out C out
02:56 - let's say my name is and then let's
03:01 - write out this name that we have
03:03 - received in this function so I'm going
03:06 - to say name and I'm going to add and
03:09 - line like this okay so this is the way
03:14 - to pass a parameter so to pass a value
03:18 - to your function and as I said in my
03:21 - previous video you can really separate
03:22 - this declaration and definition of a
03:25 - function so you can put really
03:27 - declaration of your function here so
03:30 - before your main function and then you
03:31 - can put definition of your function
03:33 - after your main function and if you
03:36 - don't know how to do that make sure to
03:37 - watch my first video of this playlist
03:40 - okay so now I want to invoke this
03:44 - function here and how we do that well we
03:46 - specify the name of my function so I'm
03:49 - going to say introduce me and then since
03:53 - this this function receives argument so
03:56 - since this function function receives a
03:58 - parameter here we really have to pass
04:01 - that parameter to our function and then
04:05 - I'm going to put here so here I'm going
04:07 - to pass an argument to my function so
04:11 - I'm going to say salteena like this and
04:16 - this here really is called argument so
04:19 - it is a value that we pass to our
04:21 - function and then here it is called
04:23 - parameter
04:25 - okay so now if I run my program you can
04:32 - see that my function has successfully
04:34 - introduced me so it says my name is
04:37 - Selena like this okay so here we have
04:40 - really here we have really defined our
04:45 - function so the parameters that our
04:47 - function receives name return type and
04:49 - then the block of code that our function
04:52 - is going to execute and then here we
04:54 - have invoked our function and passed an
04:57 - argument which is this string of text
05:00 - here to our function which is going to
05:02 - be received in this name variable and
05:05 - then our function is going to really
05:06 - treat it as a variable which means that
05:09 - it is going to write that value here
05:11 - okay and now if I try to invoke this
05:15 - function once more so I'm going to copy
05:17 - this this line and then paste it here
05:20 - and let's say that I'm going to pass it
05:22 - a different value so I'm going to say
05:24 - for example Anna okay you can see that
05:29 - now our function has successfully
05:31 - introduced two users so it has said my
05:34 - name is my name is Saudi you know and
05:36 - then my name is Anna and there is also
05:40 - another thing that I want to explain and
05:42 - that is going to be how you can pass
05:44 - multiple arguments to your function and
05:47 - there is going to be in a following way
05:48 - so here in these parentheses where I
05:51 - have specified my first parameter you
05:55 - can put comma sign and then you specify
05:57 - your second third fourth fifth and your
06:00 - other parameters so you specify the type
06:04 - which is also going to be string in this
06:07 - particular case and let's say that my
06:09 - second parameter is going to be called
06:11 - city like this and let's add another one
06:16 - so let's say int age like this so now in
06:21 - this function I am going to write out
06:23 - also where is my user from and also how
06:26 - old my user is so I'm going to write out
06:29 - C out I am from and then let's write out
06:35 - this city that
06:38 - we have passed in this function and add
06:41 - also and why and let's write out also I
06:46 - am I am H so I am however many years we
06:54 - have passed in this function and then
06:57 - let's say years old
07:00 - Oh like this okay so now we have really
07:07 - introduced our user in more detail and
07:10 - we have passed this function name city
07:13 - and age information for our user but as
07:17 - you can see here our function so our
07:20 - compiler really says that this function
07:22 - is not valid it has too few arguments in
07:25 - a function call meaning that this
07:27 - invocation this call of a function does
07:29 - not really contain all the necessary
07:31 - parameters were all the necessary
07:33 - arguments that we need to pass to our
07:36 - function which means that it really
07:38 - lacks the city and age parameters so
07:42 - here I'm going to put comma as well and
07:45 - then I'm going to specify my city
07:48 - this here is bolded so it is bold and
07:51 - that means that we have to really pass a
07:55 - city value to our function so I'm going
07:57 - to write out my start like this and then
08:02 - I am also going to specify age so I'm
08:06 - going to say 25 and let's do the same
08:10 - for our and I user so I'm going to say
08:12 - that our Anna is from New York and let's
08:15 - say that she has 27 years old for
08:18 - example so now when I run my program you
08:23 - can see that we have successfully
08:26 - introduced to users so my name is Sal
08:30 - Dina
08:31 - I am from Moscow I am 25 years old and
08:33 - then also my name is Anna I'm from New
08:36 - York and I am 27 years old ok so and we
08:40 - have really written this code only once
08:44 - and then we can reuse it however many
08:46 - times we need to so in this particular
08:48 - case we have used it too
08:51 - okay and another thing that I want to
08:54 - explain is going to be a default
08:56 - parameter so what is default parameter
08:59 - sometimes you really don't want to pass
09:03 - a value to your function meaning that in
09:05 - a specific situation you don't have that
09:08 - value or you don't want to pass it and
09:10 - in that case you want to define define
09:12 - default value for your parameter so in
09:15 - the case where you use where your user
09:17 - does not pass that argument to your
09:20 - function for example you can say that
09:23 - your age parameter here has the default
09:26 - value of zero okay and that means that
09:31 - you don't really have to pass this age
09:34 - parameter anymore so here I'm going to
09:37 - delete this age for my ana user and
09:41 - let's run our program now in order to
09:44 - see how this function is going to behave
09:46 - for this first user and then also to see
09:48 - how it is going to behave for this
09:50 - second user user which did not specify
09:53 - this age parameter so this age argument
09:57 - and when I run it you can see that my
10:02 - first user has been introduced as it was
10:04 - previously so I am 25 years old and then
10:08 - the second user which did not specify
10:10 - age argument it really said I am zero
10:15 - years old meaning that our function has
10:18 - really taken this default value and it
10:21 - has written out I am and then this
10:23 - default value and then years old we are
10:26 - missing s here okay so I'm going to add
10:30 - s and I want to do a full winged thing
10:35 - so in the case where our user does not
10:38 - pass this value for our age parameter
10:42 - I'm going to really check whether we
10:44 - have that value or we have this default
10:47 - value and then in the case where we have
10:49 - only this default value I don't want to
10:51 - write this line of code here so I am
10:53 - going to say here if age is not equal to
11:00 - zero meaning that our user has specified
11:04 - some other
11:04 - value which is not zero then and only
11:07 - then we are going to write this line of
11:10 - code but in the case where we have only
11:12 - this default value we do not really want
11:15 - to write out that our user has zero
11:16 - years old because that does not make
11:19 - sense okay so as you can see now my
11:24 - first user has been introduced as I am
11:27 - 25 years old and then my name is Ella
11:30 - I'm from New York since Ana did not
11:32 - specify how old she is we haven't
11:36 - written out her age here because of this
11:39 - check that we have added okay so that
11:43 - was about default parameter and there is
11:46 - one thing also that I want to that I
11:48 - want to say about this default parameter
11:50 - and that is going to be really if I
11:52 - delete this is equal to zero and that I
11:55 - try to assign default value to this city
11:57 - parameter so I say let's say the city is
12:01 - equal to default like this you can see
12:06 - that the compiler is really underlying
12:09 - this function and it says okay it says
12:11 - the fourth argument not at end of
12:14 - parameter list meaning that you can
12:16 - specify default argument only at the end
12:20 - of this list
12:21 - so if you want to specify the fault
12:23 - value for this parameter you will have
12:25 - to specify the full value for this one
12:28 - as well so if I add the full value here
12:33 - so I have added zero then we can really
12:36 - add a default value for this second
12:39 - parameter and then we can add the full
12:40 - value for this one as well and now we
12:43 - are really left with so our compiler is
12:47 - not underlying this introduce me
12:49 - function name anymore okay and this does
12:53 - not make sense so I'm going to delete it
12:55 - but I wanted to explain that you cannot
12:58 - specify the full value for your middle
13:00 - parameter if you did not specify a
13:02 - default value at the end of your
13:05 - parameter list and there is one more
13:07 - thing that I want to show you and there
13:09 - is going to be that you don't have to
13:11 - hard code these values as we did here so
13:14 - I am going to comment the
13:16 - is out and then I'm going to let my user
13:19 - define his own values for these three
13:22 - variables so I am going to declare two
13:25 - variables of type string which are going
13:28 - to be named and City and then also I'm
13:32 - going to declare a variable of type int
13:33 - which is going to be called age and then
13:36 - I'm going to say C out so please enter a
13:40 - name like this it's not capital letter
13:45 - okay and then C in name and then C out
13:51 - City so after my user has entered name I
13:56 - want him to enter city
13:58 - so C in city like this and then also I
14:04 - want to enter age and C in age like this
14:11 - so now after my user has specified these
14:15 - three variables so name city and age I
14:20 - can pass these tree in my introduce me
14:23 - function so I can say introduce me and
14:27 - then pass name and city and age like
14:32 - this and if I run my program now as you
14:37 - can see my program really asks me to
14:39 - enter a name so let's say the name is
14:41 - going to be Tom for example and then
14:45 - let's say that city is going to be
14:47 - London and age let's say 32 okay
14:52 - and now as you can see my function has
14:55 - successfully introduced Tom so it says
14:57 - my name is Tom I am from London and I am
15:00 - 32 years old okay
15:03 - and you don't really have to use these
15:06 - names for the variables in your main
15:08 - function so the names of these variables
15:11 - here do not have to be the same as these
15:14 - names here here so you can call these
15:17 - for example name one city one age one
15:21 - but you are going to have to use these
15:23 - names in your main function so you will
15:25 - have to say name one city one age 1 and
15:28 - here as well
15:30 - but these names do not have to be the
15:34 - same as these names here your program is
15:36 - going to work correctly you have to
15:38 - however have the same type here and here
15:42 - so this here has to be string if it has
15:45 - been declared a string here and this one
15:49 - as well and then age also has to be of
15:52 - type int if it has been declared as int
15:54 - here and once more if I run my program
15:58 - you can see that it asks for name so Tom
16:02 - New York and then age is going to be 22
16:06 - and as you can see my name is Tom I'm
16:09 - from New York I am 22 years old so your
16:12 - program works just fine so I hope that
16:15 - you have understood how parameters
16:17 - behave in a function and how you can
16:19 - pass multiple parameters to your
16:21 - function and also how you can specify a
16:23 - default parameter in your function and
16:26 - if you enjoyed this video if you learned
16:28 - something new make sure to subscribe to
16:30 - my channel click the bell icon so that
16:32 - you are notified when I publish my next
16:34 - video also like it and share it with
16:36 - your friends and follow me on my other
16:38 - social media so Instagram and Twitter
16:41 - accounts true code bTW thanks for
16:43 - watching and I'm going to see you in my
16:45 - next video bye