00:00 - [Music]
00:10 - hello everyone
00:11 - welcome to my channel in this video i
00:13 - want to talk about a topic that is very
00:14 - important but it is also very confusing
00:17 - for most
00:18 - beginners and there is this line of code
00:20 - here
00:21 - using namespace std i believe that you
00:25 - already read somewhere on the internet
00:27 - that this here is a bad
00:29 - practice but i also believe that if
00:32 - you're a beginner it is going to be
00:33 - extremely hard for you to understand
00:36 - what this line of code here is doing and
00:38 - also why
00:39 - programmers are saying that this here is
00:41 - a bad practice and find an explanation
00:43 - that you can actually
00:45 - understand so that is the reason why i'm
00:48 - making this video
00:49 - and after watching this video you will
00:51 - be able to understand
00:53 - this line of code here and you will also
00:55 - learn about
00:56 - namespaces and the main goal of this
00:59 - video and all the videos that i make
01:01 - is to teach you to understand code to
01:03 - teach you to understand programming
01:05 - so that you don't have to rely on
01:08 - opinions of
01:09 - other people on the internet you don't
01:11 - have to trust
01:12 - someone on the internet when he or she
01:14 - says this is a good code or this is a
01:17 - bad code you want to know that
01:18 - yourself and then what i would like you
01:20 - to do is to share
01:22 - all the knowledge that you get from me
01:24 - share it with your friends
01:26 - or co-workers colleagues siblings
01:28 - whoever you have
01:30 - but all the knowledge that you get
01:31 - anything that you understand and someone
01:33 - else does not
01:34 - please share your knowledge with that
01:36 - person so
01:37 - um without further ado let's start
01:39 - explaining this and as you can see here
01:42 - i have
01:42 - using namespace s3d and we will come to
01:45 - this part
01:46 - um in a few minutes first i want to
01:48 - focus on namespaces and i want to
01:50 - explain
01:51 - what are namespaces in general so as you
01:54 - already know
01:55 - in programming you can create variables
01:58 - and those variables can have the same
02:00 - name but
02:01 - what is going to happen if you decide to
02:04 - give the same name to two or more
02:06 - variables please write me your answer in
02:09 - the comments down below before you
02:10 - listen to what i'm going to answer so
02:12 - pause the video
02:14 - okay so the answer is that you will get
02:17 - a conflict if two or more things have
02:20 - the same name
02:21 - you get a conflict so in order to prove
02:24 - that
02:25 - let's create two variables that have the
02:27 - same name so i'm going to say
02:28 - int age and let's assign it value of 25
02:33 - for example and then let's create
02:36 - another variable
02:37 - also of type int and let's call it
02:41 - age as well and this time i'm going to
02:43 - assign it value of
02:44 - 26 for example okay so
02:47 - what is going to happen if i try to run
02:50 - this program let's see okay as you can
02:54 - see we get
02:55 - an error and that error let me check
02:58 - what it says
02:59 - here it says age redefinition which
03:02 - means
03:02 - hey you already defined the variable
03:05 - called
03:05 - age once and now you are trying to
03:07 - define another variable with the same
03:10 - name
03:10 - why are you doing that so in order to
03:13 - understand the problem that we have here
03:15 - imagine the following real life
03:17 - situation
03:19 - imagine that your name is for example
03:21 - david
03:22 - and then you have a brother whose name
03:25 - is
03:25 - also david and now your mom decides to
03:28 - call one of you too so she says
03:31 - david can you please come here and
03:33 - you're like
03:34 - which one of us are you trying to call
03:36 - you decided to give us the same name
03:38 - why so that is exactly the same problem
03:42 - that we have here
03:43 - so if you decide in your program to say
03:46 - something like
03:46 - age is equal to 30 now your compiler is
03:51 - going to be confused
03:52 - which one of these two are you trying to
03:56 - assign
03:57 - this value to so is this one going to be
03:59 - 30 or is this one going to be 30
04:02 - your compiler does not know so in order
04:06 - to resolve
04:06 - this problem this conflict that we have
04:08 - here we use
04:10 - namespaces so again namespaces are used
04:14 - to resolve
04:15 - conflicts that we get when two or more
04:18 - things
04:18 - have the same name so what i want to do
04:22 - now is i want to create
04:24 - two namespaces and i'm going to move
04:26 - this variable to one namespace and then
04:28 - this variable the second namespace and
04:31 - then we are going to see how we can work
04:33 - with those
04:34 - namespaces okay so let's create a
04:37 - namespace here
04:38 - how do you do that well you specify
04:41 - keyword
04:42 - namespace and then you give a name to
04:44 - your namespace so let's call it
04:47 - namespace1 for example so
04:50 - this is going to be our first namespace
04:52 - and then let's create another namespace
04:55 - like this but this one is going to be
04:57 - called namespace
04:58 - 2 like this so as i said i'm going to
05:02 - move
05:02 - this variable to my namespace 1 and then
05:06 - this variable to my namespace 2
05:09 - okay and let's delete this because i
05:12 - don't need it anymore
05:13 - now my question for you is what is going
05:16 - to happen
05:16 - if i decide to say c out h
05:20 - which one is going to be written out
05:22 - this one or this one
05:24 - let's try to run our program but as you
05:26 - can see we already have
05:27 - error here and that error says
05:30 - identifier age is undefined which means
05:34 - that
05:34 - now our main function this line of code
05:38 - here
05:38 - does not know what this age here means
05:41 - what this age here is
05:43 - and the reason why is because we have
05:46 - moved
05:47 - this variable to a different namespace
05:49 - where actually we have
05:51 - two namespaces that contain this
05:53 - variable here
05:54 - so in order to be able to access this
05:57 - one here or this one here
05:59 - we will need to specify the address to
06:02 - that variable
06:03 - and the address to that variable is
06:04 - going to be the namespace
06:06 - so how do i access this variable here
06:09 - well i specify its address which is
06:12 - namespace one so i'm going to say
06:15 - namespace1
06:16 - and then i use two column size and then
06:19 - as you can see that
06:20 - error has disappeared so if i run this
06:23 - program now
06:25 - as you can see we get value of 25
06:28 - which is the value that our variable
06:31 - called age
06:32 - has in this namespace here and
06:35 - if we want to access this variable here
06:38 - so the variable from the namespace 2 we
06:40 - would use that different address so we
06:43 - would say
06:43 - namespace 2 age so if i run my program
06:47 - now
06:48 - as you can see we get this value here so
06:51 - we get the value of 26.
06:55 - okay another important thing is that
06:57 - namespaces can contain
06:58 - many different things not just one
07:01 - variable
07:02 - and they usually do so let's create
07:04 - another
07:05 - variable here in this namespace one so
07:07 - i'm going to say string
07:09 - and let's call that variable name and
07:12 - i'm going to say that name
07:14 - is salvina like this which is
07:17 - my name okay so let's use capital s
07:21 - actually so in order to access this
07:24 - variable here again i will have to
07:26 - specify the address and then the name of
07:28 - the variable
07:29 - so let's add one end line here
07:32 - like this and then i'm going to write
07:35 - out
07:36 - the name so i will say c out
07:39 - and then namespace
07:42 - 1 and then if i put these
07:46 - two column signs i will get here a list
07:48 - of everything that is available in that
07:51 - namespace and in this situation that is
07:53 - age
07:54 - and name so our namespace one contains
07:56 - variable called age and then it contains
07:58 - variable called
07:59 - name so i'm going to say name like this
08:02 - and then let's add
08:04 - another end line at the end so that we
08:06 - get a nice formatting
08:08 - and if i try to run my program now let's
08:11 - see what we will get
08:12 - we will get value of 26 which is this
08:15 - age here because we are accessing
08:18 - because we are accessing variable age
08:20 - from this second namespace
08:22 - and then here we get saldena because we
08:25 - are
08:26 - trying to access this variable here so
08:28 - namespace1
08:29 - name which is this variable here
08:32 - okay now one thing that i promised in
08:34 - the beginning of this video is to
08:36 - explain
08:37 - what is this line of code here so using
08:40 - namespace std and following the story
08:43 - that i
08:44 - already told you you may guess now that
08:46 - std
08:47 - is a namespace and you would be correct
08:49 - as it says here
08:50 - namespace and this std is short of
08:54 - standard so this here is standard
08:57 - namespace which means that it is a
08:59 - namespace that is used
09:00 - very often so the same way that this
09:04 - namespace here has
09:06 - two members and then this namespace here
09:08 - has one member
09:09 - std namespace also has its members and
09:12 - std namespace has
09:13 - a lot of members so what is going to
09:16 - happen
09:17 - for example if i delete this line of
09:20 - code here let's do that
09:22 - okay i deleted it and if i try to run my
09:25 - program now
09:26 - what will happen well the first of all
09:29 - program is not going to build and it's
09:31 - not going to run
09:32 - and then second we will get three errors
09:35 - that we have here
09:36 - the first one is identifier c out is
09:39 - undefined and then identifier end line
09:42 - is undefined and then here as well it
09:44 - says
09:45 - string is undefined which means hey
09:49 - i don't know what this object here is
09:51 - what is c
09:52 - out and then what is endline and what is
09:54 - string
09:55 - and the answer to that question is that
09:57 - this object here
09:58 - and this one here and string as well
10:01 - these
10:02 - are members of standard namespace which
10:05 - means
10:05 - that in order to be able to access c out
10:08 - and end line and string
10:10 - you need to specify the address of those
10:12 - objects
10:13 - so one way to fix the problem that we
10:15 - have is to say here
10:17 - std and then two column signs
10:20 - okay the same way that we did here here
10:23 - you can specify the full name the
10:25 - address to that
10:27 - object and that error should disappear
10:29 - as it already did and then here as well
10:31 - you can say
10:32 - std end line and that error disappears
10:36 - as well and then here std c
10:39 - out and then again std
10:42 - end line and then here we put std
10:46 - to column size string okay and if
10:49 - i try to run my program now as you can
10:52 - see
10:52 - it behaves as it should okay let's close
10:55 - it
10:56 - now this approach here to write std
10:59 - every time that you
11:00 - want to use your c out or end line or
11:02 - string
11:03 - that is a little bit tedious to write
11:05 - every time so what you can do instead
11:08 - is you can include this c out in the
11:11 - beginning so you can say
11:12 - hey i will be using std
11:16 - c out okay so each time that i write c
11:20 - out you know that this here is its full
11:23 - address this here is its full name so
11:26 - now i can remove
11:28 - this stdc out okay
11:31 - and we should not have a problem and
11:33 - then you can include
11:35 - this one here so std and line and then
11:38 - std string as well so i'm going to do
11:40 - that
11:40 - i will say std and line
11:44 - and then let's do one more let's say std
11:47 - string like this and now i can remove
11:51 - this part here and then this part here
11:53 - and i can remove my std from here as
11:56 - well
11:56 - and if i run my program now as you can
11:59 - see we get the same output
12:02 - again so this approach here is going to
12:04 - be alternative to this
12:06 - approach here so you can say either
12:09 - using stdc out and then std end line and
12:12 - std string
12:13 - or you can put here std two column signs
12:17 - and then the name of that object now
12:20 - one more thing that i want to explain is
12:22 - why this here is bad
12:24 - why using namespace std
12:28 - is bad so if you look at this namespace
12:31 - here you can see that
12:33 - namespace1 has two members only
12:36 - but this namespace here std namespace
12:39 - standard namespace has a lot more things
12:42 - a lot of different things are included
12:44 - in this namespace here so if you say
12:47 - using namespace std
12:49 - that means that you are including all of
12:51 - those things from this namespace here
12:54 - so if i try to access my namespace 1 for
12:57 - example if i say namespace
12:59 - 1 and then i put 2 column signs
13:02 - i get variable age and variable name
13:04 - because those are two members of my
13:06 - namespace one
13:08 - but if i try to say that same thing for
13:11 - std namespace so
13:12 - std and then two column signs as you can
13:16 - see
13:16 - here i get a lot of different things
13:19 - that
13:20 - i can use and access to from my std
13:23 - namespace
13:24 - and that is the reason and as you can
13:26 - see here
13:27 - it is c out so here is one of the things
13:30 - that we are using from std namespace
13:32 - and again there are many more things
13:35 - than just
13:36 - these three that we are using so that is
13:38 - the reason why
13:39 - it is not recommended to do this line of
13:42 - code here
13:43 - and also you may see people use this
13:45 - line of code here in tutorials i am
13:47 - personally using it because it takes
13:50 - much less space here i'm taking three
13:52 - lines of code and here i'm including
13:54 - basically everything that i will need in
13:56 - just one line of code
13:58 - but again it is very important for you
14:00 - to understand and know
14:01 - that this here is not recommended and
14:04 - then this here is
14:05 - recommended way to use your c out and
14:08 - line and string and c
14:09 - in and so on so i hope that now you
14:12 - understand what are namespaces and why
14:15 - some people
14:16 - on the internet say that using namespace
14:18 - std
14:19 - is a bad practice so if you like this
14:22 - video
14:22 - please give it a thumbs up for the
14:24 - youtube algorithm because that helps me
14:26 - to reach a lot
14:27 - more people because then youtube will
14:29 - recommend this video to other people as
14:31 - well
14:32 - and then also if you want to watch more
14:34 - videos like this one subscribe to my
14:36 - channel and if you want to get a
14:37 - notification every time that i publish a
14:39 - new video
14:40 - click the bell icon so thank you very
14:43 - much for watching and i am going to see
14:45 - you in my next video
14:47 - bye