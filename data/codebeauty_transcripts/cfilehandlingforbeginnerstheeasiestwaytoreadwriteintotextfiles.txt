00:00 - hi everyone and welcome to my channel in
00:02 - this video i want to teach you how you
00:04 - can read and write from text files using
00:07 - c plus programming language and it is
00:10 - very easy as you will see so once i show
00:13 - you the code and explain everything you
00:15 - will never forget it uh but before i
00:17 - start i would like to take a brief
00:19 - moment to introduce c plus plus builder
00:23 - it is full featured c plus plus ide that
00:25 - helps you create apps fast for all major
00:28 - platforms while writing less code it
00:31 - connects natively to almost 20 databases
00:33 - like mariadb oracle sql server postgres
00:37 - and many more the key value is c plus
00:39 - builders framework which are powerful
00:42 - libraries that do more than other c plus
00:44 - tools this includes the award-winning
00:47 - vcl framework for high-performance
00:49 - native windows apps and fire monkey
00:52 - framework for cross-platform uis
00:54 - smart developers write better code
00:56 - faster and you can start for free using
00:59 - the link in the description
01:02 - so how do you write and read from text
01:04 - files using c plus programming language
01:07 - well the first step is that we need to
01:09 - include a library that is going to help
01:11 - us to work with files and that library
01:14 - is called f stream so the same way that
01:18 - we use iostream so that we are able to
01:20 - input an output to our console so to
01:23 - read and write from our console we are
01:26 - going to use f stream library so that we
01:28 - are able to read and write from files so
01:31 - that is going to be the first step i am
01:34 - going to say
01:35 - include
01:36 - f
01:37 - stream like this and
01:41 - okay and inside this f stream library
01:44 - there are a few data types so the data
01:47 - type that we are going to use is also
01:49 - called f stream so what i want to do is
01:51 - i want to declare a variable of type f
01:55 - stream so i will say
01:57 - f stream
01:59 - and i am going to call that variable my
02:02 - file
02:06 - okay
02:07 - so now i'm going to use this my file
02:10 - variable so that i can open files close
02:13 - files read and write from those files so
02:17 - the first thing that i want to show you
02:19 - is how you can write into a text file
02:22 - so in order to be able to write into a
02:25 - text file the first thing that you need
02:26 - to do is you need to open that file so
02:29 - how do you do that well you say my file
02:33 - dot
02:34 - open
02:34 - like this
02:36 - and this open function receives two
02:40 - parameters two arguments the first one
02:42 - is going to be the name of your file and
02:45 - then the second one is going to be the
02:46 - mode in which that file is going to be
02:48 - open so is that going to be a write mode
02:51 - or read mode or append mode or something
02:53 - else
02:54 - so as i said the first parameter is
02:57 - going to be the name of your file
02:59 - so i'm going to use these quotation
03:02 - marks and here i'm going to say that the
03:04 - name will be salvina dot
03:07 - txt like this and make sure to use this
03:11 - dot txt extension because we want to
03:14 - write into text files
03:16 - so this is going to be the first
03:18 - parameter this is the name of the file
03:20 - that will be opened and if this file
03:22 - does not exist it is going to be created
03:26 - okay
03:27 - and then the second parameter as i
03:29 - already said is going to be the mode so
03:31 - what i want to do is i want to teach you
03:33 - how you can write into a text file so
03:35 - the mode is going to be right so you use
03:39 - ios and then you put two column signs
03:43 - and here you are going to say that you
03:45 - want to output from this program here
03:48 - into this file here so the mode is going
03:50 - to be
03:51 - out
03:52 - like this so that is the mode that we
03:56 - use in order to write into a text file
03:59 - so
04:00 - this here is a write mode
04:03 - okay
04:04 - so how do you write into this file here
04:08 - well the first step is you need to make
04:10 - sure that this stream has been opened
04:13 - successfully so you need to make sure
04:15 - that you have successfully opened this
04:18 - file here and for that you are going to
04:21 - say
04:22 - if
04:23 - my file
04:25 - is open
04:26 - like this okay so if
04:30 - this file here has been opened what you
04:32 - can do is you can write into that file
04:35 - so how do you write into a file well the
04:38 - approach is very similar to the approach
04:40 - of writing into a console in order to
04:42 - write into a console you use see out
04:45 - command and then you use these two
04:48 - redirection signs and then you write the
04:51 - text that you want to output to your
04:53 - console so let's say for example
04:56 - hello
04:57 - and let's add a new line like this so
05:01 - this is the approach that you use to
05:03 - output text to a console now the
05:06 - approach to output text to a file is
05:08 - very similar so instead of c out object
05:11 - you use this object here so you just say
05:15 - my file and then these two redirection
05:17 - signs and then you put the text that you
05:20 - want to output to your file
05:23 - okay so let's add another line let's say
05:25 - for example
05:27 - my file
05:29 - these two redirection signs and then
05:31 - let's say
05:32 - this is
05:34 - second
05:35 - oh this is second line
05:38 - okay so with this we have successfully
05:41 - outputted two lines of text to our file
05:44 - and what we should do now is we should
05:46 - close that file so after you have
05:49 - finished writing or reading from your
05:51 - file you should close that file and
05:54 - again it is very easy to do that you
05:56 - just say my file dot
05:59 - close
06:00 - like this
06:01 - okay so those are all the steps that you
06:04 - need in order to write into a file so
06:07 - first you open that file you specify the
06:10 - name and the mode in which that file is
06:12 - going to be opened and then you check if
06:14 - that file has been opened successfully
06:16 - and then you can write into that file
06:19 - and after you have finished writing you
06:21 - are going to close that file okay so one
06:25 - thing that i want to show you now is
06:27 - right click on this cpp read write file
06:30 - so right click on your project
06:33 - and then select this option here open
06:36 - folder in file explorer
06:39 - so after i have done that
06:41 - this project is going to be opened in my
06:43 - file explorer and here we have all of
06:46 - the files of this project here now what
06:49 - should happen after i run this program
06:51 - is that a file called
06:53 - saldena.txt should be created and it
06:56 - should contain this text here so let's
07:00 - check that i am going to run this
07:02 - program
07:04 - okay and as you can see there is nothing
07:06 - inside our console because we have not
07:08 - interacted with our console at all we
07:10 - have just interacted with a file so i am
07:13 - going to press enter in order to close
07:15 - this console
07:16 - and if i right click
07:18 - on this project and then open folder in
07:21 - file explorer you are going to see this
07:24 - file called saudina and it is a text
07:27 - document so if i open that file
07:30 - as you can see inside that file there
07:33 - are two lines of text hello and then
07:35 - this is second line which means that we
07:38 - have successfully
07:40 - outputted
07:41 - this text here into a file called
07:43 - salvina.txt
07:45 - so that is how you write into a text
07:47 - file using c plus plus but what is going
07:51 - to happen if you want during the
07:53 - execution of your program to append
07:55 - something more so to append some other
07:58 - text to this file here so
08:02 - i'm going to copy all of this code and
08:05 - then paste it here and what i want to do
08:07 - is i want to say hey please open this
08:10 - file again so that i can write into that
08:13 - file
08:14 - and check if that file has been opened
08:16 - and then what i want to write what i
08:17 - want to append into that file is hello
08:21 - to and then nothing else i just want to
08:23 - say hello to and after i have appended
08:26 - that i just want to close that file so
08:28 - what do you expect to happen after i run
08:31 - this program here so if i run it
08:34 - again there will be nothing in our
08:35 - console i'm just going to close it
08:38 - okay
08:38 - and if i open this in file explorer and
08:43 - if i open this file what is going to be
08:45 - inside this file write me in the comment
08:47 - section
08:49 - so
08:50 - as you can see
08:52 - here we only have hello to which means
08:55 - that
08:56 - okay which means that all of this text
08:59 - here has been overridden so only this
09:02 - text here is present inside our
09:05 - salina.txt file that is because every
09:08 - time that you use this output mode you
09:12 - are going to override that file so if
09:15 - you want to append new information to
09:17 - the information that is already present
09:19 - inside your file you are going to use a
09:22 - mode called append so you are going to
09:25 - say ios and then
09:27 - app and that is append mode
09:32 - like this so
09:34 - this code here says please open a file
09:37 - called salina.txt and i want to append
09:40 - some new information to that file so
09:43 - make sure that it has successfully been
09:45 - opened and then append
09:46 - this text here so hello to and then
09:50 - close that file so if i run this program
09:55 - okay
09:56 - and then i open it in file explorer
10:00 - and then i double click on this
10:01 - saldena.txt
10:04 - as you can see here we have hello this
10:07 - is second line and then hello to
10:10 - which means that we have successfully
10:13 - appended this text to already existing
10:16 - information inside this file here so
10:19 - that is how you
10:21 - write into your file and then append
10:24 - into your file and then the third thing
10:26 - that i want to show you is how you can
10:28 - read from a file
10:30 - so let's delete all of this code here
10:32 - because i don't need it
10:34 - and now i'm going to show you how you
10:36 - can read from a file so the first step
10:39 - again is to open a file in a read mode
10:42 - so i'm going to say my file dot open
10:46 - and i'm going to open a file called
10:50 - salvina.txt
10:51 - and the mode is going to be i want to
10:54 - input from this file here into my
10:57 - program so that is going to be read mode
10:59 - so you use ios and then to column size
11:03 - and then in
11:05 - like this
11:06 - and that is going to be a read mode so
11:09 - please input from this file here into
11:13 - this program here
11:15 - okay so after you have opened this file
11:18 - make sure that it has been opened
11:20 - successfully so if
11:22 - my file is
11:24 - open
11:25 - what you can do is then you can read
11:29 - from this file inside these curly
11:32 - brackets here
11:34 - so how are we going to write out the
11:36 - text from this file here
11:38 - well i am going to use a while loop to
11:41 - access every single line of text of this
11:46 - file here so the approach is going to be
11:48 - the following i'm going to access the
11:49 - first line of text and i'm going to
11:52 - store that line into a string variable
11:55 - and then i will write out that variable
11:57 - and then i'm going to access the second
11:59 - line of text again store it into a
12:02 - string variable and write out that
12:04 - variable and i'm going to do that until
12:06 - i come to the last line of text of this
12:09 - file here so for that we are going to
12:11 - use while loop if you are not familiar
12:13 - with while loop i am going to link that
12:15 - video here and in the description as
12:17 - well so make sure to watch that video
12:20 - so as i said
12:22 - the first thing that we will need is
12:23 - going to be a variable in which we will
12:25 - store that line of text so that is going
12:28 - to be a string variable let's say
12:31 - string
12:33 - line
12:34 - like this and make sure to include
12:36 - string library if it is not recognized
12:39 - so make sure to say
12:41 - include
12:43 - string like this
12:45 - okay
12:46 - so here we are going to store a line of
12:49 - text from this file here and then in
12:51 - order to be able to access to every
12:53 - single line of text we are going to use
12:55 - while loop so i will say
12:58 - while
13:00 - okay
13:01 - and here inside this condition what i
13:03 - want to do is i want to use a function
13:06 - from string library which is called get
13:09 - line
13:10 - so i will say get line
13:14 - okay and this function here receives two
13:17 - parameters the first parameter is going
13:20 - to be this object here so my file
13:24 - and then the second parameter will be
13:27 - this variable here so line variable now
13:31 - what this function here does is that it
13:34 - reads from this file here so it reads a
13:37 - line of text and then it stores that
13:39 - line into this variable here and it is
13:42 - going to do that for every single line
13:45 - of text inside this file here and then
13:48 - when it comes to the last line of this
13:50 - file here there will be no more lines
13:52 - there will be no more text to read so at
13:55 - that moment this while loop is going to
13:59 - end
14:00 - okay and then one very important thing
14:02 - is that
14:03 - if you want to use this getline function
14:06 - you need to include a string library
14:09 - okay so after we have successfully read
14:13 - a line of text from this file here we
14:16 - are going to write out that line to our
14:18 - console so i'm going to say c out
14:23 - line and let's add end line like this
14:27 - okay so now i'm going to read every
14:30 - single line of text from this file here
14:33 - using this while loop and then after i
14:37 - have successfully read every single line
14:39 - what i need to do again is close this
14:42 - file here so i am going to say at the
14:45 - end after my while loop finishes
14:48 - my file dot
14:50 - close
14:51 - like this
14:52 - okay and by doing this we should be able
14:55 - to see everything that is inside this
14:57 - file here we should be able to see that
14:59 - in our console so if i run this program
15:04 - let's see as you can see it says hello
15:07 - this is second line and then hello to
15:10 - okay so if i add manually um a text to
15:14 - this saldena.txt file
15:17 - again if i open it
15:19 - and if i add some text manually so if i
15:22 - say for example this is
15:25 - fourth line and then if i say
15:28 - bye bye
15:30 - like this and if i save that make sure
15:32 - to save these changes
15:34 - and close this file and i'm going to
15:36 - close this as well and if i run my
15:39 - program we should be able to see the
15:41 - text that we just added as well so
15:45 - let's see and as you can see indeed it
15:47 - says this is fourth line and then bye
15:49 - bye
15:50 - okay so that is how you read a text from
15:54 - a file in c plus
15:56 - since you always ask me to give you a
15:58 - task that you can use to practice on
16:00 - your own in this video i decided to give
16:03 - you two different tasks so the first
16:06 - task is going to be related to my video
16:08 - about ascii table i am going to link
16:10 - that video here and also in the
16:12 - description and in that video i
16:14 - explained how you can use ascii table in
16:17 - order to cipher every single letter of
16:21 - english alphabet into a number now what
16:25 - i want you to do is i want you to
16:26 - combine the knowledge from that video
16:29 - and this video so that you write your
16:31 - own story or a diary or a secret and
16:35 - then you cipher that text and you write
16:38 - it in a file so whoever decides to open
16:40 - that file manually he's just going to
16:42 - see a bunch of numbers and he's not
16:45 - going to understand anything but
16:48 - you are going to create a program which
16:49 - is going to read from that file decipher
16:52 - those numbers back into letters and then
16:55 - write that text to your console so that
16:58 - you are able to read that story or
17:01 - secret or your diary or whatever you
17:03 - want to store
17:04 - into that file so that is going to be
17:06 - your first task and if you manage to
17:09 - solve this problem put your code in the
17:11 - comment section so that i can see it and
17:13 - that other people can see it as well
17:16 - the second task is a little bit more
17:18 - complex and in order to solve it you
17:20 - will need to learn and know about
17:22 - structures so it is related to my video
17:24 - about structures which i will link here
17:27 - and also in the description so after you
17:30 - watch that video at the end there is a
17:32 - task to build a quiz application now
17:36 - what i want you to do is i want you to
17:38 - use those instructions that i have given
17:40 - in that video in order to build a quiz
17:43 - application but instead of hard coding
17:46 - all of the questions and answers in your
17:48 - c plus application i want you to read
17:52 - those questions and answers from a file
17:55 - so that is going to be your second task
17:58 - and if you manage to solve this task
18:00 - again put your code in the comment
18:02 - section so that i can read it and then
18:04 - other people can see it as well so i
18:06 - wish you good luck with solving these
18:08 - two tasks and it is probably not going
18:10 - to be easy but
18:12 - you should learn and you should practice
18:14 - your logic and your problem solving
18:15 - skills so there you go two tasks to do
18:18 - that and again you are probably going to
18:21 - make many mistakes and the process of
18:22 - learning is not going to be very easy
18:24 - but that is completely normal so if you
18:27 - manage to solve one or both tasks please
18:30 - put your code in the comment section so
18:32 - that i can check it out and that other
18:34 - people can see it as well
18:36 - and if you enjoyed this video please
18:38 - give it a thumbs up because it helps me
18:40 - a lot to reach more people and help them
18:42 - to learn programming and then if you
18:44 - have any questions or if you have any
18:46 - videos that you would like to see in the
18:47 - future um let me know in the comments
18:50 - section and i'm going to make those
18:51 - videos in the future
18:53 - and if you want to see more videos like
18:55 - this one subscribe to my channel and
18:56 - click the bell icon because then you are
18:59 - going to get a notification from me
19:00 - every time that i publish a new video so
19:03 - thank you very much for watching and i
19:05 - am going to see you with some other
19:06 - video bye