00:00 - hi guys and welcome to my channnel in
00:02 - this video we are going to talk about
00:04 - array data structure and I will teach
00:06 - you how to work with arrays in C the
00:09 - best way to learn programming is through
00:11 - practical examples so in this video we
00:14 - are going to build an application
00:16 - together and that application is going
00:18 - to help us to track the calories that we
00:20 - are eating so that we can calculate if
00:23 - we are gaining weight or losing weight
00:26 - this is beginner friendly video so even
00:28 - if you don't know anything about aray
00:30 - this video is for you so let's go
00:32 - straight to the point and let's start
00:34 - building our application the first thing
00:36 - that you need to understand is the
00:38 - difference between a regular simple
00:41 - variable and an array so inside a
00:44 - regular normal variable you can store
00:46 - just one value but inside an array you
00:49 - can store multiple values so if you
00:52 - create an array of two elements you can
00:54 - store two values if you create an array
00:56 - of five elements you can store five
00:59 - values inside that array so my idea is
01:02 - to create an array that can hold seven
01:05 - decimal numbers so one number for each
01:08 - day of the week and inside each element
01:11 - of that array we are going to enter how
01:14 - many calories we have eaten for that day
01:17 - so let's see how we can do that so if I
01:19 - say here decimal weekly
01:25 - calories here I have created just one
01:28 - regular normal variable of type decimal
01:31 - and inside it I can store just one value
01:34 - but if you want to create an array what
01:36 - you need to do is here after the type
01:39 - you need to put these square brackets
01:42 - and by doing this what we have done is
01:44 - we have created an array of decimal
01:47 - numbers called weekly calories so inside
01:51 - this array we can put multiple values
01:53 - but all of those values need to be of
01:56 - this type here so all of them need to be
01:59 - decimal number numbers they can also be
02:01 - integers because our computer our
02:03 - compiler knows how to convert integer
02:06 - numbers into decimal numbers for example
02:08 - five is the same as 5.0 so that is going
02:12 - to be okay but what will not be okay is
02:15 - to put characters strings or some other
02:19 - types inside this array here so only
02:22 - decimal numbers so now the question is
02:25 - how can you put elements into this array
02:28 - here there are different ways to do that
02:30 - there are different ways to initialize
02:32 - this array and in this video I'm going
02:34 - to show you three most important and
02:36 - three most common ways to do that now
02:39 - before we go any further if you like my
02:41 - teaching style and if you like learning
02:43 - from my YouTube videos then you can
02:46 - definitely learn a lot more from my
02:48 - practical programming course you can
02:50 - find it on this site here code Beauty
02:53 - academy.com so what is the difference
02:55 - between my YouTube videos and my
02:57 - practical programming course the
02:59 - difference is that in my practical
03:01 - programming course in code Beauty
03:02 - Academy you will get everything that you
03:05 - need in order to learn programming and
03:07 - start a successful career as a software
03:09 - developer as soon as possible so we are
03:12 - going to work on real projects you will
03:15 - get all of the video lessons tasks
03:17 - exercises code and my personal
03:20 - mentorship and help so that you can get
03:23 - your first job as a software developer
03:25 - in just a few months this is only for
03:28 - people who are serious about learning
03:29 - programming and who really want to
03:31 - invest their time now in order to learn
03:33 - programming so that they can later see
03:36 - the benefits of their work a lot of
03:38 - students who used to watch my YouTube
03:39 - videos and then they decided to join the
03:41 - academy they were able to find their
03:44 - first job in just three or four months
03:46 - and you can also be one of them if
03:48 - you're willing to work hard and in case
03:50 - that you start the course but you don't
03:52 - like it for any reason just send an
03:55 - email in the first seven days and you
03:57 - will get all of your money back no
03:59 - questions asked so instead of coming up
04:01 - with excuses use the discount code that
04:03 - I will leave in the description and
04:05 - learn programming because I promise you
04:08 - it is the best thing that you can do for
04:10 - your future so let's continue with the
04:13 - video and let's talk about different
04:15 - ways to initialize this array so as we
04:19 - said inside an array we can put multiple
04:22 - values so now the question is how can we
04:24 - do that well you can initialize this
04:27 - array like this you use these curly
04:30 - brackets and then inside these curly
04:32 - brackets you will specify all of the
04:35 - values for each element of the array now
04:38 - this array is called weekly calories so
04:41 - my idea is to have seven elements so one
04:44 - for each day of the week and in those
04:47 - elements we will enter how many calories
04:50 - we have eaten for each day of the week
04:52 - so let's say that on Monday we started
04:55 - tracking calories and how much we eat so
04:57 - we consumed 25 00 calories according to
05:01 - plan according to our diet and our needs
05:04 - and then Tuesday was the same again and
05:07 - then let's say that on Wednesday was
05:09 - someone's birthday so we ate a bit more
05:12 - so let's say for example
05:15 - 285 okay and then Thursday we are back
05:18 - on track let's say
05:20 - 2550 okay and then Friday was maybe
05:23 - night out we had a dinner out so let's
05:25 - say
05:27 - 3050 okay and then Saturday was good and
05:32 - Sunday was cheat day so let's say 3 1 0
05:35 - 0 so this here is our calorie
05:39 - consumption for the week so each element
05:41 - of this array represents how many
05:44 - calories we have eaten that day and this
05:48 - is one way in order to initialize the
05:51 - array so you use these curly brackets in
05:54 - order to say that you will initialize
05:56 - the array and then you specify all of
05:59 - the ele elements of the array but you
06:01 - need to separate them with this comma
06:04 - sign and this array here has 1 2 3 four
06:07 - five six seven elements so each day is
06:11 - one Element and each element represents
06:14 - how many calories we have eaten in that
06:17 - day so this is one way to initialize
06:20 - your array and something important that
06:23 - I said is that all of these elements of
06:25 - the array need to be decimal numbers or
06:29 - in integer numbers because your computer
06:31 - knows how to convert integer number into
06:33 - decimal number but what you cannot do is
06:37 - for example you cannot have here a
06:39 - string because as you can see
06:40 - immediately you get this red squiggly
06:43 - which says hey this is string and I
06:45 - don't know how to convert it to decimal
06:48 - so once more they all need to be decimal
06:51 - numbers now something that I would like
06:53 - to change here is the following here we
06:56 - are hardcoding the values for each
06:59 - element of the array but what we want to
07:02 - do is we want to be able to ask our user
07:05 - hey how many calories have you eaten in
07:07 - the first day how many have you eaten
07:09 - for the second day third day and so on
07:12 - so that would be another way second way
07:15 - to initialize this array and in order to
07:18 - be able to do that we need to access
07:21 - each element of this array individually
07:25 - and set the value for that element so
07:28 - now the question is how can we do that
07:30 - so in order to put the values that our
07:32 - user enters inside each one of these
07:35 - elements of the array we need to be able
07:38 - to access them and we access these
07:41 - elements with the help of their index so
07:45 - what does that mean well each one of
07:48 - these elements of the array has its own
07:51 - index and those indexes start from zero
07:55 - which means that this first element has
07:57 - the index of zero and then the second
08:00 - element has the index of one and then
08:02 - third element has the index two and then
08:05 - three 4 five and six which means that an
08:10 - array that has seven elements its
08:14 - indexes go from zero to six and that is
08:18 - why it is often said that developers
08:20 - start counting from zero because the
08:23 - indexation of the array starts from zero
08:26 - as well so now that we know that each
08:28 - element of the array has its own index
08:32 - the question is how can we use that
08:34 - index in order to access a specific
08:36 - element so for example how can we access
08:39 - this first element of the array well we
08:42 - can do that by using the name of the
08:45 - array and then the index so here I will
08:47 - say weekly calories and then inside
08:51 - these squared brackets I will put the
08:53 - index so by doing this I am accessing
08:58 - the element of of this array that has
09:01 - index zero so that means the first
09:05 - element and now I can work with this
09:07 - first element I can read its value I can
09:10 - put some value inside it or I can
09:12 - perform some calculation and so on and
09:15 - what we want to do is inside this first
09:18 - element of the array we want to put the
09:20 - value that our user types into the
09:23 - console so I will simply say this first
09:26 - element of the array will be equal to
09:30 - console do readline like this now
09:34 - because this input here will be in
09:37 - string format what I need to do is I
09:40 - need to convert it into decimal so I
09:42 - will simply say decimal do parse and
09:46 - then whatever the user has typed into
09:49 - the console I will simply parse or
09:52 - convert that into decimal number and
09:54 - then I will store that decimal number as
09:57 - the first element of my array so let's
10:00 - add one more thing before we start the
10:02 - application so here I will say
10:05 - console. WR line so I will write a
10:07 - message for my user I will say
10:10 - calories for day one okay so after I
10:16 - write this message I will expect my user
10:19 - to enter the calories for the first day
10:22 - so let's start the app okay and it says
10:25 - calories for day one and if I enter for
10:28 - example 25 60 and I press enter this
10:33 - value here this 2560 will be stored as
10:37 - the value for the first day as the value
10:40 - for the first element of our array so
10:43 - now if we want to enter the values for
10:46 - these remaining six element we can copy
10:49 - this code adjust it and that way we can
10:52 - enter values for all of the elements of
10:55 - our array so let's do that let's copy
10:58 - this code so that we can enter the value
11:00 - for the second element so I will say
11:03 - calories for day two and then here I
11:06 - will say weekly calories of this element
11:09 - here so the element that has index one
11:12 - that is second element okay and then
11:15 - let's do this for the remaining five
11:17 - days of the week so 1 2 3 4 five so I
11:23 - will adjust now this output so day three
11:27 - day four five
11:29 - six and 7 and then here we are going
11:32 - from zero so 0 1 2 and then 3 four five
11:39 - and six so by doing this we will be able
11:43 - to enter manually the values for each
11:47 - element of our array and if I start the
11:51 - app it will ask us to enter values for
11:54 - all seven elements so let's say 250 0 0
11:57 - and then 260 0
12:02 - 3,000 okay and then day seven like this
12:07 - so here we have initialized our entire
12:10 - array and we have entered the values for
12:12 - all seven elements now since this array
12:16 - was already initialized with the values
12:18 - that we have hardcoded ourselves what
12:22 - this code here does is that it will
12:24 - simply overwrite these values with the
12:28 - values that are us user enters so this
12:31 - line here is going to overwrite this
12:34 - value here and then this line here is
12:36 - going to overwrite this value here and
12:39 - so on so now the question is is this
12:42 - part here even necessary because as you
12:44 - can see it is going to be overwritten
12:47 - and the answer is no this part here is
12:50 - not necessary so we don't have to
12:53 - specify the values of the elements of
12:55 - the array when we create the array what
12:58 - we can do instead is we can simply Say
13:01 - Hey I want to create an array and it is
13:04 - going to be a new array of decimal
13:07 - numbers and here inside these squared
13:11 - brackets we need to put how many
13:14 - elements the array will have so here I
13:16 - will say seven so I have created my
13:20 - array and I have said that I want new
13:23 - array of decimal numbers that will have
13:25 - seven elements but I'm still not
13:28 - providing the the values for elements
13:30 - because I can do that part later okay so
13:35 - this is another way to initialize your
13:37 - array so you create it here and then
13:41 - later you initialize it with the values
13:43 - that your user enters okay so I will
13:46 - delete this part we don't need it
13:49 - anymore and this is the code that
13:51 - remains so once more this is how you can
13:54 - access an element of the array by using
13:57 - the name of the array and then the index
13:59 - of that specific element and by doing
14:03 - that you can access any element of your
14:05 - array now there is a problem with this
14:09 - code here it works it is okay but it is
14:12 - very redundant which means that we are
14:15 - repeating a lot of code unnecessarily
14:18 - here we have an array of seven elements
14:22 - and we have already written a lot of
14:24 - code and we have repeated a lot of code
14:26 - as well so imagine what would happen if
14:29 - the array had 100 elements or 1,000 or
14:33 - even 1 million elements that's not a lot
14:35 - in the world of programming in that case
14:38 - we would have to repeat these two lines
14:41 - of code 1 million times and in that case
14:45 - our code would be completely
14:47 - unmanageable so now you might ask Salina
14:51 - is there a better way to do this is
14:53 - there a shorter and easier way to access
14:57 - all of the elements of the array and the
14:59 - answer is yes yes there is so what we
15:02 - can do is we can use a loop in order to
15:05 - iterate through all of the elements of
15:08 - our array and that way we can access
15:11 - each individual element and do whatever
15:14 - we want with that element so if you're
15:17 - not familiar with loops I am going to
15:19 - link a video here and also in the
15:21 - description and you can watch that video
15:23 - in order to learn everything that you
15:25 - need to know about loops in programming
15:27 - so let's see how we can do this with the
15:29 - help of four loop I will say four and
15:34 - then I will say in I is equal to zero so
15:38 - I will start at the first element of my
15:41 - array that is the element with index
15:43 - zero and then I will say I is less than
15:47 - or equal to six because that is the
15:50 - index of the last element so an array
15:53 - that has seven elements the indexes for
15:56 - that array start at zero and then the
15:59 - last element has the index of six so
16:01 - from zero to six and then in each
16:05 - iteration I will increment that index by
16:08 - one so what I will do inside this for
16:12 - Loop is these two lines of code so I
16:16 - will say that I'm accessing the element
16:19 - with index of I so that is the element
16:23 - of the current iteration in the first
16:25 - iteration I is going to be zero so that
16:27 - will be the first element in the second
16:29 - iteration I is going to be one so that
16:31 - will be the second element and so on so
16:34 - in this line I'm going to enter the
16:37 - value for that element of the array and
16:39 - then I also want to adjust this message
16:42 - so I will say calories for day and then
16:45 - here I will simply print the value of I
16:49 - and in order to be able to use I like
16:51 - this inside these curly brackets I need
16:53 - to add this dollar symbol before my
16:56 - string so what this dollar sign and then
16:59 - these curly brackets allow me to do is
17:02 - to use this I as a regular variable
17:06 - inside my string and we have already
17:08 - talked about this in my video about all
17:11 - string Methods and everything that you
17:13 - need to know about strings so if you're
17:15 - not familiar with that I'm going to link
17:17 - a video here and also in the description
17:19 - and in that video you will learn
17:21 - everything that you need to know about
17:23 - working with strings so once more if you
17:26 - not familiar with this syntax make sure
17:28 - to watch that video and everything will
17:30 - be clear so I'm using this for Loop in
17:33 - order to iterate through all of the
17:35 - elements of my array from the element
17:38 - that has the index zero to the element
17:40 - that has the index of six and for each
17:44 - element I will print this message so
17:47 - please enter calories for day and then
17:49 - the index of the current element of the
17:51 - current day and then here I am simply
17:55 - reading the input that the user types
17:57 - into the console and then I'm converting
18:00 - that into decimal and storing it as the
18:02 - value for that current element and this
18:06 - code here does the same thing as all of
18:09 - this code here so these three lines of
18:12 - code do the same thing as these how many
18:15 - 14 lines of code so what I will do is I
18:18 - will comment out this code and now when
18:21 - I start the application we should see
18:24 - the same thing that we had when we
18:27 - started this code here so let's start
18:29 - the app okay so calories for Day Zero
18:33 - let's say 2560 and then 260 0 and then
18:37 - entering the values for the remaining
18:40 - element and then day five
18:43 - 2650 and day 63 0 0 0 okay so here I
18:49 - have entered the values for all of the
18:52 - elements of my array but the code is
18:56 - much shorter and easier to understand
18:58 - and also easier to maintain and we can
19:01 - use this code in order to iterate all of
19:04 - the elements of our array regardless of
19:07 - how many elements the array has and the
19:10 - only thing that we need to change is the
19:11 - index of the last element because the
19:14 - first element always has the index of
19:16 - zero so then if our array for example
19:19 - has 10 elements the last index will be
19:22 - nine if it has 100 elements the last
19:25 - index will be 99 and then in our case
19:28 - the array has seven elements so the last
19:31 - element has the index of six so in a
19:34 - very simple way we can iterate an array
19:37 - that has two elements as well as an
19:40 - array that has two million elements just
19:43 - with a simple short code that looks like
19:46 - this now one small thing that I would
19:48 - like to change here is this output that
19:51 - is shown to the user so here it says
19:54 - calories for day Zero and then calories
19:56 - for day 1 2 3 4 5 and six so here we are
20:01 - simply printing the index of the element
20:04 - and for us developers this makes sense
20:07 - so Day Zero is the first element but for
20:10 - the end user for someone who doesn't
20:12 - know about indexing and about
20:14 - programming what he expects to see is
20:18 - the first element to say calories for
20:20 - day one and then second element to say
20:22 - calories for day two and so on so what I
20:26 - will do is I will adjust this part here
20:30 - so instead of printing the index I will
20:33 - just increment it by one in order to
20:36 - show to our user what is natural to him
20:39 - so now if I start the application as you
20:42 - can see it says calories for day one and
20:45 - then calories for day two and so on so
20:48 - in the background we are still using our
20:51 - indexes and here we are using the index
20:54 - of the element to access that element
20:57 - but for our user we are just adjusting
21:00 - the output a little bit so that it is
21:02 - easier for him to understand and more
21:05 - natural to him because normal people
21:07 - still count from one and not from zero
21:10 - like us programmers do okay so now that
21:13 - we have learned how we can initialize
21:16 - our array how we can access each element
21:18 - of the array using the name of the array
21:21 - and then the index of the element and
21:24 - also now that we have learned how to
21:26 - iterate through all of the elements of
21:28 - our array using for Loop and to set the
21:32 - value to enter the value for each
21:34 - element of the array now let's see what
21:37 - we can do with this information so let's
21:41 - delete this code because we don't need
21:44 - it anymore and now what I want to do is
21:48 - I want to perform some calculations on
21:50 - the data that our user enters so for
21:53 - example let's calculate how many
21:55 - calories our user consumes on average
21:59 - and in order to do that we need to sum
22:02 - all of the individual days and then
22:05 - divide that by seven so let's stop the
22:08 - application and here I will create a
22:11 - variable of type decimal and I will call
22:14 - it for example
22:16 - total okay initially total is going to
22:19 - be zero so then what I will do is
22:23 - whenever the user enters value for a
22:26 - specific day so whenever he enters
22:28 - scaries for that day I will simply add
22:31 - that to our total so I will say total
22:35 - plus equals to the calories that our
22:38 - user has entered for that day like this
22:42 - so after this for Loop is executed we
22:46 - will have the values for each day so how
22:50 - many calories he has consumed for each
22:52 - day and then also inside this variable
22:55 - we will have the total number of color
22:58 - that he has consumed so then what I can
23:01 - do is I can find average by dividing
23:04 - this total by the number of days which
23:07 - is seven so let's calculate that here
23:10 - after our for Loop let's create a
23:13 - variable of type decimal I will call it
23:17 - average or let's say average caloric
23:19 - intake so that it is easier to
23:22 - understand so average Cal
23:25 - intake like this so how do we calculate
23:29 - the average well it's quite easy we
23:33 - simply divide the total by the number of
23:35 - days so total divided by seven and that
23:39 - is going to give us average caloric
23:41 - intake per day so let's print this
23:44 - average as a message I will say console.
23:47 - right line and here let's say your
23:51 - average caloric intake is and here I
23:56 - want to print this value so I will put
23:59 - it inside curly brackets and in order to
24:03 - be able to use it like this I need to
24:05 - add this dollar sign okay and then at
24:08 - the end I need semicolon so let's start
24:10 - the
24:12 - application okay so calories for day one
24:16 - let's say 25 0 and then 260 0
24:22 - 2750
24:26 - okay and then let's say for last day we
24:29 - had really big cheat day your average
24:31 - caloric intake is
24:34 - 275 so now the question is what can we
24:36 - do with this information well if we know
24:40 - how many calories we are consuming on
24:42 - average and we also know how many
24:45 - calories we need then we can calculate
24:48 - if we are gaining weight or if we are
24:51 - losing weight now you can calculate how
24:53 - many calories you need on many sites on
24:56 - the internet because that really depends
24:58 - depends on many things like your gender
25:00 - your age your height how active you are
25:03 - so if you work out or not and so on so
25:06 - you can find different sites on the
25:08 - internet that are going to tell you how
25:11 - many calories you need to consume for me
25:14 - that is 25 or 2600 so I will use that in
25:18 - our program but you can adjust it and
25:20 - use number that is appropriate for you
25:23 - so that you can get information that is
25:26 - relevant for you as well and if you
25:28 - don't want to calculate this right now
25:30 - but you still want to know how many
25:32 - calories you need um well it depends if
25:35 - you are a girl you probably need around
25:37 - 2,000 calories maybe a little less or a
25:40 - little more depending on how tall you
25:42 - are and how active you are and if you
25:45 - are a boy if you are a man uh then you
25:47 - probably need around maybe 2800 or 3,000
25:51 - calories again depending uh on how tall
25:54 - you are and how active you are and if
25:56 - you are a really big man who work works
25:58 - out a lot then you already know how many
26:01 - calories you need I don't have to tell
26:02 - you so now let's write some code that is
26:05 - going to tell us if we are gaining
26:07 - weight or losing weight based on the
26:10 - data that our user enters and how many
26:13 - calories we consume on average and also
26:16 - based on that information of how many
26:19 - calories you really need in order to
26:21 - maintain your weight so let's create a
26:25 - variable here for example it will be of
26:27 - type de
26:29 - and let's call it recommended caloric
26:32 - intake so this is how many calories we
26:35 - need to consume per day in order to
26:37 - maintain our weight so for me that is
26:40 - let's say
26:41 - 2500 calories so now we can use this
26:45 - value here and this value here in order
26:48 - to calculate and in order to determine
26:51 - if we are gaining weight or losing
26:54 - weight so let's make a prediction let's
26:57 - say that we are interested to know what
26:58 - will happen in a year from now so
27:01 - 365 days from now if we continue
27:05 - consuming this many calories on average
27:08 - and then this here is our recommended
27:10 - caloric intake so what I will do is I
27:13 - will subtract these two values I will
27:15 - say average caloric intake minus
27:18 - recommended caloric intake and that will
27:20 - tell me uh on a daily basis if I'm
27:23 - consuming more or less and how much and
27:27 - then I will multiply that by
27:30 - 365 days so let's say decimal and let's
27:36 - create a variable called annual caloric
27:43 - balance like this average minus
27:47 - recommended so I will put this inside
27:50 - parentheses and this here is going to
27:53 - tell me on a daily basis how many more
27:56 - or less calories I'm consuming but one
27:59 - day is not going to change anything but
28:01 - if I continue doing that for
28:05 - 365 days which means for a year then
28:08 - inside this variable here we will see
28:11 - how many more or less calories we have
28:14 - consumed for that entire year so now
28:17 - that I have that information and I know
28:20 - for example that on average each day I
28:22 - have consumed 100 more calories than I
28:25 - need on a daily basis that there is
28:28 - nothing it's not going to change
28:30 - anything but for an entire year if you
28:33 - continue doing that that is going to be
28:37 - 100 multiplied by
28:39 - 365 days so that is going to be
28:44 - 36,500 calories more than you should
28:46 - have consumed so now the question is how
28:49 - can we calculate how many kilograms this
28:53 - is so how much weight we have either
28:56 - gained or lost based on this annual
28:59 - caloric balance well it's simple you
29:02 - just need to know that each kilogram of
29:05 - weight is equivalent to approximately
29:08 - 7,000 calories so if you want to lose 1
29:11 - kilogram you need to lose 7,000 calories
29:14 - and if you want to gain 1 kilogram then
29:16 - you need to eat 7,000 calories more so
29:20 - let's calculate that here let's say
29:24 - decimal
29:26 - weight change
29:29 - in kg okay so weight change in kilograms
29:35 - will be equal to annual caloric balance
29:38 - divided by
29:40 - 7,000 like this so inside this variable
29:44 - we will have the information about how
29:46 - many kilograms we have either lost or
29:49 - gained so let's print that information
29:51 - to our user I will say here this is your
29:57 - way weit change in one
30:02 - year okay and then let's print this
30:07 - value like this or even better this will
30:12 - be your weight change in one year if you
30:15 - continue doing what you are doing
30:17 - currently so let's start the program and
30:19 - let's see what the data
30:22 - says okay so calories for day one let's
30:25 - say 2600 and then let's say 2
30:29 - 45 and then third day I was okay again I
30:34 - consumed as much as I needed and then
30:37 - day six and day seven let's say that I
30:39 - consumed a little bit more so
30:43 - 270 again and now when I press enter we
30:46 - will see what the data says it says this
30:50 - will be your weight change in one year
30:52 - and then
30:53 - 3.35 so in one year if I continue do
30:58 - doing this I will gain
31:00 - 3.3 kg and the reason for that is
31:04 - because on average I'm consuming more
31:06 - calories than I need and in one year I
31:09 - will see the results of that work I will
31:12 - see the consequences so now the question
31:14 - is following let's say that we are
31:16 - creating a plan for ourselves because we
31:18 - want to lose some weight and we want to
31:20 - use our program in order to see if our
31:23 - plan is going to work and how well it is
31:26 - going to work so I will start this
31:29 - program again and now what I want to do
31:33 - is I want to enter my plan so let's say
31:36 - that I will lower my calories just a
31:38 - little bit so I will eat for example
31:41 - 2300 calories instead of 2500 which is
31:45 - how much I need so for five days of the
31:49 - week I will be on that diet so 2300
31:53 - calories for the first 5 days of the
31:56 - week and then on day six and on day
31:58 - seven let's say that I will eat
32:02 - 2500 and then 2600 here okay so these
32:07 - two are like a little cheat day so now
32:10 - when I press enter I will see the result
32:13 - of this plan so this plan says that if I
32:16 - do this if I follow this plan in one
32:20 - year I will lose 6.7 kg which is great
32:25 - because here I'm not starving myself I'm
32:28 - just decreasing calories a little bit
32:30 - but slowly and surely I am going towards
32:34 - my goal which is to lose around 7 kilg
32:38 - in a year and if you want to lose even
32:40 - more weight if you want to make a plan
32:42 - that is even more let's say strict then
32:44 - you can use this program in order to
32:46 - calculate and predict what is going to
32:49 - happen by the way I don't recommend you
32:52 - uh to lose weight in an unhealthy way
32:54 - here I'm just teaching you how to
32:55 - program and how to write code I not
32:58 - teaching you how to lose weight by the
33:00 - way if you want to see some of my
33:02 - workouts and if you want to see how I
33:04 - maintain all of this muscle then you can
33:06 - follow me on Instagram because I publish
33:08 - a lot of my workouts there a lot of
33:10 - stories from the gym uh so that I can
33:12 - also motivate you uh to work out as well
33:15 - this is my handle on Instagram and I
33:17 - will also leave it in the description so
33:19 - feel free to add me I would be happy to
33:22 - see you there so as I said we can now
33:25 - adjust this program to give us different
33:27 - kind of information that we need so for
33:30 - example here is your recommended caloric
33:33 - intake let's say that you are a male who
33:36 - needs 3,000 calories per day okay and
33:40 - then you want to see what is going to
33:42 - happen in 3 months so here you are going
33:45 - to calculate average caloric intake
33:48 - minus recommended caloric intake
33:50 - multiplied by 90 days that is 3 months
33:53 - and let's also change the name of this
33:55 - variable let's say three three month
33:59 - call
34:01 - balance like this so you will simply
34:04 - divide this three month caloric balance
34:07 - by 7,000 and it is going to tell you
34:11 - what is going to happen in 90 days so
34:14 - let's start the program and let's say
34:15 - that you made a plan and your plan is to
34:18 - eat 500 calories less each day for the
34:22 - next 3 months so you are wondering what
34:25 - is going to happen so your day daily
34:28 - recommended daily intake is 3,000
34:29 - calories so what you are going to do is
34:31 - you will eat
34:33 - 2500 each day for the next 3 months and
34:36 - you want to see what will happen so 2500
34:39 - and then
34:42 - again
34:44 - okay and as you can see in just 3 months
34:47 - you will lose 6.5 kg and you can also
34:51 - adjust this output here so because we
34:54 - have changed our code so that now it
34:56 - works with 90 days you can also change
34:58 - this part here so this will be your
35:00 - weight change in three months but this
35:03 - here is the result and this here is what
35:06 - the data says so you have learned how to
35:09 - do this in code how to use programming
35:12 - and arrays in order to perform all of
35:14 - these calculations and make a perfect
35:16 - plan for yourself in order to either
35:18 - lose weight or gain weight and that part
35:21 - is easy programming is the easy part the
35:25 - hard part will be to actually follow
35:28 - this plan but that is not up to me I
35:31 - cannot teach you how to do that what I
35:32 - can do is I can teach you programming
35:35 - and if you want to learn practical
35:37 - programming if you want to learn
35:38 - programming through practical examples
35:41 - and gain the experience that you need in
35:43 - order to get your first job and start a
35:46 - successful career as a software
35:48 - developer then you can join code Beauty
35:51 - Academy you can join my practical
35:52 - programming course the link is going to
35:54 - be in the description I am waiting for
35:56 - you there and through the entire process
35:59 - I'm going to be your mentor and I will
36:01 - help you to achieve all of your goals
36:04 - and to do that in the shortest amount of
36:07 - time possible as I said there is a
36:10 - special discount that you can get as my
36:12 - YouTube viewer I will leave a coupon
36:14 - code in the description so definitely
36:16 - use this opportunity and finally learn
36:20 - programming with my help so let's do a
36:22 - quick summary of what we have learned in
36:24 - this video we have learned about arrays
36:27 - and and we have learned that an array is
36:29 - a collection of data so inside an array
36:31 - you can store one or more elements those
36:35 - elements need to be of the same type so
36:38 - that is the type of the array we have
36:41 - also learned how we can initialize an
36:43 - array in three different ways how we can
36:45 - initialize an array when we first create
36:47 - it using those curly brackets and
36:49 - separating elements with comma size
36:53 - second way is how we can access each
36:55 - individual element of the array and then
36:57 - Third Way was iterating through our
37:00 - array with the help of for Loop like we
37:03 - are doing here and then accessing each
37:06 - individual element and then doing
37:07 - whatever we want with that element here
37:10 - I am simply putting the value into the
37:13 - element and then here I'm using it in
37:15 - order to perform calculation that I need
37:18 - arrays are used very often in
37:20 - programming and they are super useful
37:22 - because they are very very fast now
37:25 - arrays have certain advantages and
37:28 - disadvantages when compared to some
37:30 - other data structures but I will leave
37:32 - that part for some other video because
37:34 - this video is already getting too long
37:37 - so if you're interested in this topic
37:39 - and if you want to learn more about
37:40 - arrays and you want to learn more about
37:42 - arrays versus other data structures or
37:45 - other data structures in general let me
37:48 - know in the comment section and I will
37:50 - create those videos and before I end
37:53 - this video there is one more very
37:56 - important thing that I want to show you
37:57 - and that is the most common error that
38:01 - happens when working with arrays
38:04 - especially to beginners and that would
38:06 - be index out of range or index out of
38:10 - bounds error so how can you get that
38:14 - error well you can get it if you are
38:16 - trying to access an element of the array
38:19 - that does not exist and that can happen
38:22 - in the following situation for example
38:25 - here if I said that I want to iterate
38:27 - from 0 to 7 instead of six let's see
38:32 - what will happen so let's start the app
38:35 - and here I will enter any values it
38:37 - doesn't
38:39 - matter okay and here it is asking me for
38:42 - calories for day8 this is already
38:45 - suspicious but if I enter a number here
38:49 - as you can see I get this exception it
38:52 - says index was outside the bounds of the
38:55 - array so this exception is called index
38:59 - out of range or index out of bounds and
39:03 - it indicates that we are trying to
39:05 - access the element of our array which
39:08 - does not exist why it does not exist
39:12 - well because here we are saying that our
39:15 - array has seven elements so that would
39:18 - be indexes from 0 to six and here we are
39:23 - clearly not doing that because here we
39:25 - are going from zero to seven and that is
39:29 - the reason why we are experiencing this
39:33 - error so this is very common error that
39:36 - happens to a lot of beginners especially
39:38 - when you first start learning about
39:40 - arrays so it is very important that you
39:44 - remember that indexes for an array start
39:47 - from zero which means that the last
39:50 - element will not have index of seven
39:53 - here it will have index of six so if
39:56 - size of the array is seven the last
39:58 - element is six and then if size is 100
40:02 - the last index is 99 and so on so in
40:05 - order to avoid this error you need to
40:08 - remember this and be very very careful
40:11 - so now that you have learned about
40:13 - arrays in programming you can use this
40:15 - knowledge in order to create different
40:17 - applications for example here we have
40:20 - created an application that is going to
40:21 - help us to lose or gain weight but what
40:25 - I want to do is I want to to give you
40:27 - also a task that you can do for homework
40:31 - in order to practice on your own and in
40:33 - order to create another useful
40:35 - application that will help you with
40:37 - saving money so I want you to create the
40:41 - following application as homework I want
40:43 - you to create an array where you are
40:45 - going to enter how much money you are
40:48 - saving each day for let's say 10 days
40:53 - and then I want you to calculate based
40:55 - on that how much money you are saving on
40:58 - average daily so once you have that
41:00 - information you can calculate how much
41:02 - money you will have saved in what's say
41:05 - one year so
41:07 - 365 days so I want to give that task to
41:12 - you in order to solve on your own and
41:13 - practice and if you manage to solve it
41:16 - you can paste the code Down Below in the
41:18 - comments so that I can review it and so
41:20 - that other people can also see it and
41:22 - then give you some tips advice upgrade
41:25 - that code and so on so thank you very
41:27 - much for watching if you have any
41:29 - questions or any topics that you would
41:31 - like to see in the future on this
41:33 - channel let me know in the comment
41:35 - section and then if you enjoyed this
41:37 - video give it a big thumbs up so that I
41:39 - know to create more videos like this one
41:42 - in the future uh so once more thank you
41:45 - very much for watching and I will see
41:47 - you in some other video bye-bye