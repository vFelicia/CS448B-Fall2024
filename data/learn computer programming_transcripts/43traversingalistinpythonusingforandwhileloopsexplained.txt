00:00 - [Music]
00:08 - foreign
00:14 - in this class we are going to see driver
00:17 - single list
00:20 - we can Traverse the list using both the
00:23 - loops
00:24 - for loop as well as
00:26 - while loop let us check how to use for
00:29 - Loop first
00:30 - let me have an example list here called
00:33 - num
00:34 - hope you all know how to write the for
00:36 - Loop
00:39 - here
00:42 - num is the sequence so in this case I
00:47 - becomes each individual element every
00:50 - time it runs
00:52 - so first it becomes 10 then 20 like that
00:56 - it keeps going until the last element
01:01 - so if the sequence elements are not
01:04 - available then the for Loop will
01:06 - terminate
01:08 - for example statement I have here
01:10 - something to add with each element as it
01:13 - is integer I give print I Plus 5.
01:16 - so it takes 10 and then it adds with 5
01:20 - and Princess 50. similar way it will do
01:23 - for all the elements
01:25 - we can also write in other way
01:29 - for
01:30 - I in range we can give
01:32 - if we are giving range then it can be
01:36 - from 0 to the last index so if we are
01:40 - taking the length of the list
01:42 - then it will be 1 more than the last
01:46 - Index right by default it starts from 0
01:49 - and then insert
01:51 - 1 lesser than the length that is the
01:54 - last index in this case I is
01:58 - the integer number which starts from 0
02:00 - that is index number the index number
02:03 - also starts from 0 in a list instead of
02:07 - IE we will be writing number of I so
02:11 - print number of I Plus 5. so let us
02:14 - check how the output is going to be so
02:17 - in the first for loop I is directly 10
02:19 - we add with that in the second for Loop
02:23 - num of I which is num of 0 which is 10.
02:28 - so 10 plus 5 so both the places it
02:30 - happens the same thing the output will
02:33 - be 15. similar way when the for Loop
02:36 - runs for the second time I becomes 20
02:40 - in the second loop I of 1 it becomes 20.
02:44 - so now again it adds with 5 so it will
02:47 - be 25 similar way when it runs for third
02:52 - time I becomes 30 or num of 2 becomes
02:57 - the third term which is 30 so it again
03:01 - adds 5 1
03:03 - gives the answer as 35 similar way it
03:07 - will be doing for each and every element
03:09 - when there is no element
03:12 - the for Loop stops in the second one the
03:15 - index number of 60 is 5 the length of
03:19 - this is 6 6 means it runs 0 to 5 so
03:24 - exactly it stops at 60.
03:28 - let us check how the while loop will be
03:32 - working
03:33 - here there is no Loop variable so before
03:36 - mentioning the loop
03:39 - I will initiate one variable which is
03:42 - having 0 as its value in the beginning
03:46 - num which is the list
03:49 - and then while
03:51 - i n d is lesser than line of number
03:55 - I will be increasing this index number
03:59 - every time by 1. so
04:02 - when it reaches the
04:05 - line of num it will stop so that is the
04:08 - reason I have given lesser than
04:12 - now I will have to write the statement
04:14 - whatever I need to do
04:16 - that is the statement which is in the
04:19 - second for loop I can give here num of I
04:22 - and D Plus 5. IND has to be increased
04:26 - after this execution so every time the
04:30 - while loop runs
04:31 - index is being increased
04:34 - let us execute in the python so we are
04:37 - very clear about this
04:39 - let me create a list
04:41 - l i is equal to
04:45 - 2 4 6 8
04:47 - 10 I will give a for Loop for I
04:51 - in L I see directly
04:54 - I will become each element here print
04:59 - I Plus
05:01 - 100 let me save and execute this
05:06 - you could see the output
05:09 - now in case
05:11 - I have range
05:14 - instead I becomes each element it takes
05:18 - the range value
05:20 - now I am giving here
05:29 - in this case l i of I
05:37 - it is not mandatory that we always you
05:40 - length of
05:42 - the list if we need to read the partial
05:46 - list we can also give the
05:48 - start and stop accordingly whatever is
05:52 - required if I want to read only the
05:54 - second half of the list I can also do
05:58 - this
05:59 - Lynn now
06:01 - l i divided by 2
06:04 - see now divided by 2 will give the float
06:08 - number
06:09 - in case if it is
06:11 - 5 then becomes 2.5 so we will do the
06:14 - floor division then up to the end of the
06:18 - list right so then again we can yield
06:20 - enough
06:22 - l i
06:23 - so whatever the length it will be
06:25 - reading the second half
06:30 - see there our one element will be extra
06:32 - if it is odd number of elements
06:35 - if it is even number of elements it is
06:37 - going to be exactly half
06:39 - let us check
06:41 - so it is exactly half
06:45 - if we need to read alternate elements
06:47 - then we can go with
06:52 - 0 comma
06:54 - line of l i comma the step S2 so it
06:58 - reads first third fifth like that it
07:00 - will be reading
07:01 - let us check
07:04 - so it is our choice however we need to
07:06 - Traverse
07:07 - in the list we can give the loop
07:10 - let us execute while loop so for that we
07:13 - need to create the variable
07:15 - we take you here is IND
07:19 - ividually it is 0.
07:22 - so instead of this for Loop I will be
07:25 - writing while I and D lesser than
07:28 - now here like now we will be increasing
07:31 - the IND by 1 every time the while loop
07:34 - runs
07:35 - so I and D plus equal to 1.
07:40 - the same program in white Loop
07:45 - here
07:46 - instead of I we supposed to give IND
07:50 - that was the error let us do now
07:54 - [Music]
07:55 - so you could see the output here
07:58 - [Music]
07:59 - hope traversing a list is clear for you
08:03 - in future I will be giving plenty of
08:05 - programs that is after completing the
08:08 - sequences
08:10 - so please keep watching my channel keep
08:13 - sharing too to your friends
08:19 - thank you