00:00 - welcome students until now we were using
00:04 - main method which is a standard method
00:07 - so that was public static fly me up
00:14 - string aft arguments now we will see the
00:18 - definition of each one so let us first
00:21 - consider this public so public is an
00:25 - access specifier this can be either
00:29 - public or private our protocol these
00:38 - specifiers determine the type of access
00:42 - to the function that means these
00:46 - keywords decides whether a method in a
00:49 - class can be used are invoked by another
00:53 - method in another class our subclass we
00:58 - can write public or private our
01:03 - prototype even without this also we can
01:05 - create a method when we don't give any
01:09 - of these three keywords then it is
01:11 - called default access specified the next
01:15 - keyword is static so static is a
01:19 - modifier other modifiers are final
01:23 - native transient and volatile method
01:28 - becomes a static method when we use a
01:31 - keyword called static even we can
01:35 - declare variables also using static
01:39 - keyword then it becomes static variable
01:42 - static methods also called class methods
01:46 - because these methods can be called
01:50 - without creating an object of that class
01:53 - that we will see later of this session
01:56 - so the next keyword is wild so public
02:00 - static void so what is a return type
02:03 - when it is not returning any value in
02:07 - struct this void we can use any of the
02:10 - datatype
02:12 - two data types so maybe inter-are maybe
02:15 - double so when we have these keywords
02:18 - then that it is going to return any data
02:23 - value which is mentioned that for that
02:25 - we have to specify return at the end
02:29 - after next comes main main is the name
02:38 - of the method then off so now here it
02:45 - isn't the third prototype if you need we
02:47 - can also add public from liquid so it
02:52 - becomes public static void main of
02:54 - instead of this main we can have any
02:57 - name so that it is an identifier for
03:00 - example I say calc so here tank is the
03:05 - name of this method which is going to
03:08 - return a double value and then it is a
03:11 - static method it is having access
03:13 - piss-filled as public next let us write
03:20 - the course what we need scanner will be
03:26 - JS for the new kind of system bottom and
03:34 - then let us say some variables before
03:39 - this into X Y and then double this
03:51 - difference difference this is to
03:56 - calculate the difference between two
03:58 - numbers so let us figure the printing
04:05 - statement to the out inclined off
04:13 - I guess number let us create a method
04:25 - but X is equal to all these a duck next
04:31 - point off and I will now protecting
04:37 - string back out back x ID here is a
04:42 - mistake it sister hold back print kind
04:49 - of health and no y is equal to obj dot
05:06 - next winter so now we are going to see
05:12 - the difference depth is equal to X minus
05:18 - y so let us print this system out print
05:35 - difference is equal to this so here you
05:42 - are we have given the output using the
05:44 - printing statement solar does not have
05:46 - double instead of this let us have wild
05:51 - so when it is not returning anything so
05:53 - we will let see further how it is going
05:56 - to written so let us compare this no
05:59 - syntax error we are running this wide
06:03 - calc off so enter a number so difference
06:11 - do you got it in double so let us clear
06:14 - this close and then now I will teach you
06:18 - how it is going to return so let us
06:21 - consider double here so we know that
06:26 - difference is a double rate so in stock
06:29 - this statement we will write return so
06:33 - what it is going to return is diff let
06:41 - us compare this no syntax errors so now
06:44 - the output will be in a dialog box so
06:49 - enter a number so you can see that a
06:55 - dialog box appears which returned here
06:58 - as double data type then 8000 point 0 as
07:03 - a difference let us close this so now
07:08 - let me explain about the theorem a test
07:11 - which we give in the method so let us
07:13 - not have this and then we are not taking
07:17 - any input from the user using scanner
07:20 - class so let us not have all this and
07:24 - then you one get us not have please so
07:28 - now we can see very simple program
07:30 - public static double Kalka the input
07:33 - from the parameter so even the x and y
07:36 - is also not required here so we are
07:38 - going to MU the parameter here so when
07:41 - we give here the variable with its data
07:44 - type we are going to give so for how it
07:47 - space X so this is one variable and then
07:52 - when we knew the variable in the
07:54 - parameter list we have to again give the
07:58 - variable though it is same I again we
08:01 - have to say ink and then but but this
08:04 - will not work with X comma Y if you do
08:06 - it will not work so this is the way to
08:09 - give X and one so what so we have given
08:14 - here two variables that is as a
08:18 - parameter so let us consider this
08:21 - program and then it is also returning
08:24 - which is a double type then the working
08:27 - is calculating the difference close
08:32 - to compile so now you can see a dialog
08:40 - box where it is asking in text and
08:43 - employed let us give here what is X and
08:47 - then Y is okay so it has returned a
08:56 - double data type which is minus four
08:59 - five three seven five eight point zero
09:01 - so this is the way of taking input using
09:04 - parameter and then getting the return in
09:12 - case if we have some other data type for
09:14 - example we say bullet boolean so just we
09:21 - are taking any age just let us consider
09:24 - as late so age it is taking and then
09:27 - what it is going to return means it must
09:29 - return boolean data type so let us have
09:33 - pool in yeah just for an example and
09:40 - then if Y is greater than or equal to 60
09:49 - here we are checking whether given is
09:52 - seen yes it is are not so let us not
09:56 - have this so if it is greater than a we
10:00 - say m is important too is M is going to
10:09 - be false so what it is going to return
10:15 - here is yeah see now if the condition is
10:21 - true you're miss going to be true
10:24 - otherwise it is going to be false what
10:27 - it is going to return yam so young here
10:29 - is a boolean type so we are having
10:31 - boolean type as a returns here let us
10:36 - compile this no syntax error right click
10:42 - so we say different so it is not a
10:49 - senior citizen so it says boolean false
10:53 - so now let us see how this static works
10:57 - it does not have this study here and
11:00 - then let us not even have publish here
11:06 - so now if we compile this see there is
11:10 - no syntax errors
11:11 - let us run when static is not that we
11:14 - need an object so it will ask for you to
11:18 - create an object so oh it is asking
11:22 - create object so name of the app the
11:25 - default by default sir it has come just
11:28 - with you okay so we can see here a red
11:30 - box which is an object right click on
11:33 - this now you run this boolean calc
11:36 - intier it asks for the value so 85 if I
11:41 - you it returns true it is a senior
11:44 - citizen so one more thing I wanted to
11:50 - tell you are not the same time we can
11:52 - print and as well as we can take a
11:56 - return from the that how we can use some
12:00 - de system duck over in China so we are
12:09 - every citizen okay this let it be in
12:18 - true when it is truly we say inside so
12:21 - let it be here
12:22 - and then when there is more than one
12:25 - statement under if so we must open the
12:29 - block of statement so let us have this
12:36 - so else we are going to say false
12:45 - [Applause]
12:47 - so we are not not a senior citizen
12:55 - however it is returning the value okay
12:59 - so he has putting statement X also there
13:01 - and then returning values also complain
13:14 - we have not terminated so so now there
13:18 - is no syntax errors
13:20 - let us run this program so you say 45
13:35 - okay see you are not a senior citizen it
13:39 - is printed here and as well as we will
13:41 - see that it will turn see it is they get
13:46 - close one more thing I will tell you if
13:52 - this printing statement comes at last
13:57 - anything you after the return statement
14:01 - that is this for example on giving so
14:05 - after that is a return statement so that
14:08 - I told already return statement will be
14:10 - a last statement in line with that if we
14:12 - give this waterbugs let us see compile
14:16 - so it says untreatable statement so we
14:19 - have to do any printing segment if we
14:23 - need that should be before the return
14:26 - string Thank You students I hope you
14:29 - learnt the user differing the method and
14:32 - then all the keywords why do we use in
14:35 - the method prototype let us see in the
14:38 - next class thank you