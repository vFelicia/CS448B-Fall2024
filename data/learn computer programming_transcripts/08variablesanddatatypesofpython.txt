00:00 - hello everyone in this video class we
00:02 - are going to learn about
00:03 - data types generally let us see what is
00:05 - data types in computer programming
00:07 - language
00:08 - data type indicates that which type of
00:11 - data a variable can hold
00:13 - for example if we need to have a details
00:16 - of a person or a thing
00:18 - and then we may have different types of
00:20 - data
00:21 - in this example name breed
00:24 - date of birth age height
00:28 - weight all these are there these are
00:30 - names of the
00:31 - variable the right side the values are
00:34 - available
00:35 - if you see the values are having the
00:37 - different
00:38 - types for example name has a string type
00:41 - which is collection of characters
00:43 - similarly the second one also and then
00:45 - date of birth is having the date
00:47 - age is having a whole number which is a
00:50 - integer we call it and the height which
00:53 - is 2.2
00:54 - is having a decimal place we call it as
00:57 - float
00:58 - or double similarly even weight to store
01:01 - the value in a variable
01:02 - in most of the computer language the
01:05 - variable to be declared
01:07 - with the particular data type and then
01:09 - the data
01:10 - is been assigned to that variable then
01:14 - the type of data should be same as
01:17 - it is declared it will not accept any
01:19 - other type of data
01:21 - other than which is indicated
01:24 - see here in x is given x is the variable
01:28 - and then int says it is integer type
01:31 - this is the declaration then when we
01:32 - need to assign a value then we say the
01:34 - value
01:36 - using assignment operator that is x
01:38 - equal to
01:39 - 15 this can also be done like
01:42 - in x is equal to 15 directly declaring
01:46 - and also initializing it
01:47 - but if you see python language we don't
01:50 - need to
01:51 - declare a variable of which type it is
01:54 - directly we need to say the variable
01:57 - name
01:58 - and then we assign the value like this x
02:00 - is equal to 15.
02:02 - by seeing the value python automatically
02:04 - understands
02:05 - which type of data it is so it becomes
02:08 - very simple and dynamic
02:09 - and then one more thing in the other
02:11 - languages
02:12 - if x is already been declared with the
02:15 - integer type
02:17 - we cannot give any other type say x is
02:20 - equal to 25.5 is given
02:22 - that is not accepted even x equal to
02:25 - show it is given that is a string type
02:27 - it is not accepted
02:28 - but in python again the same variable
02:32 - you are using for some other data to
02:33 - store
02:34 - it overwrites there it is accepted
02:38 - it can be again changed as some other
02:41 - value for it
02:42 - so when we are handling the variables we
02:44 - should be very careful
02:46 - that variable we are not repeating for
02:48 - any other purpose we need to remember
02:50 - all these this is actually a drawback in
02:53 - python
02:54 - different languages allow different
02:55 - types of data
02:57 - let us see what are all the data types
02:59 - available in python language
03:00 - it has been categorized and the data
03:03 - type for that category is given and then
03:05 - also example has been
03:06 - indicated first we are having numeric
03:09 - type there are four types
03:12 - in it says integer that means the whole
03:14 - number without any decimal places
03:17 - for example fifteen thousand five
03:19 - hundred and sixty six
03:20 - uh seventy seven all these the second
03:23 - one is the boolean type
03:25 - here we are having two values one is
03:28 - true
03:28 - which indicates one and then false which
03:31 - indicates zero
03:32 - next one we are having float which says
03:36 - it can have the decimal places for
03:38 - example
03:39 - two point zero five thirty two point one
03:41 - eight two sixty five point zero zero
03:44 - zero two the fourth one we are having
03:46 - the complex number
03:47 - we already learned in the literals it
03:49 - will have
03:51 - the real part imaginary part with
03:54 - imaginary number which is j
03:57 - next we are having sequence in python
04:01 - one is string type which is collection
04:03 - of characters we know
04:04 - always these are indicated inside the
04:07 - single quote or double quote
04:10 - next one we are having the list
04:14 - it is a collection of data it can be
04:17 - with different basic data types the
04:20 - first example
04:21 - is similar data type but the second
04:23 - example you can see a b
04:25 - car d and the 10 is also included there
04:28 - different basic data types
04:30 - can be there in a single list next one
04:32 - we are having tuple
04:34 - this is always indicated in the ordinary
04:37 - parenthesis
04:38 - here also we can have different types of
04:40 - basic data
04:41 - i forgot to say list always given inside
04:44 - the square bracket
04:47 - now in sequence the last one we are
04:50 - having here is set
04:52 - this is always indicated inside the
04:55 - curly bracket
04:56 - all these we will see in different
04:58 - videos
04:59 - in future so just you remember
05:02 - these are the data types now next we are
05:05 - having mapping
05:06 - which is called as dictionary here each
05:09 - value is
05:10 - indicated with a key which is unique for
05:12 - example
05:13 - age is a key here and then colon is
05:17 - given
05:17 - 16 is the value the values can be
05:21 - same or repeatedly there it may have
05:24 - different data types like list tuple
05:26 - or string whatever it is but you need to
05:29 - remember
05:30 - that the key always should be unique
05:34 - known type here this is the keyword node
05:38 - which indicates it is empty still no
05:41 - value is been assigned
05:42 - to that particular variable you need to
05:45 - remember
05:46 - only known here is the keyword and all
05:49 - other data types are not keywords
05:52 - now i will demonstrate through python
05:54 - ideally
05:55 - and now i am having x is equal to 25
05:59 - if i want to know the type of variable x
06:02 - i can give like this
06:03 - type type and then open the parenthesis
06:07 - give the variable's name that is x now
06:10 - it will show the
06:11 - variables data type class in this the
06:15 - data type of x about that class we will
06:18 - discuss
06:18 - later just you know about this
06:22 - similarly i am telling a is equal to
06:26 - 8.50 now let us take
06:29 - type of a
06:32 - so it is showing us float now same
06:34 - variable only i can change the value now
06:37 - with some other type c now i give here
06:40 - as keyboard
06:43 - now if i see type of a it is accepted
06:46 - and already changed to keyboard as a
06:48 - string now
06:49 - now let us have one complex type z is
06:52 - equal to
06:53 - 5 plus 6 j so type of
06:57 - z is complex now see here you can get
07:01 - the value
07:02 - of the real part and the value of
07:05 - imaginary part
07:06 - if you want to get like that we can give
07:08 - the variable name
07:10 - dot real and then we will be getting the
07:12 - value of
07:13 - real part to get the value of imaginary
07:16 - part we can give
07:17 - z dot imag so you can see
07:20 - 6.0 now i give m is equal to true
07:27 - type of m is
07:31 - boolean now let us see an example for
07:33 - list i say
07:34 - lst as a variable for list and then i
07:38 - give equal to
07:40 - we always use a square bracket to give
07:43 - the sequence
07:44 - of list i open it and then simply i say
07:47 - one two three
07:49 - and then close then if i give now type
07:52 - of
07:54 - lste it will be showing us it is a list
07:57 - we can also have different uh basic data
08:00 - type inside one single list i said
08:03 - let us try that also lst is equal to
08:06 - 0 comma 0.1
08:09 - comma 2 comma 3 see float also i have
08:13 - given that
08:13 - 0.1 is the decimal number and then 2 and
08:16 - 3 are
08:18 - integer type now i give even a
08:21 - string type i say mouse so
08:24 - it is also accepted again i say type of
08:27 - lst is
08:29 - a list next we are going to see tuple
08:34 - t is equal to ordinary parenthesis we
08:37 - use 50
08:38 - 100 200
08:42 - and then i give one 200.001
08:49 - so type of t
08:52 - is tuple and the set we are giving for
08:55 - example
08:56 - s i u s is equal to curly bracket video
08:59 - one two three then i close with curly
09:02 - bracket
09:04 - now type of yes if i give it
09:08 - similarly we have dictionary i give d
09:11 - is equal to again we are using curly
09:13 - bracket but now we will be
09:15 - using a key for each value
09:19 - to identify that value i give
09:22 - key as age i said you can have different
09:26 - basic data types there
09:28 - even a value can be a list here
09:31 - so i give 15
09:34 - 16 18 and then as a list i close
09:38 - as a dictionary close otherwise we can
09:40 - also give one more value
09:42 - with this comma i simply give here
09:45 - height
09:48 - colon and then again i open square
09:51 - bracket
09:53 - 6.5 6.2
09:56 - and then 5.8 then close the
09:59 - curly bracket to close the dictionary
10:03 - see now type of d
10:07 - if i give it will be showing us d i c if
10:10 - i want to say simply
10:12 - nothing is there in the variable but i
10:14 - need to declare a variable there
10:16 - c is equal to n o n e
10:20 - see if i give c nothing will come
10:24 - and then type of c
10:28 - known type it says if you want to print
10:30 - c
10:32 - says known that is nothing is there
10:35 - hope the concept is very clear now keep
10:38 - watching my channel
10:40 - to learn more thank you