00:04 - welcome back students today we are going
00:07 - to see input and output in Java program
00:12 - the use of the program is to get the
00:16 - output isn't it
00:18 - so if we want to get output then we have
00:21 - to give some input and then it processes
00:23 - and use us output the input which we
00:27 - give from maybe from the keyboard are
00:31 - may be taken from the file again the
00:35 - output may be on the screen or else may
00:40 - be stored in the file this input and
00:44 - output operations are done in Java using
00:48 - the concept of streams a stream is a
00:51 - sequence of data input and output
00:56 - functions of Java enabled by using the
01:00 - class called system so source of input
01:05 - is called
01:06 - an input stream and when it flows to
01:10 - your destination it is called
01:12 - output stream java dot io package
01:16 - contains all the classes required for
01:19 - input and output operations in Java
01:23 - program so when we are taking input we
01:27 - will import the package called Java dot
01:30 - IO when we say stream we can just
01:34 - imagine a channel by which sequence of
01:38 - data flows this data flow may be from
01:44 - any input source the source of input
01:49 - data is called input stream and the
01:52 - stream of output is called output stream
01:56 - when data flows out then it is referred
02:00 - as output stream there are many streams
02:04 - commonly we use these 3 streams that is
02:09 - system dot in system dot out and system
02:12 - dot the
02:14 - system dot in connects to the standard
02:19 - input device like keyboard and system
02:23 - dot out and system dot error are
02:26 - connected to the monitor which is the
02:29 - standard output device in this video we
02:32 - will see system routine and system dot
02:35 - out about the error that is called
02:37 - exception handling we will see in our
02:40 - next video
02:41 - this iostream is categorized into two
02:45 - categories one is with zeros and ones
02:48 - the other one is with characters so
02:53 - zeros and ones are called byte-oriented
02:56 - and other one is called
02:59 - character-oriented here the
03:02 - byte-oriented accepts byte by byte and
03:05 - known as data input stream and data
03:09 - output stream this byte-oriented is not
03:13 - suitable for text files are strings this
03:16 - character oriented stream in this stream
03:19 - a character encoding scheme is used
03:22 - inputs are read by character by
03:26 - character so this character over entered
03:29 - streams are referred as readers and
03:32 - writers the summary of byte oriented and
03:37 - character oriented is here
03:50 - first we are going to learn character
03:53 - oriented stream in character oriented
03:56 - stream two main classes are involved
04:00 - that is input stream reader and buffered
04:06 - reader input stream reader class accepts
04:10 - a stream of characters from the standard
04:13 - input device for that we have to create
04:16 - a object for it
04:18 - so we suppose to write input stream
04:22 - reader than one space the name of the
04:25 - object that is an identifier here I have
04:29 - given object is R is equal to a new is a
04:34 - keyword and then space input stream
04:39 - reader of system dot in then we
04:42 - terminate this after this we have to
04:45 - create object for even bufferedreader
04:49 - this is used to store the input in
04:53 - temporary memory that is in the RAM this
04:57 - will increase the speed of the program
05:00 - for that we have to write buffered
05:04 - reader space object BR that is the
05:08 - object name which I have given for this
05:11 - buffered reader class is equal to new
05:14 - buffered reader half so here the
05:19 - reference from the input stream reader
05:21 - so that is the name of the object of
05:25 - inputstreamreader is given as argument
05:28 - for buffer reader so this object is R is
05:34 - given inside the bracket of
05:36 - bufferedreader now we have to write the
05:40 - coding to take the input from the
05:43 - keyboard we write string variable name
05:48 - then equal to the object name which we
05:52 - used for buffered reader being you there
05:55 - and then dot read line up here not down
05:59 - L is capital
06:01 - and then we should not forget to prompt
06:05 - the user to give the input so we will
06:08 - you system dot out dot print line up so
06:12 - any sentence here to prompt the user let
06:16 - us create a program to take some input
06:20 - of string and also numerical values so
06:25 - first of all we have to import the Java
06:29 - dot IO class for that we write import
06:34 - Java dot IO dot star dot star means it
06:40 - indicates all the classes available
06:43 - inside io package class import Iowa so
06:54 - we write public static void main string
07:00 - off our events when we use Java dot IO
07:05 - we supposed to use throws IO exception
07:14 - this is for the error handling I will
07:18 - explain about this in my next video
07:21 - tutorial let me create some variable
07:28 - string for model then int price to take
07:41 - input first create object for
07:44 - inputstreamreader
07:46 - so input stream reader space I give is R
07:57 - as object name is equal to new input
08:04 - stream leader of system rutting then we
08:10 - terminate this the next we have to
08:17 - create object for bufferedreader
08:20 - so buffered reader B R is equal to new
08:31 - buffered leader of I R so here this is
08:43 - our is referred from the object of
08:47 - inputstreamreader
08:51 - then we are prompting the user
08:55 - so we will write system dot out dot
08:59 - print line of what pc model of your for
09:19 - so when i take a string one so name of
09:22 - the variable th underscore M is equal to
09:28 - BR dot read dry now now this will read
09:37 - the string input to take the integer
09:41 - input we will use wrapper class which we
09:45 - already learnt in the previous session
09:47 - now I give the prompt
10:01 - what is the price of your mobile so now
10:10 - price is the integer variable so we use
10:13 - wrapper class integer dot parse int off
10:22 - now the object which we used we r dot
10:29 - feed line up then one more bracket so we
10:36 - terminate this we already learnt the
10:40 - wrapper classes so according to that
10:42 - wrapper class we will give here if
10:44 - double means we will give double and
10:47 - then here also we will give double in
10:50 - case of long we will give long dot parse
10:53 - long off and then the object name dot
10:57 - read line up let us print the input what
11:01 - we got no so system dot out dot print
11:08 - line of U plus own model is the variable
11:20 - which everyone plus half price plus
11:34 - price
11:43 - so so you will it will print I'm sorry
11:49 - it will print you won the phone model is
11:53 - given by you half price the price you
11:58 - are given compiled this
12:01 - let us run this what is the model of
12:06 - your phone hi for a what is the price of
12:15 - your mobile 24,000 so you got the how to
12:20 - clear students I hope it is very clear
12:28 - how to use java dot io package and take
12:33 - input from the user
12:37 - Thank You students