00:01 - welcome back students today we will
00:04 - learn some array programs to print only
00:08 - even elements from an array to print
00:12 - some of even elements and add elements
00:14 - to print the count of even and odd
00:18 - elements to print smallest number and
00:23 - largest number from an array let us
00:27 - create a program print even import Java
00:44 - dot IO dot star class interval let me
01:14 - declare an array integer type name of
01:18 - array ARR half is equal to new in tough
01:23 - I will new size as 10
01:54 - prompt the user to take ten elements I
02:15 - will give a far loop in is equal to zero
02:22 - is less up then we can say a RR dot
02:27 - Flint then I plus plus so ARR of I is
02:40 - equal to integer dot pass in top BR dot
02:50 - feel enough then we terminate this so
02:53 - now we have taken input for that array
02:57 - so that is ten elements we have taken
02:59 - now let us give a line outside the loop
03:02 - saying following our even elements so
03:07 - system dot out dot print line now so now
03:25 - we have to check the elements one by one
03:30 - whether the element is even or not to
03:34 - access each element again we will give a
03:37 - far loop let us copy the same Farlow
03:45 - we already know how to find even numbers
03:49 - if the number is divisible by two that
03:53 - is without remainder then we say the
03:56 - number is even number so to get the
04:00 - remainder we will use percentage symbol
04:03 - that is modulus let us give that in the
04:06 - condition ARR of I modulus two equal to
04:17 - equal to zero so it divides by two and
04:21 - gets the remainder if remainder is zero
04:25 - then what we will do we will print the
04:28 - element so system dot out dot print line
04:34 - off this a a of sorry
04:38 - ARR of I tablet if you need the elements
04:46 - to be printed in the same line we can
04:48 - cancel this and then we can add 1 comma
04:52 - R space with this so I will add one
04:55 - space here so let us compile this no
04:59 - syntax error so you enter ten elements
05:06 - forty five three seven eighty four 96 12
05:15 - 15 17 21 18 so we can see here only
05:24 - given numbers our printer now program to
05:31 - get the sum of even number and sum of
05:34 - odd number so I will you some even
05:39 - called as a class name
05:53 - so before this I will import Java dot IO
06:01 - dot star rest of the code I will copy
06:08 - from the previous program so even we can
06:12 - copy from here to here we don't need
06:22 - this line let us delete this so after
06:27 - entering all the numbers we will again
06:30 - have a far low if it is even number we
06:35 - will add it to even some so for that we
06:39 - need a variable even for our sum we need
06:42 - a variable so let us give int sum of
06:46 - even equal to zero in Chevy then sum of
06:52 - art also zero initially now we have
06:59 - already checked whether it is even or
07:01 - not if it is even we will add with this
07:05 - sum of even so yes II equal to AC plus
07:12 - ar-ar-ar
07:13 - I otherwise we can also give plus equal
07:18 - to here plus equal to and then else
07:25 - otherwise sum of odd plus equal to a or
07:34 - our half right so then we close this
07:39 - further see if it is true that is even
07:45 - number then it will add with the sum of
07:47 - even otherwise it should be odd number
07:52 - automatically it will add with this
07:54 - variable so now we have to print the sum
07:59 - of even and some
08:01 - are
08:12 - some of even numbers from given array
08:23 - plus yes II so here are number so this
08:37 - will be yes so now we will close the
08:42 - method and then class just compile this
08:47 - no syntax error to check the right
08:50 - result I will give the sequence of
08:53 - number just I will you 1 2 3 only 1 2 3
08:58 - 4 5 6 7 8 9 and 10
09:04 - so even numbers total is 30 and odd
09:08 - numbers total is 25 you can check next
09:14 - we will learn counting number of even
09:19 - elements and number of odd elements so
09:23 - count even order you I will copy whole
09:32 - program from the previous program
09:46 - here instead of taking the sum of even
09:51 - numbers and sum of odd numbers just we
09:54 - are going to count so let us change the
09:58 - variable name count even number then
10:03 - count odd number so initially the count
10:07 - is zero for both so if this is true then
10:11 - what we will do we will just increase
10:13 - the count of even number c plus plus
10:17 - else what we will do we will increase
10:20 - the count of odd number co plus plus so
10:26 - now we are going to print number of even
10:38 - numbers of given array that is C oh
10:46 - sorry see e here number of odd numbers
10:55 - of given array that is C let us change
11:03 - the class name and you count compile
11:12 - this no syntax error
11:14 - let us run this any number let us give
11:19 - eleven fifteen eighteen twenty forty
11:24 - sixty five 7103 - 11 - 30 - let us count
11:38 - one two three four five six or odd
11:45 - numbers so remaining four will be even
11:49 - numbers now
11:53 - program to find the smallest and largest
11:57 - element of that array
12:09 - I will copy again the code from the
12:13 - previous one I will copy ant in this I
12:25 - will change the class name
12:33 - they are just smallest let us have
12:38 - double type of array so I will change
12:40 - this double again here also double so
12:48 - instead of counting here I will have the
12:52 - smallest element and the largest element
12:55 - so again I will change even the datatype
12:58 - of this smallest also will be smallest
13:00 - our largest also will be double type
13:02 - itself so double instead of C largest
13:06 - and then here smallest so we cannot
13:16 - initiate as 0 in case the user gives
13:19 - negative numbers so it cannot be 0 so I
13:24 - will take an element from array itself
13:27 - so let us take just first element itself
13:31 - this ARR of 0 that is index same like
13:38 - that smallest also let us take first
13:41 - elements itself
13:43 - ar-ar-ar 0 now I will give the condition
13:49 - to find the largest element of that
13:52 - array it takes all the element of that
13:55 - array that is ARR of I and then if it is
14:01 - greater than largest sometimes it is
14:08 - also possible to be same number so we
14:10 - will give greater than or equal to also
14:12 - so if this is true I will assign the
14:16 - element to the variable largest so
14:20 - largest is equal to a
14:23 - half I now I close the far look so now I
14:30 - will search for smallest one so again we
14:34 - will have the same look now we are going
14:42 - to find the smallest one so we will have
14:45 - lesser than or equal to smallest so if
14:55 - it is true the element will go to
14:58 - smallest now let us print the largest
15:08 - and smallest elements so I copy this
15:24 - largest element is plus not just so here
15:36 - smallest element is smallest let us
15:48 - close the with that cross the class
15:57 - compile this we have done a mistake here
16:02 - while typing the variable it should be
16:04 - capital L here not from the capital L
16:08 - let us check here you have given capital
16:12 - so here also should be capital so we
16:15 - should be very careful while writing
16:17 - this then okay so here we have given
16:24 - double but in the previous program it
16:26 - was integer so let us change this double
16:32 - here also double any other error let us
16:40 - compile and check no syntax error now so
16:48 - I entered 10 elements 31 point zero one
16:52 - minus sixty three point one two forty
16:57 - five thirty nine point four seven zero
17:03 - point two zero zero two eighty five
17:06 - point zero zero four five eleven point
17:12 - one one one one one thirty seven forty
17:18 - eight point two three point four so we
17:27 - can see here the largest number which I
17:31 - have given at the last the least number
17:34 - is minus sixty three point one two so it
17:36 - is right dear students I hope it was
17:44 - very clear to you how to do all these
17:46 - four programs this are only just ideas
17:50 - you can create your own programs keep
17:54 - watching my videos learn more thank you
17:58 - students