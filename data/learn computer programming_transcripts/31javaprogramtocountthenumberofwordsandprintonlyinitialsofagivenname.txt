00:02 - welcome back students today we are going
00:06 - to see how to do string programs so in
00:09 - that we will see count the number of
00:11 - words in a sentence and print the
00:13 - initial of the name to take the input
00:16 - let us import the package we are going
00:25 - to write the program to count the number
00:28 - of words in the sentence so class throws
00:59 - IO exception let us create the variables
01:06 - we need string variable strname the user
01:11 - then to count we need intercom
01:15 - when we need to count we have to give
01:18 - the initial value as 0 so that counting
01:21 - always starts from 0 let us create the
01:23 - object for the bufferedreader class
01:32 - instead of creating object for the input
01:35 - stream reader and then bufferedreader
01:37 - object we can also create in this way so
01:41 - that is bufferedreader BR is equal to nu
01:46 - buffered reader of new input stream
01:53 - reader then system dot in so again we
02:04 - close this so we can do it in 2
02:06 - statement differently other ways we can
02:08 - also do using this type of statement
02:12 - they are given a space here that should
02:14 - not be there so let us prompt the user
02:19 - to you the input and sentence so we can
02:35 - you print instead of pretty so now
02:39 - assigning the input STR is equal to BR
02:43 - dot you know that each word is separated
02:51 - by the space so after ever there will be
02:57 - a space if we count the space then this
03:00 - word is being counted same like that we
03:03 - will keep on counting the number of
03:05 - space but at last when we see there
03:08 - won't be a space given by the user so at
03:11 - that time what we do we add one more
03:14 - space after getting the input from the
03:17 - user but by mistake user also gives the
03:23 - space after the full stop then what we
03:27 - can do we can trim it using trim
03:31 - function so that the extra spaces before
03:34 - and after the sentence will get trimmed
03:38 - so let us give here dot trim off now
03:44 - what we do STR is equal to STR plus one
03:51 - space the ad now we go to the condition
03:57 - inside the form we will create the far
04:00 - loop far int I is equal to zero I is
04:07 - lesser than STR dot length of I plus
04:15 - plus
04:18 - so if character at the disk is tr not
04:27 - STR dot character at ie is equal to
04:35 - equal to so character type should be
04:37 - given in Sidney single quotation so we
04:40 - check for one single space then what we
04:46 - do we increase the counter count plus
04:50 - plus we increase by one so until the
04:53 - last index it will keep on doing after
04:56 - it becomes false it will come out of the
05:00 - Farlow so we will print the number of
05:04 - count here plus count in case if we give
05:22 - this inside this Farlow then it will
05:25 - print every time it counts we do not
05:28 - need that let us compile this no syntax
05:32 - error Java is very interesting so we
05:43 - have four words here so number of words
05:45 - in a sentence for let us create another
05:51 - class initials
05:58 - I will copy the code from the previous
06:01 - one
06:13 - so this is programmed to print the
06:17 - initials of the given so here I change
06:27 - the class name we are not going to count
06:32 - anything here so let me delete this and
06:38 - then enter your name with first middle
06:51 - and last name so we don't need to trim
07:00 - here so here we want to print the first
07:08 - character of every name given so first
07:14 - character means we can count the space
07:16 - after that the next character we can
07:19 - take but when the user gives the input
07:23 - there will not be space in the beginning
07:26 - what we do here is going to add the
07:29 - space before the string so let us delete
07:33 - this and then I am going to add here now
07:44 - the character after the space we are
07:47 - going to extract and then take it as a
07:50 - new word so for the new word I give a
07:53 - new variable string variable str1 so
08:01 - initially it should be without any value
08:04 - so now I give the Farlow is lesser than
08:14 - st r dot length off the high plus plus
08:25 - so I am going to give the condition if
08:29 - st r dot character at i is equal to
08:36 - equal to i am checking for space so one
08:39 - single quark then one space everywhere
08:42 - so if it is so then i am going to add to
08:45 - the next letter to the string 1 st r1 is
08:50 - equal to str dot character at i plus 1
08:59 - so i is space the plus 1 is the next
09:02 - character so it will extract the next
09:05 - character here this is added with the
09:12 - new string str1 just now let us print
09:17 - the new string in shells of given name
09:32 - except our given name plus str 1 so let
09:42 - us close the method and cross the class
09:46 - compare this no syntax error so when you
09:54 - come see Krishna
09:59 - look see vkg has come we have not given
10:05 - any extra character that so we can
10:08 - assign here a full stop there so we can
10:12 - add with this plus dot otherwise 1 space
10:19 - so compile this right computer
10:29 - designing so you can see see ad students
10:35 - I hope you learned how to do these two
10:37 - programs let us do more programs in
10:40 - coming video tutorials until then thank
10:44 - you one by