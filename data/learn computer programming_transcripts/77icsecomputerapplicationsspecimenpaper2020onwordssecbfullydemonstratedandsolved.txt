00:00 - welcome back students in this video we
00:03 - are going to continue solving Part B of
00:07 - computer applications 2020 onwards given
00:11 - by the ICAC both I will demonstrate the
00:18 - program directly on the bluej
00:21 - environment so that we can easily verify
00:24 - it question number four function
00:28 - transport company charges for the
00:30 - parcels of its customers as per the
00:33 - following specifications given below
00:35 - class name is given as air transport and
00:39 - then member variables are given here
00:42 - string name to store the name into W to
00:46 - store the weight of the parcel in kg and
00:49 - then int charge to store the charge of
00:53 - the parcel member functions given as
00:56 - usual it is wide except of to accept the
01:00 - name of the customer weight of the
01:02 - parcel from the user using scanner class
01:04 - it is being specified that you have to
01:06 - use scanner class-wide calculator to
01:11 - calculate the charges as per the weight
01:14 - of the parcel as per the following
01:17 - criteria weight in kilogram charges per
01:21 - kilogram up to 10 kilogram it is 25 per
01:24 - kg next to kilogram that is from 11 to
01:28 - 30 it is going to be 20 / kz above 30 it
01:33 - is going to be 10 per kg so it is a slab
01:36 - program we have to follow the
01:38 - calculations when we do in the program a
01:42 - surcharge of 5 percentage is charged on
01:45 - the bill in the next wide printer to
01:50 - print the name of the customer weight of
01:51 - the parcel total bill inclusive a
01:53 - surcharge in a tabular form in the
01:56 - following format so it will be in the
01:58 - tabular format as given here you will be
02:04 - giving first name weight and bill amount
02:06 - and then it will be printer whatever has
02:09 - been calculated define a class with the
02:11 - above-mentioned specification
02:13 - the main method create an object and Ino
02:17 - of the member methods let us first have
02:19 - the blueprint of this program in the
02:21 - mind see here member variables are given
02:25 - here three variables are given
02:27 - apart from that we may also require to
02:30 - find the surcharge and also the billed
02:33 - amount so we may need two more variables
02:36 - and then we will take a wide accept of
02:39 - there we will take the input so that is
02:42 - only these two are it required and then
02:44 - charged we are going to calculate then
02:48 - calculate off as per the slab we will
02:50 - calculate and then we will write one
02:53 - more method that is wide print off and
02:55 - then we will print it as needed here and
02:59 - then we will take object in the main
03:01 - method and invoke the member methods let
03:04 - us go to Bruges it I have copied the
03:07 - question here for my reference so let us
03:13 - start we need a input that is in scanner
03:18 - class so we will write import Java dot
03:22 - util dot scanner so class name is given
03:28 - there a transport here we need to
03:37 - declare the variables string name
03:43 - int W and also charge both are given if
03:49 - you want to calculate the surcharge that
03:50 - it will be in the decimal points so we
03:54 - can have double variable here W such as
03:59 - I will you yes charge then build amount
04:04 - also will be double so both I have
04:06 - declared here so we can have the comment
04:10 - here we can write yes charge to
04:18 - calculate surcharge
04:22 - and bill to calculate final amount now
04:33 - we need to create a method called accept
04:36 - so that is why wide accept of here we
04:43 - need to create a object for scanner
04:45 - class I will write scanner SC is equal
04:50 - to new scanner a system dot in now we
04:59 - will prompt the user to view the name
05:03 - system dot out dot print let it be print
05:16 - enter the name
05:21 - so we are going to assign now name is
05:25 - the variable given their name is equal
05:27 - to SC dot next line up we can also give
05:35 - line if it is a single name and then
05:41 - next we will prompt the user to you the
05:43 - weight of the parcel enter the weight of
05:57 - the parcel so here W is the variable W
06:06 - is equal to SC dot next int up so we are
06:14 - not going to take any more thing so we
06:16 - will just close this method now we have
06:19 - to create the other method called
06:21 - calculate off so wide calculate off so
06:34 - here if weight is lesser than or equal
06:37 - to ten so if W is lesser than or equal
06:42 - to ten charge is equal to so whatever
06:52 - the weight is there into twenty five
06:55 - right W into twenty five the next else
07:01 - if
07:09 - W is greater than 10 and W is lesser
07:19 - than or equal to 30
07:23 - so next to 20 this is 11 to 30 so that
07:27 - will be 20 as given in the question now
07:30 - what we are going to do charge is equal
07:33 - to say listen if it is greater than 10
07:36 - and less er than 30 already approaching
07:40 - 25 is the charge right so what we will
07:44 - do 10 into 25 plus the remaining so how
07:52 - do we find the remaining if it is lesser
07:54 - than 30 whatever the weight is there W
07:58 - minus 10 because then we have already
08:02 - calculated them so this 1 into I think
08:06 - it is 20 rupees so 20 let us confirm yes
08:16 - it is 20 rupees otherwise that is else
08:24 - charge is equal to first 10 will be
08:27 - calculated as calculated before 10 into
08:31 - 25 plus next 20 20 into 20 plus the
08:44 - remaining thing so remaining will be W
08:47 - minus 30 up to 30 we have already
08:50 - calculated into 10 rupees right yes here
08:56 - the calculation of charge is completed
09:00 - now we have to calculate the surcharge
09:03 - so what we can do yes charge is equal to
09:10 - charge and plus 5 percentage of charge
09:16 - so what we do charge into
09:21 - 0.05 we can directly write that is the
09:24 - best method 0.05 otherwise we can also
09:28 - write 5 a 100 point zero otherwise 5.0
09:32 - divided by 100 so after this we will
09:37 - close this now we need to print now why
09:42 - to print off here we can also calculate
09:48 - the billed amount otherwise our class
09:49 - while printing we can do so we will
09:51 - calculate here itself build this equal
09:56 - to charge plus surcharge now we are
10:08 - going to print the name of the customer
10:11 - weight of the parcel and amount that is
10:14 - in tabular form it is cell right so we
10:16 - will just print as a heading system dot
10:19 - out dot print line enough I print in the
10:25 - double quotation as it is going to print
10:27 - whatever rig you name so after this news
10:32 - we may need one tab space so backslash T
10:37 - I am giving for one tab space and then I
10:39 - am going to print wait wait and then
10:48 - again backslash T and then a month
10:53 - otherwise billed amount
11:02 - now we are going to print the actual
11:04 - values so the variable for name is name
11:15 - plus we need space so I give in double
11:19 - quotation backslash T then plus W plus
11:28 - again space plus bill demott so that is
11:36 - the build variable after this we are
11:40 - going to create a main method where we
11:44 - will call above methods so we need to
11:58 - create a object for creating object we
12:01 - need the class name the class name is
12:04 - Air Transport and then we need an object
12:10 - name that can be any valid identifier
12:12 - just like you EA t is equal to new and
12:18 - then the constructor so that is a T or a
12:21 - in SPO RT R so now with using the object
12:27 - name Katie we are going to call the
12:29 - methods so that is first is except of
12:35 - next is calculator next is printer
12:52 - then we closed the method so here two
13:00 - more or extra one more this also yes let
13:16 - us compile there is no syntax error let
13:24 - us check enter the name I write Kea yes
13:42 - the name simply enter the weight of a
13:47 - parcel let us check below 10 let us use
13:50 - 7 so name is a a weight is 7kh and then
13:58 - build among tasks including such as let
14:05 - us calculate about 10 students you can
14:14 - verify this manually once so that you
14:16 - will be confident that it is right
14:19 - enter the name just I give BV and then
14:26 - wait I give this 20 so it is been
14:33 - calculated as four hundred and seventy
14:35 - two point five so let us go to the next
14:40 - program write a program to input name
14:47 - and percentage of 35 students of a class
14:50 - 10 into separate one dimensional arrays
14:54 - arrange students details according to
14:56 - their percentage in the descending order
15:00 - using selections or Twitter
15:03 - display name and percentage of first ten
15:05 - toppers of the class see listen here we
15:07 - have to create two single dimensional
15:10 - array one having the name of the student
15:12 - other having the percentage of the
15:16 - student so that is 35 is the size of the
15:19 - array then we are going to sort it
15:25 - according to the mark wise that is the
15:29 - highest in the top so that is descending
15:31 - order we must use the selection sort and
15:34 - then we will print only the toppers that
15:38 - is ten toppers we are going to print
15:40 - this
15:41 - so let us go to blue Z and write a
15:43 - program so I have copied the question
15:47 - here let us start we need to take the
15:49 - input further erase so we will import
15:54 - Java dot util dot scanner class yes SATA
16:02 - you now I create a main method here
16:25 - here we need a few variables so as we
16:29 - are going to start out descending order
16:33 - we are going to take the maximum value
16:35 - and the maximum index then for swapping
16:37 - we need a temporary variables there are
16:41 - two arrays that is one is with the
16:44 - string other one is with the integer
16:46 - type so we will take two swapping
16:49 - variables and then for loops we will
16:52 - take inj so first I create in maximum
16:57 - value as EMV and then maximum index as
17:01 - see my I take and then for percentage
17:07 - Pete my tech that is for swapping then I
17:13 - and J for loops so for swapping string
17:18 - array I need a string variable that is
17:21 - name so that is name and Tempah you now
17:28 - let us create a scanner class object
17:41 - now let us declare the erase string yen
17:47 - off so this is the single dimensional
17:50 - array is equal to new string of 35 is
17:57 - the RSS given so I will create 35 next
18:03 - we need a percentage that is average
18:07 - right so integer type into P array
18:12 - symbol is equal to new in half again 35
18:17 - marks we are going to enter now let us
18:25 - give the prompt to before the loop
18:27 - itself so that it does not continue
18:29 - every time system dot out dot print line
18:36 - off enter the name and percentage of 35
18:48 - students we can do
18:57 - so let us go to loop now far the index
19:04 - starts from zero we know I already have
19:07 - declared is equal to zero is so last
19:13 - index will be 34
19:15 - so that is lesser than 35 we can also
19:21 - give lesser than length also so I am
19:25 - going to do just here neon dot length of
19:31 - sorry length length off means it becomes
19:34 - first string then I plus plus so first
19:45 - let me take the input for the name yarn
19:49 - is the variable we are given for array
19:51 - enough I so that is 0 1 2 3 up to 35 so
19:56 - that is from 0 to 34 it will take 35
20:00 - elements yes see dot next up so that we
20:05 - are going to use a single name here PF
20:09 - so that is percentage so every time
20:12 - after entering the name we will take the
20:18 - percentage a see dot next int
20:34 - after that we need a loop for starting
20:41 - when I is equal to zero I is lesser then
20:48 - n dot length minus one now you will give
20:54 - so instead of lesser than 35 minus 1
20:59 - that is 34 we give like this then I plus
21:08 - plus students we are just solving the
21:19 - paper here if we want to know full
21:22 - detail about this selection sort you can
21:24 - watch my previous video the maximum
21:28 - value we are going to assign s MV as the
21:33 - first one so that is P of I according to
21:38 - percentage only we are going to start so
21:40 - we are going to start PFI later it will
21:45 - sake rather which is the maximum one and
21:48 - then it will swap so the index of that
21:52 - mi is equal to I to check the greater
21:58 - one we are going to have a far loop here
22:01 - far J is equal to ie plus 1 so the first
22:09 - index and the next index it is going to
22:12 - take then J is lesser then young dot
22:18 - length then J plus plus here if
22:28 - p FJ is greater than maximum value then
22:40 - what we are going to do maximum value
22:49 - becomes PF j sorry small j and maximum
23:03 - index becomes J so it will be doing
23:08 - first pass and then when it completes
23:14 - this inner loop get completed the
23:17 - maximum value from that particular array
23:20 - might have been found then it is fact
23:23 - that is outside the inner loop the
23:27 - swapping here we will do P temp is equal
23:33 - to P of I then P of Y we are going to
23:44 - put it P of mi
23:54 - and then again PF mi is equal to PM
24:07 - students see here we have started the
24:13 - percentage but name also should be
24:16 - shattered isn't it we can sort as their
24:20 - marks are getting sorted the same way
24:23 - the names also will get sorted so that
24:26 - the particular student only will have
24:28 - that whatever the marks he has taken so
24:31 - we will swear as the marks are swept
24:37 - enough I and then
24:42 - enough ie is equal to enough mi enough
24:55 - mi is equal to nm now after this we will
25:08 - come out of this outer for loop and then
25:13 - we need to print the name and the
25:15 - average so let me give like this system
25:18 - dot out dot print line of a regular one
25:30 - tab space and then
25:39 - now to print all the names and
25:43 - percentage I need for loop right here
25:47 - far is equal to 0 it has been asked to
25:54 - only the 10 stoppers so we have done in
25:57 - the descending order from that we will
26:00 - take only 10 elements and print not all
26:04 - the elements so we need a far loop 0 to
26:07 - 9 otherwise 0 to lesser than 10 is
26:11 - lesser than 10 I plus plus now I just
26:19 - simply print the values
26:29 - sorry tiger print enough I so that is
26:40 - name it is going to print and then let
26:43 - me have one tab space here plus P of X
26:51 - so that is percentage it is going to
26:53 - print so let me give in the next line
26:57 - otherwise it will be in the same line so
26:59 - I mean I give a escape sequence e to
27:02 - make a next new line so we have closed
27:10 - method and the class let us compile this
27:15 - no syntax error students I don't want to
27:19 - show that 35 students name and the
27:22 - person days I entered so I will just
27:25 - change this to 5 or 6 so let me give 6
27:30 - students so here Y n dot length is there
27:36 - so there won't be any problem from 6 I
27:40 - will print the top two students name and
27:44 - the percentage so lesser than 2 I you
27:46 - there is no syntax error let me run this
27:50 - program
27:56 - so enter the name of the pathways of 35
27:59 - students we have not change the prompt
28:01 - it's okay
28:03 - let us enter 6 details simply a UA 56b
28:13 - 78 see 65 sorry see 65 become a name
28:23 - it's ok 65 be 98 e39 yes 99 let us check
28:46 - it is not being subtle that may be small
28:49 - mistake let us check that
29:00 - and I'll see here instead of Jay we have
29:05 - given I so we should be very careful
29:08 - compile this once again dry we'll run
29:21 - let us enter now a 78 b7 100 C 25 be 65
29:48 - e30 to f100 sorry 100 so you can see
30:03 - that B is 100 then you have this hundred
30:08 - so it is being sorted and then the tapas
30:11 - list has displayed here or let us go to
30:18 - the next program question 6 design a
30:21 - class to overload a function sum of as
30:24 - follows so here this is the function
30:27 - name given it should be overloaded first
30:30 - one with which is returning integer type
30:34 - and then having two variables both are
30:38 - integer type what it does some of the
30:42 - even numbers in the range of a and B so
30:44 - the starting and the ending number is
30:46 - given as the input and then the sum of
30:51 - all the even numbers between the range
30:54 - is taken inclusive of a and B next one
30:58 - some ee n so it is returning double type
31:02 - then Yun also is double one with one
31:07 - double argument calculate and return the
31:10 - product of the following series so it is
31:12 - starting from one
31:13 - into 1.2 into 1.4 so Z by 0.2 it is
31:19 - increasing up to n the next one it is
31:23 - returning integer type it is taking the
31:26 - argument also as integer 1 with 1
31:30 - integer argument calculate and return
31:32 - the sama only our digits of the number
31:35 - here for example it is a given sample
31:39 - four three nine six one is the number so
31:41 - that is forty three thousand nine
31:42 - hundred sixty-one here it is going to
31:45 - take all the odd digits so that is 3 is
31:47 - odd here it is taken nine is odd here it
31:50 - is taken and then one is are here taken
31:52 - then it has been added together and then
31:57 - it has been asked to write a main method
31:58 - to create an object and invoke the above
32:00 - method so we have to write the main
32:02 - method and call the methods so these are
32:06 - all with parameters when we call we
32:08 - should mention the parameters
32:11 - reverberated so let us go to blue Z so
32:14 - here is the question which has been
32:16 - copied ok let us start we don't need to
32:20 - take any input here the class name I
32:23 - give s power load itself does not
32:26 - mentioned in the question so I need to
32:32 - have in some off with two integers that
32:37 - is given in the question into a comma in
32:41 - to be
32:45 - here I will have some variable because
32:50 - it to be returned hint I will take
32:55 - someone is equal to zero in the
33:00 - beginning default value then far so int
33:07 - is equal to the range is given here to
33:09 - be so ei will be there then I is lesser
33:14 - than or equal to be I plus plus so from
33:19 - this range what it will do it will take
33:22 - only the even numbers and take the sum
33:26 - so for that we have to check the
33:27 - condition if I more two equal to equal
33:35 - to zero means it is going to be even
33:37 - number so then what I am going to do
33:39 - some one equal to some one plus I we can
33:47 - you and then it is going to return so we
33:52 - come out of this far low and then we
33:55 - will write return someone so that's all
34:02 - the first method get over you can also
34:05 - check this method separately so let us
34:09 - try that no syntax error so we have to
34:13 - create the instance there then I run
34:18 - this for example just like you five and
34:23 - then to ten so it will be adding only
34:28 - six eight that is 14 and then ten is 24
34:32 - so let us check so 24 it written close
34:39 - so let us start continuing it
34:45 - next one is double type double some w
35:01 - double type sum to is equal to here we
35:07 - are going to multiply and the series is
35:09 - multiplication so I should start with
35:11 - one far let us take double variable here
35:17 - double I is equal to one point zero then
35:26 - I is lesser than or equal to n what it
35:33 - is going to do by point two it is going
35:35 - to increase so just I you here I plus
35:38 - equal to zero point two so every time it
35:40 - is going to add point two with that some
35:44 - two is equal to some 2 multiplied by I
35:55 - then it should return it is only one
35:59 - statement in the far loop so that I have
36:00 - not given the curly braces return some
36:07 - toe so let us see one try this I will
36:17 - you 10.2 only one into one point two it
36:20 - will print as one point to itself that
36:22 - is sick you can check manually as you
36:27 - need for the correctness of the program
36:28 - let us do the next one the third one
36:32 - here int sum off into n here I need to
36:44 - extract the digits for that I will
36:46 - create a variable called into already
36:50 - and then sum 3 is equal to 0 as we are
36:57 - going to just add initially 0 then we
37:00 - need a loop here we don't know how many
37:03 - digits will be there and the user gives
37:06 - so when we are not confirm about the
37:08 - number of iterations we will take while
37:11 - loop while
37:14 - n is greater than 0 what we will do now
37:20 - we will extract visit by digit so that
37:25 - is last digit I have taken right LD is
37:28 - equal to n more sorry capital n more 10
37:36 - so it takes the last digit after
37:39 - dividing by 10 the remainder will be
37:42 - once if we are going to check now
37:47 - whether it is odd or not if card only we
37:50 - are going to sum otherwise we will not
37:52 - do anything
37:53 - LD more to equal to equal to 1 so then
37:58 - it is alright now we will do some 3 is
38:03 - equal to some 3 plus Garrity and then we
38:10 - should remove that last trade is it for
38:13 - that we will take only the quotient so n
38:17 - is equal to n divided by 10 so this will
38:25 - keep continuing until n is greater than
38:27 - 0 we have to print the sum at last that
38:35 - is returning return sum 3 so let us
38:44 - check
38:48 - so I will run into one C four five six
38:56 - five then one see here four is even
39:03 - number five is odd number and then again
39:06 - five is odd number so 10 10 plus 1 is 11
39:10 - so you can see 11 is wind it up close so
39:14 - we have checked all the methods now we
39:16 - need to create a main method and then
39:18 - call this public static void main a
39:25 - string of arguments let us queue the
39:32 - class name overload I just use o is
39:37 - equal to new overload of poor dot sum of
39:46 - two integer arguments so I use 6 comma
39:50 - 10 and then OH dot sum of 1 double type
39:58 - I you 1.4 and then OH dot sum of 2 3 4 7
40:15 - so compile this no syntax errors let us
40:20 - go to the next question using the switch
40:24 - statement write a menu driven program to
40:27 - perform following operations to print
40:29 - the value of Z where Z is equal to X
40:33 - cube plus 0.5 into X divided by Y where
40:38 - X ranges from minus 10 to 10 with an
40:42 - increment of 2 and y remains constant at
40:45 - five point five see here here it is
40:48 - given - 10 - 10 as the value of x so we
40:54 - have to print all the values when X is
40:58 - minus 10 minus 8 minus 6
41:01 - up to ten so we need a far loop starting
41:04 - from is equal to minus ten and lesser
41:08 - than or equal to 10 the next one to
41:13 - print the Floyd's triangle with and Rose
41:16 - the floods triangle will be the
41:19 - continuous number one two three four
41:21 - five six like that then whatever the
41:24 - number of rows given so that many rows
41:27 - it is going to print now we need input
41:30 - so we will do import Java dot util dot
41:35 - scanner class may know I have given now
41:42 - I write a main method
41:54 - I need to take option for the menu so I
41:58 - you int whoa
42:01 - scanner SC is equal to new scanner a
42:08 - system dot in then I give the menos
42:13 - system dot out dot print line up here
42:20 - just I print minnow and then now I will
42:26 - continue this so one is for value of Z
42:39 - right one dot the second one is flight
42:50 - strand of Andros
43:02 - so now I will prompt the user to into
43:05 - the choice
43:19 - whether you print instead of printing
43:23 - then I am going to assign the value so
43:26 - whoa is the option Rho is equal to SC
43:30 - dot next int up so user will enter
43:35 - whether one are two now we are going to
43:38 - start switch the option which we have
43:42 - taken is row now case one we need two
43:58 - variables here one is double Z that is
44:05 - the value it is going to calculate and
44:08 - then vice value is already given as 5.5
44:13 - there so I initialize directly here then
44:17 - I need a farlow int X is equal to as I
44:23 - said minus 10 X is lesser than or equal
44:29 - to 10
44:34 - x+ equal to two so every time two is
44:38 - been incremented then I want to
44:40 - calculate here so we know the math
44:47 - function Z is equal to math dot P whoa W
44:54 - of X comma 3 X cube it is plus 0.5 into
45:04 - X this is whole divided by Y divided by
45:12 - Y now it should print all the values of
45:21 - Z so I do system dot out dot print line
45:27 - off value of said while X is so it will
45:39 - be better to understand axis X plus so
45:46 - whatever the value it starts from minus
45:48 - 10 minus 10 minus 8 minus 6 so all will
45:51 - be displayed easy to understand the
45:54 - output plus so that is that it is going
46:00 - to print then what we will do we will
46:05 - break this do not forget break you will
46:09 - lose the marks the next we will start
46:13 - case to case 2 so I need two variables
46:19 - into N and then also the case value it
46:25 - will be keep increasing so that is IJ
46:28 - and then K I take inj further loops and
46:31 - then K is to increment the value
46:33 - continuously to write the variables
46:36 - there now
46:42 - system dot out dot print off so I asked
46:47 - the number of rows from the user enter
46:52 - the value for n far into is equal to 1
47:08 - is lesser than or equal to n so these
47:13 - many rows we need so outer loop is four
47:16 - rows then here again I need a inner loop
47:23 - that is far into J is equal to 1 J is
47:31 - lesser than or equal to I so it will be
47:34 - right angle triangle J plus plus now I
47:41 - need to print case value system dot out
47:46 - dot print only not print line so it will
47:51 - be in the same line these are columns so
47:53 - K I am going to print with that some
47:56 - space is required otherwise it will look
47:58 - like a single number so I do some two
48:02 - space then I need to increase the K so
48:07 - always keep increasing and prints it
48:10 - doesn't relate to I loop are J loop we
48:15 - have not taken any input we have not
48:18 - assigned it so n is equal to yes C dot
48:21 - next int C we should be very careful
48:26 - about this so outside this loop we will
48:33 - give a line space
48:43 - then what we're supposed to do we can
48:46 - break otherwise you can just leave like
48:49 - that
48:50 - in the question it is not been asked to
48:52 - display the message for wrong option
48:55 - given with a user so that is optional we
48:58 - can give our way without that also you
49:01 - will get full marks here we will not do
49:03 - that but in case in the question it is
49:06 - been asked to display the message when
49:08 - the user gives the wrong input means you
49:12 - must try to default remember it compile
49:17 - no syntax error let us run this so now I
49:26 - do
49:27 - so one has the option see there you
49:33 - could see 4 minus 10 when the x value is
49:36 - minus 10 when X values minus 8 all the
49:40 - values it has been calculated and
49:43 - printed here the dispel you of Z now let
49:48 - me try with the next one option number 2
49:53 - I you here so now it will be asked how
49:57 - many rows I need I may need 4 so you can
50:02 - see 1 2 3 4 5 6 7 8 9 10 continuously it
50:06 - is being filtered for rows so let us go
50:10 - to the next question write a program to
50:14 - input and store integer elements in a
50:17 - double dimensional array of size 4 into
50:20 - 4 and to find the sum of all the
50:22 - elements so here only in this year
50:27 - double dimensional array programs are
50:29 - also there I will give you more videos
50:31 - on the double dimension array but I have
50:35 - already taught how to declare and II
50:37 - retrieve the variable from the double
50:39 - dimensional array so let us do that so I
50:42 - do import Java dot util dot scanner
50:49 - class double dimensional array IU public
50:57 - static void main of string of our events
51:09 - now I will take the input from the user
51:13 - for that scanner class object scanner
51:17 - ASC is equal to nu an error system dot
51:23 - in I prompt user enter the values for
51:39 - double dimensional array
51:41 - I do not declare the double dimension
51:47 - array so in AR are of two types of array
51:50 - symbols use the double dimensional in
51:53 - new int of the size is given s 4 into 4
51:58 - so 4 rows and 4 columns so I need to
52:05 - take sum of all the elements so I do int
52:08 - sum is equal to 0 now I need a Farlow we
52:15 - need to follow for double dimensional
52:17 - array far in is equal to 0 is lesser
52:25 - than 4 then I plus plus next Farlow so
52:33 - before that let me give the prompt so
52:36 - that every row the user will come to
52:39 - know it is next to Row system
52:52 - enter four elements for a row so that is
53:01 - the row number we will give so I will be
53:06 - the row so what I do here it starts from
53:10 - zero but the row starts from one when we
53:13 - count I will give I plus one then I plus
53:18 - 1 plus :
53:29 - now I will give the inner for loop far
53:33 - into j is equal to 0 J is lesser than
53:38 - for J plus plus so now let me take the
53:47 - input ARR of I and J see here is the row
53:57 - when I is 0 J will become 0 1 2 3 so
54:02 - that is 4 elements it will take again
54:05 - the outer for loop it will go I becomes
54:08 - 1 and then like that totally 4 times it
54:11 - will take a seedot next in tough just we
54:18 - need to sum all the elements so in this
54:21 - far loop only we can add as the user
54:23 - enters the value it will take the sum
54:25 - sum plus equal to a or are off now it
54:36 - will sum and then we are going to print
54:39 - the sum outside the loops
55:02 - plus some it is very simple one so let
55:07 - us compile no syntax errors so enter
55:18 - four elements for Row 1 so I will enter
55:23 - 5 5 5 5 4 times 5 then now I will give 4
55:31 - times 6 so now the total is 44
55:41 - let me give now to I am giving similar
55:50 - because it will be easy for calculation
55:53 - to check now I will give 8 here so this
56:04 - becomes 40 plus 44 84 correct let us go
56:11 - to the last question write a program to
56:16 - input a string and convert it into
56:19 - uppercase and print the paid of vowels
56:21 - and numbers of pairs of vowels occurring
56:25 - in the string for example input is
56:28 - beautiful beauties so that is paid of
56:32 - verbals see here E and a this is a pair
56:39 - of oval and then again next a and you
56:42 - said a and you are paste like that
56:52 - here again ena is there again yen he was
56:57 - there then here ine is there
57:00 - so all these pastes to be printed and
57:03 - then has to be countered and then print
57:06 - the number of page there so let us go to
57:10 - our program so again I will take import
57:15 - Java dot util dot scanner so I need a
57:48 - variable string variable string s then I
57:54 - need two character variable to check the
57:58 - first character in the next character so
58:00 - I will take care C 1 and then C 2 then I
58:08 - need to count so I will take int count
58:11 - initially 0 now I need to take an input
58:18 - scanner class object now
58:28 - then I prompt the user enter the string
58:46 - so we are saying now yes is equal to SC
58:49 - dot next line up line up
58:54 - takes the complete sentence until you
58:58 - will press the Enter key next to means
59:02 - it will take only one word until the
59:04 - space given now we need to convert this
59:08 - into uppercase s is equal to yes dot to
59:13 - uppercase off we need a far loop and
59:17 - then inside the follow only we need to
59:20 - print so let us give just the reference
59:22 - before the far loop system dot out dot
59:28 - print line now the rice print will you
59:36 - paid off verbals now far the index value
59:50 - always starts from zero so int I is
59:53 - equal to zero is lesser than or sorry
59:58 - lesser then only the last index is one
60:01 - lesser than the length so yes dot length
60:11 - off here if we take I is 0
60:15 - I plus 1 will be 1 so at last if we see
60:19 - it will go out of bounds because the
60:22 - last character and then plus one is not
60:24 - available so we will go before that only
60:27 - so I you minus one then I plus plus
60:36 - now I take first character that is C 1
60:40 - is equal to yes dot carrot I the next
60:46 - character also I have to check whether
60:48 - that is also verbal or not so I assign C
60:52 - 2 is equal to yes dot carrot I plus 1
60:59 - this is next letter here now how I will
61:05 - check if C 1 equal to equal to whether a
61:13 - are I will copy this I will check all a
61:23 - eio you
61:24 - yeah I have checked now I placed at 5
61:34 - times totally e i o u so it is checking
61:50 - whether C 1 is AR er IR oru and see this
62:01 - should be inside one bracket okay means
62:05 - if this is true and the next character
62:11 - also any one of this so all this but it
62:16 - should be see to see here there is one
62:19 - extra let us delete now I will copy this
62:26 - all this let me in the next life
62:39 - so I should close this if now this is c2
62:44 - right
62:45 - c2 then what it will do you will just
63:00 - print system dot out dot print off c1
63:11 - plus c2 if we give like this it will
63:17 - take the ASCII value and I are both so
63:20 - better we will give one double quotation
63:23 - here so it becomes a string there
63:25 - nothing there
63:26 - it cannot be added so it will display
63:30 - nearby plus one stays to differentiate
63:34 - this or not to space now if it is there
63:39 - it prints and then also count increases
63:43 - count plus plus I here so outside the
63:49 - loop we will print the count the pace
63:53 - will be printed every time the count
63:55 - will be printed once at last
64:06 - so here without print line we give so we
64:11 - need to create a new line for that I do
64:14 - backslash n then number of fade of all
64:24 - vowels plus count just compile this no
64:33 - syntax error
64:34 - let us run this we will give the same
64:37 - example which was given in the question
64:40 - paper duties so you can see here here it
64:49 - is shown 17 or let us check what mistake
64:53 - we have done there most probably curly
64:55 - braces we are not given yes for if we
65:01 - need to view the curly braces there so
65:04 - otherwise only the printing system is in
65:07 - the condition the count is not in the
65:10 - condition compile this and run once
65:25 - so you can see now that's why it is
65:29 - always better to dry run once after
65:32 - writing the program students keep
65:35 - watching my channels it will lead you to
65:38 - get excellent marks maybe 100 you make
65:42 - it Thank You students