00:00 - [Music]
00:08 - foreign
00:16 - in this lesson we will see how to slice
00:19 - the strings in Python let us understand
00:22 - first what is slicing
00:25 - slicing is a way to access a part of
00:28 - string or substring we can say
00:33 - slicing is done using index range now
00:36 - let us know General format to slice a
00:39 - string
00:41 - string and then open the square bracket
00:45 - and then there can be maximum three
00:48 - numbers that is integer numbers given
00:51 - first one is the start that is the
00:54 - starting index number and the next one
00:56 - is the stop that is also a index number
00:59 - and step is the integer where how many
01:03 - steps to jump here please note
01:07 - the start is including the mention
01:10 - number but the stop is not included that
01:14 - means the mentioned number is not
01:16 - included previous to that it stops
01:21 - and the step by default it is one when
01:24 - it is not given
01:27 - please note that each one start stop and
01:30 - step is bifurcated using the colon
01:34 - let us see some examples now
01:39 - foreign let us take Str is equal to
01:43 - Learn Python
01:44 - here is the first example Str of one
01:48 - colon 4.
01:51 - so immediately we can just note down the
01:53 - index numbers for the string given it
01:57 - starts from 1.
01:59 - and then it ends at 4 but 4 is not
02:02 - included so that means stop minus 1 that
02:05 - is 3 so 1 2 3
02:09 - ear is the output
02:12 - strf 2 is to 10 is to 3 remember the
02:16 - third option is not compulsory that
02:18 - means the steps either you can give or
02:20 - skip
02:21 - if you are not giving that is taken as 1
02:24 - as default value here it starts at 2 and
02:28 - then ends at 10. that means 2 to 9 it
02:32 - will take but in that the step will be 3
02:35 - so it will be taking 2
02:37 - and then
02:39 - 5 that is 3 and 4 are skipped then 6 and
02:44 - 7 are skipped the third one is eight the
02:47 - output here we can see is a space t
02:51 - we also know that
02:53 - characters in this string are also
02:55 - mentioned using the reverse order that
02:58 - is with minus indexes
03:00 - let us see an example for that Str of
03:03 - minus 2 is to minus 7 is to minus 1. so
03:07 - let us write this string indexes in
03:09 - reverse order
03:13 - you need to remember this minus 1 is
03:17 - mentioned as it's from right to left the
03:20 - default value of step is 1 only it is
03:23 - plus one it is never minus one so in
03:26 - case you are mentioning or it is
03:28 - mentioned in the beginning that is the
03:31 - start is the
03:32 - bigger number and the stop is the
03:35 - smaller number then it should be from
03:37 - the right to left
03:40 - so now it starts from minus 2 and then
03:43 - it will be going up to
03:45 - -6 that is minus 7 is not included we
03:48 - know that so the output will be
03:51 - o h t y p
03:56 - let us see the next example both mixed
03:59 - and positive and negative indexes
04:04 - strf 1 is to minus 7. so we are having
04:08 - both the indexes here it starts from 1
04:11 - and then ends at minus 7. so this minus
04:15 - 7 is not included it should be stopping
04:18 - at minus 8 so it will be from left to
04:21 - right so the step is plus one only so
04:24 - that is the reason it is not given here
04:26 - so the output will be e a r n
04:32 - let us understand little more
04:35 - if start index is not mentioned
04:38 - it assigns 0 as default value
04:42 - if stop index is not mentioned it takes
04:44 - up to the end of the string
04:47 - let us see some examples
04:51 - we will have same Str is equal to Learn
04:53 - Python only
04:55 - strf blank and 4 that is start is not
05:00 - mentioned
05:01 - it means it will take from 0.
05:05 - so from 0 index number 3 it will take 4
05:09 - is not included there we know already
05:12 - so l e a r will be the output
05:18 - Str of 8 semicolon and blank that means
05:21 - the stop index is not mentioned in this
05:24 - case it will take from the start index
05:28 - and then the remaining up to the end
05:30 - whatever characters are there it
05:32 - includes everything so here
05:35 - y t h o n will be the output
05:41 - Str of blank is to blank is to minus one
05:45 - that means start and stop both are not
05:47 - mentioned
05:48 - here the step is minus 1
05:51 - start from right side and ends at left
05:53 - side so that means it will be reversing
05:56 - the string it will take n to l
06:01 - let us execute all these
06:03 - on the python window
06:06 - let me take S1 s
06:08 - interface window
06:12 - I will slice 9 to 13
06:14 - so that means yes or no
06:17 - 9 is to 13. so it will be taking 9 10 11
06:21 - 12 13 is not included let me check the
06:25 - indexes 0 1 2 3 4 5 6 7
06:32 - 8 9 so 9 is the space and then
06:36 - 10 11 12.
06:39 - so space w i n will be the answer right
06:47 - now I will give only the stop
06:51 - so yes one now let me give 9 here so it
06:55 - should be from the beginning to 9 so
06:58 - that is interface fully it should come
07:01 - yes 9 is not included so the space is
07:05 - not included it came until e
07:09 - now let me give without the stop
07:13 - yes one now from 10 I will start
07:17 - we know the space is 9
07:20 - so that from 10 window fully it came
07:24 - now let us introduce this step here
07:26 - I will start S1 from 3 is to I will give
07:30 - up to 9 is to the step is 2 so that
07:35 - means it will be starting from 3 so that
07:38 - is 0 1 2 3 so 3 is e it will take R it
07:44 - is going to skip and then f it will take
07:46 - a it will Skip and then
07:49 - see it will take
07:52 - then later space is there that is 9 it
07:55 - is not going to be included
07:58 - so let us execute this so it is right
08:01 - let me give now minus index S1 of
08:07 - minus 12 is to
08:11 - minus 15 I'll give and then remember
08:14 - this is going from right to left the
08:16 - step is minus 1 so r e t
08:21 - so let us check this output 1
08:24 - that is minus 1 minus 2 minus 3 minus 4
08:28 - minus 5 minus 6 minus 7 minus a minus 9
08:32 - minus 10 minus 11 minus 12 so it is
08:36 - minus 12 R is taken minus 13 minus 14
08:42 - is not included so r e t it has come
08:46 - right
08:48 - now let me give S one of bigger to
08:51 - smaller I give 9 is to
08:55 - 2 but I am not giving the steps now
08:59 - see bigger to smaller means it will be
09:02 - from right side to left side
09:07 - that means it is going in reverse the
09:09 - step supposed to be -1
09:12 - but I am not giving the steps
09:15 - so when the steps is not given it is
09:17 - taken as 1 by default
09:19 - one means it will be going from left to
09:22 - right
09:23 - so it cannot go like that then the
09:26 - output will be empty string
09:29 - similar way yes or now
09:32 - 2 is to 9 I give
09:35 - and the step is minus 1.
09:38 - see that this is also not possible
09:40 - because 2 to 9 is from left to right but
09:46 - minus 1 is right to left
09:50 - here also it will be giving the empty
09:52 - string
09:53 - now let me mix positive and negative
09:56 - both the index numbers
09:58 - S one of I start from 5
10:02 - and then end at minus 8.
10:07 - so 5 is f here
10:10 - minus 8 is let us check
10:13 - minus 1 2 3 4 5 6 7 8. so minus 8 is e
10:22 - which will not be included
10:25 - so fpsc should be the output
10:31 - now I am leaving yes or no
10:34 - minus 8 is to
10:38 - minus 1. I have given minus 8 so from
10:42 - right side it will be coming and then
10:45 - the end is not given so end is not given
10:49 - means it will be taking from minus 8
10:53 - remaining until the beginning that means
10:56 - from right to left let us check what is
11:00 - the output here
11:02 - you can see that it is reversed
11:05 - interface
11:07 - if you give yes or no blank blank and
11:11 - minus 1 it will completely reverse
11:15 - so you could see that
11:18 - interface window
11:21 - now I will slice the string and put it
11:23 - into S2 that is S1
11:26 - of
11:27 - let me give
11:29 - blank and then 5.
11:33 - now I am writing yes 3 is equal to
11:38 - yes or now five and blank
11:44 - see S2 is from the starting to the
11:48 - 5 and then S3 is from 5 to the end
11:52 - now if I join both we will be getting
11:55 - the same original string
11:59 - S2 Plus S3
12:03 - even if we give the negative index like
12:05 - this it is going to be same
12:08 - let me take
12:10 - yes or now blank and then
12:13 - minus 6
12:17 - Plus
12:20 - minus 6 and blank
12:24 - so it is the original string let me give
12:27 - this top as more than the last index
12:31 - we can take also the last index by
12:34 - calculating the length and -1
12:37 - let us take lenov
12:39 - S1
12:41 - so it is 16 the last index number will
12:44 - be 15.
12:47 - let me give more than this
12:49 - one now
12:53 - 7 is to
12:55 - 25 it will be going until the end of the
12:59 - string there won't be any problem in
13:01 - this but let me give
13:03 - yes or now
13:05 - minus 25
13:07 - is to 25
13:09 - so minus 16 supposed to be the first
13:12 - letter but I have given minus 25 the
13:15 - stop index number is more than the last
13:17 - index let us check what happens
13:20 - this also gives the full string so it is
13:24 - available from minus 16 it will take and
13:26 - then it takes until the end of the
13:29 - string
13:31 - now I give S one now
13:33 - the beginning is minus 1 is 2 and then
13:37 - ending I am not giving the step is minus
13:39 - 1. so this also will be reversing the
13:42 - string as end is not given it will reach
13:45 - until the beginning of the string
13:49 - now you will be having clear idea of
13:51 - slicing the strings in Python
13:55 - keep watching my channel
13:57 - keep learning
13:58 - keep sharing
14:01 - thank you