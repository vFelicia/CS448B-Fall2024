00:02 - hello everyone
00:04 - in this video lesson we are going to
00:06 - learn
00:07 - iteration or looping in python
00:13 - computer program used to have repetitive
00:15 - task to execute
00:18 - loops are used to repeat the task with
00:20 - the desired conditions
00:22 - python provides
00:23 - two kinds of loops
00:26 - counting loop
00:27 - and conditional loop
00:32 - counting loop is the for loop in python
00:35 - language
00:37 - this executes the body of the loop
00:40 - repeatedly until
00:42 - all the elements of sequence are
00:44 - available here is the flowchart for
00:46 - understanding for each elements in the
00:48 - sequence is being mentioned in the for
00:50 - loop it checks whether the next element
00:53 - is available or not if the element is
00:56 - available then executes the body of the
00:59 - loop
01:00 - that is statement or many statements and
01:02 - then it again checks
01:04 - for the next element if it is available
01:07 - again it repeats otherwise it exists the
01:10 - for loop the general format that is
01:12 - syntax
01:14 - for the for loop is
01:16 - far is the keyword and then loop
01:18 - variable is mentioned
01:20 - in is a keyword then the sequence and
01:23 - then colon
01:26 - after a indent the statement is given
01:28 - one statement is compulsory remaining
01:30 - statements are also mentioned here
01:38 - let us practically execute and check
01:40 - here i have three programs to
01:42 - demonstrate
01:44 - the first one is create a program
01:46 - to print
01:48 - one to ten for this i will have a for
01:50 - loop with a sequence so the sequence
01:52 - which i take will be
01:54 - range of function which we already
01:56 - learnt in the previous class let us
01:58 - write the code for i take a variable
02:01 - called i for this loop i in range and
02:05 - then i open this bracket i need to print
02:07 - from 1 to 10 for that purpose i should
02:10 - take 1
02:12 - until 11 so that 11 is not included and
02:15 - then i keep a colon here the next line
02:18 - will be after one indent i will print
02:21 - this i i
02:22 - is the
02:23 - element which is in the range see just i
02:25 - print here
02:27 - i
02:30 - let us execute this
02:32 - you can see the numbers from 1 to 10 has
02:34 - been
02:35 - printed it has come in the next next
02:37 - lines as every print statements ends
02:41 - with the new line
02:44 - so if we want to
02:46 - write it in the same line we have
02:49 - something called
02:50 - end equal to and then however we need to
02:53 - end
02:54 - usually it is backslash and that is a
02:57 - new line instead of that the end is
03:00 - assigned by us if i give simply open and
03:03 - close quotation it is not going to have
03:06 - any type of break there
03:08 - so it will be continuously printing
03:11 - let us even check this
03:13 - so you can see that it is continuously
03:15 - printing it looks like a single number
03:18 - so what we can do here if we write one
03:21 - comma
03:22 - or if we give the space
03:25 - so for example i give here two space
03:28 - and then save this and
03:31 - you can see with the space numbers are
03:34 - displayed
03:36 - the second one create a python program
03:38 - to print multiples of given number up to
03:41 - n terms here up to n terms multiples of
03:44 - given number so we need two inputs one i
03:47 - take it as m
03:49 - which is multiple
03:50 - so i give
03:52 - integer of input to take the integer
03:54 - type of input
03:56 - enter the number
03:58 - to have the multiples
04:02 - i take n
04:03 - again integer type
04:07 - enter the number of terms
04:11 - now
04:12 - i need to print n times so for that
04:16 - purpose i will give the range from 1 to
04:19 - n plus 1 so when i give n plus 1 it
04:22 - stops at n
04:24 - for i is the variable for me in range
04:30 - 1 comma n plus 1 print i take this i and
04:34 - multiply that with m
04:36 - so every time
04:38 - i value keeps changing 1 2 3 4 until
04:42 - that
04:42 - n
04:44 - and then every time it multiplies with m
04:46 - and then it will be printing
04:49 - if i need to print in the same line i
04:51 - will be giving end equal to
04:53 - and then i can also give a comma or some
04:56 - space i give here now comma let us
04:59 - execute and check i give 6 as multiple
05:03 - and then i need 10 times
05:06 - you can see all the multiples of 6 from
05:09 - 1 to 10 is being displayed
05:12 - i have here the third program create a
05:15 - python program to print the sum of all
05:18 - even numbers from 11 to 50.
05:21 - i need to take the sum of these even
05:23 - numbers from this range
05:26 - for that purpose i need a variable
05:28 - in the beginning the sum supposed to be
05:31 - 0 so i initiate like that sum is equal
05:34 - to 0
05:35 - now i will give a for loop
05:38 - with i as a variable
05:41 - in range
05:43 - i can do in two different methods one is
05:46 - starting from 11 and ending at 51. how
05:50 - do i check whether it is even or not i
05:52 - will check with the condition if the i
05:54 - is the number traversing from 11 to 51
05:57 - so 11 12 13 14 it keeps going one by one
06:02 - all the numbers but all the numbers are
06:04 - not even numbers i will be checking i
06:08 - mode 2 so i divide by 2 and get the
06:10 - remainder if the remainder is 0
06:13 - then it is a even number
06:15 - then what i will do
06:17 - i will take the sum of that so that
06:19 - means sum
06:21 - plus equal to i so after taking the sum
06:24 - i can print this
06:26 - see listen while printing if i print
06:29 - inside the for loop every time it takes
06:31 - the sum it keeps printing so until the
06:34 - last it will be printing every term of
06:38 - sum that i don't require i will be
06:41 - printing this
06:42 - outside the loop so i will come out of
06:45 - this loop by coming back two more
06:47 - intense print
06:50 - sub
06:52 - so only the last sum
06:54 - will be printed
06:56 - so you can see it is 620
07:01 - what is the other way
07:03 - i can directly take here
07:05 - the
07:06 - even number next to 11 that is 12
07:09 - and then i can stop at 51 that is right
07:13 - but the step will be here too so every
07:15 - time it will be jumping leaving one
07:18 - number so that 12 14 16 it comes and
07:20 - then it will be taking
07:22 - for that purpose i don't need to check
07:24 - whether it is even or not just i will
07:27 - take the
07:28 - sum and then i check now
07:30 - again the same result we get let me show
07:34 - if the printing statement is inside the
07:36 - for loop
07:37 - what it does
07:40 - as i said every time it prints c 12 and
07:43 - the next 14 so 12 plus 14 is 26
07:47 - plus 16 right so that is 42 like that it
07:51 - keep printing every time it takes the
07:53 - sum at that end it is 620 this is just
07:57 - for your reference i am showing
07:59 - this is not needed hope the concept is
08:01 - clear now let us see the conditional
08:04 - loop in the next class
08:06 - thank you