00:00 - all right y'all welcome back to another
00:02 - video and in this one we're gonna be
00:04 - talking about truffle
00:06 - now this video is not to be confused
00:08 - with the other video i have of myself
00:10 - just eating truffles on my other
00:13 - personal youtube channel
00:15 - but this one we're going to be talking
00:17 - about the truffle development tool for
00:20 - ethereum smart contracts
00:22 - and on the website
00:24 - it doesn't really give you a lot of
00:25 - description of what it is just as sweet
00:28 - tools for smart contracts
00:30 - and it's kind of vague to understand
00:32 - really what it is at first glance
00:34 - however it's kind of an accurate
00:36 - description because there are indeed a
00:38 - lot of tools included in this
00:40 - not only an entire development framework
00:42 - but project templates there are easy to
00:45 - use scripts for compilation and
00:48 - deployment and really lots of handy
00:50 - tools that we're going to be covering
00:51 - one by one
00:52 - but
00:53 - any hoot go ahead and go to
00:55 - trufflesuite.com
00:57 - and another thing is i usually make my
01:00 - own content for these tutorials however
01:02 - for this one specifically we're going to
01:04 - be changing things up and following
01:06 - their quick start guide actually went
01:08 - through this and it includes everything
01:10 - that i think is great for you know
01:12 - getting started getting to learn truffle
01:14 - so instead of trying to reinvent the
01:16 - wheel we're going to be going through
01:18 - this so if you get lost or if you want
01:19 - any of the code then if you go to
01:21 - truffle quick start it's all going to be
01:23 - there
01:24 - and on that note let's go ahead and
01:27 - minimize this now before we get started
01:29 - writing any code i do want to mention
01:30 - that there are going to be two
01:32 - prereqs for this and that is
01:35 - you need to have git installed and you
01:38 - also need to have node n-o-d-e installed
01:41 - i'm not going to walk through those
01:42 - processes because i'm assuming if you're
01:44 - a developer especially writing dapps in
01:47 - you know a lot of javascript code you
01:49 - probably already have those two things
01:50 - installed but if you have any questions
01:52 - then go ahead and hop over to our
01:54 - discord and we can help you out there so
01:56 - anyways once you have get and node
01:58 - installed then we can go ahead and
02:00 - install truffle so how do we install
02:02 - truffle so let's go ahead and run sudo
02:05 - npm
02:06 - install minus g and this means globally
02:10 - truffle
02:11 - now i am not going to
02:14 - run this because actually i already have
02:15 - it installed but what i am going to do
02:17 - is cd
02:22 - over to a directory and this is just
02:24 - where i keep my projects it's on my
02:26 - desktop a little projects folder and i'm
02:29 - just going to create an empty directory
02:31 - and then we're going to be uh putting
02:32 - the code in there
02:34 - so
02:35 - i'm gonna call it metacoin again this is
02:38 - from the quick guide
02:40 - so now that we got that installed let me
02:42 - go ahead and open that
02:44 - and by the way whenever you open this
02:46 - you can actually use any ide that you
02:48 - want i'm gonna be using webstorm but if
02:51 - you have another one then that's fine
02:52 - too
02:53 - so go ahead and open
02:55 - and just pull this over show you guys
02:57 - what's going on so i had it in desktop
03:00 - projects and that was called
03:02 - metacoin go ahead and open that
03:05 - all right so now we have our project
03:08 - open again just a plain empty directory
03:11 - not even a single file right now
03:13 - now what i'm gonna do is pop open my
03:15 - terminal and by the way webstorm comes
03:18 - with a built-in terminal it's pretty
03:20 - much the exact same thing as using this
03:22 - just a little bit more convenient since
03:24 - it's baked into the ide
03:26 - and once you have a terminal open
03:27 - whether it's baked in or not what we can
03:30 - do is we can run the unbox command and
03:33 - what this is going to do actually let me
03:35 - type it out so
03:37 - truffle
03:38 - unbox metacoin
03:40 - so what this is going to do is
03:42 - essentially use something called a box
03:44 - and let me pull up the truffle website
03:46 - to show you what boxes are
03:48 - so truffle boxes are
03:51 - well there are actually a couple of
03:52 - things their example apps or project
03:55 - templates
03:57 - you can kind of think fit like
03:58 - boilerplate that you can use whenever
04:00 - you initialize a new project it's almost
04:03 - like create react app if you're familiar
04:05 - with that
04:06 - so if not you'll see in just a sec what
04:08 - it's going to do but we are going to be
04:09 - using a box called metacoin which is
04:12 - basically just like a very stripped down
04:14 - bare bones mvp um project so let me go
04:18 - ahead and run this and
04:20 - might take a bit
04:21 - all right directory is not empty even
04:23 - though it is i think there might be some
04:25 - hidden ide files in here so either way
04:27 - just gonna hit y
04:29 - and all right so let me expand this in
04:31 - case there's any juicy output so what
04:33 - did it say preparing to download it
04:35 - downloaded something
04:36 - it had some temporary files set up the
04:39 - box okay and then at the end it said
04:42 - uh you have some new commands now
04:44 - truffle compile truffle migrate and
04:46 - truffle test
04:47 - huh interesting so let's take a look at
04:49 - what just happened
04:51 - so now in our project if we expand this
04:53 - we can see that we do
04:55 - have indeed some source code files in
04:57 - here
04:58 - specifically three directories one
04:59 - called contracts one called migrations
05:02 - and one called tests then we have get
05:04 - attributes a license in this truffle
05:06 - config javascript file so let's go ahead
05:09 - and start with this contracts directory
05:11 - and see what's in here
05:13 - so as you could guess pretty similar to
05:15 - remix is that in here we have our
05:18 - solidity contracts so whenever we create
05:20 - new ones that's where they're gonna go
05:23 - now unlike remix we also have this
05:25 - migrations directory
05:27 - so what's in here
05:28 - so migrations are javascript files that
05:31 - help you deploy contracts to the
05:33 - ethereum network and that's all we have
05:35 - to understand for now later on we're
05:37 - going to be getting our hands a little
05:39 - bit dirty and taking a closer look at
05:41 - that but right now that'll be fine
05:44 - and the last directory is this test
05:46 - directory and of course you could
05:49 - probably guess these are the files that
05:51 - you're going to use for testing not only
05:53 - your application and by that i mean your
05:55 - javascript files but testing for your
05:58 - solidity contracts as well now for git
06:00 - attributes license we can skip over this
06:03 - is related to git this is basically just
06:05 - saying that if we push this up to github
06:07 - then all of our source code is going to
06:09 - be under the mit license by default feel
06:12 - free to change that
06:13 - and this last one truffle config pop
06:16 - this open take a look at it real quick
06:17 - this is actually an important file of
06:20 - course your truffle configuration file
06:22 - for the project and this has settings
06:24 - related to the solidity compiler what
06:26 - version you're using
06:28 - um what network you're deploying to so
06:30 - on and so forth and that is the basic
06:33 - project structure
06:34 - so
06:35 - with that in our heads let's go ahead
06:37 - and try to run some of those commands
06:40 - that we got suggested from truffle right
06:43 - here
06:44 - so the easiest one to get started with
06:46 - is probably truffle test and again you
06:48 - can use this command to run tests not
06:51 - only for solidity files but also on
06:53 - javascript files and i'll show you the
06:56 - syntax for this
06:58 - let me clear my terminal so anytime you
07:00 - want to run a solidity test and we'll
07:02 - pop open this file real quick
07:04 - so again i know we only wrote one smart
07:07 - contract and there's a lot of syntax
07:09 - that you know we have yet to cover
07:11 - but just showing you that this is indeed
07:14 - um a testing file for solidity
07:17 - and anytime we want to run these tests
07:20 - then what we can do is we can run
07:21 - truffle
07:23 - and then the command
07:25 - is
07:26 - test
07:27 - and then what we can do right after this
07:28 - is just write the
07:31 - path to the testing file
07:33 - so
07:34 - i'm going to start with period that
07:35 - means my current directory where am i
07:36 - going to go well the tests are in the
07:39 - test directory
07:40 - right here and the file is called test
07:42 - testmetacoin.sol
07:45 - oops type in the wrong place here
07:48 - testmetacoin.sol so again truffle test
07:51 - and then a path to the file that you
07:52 - want to test hit enter
07:54 - and all right so it looks like there are
07:56 - two tests in there and they both passed
07:59 - so that's fantastic
08:01 - now another thing that i want to point
08:02 - out again you can probably guess this
08:04 - too
08:05 - but for testing this javascript file you
08:08 - actually use the exact same command
08:10 - which is very cool about this and that
08:12 - file is called metacoin.js so again
08:15 - truffle test
08:16 - and this last file path argument it
08:19 - doesn't matter if it's a solidity file
08:21 - or javascript file go ahead and hit
08:23 - enter and run that and all right looks
08:25 - like there are three tests in that
08:27 - javascript file and those all passed
08:29 - now some other quick commands we can
08:32 - touch on is first the compilation
08:34 - command or in other words how do you
08:36 - compile your smart contracts and that
08:39 - one is truffle compile
08:42 - so you hit enter so again that was the
08:44 - command compile your smart contracts and
08:47 - at the end of that you should see a
08:48 - build directory with some artifacts in
08:50 - here and we're going to be digging into
08:52 - these
08:53 - understanding exactly what those are in
08:55 - well probably the next tutorial but for
08:57 - now i just want to kind of cover the
08:58 - basic commands so let me pop back open
09:01 - my terminal and cover one more and that
09:04 - is
09:05 - truffle
09:06 - develop so this is a pretty interesting
09:08 - one because what this does is it creates
09:10 - and runs a built-in personal blockchain
09:12 - that you can use for testing and
09:14 - development and also
09:16 - in this process
09:18 - it gives you this interactive prompt and
09:20 - it makes it a little bit easier to run
09:22 - commands since before whenever we wanted
09:25 - to run any of this these commands we
09:27 - have to
09:28 - pretty much write truffle before so
09:30 - truffle test truffle compile so on and
09:33 - so forth however whenever you are in
09:35 - this interactive prompt you can
09:37 - essentially leave out that truffle
09:39 - keyword or command at the beginning so
09:41 - for example whenever you just want to
09:43 - compile you can just write compile and
09:45 - it works exactly the same as before just
09:48 - you know save you some typing time
09:50 - now the last command that i want to go
09:52 - over right now is migrate so what
09:55 - migrate is going to do is it's going to
09:57 - deploy your compiled smart contracts to
10:00 - the blockchain so let's go ahead and hit
10:02 - enter
10:03 - and alright if we scroll up a little bit
10:06 - so up here we can see a little cost
10:08 - summary says you deployed three
10:10 - contracts this was the final cost
10:13 - and some other info that we'll be
10:15 - getting into a little bit later some
10:17 - transaction ids and addresses of our
10:19 - deployed contracts
10:21 - but again just really wanted to mention
10:23 - that the migrate command is what you're
10:25 - going to use to actually deploy your
10:28 - contracts to the blockchain now if you
10:30 - really wanted to you can actually just
10:32 - develop and use this console-based
10:34 - blockchain that came with truffle
10:35 - develop
10:36 - however there is a much better tool
10:39 - actually let me close out of this
10:43 - and that is this right here where'd my
10:46 - browser go all right
10:48 - so there's another tool in the truffle
10:50 - suite called ganache and it's
10:53 - pretty similar to the truffle develop
10:55 - blockchain where it's just a blockchain
10:57 - pretty much a virtual ethereum network
10:59 - that runs locally however a key benefit
11:01 - to this is it comes with a much nicer
11:04 - user interface and it just makes
11:06 - developing on the blockchain much easier
11:09 - so go ahead and download this
11:11 - and i'm not going to show you how to
11:12 - download it it's uh pretty simple
11:15 - and also i already have it downloaded
11:17 - and once you do you are going to get
11:20 - this program right here
11:22 - so what we can do for now is just hit
11:25 - quick start ethereum
11:27 - and again this is just going to create
11:29 - basically a very simple like virtual
11:31 - ethereum network virtual ethereum
11:33 - blockchain
11:34 - and similar to remix it's going to come
11:36 - with some sample
11:38 - test accounts
11:39 - and your mnemonic is also right up here
11:44 - and we're going to need that in the
11:45 - future actually
11:46 - so some key things to point out is that
11:49 - your server you can see it right here
11:51 - it's running on localhost and it may be
11:53 - too small for youtube video but it is on
11:55 - port 7545
11:57 - that's the default port and we do have
11:59 - to remember this because what we need to
12:02 - do
12:03 - in our project right here is essentially
12:05 - say hey
12:07 - we are actually running a new
12:09 - development network that we want to
12:10 - connect to from this project
12:13 - and that is this little simulation
12:16 - network right here so in order to
12:18 - configure our project to point to this
12:19 - ganache instance again i don't even know
12:21 - if i mentioned that but this is called
12:23 - ganache what we can do is hop over to
12:26 - our truffle config file
12:28 - and right here
12:30 - where it is
12:33 - all right and i believe that
12:36 - okay
12:37 - so just had to uncomment this too since
12:40 - uh that's where the
12:41 - closing bracket was but essentially
12:44 - uncomment this development network
12:46 - and this is gonna have your host again
12:49 - this is localhost it is on port 7545 the
12:52 - network id we don't have to worry about
12:54 - right now and also make sure you
12:56 - uncomment this since it's the closing
12:58 - brace for this so now that we are
13:00 - presumably hooked up to this development
13:02 - network let's just go ahead and verify a
13:04 - couple things first and that is okay
13:07 - looks like all of our accounts they
13:08 - haven't been touched they each have 100
13:10 - each
13:11 - all right we got our genesis block no
13:14 - transactions and no contracts on our
13:16 - blockchain either so pretty much verify
13:18 - that this is indeed a brand new
13:20 - blockchain
13:21 - so in the terminal what we can do now is
13:23 - we can run truffle migrate again we have
13:25 - to include the truffle keyword right
13:27 - here because we are no longer in that
13:29 - truffle development tool and let me go
13:31 - ahead and hit enter and what this is
13:33 - going to do is it should migrate that
13:35 - contract and it looked like everything
13:37 - went our right so if so then that would
13:40 - mean that it migrated our contracts over
13:42 - to the blockchain created by ganache
13:45 - so okay this is promising first because
13:48 - pop this back open and we see 99.99 eth
13:51 - so something happened that cost one or
13:54 - point zero one eighth around that
13:56 - so now let's hop over to blocks okay
13:59 - nice got some more blocks now and
14:01 - transactions
14:03 - all right nice so it looks like that was
14:06 - indeed successful now the last thing
14:08 - that i want to do is show you how you
14:09 - can interact with not only this deployed
14:12 - contract but kind of the blockchain
14:13 - overall
14:14 - and that is using a tool called truffle
14:18 - console
14:19 - now i'm going to hit enter and at first
14:21 - this is going to look like the other
14:23 - tool that we just had open truffle
14:25 - develop however there are a couple key
14:27 - differences the truffle develop tool
14:29 - that always connects to that truffle
14:32 - console version of the blockchain
14:34 - whereas truffle console what this does
14:37 - is it connects to an existing blockchain
14:40 - and since we configured our project
14:42 - to point to that ganache blockchain what
14:45 - it's going to connect to is this one
14:47 - right here
14:48 - so how can we verify that it's working
14:51 - well let's go ahead and try to get a
14:53 - reference to these accounts so if we can
14:56 - print out this account number then we
14:57 - know it's connected to the right
14:58 - blockchain so how do we do that
15:01 - we'll pop this open again and alright so
15:04 - a lot of the syntax we're going to be
15:05 - covering in more detail later on again
15:08 - getting into the weeds in the upcoming
15:09 - videos but for now
15:11 - just a real simple uh demonstration
15:14 - let's go ahead and create a variable
15:16 - called accounts and again this is
15:18 - javascript syntax let's go ahead and
15:20 - wait and just type in web3
15:23 - dot if dot get accounts and again i know
15:26 - i'm kind of running through this be like
15:28 - what is a web 3 what is eth what is this
15:29 - git accounts function yada yada but kind
15:32 - of just to go over the basics of truffle
15:34 - right now
15:35 - so i'm going to hit enter it says
15:36 - undefined
15:37 - now hopefully all of our test account
15:39 - should be stored in this array right
15:42 - here so just to verify that let me go
15:44 - ahead and just log out accounts zero
15:47 - and okay so
15:49 - 0x009 it starts with and 5426 looks like
15:54 - it ends with
15:55 - and it looks like 0x009 and 5426
16:00 - would you look at that so there you go
16:02 - there is your basic overview to truffle
16:04 - again there's a lot more to it but we
16:07 - are going to be getting into the weeds
16:08 - covering everything in more detail in
16:10 - the upcoming tutorials so for now thank
16:13 - you for watching don't forget to
16:14 - subscribe and i will see you in the next
16:15 - video