00:00 - in this case the background color is
00:01 - going to be white but we still need to
00:04 - do specify the color of the background
00:07 - using RGB numbers if you like or
00:12 - integers so we need to create the image
00:16 - width and the image height so I'm going
00:17 - to create a variable called image
00:19 - underscore width and that's going to
00:21 - equal in fact we'll do height first
00:22 - because that's the easy one height
00:24 - equals and the function we're using is
00:27 - image font height so we image font
00:30 - height and we've got camel caps he
00:32 - remembers we've got capital H F and a
00:34 - capital I so image front high and all we
00:37 - do is we simply grab the we simply grab
00:41 - the the font size that we're using so we
00:45 - just say font underscore of size simple
00:48 - as that so now what we need to do is
00:52 - determine the width so the width is
00:53 - going to be structured slightly
00:54 - different to this but it's going to be
00:56 - more or less the same we just have one
00:58 - addition to the end of this line so
01:01 - we've got image font width and that's
01:05 - again from the font size so we're taking
01:07 - the width from this font size for now
01:10 - however what we need to do is we need to
01:12 - multiply this by the string length two
01:15 - in order to create a font width there's
01:19 - exactly going to fit our characters in
01:21 - so we need to do is multiply this by
01:24 - email length now like I said what this
01:30 - is going to do is it's going to multiply
01:31 - this by in this case 19 I think like we
01:35 - said so we're going to be multiplying
01:37 - however big one character is or the size
01:40 - that the characters in the in the font
01:43 - go in I'm going to be multiplying that
01:45 - by 19 so we're going to have enough room
01:48 - for our text I'll show you later maybe
01:51 - change it around if not you can you can
01:53 - obviously play around with this value to
01:56 - see what happens and you're cut off your
01:58 - image basically so now what we need to
02:00 - do is create an instance of our image
02:02 - that we are creating so we're going to
02:05 - take into account two arguments this is
02:06 - going to be the image height and the
02:08 - image width so let's go ahead and create
02:11 - a variable just called
02:13 - so this is image create oak create and
02:17 - we first will need to specify the width
02:19 - and the height that's the default
02:20 - ordering for this so we need to say
02:24 - image width comma image underscore
02:30 - height so we've specified the two
02:32 - variables that we've created here now
02:34 - our image is created inside this
02:36 - variable here and we can start doing
02:38 - things like allocating colors to it now
02:41 - the first thing we're going to do is
02:42 - we're going to allocate a background
02:44 - color so our background color is going
02:46 - to be white and our foreground color if
02:49 - you like or our text color because we're
02:51 - going to use a function called image
02:52 - string which basically outputs a
02:55 - horizontal string along our pet along
02:58 - our image rather and we're going to need
03:01 - to take in a couple of parameters so the
03:02 - parameters that we're going to need or
03:04 - one of them is the color so the first
03:07 - one remember I said the function is
03:09 - called image allocate now or image color
03:14 - are allocate sorry this I've used
03:18 - without defining a variable because what
03:20 - we need to do is this will simply just
03:22 - set the background color to our image
03:24 - we're going to specify what we you know
03:28 - the instance of our image in here so
03:30 - we're going to type in image here so we
03:32 - know that we're just getting a general
03:35 - color to this image here okay and that
03:38 - color is going to be 255 for the red 255
03:41 - for the green and 255 for the blue so
03:44 - we've got an RGB value of 255 255 255
03:47 - which is some of you may know if you've
03:49 - worked with colors before that is white
03:52 - so we've allocated a general color to
03:55 - our image so we've put a white
03:56 - background in now what we need to do is
03:58 - actually create a variable that's going
04:01 - to we're going to be able to specify the
04:03 - color of our text when we output it so
04:06 - with the fonts as with the font size I'm
04:08 - going to say font underscore color and
04:10 - this is going to be equal to image color
04:13 - allocate so I'm using exactly the same
04:15 - function I'm applying it to exactly the
04:18 - same image so we've got image and image
04:21 - but this time I'm going to set the RGB
04:23 - values to 0 0 0 and again for those of
04:26 - you
04:27 - work with colors or recognize what this
04:29 - could be this is the color black so
04:31 - we've got black here with zero zero zero
04:33 - so we've got opposite ends of the scale
04:34 - zero being the minimum two five five
04:37 - being the max and we've got white and
04:38 - black so that's pretty simple
04:40 - obviously I encourage you to play around
04:42 - with different color values play around
04:45 - with different things like that and
04:46 - you'll get a lot used to using these
04:49 - functions and how they work so now what
04:52 - we need to do is just use a stand on its
04:54 - own we're not going to we're not going
04:56 - to put it into a M into a variable and
04:59 - this is called image string and this in
05:01 - total takes six arguments so we're
05:06 - taking six argument into this image
05:08 - string or parameters so I'm just going
05:10 - to type image string so the title of the
05:14 - function sort of gives it away we've got
05:16 - image which is what we're creating
05:17 - essentially and string so we're creating
05:20 - an and image from a string so the first
05:24 - thing we're going to do is give
05:25 - reference to the image that we've
05:27 - created or the canvas that we've created
05:28 - we've applied our color to our canvas
05:31 - we've created a variable called font
05:32 - color which we're using inside our image
05:35 - and we can specify that color in here we
05:38 - now need to say what the font size is
05:39 - going to be so that is font underscore
05:41 - size remember we set that out there to
05:43 - four we're then going to specify the X
05:46 - and the y coordinates where we're
05:48 - placing this text or this string inside
05:51 - our image now because we've created it
05:54 - with the height of exactly the font
05:55 - height and we've created it the width of
06:00 - exactly the font width we're going to
06:02 - set this to zero zero it's going to be
06:04 - in the top left hand corner and the
06:06 - reason for this is because if we will
06:07 - set this to any positive amount or any
06:09 - negative amount in fact it's going to
06:11 - overlap or underlap and we're not going
06:13 - to be able to see anything but again
06:15 - these are these are values that you can
06:17 - change and play around with after you
06:19 - finish for the tutorial so you can feel
06:21 - free to see how they work okay so the
06:24 - next is the email we need to specify the
06:27 - email address that were we're echoing
06:28 - out which is in fact the string data so
06:30 - we're going to say email that's pretty
06:33 - simple and then last but not least is
06:36 - the font color so
06:37 - font underscore color which we specified
06:40 - here remember notice that no we're
06:42 - inside here are we setting the
06:44 - background color that's why I left it
06:46 - without declaring it and putting it
06:49 - inside a variable so we've done image
06:51 - string you might think that we're done
06:53 - without put a string in image in image
06:57 - format but now what we need to do is
06:59 - finalize and create our image and we do
07:01 - this with the function I mentioned
07:03 - earlier it's image JPEG without the O so
07:07 - what we're doing is we're outputting our
07:08 - image so with this image string we've
07:12 - with we've modified this image this
07:15 - instance of our image here that we
07:16 - created image create now what we're
07:19 - doing is we're outputting it make sure
07:20 - you don't forget your semicolons on the
07:22 - end of the line and now we are pretty
07:24 - much done so now what we can do is test
07:26 - it hopefully it works and then if it
07:29 - doesn't work we can fix it and if it
07:30 - does we can look at how we can use it
07:32 - more practically because you remember I
07:34 - mentioned earlier that we can't use HTML
07:37 - output either before or after our PHP
07:40 - tags because what we've done is we've
07:41 - changed the content type of this entire
07:43 - page to an image