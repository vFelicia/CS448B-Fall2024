00:00 - hi this is Alex from PHP academy' dog
00:02 - and this is another video tutorial
00:04 - created for the new Boston now in this
00:08 - tutorial we're going to be creating a
00:10 - unique hit counter by uniq hit counter I
00:13 - mean exactly the same as a non-unique
00:15 - hit counter however we're going to be
00:17 - recording the user's IP address and by
00:21 - you recording the user's IP address
00:23 - we're going to get a lot more accurate
00:25 - figure it won't be entirely accurate
00:27 - because IP addresses obviously do change
00:29 - but we're going to get a lot more
00:31 - accurate figure as to how many unique
00:33 - visitors we have taken on our website so
00:36 - how many people are visited uniquely so
00:40 - as per the last tutorial the non unique
00:42 - hit counter if you've already watched it
00:44 - we've got index dot PHP file account not
00:47 - PHP file and account txt file now we're
00:51 - also going to have to include a new file
00:53 - and that is going to be called and let's
00:57 - just save this file out that's going to
00:59 - be called our IP IP dot txt so we're
01:04 - going to have IP addresses in here of
01:07 - users that have visited the website
01:09 - they're going to be stored every time
01:12 - they visit so the first thing we're
01:14 - going to do is we're going to counter
01:16 - hit but then we're going to take their
01:18 - IP address and we're going to store it
01:21 - in this file and a line by line basis so
01:23 - I have say one two seven or not dot one
01:27 - and then we'll have another IP address
01:29 - on the next line and we'll have so on
01:33 - and so on
01:35 - so for now I'm going to leave this blank
01:37 - the first thing we need to do though
01:39 - before we do any of anything is we need
01:42 - to check that the IP address doesn't
01:43 - already exist now we can use the file
01:46 - function in PHP to check or to read in a
01:50 - file on a line by line basis which is
01:53 - then stored in an array and what this
01:55 - does is it allows us to take each IP
01:57 - address on each line and carefully well
02:00 - check each one on each line so it's a
02:05 - lot it's a really really easy way of
02:06 - doing things so the first thing we're
02:09 - going to do inside count PHP is
02:12 - create a function called hit underscore
02:15 - count and this is going to be called
02:17 - from index dot PHP every time so we have
02:21 - the freedom we're including this count
02:23 - file at yet we're going to include count
02:26 - PHP and then we're going to have the
02:29 - choice if we want to hit count or not so
02:33 - we can include it but then we can use it
02:36 - we could use it saying an if statement
02:38 - or say if a particular user is using the
02:43 - Chrome web browser then we can count so
02:47 - there's a variety of ways the variety of
02:50 - benefits of using a function so let's
02:55 - just call this function for now so later
02:58 - on we can test it correctly so a cat in
03:03 - count at the moment there's a value of
03:05 - zero in IP we don't have any IP
03:07 - addresses so the first thing I want to
03:09 - do is establish the user's IP address
03:11 - now I'm going to be using a simple way
03:17 - to grab the user's IP address and that
03:19 - is using the dollar underscore server
03:22 - predefined variable and we're using
03:24 - remote address so this is some viral
03:28 - environmental information about the user
03:31 - so let's just echo this out and we can
03:34 - see that that's going to produce my IP
03:36 - address and there's another tutorial on
03:38 - this if you haven't already watched here
03:40 - and there's also another tutorial about
03:42 - how to properly detect the user's IP
03:44 - address so I'm using this now for the
03:46 - purpose of this tutorial but I recommend
03:48 - you look up the other tutorial that I've
03:50 - I've done and and reading the user's IP
03:57 - address or find the user's IP address a
04:00 - lot more accurately so this is my IP
04:02 - address for now I'm using a local server
04:04 - so it's 127.0.0.1 as refresh and just
04:09 - blank now so we've grabbed the IP
04:11 - address that's something we determined
04:14 - at the start that we did need to do we
04:16 - just swap these files around ok so we
04:18 - would determine the IP address now
04:20 - inside hit count the first thing we need
04:23 - to do
04:24 - is check if this IP address doesn't
04:26 - exist in IP txt there's nothing in there
04:30 - at the moment so obviously for now it
04:31 - doesn't so the first thing we want to do
04:34 - is we want to open up this file so I'm
04:36 - going to create a variable called handle
04:38 - and I'm going to say F or I'm going to
04:40 - say file in fact we can call this an IP
04:47 - underscore file so file and it is IP dot
04:52 - txt now let's just refresh to make sure
04:54 - we don't have any errors
04:55 - okay we're ever free so what we've done
04:58 - now is we've created this variable
05:00 - called IP file which is now an array
05:03 - because the function file opens IP txt
05:07 - and let's say we have line 1 2 3
05:10 - it'll open each line as an array as a
05:13 - value of an array so we've opened this
05:17 - as an array now what we need to do is
05:20 - use the for each construct to UM to grab
05:27 - each um I P address in there so we've
05:30 - got each element of the array so we're
05:33 - going to say for each IP file as by P
05:37 - and what we can do to test this is we
05:39 - can echo out I P and we'll put a line
05:42 - break there as well
05:44 - so in fact we use a comma just to show
05:47 - that we've we've taken this as each
05:50 - element so there's nothing in there at
05:52 - the moment so if we refresh we're not
05:54 - going to have anything on the screen
05:55 - however if we add say test data new line
06:01 - just Pablo - rubbish in there each of
06:05 - these should now correspond for each
06:08 - loop of let's go back to the counter PHP
06:11 - file for each loop of this this IP will
06:14 - be each line so let's refresh and test
06:17 - that so you can see that we're grabbing
06:19 - the data on each line and we we can use
06:22 - this separately so we can check each IP
06:25 - address these will eventually correspond
06:27 - to IP addresses so you'll notice that
06:29 - there's a lines there's a space after
06:31 - each bit of data and let's just change
06:35 - these two IP addresses so we've got
06:37 - more realistic representation okay so
06:43 - let's refresh okay so we've got a space
06:46 - after here now you've noticed that we've
06:48 - not actually specified in here that we
06:51 - want a space after it
06:53 - we've concatenated on this straightaway
06:55 - and that's because when we're reading it
06:57 - in on a line by line basis there's
06:59 - always a space after each element in
07:03 - this array so what we need to do is we
07:05 - need to use the trig function here to
07:10 - remove the white space from the left
07:12 - hand side and the right hand side just
07:14 - in case there are there is new white
07:17 - space now let's refresh and you can see
07:18 - that that white space has in fact gone