00:00 - hello this is Alex from PHP academy' de
00:02 - org and this is a video tutorial for the
00:05 - new Boston in this video I'm going to be
00:08 - looking at extending classes so we can
00:10 - use specific data or rather properties
00:14 - and methods from another class but
00:17 - quickly do this so we've created a new
00:19 - class to use this data we can we can do
00:22 - this on one line but we can also specify
00:24 - additional properties you don't know
00:26 - what I'm talking about
00:27 - then follow along this example this is
00:29 - the bank account class from the previous
00:32 - examples the previous videos if you
00:34 - haven't watched them already go back and
00:35 - do so and the we simply have a class
00:40 - bank account I'll just walk you through
00:41 - got a class bank bank account we've got
00:44 - a property called balance which is by
00:46 - default equal to zero and we have three
00:50 - different methods we've got display
00:51 - balance which simply displays this
00:53 - property we have a method called
00:57 - withdraw which with withdraws a certain
00:59 - amount of money and we have a method
01:01 - called deposit which puts in a certain
01:03 - amount of money so deposits a certain
01:06 - amount of money okay so now what we want
01:08 - to do is we want to think about what
01:10 - happens if we want to create a savings
01:12 - account now the sort of first way of
01:17 - thinking about this would be to maybe
01:18 - copy this come down here paste it in and
01:23 - just change everything around so instead
01:25 - of class bank account we can call it
01:27 - class savings account the balance we can
01:33 - keep the display balance we can keep the
01:37 - withdraw we can keep and the deposit we
01:39 - can keep as well so what we've
01:42 - essentially done is created a new in a
01:45 - new class called savings account but
01:49 - with exactly the same properties and
01:51 - methods of our of our bank account up
01:54 - here now by doing this we've duplicated
01:57 - code and the point of object orientated
01:59 - programming is that you can reuse
02:01 - classes but call them different names
02:06 - and you can
02:08 - add different properties but keep
02:10 - certain aspects of certain aspects of
02:14 - your other class so we do this using
02:17 - extends you notice now I've deleted the
02:20 - duplication of this bank account class
02:22 - what we're going to do now is we're
02:23 - going to create a new class but we're
02:25 - going to do it we're going to do exactly
02:27 - what we just did by copying and pasting
02:29 - but with one line so let's go class
02:34 - savings account now this time before we
02:38 - do this like this all we do is we say
02:43 - extend and then we give the name of the
02:46 - class that we want to extend into this
02:49 - savings account so we're extending this
02:51 - bank account class to this class called
02:53 - savings account so we just type bank
02:56 - account and that's it that's all you
02:59 - need to do inside here you can specify
03:01 - additional properties but as of now this
03:04 - savings account has the all the
03:06 - properties and methods of our bank
03:09 - account class so we've got a public
03:11 - balance and public methods here which we
03:14 - can use within our savings account so
03:17 - let's just go ahead and test this if I
03:19 - was to say Alex savings equals new
03:26 - savings account let's go first of all to
03:29 - our browser and test this ok you can see
03:32 - that nothing's come up at the moment but
03:34 - this basically means that this has
03:36 - worked and now what we can say is Alex
03:40 - savings display balance and let's echo
03:46 - that out
03:49 - so you can see that balance is zero now
03:52 - notice we're using this savings account
03:54 - class so what we what we've done is
03:55 - successfully extended our bank account
03:58 - class into the savings account so we
04:00 - have useful the methods so instead of
04:02 - the first method I just showed you
04:04 - copying and pasting the whole class and
04:07 - just changing the name we're now not
04:09 - reusing any code whatsoever because we
04:12 - are keeping the same class but we're
04:14 - just creating a new class as an
04:15 - extension of the main bank account class
04:20 - so we found a lot a much easier way of
04:24 - doing things so let's run these
04:26 - side-by-side we've created our savings
04:28 - account and let's maybe with let's maybe
04:31 - deposit some money into our savings
04:33 - account so Alex savings deposit and
04:37 - let's deposit deposit 3000 pound in here
04:40 - and up here we'll create a normal bank
04:43 - account so Alex equals new bank account
04:51 - and we'll say Alex deposit and we'll
04:59 - deposit just a hundred in here and then
05:02 - we'll display both the balances at the
05:03 - end so what we've done is we've created
05:04 - a new bank account which is our main
05:06 - class we've deposited a hundred pounds
05:09 - we've created a savings account class
05:11 - with an instance of our savings account
05:12 - class which we've deposited three
05:15 - thousand pound but remember this is not
05:17 - a main class this is our extended class
05:19 - from bank account however even though
05:22 - we're using it side by side and we're
05:24 - creating a new instance of bank account
05:26 - and savings account we can use both
05:28 - simultaneously so now what I can do is
05:30 - say echo Alex display balance
05:38 - and we can put a line break on there
05:40 - just so we can keep things neat and then
05:42 - we can say echo Alex savings which is
05:46 - our savings our extended class we can
05:49 - say display balance as well so now what
05:53 - we should do is we should create with
05:55 - what we're doing is we're creating a new
05:56 - bank account and the new savings account
05:58 - and we are depositing three thousand
06:01 - pound in here and a one hundred pound in
06:03 - there and then displaying our balances
06:04 - so let's have a look at that under find
06:07 - property display balance okay movie or
06:09 - spell that wrong oh okay sorry
06:12 - and I didn't include the parentheses on
06:14 - the end so some things to watch out for
06:15 - okay so we've got balance 100 and
06:18 - balance 3000 so these could correspond
06:20 - to the correct values that we deposited
06:22 - in earlier let's just make it
06:24 - interesting and I'll say Alex withdraw
06:30 - and we'll withdraw so 20 pounds we've
06:34 - forgot the greater than sign there so we
06:37 - were left with this value so you can see
06:39 - that we can do different things to
06:40 - different our different classes now that
06:43 - we've created new instances of them even
06:45 - though we haven't put anything in here
06:47 - we've extended so we can use the methods
06:49 - and properties inside but what we can
06:51 - also do in more interestingly is we can
06:54 - specify additional properties that we
06:56 - want now inside our savings account and
06:59 - we can do the same with methods as well
07:00 - so we can specify additional methods and
07:03 - additional properties inside the savings
07:05 - account clark's