00:00 - so we need to continue in login form to
00:03 - actually log the user in so how are we
00:05 - going to do this first of all we need a
00:08 - query and this is going to be equal to
00:11 - select and we need to select the
00:14 - username user name and password from and
00:23 - that lets go reference back to our table
00:26 - to see from users so it's selecting from
00:30 - users where and then we're going to say
00:35 - username is equal to username and
00:44 - password is equal to password so we've
00:49 - constructed here a query where we're
00:52 - selecting the username and password in
00:55 - fact we don't even need to do that let's
00:59 - just select the ID so we're selecting
01:02 - the ID from our users table where the
01:07 - username is equal to Alex in this case
01:11 - and the password is equal to password in
01:14 - this case now we've got one problem
01:16 - already password is plain text and the
01:21 - password stored in the database is md5
01:22 - data so what we need to do here is we
01:26 - need to say md5 wrapping around password
01:34 - which will then automatically convert
01:36 - this to an md5 value in fact now that's
01:41 - not going to work I'll tell you why if
01:43 - the user entered nothing we're still
01:45 - generating an md5 hash so we can get
01:48 - away with not entering a password so
01:51 - instead of doing that let's create a new
01:53 - variable which is probably better called
01:55 - password hash and that's going to equal
01:57 - to md5 of password so we create a new
02:00 - variable now we can pop this into our
02:02 - query like that so let's first of all
02:07 - execute this query so query run equals
02:10 - MySQL Oh query query and let's pop this
02:18 - into an if statement just to check that
02:20 - it works so if that then run this block
02:24 - otherwise something now we've actually
02:28 - now predetermined so if this query is
02:33 - fine and it works then we can in fact me
02:37 - we don't need this else here
02:38 - if this query works then we can do
02:40 - something with it and what we need to do
02:42 - with it is we need to check how many
02:44 - rows have been returned now
02:46 - if 0 rows have been returned we have if
02:54 - 0 rows been returned a username and a
02:57 - password don't match so we use name and
02:58 - password combination haven't matched
03:00 - which means they may have entered the
03:03 - correct username they may have not
03:05 - entered the correct password or
03:07 - vice-versa they may have kren to the
03:08 - correct password but not the right
03:09 - username so we need to create a check in
03:12 - here first of all we'll say at query
03:17 - none and that's call num rows would be
03:20 - better and that's equal to MySQL num
03:23 - rows of our query that we've run and now
03:30 - we need to perform a check to say if
03:31 - query num rows is equal to 0 no such
03:37 - user exists otherwise do something else
03:39 - so here we're going to say echo invalid
03:46 - invalid username password combination
03:51 - okay so we've executed our query as long
03:56 - as the query is structured properly and
03:58 - it makes sense we're going to continue
04:00 - with this code here then we're creating
04:02 - a value of the number of rows returned
04:04 - then we're checking if that equals to 0
04:06 - if it does equal to 0 it means that the
04:09 - username and password combination don't
04:11 - match so we echo out a warning to the
04:13 - user and we don't lock them in otherwise
04:16 - we need to say
04:19 - okay for now the users logged in
04:22 - successfully so let's use this as an
04:26 - example so let's go back to our users
04:28 - table we've got Alex in the password
04:30 - which i think is past one yet past one
04:33 - two three but the md5 hash remember we
04:36 - convert the md5 hash automatically when
04:38 - we process the login and then we have
04:43 - various bits of information which aren't
04:44 - important just now so let's try a user
04:47 - login that's incorrect so I'm going to
04:49 - type Billy and pass one two three now by
04:53 - mine the pass one two three one two
04:56 - three
04:57 - exists in the database but it doesn't
05:00 - exist next to Billy so let's click login
05:03 - we've got invalid username password
05:06 - combination so our SQL query was
05:09 - structured correctly but it returns no
05:11 - rows now otherwise we want to say if
05:17 - query num rows equals 1 then we can echo
05:23 - ok because we're never going to echo two
05:25 - rows because the username is not going
05:28 - to exist twice we're not going to have
05:30 - users on our website with the same
05:32 - username so now let's try this with Alex
05:35 - and pass on I think I typed pass yet
05:39 - pass one two three and click login and
05:41 - it says ok so now let's return some of
05:44 - the data that we've been processing so
05:46 - we can make sure that we network we
05:48 - already know it matches let's echo out
05:51 - username and will echo out and I will
06:02 - just echo out the password hash so you
06:04 - can see how this is working
06:07 - so once we've logged in correctly a user
06:12 - name and pass one two three you'll see
06:14 - that this is the hash the password hash
06:17 - of what we've entered which is starts
06:19 - with three to two and ends with a 24 so
06:21 - three to two a 24 so we know that it's
06:24 - converted the hash properly we know that
06:25 - anyway so
06:28 - now that the users logged in okay and
06:30 - we've displayed this okay message we
06:33 - don't actually want to do this this was
06:34 - just for our purpose what we now want to
06:36 - do is we want to set a session with the
06:39 - users ID so we've selected the ID from
06:42 - the database but now we need to get this
06:44 - data so I'm going to say user underscore
06:47 - ID and this is going to equal to MySQL
06:51 - result remember this function from when
06:54 - we learn specifics on using databases
06:58 - MySQL result we're taking the result
07:00 - from the query that we run earlier we're
07:03 - going for row zero and we're looking in
07:07 - the ID column so let's just echo out
07:11 - user ID so we know this works properly
07:14 - let's test now with adding another user
07:17 - so we can see if this ID is returned
07:19 - correctly for each user we login