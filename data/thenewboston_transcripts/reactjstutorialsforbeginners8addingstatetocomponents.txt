00:00 - already houses welcome back and now that
00:02 - we understand the concept of state what
00:05 - I want to do is apply it to my little
00:07 - note program so basically I want to have
00:10 - state because these little notes they're
00:12 - going to have basically two different
00:13 - modes so the first mode is the one you
00:16 - see right now is just normal mode and it
00:18 - means that you're not editing it you
00:20 - pretty much just have a chunk of text
00:22 - that you're looking at so this is kind
00:24 - of the default mode now another mode I
00:27 - want to have is editing mode in other
00:29 - words whenever the user clicks this edit
00:31 - button instead of just having static
00:33 - text right here I want to display a form
00:35 - where they can edit the comment or write
00:38 - a new comment or whatever so basically
00:40 - I'm going to have these notes switch
00:42 - between two different modes or States
00:45 - editing or normal so how do I do that
00:48 - well remember whenever we want to use
00:50 - State the first thing we need is that
00:52 - get initial state function so this
00:57 - function pretty much just sets the
00:59 - initial state now by default I'm going
01:02 - to have these out of editing mode
01:04 - because whenever the user first loads
01:06 - this web page we don't want a bunch of
01:08 - forms popping up we just want you know
01:09 - the default text so I'm going to have
01:14 - one state like I said make sure I spell
01:18 - it right editing and the default state
01:21 - the editing state for all notes is just
01:24 - false this just means normal mode just
01:26 - display the text right here all right
01:29 - so actually I can get rid of these
01:32 - alerts right here and all right I might
01:35 - as well fix these so now let's go ahead
01:38 - and think about this logic a little bit
01:39 - so the first thing is whenever the user
01:42 - clicks this edit button then this edit
01:44 - callback is called
01:45 - so what do we want to do in terms of
01:47 - state well whenever they click the edit
01:49 - button we probably want to set editing
01:51 - to true instead of false obviously so
01:54 - this set state remember this is just
01:59 - equal to basically your states
02:03 - just like this but now we want to set it
02:06 - equal to true all right so what can we
02:10 - do remove we won't even worry about that
02:12 - right now
02:13 - and actually let me go ahead instead of
02:15 - having an alert I just want to log this
02:16 - out because I just don't like those
02:18 - alerts popping up they're annoying and
02:20 - alright so check this out in normal mode
02:23 - we can go ahead and hit edit but then
02:25 - whenever they're in editing mode we
02:27 - don't want to have the edit button still
02:29 - there because they're already editing so
02:31 - instead of these buns we're going to
02:33 - have another button that says save so
02:35 - whenever they're editing and they're
02:36 - done they can hit save and it's going to
02:38 - pretty much save the text so we need one
02:41 - more function and it's going to be a lot
02:43 - like this and this is just going to be
02:47 - called save and all save is going to do
02:49 - is for the moment is just going to set
02:51 - editing equal to false so whenever
02:54 - you're done editing hit save and it's
02:56 - going to take you out of editing mode
02:57 - all right simple enough so now what
03:01 - we're going to do is this you see right
03:04 - here we have one function called a
03:06 - render now render always returns this
03:10 - version of the note right here but what
03:14 - we essentially want to do is we want to
03:16 - say okay we don't just always display
03:18 - this HTML you have to decide if you're
03:20 - an editing mode or not if you're a
03:22 - normal mode then go ahead and display
03:24 - this but if you're an editing mode then
03:26 - you actually want to display a form so
03:28 - the user can edit the text instead so
03:31 - how do we do that
03:32 - well what we can do is you can actually
03:35 - make two different functions and I'll
03:38 - call them a render form and render
03:41 - normal so basically on two different
03:44 - types of HTML and then we'll choose
03:47 - between them so I'll say render normal
03:53 - function and again all this is going to
03:56 - do is basically this actually I can go
03:59 - ahead and cut that all right so whenever
04:02 - we call render normal is just going to
04:04 - display this right like this now we also
04:08 - want another one called render form
04:15 - so what do we want a change of this let
04:18 - me actually think about this for a
04:20 - second all right
04:21 - so instead of this dip we actually want
04:23 - a textarea all right so for the textarea
04:28 - we want to give it the default text of
04:30 - whatever the comment is because whenever
04:32 - they're editing it they want that text
04:34 - in there so in order to do that all we
04:36 - have to do is say default value and set
04:41 - it equal to where is it
04:43 - this thought props that children so
04:47 - again instead of having the text display
04:49 - in here it'll just display in the form
04:52 - and all right that looks good now
04:54 - instead of these buttons edit and remove
04:56 - we actually just want a Save button so
04:59 - it's going to say save and I'll say
05:02 - change that to green instead of blue now
05:05 - on click whenever you're in editing mode
05:08 - instead of editing it again because
05:11 - you're already in editing mode you
05:13 - actually just want to save your text so
05:16 - we're going to call save and then it's
05:18 - going to change your mode to normal mode
05:21 - take you out of editing mode boom
05:22 - roasted you're good to go
05:24 - so all right that looks pretty good for
05:28 - right now now the last thing I want to
05:30 - do is this you see these are just custom
05:32 - functions right here we actually didn't
05:34 - even call them yet whenever we actually
05:37 - use the component it always looks for
05:40 - this function called render so inside
05:42 - here we just have to write a little bit
05:44 - of logic and it's just going to say if
05:46 - you are in editing mode display this if
05:49 - not display this easiest thing you've
05:53 - ever done in your life so I'll say if
05:56 - the state is editing so if this state
06:03 - editing
06:05 - then what we want to do is return this
06:09 - dot render form so if they are editing
06:16 - editing that note then display the form
06:19 - so they can edit it else just display
06:22 - normal so return this render normal
06:29 - alright looking good night looking good
06:32 - so now let me go ahead and refresh this
06:33 - all right now check this out whenever I
06:36 - hit edit it changes from normal to
06:40 - render form and also puts editing mode
06:45 - sets the state of editing equal to true
06:48 - so right now the state of editing is
06:50 - equal to true now whenever I hit saved
06:52 - look what's going to happen it's going
06:54 - to set the state of editing equal to
06:56 - false and the logic is whenever that's
06:59 - false is just going to render normal so
07:02 - return it back to normal
07:03 - same thing when it with any of these and
07:05 - you can even do two at a time it doesn't
07:07 - matter so do you want to put them in
07:08 - editing mode if so it's going to give
07:11 - you a form if not is going to put you
07:13 - back in normal and if you want to change
07:15 - the default of it then you can right
07:17 - here but I mean this is pretty good
07:18 - right now so we got the displace taken
07:22 - care of however we have one issue still
07:24 - whenever the user actually edits the
07:26 - note and hit save it doesn't actually
07:28 - change on the text because we didn't
07:32 - write that logic anywhere so that's what
07:34 - we're going to be working on in the
07:35 - upcoming tutorials and yeah we now know
07:39 - a whole lot about States looking good
07:41 - and now yeah see you guys next time