00:00 - so if we um if we typee in say Alex and
00:03 - pass
00:05 - 23 we've got Alex and pass 1 23 now
00:08 - let's type in this value that we typed
00:10 - in earlier so we've got um we've got a
00:15 - uh semi sorry we've got a single
00:17 - quotation mark a space or and uh two
00:20 - single quotation marks equals single
00:22 - quotation mark uh let's go ahead and
00:24 - press oh no we'll put it in here as well
00:26 - so there we go let's press enter you can
00:29 - see these values have been transferred
00:32 - through literally so nothing's changed
00:34 - we've transferred the exact data that
00:36 - we've typed into the form now this is
00:39 - the reason that our SQL can be modified
00:41 - so with as it stands at the moment if we
00:44 - had these uncommented we could run um a
00:46 - query query of our choice so let's go
00:50 - ahead and um uncomment this now we've um
00:54 - we've processed our query um if
00:57 - something was in here now to delete
00:59 - something or modify something then this
01:01 - is deadly however in our user login
01:03 - system we are creating an if statement
01:05 - to check how many rows have been
01:07 - returned because if the username and
01:09 - password don't equal the same thing in
01:11 - this in the same record then we can't
01:13 - log the user in because their
01:15 - credentials obviously don't
01:17 - match and we will have an invalid
01:19 - username and password combination so
01:22 - let's go ahead and create this if
01:23 - statement let's go MySQL num row so
01:26 - we're calling this function which is
01:28 - going to count the amount of rows
01:30 - returned by this query here so we can
01:32 - type in query run there so if the MySQL
01:36 - num row um return from the quer are
01:38 - greater than or equal to one this means
01:41 - that the credentials match both the
01:42 - username and password so we can echo
01:46 - login success usually we would do this
01:49 - um at this point in here we would
01:51 - process um some kind of uh session uh to
01:56 - equal the ID from the database but for
01:58 - now we're just using this as an example
02:01 - so otherwise invalid um
02:05 - username
02:07 - password
02:09 - combination combination okay yeah so
02:12 - let's go ahead and try this um with the
02:14 - values that we submit so I'm I'm going
02:17 - to keep this um I'm going to keep this
02:19 - open and I'm going to break down
02:24 - again okay so let's go back and go
02:27 - straight onto our index.php file let's
02:29 - type in Al and a wrong password so pass
02:32 - 456 now we've got Alex Alex as the
02:35 - username pass 456 as the password and
02:38 - we've returned the message invalid
02:40 - username and password combination
02:42 - because nowhere in our table do we have
02:44 - Alex and pass 456 as the uh username and
02:48 - password so now what we can do is uh
02:50 - we'll go and submit some uh correct data
02:53 - so Alex and pass 23 these uh match here
02:57 - so we've got Alex as un name and
02:59 - password 2 2 3 as the password click
03:01 - submit and it says login success because
03:04 - we've successfully submitted the
03:06 - username and password that match inside
03:08 - of our table so now let's go ahead and
03:11 - use this example that we used earlier by
03:13 - writing um a um semi uh single quotation
03:19 - mark or double quotation mark equals
03:21 - double quotation mark and what this is
03:23 - going to do is it's going to structure
03:24 - our query as we discussed earlier and
03:27 - it's just going to put into here and the
03:29 - password as well that or that equals
03:33 - that so that's going to go into our
03:35 - query and uh we're going to return uh
03:38 - more than one row therefore the user is
03:41 - automatically uh logged in so let's go
03:44 - ahead and um click submit okay so you
03:47 - can see that the username is um is uh
03:50 - single quotation mark or single
03:52 - quotation mark single quotation mark
03:54 - equals single quotation mark and the
03:57 - password is also that as well and now
04:00 - you can see interestingly we've got a
04:01 - login success here so this is a real
04:05 - problem when it comes to our user our
04:08 - user
04:10 - um login system if you like because what
04:13 - we've done is now anyone can type these
04:15 - values in and unfortunately they can log
04:17 - in as um a user um when they maybe don't
04:21 - have access so how can we protect
04:24 - against this well I'm going to show you
04:26 - three different ways now that we can
04:28 - protect against this uh specific
04:29 - specific error for your own queries you
04:31 - might need to slightly modify this um
04:35 - but now I'm just going to talk about
04:37 - this so we can get the general idea of
04:38 - how we can start to protect now the
04:41 - first problem we look at is the um is
04:44 - the single quotation marks the single
04:46 - quotation marks need to be escaped in
04:49 - order for them not to work so for
04:52 - example if we were submitting um let's
04:55 - go this if we were submitting the data
04:58 - like this and escaping that
05:00 - that that and that so let's copy and
05:03 - paste that into here and we click submit
05:06 - you see that we get an invalid username
05:08 - password combination so we need some way
05:10 - to escape the different characters now
05:12 - there's something in PHP and something
05:14 - in the php. file which I've just opened
05:17 - here if you don't know how to open this
05:18 - or don't know how to edit things from it
05:20 - uh you can find a tutorial on that as
05:23 - well what we have here is we have magic
05:26 - quote
05:27 - GPC and you can see the comment just
05:29 - above it is Magic quotes for incoming
05:31 - get post or cookie data and what this is
05:35 - going to do is it's going to escape like
05:37 - I've just written here um these
05:39 - automatically when you submit data so
05:42 - it's not foolproof because we might not
05:44 - be submitting through um a poster a get
05:47 - or even cookie so uh let's go ahead and
05:50 - um turn this
05:53 - on and in a moment we're going to turn
05:55 - it off and all I'm going to show you how
05:56 - you can also also uh include this if
05:59 - it's it's automatically say off on your
06:01 - server so let's go ahead and restart um
06:04 - Apache from our xam control panel so
06:08 - remember every time you make a change in
06:09 - your php.ini file you must restart
06:11 - Apache okay so um let's come back to our
06:14 - page uh and wait for Local Host uh right
06:19 - okay so our our our server has been
06:20 - restarted and we've turned magic quotes
06:23 - on so now let's go ahead and do exactly
06:25 - the same
06:27 - thing and click submit
06:30 - now you can see that without doing
06:32 - anything we've automatically now escaped
06:35 - well we did do something we changed the
06:37 - value in php. inii but what we didn't do
06:39 - is change any of our code and this has
06:42 - automatically given us some sort of
06:44 - protection against SQL injection