00:00 - what is going on guys and gals welcome
00:02 - to your 12th C++ tutorial and in this
00:05 - tutorial I'm going to be giving you guys
00:06 - an introduction to classes in objects
00:09 - now classes are basically an easy way to
00:12 - group all your functions and variables
00:15 - and the group a bunch of stuff together
00:17 - for example people like to group similar
00:20 - functions together in the same class for
00:22 - example if you had a bunch of functions
00:24 - you know maybe working with temperature
00:26 - or you had a bunch of other related
00:29 - functions you might want to group them
00:30 - all in the same class it makes them
00:32 - easier to work with later on so then you
00:35 - know if you have like a thousand
00:36 - functions you say all right where are
00:39 - all my temperature functions cuz I need
00:41 - them now oh they're in my temperature
00:43 - class so that is kind of the usefulness
00:45 - of classes and the basics behind that so
00:49 - let's go ahead and in order to create a
00:51 - class we go ahead and make sure you're
00:54 - outside your main first of all I want to
00:56 - say that so I'm going to create mine
00:58 - before my main and in order to do this
01:01 - go ahead and type the word class and now
01:04 - after this go ahead and add a space and
01:07 - name your class now people typically
01:09 - name their class with uppercase letters
01:12 - and I'm going to name mine
01:14 - biy class just like that and now go
01:17 - ahead and add curly braces in a
01:19 - semicolon at the end now everything all
01:22 - your functions all your variables all
01:24 - your crap goes inside the body of your
01:27 - class right here so basically all your
01:30 - crap that you want to go in the class
01:32 - goes in the class body just like that
01:34 - and I believe whenever you create a
01:36 - class it's called declaring a class but
01:39 - um you know if your teacher ever asks
01:40 - you make sure you say that they'll
01:42 - probably be impressed so before we start
01:45 - adding a bunch of functions and stuff I
01:48 - want to talk to you guys about something
01:49 - called an access specifier now sometimes
01:52 - you want to make functions that you can
01:54 - only use in your class and sometimes you
01:57 - want to make functions that anybody can
01:59 - use out inside your class so if you want
02:02 - for example the main to be able to use
02:04 - your functions inside your class you
02:06 - need to make your functions public if
02:08 - you don't want Maine to be able to use
02:10 - the function inside your class then you
02:12 - would use something called private but
02:13 - we're going to be going over that later
02:15 - for now just remember whenever you use
02:17 - the public access specifier it says that
02:20 - you can use it outside of the class so
02:23 - in order to use that Public Access
02:25 - specifier just go ahead and type public
02:28 - with a colon not a semicolon just a
02:30 - regular colon and this means that
02:32 - anything you put after this you're able
02:34 - to use it outside of this class so if
02:37 - you didn't have that then you would only
02:39 - be able to use your stuff right here and
02:40 - what's the use of that if you need to
02:41 - put it in main so anyways make sure you
02:43 - add public it's called an access
02:46 - specifier if you're taking you know C++
02:48 - test or something so now let's go ahead
02:51 - and we create a function just like
02:54 - before let me just go ahead and print
02:55 - out something on the screen so um it's
02:57 - not going to make any calculation so
02:59 - it's just just going to print something
03:00 - out so void I'm going to name it cool
03:04 - saying and it's not going to take any
03:06 - parameters a really simple function here
03:08 - and all it's going to do is print
03:10 - something out on the screen now I got to
03:11 - think of a cool saying um preaching wow
03:15 - totally messed that up preaching to the
03:20 - choir I think that's how you spell choir
03:21 - not sure hope I don't look like a fool
03:23 - in front of all my subscribers so now
03:25 - just go ahead and end line and so all
03:28 - this function is going to to do is print
03:30 - out preaching to the choir on the screen
03:33 - simple enough so now you're saying all
03:35 - right this class is looks good to go we
03:37 - have the class declaration class body um
03:41 - we have public and we even have one
03:43 - function in our class this is a pretty
03:46 - sweet looking class so let's go ahead
03:47 - and use this right now well now I want
03:50 - to talk to you guys about the other part
03:53 - of this tutorial I told you guys I'm
03:54 - going to be talking about classes and
03:56 - objects I already talked to you guys
03:57 - about classes now I want to talk to you
04:00 - guys about objects an object is how you
04:04 - access the stuff inside of your class
04:07 - for
04:08 - example why do you need to make objects
04:11 - at all why can't you just write cool
04:14 - sayings just like this and use it just
04:16 - like that well whenever you're making
04:18 - big computer programs and you have a
04:20 - bunch of different classes and a bunch
04:22 - of different functions in them you may
04:24 - have this cool sayings you may have a
04:27 - function that says cool sayings inside
04:29 - Bucky class you may have another
04:31 - function cool says inside tuna class you
04:34 - may have another function cool says
04:36 - inside a class temperature class well
04:39 - how does C++ know what function you want
04:43 - to use well it needs an object and an
04:46 - object basically tells it what class
04:48 - you're working with so in order to
04:50 - create an object it's basically the same
04:52 - as creating a variable you go ahead and
04:54 - you do this you type the name of your
04:57 - class which is Bucky's class
05:00 - and then after this you give your object
05:02 - a name and I'm just going to name mine
05:05 - biy object just like that and go ahead
05:08 - and add a semicolon and now this object
05:11 - Bucky's object you use this kind of as
05:14 - the key whenever you want to access the
05:17 - crap inside your class so now instead of
05:20 - just writing um the function name we
05:22 - have to write the object name first like
05:25 - biy object and then in order to access
05:29 - anything in inside the class we need to
05:31 - use a DOT separator and a DOT separator
05:35 - is basically our way of accessing the
05:37 - variables the functions all that stuff
05:40 - so as you can see we'll put the dot
05:41 - separator up and it already knows that
05:44 - we're what we want to do we want to
05:46 - access cool saying just like before just
05:48 - type the name of the function and empty
05:50 - parameters and Bam Wham thank you ma'am
05:53 - we now have a full working program so
05:56 - let me run this for you real quick to
05:58 - show you guys that it's working make
05:59 - sure I don't have any errors and then
06:00 - I'll talk to you guys through it one
06:01 - last time preaching to the choir works
06:05 - perfectly pretty cool huh so anyways
06:09 - people make classes in order to group
06:12 - similar functions so if I had you know a
06:14 - program that just had a bunch of cool
06:16 - sayings I'd have cool sayings cool
06:18 - sayings one cool sayings 2 I'd want to
06:20 - put them all in the same class for now
06:23 - we only have one function because this
06:24 - is just an example so we have a function
06:27 - that we put inside the class and make
06:29 - sure to make it public that means that
06:31 - main can use it as well so we have a
06:34 - class and we made that by making public
06:36 - and through a function inside it pretty
06:38 - cool so now we wanted to actually use
06:41 - that function that's inside the class
06:42 - well we can't just go ahead and write
06:45 - cool saying because if we had a bunch of
06:47 - different classes it wouldn't know which
06:50 - function named cool saying to use so it
06:53 - wouldn't know what class we wanted to
06:54 - use so in order to use that function we
06:58 - needed to make an OP object of that
07:00 - class so we're saying all right we're
07:02 - making an object called Buy's object and
07:05 - it is from the Buy's class class so now
07:08 - whenever we use Bucky's object it knows
07:11 - that we're going to be working with
07:12 - Buy's class so we use Buy's object cool
07:15 - saying and that knows and that's
07:18 - basically our way of telling C++ that we
07:20 - want to use the cool saying function and
07:22 - we want it to come from Buy's class
07:25 - since we use Buy's object so that is why
07:27 - you need objects
07:30 - classes and yada yada all all that stuff
07:33 - so that is your basics of classes and
07:37 - objects and why you need to make objects
07:40 - before you can use the stuff inside your
07:41 - class so I know this is kind of
07:43 - confusing um but this is the basics
07:46 - behind object orienting programming so
07:49 - if you understand this then if you
07:52 - understand this tutorial then the rest
07:54 - of your programming life is going to be
07:56 - a whole lot more simple so watch this
07:58 - tutorial watch it again watch it again
08:01 - until you understand exactly how to make
08:02 - classes and exactly why objects are
08:05 - useful and once you do you're ready to
08:07 - move on to the next tutorial so for now
08:09 - thank you guys for watching you guys
08:11 - have no idea how important the
08:13 - information you just learned was so
08:16 - anyways thank you guys for watching
08:17 - don't forget to subscribe if you have
08:18 - any questions about any of this feel
08:20 - free to ask me on the new boston.com
08:22 - Forum so uh yeah enough of me talking
08:24 - I'll see you in the next tutorial