00:00 - hi this is Alex from PHP academy' back
00:02 - with another video for the new Boston
00:04 - now in the last part of the tutorial we
00:06 - created our table which is inside our
00:09 - database called a database we created
00:12 - table could users then we inserted some
00:14 - manual data in just so we can test our
00:16 - login process so we're going to write a
00:18 - process to log this use it in and we
00:23 - inserted this data here the username
00:25 - with Alex the password was this md5 hash
00:28 - which we'll deal with later and we've
00:30 - got first name and surname so we've got
00:32 - our hash for security reasons when we're
00:35 - logging in let's just get rid of this
00:37 - that we used earlier when we're logging
00:39 - in we need to convert the the password
00:42 - that the user specifies and see if that
00:45 - matches that same hash because as you
00:47 - know md5 is a one-way algorithm and the
00:49 - result will always be the same ok so we
00:54 - need to think about how we're going to
00:55 - set up our files now I'm going to have
00:57 - an index.php which is going to check if
01:00 - the users logged in and display specific
01:03 - content if they are logged in or if
01:06 - they're not logged in so we're going to
01:07 - have something similar to the following
01:10 - we're going to say if logged in display
01:13 - something otherwise display something
01:17 - else we could even use an if and if-else
01:19 - if statement your if else--if sorry and
01:23 - we could say not logged in I'm going to
01:27 - create this function which is going to
01:28 - check to see if session data exists or
01:31 - if a session has been set and if the
01:34 - session isn't empty so we'll get rid of
01:37 - that for now but that's just a general
01:38 - idea we're going to sort of say in here
01:41 - we're going to say something like
01:43 - welcome and maybe specify the user's
01:47 - name here and then for this we're going
01:50 - to say please login ok
01:53 - and perhaps display our login form so
01:59 - we'll leave in next stop PHP for now
02:00 - we're going to create a new file which
02:02 - is going to connect to our database so
02:04 - let's say connect in PHP will call that
02:07 - connect our interesting dot PHP so the
02:10 - first thing we want to do is we want to
02:13 - specify the hostname the username and
02:20 - the password
02:20 - so MySQL host in my case that's equal to
02:25 - localhost and in most cases that is if
02:28 - you're running on a local server if
02:30 - you're trying to connect to a remote
02:31 - database you'll need to specify the
02:32 - hostname but for now it's localhost for
02:36 - me the MySQL user is called root this is
02:38 - these are the default settings and
02:41 - because I'm using default settings my
02:44 - password is equal to nothing okay so now
02:48 - what we need to do is we need to specify
02:50 - what table we're going to connect to and
02:52 - that is or the database sorry MySQL
02:56 - database the database is called a
02:58 - underscore database and this sir is
03:02 - found let's just pop into phpMyAdmin
03:04 - here so i underscore database okay so
03:09 - now we can connect so I'm going to say
03:10 - if MySQL Connect and then we can pop out
03:15 - variables in here so the first variable
03:17 - is MySQL house that's the first argument
03:20 - we pass through to this MySQL connect
03:23 - function and then we say MySQL user and
03:27 - then we say MySQL password so if this
03:32 - function connect successfully anything
03:34 - inside this block here will be executed
03:37 - so we can then say let's say if MySQL
03:43 - connect and then we can say um we could
03:49 - say and MySQL select database and the
03:56 - database we've obviously predefined in
03:58 - this variable mysqldb what I'm going to
04:01 - do is I'm going to change this around
04:03 - and I'm going to say if this is
04:05 - unsuccessful or this is unsuccessful
04:10 - then we want to kill the page and we
04:14 - want to specify the MySQL error
04:19 - and acetic brackets there so this where
04:21 - we're echoing out the contents of this
04:23 - function or the value returned from this
04:25 - function which is the error last
04:27 - received from MySQL so if either of
04:31 - these don't connect so if we don't
04:33 - connect to the database itself at the
04:35 - server itself or we don't select the
04:38 - database correctly then we kill with an
04:39 - error otherwise we just carry on with
04:41 - our code normally so we're going to
04:42 - declare or require this file at the top
04:45 - of everywhere where we need to connect
04:47 - and the reason we do this is if we had
04:50 - say five ten files here instead of
04:52 - writing this code five or ten times we
04:55 - just include this file here so let's go
04:58 - ahead and test this connecting dot PHP
05:00 - by including it inside index dot PHP but
05:04 - I'm going to require it so we kill the
05:06 - page if this pay if this file cannot be
05:07 - found so connecting dot PHP
05:11 - let's come on to our browser and refresh
05:14 - the page okay you can see that nothing's
05:17 - come up so hopefully we haven't returned
05:19 - an error but now let's force an error so
05:21 - I'm going to put a local horse instead
05:24 - of localhost let's refresh and you can
05:27 - see that unknown MySQL server host local
05:33 - ISO have retrieved an error so okay
05:36 - let's change that back and we'll change
05:38 - the database name to a database one and
05:42 - let's refresh and you can see we've
05:45 - returned an error saying this is an
05:47 - unknown database so we know that either
05:50 - way if we don't connect to the server
05:53 - correctly or we don't select our
05:54 - database correctly we always echo a
05:56 - MySQL error out now upon completion of
06:00 - development you may want to change this
06:02 - to a error message in here as a string
06:07 - this just means that then it's a bit
06:10 - more user friendly for your users rather
06:12 - than outputting the contour the return
06:14 - value of MySQL error function so for now
06:18 - connector inked-up PHP is complete
06:23 - so now what we want to do is we want to
06:26 - create a page where the user can log in
06:32 - so I'm going to create this as an
06:35 - include file so what I can do is then in
06:37 - this if statement that I create inside
06:39 - index dot PHP I want to show that I want
06:44 - to show that form if you like to the
06:48 - user so let's go ahead and open up a new
06:51 - file
06:52 - we'll start some PHP tags and I'm going
06:54 - to call this login form dot Inc PHP so
07:01 - let's go ahead and start creating the
07:04 - form itself let's go down and start to
07:08 - create our form so this form is called
07:11 - oh and just by the way these includes
07:14 - depend on how your website works so when
07:17 - we're using let's say form action equals
07:21 - something there which to end our form
07:24 - when we say form action I'm going to
07:26 - specify the page that this is currently
07:28 - included in so evident eventually this
07:31 - is going to this actions going to equal
07:33 - index dot PHP but I'm actually going to
07:36 - be using one of the predefined server
07:38 - variables to determine which page this
07:41 - is included in that doesn't make sense
07:44 - now it will do later but for now our
07:47 - method is going to be post okay so our
07:50 - action what's going to happen here we
07:53 - need to specify a variable up here
07:55 - that's going to tell us what our pages
07:58 - logged it at what what page we're
08:01 - currently on in fact I might create a
08:03 - new a new file called will call this
08:08 - call in PHP and when including just
08:11 - variables has some predefined variables
08:13 - in here