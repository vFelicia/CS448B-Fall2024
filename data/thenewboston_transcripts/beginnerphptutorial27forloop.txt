00:00 - hello this is Alex from PHP academy'
00:02 - with another video for the new Boston in
00:04 - this video we're going to be looking at
00:06 - the third and final loop in PHP and this
00:09 - is the for loop now for is a bit more
00:11 - complicated in syntax and by this I mean
00:13 - it's structured slightly differently so
00:16 - if we use the for keyword and we create
00:18 - a block you can see that it's very
00:20 - similar to a while loop or sort of
00:22 - similar to a do-while loop
00:24 - however what we're doing is we use three
00:26 - expressions within this these
00:29 - parentheses so we use three different
00:31 - expressions to control the loop how we
00:34 - want and we can also increment increment
00:36 - a value within this as well so in here
00:40 - all we need to do is echo something out
00:43 - either a variable or some plain text or
00:46 - maker or could continue in operation
00:48 - however your program is eventually going
00:50 - to work and everything can can be
00:53 - trolled controlled within here so for
00:55 - now I'm going to create a variable
00:57 - called count and that's going to be
00:59 - equal to in fact know the reason I'm not
01:03 - going to declare it out there is because
01:04 - like I said we can we can try everything
01:07 - within here so I I'm going to call my
01:09 - variable count I'm going to append a
01:12 - break on to that so we can keep track of
01:14 - it neatly now I declare my count
01:17 - variable or I assign my first value to
01:21 - it in here so I say count equals one
01:25 - okay now what I do is I put a semicolon
01:28 - and then I say what this is basically
01:32 - the next part of the expression is what
01:37 - needs to be evaluated true or false to
01:39 - determine whether the block should run
01:41 - this block should run so count while
01:44 - count is smaller than or equal to ten
01:47 - like we've done in the previous examples
01:49 - and then we say count plus plus we don't
01:53 - need another semicolon to end here it
01:55 - just ends so what we're doing is let me
01:58 - just separate this out so it's a bit
01:59 - more easy to read
02:00 - okay so we're setting initially our
02:03 - count variable to equal one then we're
02:05 - choosing this where we're creating a
02:09 - condition that needs to be true or false
02:12 - and then we're incrementing here and the
02:14 - way that a for loop works is this is
02:16 - executed then this happens then the
02:22 - block runs then we increment here okay
02:25 - and then obviously this here will be
02:28 - ignored because it won't reassign the
02:31 - variable so now you can see it's just a
02:34 - completely different structure of
02:35 - creating a loop but it has exactly the
02:37 - same effect if we refresh we're just
02:39 - counting from numbers one to ten now the
02:41 - beauty of doing something like this is
02:43 - it's a lot easier to read we can also
02:46 - obviously assign this on the fly it is
02:49 - neater as well if I was to just simply
02:52 - change that to greater than this - -
02:57 - that's decrementing it this to one and
03:00 - this to ten now what we're doing is
03:03 - we're counting from ten to one so just
03:06 - change them three parts of the each
03:08 - expression around whereas end count is
03:10 - equal to ten initially while count is
03:13 - smaller than or so greater than or equal
03:15 - to one and decrement until we reach 10
03:19 - the condition until we reach one the
03:21 - condition is until it where we're still
03:24 - greater than or equal to one we still
03:25 - execute the loop when we still echo so
03:28 - that is basically for loops in PHP