00:00 - alright guys welcome to 65th C++
00:03 - tutorial and in this lesson I'm just
00:05 - gonna be giving you guys a couple of
00:06 - tips when working with files and this is
00:09 - you know something that can save you
00:11 - time as well as some good programming
00:13 - practice so it's gonna save you a lot of
00:15 - headaches in the future so let me go
00:16 - ahead and get started so in the last
00:18 - tutorial I told you guys that in order
00:21 - to work with files you first need to do
00:24 - two things you need to create a file
00:25 - object and then you need to associate
00:28 - that object with a file itself on the
00:31 - computer so let's go ahead and instead
00:34 - of doing that in two lines of code let
00:36 - me show you guys how to do it in one
00:37 - line of code so of course you need your
00:40 - of' stream because that's what object
00:43 - we're gonna be making in order to work
00:45 - with files and then you give your object
00:47 - a name like buckey's file and then you
00:51 - might be thinking alright just go ahead
00:53 - put a semicolon go the next line of code
00:55 - put bucky's file you know open the file
00:57 - you want to work with but there's the
00:59 - easier way to associate this object with
01:01 - a file now whenever you create a file
01:04 - object it takes an optional parameter in
01:07 - the constructor actually the entire
01:09 - constructor is optional but if you want
01:12 - you can go ahead and do this all in one
01:14 - line of code by associating a file by
01:17 - passing into the constructor and then
01:19 - whenever you create your object it's
01:21 - gonna associate that file with this
01:23 - object so for example let's go ahead and
01:25 - make a file name beef jerky dot txt and
01:29 - now instead of creating your object on
01:33 - one line of code and then associating
01:35 - the file with this object on another
01:38 - line of code we can just go ahead and
01:40 - pass the file name into the constructor
01:42 - and now this file is associated with
01:46 - this object so it's probably better to
01:48 - get used to this syntax unless you're
01:51 - making a program where you don't know
01:52 - what file is going to be associated with
01:55 - this object whenever you're running it
01:57 - so usually I like to do it this way just
01:59 - because the savings in line of code and
02:02 - again this constructor is optional but
02:04 - trust me it's gonna save you a whole
02:05 - bunch of time in the future so now you
02:07 - can do things like Bucky's file and then
02:13 - just go ahead and output something
02:15 - stupid like I love the beef and it says
02:21 - oh I love the beef but you know good
02:23 - enough and then go ahead and might as
02:24 - well add a new line and and then you get
02:29 - my cursor out of the way and then of
02:31 - course it's good program practice to
02:33 - have Bucky's file about close to free up
02:35 - any of our computer's resources so let's
02:38 - go ahead and actually watch this file
02:40 - get made so I'm gonna go ahead and press
02:42 - run and oh man and close it out but
02:45 - anyways you can see now that we have a
02:47 - beef jerky txt file so let's go ahead
02:49 - and click that and it says ooh I love
02:51 - beef and i do love beef jerky can't lie
02:54 - about that so let's go ahead and before
02:57 - I let you guys go I want to tell you
02:58 - guys one more thing a function that
03:01 - you're gonna be seeing a lot if you're
03:03 - working with the team of developers or
03:04 - you know if your teacher gave you a
03:07 - assignment working on the files is some
03:10 - function called is open now is open is a
03:14 - function that you can use on a file
03:15 - object and it's going to return true if
03:18 - the object is currently associated with
03:21 - a file and this is a way that you can
03:23 - check basically if a file is open and
03:26 - you know it's ready to be worked with so
03:29 - in order to do this go ahead and write
03:31 - if and then you do this write your file
03:35 - object which is in this case a buckey's
03:36 - file and then write your function right
03:39 - after it is underscore open now this
03:42 - isn't gonna take any parameters and just
03:44 - go ahead and write something if the file
03:47 - is open then we'll just output on the
03:49 - screen like uhm
03:51 - okay the file is open good enough and
03:56 - then might as well go ahead and in that
03:58 - line and we'll say else if the file is
04:02 - not open then let's just go ahead and
04:04 - output like Bucky you messed up and will
04:11 - spell everything wrong and looks good go
04:14 - so go ahead and in that line so now
04:16 - what's gonna happen is this alright we
04:19 - coded this line correctly and it did
04:21 - indeed open this beef jerky text file so
04:24 - whenever we check if the file is open
04:26 - this this is open really isn't a good
04:29 - name it really should be like if object
04:32 - is associated with a file that might be
04:35 - a better name for this but you know that
04:36 - would be a lot a lot of text so what
04:39 - this design is gonna do is it's gonna
04:41 - check if this object is associated with
04:44 - a file if it is which it is it's gonna
04:47 - output okay the file is open if it's not
04:50 - and we did something around it's gonna
04:51 - say Bucky you messed up so let's go
04:54 - ahead and run this and indeed we get
04:56 - okay the file is open sir saying all
04:59 - right so when would be the case scenario
05:02 - when the file wouldn't open well for
05:05 - example if you go ahead and you made you
05:07 - know your file object correctly but you
05:10 - forgot to associate it with a file right
05:12 - here then whenever we try to run it it's
05:14 - gonna say hold on Bucky you messed up
05:17 - you forgot to associate your object with
05:20 - a file so that is case scenario where we
05:23 - would want to check if the file is open
05:25 - or not and basically in programming well
05:28 - in the real world how it works is this
05:30 - you make sure it's open first and then
05:33 - you write all your code right here so
05:35 - it's a nice little check before you know
05:38 - you just start writing code like this
05:39 - this is probably would be better if we
05:41 - threw it inside here you know so if you
05:44 - wanna you know impress your boss or your
05:46 - teacher just make sure your files are
05:47 - open before you start doing a bunch of
05:50 - crap to him or else you know it's gonna
05:51 - save you a lot of headaches so with that
05:54 - being said and this is where I just want
05:56 - to stress you guys that there is indeed
05:58 - an optional constructor where you can
06:00 - associate a file with the object instead
06:02 - of putting on
06:03 - of codes and also what you can do is
06:07 - it's a better programming practice to
06:09 - make sure your file is open and by that
06:11 - I mean make sure your file is associated
06:13 - with the object before you start doing a
06:15 - whole bunch of crap to it it uh it's
06:17 - gonna save you some time and save your
06:19 - computer a whole lot of headaches so
06:20 - with that being said that's all I have
06:22 - for you guys for this oriole so thank
06:24 - you guys for watching I don't forget
06:26 - subscribing if you have any questions so
06:27 - check out my forum the new boston.com
06:29 - slash forum and yeah I'll see you there
06:32 - so thank you guys and I'll see you next
06:33 - video