00:00 - hello YouTube Sam here from youtube.com/
00:03 - onli gamer for the New Boston in this
00:05 - tutorial we're going to be working more
00:07 - on the car program now if this doesn't
00:10 - look familiar to you this code right
00:11 - here then you may want to go ahead and
00:13 - move back to the beginning of the car
00:15 - program
00:16 - series um and if not then let's go ahead
00:18 - and get started now if you remember from
00:20 - the last tutorial we created an array
00:22 - list that stored all of our cars and
00:25 - added added them to this list
00:27 - box now you can see that if we click on
00:31 - Honda CRV and click show info we get
00:33 - Mustang GT now this has nothing to do uh
00:38 - with uh the Honda CRV this is just going
00:41 - to show the info of our default sports
00:43 - car because we said it to do that when
00:45 - the button show info is
00:47 - clicked as you can see right here uh
00:50 - let's find
00:51 - it right there so it's going to show the
00:54 - car info of the default sports
00:56 - car so what we need to do to show
01:00 - the info of the selected in the car
01:03 - that's selected inside of list cars
01:05 - we're going to have to create a uh
01:09 - private variable up here so we'll just
01:12 - call it selected car as all
01:17 - cars
01:18 - docar so you can see that we didn't use
01:20 - the new keyword because we're going to
01:22 - be setting it equal to different cars in
01:24 - here and when you use new it creates an
01:27 - instance of that car and it can't be set
01:29 - equal to any other types of cars and now
01:32 - you may be wondering uh what if this
01:35 - selected car is a truck or a sports
01:38 - car well um we can use what polymorphism
01:42 - here if you remember from the previous
01:44 - tutorials I think it was a couple
01:45 - tutorials back but any uh any object
01:49 - that inherits from the car class can be
01:51 - treated as a car object H which is the
01:55 - concept of polymorphism so now that we
01:57 - have our selected car
02:00 - um what we need to do is access the
02:03 - selected index changed event of list
02:06 - cars so we can do that just by double
02:08 - clicking and it will load it up right
02:11 - here so now what we need to do is set
02:14 - the selected car to whatever car they
02:17 - have selected in the list box so we'll
02:21 - just go ahead and type selected car
02:24 - equals and now what we're going to do is
02:27 - we are going to access our cars array
02:30 - list so we'll just type cars and now
02:33 - we're going to have to get use an index
02:36 - right here so it gives a sets of element
02:37 - at the specified index so we're just
02:40 - going to be getting uh that uh element
02:43 - at the index
02:45 - now if you remember when it adds these
02:50 - uh cars to the list box it's going to
02:52 - add them uh based on the index so the
02:54 - car index of zero is added to the index
02:57 - of zero in the list and the car at the
02:59 - index of one one is added to the index
03:01 - of one in the list so this is very
03:03 - useful to us um in accessing the cars so
03:06 - you can see when we do add all cars for
03:09 - each car as all cars. car in our cars
03:12 - array list we're going to add that to
03:15 - the uh list box and so it adds it in
03:18 - numerical order according to the cars
03:20 - array list so the way we can set this
03:24 - selected car equal to uh the car that
03:27 - the the user wants to see we can just
03:31 - type list
03:33 - cars. selected index and the selected
03:37 - index of list cars is going to be equal
03:40 - to the indexing cars that uh the user
03:42 - wants to see now this may be a little
03:44 - bit confusing to you but if you mess
03:46 - around with this code right here um this
03:48 - and your car array list you should uh
03:51 - start to pick up what I'm saying if you
03:53 - don't already know it so now that we SE
03:56 - set our selected car uh to the
04:01 - um the car that's been selected in the
04:03 - index of our list box what we want to do
04:06 - is show the car
04:08 - info so you can see here that we show
04:12 - the car info of the default sports car
04:15 - now all we have to do to show the car
04:17 - info of the car that they've clicked on
04:20 - is just change this to selected car and
04:24 - so this makes it a whole B this makes it
04:27 - a lot easier um to change change and
04:30 - modify your code when you split stuff up
04:32 - into different Subs um and you can see
04:36 - that all we had to do was just change
04:38 - the arguments in here because this
04:39 - already does everything for us but it
04:41 - takes a generic car right here and we
04:43 - can change that to whatever we want
04:45 - instead of having to rewrite all the
04:46 - code again so we'll go ahead and run
04:48 - this and see what kind of results we get
04:51 - so let's select
04:54 - CRV if we show info we get Honda CRV the
04:58 - color is red which is default it has
05:00 - five doors and the speed is zero we'll
05:03 - click Mustang
05:05 - GT will show the info the car name is
05:09 - Mustang GT the color is red it has two
05:12 - doors and the speed is currently zero
05:15 - now you can see that we didn't get any
05:16 - errors there because of polymorphism our
05:18 - sports car was treated as a car now I
05:21 - know I repeat myself a lot on this but
05:23 - this is a concept that is very helpful
05:26 - and you guys should all understand it if
05:27 - you want to progress in your programming
05:30 - so we'll go ahead and close out of that
05:32 - and let's add one more thing before we
05:33 - finish with this
05:35 - tutorial whenever they change the index
05:38 - of our list
05:41 - cars what if the index is not a valid
05:44 - index so in that case it would
05:47 - be-1 so we can just add a simple if
05:50 - statement here so if list
05:53 - cars do selected index does not
05:58 - equal -1
06:00 - then we'll just go ahead and set this
06:05 - value so this will prevent any errors
06:07 - from happening in our program um so if
06:10 - they tried to select the index to
06:12 - negative 1 it would try to do this and
06:14 - our program would uh most likely
06:17 - crash so um go ahead type this code and
06:20 - if you haven't I really suggest it it'll
06:22 - help you learn the concepts a lot better
06:24 - and you can change it yourself um and
06:27 - then once you've done that go ahead and
06:28 - move on to the next Tut tutorial