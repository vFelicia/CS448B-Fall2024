00:00 - for example if we use the same notation
00:01 - for hours and same math floor seconds /
00:06 - and for hours it's just 60 times 60
00:08 - because we don't need to go ahead and
00:09 - use this 24 for every day if we now go
00:13 - ahead and alert out hours you'll notice
00:18 - that we've got 44 hours now obviously we
00:21 - want to keep this it within the 24 hours
00:23 - because if we were to say we've got
00:26 - let's say it's just to let out days as
00:29 - well if we were to say that up until the
00:34 - 10th of August 2011 we've got one day
00:38 - and 44 hours it doesn't make sense
00:41 - because you know there's more hours in a
00:43 - day there's not there's not 44 hours in
00:46 - a day or any more than this we need a
00:49 - maximum of 24 hours in a day so what we
00:51 - need to do is make a calculation under
00:53 - days that will correct the amount of
00:56 - seconds in order to display the hours
00:58 - properly and for this we do seconds -
01:01 - equals which is the same as seconds
01:02 - equals seconds - so we can do that as
01:05 - well but this is just shorter a notation
01:08 - and then we want to say days times 60
01:11 - times 60 times 24 so now what will
01:15 - happen is the set this this value here
01:17 - are calling two days will be subtracted
01:20 - off of the seconds and then when we go
01:22 - ahead and calculate the hours it will
01:24 - stick within the well display the
01:27 - correct value so we've got 1 hours and
01:29 - 20 so now that we've got 1 hours and 20
01:32 - from the 10th of August at 12:00 let's
01:34 - go ahead and change this to 13 and
01:37 - refresh and you can see it's changed to
01:40 - 21 so we now know that this works
01:42 - because we're echoing out or alerting
01:44 - out the days and the hours so will not
01:47 - allow out anything else we'll just go
01:48 - ahead and correct each one so now we
01:50 - need to do seconds - equals and then we
01:54 - need to do the same but for hours so we
01:55 - say hours times 60 times 6
01:59 - and then we need to work out the sorry
02:01 - not the seconds we've already have that
02:02 - the minutes and the minutes is equal to
02:06 - mass dot floor and seconds divided by 60
02:12 - because we're just doing divided by 60
02:14 - for the minutes and again we're using
02:16 - seconds which has been updated here
02:18 - after our hours as being calculated and
02:21 - we need to go ahead and do this again so
02:24 - let's go ahead and say seconds - equals
02:30 - minutes times 60 so now what we've done
02:35 - is we've retrieved the last value of
02:36 - seconds which we can use let's go ahead
02:39 - and just alert all these out again I did
02:42 - say we weren't going to but let's say
02:44 - days and the space and we'll say hours
02:50 - and a space and then we'll say minutes
02:53 - and the space and then we'll say seconds
02:58 - so let's go ahead and refresh you can
03:00 - see that we've got one day 21 hours 11
03:03 - minutes and 15 seconds until this date
03:06 - let's refresh you can see this has
03:08 - changed - well the one hour the one day
03:11 - the 21 hours 11 minutes to change but
03:13 - this is now 7 seconds and you can see
03:16 - that that's just gone to 10 minutes and
03:18 - now 59 seconds so we know that the
03:21 - values are working so we can go ahead
03:23 - and actually do something with these ie
03:25 - place them into the span that we created
03:28 - earlier for each corresponding day hours
03:30 - minutes and seconds so because we've
03:32 - used the selector here countdown inside
03:35 - of our plugin we can use this dot
03:37 - something we've already got this
03:39 - selection up here so we want to just say
03:41 - this underscore cell and we want to say
03:44 - dot find the first thing we're finding
03:46 - is the days class or any element with
03:49 - the class days and we want to place the
03:52 - text in there days so now what's
03:55 - happened is it's placed one in there
03:57 - because we have one day until this
03:59 - particular time we've already echoed
04:01 - them out so we we know what they look
04:02 - like so what we do is we repeat this
04:05 - process for each one so we want to go
04:08 - ahead and find ours and we want
04:11 - texts sorry not in their text hours
04:15 - again this selection dot find dot
04:20 - minutes or mins as we called it text
04:24 - minutes and then this selection dot find
04:29 - and we want to go ahead and find seconds
04:32 - and change the text to seconds so now
04:36 - when we refresh the values that we were
04:38 - echoing out earlier have just been
04:40 - placed into you know the place on our
04:43 - page using find we found this day's
04:47 - element hours minutes and seconds
04:49 - element within this countdown div that
04:52 - we supplied here so pretty
04:53 - straightforward in terms of just sort of
04:55 - traversing through elements on a page
04:58 - however the only problem now is I have
05:00 - to keep refreshing in order to keep this
05:03 - value changing so we want to go ahead
05:05 - and apply at an interval so just
05:08 - underneath here I'm going to say
05:09 - interval equals set interval interval
05:14 - and in here I'm going to give the name
05:16 - of the function which is count execute
05:19 - and I'm not going to put the brackets
05:21 - because that won't work and we want to
05:23 - execute this every 1000 milliseconds so
05:26 - now on the page this function here which
05:28 - returns all of this data will be
05:30 - executed every second and when we
05:32 - refresh the page you can now see that
05:34 - the time decreases and we've got this
05:37 - just updating itself on the page so
05:39 - quite simple however we've obviously got
05:42 - a few things we need to take in take
05:44 - into account I want to display leading
05:47 - zeros before this and this here if we've
05:50 - only got one particular character I
05:53 - wanted to show like it would on you know
05:55 - say like a digital clock or something
05:57 - like that
05:58 - so just up here we want to go ahead and
06:01 - change this around and then we'll start
06:03 - to create our callback function