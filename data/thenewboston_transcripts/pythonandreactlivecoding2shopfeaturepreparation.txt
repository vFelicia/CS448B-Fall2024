00:01 - already y'all welcome back to another
00:03 - video and before we get to the good
00:06 - stuff I do have a couple big
00:08 - announcements the first incredibly huge
00:11 - announcement is that we now have two
00:14 - users on the new boston.com bust out
00:17 - that champagne baby bust out that
00:19 - champagne all right so yeah I am one of
00:22 - them but you know what still good still
00:24 - good now another thing that I wanted to
00:27 - announce is that I know it's only video
00:29 - two in the series but yeah we're already
00:31 - going to Pivot
00:33 - and instead of our original plan of
00:37 - building out the trading feature
00:40 - what I decided to do is instead build
00:43 - out a shop feature instead and the shop
00:45 - feature is going to be similar to what
00:47 - we have in tnb OS and the reason for
00:50 - this is because the goal of this project
00:52 - is to encourage people to create their
00:55 - own digital currency now right now
00:58 - there's really no incentive for them to
01:00 - do so I mean sure they can go ahead and
01:04 - trade it for these two existing
01:05 - currencies but even if they have these
01:08 - there's really nothing you can really do
01:10 - with them aside from music in tnb OS
01:13 - however tnbos isn't really going to be
01:16 - that useful until we get a much larger
01:18 - Network effect going
01:19 - so just to kind of add a very uh I would
01:23 - say a more clear use case we'll go ahead
01:26 - and almost like recreate this
01:27 - Marketplace on the new boston.com and
01:30 - this will allow people to sell their
01:31 - goods for really any digital currency of
01:34 - their choosing and just to give you a
01:36 - real quick real quick overview of this
01:39 - functionality for those who didn't watch
01:41 - the tmbos video
01:43 - um well it's pretty simple you basically
01:45 - have a buy section and a cell section
01:48 - and a seller can go in the sell section
01:50 - of course add their products and they
01:53 - can choose what core AKA what digital
01:55 - currency they want to sell for and the
01:56 - amount
01:57 - and then once they have their products
02:00 - listed they can go ahead and activate it
02:02 - and this pretty much means take it out
02:04 - of draft mode and make it live on the
02:06 - marketplace and then you just have a
02:08 - little product section to see everything
02:10 - you're selling
02:11 - and then from the buyer's perspective
02:14 - they have you know a pretty generic
02:17 - Marketplace View
02:18 - a list of all the beautiful products
02:20 - they can go ahead and click in one and
02:23 - add it to cart
02:24 - and then once it's in their cart they
02:27 - can just go ahead and check out and in
02:30 - addition to this they always or excuse
02:32 - me they also have an address section
02:34 - where they can add any of their
02:35 - addresses
02:37 - and then of course whenever you're
02:39 - checking out you can just choose one of
02:40 - those
02:42 - so I only have one now so just choose
02:44 - that and then whenever the buyer places
02:47 - an order it's going to appear in their
02:49 - orders and then from the seller's
02:51 - perspective again they have this order
02:54 - section as well to see what people have
02:56 - ordered so they can ship those goods
03:00 - all right so yeah that's pretty much
03:02 - what we're going to be doing and again
03:04 - right now this marketplace right here is
03:08 - peer-to-peer so it doesn't use any uh
03:11 - back end at all really just the core to
03:13 - Route data back and forth and I built
03:16 - out a lot of these models already for
03:19 - example the product model
03:21 - uh so on and so forth but we're gonna
03:23 - have to make some small adjustments to
03:25 - this just to kind of uh support kind of
03:29 - like back in development for example
03:31 - right now it's using an image URL and
03:33 - we're going to be storing those uh on
03:36 - our back end and let me see what other
03:39 - things
03:40 - um yeah just some other models here that
03:44 - we aren't really going to need that were
03:46 - kind of designed for making sure two
03:49 - client devices were in sync when you
03:50 - don't have a back end but now we have
03:52 - the luxury of having a back end so yeah
03:55 - just some small tweaks for that but that
03:57 - is kind of the gist of what we are gonna
03:59 - be doing
04:01 - so on that note another thing that I'm
04:06 - pondering is this so I already see some
04:10 - conflicts
04:12 - um as far as naming goes for example we
04:15 - have these trade orders remember we
04:18 - talked about in the last video whenever
04:19 - you place an order to kind of trade uh
04:22 - two currencies with each other then you
04:24 - have this orders model right here and
04:27 - these trade orders are going to clash
04:29 - with these shop orders uh same name and
04:32 - Convention
04:33 - also when I was building out this uh
04:36 - project I didn't really
04:40 - look ahead and assume that we're going
04:42 - to be building a shop app so I
04:44 - structured this
04:46 - kind of not supporting that I'm now
04:49 - wondering if it's going to be better to
04:51 - change things around so let me so what
04:54 - I'm thinking about doing is
04:57 - all right I'll talk you through each of
04:59 - these uh packages first
05:00 - so this API
05:02 - actually you wait a minute let me go
05:05 - ahead and I have a branch right here I
05:07 - was adding Pi test
05:10 - and again uh well I don't think I said
05:13 - this but this series is going to be a
05:15 - little bit more casual I you know know I
05:19 - have like my tutorials ordered and
05:20 - whatnot but uh yeah it's pretty much
05:23 - just gonna be me hacking away at this
05:25 - thing so don't expect like a structure
05:27 - tutorial series like you uh might have
05:30 - in a lot of my other series
05:32 - but either way let me see what I got so
05:34 - far right here
05:35 - so I'm on this pull request right now
05:37 - which was just to uh add Pi test and I
05:41 - just wanna
05:42 - make sure that this is working before I
05:45 - merge it in so make your own server
05:49 - all right so I've got my dependency
05:51 - server and first before I merge anything
05:53 - I just want to check for linting issues
05:58 - and then make a test
06:00 - and this is my Pi test command that I
06:02 - added in this branch
06:05 - all right
06:07 - so make sure I'm all synced up push that
06:09 - up pull it down
06:12 - look at my code all around okay
06:14 - and then just a quick code review of
06:17 - this because I actually was working on
06:18 - this last night
06:19 - and then I got a little bit distracted
06:22 - had to eat dinner and then fell asleep
06:25 - so let me just make sure here my make
06:27 - commands
06:29 - yada yada pie test dependencies
06:33 - these look good for my pie test settings
06:37 - and then to test login
06:41 - well this is my data testing Response
06:45 - Code these are the keys in my response
06:50 - expected Keys as well and expected shape
06:55 - okay
06:57 - and then what I have is this fixture
07:00 - right here here API client Bucky and
07:03 - this is pretty much um an authenticated
07:06 - API client with it's authenticated by
07:09 - this sample user Bucky
07:11 - so when Bucky gets a list of course you
07:14 - should get a 200 response and by default
07:16 - it's just going to be empty list and
07:18 - then what we're going to do is we're
07:19 - going to make three cores using this
07:21 - model Bakery
07:24 - and then this is the expected data for
07:27 - each one response code Json equals that
07:30 - good good
07:32 - and all right yeah this is another thing
07:34 - that I'm doing so this is the fixture
07:37 - for just your general API client with no
07:39 - authentication whatsoever and then
07:42 - whenever you want to use an
07:44 - authenticated user in any of your test
07:46 - for example I'm using API client Bucky
07:48 - right here it just gets an
07:51 - authentication token using this function
07:53 - right here get access token and it
07:56 - pretty much just hits your API endpoint
07:57 - or a login endpoint and you know get the
08:01 - token back and then it uses the API with
08:04 - those credentials right here so that's
08:06 - what's going on for the testing
08:08 - and this I talked about in my Pro Django
08:11 - series uh just a little flag to so the
08:14 - system can determine when pi test is
08:16 - running just because we pull in
08:17 - different settings
08:19 - this is just some sample sign-in key and
08:22 - account number used for development and
08:24 - testing you of course don't want to use
08:27 - this in uh well you don't want to use
08:29 - this because well everyone has access to
08:31 - it
08:31 - so you want to generate your own one of
08:34 - those for development and yeah looking
08:37 - good all right
08:39 - so now let me go ahead and just squash
08:42 - and merge this bad boy in and then we
08:43 - can get started
08:46 - on probably refactoring
08:49 - all right so that's immersion
08:52 - no more issues and let me see
08:56 - for some reason I like to stop my server
08:57 - whenever I merge in a branch
09:02 - so that's merge into Master pull that
09:04 - down
09:07 - and then we can delete this
09:13 - look down again restart and it should be
09:15 - good to go
09:22 - and can close out of this too and also
09:24 - this one since we want to work locally
09:31 - all right good to go actually let me
09:35 - just make tests real quick make sure
09:36 - nothing broke
09:41 - and sweet okay so now that we have this
09:46 - actually let me go ahead and pull up the
09:48 - new boston.com again and figure some
09:50 - stuff out so what I'm probably going to
09:54 - do I'm kind of just thinking how the UI
09:56 - is going to be structured and typically
09:59 - what I would do if I was working with
10:01 - the team is this is the point in time
10:04 - where you want to write out all your
10:05 - business requirements and then after
10:07 - that I would probably start wireframing
10:09 - in what I like lucidchart is a tool and
10:12 - then discuss it with you know product
10:13 - manager so on and so forth however since
10:16 - I am the uh lead developer and lead
10:19 - designer and product manager all in one
10:22 - I have a little bit more freedom to kind
10:24 - of do everything myself
10:26 - so what I'm doing right now is kind of
10:29 - just going through and thinking how I
10:31 - want to structure this
10:33 - so the cores
10:36 - so again the goal of this is to pretty
10:39 - much merge this
10:41 - entire shop application
10:44 - into this new Boston website
10:47 - so we are still going to have this cores
10:50 - because that's applicable to both the
10:52 - trade and Shop basically what digital
10:55 - currencies do you want to use
10:57 - wallets
10:58 - we don't need to do anything here
11:01 - because that's also going to be
11:03 - um
11:04 - Apple applicable to both
11:07 - and then for this Trading
11:10 - what I'm thinking about doing is pretty
11:13 - much having cores while it's trade and
11:17 - shop and then I'm going to take these
11:19 - orders which are your trade orders and
11:22 - somehow move them under here
11:24 - and then
11:26 - this tab right here which will become
11:27 - shop
11:29 - this will have its own nested orders and
11:31 - I think that like visual hierarchy of
11:33 - everything would be all right
11:36 - so now the question is how do I
11:39 - merge orders in here what I'm thinking
11:43 - about doing you know what I could do
11:47 - I could rename this tab to change
11:52 - and then kind of have a system like this
11:55 - where I have like two different well
11:58 - pretty much a menu bar on the top
12:00 - somehow and
12:03 - like one button says trade and one
12:05 - button says orders so basically taking
12:08 - these two and moving them to a top
12:11 - navigation item
12:13 - and then
12:14 - I think that will be good
12:19 - about this for another second
12:22 - yeah I think that's good
12:24 - now
12:26 - let me make a front-end ticket to this
12:28 - to start organizing things so I'm gonna
12:30 - say
12:32 - the New Boston front end I'm gonna make
12:34 - a new issue
12:36 - and so I guess this video will pretty
12:39 - much just be preparation for
12:42 - what we're gonna do or for this future
12:45 - migration but uh probably I don't even
12:48 - know if we're going to get to the shop
12:49 - app at all but uh let me just do this so
12:54 - um
13:02 - and I will say to do
13:07 - and I'll have a little checklist
13:12 - all right so to prepare this the first
13:15 - thing that I'm going to do is rename
13:18 - trade uh what am I calling this the
13:21 - trade page to exchange
13:36 - and I'll say URL as well
13:40 - [Music]
13:42 - because right now this is in trade URL
13:44 - and I want to change that as well and
13:47 - then I'll say uh create a top toolbar
14:01 - for the new exchange seduction section
14:05 - and then after that I'm gonna
14:08 - Nest trade Nest the existing trade in
14:13 - orders pages
14:19 - under the new
14:23 - 16 exchange section and also once that's
14:28 - done I'm going to be creating a new shop
14:32 - section here but I think I want to do
14:36 - that in another ticket
14:39 - yes this is kind of just like
14:40 - preparation also if I do it in this
14:43 - ticket then I'm just going to have like
14:44 - an empty shop page and I always like to
14:47 - um
14:48 - whenever I complete a ticket like have
14:50 - it be a point where you have like a
14:52 - working application still not like a
14:54 - Half Baked feature
14:55 - so I think that this is good for right
14:58 - now
15:00 - so let me go ahead and submit that
15:02 - and now let me go ahead and figure out
15:05 - what I need to do on the back end to
15:07 - prep for this
15:11 - actually I can steal that same title
15:17 - prepare for a shop feature
15:28 - all right so on the back end what are we
15:31 - gonna do so this API right here
15:34 - um this isn't a Django app it's just a
15:36 - package this is for connecting basically
15:39 - your functionality for connecting to the
15:42 - different cores
15:43 - authentication this is of course all of
15:46 - the uh login stuff
15:48 - course this stays the same these are
15:52 - pretty much your different digital
15:53 - currencies General this is just a bunch
15:55 - of General utility functions so on and
15:58 - so forth invitations is for that
16:00 - invitations uh logic that we're going to
16:03 - be replacing
16:04 - now orders this is likely what's going
16:07 - to change
16:10 - so
16:11 - this
16:13 - app I don't want to have as a top level
16:16 - app anymore
16:19 - because I want to Nest this
16:23 - or I want to move this logic under
16:27 - should I call it exchange or trade
16:30 - probably go with exchange since that way
16:34 - my Django applications kind of match up
16:35 - with my UI
16:38 - yeah
16:39 - yeah okay
16:42 - so I'm gonna say
16:46 - to do
16:49 - I'll say
16:57 - create a new exchange app
17:01 - and then
17:03 - I would say
17:06 - move order logic into that app
17:12 - actually is this a good name for it so
17:14 - what I usually like to do is for my
17:17 - Django application naming conventions I
17:20 - like to keep them plural whenever I can
17:23 - see cores invitations orders and then
17:26 - for my I want to say like my most
17:29 - important model if that makes sense
17:32 - um
17:33 - is usually just a singular version of
17:35 - this app so under orders your like most
17:38 - important model is order so that's why
17:40 - you get that same thing with invitations
17:43 - you can see invitation course course
17:46 - well you get the point but this was
17:48 - recommended by two scoops of Django and
17:51 - I just really like it for all my
17:52 - projects
17:55 - all right now let me look at this so
17:59 - this is interesting as well and let me
18:03 - point something else out so right now a
18:07 - transfer in the app is basically this so
18:11 - whenever you go to your wallet and you
18:13 - make a deposit or withdraw then
18:16 - what happens is let me actually pull
18:19 - this up
18:22 - where are you at lose the chart right
18:25 - there
18:28 - okay
18:31 - so system overview check it out
18:34 - so right now
18:37 - a transfer is basically a movement of
18:40 - coins from well basically a deposit or
18:43 - withdraw
18:44 - and
18:46 - what
18:48 - I'm thinking of doing in the future and
18:52 - I wonder if I should do this now or if
18:53 - it's just too much but I kind of want
18:56 - two different uh versions of a transfer
18:59 - one acts like more of a wire whenever
19:03 - I'm
19:04 - how should I say this it's almost like
19:06 - an external transfer where I'm taking
19:09 - something uh from a core and moving it
19:13 - to The Exchange account now an internal
19:15 - transfer is just
19:17 - and I'll show you what's going on right
19:18 - here
19:20 - so the other type of transfer that I
19:23 - don't have yet
19:25 - but if you see this wallet object
19:29 - then once those coins are kind of uh
19:35 - deposited to The Exchange I would say
19:37 - then whenever a trade happens for
19:41 - example someone trades tnb for VTX
19:44 - um that trade it never actually hits
19:47 - these external cores so basically you're
19:50 - on a credit system and told the point
19:53 - where you deposit or withdraw so in that
19:56 - sense I'm thinking
19:58 - I was thinking of naming this like
20:00 - external transfer
20:02 - and then these internal transfers but
20:05 - I'm also reconsidering uh renaming these
20:09 - to wire kind of like when you wire funds
20:11 - between a bank it it's like two separate
20:14 - Banks and then the transfer could be
20:16 - kind of more internal
20:17 - but either way I think that's a little
20:19 - bit too much
20:22 - see this is the debate do I do it now
20:25 - knowing that I'm like 90 percent gonna
20:28 - build out this logic in the future
20:31 - or do I not
20:36 - hmm
20:38 - so this again is most likely going to be
20:42 - renamed
20:44 - you know what I think I'm gonna just
20:46 - rename this transfer to wire
20:50 - right now
20:54 - kind of to Future proof everything
20:56 - yeah so anyways just a recap real quick
20:59 - so I'm going to rename transfer to wire
21:01 - let me put this in here as well
21:10 - so a wire is pretty much going to be any
21:14 - of these deposits or withdraws
21:18 - and then a transfer is we're going to
21:21 - have this functionality later on but
21:23 - let's say that there is just another
21:25 - user on
21:27 - um the new boston.com and you just want
21:30 - to kind of move your balance over from
21:33 - your wallet to their wallet again that's
21:36 - not going to require hitting any of
21:38 - these cores since those coins are
21:40 - already just on a credit system so I'll
21:43 - call that a transfer
21:45 - and we'll build those out later but for
21:48 - right now uh we'll just kind of keep
21:50 - that in mind okay so getting back to our
21:54 - Shuffle
21:56 - um orders
21:57 - is going to be nested under exchange an
22:00 - exchange app that we're going to build
22:02 - and then
22:04 - these transfers
22:09 - are going to become a wire
22:12 - I'll say rename transfers app to wires
22:16 - and I'll say move
22:19 - wires logic
22:22 - into the
22:24 - change app
22:32 - okay
22:33 - so then the exchange app
22:40 - let me kind of scope this out
22:45 - so the exchange app
22:53 - going to have
22:58 - orders and wires
23:04 - and that will Encompass these objects
23:08 - and these objects
23:13 - I think that makes sense okay
23:17 - so then this final
23:21 - structure is going to be API top level
23:23 - that's good authentication Tuple that's
23:25 - good course top level General
23:26 - annotations top level
23:29 - orders are going to be nested transfer
23:32 - is your name to wires those are nested
23:34 - project is good these are just like my
23:36 - project settings top level that's good
23:37 - then users and wallets want these top
23:40 - level as well
23:43 - all right
23:44 - so
23:46 - on that note where should I begin
23:51 - let me actually go ahead and pull up
23:54 - get rid of this like to keep things nice
23:56 - and clean
24:07 - all right so this is all pretty much my
24:10 - prep work
24:12 - before we even get to this shop and I'm
24:15 - just thinking now whether I want to
24:17 - start on the front end or the back end
24:18 - so it's
24:21 - actually I probably need to submit both
24:23 - these tickets together they're going to
24:25 - be pretty honking Tonkin tickets
24:28 - um
24:36 - actually maybe I'll just do the front
24:38 - end first because this is all
24:42 - yeah
24:44 - that's probably going to be easier
24:49 - okay so my plan is to do the front end
24:54 - first
24:55 - which is pretty much restructure uh
24:57 - these two sections
24:59 - um unify them under the exchange section
25:01 - and then once I have that done and taken
25:04 - care of since that's all like um
25:06 - visual stuff you don't really need to
25:08 - mess with the back end then what I'm
25:10 - going to be doing is completing this
25:13 - back-end ticket and this is going to be
25:16 - this is going to require renaming of
25:18 - some models
25:20 - so whenever I do this that's going to
25:23 - require another front-end update as well
25:25 - so I'll make a separate ticket actually
25:28 - I can make that right now
25:31 - um
25:49 - running changes
25:51 - create to this ticket right here
25:58 - all right so anyways to recap and
26:02 - actually uh submit this video and you
26:04 - can tell me if this is a good game plan
26:05 - before I get started but anyways uh this
26:08 - is what I'm gonna work on first prepare
26:10 - all the UI shot features and then I'm
26:13 - going to work on this ticket and this
26:16 - ticket together since I need to merge
26:19 - those in at the same time
26:21 - and then once we have all that prepared
26:24 - we should have our structure really
26:26 - ready to go and uh yeah ready just to
26:29 - build the shop out Shop app out from
26:32 - there so uh yeah let me actually upload
26:35 - this video to YouTube because what I
26:37 - want to do another thing in this series
26:39 - is I want to kind of
26:42 - um get everyone's feedback before I go
26:44 - too far ahead and I have to kind of uh
26:47 - revert if someone has like a better idea
26:48 - on how to do things so anyways that's my
26:51 - game plan for now let me know what you
26:53 - guys think and yeah hopefully get
26:55 - started on this soon so yeah see you
26:58 - next time