00:00 - alright guys welcome back in this video
00:02 - I want to talk to you guys about generic
00:04 - views so first let me explain what they
00:07 - are so basically whenever you make a
00:09 - website or go to a website you're going
00:11 - to notice that all the websites that you
00:13 - go to kind of have the same pattern
00:15 - they either display a list of objects or
00:18 - they have details about one object to
00:22 - different pages so if you think about a
00:25 - website like YouTube whenever you search
00:28 - for video it just has a list of all the
00:31 - videos that you can scroll through and
00:33 - find your video and then when you click
00:34 - one it has details about that video
00:37 - of course the player and all the
00:39 - comments in related videos whatever so
00:42 - what about on a website like Facebook
00:44 - well on your newsfeed it has a list of
00:47 - everyone's post and then you can click
00:51 - either you know someone's profile or
00:53 - picture or something and then it has
00:55 - details about that object so again it
00:57 - all comes down to two things a list of
01:00 - objects in details about one single
01:03 - object so I'm sure no matter what
01:06 - website you think of they always have
01:09 - these same patterns now on our website
01:11 - that we're making right now we're kind
01:13 - of doing the same thing the home page is
01:15 - just a list of all of our albums and
01:17 - it's going to be the cover photo and you
01:19 - know the artists and stuff later on
01:20 - whenever we design it properly but it's
01:23 - basically a list of all of our albums
01:25 - then whenever we click one there's
01:27 - details about that individual item so
01:30 - the album logo and all the songs tomato
01:34 - tomahto
01:34 - so since Django realized that people
01:37 - were just creating these same patterns
01:38 - over and over and over again why not
01:41 - help them out and speed up the process a
01:43 - little bit so just a heads up before
01:45 - this tutorial I pretty much clean out
01:47 - everything in the index.html and details
01:51 - that HTML and I got rid of all the
01:53 - favoriting form because that's not the
01:56 - proper way to actually favorite songs
01:58 - that was just a little example so I
02:00 - pretty much stripped everything down
02:01 - except you know just displaying the bare
02:05 - basics like on the album name and you
02:10 - know the song titles and tomatoes
02:12 - so there you go just want to give you
02:14 - guys a heads up so now with that being
02:17 - said I'm actually going to go ahead and
02:18 - delete this so just go ahead and delete
02:22 - everything to do with favorites and
02:23 - actually let me go ahead and delete
02:25 - everything inside views and I know you
02:27 - guys are like scream like oh my god what
02:30 - are you doing we spent like 20 tutorials
02:33 - learning about those everything I
02:35 - learned is deleted guys I promise like I
02:38 - said you guys are going to love me after
02:40 - this so instead of the way we've been
02:43 - making views before which were basically
02:45 - functions what we're going to do now is
02:47 - we're going to make something called a
02:49 - generic views so from Jango dot views
02:55 - import generic now we also need to
02:59 - import albums so from models import
03:03 - album art so in this is Errol I'm just
03:06 - going to make two generic views oh sorry
03:09 - got black long alright so the first one
03:12 - is just going to be a list generic view
03:14 - which is going to list all of our albums
03:16 - and the second one is going to be a
03:17 - detail generic view which is going to
03:19 - give us details about that individual
03:22 - album so it's going to be the exact same
03:24 - as before to the user but we're going to
03:26 - write a lot less code so how do we make
03:31 - a generic view well instead of functions
03:33 - we actually use classes so for the home
03:37 - page since it's the next page I'm just
03:38 - going to say index view now the type of
03:43 - view we use we actually inherit it so
03:47 - there are a couple different types of
03:49 - course in this tutorial I'm going to be
03:50 - teaching you guys about the list generic
03:53 - view and also the detail generic view
03:55 - but remember on the index page is just a
03:58 - list of all of our albums so we're
04:01 - actually going to inherit from generic
04:03 - list view alright so what we need to do
04:09 - now is the first thing we need to
04:10 - specify is what template we're using so
04:13 - over in templates index.html of course
04:17 - we're using index the HTML to display
04:21 - the albums so I'm just going to go ahead
04:24 - and write template name
04:25 - and set this equal to music / index.html
04:31 - so that just says whenever we get a list
04:34 - of all of the albums
04:35 - plug them into this template right here
04:38 - pretty easy now there's only one other
04:42 - thing that we need to make in here and
04:44 - that is a query set function so
04:47 - basically we're going to say we're going
04:50 - to make a function called get query set
04:54 - and all this is going to do is we're
04:56 - going to query the database for whatever
04:58 - albums we want and in this example we'll
05:01 - just go ahead and get all of them so
05:04 - returned album objects all and guys you
05:07 - know what this is actually it this is
05:10 - all you need to do for this generic view
05:14 - now before I run this I actually need to
05:16 - complete the rest of this code so that's
05:19 - all we need to do for the home page and
05:22 - let's go ahead and make the details view
05:25 - now so detail view and again whenever
05:30 - you look at the details of an album it's
05:32 - not a list of things it's just details
05:34 - about one object so the generic view for
05:38 - this is generic where is it detailed
05:42 - view right there and this is even easier
05:45 - so since you're not actually getting a
05:48 - list of objects all you need to say is
05:51 - okay first of all what model or what
05:54 - type of object are you trying to get the
05:56 - detail of and we'll just say the model
05:58 - equals album trying to look at the
06:01 - details for an album and the last thing
06:04 - is the template name just like this so
06:06 - whenever you give me that album what
06:09 - template do you want me to plug it into
06:11 - and that's just the detail view or
06:13 - detail template right there so detail
06:16 - the HTML now the only other thing or the
06:21 - only other file we have to change is
06:22 - this URLs right here now of course I
06:24 - just want to delete this first of all
06:26 - since we're not even using that anymore
06:27 - the favorite so not a whole lot is going
06:30 - to change in this file but a couple
06:32 - things I want to point out that are very
06:33 - important is this you know how I said
06:36 - that each URL pattern has to be hooked
06:39 - up to
06:39 - view function well right now we're using
06:42 - these classes I mean this class doesn't
06:45 - even have any functions or methods
06:46 - inside it so what we need to do is
06:49 - instead of these functions we actually
06:51 - need to reference on the class and then
06:54 - convert it to a view so you just review
06:56 - for each one and then you write the
06:59 - class name which is index view and then
07:03 - since you actually need a function you
07:05 - just call as view so we're pretty much
07:08 - saying hey we're using a class but since
07:10 - you need to view just go ahead and treat
07:12 - it as a view so we're going to do the
07:14 - same thing right here so the class of
07:17 - this was detail view and of course as
07:22 - view now the last thing I want to point
07:25 - out is whenever you're using a detail
07:28 - view it actually expects the primary key
07:31 - so we're pretty much going to give it
07:32 - the primary key of one if we want the
07:35 - Taylor Swift album or two if we want the
07:37 - myth album so instead of album ID here
07:40 - I'm just going PK for primary key and
07:43 - that's it so now check this out
07:46 - hopefully one of your refresh we should
07:48 - see huh you see I thought we're supposed
07:52 - to get a list of albums right here but
07:54 - we got nothing and the reason for that
07:56 - is the last piece of the puzzle you see
07:58 - whenever you query all of the albums
08:02 - right here it's pretty much going to
08:03 - return a list of all of your album
08:05 - objects but it returned it but it didn't
08:09 - know what variable to store it in so we
08:11 - could use it in our template how did it
08:13 - know that it was supposed to be called
08:15 - all albums well by default whenever you
08:19 - use a ListView it's going to go ahead
08:21 - and query this and it's going to return
08:23 - it in an object called object list so if
08:27 - you just want to name it object list and
08:29 - check it out refresh this and boom
08:32 - roasted everything looks fine now one
08:37 - other thing that you can do is if you
08:39 - actually made this and then you gave it
08:41 - to your web designer and he was like and
08:42 - I hate this name object list why can't
08:45 - you just name it album list that's so
08:47 - much more intuitive like shut
08:49 - you can actually do that if you want so
08:52 - again the default name whenever you
08:54 - return a list of objects from the
08:57 - ListView generic function is going to be
08:59 - called object list but if you ever want
09:01 - to override it then you just have to do
09:03 - this make a variable called context
09:06 - object name and again by default what's
09:12 - happening is it's essentially equal to
09:13 - this object list but you can change it
09:16 - to anything you want like all albums and
09:20 - now you're a list of albums you can just
09:23 - refer to as all albums just like that so
09:27 - refresh and everything is good to go so
09:30 - again one last time there were a bunch
09:33 - of patterns that people were using over
09:35 - and over again whenever they're making
09:37 - websites mainly displaying a list of
09:40 - objects and displaying the details for a
09:44 - single object so instead of having to
09:47 - write all those functions like you
09:49 - always do instead what you can do is use
09:51 - these generic views so it's a lot
09:54 - cleaner and check it out we now made to
09:58 - entire web pages and look how cleaner
10:00 - this is than just using view functions
10:03 - so thank you guys for watching and we're
10:05 - going to subscribe I will see you guys
10:06 - next time