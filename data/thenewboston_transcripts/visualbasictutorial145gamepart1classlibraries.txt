00:00 - hello YouTube Sam here from youtube.com/
00:03 - onli gamer for the New Boston and in
00:05 - this tutorial we're going to be talking
00:07 - about class libraries now when big
00:10 - companies work on an application um in
00:13 - either Visual Basic or C or other
00:16 - languages they can't just give every
00:18 - person a big huge copy of the project
00:20 - file and make them go through and look
00:23 - and see um what the program does and how
00:26 - it works so what they do is they'll
00:28 - split that work up into a whole bunch of
00:29 - different people now one person may
00:32 - write a class another one may write um
00:35 - another class um and then you have
00:38 - what's called class libraries now it's a
00:40 - basically a library of classes it holds
00:43 - a bunch of classes that can be used in a
00:44 - program and it's all encapsulated into a
00:48 - dll file so that the person using it
00:50 - does not have to know what's inside of
00:52 - it or what it does um they should be
00:54 - able to just use it and see what
00:56 - everything does because you either used
01:00 - good names for your classes and
01:01 - functions and methods or you comment
01:04 - them commented them right um so um you
01:09 - can create class libraries and use them
01:11 - in other projects and you don't have to
01:14 - see what the code is and you won't have
01:15 - to change anything in the code it'll
01:17 - just work um so let's go ahead and make
01:21 - a new
01:28 - project so we'll go ahead and instead of
01:31 - selecting a Windows forums application
01:33 - we will select a class library and you
01:35 - can see that it says up here a project
01:37 - for for creating a VB class Library
01:40 - which is a dll so we'll just call this
01:45 - um enemies library now if any of you
01:50 - have watched um any of the new Boston's
01:53 - C++ tutorials you may remember he made
01:57 - some tutorials about inheritance using
02:00 - um enemies and villains and stuff now
02:02 - I'm going to be using that same concept
02:04 - in here um so in case you've already
02:06 - done that it'll be familiar to you and I
02:08 - feel that it's a good way to teach um
02:11 - the class Library class libraries and
02:14 - we're going to be making a game out of
02:15 - it
02:17 - so now that this is
02:20 - loaded let's go ahead and we will add or
02:25 - we'll rename this right
02:27 - here to class 1vb this is automatically
02:30 - generated by the class Library project
02:33 - we'll call it enemy.
02:37 - VB and you can see that it changed this
02:39 - for us right here now I'll just zoom in
02:42 - some okay so let's go ahead and create a
02:45 - Constructor for
02:48 - this so we'll just go ahead and set
02:52 - Health equal
02:55 - to 100 now we haven't made the variable
02:59 - Health yet so let's go ahead and create
03:01 - a private variable called health so
03:04 - we'll make it an integer and we'll just
03:07 - leave it like that okay so when an enemy
03:10 - is constructed it's going to set their
03:12 - health equal to
03:14 - 100 now what we want to do is let's make
03:17 - some stuff um that the enemy can do so
03:22 - we'll go ahead and
03:23 - do let's see
03:27 - sub attack and then we will by
03:33 - ref um user
03:37 - Health as
03:40 - integer so whenever they call attack
03:43 - what it's going to do is you it's going
03:45 - to require an integer to be passed in
03:47 - here and it's going to reference it so
03:49 - it can change that integer
03:51 - so uh let's go ahead and create a let's
03:56 - create a random generator so that we can
03:59 - randomly generate from a series of
04:00 - attacks so we'll go ahead and
04:05 - type um
04:07 - dim J
04:09 - as new random so now that we have our
04:14 - new random let's go ahead and pick
04:16 - between a certain number of
04:18 - attacks so gen do next int or
04:25 - next and what we want to use is the Min
04:29 - value and then the max value so the Min
04:31 - value is going to be equal to one the
04:33 - max value is going to be equal to let's
04:35 - leave it at five for now because we
04:36 - haven't thought of any attacks now let's
04:39 - set set some uh default attacks for the
04:42 - enemy so we'll come up
04:45 - here and we will create an array so
04:51 - private
04:54 - attacks and we'll just give it let's say
05:00 - two so zero and
05:02 - one and we'll set it equal to well we
05:06 - don't need that right
05:08 - there we'll set it equal to let's
05:12 - say um
05:15 - punch
05:17 - and kick so all of the enemies will have
05:21 - the ability to attack now let's just
05:24 - create this as default
05:28 - attack Okay so when they attack we want
05:30 - to generate a random number uh between
05:34 - let's say
05:35 - one or we'll do
05:38 - zero and one so it's going to pick
05:40 - between either zero and one then what we
05:43 - want to do is we want to set user
05:46 - Health equal to something now we have to
05:49 - know what to set or we have to know what
05:51 - to take away from user health so let's
05:54 - say let's do a select case
06:00 - so we'll start off by typing select
06:04 - case and we want to do we want to use
06:07 - the number that's generated right here
06:09 - so what we can do is we can just cut
06:13 - this and paste it right there so it's
06:15 - using that
06:17 - number
06:21 - so let's
06:23 - see looks like it's not wanting me to do
06:26 - that so let's just create a variable so
06:30 - dim attack num as
06:34 - integer and we'll set it equal to this
06:37 - okay so now we're going to use attack
06:40 - num so select case attack num uh let's
06:43 - do
06:45 - case0 so if the number is zero uh which
06:50 - is which would correspond to punch in
06:52 - here because attacks at index zero we
06:55 - want to just um take away let's say uh
06:59 - one from health so user
07:03 - Health minus equals 1 so this way we
07:06 - don't have to know what user health is
07:08 - we can just take away one from it then
07:10 - we'll do case one and then we'll just
07:13 - take away uh two for a kick so user
07:17 - Health minus equals
07:20 - 2 let's go ahead and get rid of
07:24 - that okay so now we have our default
07:28 - attack let's let's go ahead and um let's
07:32 - just add one more property that will get
07:35 - our health so we'll create a
07:41 - public readon
07:43 - property so that they can only get the
07:45 - health they can't change in it they
07:47 - can't change anything in it so let's
07:50 - just do
07:52 - Health as integer now I can see that we
07:55 - have already declared Health up here so
07:57 - let's just call it int health so that we
08:00 - can refer it to refer to it um in this
08:03 - class as in health they won't be able to
08:04 - see it outside of this class so if we
08:06 - use health for the property it will make
08:08 - it easier for somebody else using our
08:10 - class library to know what's going on so
08:14 - we'll just return int
08:22 - Health okay let's see here everything's
08:26 - looking good okay so go ahead um create
08:29 - this project if you haven't already and
08:32 - um once you do that type in this code um
08:35 - because we're going to be using this a
08:36 - lot in the upcoming tutorials we're
08:37 - actually going to be making a game using
08:39 - this um you can see here that I've got
08:42 - some enemies and then our hero is going
08:44 - to be Popeye um so once you put this
08:47 - code in uh go ahead look over it make
08:50 - sure you know what it does and then once
08:51 - you've done that go ahead and move on to
08:53 - the next tutorial and we're going to
08:54 - continue working on it