00:00 - so let's insert some data so we'll say
00:02 - Billy uh password we'll just use as the
00:05 - same thing so pass one 2 three first
00:09 - name Billy last name Garrett let's click
00:13 - go and insert that data now you can see
00:15 - that um everything's done everything's
00:18 - worked we've got IDE of one for Alex and
00:20 - two for Billy so let's try logging each
00:22 - user in and we should return now we
00:24 - should return this user ID so Alex pass1
00:28 - 2 3 click login and it's returned a
00:32 - value of one now let's try
00:35 - Billy um pass 1 2 3 click login and it's
00:40 - returned a value of two so now we're
00:41 - logging the user in and we're also
00:43 - returning the user ID now why do we need
00:46 - this user ID the reason we need it is
00:48 - because we need to store it in a session
00:50 - in some session data so we can now then
00:53 - well we can then tell that the user has
00:55 - logged in and we can also use this ID to
00:58 - get any information we need from this
01:01 - table for example we can select the
01:03 - first name or the surname or both from
01:07 - say if we've stored one inside a session
01:10 - uh that would mean that Alex is logged
01:12 - in then we can get any data we need so
01:14 - these are the fundamentals of a user
01:16 - login system storing something that
01:18 - allows us to access data about our user
01:21 - which can change so one day I could log
01:23 - in as Alex and one day I could log in as
01:24 - Billy or another user could log in as
01:26 - Billy okay so let's um
01:30 - let's put this into a session now before
01:32 - we before we do that we need to define
01:35 - something in our core. in.php remember
01:38 - this is included at the very top of our
01:39 - index page core. in.php we need to say
01:43 - session start remember we need to do
01:45 - that for all sessions to be able to use
01:48 - them on pages so as long as we include
01:50 - this core. in.php on every file which we
01:53 - will be doing um at the very top then
01:57 - we're going to be able to log users in
01:59 - we also want OB start before that
02:02 - because what we're going to be doing is
02:04 - using header headers the header function
02:06 - to re redirect our user back to the
02:08 - index page when they've logged in
02:10 - correctly so we need OB start session
02:13 - start and now in here what we can do is
02:15 - we can say dollar uncore
02:18 - session um user ID equals user uncore ID
02:25 - so we've grabbed the user ID from the
02:27 - user that has correctly entered their
02:30 - username and password now we're storing
02:32 - it inside a session called session or
02:34 - called user ID okay now what we want to
02:37 - do is say
02:39 - header location and we want to go back
02:42 - to the index.php page we're already on
02:44 - that but this will just refresh it it
02:46 - will perform the checks to say is this
02:48 - user logged in and it will give us some
02:50 - data out
02:52 - so
02:54 - um okay so we're pretty much done there
02:56 - let's just um go back to our index.php P
03:00 - page um and we will create an if
03:04 - statement now let's assume um create
03:10 - statement else and then down here let's
03:13 - assume uh we'll ignore this for now
03:16 - let's assume that a a a a session called
03:19 - user ID has been set and it isn't empty
03:23 - now this means that the user has logged
03:26 - in because it means that we've gone
03:28 - through the process process of setting
03:31 - this to the user ID of the correct user
03:34 - that's logged in or the user that's
03:36 - correctly enter their details so all we
03:38 - need to do is say if is
03:42 - set dollor
03:46 - session user
03:49 - ID
03:51 - and not
03:54 - empty dollor
03:57 - session user ID
04:00 - so for any reason that a session called
04:02 - user ID has been set and it's not empty
04:05 - then
04:07 - um we still run this
04:10 - code well we we say is it not empty
04:13 - because we need it to be we need contain
04:15 - a value in that case we can say
04:20 - Echo you your logged in let's just
04:26 - Escape that single quotation mark
04:28 - otherwise we want to present present the
04:30 - user with the login form so let's just
04:32 - go through before I test this whole
04:34 - login process because we've pretty much
04:36 - logged a user in now so let's let me
04:39 - just test this or go through this in my
04:41 - head or not in my head but with you guys
04:44 - so um uh we'll start from this bit here
04:48 - we grab the user ID from the result of
04:50 - where we've already echoed this out so
04:52 - you know what it does we we've got one
04:53 - for Alex and two for Billy we set the
04:55 - session here so this session will now
04:58 - equal one if I login as Alex then we
05:01 - relocate to index.php so we're already
05:04 - on index.php cuz we've included
05:06 - this um we can even refresh now just to
05:10 - just to show you that we're still logged
05:12 - in so we're still not logged in now as
05:14 - soon as I type in Alex here and I type
05:17 - in pass one two3 here and I click login
05:20 - we're going to process everything that
05:22 - we've already talked about then we're
05:23 - going to locate back to index.php so I'm
05:26 - going to refresh the page essentially
05:28 - then this then this check is going to
05:30 - happen again but this time we have set
05:32 - session with the user ID uh key and it's
05:36 - not empty so we're going to say you're
05:37 - logged
05:39 - in so let's test that clicking
05:42 - login and now it says you're logged in
05:45 - no matter how many times we refresh this
05:47 - page the session is still set therefore
05:49 - we're still logged in so now you've
05:52 - essentially learned how to log a user in
05:55 - and that's basically it for logging a
05:56 - user in what you can now do is on any
05:59 - other page that you work with say you
06:02 - had a page called um I don't know um
06:05 - tutorials. PHP and you needed the user
06:08 - to be logged in you could use this line
06:11 - what you could do to make things easier
06:13 - and quicker is get rid of this inside
06:15 - here and create a function that allows
06:17 - you to quickly check if the user's
06:19 - logged in so let's go back to core.
06:22 - in.php and we're going to create a
06:23 - function called logged
06:26 - in and what we're going to do inside
06:28 - this function is we're going to say if
06:30 - we're going to do exactly the same as
06:31 - what we've done what we've just that
06:33 - we've just removed from uh index.php
06:36 - here but we're going to put it in a
06:38 - function so all we need to do is call
06:39 - this so if um if is Set uh everything
06:46 - set and it's not empty return
06:50 - true um and otherwise up here we can say
06:53 - return oh no probably not a good way to
06:56 - do it and we could say here else
07:00 - return false so if we are logged in
07:02 - we're going to return true otherwise
07:04 - we're going to return false so if you
07:06 - know about functions and if you've
07:07 - correctly learned about functions you'll
07:08 - know I can just put if logged in then it
07:11 - will say we're logged in because this
07:13 - will return
07:15 - true so this block will run if we return
07:19 - false we're going to include the login
07:21 - form so uh let's go back to the page and
07:23 - see if that works yep it still tells us
07:26 - that we are logged
07:27 - in