00:00 - hello this is Alex from PHP academy' org
00:03 - back with another video for the new
00:05 - Boston so you'll notice that if you've
00:07 - already watched my introduction to XML
00:11 - video you'll notice that I've already
00:13 - have retained the structure of my
00:16 - example and I've put it into a file
00:18 - called example XML so I've put it into
00:22 - an XML file and what we're going to be
00:24 - doing in this tutorial is just reading
00:27 - in different elements of this data so
00:30 - you can see that we've got our root tag
00:32 - here which is important this must exist
00:34 - in every XML file you create we've got
00:37 - our producers as a root tag and we've
00:40 - ended our root tag obviously at the
00:42 - bottom and inside here we've got a tag
00:47 - here called producer and we're ending it
00:49 - here and we're doing the same three
00:51 - times and inside we've got elements name
00:55 - and age for each producer so what we can
00:58 - do is we can inside PHP once we've
01:00 - opened this XML file successfully we can
01:04 - say grab the age of the first producer
01:06 - or the name of the first producer and
01:08 - vice versa weakens or so on and so forth
01:12 - we can say name and age for the second
01:14 - producer or the third producer and what
01:16 - we're going to be doing is inside out in
01:18 - next PHP file we're going to be loading
01:20 - this file in and accessing it as if as
01:23 - if it were an array we're loading this
01:26 - in as an array if you like or rather
01:30 - each each element in this or each level
01:34 - to this we're going to be accessing
01:36 - using this symbol here so we've got a
01:39 - hyphen and a greater than sign and then
01:42 - each each child if you like so we've got
01:45 - producer here and so on and so forth
01:50 - into it so you can have many parents and
01:52 - children blah blah blah we're going to
01:55 - access using array so let's go ahead and
01:58 - open up our file I'm going to create a
02:00 - new variable called
02:01 - XML and I'm gonna be using this function
02:03 - called simple XML load file now simple
02:08 - XML
02:09 - a new feature introduced in php5 that
02:13 - allows us to open a XML file using this
02:15 - function and really easily access each
02:19 - element of our XML file so you'll see
02:22 - how simple it is in just a moment so
02:24 - here we are going to specify example dot
02:27 - XML so now we've successfully opened up
02:32 - our XML let's refresh our page and see
02:35 - what happens so we've got nothing at the
02:37 - moment because we're not returning any
02:39 - values so now let's start to think about
02:42 - returning some values so we need to
02:44 - think about this carefully we don't need
02:46 - to include this producer's root tag
02:48 - anywhere because this is just a root tag
02:51 - of our document it's not important but
02:53 - what we can do is access each producer
02:55 - now because we've got these tags here
02:59 - and then elements inside so let's go
03:02 - ahead and say XML in fact what we'll do
03:05 - is we'll say echo XML and then we're
03:09 - using a hyphen and a greater than sign
03:11 - now we're going to say producer because
03:14 - this is the name of our tag here and you
03:17 - need to remember that within XML
03:18 - everything is case sensitive so if this
03:21 - producer here had a pay the same with
03:24 - this one here or capital P rather and
03:26 - the same with this one we need to give
03:28 - it a capital P when we go to access it
03:34 - and inside here let's just save that
03:36 - father
03:37 - okay so XML producer now we've got
03:39 - square brackets because we're gonna
03:41 - choose which producer we want to echo
03:43 - data for so eating the producers ear
03:46 - over and then we're dealing with arrays
03:48 - so we've got 0 1 or 2 so just for an
03:52 - example I'm gonna leap straight to the
03:54 - second which is going to be 0 1 so let's
03:58 - put a 1 in there and now we need to
04:00 - access the tag that we want to display
04:03 - so I want to display the name and the
04:05 - age of this second producer so now what
04:09 - we can do is say no
04:10 - then we can cast it on here we can say
04:15 - age oh sorry age okay so that's it
04:18 - that's all we need to do let's go back
04:20 - to our more let's recap what we've done
04:23 - so far we've opened up our XML file
04:26 - we have echoed out our XML producer and
04:31 - the third and location one which is the
04:34 - second producer remember we start at 0
04:36 - and 1 and then we're coming out the name
04:38 - and the age which are the two tags
04:40 - inside here so let's come and refresh in
04:43 - here undefined constant age let's have a
04:49 - look at this
04:50 - oh yeah that's because yeah that's
04:54 - because we've put a space in there okay
04:56 - that subs that you find what we can now
04:57 - do is just say age there as well I
05:01 - believe work No okay so we'll have to we
05:08 - have to redefine this here so we'll have
05:13 - to say echo out the name and then we can
05:18 - concatenate on I think we probably
05:20 - concatenate on XML producer one age so
05:30 - let's give that a refresh and see what
05:31 - happens okay yes so now we've got Billy
05:34 - and then 16 so let's just put a space in
05:37 - here so it looks a bit nicer
05:39 - today is even so we've read out the
05:45 - we've read out the second producer from
05:50 - this file and we've read the name in the
05:52 - age so however many tags we add in here
05:55 - we can we can produce them to the user
05:58 - so now you hopefully are starting to see
06:00 - why this can be useful we're
06:02 - transferring over data in a structured
06:04 - format that can be read in using a
06:07 - program like pH or sorry code through
06:11 - PHP it can also be done with other sort
06:14 - of web web development languages and it
06:16 - could also be done with software so it's
06:18 - a really really useful tool okay so now
06:22 - what we want to look at is how we can
06:25 - loop so we can produce the names of all
06:29 - the producers so let's get rid of this
06:31 - code what we want to say is we want to
06:33 - say 4-h so we're using our for each
06:35 - statement here and inside here we can
06:38 - say for each XML producer as
06:48 - and we could just give this a variable
06:51 - name so I'm going to call this just
06:53 - produce up
06:54 - so for each XML producer so we're using
06:57 - X ma to open the file so for each one of
07:01 - these producers which we've named as a
07:03 - producer we can grab this data the
07:08 - specific data that we need so what I'm
07:10 - gonna do is I'm gonna say echo produce
07:15 - over and we're just referencing it from
07:17 - this producer here for each producer as
07:21 - producer with air coming out the name
07:24 - first of all Oh name and then we're
07:29 - coming out produce age so we're saying
07:35 - we can pop the space in there is and
07:39 - then on the end we can just put a line
07:41 - break so for each of these producers in
07:44 - here produce a one two and three at
07:47 - location 0 1 and 2 we are echoing out
07:51 - the producer name and then we're saying
07:53 - is and then producer age using this
07:55 - variable here for in our for each so if
07:58 - you don't know how for each loop there
07:59 - is a tutorial on it go back and have a
08:01 - look at that and that would make sense
08:03 - but for now if we refresh you can see
08:06 - that it's produced all three so now you
08:09 - can really start to see how useful this
08:12 - can be with things like YouTube videos
08:14 - in the example that I used in the
08:15 - introduction to XML I showed some showed
08:20 - some YouTube XML output now what if you
08:24 - wanted to display say all tweets from a
08:27 - selected user on Twitter or you wanted
08:30 - to show all videos from a selected user
08:32 - on YouTube you can use exactly this to
08:35 - do that because you're loading in this
08:37 - XML file and you are showing the output
08:43 - using this kind of loop to take each
08:46 - producer in this case as a single
08:48 - variable and accessing each element or
08:51 - each tag of this whatever you want to
08:53 - call them in in sort of like a couple of
08:56 - lines rather than
08:58 - that in individually so you might want
09:01 - to say add in now
09:03 - I mean we've defined our structure we've
09:04 - defined how this is structured so we
09:07 - know how it's structured but let's add
09:10 - another producer in we've added another
09:14 - producer in now so when we're reading
09:17 - back this data we're then just updating
09:20 - the data without knowing this how many
09:23 - elements are exist within this structure
09:26 - so the whole point of this simple XML
09:29 - tutorial is showing you that no matter
09:31 - what structure we have within what as
09:34 - long as we know the structure no matter
09:36 - how many different pieces of data are in
09:38 - there we can grab every single piece of
09:40 - data and do whatever we want with it
09:42 - echo it out store it into a database
09:45 - store it into a file put into another
09:47 - XML file or like I said before just
09:50 - simply echo out to the user and display
09:52 - data like this