00:01 - now what it's done is it's returned my
00:03 - first name in my surname because the
00:05 - username and password were both found
00:07 - and they both matched in the same row of
00:09 - data so this will be classed as a
00:12 - successful login so hopefully you
00:14 - understand the concept of this and how
00:16 - it could be used in PHP and we're going
00:19 - to move on to some more queries now let
00:23 - me just close this window let's browse
00:25 - for the data let's start start from the
00:28 - beginning so what happens if let's say
00:30 - my surname changes okay
00:33 - or let's say my first name changes it
00:36 - could be anything so let's assume that
00:39 - this user Alex with the password of
00:42 - password wants to change the name of the
00:45 - first name to Dale for example okay so
00:48 - what I'm going to do is I'm going to
00:50 - click SQL remember that the ID is 1 now
00:56 - within PHP you have stored this
00:58 - somewhere in a session if you've already
01:00 - looked at sessions that like things like
01:02 - login and you'll understand the idea of
01:05 - the user could be stored in a session so
01:06 - the current user so in PHP it's quite
01:09 - easy once a users logged in and we've
01:11 - said yet the user logged in is ID 1
01:13 - we're referencing this user as ID 1
01:16 - because it's a unique field we can
01:18 - change anything just by reference being
01:20 - back to this ID 1 and to do this we're
01:24 - going to say we're not going to select
01:27 - because we're not we're not returning
01:28 - any data we're just changing what we
01:30 - want to say is we want to say update
01:33 - users set and then we choose the data we
01:38 - want to set to different value
01:39 - so set first-name equals Dale where
01:47 - ID equals one so let's just go back to
01:52 - this browse away from that new tab so
01:54 - what we're doing here is we're updates
01:57 - are using the update keyword and by the
01:59 - way you don't have to do these in
02:00 - capitals but what happens is if you
02:02 - differentiate things like update and set
02:06 - and we're in capitals you can see that
02:08 - this is the difference between your
02:10 - structured query language and what
02:12 - you're actually dealing with so it's a
02:14 - lot easier to see so what we're doing is
02:17 - we're updating users so this is the
02:19 - users table here what we're doing is
02:22 - we're setting the first name equal to
02:24 - Dale so the first name here equal to
02:27 - Dale if you were to just say first name
02:30 - equals Dale this would update both
02:33 - surnames because we've not specified
02:35 - what ID or what unique field you want to
02:38 - set it by so set first-name equals Dale
02:41 - where the ID equals one so what this is
02:45 - going to do is it's going to select the
02:46 - ID with Row one it's going to come
02:48 - across and set the first name here to
02:51 - Dale so let's just click on that I'll
02:54 - click on go rather and you can see that
02:57 - one row affected so it's telling us how
02:59 - many rows have been affected and in this
03:01 - case one rows good because we're
03:03 - assuming that this is the row that we
03:05 - want to update so now if we come into
03:08 - browse let's just close that off you can
03:11 - see that so you can see that we've
03:15 - successfully updated this first name in
03:18 - the table so you can start to begin to
03:20 - see why this is useful for when we're
03:22 - dealing with PHP for example a user
03:25 - might want to change say their password
03:27 - or they might want to change their first
03:29 - name surname email address even anything
03:31 - to do with that and we can do that
03:33 - easily within our database obviously
03:34 - we're not going to be working inside PHP
03:37 - myadmin
03:37 - we're going to be doing everything from
03:38 - PHP which is slightly longer process but
03:42 - it uses exactly the same queries and as
03:44 - long as we've got this ID stored
03:45 - somewhere in a session or a cookie then
03:47 - we can work probably not gonna cook
03:50 - excited be unsafe to some extent but if
03:54 - it's stored somewhere then we would
03:57 - would be able to do this so now let's
03:59 - looking at now let's look at the
04:01 - in rows so let's say I want to delete
04:04 - this row here this art with IE 2 or even
04:08 - ID 1 it doesn't really matter
04:10 - so let's come into our SQL table again
04:12 - and what we need to do is we need to
04:14 - this time use the delete keyword we need
04:17 - to say delete from and we need to
04:20 - specify the table so users that's very
04:22 - important delete from users where and
04:25 - then all we need to do is specify the
04:26 - column the preferably the unique column
04:29 - so if we come back to here where ID
04:32 - equals a certain amount you could say
04:34 - where username equals Alex or where
04:36 - password it called something but
04:37 - obviously at the moment we're dealing
04:40 - with sort of a user login type table so
04:42 - we're going to delete we're you may use
04:44 - ID equals 1 so it's just Y ID equals 1
04:48 - so this is going to delete from users
04:50 - where ID equals 1 so out just to mention
04:54 - beforehand
04:55 - we can use other comparison operators we
05:00 - can say things like greater than or
05:01 - equal to or each is equal to or just
05:05 - greater than or less than and things
05:07 - like that but obviously for now we're
05:08 - just inning a single row so we're ID was
05:11 - 1
05:11 - if we click go do you really want to
05:13 - search giving us a confirmation message
05:15 - because it knows that we're deleting we
05:17 - can click OK it will say one row deleted
05:20 - you'll give us how query back now what
05:23 - we can do is we can just close this off
05:27 - click on browse and you can see that
05:29 - that row has been deleted so what
05:32 - happens now if we want to reinsert a
05:34 - whole new row of data we've already
05:36 - looked at inserting the data manually
05:38 - but from PHP we're going to want to say
05:40 - create a user account we want to insert
05:42 - the data and from scratch basically so
05:46 - how are we going to do this we click on
05:48 - insert only we don't we click on SQL
05:51 - because we're doing it manually so I
05:53 - want say insert into so it's pretty much
05:56 - English language's it's easy to follow
05:58 - because you can get it stuck inside your
06:01 - head easy exactly what you're doing so
06:03 - insert into obviously we're specifying
06:05 - the table we want to set insight into so
06:09 - insert into users then we use values and
06:12 - we have two brackets
06:14 - now inside here are the values we insert
06:18 - corresponding to the fields so let's
06:23 - just browse this now this is the
06:25 - shorthand way of doing it and this is
06:27 - what I'm going to be using you can do it
06:30 - properly and long and specify each field
06:32 - name as you go along but I'm just going
06:34 - to be saying insert into users and then
06:36 - I'm just going to put the values in here
06:38 - they are in there going to be in a
06:41 - single quotation marks separated by a
06:44 - comma so at the moment if we have a look
06:47 - we've got one two three four five
06:49 - different fields so we need to insert
06:51 - five different bits of data we've got 1
06:54 - here 2 here 3 here 4 here and 5 here the
06:58 - other way round to start 1 2 etc so the
07:01 - comma separated values there we're using
07:05 - single quotation marks now
07:08 - ID can be left blank we know that
07:11 - because we this is auto increment the
07:14 - next value in set is going to have an ID
07:16 - of 3 because we're coming from the last
07:19 - value inserted 2 so we need to insert a
07:22 - username and password a first name and a
07:24 - surname so what we do is we insert say
07:27 - Alex password Alex and Gavin now if we
07:34 - don't specify say the last field here
07:37 - we're going to be returned with an error
07:38 - let's just have a look at that column
07:42 - count doesn't match value at count value
07:45 - count a right one now if you are ever
07:47 - trying to insert data from PHP and you
07:51 - are echoing out the sort of like results
07:53 - of your query if you know you may have
07:56 - an error and you get this this is
07:58 - basically what what you need to focus on
08:00 - you need to make sure that you're
08:02 - inserting the data required if you don't
08:05 - want to insert a surname for example you
08:07 - still need to specify with these
08:09 - inverted commas or rather single
08:11 - quotation marks however you just you
08:14 - can't leave it out so you have to insert
08:16 - you know can be blank so I'm just going
08:18 - to put Garrett in for now ok so that's
08:22 - basically our simple query to insert
08:24 - data so each of these we've comma
08:27 - separated code
08:28 - bond to our our column names our field
08:31 - names so we've got ideas the first one
08:33 - we've got user name as the second one
08:35 - which is Alex then we've got the
08:37 - password then we've got the first name
08:39 - and the surname
08:39 - okay so we've inserted them in order
08:42 - where they correspond so let's click on
08:44 - go you can see that one rows inserted
08:47 - inserted row ID at 3 so now let's go and
08:50 - click on browse and see what we've got
08:52 - you can see that we've now reinserted
08:56 - the value and/or the row with Alex
08:58 - password Alex and Garrett and this is
09:01 - now ID of 3 now what happens if I delete
09:04 - all of these just simply using this
09:08 - delete here and now what I want to do is
09:11 - insert a new piece of data so I'm going
09:13 - to go just insert anything
09:22 - okay so we've inserted some data and now
09:25 - you can see that it started ID 4
09:27 - let's say we wanted to go back and we
09:29 - want to start at ID 1 again now let's
09:31 - just delete that you can use this tab
09:34 - called omit in operations and if you
09:37 - come down you can see auto increment we
09:39 - can change this back to zero if we click
09:41 - on go