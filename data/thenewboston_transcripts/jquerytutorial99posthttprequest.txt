00:00 - hi this is Alex from PHP academy' dorg
00:03 - and welcome to this video tutorial for
00:05 - the new Boston in the last video we
00:07 - looked at HTTP requests in jQuery and
00:11 - how it's similar it's very similar to
00:13 - Ajax functionality we're essentially
00:17 - using our this syntax here and we're
00:19 - using the get HTTP request to send a
00:22 - file sorry variables to this file and
00:26 - then return the data so if you haven't
00:28 - watched the last video go ahead and
00:30 - watch that now in this video we're going
00:33 - to be looking at the difference between
00:34 - get and post and there's not really any
00:37 - difference we're just going to be
00:38 - talking about why we would use it
00:40 - instead of gap and then we're going to
00:42 - be supplying some additional parameters
00:43 - to this as well just so you can see how
00:47 - we pick them up in PHP so the first
00:51 - thing I'm going to do is go ahead and
00:52 - change get to post now remember our
00:56 - original example returned the return the
01:01 - reversed string that we typed in here
01:03 - now because we've changed this to post
01:05 - our get variables here are no longer
01:09 - valid so we're going to also need to go
01:11 - ahead and change them to post
01:15 - okay so let's pull up our browser and
01:17 - refresh the page I'm going to go ahead
01:19 - and type in my name and click go you can
01:22 - see that we've retrieved exactly the
01:24 - same result as when we use to get now if
01:28 - if you have you know written code before
01:31 - either in PHP or another language you'll
01:33 - understand that the difference between
01:35 - get and post is one the security aspect
01:40 - I guess where you don't show you aren't
01:43 - able to modify the variables from the
01:45 - URL and also the length of data that you
01:48 - can send so let's show another example
01:51 - let's say let's say that this text area
01:54 - here with the ID of string was actually
01:57 - a text area field
02:02 - create a text area and we'll break down
02:04 - the input box down there so the ID is
02:08 - going to still be string but we'll just
02:11 - change a few values like the rows and
02:13 - the columns and now we have on our page
02:18 - a text area so first of all it would be
02:21 - more appropriate to use poast in this
02:24 - case because we are allowed to supply a
02:27 - lot more data in here going up to the
02:31 - fact that post now allows us to have
02:33 - this data it's still going to process
02:36 - this data to reverse PHP and it's still
02:39 - going to send this string along as an
02:41 - INT as a variable called input now let's
02:44 - go ahead and also create another field
02:50 - so I'm going to go and break in fact
02:53 - we'll put this in a paragraph here and
02:57 - we'll create another paragraph just up
03:00 - here with the input type of text and
03:07 - we'll give this an ID of name okay so
03:13 - let's go ahead and preview that in our
03:14 - browser we've now got a field here and a
03:17 - field here we're going to send both
03:19 - these with the post HTTP request in Ajax
03:23 - but we're going to send two different
03:26 - values so the first thing we want to do
03:28 - is change or add another variable just
03:32 - up here and I'm going to call that name
03:35 - so we're creating a variable called name
03:37 - now this is equal to and remember we're
03:40 - going to use a selector a hash because
03:42 - we've called this input ID name to
03:46 - reference with a hash and then name and
03:48 - then again dot Val so now we have an
03:51 - additional variable called name which
03:54 - we're going to send along to this
03:55 - reverse dot PHP as well so I'm going to
03:59 - use a comet just after here and we're
04:01 - going to use exactly the same syntax as
04:03 - we did here but this time I'm going to
04:05 - send a variable called name and that's
04:09 - going to be equal to name I'm going to
04:11 - go ahead and change this to string
04:14 - I tend to do this personally I call the
04:17 - variable that I'm passing to PHP the
04:21 - same variable that I've stored in
04:23 - JavaScript now it can get quite
04:26 - confusing but for me this is just the
04:28 - way I prefer to do it as long as you
04:30 - remember that this is the name of the
04:32 - variable and this is the value of the
04:33 - variable the mission can confuse you too
04:36 - much so now what we're doing is we are
04:39 - taking the name and the string so the
04:42 - name from this box here and the string
04:45 - from this box here we are then storing
04:47 - them inside variables in JavaScript
04:49 - we're sending them to reverse dot PHP
04:52 - with a variable named string and the
04:54 - variable name name with the string value
04:57 - and the name value and we're still
04:58 - returning this data here okay so now
05:02 - we're going to go over to reverse dot
05:03 - PHP and we're just going to change how
05:05 - this works it's no longer going to
05:07 - reverse our string but we're just going
05:10 - to relay both bits of information back
05:12 - so additionally we need to check that we
05:15 - have posted the net the string and here
05:20 - we need to check your poster the name so
05:22 - now we have two variables being
05:23 - submitted to this file we need to check
05:26 - both of them have been set we're then
05:28 - going to create two more variables name
05:31 - it is going to equal dollar underscore
05:33 - post name and string is going to equal
05:39 - dollar underscore post string now with
05:45 - regards to security if you're taking
05:47 - anything like this to a live server you
05:49 - have to still be aware that if you're
05:51 - posting data without sanitizing it first
05:54 - you could be allowing yourself into some
05:57 - security problems the best thing to do
06:01 - is if you're you know going to put these
06:03 - into a database or anything use the
06:05 - MySQL real escape string function or at
06:09 - least if you are posting these to a page
06:13 - use the HTML entities function I'm going
06:16 - to leave these out for now I just
06:18 - thought I'd mention it just in case
06:19 - anyone had any problems with this okay
06:23 - so now that we've done this we can go
06:25 - ahead and construct a center
06:27 - that we're going to output so I'm first
06:29 - of all going to say name then says and
06:32 - then the string so now we've passed both
06:36 - these variables and we're going to echo
06:38 - them out in a sentence so we can include
06:41 - of course HTML in here I'm just going to
06:44 - make this italics and I'm going to make
06:49 - the name bold okay so now that we've
06:58 - done that let's go ahead and test this
07:00 - on the page so I'm going to write my
07:02 - name in here and I'm going to write a
07:06 - short sentence in here how are you so
07:11 - when we click go
07:13 - you see we retrieve this information
07:16 - back now you'll notice that there's a
07:20 - problem here and we actually have tags
07:23 - as opposed to the actual interpreted
07:25 - HTML now if we go back to our Ajax JS
07:29 - file you'll see that we use the text
07:32 - function to apply this returned data
07:34 - from a reverse dot PHP into our feedback
07:37 - div area in actual fact instead of using
07:41 - text if you need to you know pass HTML
07:45 - and actually have it render as HTML you
07:48 - need to go ahead and use the HTML
07:50 - functionality so now let's go ahead and
07:53 - just click go again and actual fact that
07:56 - that's going to work so we refresh I'm
07:59 - going to type Alex and hello how are you
08:04 - I'm going to click go and now it says
08:07 - Alex says hello how are you so hopefully
08:10 - with this example you can start to see
08:12 - the more practical applications of using
08:14 - the get and post HTTP requests almost
08:17 - always you're going to use the post HTTP
08:21 - request because you need to allow for
08:23 - sending large amounts of data and also
08:27 - making sure that people don't access
08:28 - your PHP file for example PHP forward
08:32 - slash reverse PHP they could then go
08:35 - ahead and modify the URL to input fields
08:39 - for example Alec
08:40 - equals name and string equals hello for
08:46 - example okay but because we're using
08:48 - post data this isn't possible from the
08:50 - URL bar it all depends on the data
08:53 - you're sending I mean in this case we're
08:55 - sending a text field which could contain
08:56 - a large amount of characters so we need
08:58 - to ensure that this is catered for using
09:00 - the post HTTP request