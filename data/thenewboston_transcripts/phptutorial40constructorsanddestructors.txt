00:00 - alright guys welcome to your 40th PHP
00:03 - tutorial and this tutorial is going to
00:05 - be on something called constructors now
00:08 - what a constructor is it's a special
00:12 - function that gets called automatically
00:14 - whenever you first create an object
00:16 - sounds confusing well trust me it isn't
00:19 - so let's go ahead and create a class I'm
00:21 - gonna name mine Bucky and let's go ahead
00:24 - and create our special constructor right
00:26 - now anytime you create constructor it's
00:29 - the exact same as creating another
00:32 - normal function inside your class it
00:34 - just has a special name so public
00:37 - definitely spelled that our own function
00:40 - and instead we're just naming anything
00:42 - you want you have to name it this
00:43 - underscore underscore CO and STR UCT and
00:48 - I definitely spread that on STR UCT
00:51 - should definitely take a spelling class
00:53 - alright now let's go ahead and put your
00:55 - empty parameters and your body so like I
00:59 - said you don't need to call this
01:00 - function explicitly when you coding in
01:04 - PHP as soon as you create any object
01:07 - from this class this constructor is
01:09 - gonna get called so in that way it's a
01:12 - little bit different than another
01:14 - function so let's go ahead and put some
01:16 - coding in here let's just echo echo out
01:18 - umm you never have called me come on
01:24 - there we go I know how to get it
01:26 - eventually
01:27 - so well I guess that's really all we can
01:31 - do with that constructor for now I mean
01:33 - we could add some more code but I really
01:35 - am way too lazy to do that so anyways
01:38 - like I said this special function which
01:41 - we call a constructor automatically gets
01:44 - called whenever we create an object so
01:47 - let's go ahead and make some object
01:48 - right now and set it equal to new Bucky
01:52 - and looks pretty good and check this out
01:56 - you know how we would have to if we
01:59 - wanted to use any function in this class
02:01 - go ahead and use some object and
02:03 - yadda-yadda called a function like that
02:05 - well in this case we don't need to do
02:08 - any of that
02:09 - soon as we create this object is gonna
02:12 - say alright what class did you create
02:15 - this object from you created it from
02:17 - Bucky so I'm gonna go up to the Bucky
02:19 - class and I'm gonna look if there's a
02:21 - special function name underscore
02:23 - underscore construct in here if there is
02:26 - then I'm gonna run automatically right
02:29 - now whatever you told me to in that
02:31 - constructor if there's not any function
02:33 - at all in here called construct then I'm
02:35 - just gonna you know do nothing at all so
02:37 - let's go ahead and save this and see
02:39 - what we got let me go ahead and refresh
02:41 - a little bit of this a little bit of
02:43 - call make on the beat and check this out
02:45 - you never called me so now you can see
02:49 - instead of having to explicitly call
02:51 - this little bit of code and construct it
02:54 - gets pretty much called
02:55 - automatically so that is what a
02:58 - constructor is in by the way let me just
03:00 - add this little note in this example I'm
03:02 - showing you right here it's pretty much
03:04 - useless because I mean why couldn't we
03:06 - just create another function and if
03:08 - we're gonna say that then why wouldn't
03:10 - we just write echo right in the body
03:12 - then just having to go through a class
03:14 - at all
03:14 - well actually whenever you're working
03:16 - with classes the constructor is useful
03:19 - for maybe you want to initialize some
03:21 - variables or maybe you want to call some
03:23 - other methods automatically well in this
03:26 - case I know that it's not really useful
03:28 - but whenever we are actually programming
03:32 - real programs and I'm not just showing
03:34 - you guys an example you'll see how it's
03:36 - useful and anyways enough of that let me
03:39 - go ahead and show you guys one little
03:41 - thing they may be wondering
03:42 - you may be wondering alright why do you
03:46 - have parameters after the class name the
03:49 - parameters after the class name whenever
03:52 - you create a new object are further
03:54 - constructor a constructor as you can see
03:57 - like I said is just like a normal
04:00 - function except that it gets called
04:02 - automatically whenever create object so
04:04 - knowing that you know that you can pass
04:08 - parameters to your constructor just like
04:10 - you can any other normal function so
04:12 - let's go ahead and pass our constructor
04:14 - a parameter right now will pass the X
04:16 - and say you never called me X and then
04:19 - whenever you create our object it will
04:21 - pass
04:22 - in something like Sarah well I kind of
04:25 - like that Sarah with no age anyways
04:28 - we'll go ahead and pass in the name
04:32 - Sarah to our constructor and that's what
04:35 - these parameters are for right here your
04:37 - constructor so then it's gonna say
04:39 - alright you never called me Sarah so
04:41 - oops almost forgot to save it and let's
04:45 - go ahead a little bit of this a little
04:47 - bit of this a little bit of behind the
04:49 - scenes and check this out
04:50 - you never called me Sarah or is it you
04:52 - never called me love Sarah I don't know
04:55 - depending if you want to make this
04:56 - program to send me or we're gonna send
04:58 - this to Sarah you know it's up to you
05:01 - just follow your heart so anyways that
05:03 - is why you see those parameters after
05:06 - the class name those are for
05:08 - Reconstructor if your constructor takes
05:10 - a parameter so now I know you guys those
05:13 - probably bothering you what those
05:15 - parameters mean so you're saying alright
05:18 - buggy so I know everything there is to
05:20 - know about constructor well yes you do
05:23 - so now I can teach you guys about a
05:25 - Deconstructor now check this out way
05:29 - back when in PHP for programmers set
05:32 - alright now that you have a constructor
05:35 - that's all nice and all but we want to
05:37 - add something else we want to add
05:39 - something called a Deconstructor and
05:40 - this gets called when the PHP script is
05:43 - complete and you no longer need your
05:47 - object in your object gets destroyed
05:49 - well right before it gets destroyed your
05:52 - PHP code is gonna look for something
05:55 - called a Deconstructor in your class and
05:58 - if you have one this is the code that
06:00 - gets ran right before your script
06:03 - completes and right before your object
06:05 - gets deleted now let me tell you guys
06:08 - this in this code is where you mostly do
06:11 - any of your cleanup like another
06:13 - programming languages you might clean up
06:15 - the memory or you might delete some
06:17 - files well it's not as common in
06:20 - pageviews up in other programming
06:22 - languages but I'm gonna show it to you
06:24 - guys anyways because you know I just
06:25 - can't skip over information so let's go
06:28 - ahead and name public function
06:30 - underscore underscore de as
06:33 - TR UCT destruct so it's not gonna take
06:37 - any parameters and all its gonna do is
06:40 - echo you know destruction or something
06:45 - like that
06:45 - so anyways down here in our object we
06:48 - don't need to do anything different
06:50 - because this object is gonna get created
06:53 - and then right after it gets created its
06:56 - gonna say alright your script is
06:58 - complete
06:58 - you no longer need this object so I'm
07:00 - automatically going to destroy this
07:02 - object but before I destroy it I'm gonna
07:04 - go in your class to see where the object
07:07 - was created from and see if there's a
07:08 - special function called destruct and if
07:11 - there is I'm gonna call it right now so
07:13 - let's go ahead and save this and a
07:16 - little bit of this yes and check this
07:19 - out
07:19 - you never called me Sarah and then your
07:22 - script is completed so it's gonna look
07:24 - for this special function called
07:25 - destruct and it's gonna run whatever
07:28 - code is in there and like I said your
07:31 - Deconstructor is really useful in other
07:33 - programming languages where you need to
07:35 - clean up memory or delete files it's not
07:37 - as useful in PHP but you need to have it
07:42 - there and I mean I really never even
07:45 - built a program where I used a
07:47 - Deconstructor I just any code I needed
07:50 - to run I just ran it before you know I
07:52 - completed everything but anyways I need
07:54 - to show you guys this because it's a
07:57 - part of PHP that you need to understand
07:59 - and if you ever come across that you
08:01 - won't be like whoa what the heck is this
08:03 - so anyways my point a Deconstructor is
08:07 - not as popular as constructors but it
08:09 - does exist so now you guys know it um if
08:12 - you never use again sorry for wasting
08:14 - your time you can send me some hate mail
08:15 - if you like so anyways that's all I have
08:18 - for you guys for this tutorial what a
08:20 - constructor is how you can pass it a
08:22 - parameter and what this useless D
08:25 - constructor is so anyways thank you guys
08:26 - for watching and I know in this example
08:29 - just like most of my examples I'm just
08:32 - covering the basics this isn't really a
08:34 - useful program home pipo unless you
08:37 - really hate it a girl named Sarah
08:39 - but anyways in the upcoming programming
08:42 - programs I guess
08:44 - programming programs as a nice little
08:46 - name you can see why this would be
08:48 - useful but anyways for now thank you
08:50 - guys for watching don't forget subscribe
08:51 - in aus my guys later