00:00 - are already houses welcome back and in
00:02 - this video I'm going to show you how to
00:03 - sort custom objects by any attribute
00:06 - that you want so let's go ahead and say
00:08 - that you were working on the social
00:10 - network and you had a bunch of users
00:11 - signed up and they all had like first
00:14 - names last names birthdays maybe a user
00:18 - ID
00:19 - they also listed their favorite colors
00:21 - and I don't know like how much money was
00:23 - in their bank account for whatever
00:24 - reason many ways these users had a bunch
00:27 - of different attributes and you were
00:29 - having a tough time figuring out how to
00:31 - make an algorithm or function to sort by
00:34 - each one so let's say you want to sort
00:36 - by favorite colors or birthdays you can
00:39 - do that so check this out what we're
00:42 - going to do is just like before we're
00:44 - going to use operator module and we're
00:46 - going to import attribute getter so now
00:50 - item getter by attribute getter so now
00:53 - let me go ahead and make a real quick
00:54 - class and I think you need two spaces
00:57 - Pepe all right so class user and let me
01:04 - just make dunder init and we'll say that
01:07 - whenever you make a new user object
01:10 - we'll say that they need a name and user
01:13 - ID so we'll just say x and y all right
01:18 - so self name equals x and so I'll just
01:24 - name it a user ID equals y so whenever
01:29 - we initialize object we'll just say like
01:30 - Bucky ten or whatever so something like
01:33 - that all right looking good now actually
01:36 - another thing that I want to do I'll
01:38 - show you guys a cool it's not really a
01:40 - trick but dunder init of course that
01:43 - means whenever you initialize there's
01:45 - another one called ar e PR so this is a
01:48 - string representation of this object so
01:53 - that means let's say that you just
01:55 - wanted to print out let's say that you
01:57 - had um an instance of this user class
02:00 - that was Bucky
02:01 - so the info was just the name Bucky and
02:04 - my user ID which was ten but then later
02:07 - on in your code you just said print out
02:09 - Bucky well then Python would be like
02:12 - what exactly do you want me to print out
02:14 - a about him his name or his user ID or
02:17 - his name and his user ID or do you want
02:20 - to print out where that object is in
02:22 - memory I mean what the heck am I
02:24 - supposed to know what Bucky is what you
02:25 - want well that's what this is for right
02:27 - here so what we can do is we can
02:30 - basically just return whatever
02:33 - representation we want to make and we
02:36 - can make this however we want so I'll
02:38 - say whenever I just say print out Bucky
02:41 - then it's going to print out that
02:42 - object's name and then I'll print out
02:45 - his ID and I'll separate them by like I
02:47 - don't know semicolons or whatever so
02:51 - plus and again this user ID it's
02:54 - actually going to be um an int so we
02:58 - need to make sure to convert that to a
02:59 - string sofie's your ID and the name of
03:04 - course is already a string so that's why
03:06 - we don't need to do that but again
03:07 - whenever we say print out an instance or
03:09 - a user object then this is what it's
03:12 - going to give us so just save us a
03:13 - little bit of time from formatting
03:15 - everyone later on all right so now let
03:18 - me go ahead and make a bunch of users
03:23 - paste that in so you guys don't have to
03:25 - watch me do it all so now I have a list
03:28 - of user objects I have Bucky
03:31 - Sally tuna Brian who's name is tuna
03:34 - that's weird but actually that would be
03:36 - a pretty cool name I'm gonna name my kid
03:38 - tuna all right and they all have user
03:40 - IDs nothing special
03:42 - however what we want to do is we pretty
03:45 - much just want to sort all of these
03:47 - users so let's see what order they're
03:49 - sorted in by default so for user in
03:52 - users just go ahead and print user so
03:57 - run that and check it out and again it
03:59 - prints it and maybe if I add a space
04:02 - right there might be a little bit easier
04:05 - to see but again it prints it in the
04:07 - specified order so by default and see
04:10 - what's going on here prints out Bucky
04:12 - Sally tuna Brian re so it prints it out
04:16 - in whatever order we initialize objects
04:19 - in however we want to you know make
04:22 - special functions to sort them by name
04:24 - and also the
04:26 - our ID since whenever like you're
04:28 - looking for a friend you just don't want
04:30 - to look through all of them randomly
04:31 - randomly wouldn't be very efficient so
04:34 - check this out
04:35 - let me add that little separator so they
04:40 - don't cut it all jumbled together and
04:42 - we'll do this for user just name it user
04:45 - still in sorted and again what do you
04:49 - want to sort users nothing new there
04:53 - but what we're going to do is we just
04:55 - don't want to sort it in the default
04:57 - order what we want to do is we want to
04:59 - sort it by we'll say sort them by name
05:02 - first so get an attribute and in this
05:06 - case we'll just type name and this is
05:11 - how we can specify how to sort so just
05:17 - like before we'll print user and check
05:20 - this out so again what this does is it
05:22 - just doesn't print them out in default
05:24 - order it sorts them by their name and
05:26 - then this is a lot more efficient and
05:29 - again if you want to do by ID
05:32 - then what I just name it user ID then
05:37 - we'll just say sort this iterable by
05:41 - this attribute so now we can go ahead
05:43 - and run this and check it out so this is
05:46 - default this one sorted by name and this
05:49 - of course is sorted by their user ID two
05:52 - five nine forty three sixty one and 77
05:55 - so how awesome is that again a lot
05:59 - easier than you may have been doing it
06:02 - before oh yeah there you go in six
06:04 - minutes you learn not only about
06:06 - representations about how to sort custom
06:08 - objects I mean this is absolutely
06:11 - fantastic so think as watching I will
06:13 - smell you next time