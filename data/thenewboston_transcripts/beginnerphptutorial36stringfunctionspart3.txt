00:00 - the semicolon on the end of my line
00:01 - there okay so you can see that oh sorry
00:06 - string rev okay let's go refresh Oh No
00:15 - okay again yep sorry I've added that so
00:19 - it's STR Revu can probably tell I didn't
00:21 - use this function too often but just for
00:24 - demonstration purposes you consider what
00:26 - it's done now is reverse the string now
00:28 - I've just actually while I've been doing
00:31 - this tutorial thought of a good way that
00:33 - this might be used and probably not
00:35 - recommended to but let's say we uploaded
00:38 - a file say called image jpg we could
00:44 - echo string reversed and we could do the
00:46 - substring of this and we could get the
00:49 - first say three three letters which
00:53 - would return our file type however if
00:57 - you think about it this actually will
00:59 - work because it could be jpg or jpg so
01:04 - that's the string reverse function just
01:06 - thought I'd drop it into this video
01:08 - anyway if you can find a use out of it
01:10 - that's great and the only use I can
01:13 - think of it is for novel to use but
01:16 - there we are so the next function we're
01:19 - going to look at is slightly more useful
01:20 - it is comparing two strings for
01:23 - similarity let's go ahead and get rid of
01:26 - everything here we can start from
01:27 - scratch okay so we use this function
01:30 - slightly differently let's go ahead and
01:32 - create two strings and we're going to
01:34 - calculate the percentage and similarity
01:36 - between two strings now you can use this
01:38 - in a variety of functions for example
01:41 - two peoples well I can give you an
01:43 - example plagiarism for example if you
01:46 - are checking for plagiarism between two
01:49 - different say essays written you could
01:52 - use this similar text function and it
01:54 - would return the percentage and
01:55 - similarity between each essay for
01:58 - example but obviously in this example
02:00 - we're just going to be dealing with
02:01 - simple strings so I'm going to say
02:02 - string 1 is equal to this
02:06 - is my essay I am going to be talking
02:13 - about PHP for example let's go ahead and
02:17 - escape that character there string two
02:22 - might equal this is my essay let's say
02:26 - someone was to slightly change an essay
02:28 - I will be talking about the subject PHP
02:34 - now what we can actually do here is we
02:36 - can now use the string function to
02:38 - compare the percentage and similarity
02:41 - between these two strings so let's go
02:43 - ahead and say similar underscore text
02:45 - it's not required to put into a variable
02:48 - because we're going to be returning the
02:49 - result within the within the function in
02:53 - one of the arguments and then echoing
02:54 - that back out so the three arguments we
02:57 - need to pass are string one string two
03:03 - and then we need a result variable here
03:05 - so we've got this result here which we
03:07 - can then go and echo out so we could say
03:13 - the similarity between between is and
03:23 - then we can append on result that's
03:26 - right there
03:27 - so the similar but similarity between is
03:30 - let's go ahead and refresh you can see
03:34 - it's 78% so for example if you if this
03:38 - was a if this was a long essay and the
03:41 - similarity was 78% there's obviously
03:43 - something you know wrong here
03:45 - for example if we convert to completely
03:48 - change this string my essay is about PHP
03:53 - and
03:55 - I'm going to be talking about everything
04:01 - to do with PHP let's just go ahead and
04:04 - escape that let's go ahead and refresh
04:07 - and you can see that the percentage has
04:09 - dropped significantly however if this
04:11 - was a longer string there will be more
04:13 - to compare if they were very different
04:15 - you'd get something completely different
04:16 - so for example my essay is about cats
04:21 - I'll escape that be talking about cats
04:28 - and their colors that'd be nice okay so
04:34 - we're let's go ahead and refresh and you
04:36 - can see that the similarity drop still
04:38 - so that's how you use this function and
04:40 - giving you an example of why it might be
04:42 - useful okay so let's go ahead and talk
04:45 - about some more simpler functions let's
04:48 - go create our string here that's going
04:49 - to be equal to this is an example string
04:55 - okay so the first one we're going to be
04:57 - talking about is the string length so
05:00 - string length is equal to and this
05:04 - function is called STR then with no
05:07 - underscore and then you just feed in the
05:09 - string d1 this is a really really useful
05:12 - really really useful function because
05:14 - for example if you were validating a
05:16 - form and you wanted to check that the
05:18 - length wasn't any bigger than a specific
05:20 - amount you could then just use this
05:22 - inside an if statement to check the
05:26 - string length for example if the name
05:27 - you know the name of the user or the
05:30 - user name wasn't meant to be any more
05:32 - than 25 characters you could say
05:34 - something like if string length
05:39 - is smaller than 25 then we can you know
05:43 - say yep that's absolute you find
05:45 - otherwise we could produce an error just
05:47 - for an example let's go ahead and
05:49 - aircraft the string length just to give
05:51 - you an idea of what this returns so
05:53 - return an integer value this counts the
05:55 - characters so we've got 26 that seems
05:58 - about right that's including the
05:59 - full-stop as well so it's any text
06:01 - inside of here