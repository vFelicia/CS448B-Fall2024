00:01 - hello YouTube Sam here from youtube.com/
00:03 - onli gamer for the New Boston and in
00:06 - this tutorial uh we're going to continue
00:08 - working on our favorites viewer
00:10 - application now before we get started I
00:12 - just want to give full full credit to
00:14 - the authors of beginning Microsoft
00:16 - Visual Basic 2008 um the authors are
00:18 - thean Willis and Brian Newsome they
00:21 - created this great program and I'm
00:23 - teaching you guys um how it works and
00:25 - how you can make it
00:27 - yourself so in the last tutorial we
00:30 - created our web favorites collection so
00:33 - we need to come over here to my
00:35 - project or not my project favorites
00:38 - viewer YouTube and let's add a
00:42 - class so we'll set the class name to
00:51 - favorites so what this class is going to
00:53 - do is it's going to go through our
00:55 - favorites folder and it's going to find
00:57 - all of the favorites and it's going to
00:58 - give us back a collection of a web
01:01 - favorite collection and it's going to
01:03 - hold each one of our favorites and those
01:05 - are going to be of object type web web
01:08 - favorite so what we need to do um is
01:12 - let's
01:13 - Implement I disposable so that we can
01:16 - dispose of our objects when we're done
01:19 - so let's go ahead and minimize out of
01:21 - this region right here and we'll start
01:23 - adding our
01:25 - code so we need to create a an object
01:30 - of our web favorite collection so we'll
01:33 - type
01:34 - public favorites
01:37 - collection as web favorite
01:41 - collection so you can see that we didn't
01:43 - use the new keyword because we don't
01:45 - want to create a new instance of web
01:46 - favorite collection we're going to be
01:48 - assigning this right here to other web
01:51 - favorite collections later
01:53 - on okay so now what we need to do is we
01:56 - need to add a property uh that will get
01:59 - our favorites folder it'll find it based
02:01 - on what machine we're on so we'll make
02:04 - it read only because we don't need to
02:07 - write I'm going change the favorites
02:09 - folder so public readon
02:13 - property favorites
02:16 - folder as a string so when we press
02:20 - enter it's going to add our G for us now
02:22 - what we want to do is we want to give
02:24 - back the path of the favorites folder so
02:28 - what we're going to do is type envir
02:30 - ironment dot get folder path so we're
02:34 - going to be getting the folder path of
02:36 - our favorites now how are we're going to
02:38 - find favorites well what we can do is
02:40 - type environment. special folder.
02:44 - favorites so I can continue to Mouse
02:46 - down here um and you can see that here
02:50 - is favorites right down here so I can
02:53 - just press Tab and that'll fill that in
02:55 - for us so it's going to get the folder
02:57 - path of the favorites
03:01 - so now that we're done with this
03:03 - property right here let's come down
03:06 - below it and we need to create a method
03:09 - so we'll call it Public Sub scan
03:13 - favorites now this is not going to take
03:15 - any arguments because we don't need
03:16 - anything to do this so whenever we scan
03:19 - the favorites what we want to do is call
03:21 - Scan
03:24 - favorites and we'll use favorites
03:28 - folder now this is going to turn an
03:30 - error right now because scan favorites
03:32 - has not been created
03:34 - yet or let's
03:41 - see well it has been created right here
03:44 - but we're going to we're going to make
03:46 - um another version of it that's going to
03:48 - overload it and let's see
03:51 - here too many arguments to public subcam
03:55 - favorites now the reason we're getting
03:56 - this error because there's no arguments
03:58 - right here so when you what we need to
04:00 - do is type Public Sub scan
04:07 - favorites and for this we're going to
04:09 - need an argument of folder
04:12 - name as
04:14 - string so whenever we create duplicate
04:18 - um methods what it's going to do is it's
04:20 - going to allow the developer or user to
04:23 - call either one of those so if they call
04:25 - just scan favorites um with no arguments
04:28 - all it's going to do is just going going
04:29 - to scan the favorites folder but they
04:31 - can also call Scan favorites and then
04:33 - add their own arguments in there to find
04:36 - the specified favorites folder so either
04:38 - one of these will work um and we can
04:42 - make as many duplicates as we want with
04:44 - different arguments in them so if our
04:48 - favorites collection um variable hasn't
04:51 - been uh in initialized yet then we need
04:54 - to go ahead and create it so here's
04:56 - favorites collection right here so we'll
05:00 - use an if statement so if favorites
05:05 - collection is
05:08 - nothing then what do we want to do so
05:11 - we're saying if favorites collection is
05:13 - equal to null for all of you um
05:15 - developers who've used another language
05:17 - so if it's nothing and there's nothing
05:18 - in it and it's not equal to anything
05:21 - then we need to set it equal to
05:22 - something so favor
05:25 - collection is going to be equal to a new
05:29 - web favorite
05:32 - collection and that is the reason we
05:34 - didn't create a new instance of this up
05:37 - here is because whenever they scan
05:38 - favorites it's going to change that and
05:40 - set it equal to a new web favorite
05:42 - collection now web favorite collection
05:45 - is just the list that's going to hold
05:46 - all of our
05:48 - favorites so let's go ahead and come
05:50 - down below this end if and now what we
05:53 - need to do is we need to go through each
05:54 - file in the folder and find our
05:56 - favorites so we'll use a 4 each
06:00 - Loop and we're just going to call string
06:03 - file as
06:06 - string
06:08 - in
06:10 - my.
06:13 - computer. file system doget
06:17 - files and then folder
06:20 - name so what this is going to do is it's
06:23 - going to get each file in this um folder
06:28 - name directory right here here which is
06:30 - what's passed to this uh method so for
06:33 - each of the files inside of this
06:35 - directory that has been passed we want
06:37 - to go ahead and try to find the
06:40 - favorites file in there now the
06:42 - favorites file end with
06:45 - URL so we can just use an if statement
06:48 - to see if the file ends with URL so we
06:52 - can just use if string file. endswith
06:55 - and ends with is part of string so we
06:57 - can check to see um if it ends with
07:00 - something so if it ends with
07:04 - URL and comparison type so if that's
07:08 - true and the culture is nothing and it
07:12 - says determines whether the end of the
07:14 - string instance matches the specified
07:15 - string when compared using the specified
07:18 - culture so culture could be the language
07:20 - of the program um you don't really have
07:22 - to know what that is right now because
07:24 - you're probably going to be working with
07:25 - English um so it's not that big of a
07:29 - deal deal unless you plan on releasing
07:31 - your program to other
07:34 - countries
07:36 - so thanks for watching this tutorial um
07:39 - put in this code if you haven't already
07:41 - um if you have any questions leave them
07:43 - in the comments and then in the next
07:45 - tutorial we're going to be filling in
07:46 - this if statement right here