00:01 - two options which is essentially just
00:02 - merging two arrays so we uh okay so let
00:07 - me start from the beginning this is
00:09 - mentioned in other tutorials but I'll go
00:10 - ahead and mention it again we are
00:12 - setting a default value from from
00:15 - however if the options are set we want
00:17 - to go ahead and merge settings with
00:19 - options I.E the option that's provided
00:22 - inside of here we want to overwrite this
00:26 - value with so this will become 10 in the
00:29 - case that we've provided it as 10 here
00:31 - so hopefully that makes
00:33 - sense uh now what I'm going to do is go
00:35 - ahead and alert out uh this setting just
00:38 - to make sure I've got it right this is
00:40 - just something I always do so I'm going
00:41 - to alert out from settings from because
00:44 - remember we're working with an array
00:45 - here let's go and refresh you can see
00:47 - that it says 10 this is the value that
00:49 - we did provide here if I go ahead and
00:51 - change this to three for example and
00:54 - refresh we get the value three so we
00:56 - know that this uh value here is being
00:59 - sent through options it's then
01:01 - overriding this value here so it's
01:03 - changing it here whatever we provide and
01:05 - then we're just alerting that out so
01:07 - we'll get rid of that for now we don't
01:08 - actually need
01:09 - that okay so uh let's go ahead and
01:12 - create the actual functionality of the
01:15 - countdown and then we'll go ahead and
01:17 - provide the Callback function uh a bit
01:19 - later on so um the first thing I want to
01:22 - do is just up of here because we're
01:24 - using um this either this selector
01:28 - inside of a uh um function in a minute
01:31 - we want to select or create a this
01:34 - selected variable and that's just going
01:36 - to equal this and that's so we can just
01:40 - use this variable here uh inside a
01:43 - function down here which we're going to
01:46 - create and this is called
01:48 - countdown
01:50 - execution so inside of this function
01:53 - we're going to run the code over and
01:55 - over again by using an interval uh and
01:57 - we're using this selected because we
01:59 - need need uh this to be Global hopefully
02:02 - that makes sense if you know about
02:03 - global and local functions uh or
02:06 - variables sorry uh the scope of
02:08 - variables then this will make sense um
02:11 - so inside uh the countdown
02:14 - execution um or rather outside first of
02:17 - all we want to set the current value so
02:19 - the current value that we're starting
02:21 - the counter at and this is
02:25 - settings and from so we're starting at
02:29 - for example 10 then inside countdown
02:31 - execution we want to reduce this value
02:34 - by one each time so current is equal to
02:37 - current minus one quite simple uh what
02:41 - we then want to do is place
02:43 - the place the current value inside um
02:47 - this selected so this will equal this
02:51 - because we're using it in the function
02:53 - I.E this countown div um so we want to
02:56 - go ahead and
02:58 - say this underscore selected remember
03:00 - we're using this outside of here cuz
03:02 - it's now global um do
03:07 - text current so now at the moment
03:10 - because we just have this function here
03:12 - we're not actually calling the function
03:13 - at all but if we go ahead and call
03:15 - countdown
03:17 - execution and refresh you can see that
03:19 - 10 is been put into this div so that's
03:22 - worked but we actually want to run this
03:25 - every 1 second because we want the value
03:28 - to increase by one every one second so
03:31 - we create an interval and we call this
03:34 - or or we create an interval using set
03:36 - interval and we call this interval so
03:38 - interval equals set interval inside here
03:40 - we give the function name without the uh
03:43 - without the parentheses so countdown XC
03:47 - and then 1,000 for 1,000 milliseconds
03:49 - I.E every second so every second this
03:53 - function here is going to be run using
03:56 - this here uh and then we are reducing
03:58 - the value by one every time and placing
04:00 - it inside this selected which is this
04:03 - which is this countdown div so quite a
04:07 - sort of complicated to explain but now
04:09 - when we run it you can see that the
04:11 - value uh comes down every
04:13 - time now the only problem we have here
04:15 - is that we don't have a way to stop this
04:17 - so you'll see that when once it gets to
04:19 - zero it will go into minus one -2 minus
04:22 - 3 blah blah blah so what we want is a
04:25 - check inside of this function to check
04:27 - when it equals zero so we say if current
04:30 - is equal to zero then the first thing we
04:34 - want to do is stop the execution of this
04:36 - interval so we want to uh clear the
04:39 - interval so we say clear interval and
04:42 - then we specify the name of the interval
04:44 - and we gave the interval name as just
04:45 - interval so we type in interval and then
04:48 - after this we want to send the Callback
04:51 - uh function ready if you like now I'll
04:54 - write this and then I'll explain what
04:55 - we're doing callback do call this so
05:00 - essentially what this means is this
05:01 - callback here is our callback function
05:04 - and we've said callback do call so we've
05:06 - sent a call back to this uh this here
05:10 - and then we've provided just this inside
05:13 - so now callback is obviously a parameter
05:16 - in here so we can go and Define
05:19 - it so we've created our callback
05:22 - function as we would with any other
05:23 - jQuery um any other jQuery function if
05:27 - you like or Plugin or or set of uh tools
05:31 - and now inside of here we can like
05:34 - alert done and because when it's got to
05:39 - zero we clear the interval CU obviously
05:41 - we don't need the countdown to continue
05:43 - then we send the call back um you know
05:47 - as this so we send the call back as sort
05:49 - of done if you like which is our
05:52 - callback thing here which is we've sort
05:54 - of supplied in here and then we alert
05:56 - out done so let's go ahead and refresh
05:58 - nearly 100 - 100 there so as it counts
06:02 - down we obviously take a look at this
06:04 - code and uh you know it's counting down
06:06 - as we specified but when it gets to zero
06:09 - uh we send the call back and then we
06:11 - execute the block of code that we
06:13 - specified as our callback function here
06:16 - so I.E like I showed in the beginning we
06:18 - could say window uh location
06:22 - equals something. co.uk or blah blah
06:25 - blah a web
06:26 - address so we've taken a look at how we
06:30 - can obviously Supply a plugin with uh
06:33 - parameters or or options or settings
06:35 - whatever you'd like to call them uh as
06:37 - we've seen in other tutorials however
06:39 - we've now looked at creating a callback
06:42 - function and using callback do call
06:44 - callback being the name here do call uh
06:48 - and sending the fact that or or sending
06:50 - this um as itself essentially so we know
06:55 - when this has completed uh and then when
06:57 - it has completed we execute everything
07:00 - within the Callback function block so
07:03 - that's how we create callback functions
07:05 - in our jQuery plugins