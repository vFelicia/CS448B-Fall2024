00:00 - all right everybody welcome back to
00:02 - another tutorial and in this one we are
00:04 - going to be adding on to our collection
00:06 - of amazing apps we have right now of
00:09 - course this beautiful chat app as we saw
00:11 - this amazing University app that has one
00:14 - bit of text beautiful and the next thing
00:17 - we're going to be working on is a speed
00:19 - test app and you can probably guess just
00:21 - by the name exactly what this is going
00:23 - to do but just to review the logic real
00:24 - quick what we'll have is something where
00:28 - we can select what network that we want
00:30 - to use in my network I just mean server
00:32 - right now so if I use those terms
00:34 - interchangeably they mean the same thing
00:36 - but basically selecting what server we
00:39 - want to use and then what device we want
00:42 - to communicate with and then after we
00:44 - select those there's just going to be a
00:45 - button on it where we're going to send a
00:47 - request to this device and then we're
00:49 - going to wait for the response and then
00:51 - we're just going to see how long it took
00:53 - and log it out so uh not the fanciest
00:57 - app but it can showcase a lot of the
00:58 - features that I want to showcase so so
01:00 - there you go and before we get started
01:02 - writing any code I did want to kind of
01:05 - go over the UI real quick
01:07 - so
01:08 - kind of like we have right here so we
01:12 - have for both accounts actually for
01:15 - these accounts and the network we have a
01:18 - logo on the left and then we have like
01:21 - the display name for either the network
01:24 - or the account and then kind of the full
01:27 - name down here and for accounts you can
01:29 - just call it any account that you want
01:31 - and then the full identifier for an
01:34 - account is the account number but either
01:36 - way we're going to be using the same
01:37 - layout for basically selecting which one
01:40 - we want to use
01:42 - so let me just kind of put this together
01:45 - real quick
01:46 - all right so for the top section is
01:48 - where we're going to make our selections
01:50 - we'll say that uh
01:52 - this can be that logo and then for the
01:55 - text
01:56 - what can we have
01:59 - actually this will be left aligned and
02:01 - we'll say uh actually we'll just call it
02:03 - top text
02:08 - all right that's probably good right
02:09 - there
02:11 - so one of these is going to be the
02:13 - network and one of them is going to be
02:14 - the account
02:18 - R rate so we'll have two of these on top
02:20 - and then whenever we select it the info
02:23 - is going to show up but to select it let
02:26 - me just
02:27 - get a little pencil icon
02:31 - okay so I don't know if we'll use a
02:33 - pencil icon for like the selector but
02:35 - it'll be something like this where
02:38 - one of these like I said is going to be
02:40 - for the network and one of them is going
02:43 - to be for the account and then you just
02:45 - click a little pencil to select it and
02:47 - then when you do we'll have a modal pop
02:49 - up with the list of all the either
02:51 - networks or accounts then you can select
02:53 - it right there
02:54 - and then another thing that I actually
02:57 - wanted to uh make under this a little UI
03:00 - element is let's do this
03:03 - the connection status
03:07 - so the connection status is going to be
03:10 - pretty simple
03:12 - it's just going to have a little
03:12 - indicator light or UI element
03:16 - and then it's just going to give the
03:18 - status to say you're connected or not
03:21 - connected so
03:23 - something like this
03:26 - all right
03:27 - so again the basics of it whenever you
03:29 - open the app you're first going to
03:30 - select the network and then you're going
03:32 - to select an account and then this is
03:34 - going to display showing you if you're
03:35 - connected or not
03:37 - and let me actually move this over
03:41 - get this centered in the screen a bit
03:42 - all right so once we have those then we
03:45 - have our connection set we can then
03:48 - have a big button in the center
03:50 - obviously
03:53 - shapes is what I'm looking for
03:55 - and
03:57 - I think I saw on a couple of different
03:59 - apps
04:02 - don't mind that uh those cops outside
04:04 - all right so I have some kind of button
04:07 - that says like go or start test or
04:09 - something like this but anyways let me
04:11 - zoom out a bit now
04:14 - anyways we'll have a button that says go
04:16 - and this is going to start the test and
04:19 - then once we have that test pending or
04:21 - in other words the request being sent
04:23 - we'll have a little timer underneath and
04:26 - it'll be like 1.2345
04:29 - seconds
04:30 - something like this we'll fine tune it
04:32 - later on I just kind of want to show you
04:34 - what we're going for before I just start
04:36 - writing a bunch of code
04:38 - so okay uh let's actually do this so
04:42 - I'll say um for the device we'll add
04:45 - some dummy text right here so we'll say
04:47 - I want to connect to my iMac in the
04:50 - account numbers abcdf yada yada whatever
04:52 - and for the network we'll say we'll use
04:55 - actually
04:57 - pretend we're using that VTX Network
05:02 - and this is the like a shorthand display
05:05 - name that we gave it in the full
05:06 - identifier is withaxia.com so it's going
05:09 - to look something like this hit go it
05:11 - kicks off
05:12 - and then under here actually this is
05:15 - kind of like the MVP this is what we
05:18 - really need to make something that we
05:20 - can call a speed test however for our
05:23 - MVP in I don't really like to add a
05:25 - bunch of clutter uh like non-nbp things
05:27 - to an MVP but there is one other thing
05:30 - that I want to add in this tutorial and
05:32 - the reason for that is because I want to
05:36 - show how we can store data long term so
05:39 - by that I mean whenever we close down
05:42 - the app and open it again for example we
05:45 - uh just open this again
05:47 - or I think I showed this in the last
05:49 - tutorial but basically whenever we close
05:50 - down the app and open it again we don't
05:52 - start from a blink slate every time we
05:55 - can keep those like historical chat
05:56 - messages or previous uh test data so on
06:00 - and so forth so that's what I want to do
06:02 - here and for this
06:05 - we'll just have a little history
06:09 - section on the bottom
06:12 - to line this
06:14 - and again all this is going to be is a
06:17 - table with our previous runs so we'll
06:21 - have something like
06:23 - actually what data would be there like
06:25 - uh
06:27 - on the VTX Network you connected with
06:32 - what was this device name iMac
06:36 - iMac and we'll say the date is uh we'll
06:39 - use this date so 11 12 22.
06:42 - and something like a
06:45 - 1.2345 seconds whatever that
06:48 - okay
06:52 - so something like this we're going for
06:57 - now let me just scroll out
07:00 - if I can find where I just put that
07:04 - okay so this is the app that we're going
07:07 - for that's kind of small right now but
07:10 - there you go
07:12 - now
07:13 - let's make sure I got all the elements
07:15 - and uh yeah looks good so hopefully
07:18 - whenever we develop this it's going to
07:19 - look a little bit more pretty than this
07:21 - but we'll use this as a template
07:24 - whenever we structure all of our
07:25 - components
07:26 - and with that being said I think we're
07:28 - ready to start hopping into the code so
07:31 - I already have this ticket written up in
07:33 - the way that I name my branches is
07:35 - actually based on these tickets so I
07:37 - start with the ticket or issue number
07:40 - and then I just have some text so this
07:43 - is speed test ticket number 71 so when I
07:45 - create my branch
07:47 - actually can stop this app for now
07:51 - all right so I'm going to create a new
07:54 - branch and I'm going to call it 71
07:57 - speed test
07:59 - create that and okay
08:02 - now how the heck do we create an app on
08:05 - tnb OS so whenever we create an app what
08:09 - we want to do is we want to hop over
08:12 - into this apps folder these are all the
08:14 - system folders we're going to be talking
08:16 - about you know the internals of this
08:18 - later on but right now we'll just stick
08:19 - to app development so when you expand
08:21 - this you can see all the existing apps
08:24 - right here so this one right here the
08:26 - chat and the university these are the
08:29 - two apps that actually I don't know like
08:31 - look like apps on the thing there's also
08:33 - that account manager network manager
08:34 - which are like system apps which
08:38 - um just want to tell you that like all
08:39 - of these things are called apps not just
08:41 - the ones on the left hand side
08:43 - so the first thing that we're going to
08:45 - do is we're going to create a new
08:46 - directory
08:47 - and we'll just call it
08:49 - speed test all right
08:52 - now inside this directory we can kind of
08:56 - Take a Hint from University this is the
08:58 - basic structure of an app it's going to
09:00 - have a directory called assets a
09:01 - directory called containers and a file
09:04 - called registration now assets are for
09:08 - as you can guess like the the Assets in
09:10 - in this case the one thing that you
09:12 - always have in here is the app icon now
09:15 - containers you can probably guess this
09:17 - too this is where all of your containers
09:19 - and um kind of like your react code is
09:22 - going to go and lastly we have
09:24 - registration right here and this just
09:27 - contains some data so basically letting
09:30 - tnb OS know that hey this app is ready
09:33 - uh you can now register it in other
09:35 - words like hook it into the system or
09:37 - make it appear on the bottom taskbar
09:40 - so let's just go ahead and create that
09:43 - structure right now so
09:45 - assets
09:48 - and one called containers
09:52 - and then we'll go ahead and make that
09:54 - typescript file
09:58 - registration beautiful all right so once
10:01 - we have our basic structure set the very
10:05 - first thing I'm going to do after this
10:06 - is inside containers I'm going to make
10:08 - uh let's do this so I'm going to make a
10:11 - file called index dot TSX
10:15 - and this is going to be basically the
10:18 - main window now for this we just can't
10:22 - start writing like divs and styling this
10:24 - however we do need to wrap this app in
10:28 - one component called app window and I'll
10:32 - show you in a second what this um app
10:33 - window component is it's basically just
10:36 - a wrapper where you're going to pass it
10:38 - um two props I believe class name and
10:41 - display and it just includes all the
10:43 - logic so when you click click the app
10:45 - icon then it displays the app when you
10:47 - click it again it hides the app and it's
10:50 - pretty much just have it so it's already
10:52 - plugged in you don't have to write that
10:54 - logic by hand
10:55 - um the goal of kind of this platform is
10:57 - to make it as easy as possible for any
10:59 - other developers to create their own
11:00 - apps so this is just one of the things I
11:03 - abstracted out but anyways this
11:05 - component
11:06 - can be found in system
11:10 - components app window
11:12 - and I'll just go ahead and import
11:14 - everything right now so app props
11:20 - and I'll talk to you when we use these
11:23 - in just a second what everything is but
11:25 - for right now I just want to kind of
11:26 - take care of my imports and also I did
11:29 - make these kind of uh cool little helper
11:32 - templates
11:34 - um for every or I want to say for most
11:36 - components that we write
11:38 - they are going to come with a Styles
11:41 - file and this is just so that we can use
11:43 - styled components if you're not familiar
11:45 - with style components fear not because
11:47 - we're going to be going over that as
11:49 - well for right now I just want to get
11:50 - the basic structure like I said but
11:52 - either way for these Styles which
11:54 - essentially is just like a bunch of CSS
11:56 - but we can do some cool stuff with it we
11:58 - want to import it into our component
12:00 - file so I'm just going to import
12:02 - everything from that file so import it
12:05 - as s
12:09 - from my Styles file and good go so those
12:13 - are the only Imports that we need now we
12:15 - can just go ahead and start creating our
12:17 - component which is going to be a
12:19 - functional component so I'm going to say
12:21 - const and I just named this one
12:24 - the same name is the application so I'm
12:28 - going to create a function or excuse me
12:30 - a functional code component called speed
12:33 - test and the type of this is going to be
12:36 - this sfc so before we go any deeper
12:40 - let's just go ahead and look at what
12:41 - this sfc type is all this fset sfc
12:46 - little tongue twister there is is
12:48 - basically a react functional component
12:51 - but we pass a couple different things
12:54 - into it one is this class name optional
12:58 - attribute right here and this class name
13:00 - attribute we're going to be getting more
13:02 - into it later on but just know that
13:03 - since we're using styled components a
13:05 - lot of them are going to require this
13:07 - specific property name called class name
13:10 - and then in addition to that we also
13:13 - have this right here and for those who
13:16 - are not familiar with this record
13:17 - keyword in typescript this is just
13:20 - saying that we're gonna also be passing
13:22 - in an object whose
13:25 - keys are of type string and whose values
13:28 - are of type unknown and the reason that
13:31 - we do this is because we're also going
13:33 - to be passing in like any other custom
13:35 - props to our component
13:38 - so okay so we have uh basically a spiced
13:42 - up functional component now inside here
13:45 - we are going to be passing in these app
13:47 - props
13:49 - so let me go ahead and take a look at
13:51 - this interface right here so all this
13:53 - interfaces is it's saying that we're
13:55 - going to be passing in a display prop
13:57 - and this is actually the prop that we're
13:59 - going to pass into our component to say
14:01 - are you the component that's supposed to
14:04 - be displaying on the screen right now
14:05 - now we have this because you know this
14:09 - operating system error quotes it isn't
14:11 - quite as fancy as other operating
14:13 - systems right now so we can only display
14:15 - one app at a time hopefully that'll
14:17 - change in the future but for right now
14:19 - everything is hooked up where if you
14:24 - select the app by clicking the app icon
14:26 - this display property is going to be set
14:28 - to true and then your app's just going
14:30 - to be displayed
14:31 - all right so easy peasy and now for this
14:35 - let me go ahead and destructure those so
14:37 - again class name and display
14:43 - are those props that we want to pass in
14:45 - and for this we can actually let's write
14:49 - it like this okay so we can go ahead and
14:53 - return one thing now again as the top
14:56 - most parent component that's going to be
14:59 - our app window right here
15:02 - and for display we are just going to be
15:05 - passing in display
15:07 - and this is going to take this class
15:10 - name as well and yeah so this is pretty
15:13 - much the basic structure for all of the
15:16 - apps that you create our content what
15:18 - you think of is the app the UI all
15:21 - that's going to be going nested inside
15:23 - is a child but this app window component
15:26 - is basically just uh taking care of the
15:29 - logic for you and yeah basically
15:33 - so once we have that actually let me go
15:36 - ahead and Export this right now so
15:37 - export default speed test
15:40 - and our right and now after this we'll
15:43 - go ahead and
15:47 - all right
15:49 - so this is the basic structure
15:51 - everything we need however instead of
15:53 - this div right here we actually want to
15:58 - convert this to a styled component and
16:00 - we're going to call that style component
16:02 - container
16:03 - so I probably should have uh went
16:06 - through this line by line but either way
16:08 - whenever we use style components the
16:10 - first thing we're going to do is we're
16:11 - going to import this keyword styled
16:14 - right here and then since we are going
16:17 - to be essentially creating a div
16:19 - component
16:21 - what we're going to do is we're going to
16:23 - create a constant uh I keep it name
16:25 - uppercase and then you set it equal to
16:27 - style dot the basically the HTML tag and
16:31 - in this case it's div now inside these
16:34 - ticks right here is where you can
16:37 - basically write all of your CSS so for
16:39 - example I'm going to write background
16:41 - and we'll change this later on but just
16:43 - to get something on the screen we'll
16:45 - just say that we're creating a div and
16:46 - it has a white background that's it and
16:49 - I'm going to copy this container name
16:51 - because what we can do now since we
16:54 - imported everything is s we're going to
16:56 - replace this div tag with s dot
16:58 - container
17:02 - all right and make sure to get that s
17:05 - dot container so what this is doing
17:08 - again just the hammer in uh for anyone
17:11 - who's not familiar with style components
17:12 - whenever we render this it's going to
17:15 - look and see hey what is s-dot container
17:17 - and it's going to say oh it's a div with
17:19 - a white background so it's going to
17:21 - convert this to a div with a white
17:23 - background and then we're going to have
17:24 - the text hey in there and just to style
17:27 - this a little bit more
17:29 - um
17:30 - so I want to display this is flex
17:32 - because what we will do
17:36 - is
17:38 - yeah I don't even know if we need well
17:41 - actually we can keep it right now since
17:42 - what I want to do is kind of pretty much
17:44 - just recreate that University app where
17:46 - we just have a box in text in the center
17:49 - for the time being but this is all
17:51 - subject to change I just want to kind of
17:53 - get everything up and running for this
17:56 - so align items Center and also Justified
17:59 - content Center this is just gonna make
18:01 - sure our text appears in the center of
18:02 - the screen now I also want to put a
18:05 - little border radius on this of eight
18:07 - pixels just because having the app with
18:10 - square edges or square corners it looks
18:13 - a bit weird and I also want to have a
18:15 - little box Shadow but I'm too lazy to
18:17 - type it so I'm just going to copy it
18:18 - from the University app
18:21 - all right a little slight box Shadow
18:23 - right here and then I'm gonna give it a
18:26 - height and weight or excuse me
18:29 - height will just say uh 60 again we're
18:33 - gonna have to adjust the height and
18:35 - width as well
18:38 - when we start actually putting those
18:40 - components in there but uh
18:44 - all right so line items background
18:46 - border radius yada yada yada okay so
18:48 - this is good so pretty much just a white
18:50 - rectangle with text appearing in the
18:53 - middle a lot of work to do but it'll do
18:54 - for now so now that our basic container
18:58 - is looking good our basic app is we have
19:00 - it right now the next thing I want to do
19:03 - is just find an icon and I have this
19:06 - site that I use quite often just uh flat
19:08 - icon.com pretty cool site and let me
19:11 - just type speed and pretty much just
19:13 - pick the first one this one looks
19:15 - alright
19:15 - all right and uh
19:18 - for this what we can do is just save
19:21 - image as and I'm going to call it app
19:23 - icon
19:25 - this is already a ping so that's good
19:28 - that's the format that we want and uh
19:31 - yeah just a shout out to free pick thank
19:33 - you for the icon and also another shout
19:34 - out to Flat icon I I really do like the
19:37 - site so uh
19:39 - yeah give credit where credit is due so
19:41 - assets and let me pop open my downloads
19:44 - and I'm just going to drag this app icon
19:47 - ping into assets
19:50 - webstorm always does that I don't know
19:52 - why but you gotta do it twice okay
19:55 - so I now move that file into assets
19:58 - there you go looking good and the last
20:01 - or one of the last things that we have
20:03 - to do is we need to fill out our
20:05 - registration file now to see what we
20:08 - need for this I'm also gonna
20:10 - use this University registration as a
20:13 - template
20:14 - just to make sure I don't have any typos
20:16 - or anything and all right so I'm going
20:19 - to replace everywhere it says University
20:21 - with speed test
20:23 - and missing one but we'll get to that in
20:26 - a second so the first piece of
20:27 - information that we need to give it is
20:30 - this app icon so again this is just a
20:34 - reference to this file right here
20:37 - so app speed test assets app icon in the
20:41 - next thing that we're going to be
20:42 - needing to give it is the location of
20:45 - our root app component and that's just
20:48 - the component that we just created it's
20:50 - actually our only component right now
20:53 - and then after this we're going to be
20:54 - importing a couple types and that is app
20:57 - icon type now basically any app that you
21:01 - create I'm guessing that it's going to
21:02 - be an image there's also this path that
21:05 - we're using for system components since
21:07 - we're using icons for those but really
21:10 - this is like 99 of the time unless you
21:12 - really want to use the icon it's just
21:14 - going to be an image or a ping file and
21:16 - then this registration right here uh
21:20 - it's basically just all of these keys
21:22 - and values we'll take a look at this
21:23 - real quick
21:25 - this is just saying that this
21:27 - registration is going to require an app
21:29 - ID and this app ID right here this is
21:32 - just used for I don't know some of the
21:34 - internal Redux portion of it basically
21:36 - whenever you click the app icon on the
21:39 - bottom it's going to set this app is the
21:41 - active app or in other words in form
21:43 - tnbos that this is the one that's going
21:45 - to appear so it just needs a unique name
21:48 - and I just do the camel case of whatever
21:50 - the app name is but uh yeah just make
21:52 - sure that you know it's just a unique
21:54 - name and for the icon of course we'll
21:57 - just say app icon it's an image or a
22:00 - ping file and a system app this is
22:03 - always going to be false for you it was
22:05 - just true for like one of these apps
22:08 - like the uh the account manager and the
22:10 - network manager but for any of the apps
22:12 - that we create this is always going to
22:13 - be false and there you go now from here
22:16 - we're just going to export this speed
22:18 - test which is that component that we
22:21 - just created and I'll show you why in
22:22 - just a second and also this registration
22:25 - that we just filled out so once we have
22:27 - this registration filled out all we need
22:29 - to do is basically just register or hook
22:32 - it into the main system and I'll show
22:34 - you what I mean by that
22:36 - so inside this apps directory right here
22:39 - there's this TSX file called the
22:41 - registry and this is pretty much just uh
22:43 - the final process where we pretty much
22:46 - let let tnbos know that a registration
22:49 - is complete and to render the app when
22:51 - needed
22:52 - so let me go ahead and do this so we'll
22:56 - import
22:59 - these two things speed test component
23:02 - and it's registration
23:04 - from apps
23:07 - speed test registration
23:09 - and then after this in app registrations
23:15 - you just need to go ahead and include
23:18 - that and what's going to happen on boot
23:21 - is it's going to go through all of these
23:22 - check all the registrations and from
23:25 - here it knows you know how to hook this
23:28 - up in Redux its identifier well icon to
23:30 - use so on and so forth but all this is
23:32 - taken care of in the background the only
23:35 - other thing that we need to do one more
23:37 - line of code before this bad boy is up
23:38 - and running is in here we need to
23:42 - actually render the app out so I I was
23:47 - going to copy it but I'm not that lazy
23:49 - okay so under chat what we can do is we
23:52 - can just render the app
23:54 - and for display right here what we're
23:58 - saying is we want to display this app
24:00 - whenever the active app and this is
24:03 - going to be the value that's stored in
24:04 - Redux whenever it matches this app ID
24:07 - because remember I said whenever we
24:08 - click that icon the active app in Redux
24:12 - is going to be set to this ID so
24:13 - whenever that's the case we just want to
24:15 - say display this app on the screen
24:17 - so we say active app
24:20 - whenever it's equal to the speed test
24:22 - registration.app ID in other words
24:24 - whenever it's equal to speed test then
24:27 - this will be equal to true and therefore
24:31 - it'll basically say display this app
24:35 - easy peasy so if everything works
24:39 - correctly then I believe that now we can
24:41 - go ahead and start this bad boy and
24:44 - check it out hopefully this works
24:47 - come on come on no way I mean with me
24:51 - all right let me minimize this thing
24:55 - so check it out so we have our chat app
24:58 - as before and our University app but now
25:01 - wait for it boom look at that says hey
25:05 - right now but I'll show you that we have
25:06 - hot reloading working as well
25:12 - speed test and again since we have all
25:15 - that set up we don't need a refresh or
25:16 - anything and there you go so three
25:19 - beautiful apps the beginning of what
25:23 - will soon be the most popular operating
25:26 - system in the world
25:28 - all right well at least in my apartment
25:29 - maybe but uh hey I Can Dream right
25:33 - all right and uh that is the basics of
25:37 - how we create an app in tnb OS and well
25:40 - even though we got an app we still have
25:42 - a lot of work to do before we actually
25:44 - can click a button and kick off all this
25:46 - stuff to actually communicate with other
25:48 - devices but I think that's probably good
25:50 - for this tutorial so as always thank you
25:53 - all for watching and in the next one
25:55 - we'll get started on the UI so see you
25:57 - then