00:00 - so we want to be more or less the same
00:01 - thing that we usually do and define a
00:03 - function within this event handler but
00:05 - this time we want to make a simple
00:06 - change and we want to supply a parameter
00:09 - in here that we can use to access where
00:11 - the mouse position is out because
00:14 - obviously the mouse position is
00:15 - extremely important in this circumstance
00:18 - with regards to where we're going to
00:20 - place this div we want it to follow the
00:22 - mouse
00:22 - therefore using e we can grab the client
00:25 - x and y position which essentially is
00:28 - the mouse position so let's go ahead and
00:30 - just bring this down and I'm gonna go
00:32 - ahead and just create a test so we know
00:35 - that everything's working I'm gonna go
00:37 - ahead and just create a div on the page
00:40 - and this is going to be called just
00:42 - pause for example this should just sort
00:45 - of for debugging and testing purposes it
00:47 - you know doesn't really have any other
00:48 - use now we want to go in the head and
00:51 - inside of our function here define the
00:54 - top and the left of the mouse position
00:57 - so I'm going to create a variable called
00:59 - top and I'm gonna create a variable
01:01 - called left and these are going to be
01:03 - equal to e dot and then we're gonna
01:05 - access the you know sort like I'm a
01:08 - method inside of this object and the
01:10 - first one is client Y this is
01:13 - essentially the Y position which is
01:16 - obviously the vertical position so we
01:20 - want to know how far from the top the
01:22 - mouse is which is this value here and
01:24 - then with regards to the left we want to
01:26 - get the X position because we want to
01:28 - know how far is on the horizontal or x
01:32 - axis so now what we can do is we can
01:34 - feed into this div that I've created
01:36 - called pause and we can apply these
01:39 - values to this so we'll get a sort of
01:41 - dynamically updating values so I'm gonna
01:44 - say top plus and then just a space and
01:47 - then left so now what's going to happen
01:50 - is when we move our mouse we're gonna
01:52 - grab the top and the left constantly so
01:55 - every time the mouse is moved up or down
01:57 - or left or right or vertically
01:59 - we're gonna grab these two values and
02:01 - then just apply them to this pause div
02:03 - so now what you should see is these
02:05 - values change you can see underneath my
02:07 - cursor here and underneath the link
02:09 - you see them changing so now that we
02:11 - have these values here we can determine
02:13 - where to place this div that we've
02:16 - created or defined in here and that
02:19 - we've actually applied to the document
02:21 - by putting it after the the link so now
02:25 - that we've just seen that in action we
02:27 - can go ahead and get rid of that div and
02:30 - get rid of this line as well
02:32 - the only problem here is is that we want
02:34 - to space this a bit further away from
02:36 - the mouse cursor we don't want it to be
02:39 - too close to the cursor because
02:40 - obviously it's going to get in the way
02:42 - and it's going to cause some problems so
02:44 - I'm gonna add ten to each of these
02:46 - values and that will just space it sort
02:49 - of ten pixels below where the cursor is
02:51 - and ten pixels across from whether from
02:54 - where the cursor is okay so now what we
02:57 - want to go ahead and do is okay so yeah
03:02 - what we want to do is we want to go
03:05 - ahead and apply the position that we've
03:07 - gained here plus ten so we want to move
03:10 - this div accordingly so you've seen that
03:13 - we could update the values inside that
03:15 - div I created just under here but now we
03:17 - want to do is actually apply the
03:19 - position of this here or accordingly now
03:24 - this is would be the same as applying
03:26 - say top as ten pixels and left as say
03:30 - ten pixels it can be absolutely anything
03:32 - the values could be anything but we can
03:35 - use jQuery to automatically update CSS
03:38 - so what we want to do is we want to go
03:40 - ahead and reference the hover text div
03:44 - which is hover text remember the idea of
03:48 - this is hover text so we use a hash to
03:50 - reference the name and then we want to
03:52 - say dot CSS and in here we can set top
03:55 - to a particular value here and then we
03:59 - can do CSS again to set the left to a
04:02 - particular value here and obviously this
04:05 - this value here and this value here we
04:07 - already gained dynamically depending on
04:10 - where the mouse is so we can just
04:12 - substitute these in so I can write top
04:14 - here
04:14 - and I can go ahead and right left here
04:16 - and now that we've done that we have
04:19 - another slight problem and that is that
04:22 - we haven't actually shown this div yet
04:24 - so we want to do is we want to just put
04:27 - show on the end of it and that will
04:29 - change the display:none to actually
04:32 - display it so let's take a look at the
04:34 - the code you can see now at the moment
04:37 - we have another problem I mean the one
04:40 - thing is that this div is now following
04:42 - our cursor but we obviously haven't
04:44 - applied any text to it yet so it's
04:46 - pretty much useless so what we want to
04:49 - go ahead and do is just before we show
04:52 - it is apply some text and that text in
04:55 - here could be absolutely anything but
04:57 - we're substituting in a variable and
04:59 - that variable is title remember the
05:01 - variable that we gained from our link
05:03 - earlier so now when we refresh we can
05:06 - see that we have the div hovering over
05:08 - you'll probably notice that the tooltip
05:11 - is actually getting in the way of this
05:12 - but there's a way that we can deal with
05:14 - that and we'll go through that in a
05:15 - moment now the first problem that we're
05:17 - going to solve is when we move away from
05:19 - the link the div actually remains so
05:21 - it's really quite annoying and useless I
05:24 - mean you wouldn't want to put that on
05:26 - your site so what we do is after we've
05:30 - after we've used this mousemove event
05:32 - handler we want to come down here and
05:34 - say dot mouse out and create a new
05:38 - function so function in here is going to
05:41 - be let's just pull that down the
05:44 - function in here is going to be when the
05:45 - mouse comes away from the particular
05:47 - element and in this case all we really
05:50 - want to do is just go ahead and hide the
05:52 - hover text div so when the mouse comes
05:55 - away from it its hidden and it doesn't
05:57 - remain on the page so hide like that so
06:00 - we've shown it here when the mouse goes
06:02 - in and it's been moved around but when
06:04 - the mouse comes out we want to hide this
06:06 - so it's quite simple really if you think
06:08 - about it so now when we come away you
06:10 - see it just hides so we can still
06:11 - flicker over it and you will show itself
06:14 - and hide itself so mouse move it's being
06:16 - shown and now the way it's being hidden
06:19 - okay now the last problem that we sort
06:21 - of have to deal with is the fact that we
06:23 - get this HTML default tooltip appear now
06:28 - I took the time to personally research
06:30 - this and how we might be able to disable
06:32 - this tooltip coming up which default
06:35 - comes up when you supply a title