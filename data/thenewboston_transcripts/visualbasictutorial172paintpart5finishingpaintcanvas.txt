00:01 - hello YouTube Sam here from youtube.com/
00:03 - onli gamer for the New Boston and in
00:06 - this tutorial we're going to continue
00:07 - working on the paint program um and you
00:10 - can find this in the book beginning
00:12 - Microsoft Visual Basic 2008 U by Theon
00:15 - Willis and Brian Nome um once again I
00:18 - have to give credit to them for this I'm
00:19 - just teaching you guys how to do it and
00:21 - going through the concepts so if this
00:24 - doesn't look familiar to you then you
00:26 - may want to move back and find the
00:27 - tutorial that you were just at so
00:30 - we stopped right here um on our select
00:33 - case Graphics tool and we set object
00:36 - Graphics items equal to object Graphics
00:39 - Circle so after we do that um let's just
00:43 - go ahead and end our select because we
00:45 - don't need um anything
00:47 - else um it looks like it's already
00:50 - there so we'll go ahead and come down
00:53 - below and select so now what we need to
00:56 - do is just add that a object to our
01:01 - array list so we need to check if an
01:04 - item was actually returned
01:07 - so if well not return um if it's set
01:10 - equal to something that isn't null so if
01:13 - Graphics items or um object Graphics
01:19 - item is
01:21 - not
01:23 - nothing then go ahead and do this now
01:27 - we're using a double negative here so if
01:29 - it isn't nothing or if it is something
01:32 - and not equal to null then what we want
01:34 - to do is add that to our array list so
01:37 - Graphics
01:39 - items.
01:41 - add and we're going to add object
01:44 - Graphics
01:47 - item let's see
01:50 - here so you can see that um it tells us
01:54 - right
01:54 - here that it
01:56 - is it may give us an error at run time
02:00 - but it won't because it checks to see if
02:02 - it isn't nothing so let's say um a
02:05 - possible way of it not equaling anything
02:08 - if it goes to the select case and we
02:10 - haven't used Circle pin then object
02:12 - Graphics item is not going to be set
02:14 - equal to anything so it'll run this if
02:16 - statement and check to see if it isn't
02:18 - any if it is something then it'll add it
02:20 - to the list and this will prevent an
02:21 - error from happening now we could also
02:24 - do this by using uh a try catch
02:27 - statement but this way works just as
02:29 - well too
02:30 - so now what we need to do is type me.
02:34 - invalidate and you can see it says
02:35 - invalidates the specified region of the
02:38 - control um adds it to the controls
02:40 - update region which is the area that
02:41 - will be repainted at the next paint
02:43 - operation so basically what this means
02:45 - is that we're telling the program that
02:48 - paint canvas has been uh invalidated and
02:52 - that it needs to repaint itself so it
02:53 - needs it says something has changed we
02:56 - need to update and repaint paint canvas
02:58 - because we're in the paint canvas class
02:59 - class right here so we invalidate it so
03:03 - that it will update our paint canvas
03:06 - control so now that we've created
03:08 - everything um let's go ahead we'll come
03:11 - into our form one. VB design and you can
03:16 - see that all we have to do is we can
03:18 - right click on view
03:20 - code you can see that we don't have
03:22 - anything inside of class form one and we
03:25 - don't need anything so we'll go ahead
03:27 - and run the
03:28 - program here's our p
03:33 - VB looks like I was missing some stuff
03:36 - there so let's come over here to our
03:38 - paint canvas. VB design and we need to
03:42 - click on the lightning bolt to bring up
03:44 - some
03:44 - events so the first event that we're
03:47 - going to look for is mouse down so if
03:51 - the user clicks their Mouse down then
03:54 - what do we want to do so let's see here
03:57 - Mouse down so when the mouse is down
04:00 - we're going to check to see what which
04:02 - Mouse uh they have which button they
04:05 - have clicked so if e dot button so e is
04:10 - the event args and it's a mouse event
04:13 - args so with our mouse event ARS we can
04:16 - check to see which button has been
04:18 - pressed now e can get a little confusing
04:20 - some sometimes and I completely
04:23 - understand if you don't fully um if you
04:25 - haven't fully grasped this yet but later
04:27 - on um you'll start to pick it up and and
04:30 - it will come easier to you so if e do
04:33 - button equals Mouse
04:35 - buttons. lift then what do we want to do
04:39 - well we want to call do mouse
04:43 - paint a do mouse paint is going to take
04:45 - some arguments so we're going to need a
04:48 - mouse event ARS so you can see that
04:50 - paint canvas Mount down Mouse down
04:52 - already has um a mouse event ARS in that
04:56 - it has been created when you click the
04:57 - mouse down so we'll just pass e to that
05:01 - so the E that we're passing to that is
05:03 - this e right here um that happens when
05:06 - the person clicks their Mouse down so
05:09 - wherever their Mouse clicks down it's
05:10 - going to get the X position and the Y
05:12 - position of this e right here um that is
05:16 - in the sub U paint canvas Mouse down so
05:21 - if they move the mouse then we also want
05:23 - to paint something so we'll go to paint
05:26 - canvas. VB design and we want the mouse
05:30 - move event so let's find it here so
05:34 - we'll double click on Mouse move and
05:36 - once again we need to create that if
05:39 - statement so if e do button is equal
05:43 - to Mouse buttons do left then what do we
05:48 - want to do we want to do mouse
05:51 - paint and pass e to it now e is the
05:55 - mouse event arcs that happens whenever
05:57 - they click down so when they move their
05:58 - Mouse down this e right here is going to
06:02 - get updated um so you can access the X
06:05 - and the Y position of the mouse by using
06:08 - the event
06:10 - arguments so when they if they click
06:13 - down it'll paint and if they move the
06:15 - mouse it will paint as
06:17 - well so hopefully everything is um up
06:23 - and running now so now if we try to run
06:25 - it you can see we got paint.
06:28 - VB okay okay one more thing here we need
06:32 - to come into paint canvas. VB and we
06:35 - need to find the paint
06:39 - event so under the paint event um
06:44 - basically what Payton does is it runs
06:48 - and it repaints uh the paint canvas now
06:53 - this is this may be a little confusing
06:55 - to you but when you have this Graphics
06:57 - object right here um or this PT event
07:00 - args and what you can do is you can draw
07:02 - to your control so whenever paint canvas
07:06 - is painted what we want to do is let's
07:08 - use a for each Loop so for each
07:15 - object
07:18 - Graphics item as Graphics
07:23 - item in graphics items
07:30 - we want to go ahead and draw that to the
07:33 - control so we'll
07:35 - type object Graphics item.
07:39 - draw and then we'll do e.
07:43 - Graphics now um we'll go ahead and run
07:45 - this and then I'll come back and explain
07:47 - this to you so here we have our paint VB
07:52 - and you can see that we can draw and it
07:55 - starts drawing on our circles and our
07:58 - lines now we've got this ugly flashing
08:01 - and we'll learn how to fix that um in
08:03 - the next
08:05 - tutorial so basically what this does is
08:08 - we have a four each Loop so it's going
08:10 - to go through each item in our Graphics
08:13 - items array list so for every Circle
08:15 - that is created um it is in this
08:17 - Graphics items and it has um different
08:19 - values to it such as the X position and
08:21 - the Y position um that it can use so
08:24 - we've got for each for each of the
08:26 - objects in our array list of type
08:28 - Graphics items what we want to do is use
08:31 - object Graphics items. draw and you can
08:34 - see here and we have our draw um it'll
08:37 - fill an ellipse um at with the black
08:40 - brush and use the current
08:44 - rectangle so it's going to draw that and
08:47 - it's going to use e. Graphics so I've
08:50 - got e as paint event ARs and all paint
08:53 - event arcs have a graphics um that we
08:57 - can use to draw stuff to the control so
09:00 - if you have any questions uh leave them
09:01 - in the comments um once you've done once
09:04 - you're done putting this code in go
09:05 - ahead and move on to the next tutorial