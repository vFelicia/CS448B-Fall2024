00:00 - hello YouTube Sam here from youtube.com/
00:03 - onli gamer for the New Boston and in
00:05 - this tutorial we're going to be working
00:07 - more on the car program now if you don't
00:10 - understand what you see uh already on my
00:11 - screen then you might want to go ahead
00:13 - and move back a couple of tutorials and
00:15 - start from the beginning of the card uh
00:18 - card program tutorials okay so now that
00:20 - I got that that out of the way let's go
00:22 - ahead and um add a Constructor and a
00:25 - another method that we can use inside of
00:28 - our car class now these are all
00:30 - essential because we're going to be
00:31 - using those um in other classes that we
00:34 - make um by using
00:36 - inheritance so let's go ahead and just
00:39 - make a simple uh method that will or a
00:43 - function that will tell if the car is
00:45 - moving so we'll just comment this so is
00:49 - the car
00:51 - moving and it'll type public
00:56 - function is
00:58 - moving it's not going to accept any
01:00 - arguments cuz we don't need any and we
01:02 - will make it a Boolean type because the
01:05 - car is either moving or it's not moving
01:07 - it's that simple so now we're going to
01:10 - test if uh test the speed so
01:14 - if speed and we are accessing uh the
01:18 - property speed right
01:20 - here so and this uses what's called
01:24 - indirection to where we're not actually
01:26 - accessing this uh variable directly
01:29 - we're using this
01:30 - property so if speed equals zero and if
01:34 - that confuses you uh the IND Direction
01:36 - concept um then uh I'll be talking about
01:39 - it later on and you've already been
01:40 - using it a lot throughout your programs
01:42 - uh so it'll be easy to understand once
01:44 - you grasp the concept because you've
01:46 - used it a lot so if speed equals zero
01:49 - then what do we want to do we want to
01:51 - just simply return
01:53 - false now if speed is anything else
01:55 - other than zero um then we're going to
01:58 - go ahead and return true now they can
02:01 - also be moving at
02:03 - uh a negative speed we're just going to
02:06 - allow that let's say they're going
02:08 - backwards now this technically isn't
02:10 - right because um they're always you it's
02:13 - impossible to move at a negative speed
02:16 - you always have to be going a certain
02:17 - speed in One Direction or the other but
02:19 - for this program let's just allow them
02:20 - to go backwards by using a negative
02:23 - speed so if it's anything other than
02:25 - zero we'll just simply return
02:28 - true
02:30 - now let's go ahead and create a
02:33 - Constructor so that um whenever somebody
02:36 - creates a new car object it's going to
02:38 - go ahead and set some of these values
02:40 - for them so that they don't have to do
02:41 - that so we'll just go ahead and use the
02:44 - Constructor so sub new go ahead and
02:47 - enter and it'll add in sub for us so
02:50 - let's just go ahead and uh set some of
02:52 - the default values for this so we'll set
02:54 - the color the speed and the number of
02:57 - doors so color
03:00 - equals uh let's make it
03:03 - red speed is going to initially be equal
03:06 - to
03:06 - zero or here in speed it's going to be
03:11 - equal to zero um and then int number of
03:14 - doors we just go ahead and set that
03:16 - equal to uh five and that's including
03:19 - the trunk so you got four and then the
03:22 - trunk so now that we've created our
03:24 - Constructor we can go ahead and head
03:27 - back into form 1vb and you can see under
03:29 - the form one load we don't have to set
03:32 - the color um to start with because it's
03:34 - already done that for us in the
03:36 - Constructor now if you want to you can
03:38 - go ahead and add some arguments for the
03:40 - Constructor so that when they make a new
03:42 - car object it will set it to the color
03:44 - the speed and the number of doors that
03:45 - they want so let's come over here and
03:49 - we'll add a button and we'll just call
03:52 - it
03:54 - accelerate so we'll set the text
03:58 - to accelerate
04:02 - we'll set the name to button
04:05 - accelerate and now we'll go ahead and
04:07 - access the click event for
04:10 - that so just like all of the other click
04:13 - events we're going to be using an input
04:16 - box so we'll just type uh default
04:22 - car or not default back color it keeps
04:24 - doing that for me cuz it's not selected
04:27 - so default car. acceler
04:31 - and for the arguments we're going to
04:32 - need an integer so what we're going to
04:34 - do is we're just going to convert um a
04:38 - string to that now the string that we're
04:39 - going to be use is the string that is
04:42 - that we get from the input box so input
04:45 - box uh please enter
04:49 - the
04:51 - speed in miles per hour to
04:56 - accelerate so this tells them what to do
04:59 - uh thep title we'll just set it to
05:01 - speed and then we'll leave the rest as
05:05 - default so the first argument of our
05:08 - conversion is going to be the string
05:10 - that we get from the input box and now
05:12 - the second argument we're going to
05:13 - convert that to type
05:17 - integer so now we just need to make sure
05:19 - that all of our parentheses line up so
05:22 - I've got one
05:24 - there and we've got another one right
05:26 - here so we're going to have to put
05:30 - let's see I think one right
05:33 - there or not let's put one right
05:38 - there okay so now that we've called um
05:42 - accelerate let's just go ahead and show
05:45 - uh the car
05:46 - info so we'll just type default
05:52 - car do2 string now I know I'm going to
05:56 - get a lot of comments about this saying
05:57 - like why did you override two string to
06:01 - do this when you could have created your
06:02 - own method that shows the uh the
06:05 - attributes of the car well the reason I
06:08 - did this is to get you some practice
06:09 - with the overrides and because we're not
06:12 - going to be using two string anywhere
06:13 - else in our default car class so if you
06:15 - call default c.2 string if we didn't
06:18 - override that um it would give us back
06:20 - something that isn't useful to us at all
06:22 - so I just decided to override it to give
06:25 - us what we want and it's only going to
06:26 - do that to the class car and anything
06:30 - that inherits it so let's go
06:34 - ahead and come back
06:38 - here and we will run the program and see
06:42 - what
06:43 - happens so we'll go ahead and uh we'll
06:46 - set the name of the car to uh let's say
06:49 - Honda
06:51 - CRV so we got our CRV um the color is
06:54 - already automatically set and let's go
06:57 - ahead and accelerate it by let's say
07:00 - 60 MPH and we'll click okay now if we
07:03 - show the Ino impo if we show the speed I
07:07 - mean not the the info um we get the car
07:10 - name the car color the number of doors
07:12 - and the car speed now we can keep
07:14 - accelerating let's accelerate by another
07:16 - 5 miles hour um you can see that it
07:19 - gives us 65 mil hour okay so before this
07:23 - tutorial uh is over I want to give you
07:26 - guys a challenge now when I give you
07:27 - guys challenges I feel it'll really help
07:29 - you uh learn Visual Basic on your own um
07:32 - if you uh do the challenges instead of
07:34 - just uh moving on to the next tutorial
07:37 - so what I want you to do is whenever the
07:39 - person clicks set color and it has it
07:41 - shows an in input box I want you to set
07:44 - the default response as the color that's
07:47 - already there so let's see see you got
07:50 - the default response say string is set
07:52 - to nothing well I want that to be set to
07:55 - uh the color the that the car is already
07:57 - set to so if you figure out how to do
08:00 - that um feel free to uh leave a short
08:03 - video reply um that would be the best
08:05 - but you could also just leave a comment
08:07 - and tell me uh how you figured it out um
08:10 - so thanks for watching guys and stay
08:11 - tuned for the next tutorial