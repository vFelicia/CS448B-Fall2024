00:00 - hi this is Alex from PHP academy' org
00:03 - and this is a video tutorial for the new
00:05 - Boston now in this video I'm going to be
00:07 - briefly explaining and demonstrating the
00:09 - pier egg match function the pier egg
00:14 - match function looks like this and what
00:16 - it is is it takes it takes a expression
00:20 - matching and lets us do this so what is
00:24 - expression matching but it's basically
00:26 - matching patterns inside of a string so
00:30 - we could say we could use this function
00:33 - to check if a string exists inside of a
00:36 - string but we can also take on more
00:39 - complex patterns and check for these
00:42 - inside of strings so I'm not going to be
00:44 - demonstrating some of the more complex
00:46 - patterns because with the amount of
00:49 - different expressions that you can use
00:52 - to check for patterns we would literally
00:54 - be here for hours because there's lots
00:57 - and lots of different ways you can check
00:58 - but what we're going to be doing is
01:00 - we're going to be creating an example of
01:02 - just checking for a string inside of a
01:04 - string so let's go ahead and create a
01:06 - string data and this is going to be
01:10 - equal to this is a string now what we
01:13 - want to do is we want to check to see if
01:15 - we find a match inside of this string
01:19 - now what the pewag match function will
01:22 - not do is tell you where the match is it
01:25 - will just show you it will just return a
01:29 - 1 or a 0 depending on if there's a match
01:32 - so what we can do is we can put this
01:34 - into an if statement and the condition
01:36 - will either return 1 or 0 which is going
01:38 - to be the function itself therefore if I
01:42 - equals 1 then we have found a match if
01:44 - it equals 0 then we haven't found a
01:46 - match so let's go ahead and create our
01:48 - if statement and let's also create our
01:52 - else as well so we've created an if-else
01:55 - statement now what we want to do is
01:57 - inside the condition area we want to
02:00 - give the function so preg
02:03 - and then brackets so in here we were
02:06 - going to take we're going to take two
02:08 - parameters the function itself takes
02:10 - three parameters I think we're just
02:12 - going to be giving it two so essentially
02:14 - what we're going to be doing is
02:15 - searching for a string inside of this
02:17 - string up here that we've predefined so
02:20 - let's say we chose the word is we want
02:23 - to see if there's an is in here we could
02:26 - also do it with simply something like is
02:28 - there any spaces in this in this string
02:33 - so we'll go for both examples and we'll
02:35 - demonstrate this twice so the first
02:38 - parameter is the expression the pattern
02:44 - that you want to match for and the
02:46 - second parameter is the string itself so
02:49 - the string data and this can either be
02:51 - supplied in using a variable or you can
02:54 - add your plaintext in here pain text
02:57 - plain text in here okay so we're going
02:59 - to be feeding in string there and we're
03:05 - going to be searching for a particular
03:07 - word so the simplest way that you could
03:09 - possibly do this is two forward slashes
03:11 - and then in the middle of these two
03:13 - forward slashes is the word that you're
03:15 - searching for so this just it this is
03:18 - just basically meaning as this is so
03:21 - what we're searching for is inside this
03:24 - string as essentially what we're doing
03:25 - with these two forward slashes here
03:27 - contained containing this is so if our
03:31 - room if this returns one that's going to
03:35 - mean it is found which at the moment we
03:36 - know that it is going to be so in here
03:38 - we can echo out match found
03:42 - and in else what we can do is echo out
03:46 - no match found if we can't find a match
03:50 - so let's go ahead and open up our
03:52 - browser and test this
03:55 - okay so what I'm going to do is I'm just
03:57 - going to refresh the page and see what
03:59 - we got so it now says match found we
04:01 - knew that it would do that because we
04:03 - know that the word is is contained
04:04 - within a string or within this string so
04:08 - now let's just simply put a space see if
04:10 - it will return match found okay so it's
04:13 - saying match found so what we could do
04:16 - is we could have a function that would
04:18 - check for example force for a space in a
04:23 - program or sorry in a string and we'll
04:26 - do that a bit later when I've explained
04:28 - a bit more about this function now what
04:30 - happens if we don't know what this
04:32 - string is we might want to specific
04:35 - pattern inside of a string and when we
04:38 - don't know we don't know how the string
04:40 - is formed or what we're feeding in so
04:42 - we're just double checking something