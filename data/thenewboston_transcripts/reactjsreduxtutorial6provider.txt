00:00 - all righty hosses welcome back and in
00:03 - the last video we set up our store here
00:06 - right now we only have a little bit of
00:08 - data stored in there which is three
00:10 - users me joby and Madi so the next thing
00:14 - we have to do is we need to figure out
00:15 - how to take this store and pass the data
00:19 - along to our components so it would
00:24 - probably be a good idea to make some
00:25 - components if I'm going to teach that so
00:27 - I'm going to make a new directory right
00:29 - inside Jas and I'm just going to name
00:33 - this components so let's go ahead and
00:36 - first component I'm going to make in
00:38 - this video is just the app component now
00:41 - sometimes I name this layout because
00:43 - this component isn't really going to
00:46 - have any brains or do anything really
00:47 - smart it's just going to kind of lay out
00:49 - my other components so well I actually
00:53 - don't want to name it layout because
00:55 - it's not really convention most people
00:57 - just name app so while I'm teaching I
00:59 - might as well stick the convention but
01:02 - again that's all this components can be
01:03 - and of course we need to import react
01:05 - since that's kind of the tutorial and
01:08 - all right so since we really don't need
01:12 - any brains or any kind of fancy
01:14 - functionality what I can do is actually
01:16 - just use the shorthand version and I'll
01:19 - say cons app and just set this equal to
01:24 - fat arrow alright so if you guys never
01:30 - saw this syntax before this is a cool
01:32 - new syntax that we got with six for
01:35 - people who were too lazy to write the
01:36 - word function basically this is any
01:39 - parameters that you want to throw in in
01:41 - the function body goes in between here
01:43 - so all we're doing remember all a
01:46 - component is is just a function that
01:48 - returns some HTML just part of your
01:51 - website so in this component what I'm
01:55 - going to do is I'm going to take all my
01:56 - other components to stick them right in
01:58 - there again like I said that's what
02:00 - we're going to be doing eventually but
02:01 - for right now um I'll just stick some
02:03 - placeholder components so this
02:07 - application like I said is going to be a
02:09 - list of user names on top and then you
02:10 - click one of the user names and it
02:12 - displays their
02:13 - biyo or more detailed information on
02:16 - bottom so on top I'll just say this is
02:19 - where the user name list is going to go
02:23 - and then under that actually let me make
02:27 - a horizontal rule which is just going to
02:29 - be like a line across and then I'll have
02:32 - another heading and I'll say like a user
02:34 - details alright so we got our basic
02:39 - component made and now whenever we
02:42 - include this in another part of our
02:45 - application we actually need to say that
02:46 - this is the part that we want to export
02:48 - so I'm just going to say export default
02:52 - app and there you go now one last thing
02:56 - I actually want to do right here is you
02:58 - see this s CSS file whenever you use
03:01 - this styling you actually need to
03:03 - specify where you want to put it so if
03:06 - you just put it in your main layout then
03:09 - you're going to be able to use it in any
03:10 - component so in order to do that all you
03:13 - do is hit require why is nothing popping
03:17 - up here all right
03:19 - require nothing all right so what I'm
03:22 - going to do is require and how do I get
03:24 - here go up to alright so it's an S CSS
03:32 - and it's called style a CSS so basically
03:36 - we're taking this file and by the way
03:40 - we're just going to be able to kind of
03:41 - use it like normal since it's already
03:43 - going to be converted by my build tool
03:45 - and we're just going to be able to use
03:47 - our styling anywhere throughout our
03:50 - application
03:51 - pretty sweet eh so now that we got this
03:54 - component built and taken care of let's
03:56 - go ahead and hop back into our main and
04:00 - minimize this so it's easier to see
04:02 - where I am our main index.jsp and all
04:06 - right so the point of this video was to
04:09 - figure out how to take our store and
04:10 - pass it to our main application in there
04:15 - for all of our components so how do we
04:17 - do that when we look at this diagram
04:19 - again we basically need to do something
04:22 - like make a provider in the provider
04:25 - makes the store
04:27 - or all of your data available to all
04:29 - containers which are just think of them
04:32 - like components for now alright so how
04:35 - the heck do we make a provider well in
04:37 - order to do that you just go ahead and
04:40 - import and by the way this is the
04:44 - easiest thing ever it's almost too easy
04:46 - to be honest you just import provider
04:48 - from react life in redux alright so in
04:56 - react Redux there's an object called
04:59 - provider and all you do is you take this
05:03 - object and actually it's probably just
05:05 - easier if I do it alright so check this
05:10 - out first
05:10 - what we obviously want to do is we want
05:13 - to take this component and display it in
05:16 - our application so to do that we need to
05:20 - go ahead and import app from components
05:27 - app actually want to name that lower
05:31 - case so refractor rename app I like
05:35 - having my files in lower case alright so
05:39 - any time we want to use this app all we
05:41 - have to do easy stuff you guys have seen
05:44 - this before
05:44 - is just include it right here so this is
05:47 - going to do is it's going to take this
05:48 - component and render it in our target
05:51 - route and it's not displaying because
05:56 - what is wrong with my reducer I think I
06:00 - got a feeling all right so yeah that's
06:04 - what happens when you don't export it so
06:06 - I'll say export default all so again
06:11 - even though we included this file right
06:13 - here whenever we include it we need to
06:16 - say what we're sending out from it so we
06:19 - made this but then we didn't write
06:22 - export so we weren't actually piping it
06:24 - out so there you go remember to do that
06:26 - and now that we have that taken care of
06:29 - we can kind of fix all the bugs
06:32 - recompile boom there you go so again we
06:35 - made this app component which doesn't do
06:38 - anything really smart yet
06:40 - and we said include this and render it
06:43 - as root but right now we have the store
06:46 - which is our storage for all of our
06:49 - applications data and we have the
06:50 - separate component they aren't really
06:52 - connected anyhow now I remember that I
06:55 - said in order to take all of your
06:58 - storage and kind of pipe them to your
07:00 - components you need a provider so how do
07:03 - you use this thing called a provider
07:04 - well check this out
07:06 - cut your main component right here and
07:10 - you see this provider object that we
07:12 - just imported that is actually be able
07:18 - be easier if I break this up in a couple
07:19 - lines that is your new root component so
07:25 - inside here just go ahead and throw in
07:28 - your app and now this is how you
07:31 - actually set this up using react Redux
07:33 - but there's one other thing like ten
07:36 - more characters we have to type and
07:38 - that's this you need to make a property
07:41 - called store and set this equal to
07:44 - whatever this store is right here so
07:46 - again that's all you have to do to use
07:49 - your provider and if you look the
07:52 - provider makes your store all your
07:55 - applications data available to whatever
07:59 - is inside which is your entire
08:01 - application now whenever we make any
08:03 - other components since we're going to be
08:05 - sticking them inside here essentially
08:07 - what we're doing is we're taking the
08:08 - store and making it available to every
08:11 - single component so now every single
08:14 - component every single container is
08:16 - going to have access to all of our
08:19 - applications data pretty sweet huh so
08:22 - there we go that's all there is to it
08:24 - again a provider it's like two lines of
08:27 - code how easy is that to understand and
08:29 - setup so still a little ways to go
08:33 - before we actually start displaying our
08:35 - users in here but I mean hey we are
08:38 - getting there there's a Redux stuff it
08:40 - really isn't hard is you probably
08:41 - thought it was so for now thing guys for
08:43 - watching also if you want to donate to
08:46 - my patreon I'm saving up to buy my
08:49 - grandma a George Foreman grill
08:51 - oh so many lies all right so yeah I
08:55 - think guys I'll see you next time