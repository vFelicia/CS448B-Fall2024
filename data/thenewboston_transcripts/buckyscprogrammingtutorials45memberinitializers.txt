00:00 - what's going on guys welcome to your
00:01 - 45th C++ tutorial and in this tutorial
00:04 - I'm going to be talking to you guys
00:05 - about member initializers now I don't
00:08 - even know if I told you guys this but a
00:09 - member is pretty much a fancy term for
00:12 - anything in your class so when some
00:15 - people talk about variables they call
00:16 - them members it's basically anything in
00:18 - your class is a member of that class so
00:21 - let's go ahead and let me explain this
00:23 - we're gonna probably have a bunch of
00:25 - variables in our class some of them are
00:28 - just going to be regular variables and
00:30 - some of them are going to be constant
00:32 - variables so we know constant variables
00:34 - have a couple of weird rules and
00:37 - creating them is one of the weird rules
00:39 - so remember a constant variable is
00:41 - basically a variable that we can't
00:44 - change and we also have to initialize it
00:46 - using a special uh it's a special syntax
00:50 - it's called member syntax now the cool
00:53 - thing is we can also initialize regular
00:55 - variables this way but you don't have
00:58 - that option of when using constant
01:00 - variables you have the option of um
01:03 - initializing regular variables this way
01:05 - or the way we learned before but
01:07 - constant variables definitely need to be
01:10 - initialized using member syntax so let's
01:12 - go ahead and first thing let's go ahead
01:14 - and make two private variables I'm going
01:16 - to make one just regular variable this
01:18 - going be integer variable reg VAR stands
01:21 - for regular variable and I'm going to
01:23 - make another constant variable so
01:25 - constant um just make this one Inger as
01:28 - well and we'll name this one const VAR
01:31 - so now we have just a regular Dum
01:33 - variable and a constant variable so now
01:37 - what I want to do is whenever we first
01:39 - create our object let's go ahead and
01:41 - assign a value to this variable and
01:43 - assign a value to this variable so our
01:46 - Constructor is going to take two
01:47 - parameters one value for this one and
01:49 - one value for this one so go ahead and
01:51 - just type N A and N B and we'll be
01:54 - tossing numbers in there later on but
01:56 - now that we have values assigned to
01:59 - these VAR ibles we're going to need a
02:01 - way to print it out on the screen so go
02:02 - ahead and we'll make a function called
02:04 - print simple enough so now we have a
02:07 - Constructor that takes two values
02:10 - assigns one to our regular variable one
02:12 - to our constant variable and then we'll
02:14 - print it out on the screen so now we
02:17 - probably need to change our Constructor
02:18 - around a bit the first thing we need to
02:20 - make a do is take those two parameters
02:22 - in a and in B now you're saying all
02:25 - right I probably go ahead and in the
02:27 - body somewhere in here I'm going to type
02:30 - all that syntax that special syntax
02:32 - we've been talking about but check it
02:34 - out you actually don't write anything in
02:37 - the body yeah think about that for a
02:40 - second it'll freak you out you actually
02:42 - don't write any of your code when
02:44 - initializing variables in the body so
02:46 - you're saying where the heck do you put
02:47 - it and this is the weirdest place you
02:49 - put it in between the parameter list and
02:52 - the beginning of the body so between the
02:54 - parentheses and the curly brace this is
02:57 - where you're going to put it so that's
02:59 - what confused uses the most people and
03:00 - that's why they have a hard time
03:02 - understanding because usually nothing
03:04 - goes here but that's where we're going
03:05 - to be putting the syntax why they made
03:07 - it go here I don't know and the Syntax
03:09 - for it was this the first thing we need
03:12 - is a colon and the colon tells C++ that
03:15 - we're going to be working with member
03:17 - initializer syntax now it's actually
03:20 - quite simple all you need to do is write
03:22 - your variable name such as regvar and
03:25 - inside parentheses you give it an
03:27 - initial value which this one we're going
03:28 - to be passing it in a
03:30 - now whenever you have multiple variables
03:32 - you want to set equal to you know the
03:34 - initial value you just separate them
03:36 - with the comma it's basically just like
03:38 - a list so our next variable is const uh
03:41 - what is it const variable and this one
03:44 - is going to be equal to B and what
03:46 - people sometimes like to do is put their
03:48 - variables on new lines but it really
03:50 - doesn't matter and another thing make
03:53 - sure that you don't put a semicolon at
03:55 - the end of this these aren't statements
03:56 - it's just a list it knows when you're
03:58 - done because the body is going to begin
04:01 - so basically start with a colon and make
04:04 - a list using this syntax variable value
04:08 - if you have another one separate with
04:09 - comma variable value so I know it's a
04:13 - really weird syntax but what this is
04:14 - going to do is we're going to be
04:15 - creating a Constructor that takes two
04:17 - values and it's going to be setting them
04:19 - equal to a regular variable and a
04:21 - constant variable and like I said before
04:23 - whenever you have a constant variable in
04:25 - your class this is how you need to do it
04:28 - of course we can set this variable equal
04:30 - to you know initialize it like we had
04:32 - before but you know we might as well use
04:34 - this list since we're you know learning
04:36 - this tutorial so now let's just go ahead
04:38 - and make another
04:40 - function void print just to print this
04:42 - stuff out on the screen so
04:45 - void okay there void Sally print and all
04:51 - this is going to do is be like C
04:55 - out regular V
04:58 - is and then just put reg
05:03 - VAR and then
05:07 - put constant variable is
05:12 - colon
05:14 - constar just like that and now let's go
05:17 - ahead and end that line and you guys
05:18 - can't even
05:21 - see yeah you guys still can't see there
05:24 - we
05:26 - go inlined definitely spell that wrong
05:30 - and that line so now it's going to print
05:32 - out our regular variable is 10 and our
05:34 - constant variable is 20 or something
05:36 - stupid like that as long as I spelled
05:38 - this right let me just double check all
05:39 - right we should be good to go so now all
05:42 - we need to do is create an object in our
05:44 - main so let's go ahead and create a
05:47 - Sally object just name it so and
05:50 - remember this is a Constructor so it's
05:52 - going to take two parameters just make
05:53 - like three and 87 two random numbers
05:56 - just make sure they're integers and now
06:00 - as soon as we created that Constructor
06:02 - it's going to take three and assign it
06:04 - to our regular
06:06 - variable and it's going to take
06:08 - 87 and assign it to our constant
06:11 - variable so now regvar equals 3 constar
06:14 - equals 87 so now when we call that print
06:17 - method and let me just I don't like
06:20 - typing stuff on the first line for some
06:22 - reason um s o. print it should print
06:26 - that out unless I forgot a semicolon or
06:28 - something so let's go ahead and see and
06:29 - check it out regular variable is three
06:33 - constant variable is 87 H nice spelling
06:36 - right there that actually does spell
06:39 - variabel well I close enough so anyways
06:42 - one last time here is what we did we had
06:46 - a constant variable in our class this
06:48 - pesky little thing right here so
06:50 - whenever we have a constant variable in
06:52 - our class we can't initialize it like
06:54 - before we need to initialize it in a
06:57 - special way and that's through the use
06:58 - of member ini initializers whenever you
07:01 - want to create a member initializer list
07:03 - and basically this is just a fancy term
07:05 - for setting your variables equal to
07:06 - values you need to make a list in
07:09 - between your parameters and the body of
07:12 - your Constructor and make sure whenever
07:14 - you're making that list to start with a
07:16 - colon that tells C++ you're going to
07:18 - start making a member list and just use
07:20 - this syntax and don't forget to separate
07:23 - each variable with a comma and then of
07:27 - course whenever you create your object
07:29 - you need need to pass it in the two
07:30 - parameters it needed because right here
07:32 - it said it asked for two parameters and
07:35 - then later on we can just use those
07:37 - variables and any old function just the
07:38 - print amount like regular variables
07:41 - blank constant variables blank and then
07:45 - actually I'm getting kind of Sidetrack
07:47 - you guys know how this uh function works
07:49 - but actually I want to ask you guys this
07:50 - now that I'm thinking about it is there
07:52 - a way to uh like word WP because like
07:56 - whenever I'm working with this you see I
07:58 - was going off the screen
07:59 - um let me know if there's a way to
08:01 - automatically word w so you guys well I
08:05 - guess I'll just scroll from now on I
08:07 - don't like my lines of code on new lines
08:09 - anyway so uh forget that like last 30
08:12 - seconds of this tutorial but anyways now
08:13 - that you guys know how member
08:15 - initializers work um yeah I'm just going
08:19 - to quit this tutorial now so thank you
08:21 - guys for watching don't forget to
08:22 - subscribe and I'll see you guys in next
08:23 - video