00:00 - all righty mace welcome back and let's
00:03 - go ahead and start writing some code
00:05 - shall we so redux how the heck does this
00:09 - thing work all right what is the first
00:12 - thing that we need to make well my guess
00:14 - is this big store right here so what
00:17 - does this say this is pretty much as one
00:20 - big JavaScript object that stores all of
00:22 - the data for your entire application
00:26 - simple enough so how do we go ahead and
00:29 - actually make this thing well what we do
00:32 - is we need to import a function called
00:34 - create store big surprise there from the
00:37 - redux modules so imports create store
00:41 - and this is in the module burritos so we
00:46 - already installed that should be in your
00:48 - node modules and there you go
00:51 - now one other thing that I probably just
00:54 - want to mention real quick you see
00:55 - whenever we import this and this then
00:59 - this was kind of generic but then we
01:01 - imported create store and we surrounded
01:04 - it with curly braces why the heck did we
01:06 - do that
01:06 - well you know how whenever you import a
01:10 - module you can use things from those
01:12 - modules well if you just want to use
01:14 - like one variable or one function from
01:17 - it and you can wrap it in curly braces
01:19 - and what this saves you from doing is
01:21 - instead of writing bar great store
01:24 - equals redux great store since this is
01:28 - such a common technique instead of
01:30 - having to make a separate variable and
01:32 - transfer it over and then you had the
01:35 - ability to use it whenever you wrap it
01:38 - in these curly braces you're pretty much
01:40 - doing that in one big Spang so right now
01:43 - already we can just use create store and
01:45 - just use the like a function so let's
01:47 - actually go ahead and do that
01:49 - so I'm going to make this a constant and
01:54 - anytime you're pretty much using a
01:57 - variable and you're only going to be
01:59 - making it one time in not changing its
02:02 - value at all you probably want to make
02:04 - it a constant in the reason for this is
02:06 - because first of all if you try to
02:08 - change it later on then you're going to
02:10 - throw air so it ensures that you don't
02:12 - accidentally change
02:13 - value and also it helps with performance
02:16 - so Const store is going to be equal to
02:21 - create story now again the store is all
02:27 - of the data for your entire application
02:29 - now this is actually going to be
02:31 - changing but we are not changing in code
02:35 - we're not going to say something like
02:37 - store equals something new or else that
02:40 - will throw an error if you guys want to
02:43 - see how that works then just stick
02:45 - around it's actually pretty interesting
02:47 - now the store is all the data for your
02:50 - application but how does it know what
02:53 - data it's supposed to store I think
02:56 - that's what it stands for a data storage
02:58 - by the way just between me new alright
03:01 - let's look at this handy diagram so the
03:05 - data that gets saved in the store is
03:07 - determined by things called reducers so
03:11 - a reducer is pretty much just like I
03:13 - said it's a function that says what data
03:17 - were supposed to save in our store now
03:20 - whenever we make our application we're
03:23 - going to have a bunch of different parts
03:24 - of data we're going to need to save a
03:26 - bunch of users we're going to need to
03:27 - save a bunch of videos a bunch of songs
03:30 - or ages of people who knows whatever the
03:34 - heck we want to save on our website now
03:36 - instead of just making one big function
03:38 - to kind of manage all this what we do is
03:41 - we break it up into separate reducers so
03:43 - we're going to have a movies reducer
03:45 - users reducer users reducer users
03:48 - reducer can make a rap song out of that
03:50 - so since we're going to have all these
03:52 - reducers let's just go ahead and make a
03:54 - new directory so we can kind of organize
03:56 - everything so this directory is just
03:59 - going to be named reducers and by the
04:03 - way this application that I'm making is
04:05 - going to be really easy arm all I'm
04:08 - going to have is a bunch of users names
04:10 - at the top and then whenever you click
04:12 - one it displays your profile or details
04:15 - below so again it's a really kind of
04:18 - dumb application you're probably not
04:20 - going to make millions of dollars from
04:22 - it but to explain redux it's perfect and
04:25 - I can print my
04:26 - to explain all the concepts so that's
04:27 - why I decided to go with this anyways
04:29 - moving on inside this reducers directory
04:32 - I'm going to go ahead and make a new
04:35 - javascript file and I'm just going to
04:37 - name it reducer users so again inside
04:44 - here what I'm going to have is a
04:46 - function that returns the part of
04:49 - application responsible for storing the
04:51 - users so later on whenever we delete
04:54 - users whenever we add new users whenever
04:57 - we change a user's name this function is
05:00 - going to be used so that's all we're
05:04 - doing and again since we're going to
05:07 - want to include this in another part of
05:09 - our application we actually need to
05:11 - export it so export default function so
05:19 - all this function is going to do is
05:20 - return an array of users that's it how
05:25 - easy is that so I'm going to hit return
05:27 - an array and now I just have to type in
05:33 - a bunch of users and let me actually
05:35 - pause the video because I don't think
05:36 - you guys want to see me take 10 minutes
05:39 - typing in users