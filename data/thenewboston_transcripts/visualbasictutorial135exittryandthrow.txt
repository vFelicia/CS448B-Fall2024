00:00 - hello YouTube Sam here from youtube.com/
00:03 - onli gamer for the New Boston and in
00:05 - this tutorial we're going to be talking
00:07 - about the exit try statement and if we
00:10 - have time we'll also be talking about
00:11 - the throw keyword so what the exit try
00:15 - statement does is it's basically like
00:17 - any other exit statement like exit sub
00:20 - Exit 4 or exit do all of those will exit
00:24 - the current uh statement that it's in so
00:27 - let's say we'll go ahead and type if
00:33 - index is greater
00:36 - than or equal to let's say my
00:41 - array. length and I think it's
00:45 - minus1 so if it's greater than or equal
00:48 - to my array. length minus one what do we
00:50 - want to do we want to exit the
00:55 - try so let's go ahead and run
00:58 - this
01:01 - and if we did this right um it's going
01:03 - to exit the try um before it prints one
01:06 - I it would exit after it prints one but
01:09 - you still get the uh idea of what it
01:11 - does it will just exit the statement and
01:13 - it will go past this catch statement
01:16 - right here this it will not see this and
01:18 - it will go to the line of code that is
01:21 - right below it
01:23 - so it goes below the ENT TR and runs
01:26 - whatever code is right
01:28 - there now
01:30 - uh exit TR is a very simple concept just
01:33 - like any other exit keyword so what
01:36 - we're going to talk about now is
01:37 - throwing new throwing
01:40 - exceptions so we'll just
01:43 - type um if index is greater than or
01:47 - equal to my array. length what do we
01:51 - want to do we want to
01:55 - throw and you can see here that the
01:57 - description says throws an exception
01:59 - within a proced procedure so that you
02:00 - can handle it with structured or
02:01 - unstructured exception exception
02:03 - handling code so this will just throw
02:06 - the exception before the exception
02:08 - actually
02:09 - happens so if an exception is about to
02:11 - happen let's just throw one right here
02:14 - and we'll handle it down here in the tri
02:15 - catch statement I mean the catch
02:17 - statement so we want to create a new
02:19 - exception and we will throw an index out
02:22 - of range
02:23 - exception and for our
02:26 - parameters we can add a message so we'll
02:29 - just
02:31 - say
02:42 - um okay so we're going to throw a new
02:45 - index out of range exception and it's
02:47 - going to say you don't try to
02:49 - access memory that isn't there so now
02:51 - what we're going to do is we're going to
02:52 - catch that
02:53 - exception so we'll type index out of
02:57 - range exception and for for our code we
03:01 - will just sew that in there so ex Dot
03:06 - and what we're going to do instead of
03:07 - two string we're going to get the
03:09 - message for
03:11 - that so it's going to show our message
03:13 - that we typed in right
03:15 - here so let's go ahead and run
03:18 - this you can see that when we click add
03:20 - all it's it says you don't try to
03:23 - access memory that isn't
03:25 - there now the message will not show up
03:29 - if we just do ex do2 string so we go
03:31 - ahead and run this and it's going to
03:32 - give us the same stuff that we did last
03:36 - time and it looks like it did show up it
03:38 - says um system. index out of range
03:41 - exception you don't try to access
03:42 - memory that isn't there so it gives us
03:45 - the type of exception whatever message
03:47 - that is thrown with that exception and
03:50 - then it shows us all the information
03:51 - about it uh sorry I thought I thought
03:53 - that wasn't going to be there but uh it
03:55 - was so if you do two string it's going
03:58 - to show you the information and and the
04:00 - message now it's more um it's better
04:03 - coding to just show the message to the
04:06 - user uh so that they don't have to see
04:08 - all of that stuff right there that they
04:10 - most likely will not
04:15 - understand now sometimes what you can
04:18 - also do is throw exceptions just to get
04:21 - yourself out of some code um I wouldn't
04:24 - really recommend this but sometimes it
04:26 - is a valid way to get out of code so
04:29 - let's say say you're doing an operation
04:31 - and if something happens in that
04:33 - operation you want to throw a new uh
04:36 - exception and you just catch that
04:38 - exception right here and just leave that
04:39 - blank and what it's going to do it's
04:41 - going to exit whatever operation you're
04:43 - doing right there and then come down and
04:44 - start at this line of
04:47 - code now you can also have multiple
04:50 - except multip multiple catch statements
04:53 - um when you're throwing new
04:55 - exceptions and you can throw exceptions
04:58 - um anywhere you want your program but
05:00 - just keep in mind that it's going to
05:02 - make your program crash um so let's say
05:06 - we'll go ahead down here and we'll throw
05:09 - new exception and for the message we'll
05:12 - type hi I am an
05:18 - exception so for this to actually show
05:21 - up what we're going to have to do is
05:23 - right click on try catch and click build
05:25 - so we're going to need to run the debug
05:28 - uh not the debug we're going to run the
05:30 - release so if you head over to your
05:33 - Visual Studio 2010 uh live um project
05:37 - folder right here so we got libraries
05:38 - documents Visual Studio 2010 projects
05:41 - here's our Tri catch project if you go
05:43 - to the project and then you go to bin
05:46 - release you'll see your program right
05:48 - here go ahead and open that up and this
05:50 - is the release form of your program it
05:52 - doesn't offer any debugging capabilities
05:55 - so if we go ahead and click add all it
05:58 - says an unhandled exception has occurred
06:01 - now this is built into Visual Basic and
06:03 - it handles exceptions for you so that
06:05 - they the user can either continue uh
06:07 - pass the exception or quit and you can
06:10 - see that the message right here says hi
06:12 - I am an exception and that's the message
06:14 - that we sent to it when we threw that
06:16 - exception so we can just go ahead and
06:18 - click continue because nothing bad is
06:19 - going to happen and we can go ahead and
06:21 - close out of
06:23 - this so go ahead uh practice with the
06:26 - exit try statement you can also practice
06:30 - um throwing exceptions um in your
06:33 - program or in your try statement and uh
06:36 - once you're familiar with that and
06:37 - you're not going to forget it go ahead
06:38 - and move on to the next
06:40 - tutorial