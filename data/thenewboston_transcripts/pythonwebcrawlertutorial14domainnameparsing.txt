00:00 - ah already houses welcome back and yes I
00:02 - know my voice sounds goofy still I'm
00:05 - still sick actually waited a couple days
00:07 - because I was like you know my voice
00:09 - sounded weird in that video let me wait
00:11 - the next day Oh still sick all right let
00:13 - me just wait one more day
00:15 - oh my voice still sounds awful cuz I'm
00:17 - sick so yeah Here I am and I don't
00:19 - really want to go to the doctor
00:21 - because I'm not like dying or anything
00:24 - so I can't really justify getting
00:26 - medicine and shoot a bunch of crap up
00:28 - into my body just because I have a
00:30 - little cough but you know so there is 30
00:33 - seconds wasted about me talking about
00:35 - nothing fight that are related let's go
00:37 - ahead and get on with Python now so in
00:40 - this video let's go ahead and make a new
00:41 - Python file and what I'm gonna do is I'm
00:44 - gonna name it domain and this is gonna
00:47 - be a real quick video we're gonna write
00:49 - two quick functions and we're gonna make
00:51 - the functions responsible for extracting
00:53 - this domain name the new Boston com
00:56 - so the reason that we do this like I
00:59 - said is because whenever we're crawling
01:02 - some website and we come across a bunch
01:04 - of links most of them were gonna want to
01:06 - crawl but then whenever we come to links
01:08 - like this YouTube Facebook Twitter well
01:11 - if we add those to the waiting list then
01:13 - our spiders tries to curl those and of
01:16 - course we want to say hey only stick to
01:19 - links that are from this domain
01:21 - don't try to crawl the entire Internet
01:23 - so what we need to do is whenever we
01:26 - paste in the URL we also need to extract
01:29 - the domain it's actually pretty cool so
01:31 - from URL Lib dot parse import URL parse
01:39 - if I can URL parse so again Python
01:44 - already includes this cool little module
01:46 - for parsing URLs how awesome is that
01:49 - so let me explain what I'm gonna do
01:51 - first so this is the only part we care
01:56 - about this is called the network
01:57 - location this is the protocol HTTP these
02:01 - are just the files and directories over
02:03 - here this is the domain name the only
02:05 - part we care about now
02:07 - the thing about this is not all domain
02:09 - names are the same it's just not some
02:12 - bird and then Komori to you some have WW
02:15 - some have like mobile some have like
02:19 - male
02:20 - gov ny da lottery dot the New Boston
02:25 - comm dot whatever so the thing is that
02:29 - these domain names are a little bit
02:32 - weird so the first thing we're going to
02:34 - do is we're just going to get this
02:36 - entire network location so it doesn't
02:39 - matter if it is broken up into one five
02:42 - or my god I feel like shoot myself in
02:47 - the frickin face right now alright so it
02:50 - doesn't matter matter how many chunks is
02:51 - broken up into we're just gonna get the
02:53 - last two such as comm dot the new Boston
02:56 - and you guys are going to see alright so
02:58 - the first thing we're gonna do is I'm
03:00 - gonna make a potion called get sub
03:03 - domain name and this can be something
03:05 - like name dot example.com so usually it
03:10 - might just be like the new Boston calm
03:11 - but if it has more than one in it
03:13 - let me read something like a mail dot
03:17 - now keep that like this so again pretty
03:21 - much your entire network location no
03:23 - matter how many pieces there are so I'll
03:25 - say TIFF get some main name and we're
03:30 - just going to pass it in the URL and how
03:37 - do we do this well the first thing like
03:38 - I said we want to put it in a try except
03:41 - statement anytime we're working with
03:42 - networking or you know connecting to a
03:45 - server or anything like that
03:47 - we always want to put it in a try-catch
03:48 - so we're just gonna return URL parse
03:51 - which means we're gonna throw into your
03:53 - l right here it's gonna parse through it
03:56 - again this is built in Python
03:58 - functionality and we're just gonna
04:00 - return the net lock network location so
04:04 - that's all we do how easy is that now
04:07 - except we're just going to return blank
04:11 - because we have to return something the
04:12 - Colin function is going to expect a
04:15 - return value so we just can't right past
04:17 - here so we have to return that right
04:19 - there alright so like I said this is
04:22 - going to return the entire sub domain
04:23 - but we only want these last
04:26 - - so what we can do is we can
04:27 - essentially call this function break it
04:30 - up and say okay return the last one in
04:32 - the second to last one and then this is
04:34 - where we're going to use in our program
04:35 - so that little chunk of it so I'll say
04:38 - this get domain name and this is just
04:43 - going to be our last one so example.com
04:48 - can't type today can't type any day def
04:51 - get the main name and of course we're
04:56 - just going to throw in the URL right
04:57 - here and make it a little try except so
05:00 - try the results of this is get subdomain
05:06 - name
05:07 - throw in the URL so whenever we call
05:10 - this function is going to call this
05:11 - function and it's essentially gonna
05:14 - return something like this but what we
05:16 - need to do now is we need to actually go
05:18 - ahead and split this up into pieces so
05:21 - we're gonna make a list out of this item
05:23 - this item in this item now once we have
05:26 - that list we can just return the last
05:28 - two elements and that's going to give us
05:29 - our Rod domain name so in order to split
05:32 - it up that way you just for a split dot
05:37 - right here so whatever you type in here
05:38 - is the character that it's going to
05:40 - charge it up by and now results is a
05:42 - list of three elements named example com
05:45 - if your sub domain has four in it then
05:48 - you know same thing whatever so what do
05:51 - we want to return we just want to return
05:53 - results - - so the second-to-last item
05:57 - plus a period plus results minus one so
06:08 - actually I can test this right now
06:10 - am I getting a hair right here oh
06:13 - because I'm an idiot so accept return
06:19 - and let me just throw in any URL like
06:21 - this all right so I'll say print get
06:29 - domain name you know just pop that right
06:33 - in right there and now hopefully I ran
06:36 - this right all right
06:38 - so now you can see here
06:39 - the new boston.com now if you guys know
06:43 - how that worked then you can go on the
06:45 - next video but for those of you who
06:46 - don't let me talk you guys through it
06:47 - one last time what we did is we passed
06:50 - in this entire thing right in here and
06:53 - then the first thing it did is it called
06:55 - get sub domain name so it got all of
06:58 - this right here but it didn't matter if
07:00 - it was check this out mobile email that
07:03 - the new boston.com
07:04 - it would get all of this and then it'll
07:08 - get this second to the last which was
07:11 - this one in the last one which was this
07:14 - one and that's what it returned and of
07:16 - course you have to put a dot in the
07:18 - middle and that's why I had the dot in
07:21 - the middle right there so now every
07:23 - single URL we tests we're gonna make
07:24 - sure that it has the new boston.com in
07:26 - it if it does we are good to go so
07:28 - delete this line of code and yeah so
07:32 - I'll see you guys in the next video
07:33 - where my voice is going to sound
07:35 - probably even worse