00:00 - now what we want to do before we
00:01 - actually send the request to this
00:04 - username check file we want to check
00:06 - whether the username is equal to nothing
00:09 - or not so I'm gonna say if username
00:12 - doesn't equal nothing so I if there is
00:15 - some text inside there at least because
00:18 - we don't want to be sending nothing to
00:21 - the username check dot PHP because it
00:23 - would be a waste of resources
00:25 - so we pre check the username if it's
00:28 - equal to nothing if it is if it isn't
00:30 - equal to nothing that means it must be
00:32 - equal to something so we can go ahead
00:34 - and start calling username check dot PHP
00:36 - or sending some data to this file so we
00:40 - use the post HTTP request this is the
00:42 - basis of it however we're gonna supply
00:45 - three parameters to this the first
00:49 - parameter is going to be the file that
00:51 - we're checking inside of so this is PHP
00:54 - forward slash user name check PHP you'll
00:58 - see if you take a look at my directory
00:59 - structure I have keep all my PHP files
01:02 - inside this PHP directory so the DB PHP
01:05 - here and the username check file here in
01:09 - the root directory is index dot PHP and
01:11 - then in JavaScript we have this user's
01:14 - jeaious which we're currently
01:15 - modifying so we're searching while we're
01:19 - sending data to this file here and the
01:22 - data that we want to send is specified
01:24 - within curly brackets so we want to send
01:26 - a variable called username don't mistake
01:30 - this variable here for this one here
01:32 - we're sending a variable called username
01:35 - which will pick up in this file later
01:36 - and the value of this is username so
01:40 - this value here corresponds to this
01:42 - however this is the name of the variable
01:44 - that we're sending the last parameter we
01:47 - want to give is a callback function and
01:49 - this is going to take a parameter data
01:51 - now data is going to be the data that's
01:53 - returned from username check PHP so for
01:57 - example the username is available or not
01:59 - we're essentially going to echo out a
02:02 - value in this file which will then be
02:04 - returned to this data variable
02:07 - so we bring that down a bit just to make
02:09 - everything look a bit tidier okay so now
02:11 - what we want to do is before we put any
02:13 - content in here we want to focus on user
02:15 - name check PHP and the first thing we
02:18 - want to do is connect to our database so
02:20 - I'm going to outline some PHP tags and
02:22 - I'm going to use the MySQL connect
02:27 - function to connect my MySQL server and
02:30 - this is located on localhost with a user
02:33 - name of root and a password of nothing
02:36 - then we want to select the appropriate
02:39 - database
02:39 - in this case we are selecting the
02:41 - database called jQuery so we go ahead
02:43 - and type jQuery in there now we can
02:46 - leave this file alone now use the name
02:47 - check PHP will include this file so we
02:51 - can close that off
02:51 - so inside username check dot PHP we want
02:55 - to go ahead and include this file using
02:56 - require so we require DB PHP this is
03:00 - just going to make sure that this file
03:01 - does exist and our script doesn't
03:03 - continue if this file can't be found and
03:06 - obviously like I said if we were to say
03:08 - echo something back in here so for
03:10 - example username available this value
03:16 - here would then correspond to this it
03:18 - would be returned within this data
03:20 - variable here so this then would be
03:22 - inserted into the data variable or
03:24 - passed back to the data variable so
03:27 - whichever we echo out we might echo out
03:29 - username available or sorry that
03:32 - username is not available we can then
03:34 - apply to this span here and we do that
03:38 - by referencing or selecting the span
03:43 - which is username
03:45 - status and then we set the text of that
03:48 - to data
03:49 - so remember data is up here as well so
03:51 - that corresponds to that so now that we
03:54 - can do now that we've done that we can
03:55 - just go ahead and test this I'm just
03:57 - gonna echo test and when I come over to
04:00 - my page now what's going to happen is
04:02 - when I type something we get this test
04:05 - variable sent back as well as a flicker
04:08 - of a searching site asset text as well
04:13 - now we do have another problem when we
04:17 - revert back to the having nothing we
04:21 - still get this searching sign here so
04:23 - after our Ajax call here and after our
04:27 - if statement here now in actual fact
04:30 - sorry before this if statement here we
04:33 - want to know we want to include it as an
04:35 - else and the reason for this is if the
04:37 - user name does equal nothing we want to
04:40 - go ahead go ahead and put nothing into
04:42 - this username status span so user name
04:47 - status text and nothing in there and
04:50 - what that's going to do is we can type
04:52 - something we can have this value here
04:54 - return from our PHP file here but then
04:58 - if we revert back to nothing everything
05:01 - disappears so we want to make sure that
05:03 - we don't include any aesthetic errors in
05:05 - our code okay so now that we've done the
05:08 - users dot j/s this this is all ready to
05:11 - go and whatever is returned from
05:14 - username check will be place into the
05:17 - span just after this input field so
05:19 - essentially our our jQuery is working we
05:22 - now need to create the PHP file that
05:25 - will send this data back so the first
05:27 - thing we want to do is check if the
05:29 - username variable has been part to this
05:32 - file so remember I said that the
05:34 - variable is called user name and
05:36 - contains the value username up here so
05:39 - we use this variable name here in PHP to
05:42 - pick it up so it'll be dollar underscore
05:44 - post because we remember we're sending
05:46 - the value as post data or these values
05:49 - contained within here as post date