00:00 - alright guys welcome back and in this
00:02 - video I am going to teach you about
00:03 - arrow functions now before we do that I
00:07 - want to talk to you guys about a little
00:09 - story so a few months ago I was actually
00:12 - working on this awesome program and what
00:15 - this program did is it calculated the
00:17 - area of a circle now of course you know
00:20 - that the area of a circle is PI R
00:21 - squared so anytime you need to calculate
00:24 - it you just throw in the radius and then
00:26 - what you can do is you can multiply your
00:28 - radius squared by pi so I'm like ra bar
00:31 - PI on this is you put the 3.14 you know
00:35 - I don't want to add too many decimal
00:36 - places I want this thing is in accurate
00:39 - as possible and then any time you want
00:42 - to calculate it you just return PI x our
00:46 - R squared is just R times R so there you
00:49 - go
00:50 - boom roasted and let me test this baby
00:53 - by console.log and we'll just say seven
01:00 - for the radius and check it out so I did
01:04 - verify that whenever I wanted to
01:06 - calculate the area of a circle with
01:08 - radius seven that it was indeed 153
01:12 - point eight six now that was fantastic
01:15 - my program was working beautifully
01:16 - but then the new season of orange is the
01:19 - new black came out and I'm like ah right
01:21 - I got to make a couple more functions
01:23 - and I ain't got time to keep typing this
01:26 - keyword function because I gotta get to
01:28 - my Netflix you know so I wish that there
01:30 - was a easier way a quicker way to write
01:33 - these functions so I called up the CEO
01:35 - JavaScript and I'm like dude you got to
01:37 - make these functions faster too right
01:39 - he's like all right Bucky we'll get on
01:41 - it so what he did is he made a new kind
01:44 - of syntax and this is what the arrow
01:46 - function is it's basically a way that
01:48 - you could leave out the keyword function
01:51 - so instead what we can do is this so I'm
01:56 - going to keep this function just so you
01:57 - guys can see the difference but I'm
01:59 - going to name this one um let's call it
02:02 - let's call this one circle area one and
02:04 - we'll call this new one circle area two
02:08 - so of course your function needs a name
02:10 - so I'm going to set this equal to a
02:11 - variable called circle area
02:13 - - which is essentially the functions
02:15 - name and instead of writing the keyword
02:18 - function write equals and then throw
02:21 - your parameter right there never sin
02:23 - alright so where the heck is the
02:25 - function body this part well this comes
02:29 - after the arrow operator so this is
02:34 - actually pretty much the same syntax is
02:37 - this but instead of using the function
02:39 - keyword your parameters go right after
02:42 - the equal sign and then use a fat arrow
02:45 - and then you have your function body
02:48 - right here so you can actually do
02:51 - something like that
02:53 - pretty awesome a so just to show you
02:56 - guys that this is indeed the same let me
02:58 - go ahead and print out so quick area to
03:00 - and run this bad boy pretty awesome at
03:04 - so again all that arrow function is is
03:08 - essentially a way that you can write
03:11 - functions without using the keyword
03:13 - function it's just a little bit cleaner
03:15 - syntax now another thing that I want to
03:18 - point out is this with es6 you really
03:20 - should avoid using the keyword var
03:22 - whenever possible
03:23 - now we sum less tutorial that we have
03:26 - the keyword lip but PI it isn't a
03:29 - variable in the sense that we can change
03:30 - its value that we can manipulate it it's
03:33 - actually a constant now before we didn't
03:35 - have any way of making constants in
03:37 - JavaScript but now we do using the
03:39 - keyword Const in all this keyword does
03:43 - is whenever you're making a constant
03:45 - then you should do this because then it
03:47 - ensures that you can't accidentally
03:49 - assign another value so pi always equals
03:51 - 3.14 right it never changes so then
03:54 - later on if one of my programmers or one
03:57 - of my developers try to change this
03:58 - value you see that we would have error
04:00 - right here and the error would say
04:03 - attempt to assign to a constant variable
04:05 - so again anytime you want to have a
04:08 - variable that's value never changes go
04:12 - ahead and assign it using the Const
04:13 - keyword instead of let and this is just
04:16 - better syntax and actually boost
04:18 - performance a little bit too so there
04:20 - you go so this is the new fat arrow
04:23 - syntax and the recently call it fat
04:25 - arrow is because
04:27 - whenever I'm teaching tutorials you
04:29 - sometimes have this arrow operator which
04:31 - is minus greater than and a fat arrow is
04:34 - just what I call equals greater than and
04:36 - this is just me not even sure if that's
04:38 - the proper terminology but fat arrow
04:40 - there you go but now I'm looking at this
04:43 - and I'm like re so this is a little bit
04:45 - cleaner syntax definitely useful but
04:47 - what if there was an even easier way
04:50 - what if you could condense this even
04:53 - more well luckily I had the CEO of
04:56 - JavaScript on the phone anything's like
04:57 - Bucky you actually can so make a new
05:01 - function called circle area 3 and set
05:04 - this equal to this I'm just going to go
05:06 - ahead and type it and then I'm gonna
05:08 - explain it to you guys so before I
05:12 - actually show you guys what everything
05:14 - means let me just go ahead and run this
05:15 - and verify that whatever this crazy new
05:18 - syntax is it actually works all right so
05:21 - all of these little chunks of code they
05:24 - give us the same result calculate the
05:28 - area of a circle with the radius of
05:30 - seven now here's the thing you know that
05:33 - I said whenever you use this arrow
05:35 - operator then you pretty much write the
05:37 - name of your function set it equal to
05:40 - some um variable and then after you put
05:44 - your parameters and then after is the
05:46 - function body now this is the thing
05:49 - anytime you only have one parameter that
05:52 - you need to throw in you don't need to
05:55 - include these little parentheses all
05:58 - right so when when you only have one
06:00 - parameter you can just write the
06:02 - parameter right like here and my
06:04 - parameter is named R now the same goes
06:07 - for whenever you are returning a value
06:10 - directly and you don't need multiple
06:13 - statements so in this line of code we
06:15 - need this statement in this statement so
06:17 - we needed to break it up with curly
06:19 - braces however what we can do is we can
06:22 - actually return the value in one
06:26 - statement so this is essentially the
06:28 - same as writing return and surrounding
06:31 - the entire thing with curly braces but
06:34 - that's the thing this is um an even more
06:37 - shorthand way that whenever you're only
06:39 - used
06:39 - one parameter you can omit or leave out
06:41 - the parentheses and whenever you just
06:44 - have one return statement in no other
06:47 - statements or little bits of code in
06:50 - there then you can actually leave out
06:51 - the return keyword and the curly braces
06:54 - as well so if you guys see this syntax
06:57 - you now know what it means this is new
07:00 - es6
07:01 - syntax for writing functions called the
07:03 - arrow function pretty cool I'll see you
07:06 - guys next time