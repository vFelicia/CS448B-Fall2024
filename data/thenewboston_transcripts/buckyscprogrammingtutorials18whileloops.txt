00:00 - what is going on guys welcome to your
00:01 - 18th C++ tutorial and in this is rural
00:04 - I'm going to talk to you guys about a
00:06 - while loop and every saying alright
00:08 - Bucky take a step back I don't even know
00:10 - what a loop is and now you're trying to
00:11 - talk to me about special kind of loop
00:13 - alright let me step back a loop is
00:16 - basically in computer programming if you
00:19 - want to take a certain bit of code and
00:21 - run it over and over and over again you
00:24 - can go ahead and you can just type it on
00:26 - like a hundred different lines and no
00:27 - keep running or you can throw it in
00:30 - something called a loop and what a loop
00:33 - does it says alright write this code
00:35 - only one time and I'm going to run it as
00:38 - many times as you want me to so for
00:40 - example instead of say we wanted to
00:42 - print hello on the screen 100 times
00:44 - instead of writing C out hello on a
00:48 - hundred different lines we can only
00:50 - write it on one line and loop it a
00:52 - hundred times so it's a much easier way
00:54 - to make pieces of code around multiple
00:58 - times so let me show you guys an example
01:00 - and by the way now I can talk to you
01:03 - guys about a while loop there are many
01:05 - different types of loops a while loop is
01:07 - pretty much the most basic type of loop
01:10 - in my opinion it's the easiest so that's
01:12 - why I'm showing this to you guys first
01:13 - so let's go ahead and I'll show you guys
01:16 - an example go ahead and make a variable
01:18 - called bacon and set it equal to zero
01:20 - this syntax for a while loop is this
01:23 - we're going to say while and then in the
01:26 - parentheses right after we're going to
01:28 - give it a test
01:29 - just like the if statement we're going
01:30 - to test this bacon is less than or equal
01:34 - to five go ahead and run this bit of
01:37 - code over and over again so let's go
01:39 - ahead and just run C out armed bacon is
01:43 - and then now say the value of bacon and
01:47 - then end line so now if you were go
01:51 - ahead and run this you would say alright
01:53 - run it bacon to zero bacon to zero bacon
01:56 - to zero and you can see that it keeps
01:58 - printing it out over and over by now it
02:00 - probably printed it out like 20,000
02:01 - times so you're saying all right
02:04 - it's kind of useful I guess but would it
02:07 - be more useful if this loop would end
02:09 - for example if we only wanted to run it
02:12 - 20 times how would we go about doing
02:14 - that well sometimes people do want loops
02:18 - that never end but typically they don't
02:21 - typically you want to only have this
02:23 - code run like five times or ten times or
02:25 - 15 times so how do we control exactly
02:28 - how many times it runs well in order to
02:30 - do that we usually add a line of code
02:32 - like this again what this test is going
02:35 - to do is test is bacon less than or
02:38 - equal to 5 and since the value is 0
02:41 - right now this test is always going to
02:43 - be true so in order to make this test
02:45 - false in this loop to stop running we
02:48 - need to change the value of bacon at
02:50 - some point so it is equal to 5 or
02:53 - greater than 5 and in order to do that
02:55 - go ahead and make bacon equals bacon
02:59 - plus 1 now each time we run gloop is
03:02 - going to go ahead and do its thing right
03:04 - here and then when it's done it's going
03:07 - to add 1 to the value of bacon so the
03:10 - first time it runs it's going to be 0
03:12 - and then it's going to add 1 to it so
03:14 - then it's going to be 1 then it's going
03:16 - to be 2 3 4 5 and by the time it gets to
03:20 - 5 it's going to change it to 6 and not
03:22 - run so let me go ahead and show you guys
03:25 - making 0 1 2 3 4 5 so we already know
03:31 - why bacon rain in this case when bacon
03:34 - was equal to 0 it was less than or equal
03:36 - to 5 1 yup - yup 3 4 5 is 5 less than or
03:42 - equal to 5
03:42 - yep so it printed that out but then
03:45 - whenever it said all right the value of
03:47 - bacon is 5 so I'm going to print out
03:49 - bacon is 5 and then I'm going to add 1
03:53 - to bacon so now bacon equals 6 all right
03:56 - let's try this loop again
03:57 - is 6 less than or equal to 5 no finally
04:01 - the test is false so I can quit running
04:04 - my dumb loop so that is how you add
04:07 - um again like I said and when okay take
04:12 - a take a breath Bucky you're jumping too
04:14 - fast sometimes people want loops to run
04:17 - forever and when they do you do
04:18 - something like the first example I told
04:20 - you but typically and I want to say like
04:23 - 95% of the time people build loops that
04:26 - they only want to run a certain amount
04:28 - of times for example five times if you
04:31 - only wanted to run at five times or
04:33 - actually it was six in this case you
04:35 - would add something called this line
04:37 - right here and this pretty much just
04:39 - changes the value of bacon so at some
04:42 - point that test has to be false if you
04:44 - wanted to run it 20 times
04:46 - you would go ahead and just change that
04:48 - to 20 and check it out bacon is 1 2 3 4
04:51 - 5 all the way to 20 pretty cool huh
04:54 - so you can change how often your loop
04:56 - runs by a couple things it's starting
04:59 - point it's ending point or how much you
05:03 - increment that value by again you can
05:05 - add 3 to each time if you want and then
05:07 - you get something like this one at 3 2 4
05:11 - 7 10 13 16 19 and when you added 3 to
05:16 - that and it was 22
05:18 - well 22 is indeed not less than or equal
05:21 - to 20 so that's when it stopped the loop
05:24 - so that is the basics of a while loop
05:26 - again all the while loop does is take a
05:29 - certain bit of code and runs it over and
05:31 - over and over again until the test is
05:34 - false and again like I said at the very
05:36 - beginning of this tutorial there are
05:38 - many different loops that allow you to
05:40 - take a bit of code and run it over and
05:42 - over and over again a while loop is
05:44 - pretty much just the most basic kind so
05:47 - make sure whenever building your while
05:48 - loops not to forget to change that value
05:50 - or loops going to run forever and who
05:52 - wants that so for now thank you guys for
05:54 - watching I'm actually going to go make
05:57 - some bacon right now so you guys sit
05:59 - tight re-watch this story and once
06:01 - you're good once you understand the
06:02 - syntax of how a while loop works you're
06:04 - ready to move on to my next video so
06:06 - again thank you don't forget to
06:07 - subscribe and I'll see in the next video