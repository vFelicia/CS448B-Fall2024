00:00 - hi this is Alex from PHP academy' org
00:03 - and this is a video tutorial for the new
00:05 - Boston now in the last tutorial we
00:07 - looked at the get and post HTTP requests
00:11 - in jQuery now there's a few additional
00:14 - things you can do to actually create a
00:17 - better working and you know more flowing
00:23 - script I guess okay so we have some cool
00:27 - back functions additional callback
00:29 - functions that we can append onto the
00:32 - end of our request so we have our post I
00:35 - poke dollar sign post here so we have
00:38 - our HTTP request in place now what
00:41 - happens if we receive an error now if we
00:44 - receive an error in this at all for any
00:48 - reason for example reverse doesn't exist
00:50 - or you know something's gone wrong
00:52 - we can actually bind onto the end some
00:58 - checks now we have three checks that we
01:01 - can complete and that is success
01:03 - complete and error so for example let's
01:06 - go ahead and try error I'm just going to
01:08 - use at the end of this here you'll
01:12 - notice that it starts here where my text
01:16 - editor is highlighted it read and ends
01:18 - here so this is really after the post
01:21 - initial post request we can set another
01:24 - callback function so function again we
01:28 - create a function inside of here and
01:31 - then we have some curly brackets I'm
01:33 - going to bring this down and if there is
01:35 - an error I'm just gonna alert to the
01:37 - user an error so an error
01:44 - occurred okay so you don't obviously
01:47 - don't have to have an alert you can do
01:48 - absolutely anything with this you could
01:51 - put some data into this feedback just
01:53 - say error occurred in fact other thing
01:55 - we'd probably do that now that's
01:56 - probably better feedback dot text an
02:02 - error occurred okay so if we have an
02:06 - error we are using a callback function
02:09 - to put the text an error occurred inside
02:11 - the feedback div so let's go ahead and
02:13 - test our script again Alec says hello
02:17 - that would just be Alex s hello now what
02:20 - happens if for example our file doesn't
02:22 - exist well let's go ahead and rename it
02:24 - let's go over to PHP remember our file
02:28 - is called reverse PHP that we've called
02:30 - just here so let's go ahead and rename
02:32 - that to reverse one dot PHP okay so
02:36 - let's go ahead into our browser let's
02:38 - press Enter let's go ahead and type my
02:40 - name and a little message again we click
02:44 - go now we get an error has occurred
02:47 - error message being returned to us the
02:49 - reason that there's an error is because
02:50 - this file doesn't exist and this error
02:53 - will be fed back for a variety of other
02:56 - reasons as well depending
02:59 - okay so let's rename our file back the
03:03 - way it was and I'm gonna go through some
03:08 - other you know callback functions we can
03:12 - use so we also have dot complete and
03:19 - this is a callback function to run when
03:21 - the request is complete so let's go
03:24 - ahead and for this we'll just alert in
03:27 - fact we'll create another div just under
03:30 - this one
03:34 - and we'll call this messages okay so
03:39 - back into Ajax j/s will put this here as
03:42 - messages so if there's an error we have
03:44 - a request a some text going to there now
03:50 - if the function or if the post request
03:52 - is complete we can again put a message
03:55 - into messages so dot text request
04:04 - complete okay so now let's go ahead and
04:07 - press refresh have Alex and hello click
04:13 - go request complete and Alex says hello
04:16 - so now that's telling us that the
04:18 - request is complete okay we also have
04:21 - dot success now this is only run if the
04:27 - current operation is successful now if
04:30 - we look at the difference here we could
04:32 - say get rid of that now and go ahead and
04:35 - rename our PHP file again so let's go
04:39 - ahead into our PHP directory and go
04:41 - ahead and rename reverse ok I'm also
04:46 - going to use this and say append rather
04:49 - than text that just makes it easier to
04:51 - see each request in total so let's go
04:55 - ahead and run this
05:01 - and click go okay so you'll notice that
05:04 - we have a request complete but we also
05:07 - have an error occurred now that's the
05:10 - difference between complete and the
05:12 - success callback which we're going to
05:14 - write in a moment successful only
05:16 - success will only be returned if the if
05:20 - the operation is obviously a success if
05:23 - everything's gone to plan and we've
05:25 - returned some data in the file exists
05:28 - bla bla bla complete will always happen
05:30 - as long as this post request this HTTP
05:34 - request has been completed so we can go
05:36 - ahead and we can add on a success
05:39 - callback function as well so inside here
05:42 - we create a function and we pull that
05:44 - down and we can go ahead and copy and
05:46 - paste this into here and this will be
05:50 - messages dot append requests successful
05:57 - okay so now when we return here and we
06:01 - click go again you'll see that we have
06:04 - is appended it on but we have an error
06:06 - occurred and requests complete however
06:08 - we don't have a success message so now
06:11 - let's go ahead and go back to our PHP
06:13 - directory rename are far back again so
06:17 - we have the the correct file being
06:21 - called now the callback functions that
06:26 - will be returned our request complete
06:28 - and request successful we don't have an
06:31 - error the request remember always
06:33 - completes well almost always completes
06:36 - and the request will be successful
06:39 - because we already know it works so
06:41 - let's go ahead and test out and we'll
06:43 - see them two messages appear okay so
06:48 - we've got risk request successful and
06:50 - request complete so why is this useful
06:53 - well if we have an error for example we
06:56 - might want to log this error we might
06:58 - want to go on and display a message to
07:01 - the user to say there was an error
07:03 - retrieving your account information an
07:05 - excellent example is Twitter
07:08 - twitter has a system in place that when
07:11 - the loading point is taken to
07:13 - it tells you that tweets are taking too
07:16 - long to load so this wouldn't really
07:20 - have anything to do with the error part
07:22 - of this but it does give a good example
07:25 - of how if there is an error for example
07:27 - if you know something wrong was returned
07:30 - or if the file didn't exist you can
07:32 - alert the user rather than nothing
07:34 - happening or displaying them with a long
07:37 - error inside of the page okay so these
07:40 - are the callback functions that you can
07:42 - use on either the post or the get HTTP
07:46 - request in jQuery