00:01 - hello YouTube Sam here from youtube.com/
00:03 - onli gamer for the New Boston and in
00:06 - this tutorial we're going to be talking
00:08 - about recursion now what recursion is is
00:11 - is it's basically a sub or a function
00:14 - calling itself over and over again so
00:17 - let's go ahead and make a little demo
00:19 - application for this we will create a
00:22 - new project select Windows forms
00:24 - application and we will call it
00:27 - recursion we'll wait for that to load
00:30 - okay so once it's open let's go ahead
00:32 - and make the form a little bit
00:38 - smaller and we will come into our tool
00:40 - box and we'll add a
00:42 - button and a text
00:48 - box okay so we'll set the text of button
00:51 - one to
00:55 - recursion and we'll set the name to
00:59 - button cursion okay so let's go ahead
01:03 - and we'll double click on that to open
01:04 - up our form one class and the event
01:07 - handler uh The Click event handler for
01:09 - button recursion let's go ahead and come
01:11 - below this and create a function so
01:13 - private function and we will just call
01:16 - it recursive
01:19 - function and for our
01:21 - arguments we will take an integer
01:24 - so argint as integer and we want to
01:29 - return a a double just in case we get a
01:32 - a decimal value so now let's go ahead
01:35 - and create an if statement so if
01:39 - argint is less than or equal to 10 then
01:42 - let's go ahead and return
01:46 - argint now else
01:50 - if our int is greater than
01:54 - 10 then let's go ahead and call this
01:57 - function again so we will
02:01 - turn recursive
02:04 - function and then AR int and this time
02:07 - let's divide it by two so that we get
02:09 - different values each time because if we
02:11 - just kept passing ARG into it it would
02:13 - keep calling itself over and over and
02:15 - over and it would never in so we're
02:17 - we're going to return that and divide it
02:18 - by two it's going to keep doing that
02:20 - until it is less than or equal to 10 and
02:23 - then it's going to return the original
02:25 - integer not the original one the one
02:27 - that was passed to the last uh occurr
02:29 - into the
02:30 - function so now let's go ahead and
02:33 - whenever they click on the button let's
02:34 - output uh what the function sent back so
02:39 - we'll just type messagebox
02:41 - doow and let's go ahead and
02:44 - show
02:46 - um recursive
02:49 - function and then we want to convert so
02:52 - convert. to
02:54 - in32 and we want to use what's in
02:57 - textbox one. text
03:01 - so this is all one statement right here
03:05 - we're calling recursive function and the
03:06 - argument that we're passing to it is the
03:09 - stuff in textbox one. text and it's
03:11 - converted to an
03:13 - integer so let's go ahead and add one
03:15 - more parenthesis to finish this
03:22 - off and let's go ahead and run this and
03:24 - see what we
03:27 - get let's see here
03:38 - okay so here's our form let's go ahead
03:41 - and type 10 in here and when we click
03:44 - recursion we get 10 back because if it's
03:46 - less than or equal to 10 it's just going
03:48 - to give us back the original integer so
03:50 - we'll do
03:51 - four and it gives us four now let's go
03:54 - ahead and do 20 now before I click
03:56 - recursion let's try and figure out what
03:57 - this is going to do so since it's
03:59 - greater than 10 it's going to call
04:01 - itself again and it's going to do 20 / 2
04:04 - so we should get the value 10 now let's
04:07 - go ahead and do this with 30 so it's
04:11 - going to do 30 ID 2 which is 15 then
04:13 - it's going to call itself again and it's
04:15 - we're going to get um 7 and a half or
04:19 - eight it rounds it automatically rounds
04:21 - up to eight because we're using an
04:23 - integer in here let's go ahead and do
04:25 - this with the larger number let's do
04:28 - 246 and if we click recursion we get
04:30 - eight back because it keeps dividing by
04:32 - two until it is less than yeah until it
04:35 - is less than or equal to 10 so let's do
04:40 - 300 and you can see that we get 10
04:43 - back so now I'll show you guys what will
04:45 - happen if you don't have a way for your
04:48 - uh recursive function or sub to exit so
04:51 - if we just keep doing this it's going to
04:53 - create an infinite Loop and it's never
04:55 - going to stop recalling itself so we'll
04:58 - just do 23
05:00 - and you can see that the program freezes
05:02 - up because we've created an infinite
05:05 - Loop and we'll go ahead we'll go ahead
05:07 - and have to stop it right there so make
05:11 - sure that when you're using recursion
05:14 - you always want to have a way for your
05:16 - function or your sub to exit or else
05:18 - you'll make you'll create Loops that are
05:19 - infinite and it will crash your program
05:22 - so thanks for watching guys um practice
05:25 - a little bit with recursion and then
05:26 - once you got that down I know it's kind
05:28 - of a hard concept to grasp but once
05:30 - you've got that down go ahead and move
05:31 - on to the next tutorial