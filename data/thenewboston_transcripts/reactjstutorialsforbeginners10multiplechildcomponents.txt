00:00 - all righty houses welcome back and in
00:02 - this video what I want to do is I want
00:04 - to show you guys how to properly use
00:06 - multiple child elements so right now up
00:10 - to this point we've been developing this
00:12 - program where we can kind of edit
00:14 - comments and we're going to be able to
00:16 - remove comments and we can kind of keep
00:18 - going with the you know techniques that
00:20 - we've been using but I'm going to tell
00:22 - you guys right now in a few tutorials
00:24 - we're going to run into a problem and
00:26 - that's this what happens whenever we
00:29 - want to do stuff like rearrange these
00:31 - notes put them in a different order what
00:33 - happens when we want to just have more
00:35 - control over them well this is the thing
00:38 - right now we have a bunch of independent
00:40 - comments this is a comment this is a
00:42 - comment and this is a comment now even
00:45 - though we can set properties and states
00:47 - on them we learned all about that they
00:49 - still are independent in other words
00:51 - they don't know about each other so this
00:53 - comment hi my name is Bucky it doesn't
00:56 - even know that this comment exists
00:57 - there's no way that they're connected so
01:00 - whenever we try to do stuff like
01:02 - rearrange these since they don't have an
01:05 - idea of each other's existence it's
01:07 - going to be really difficult for them to
01:08 - change order they only exist in their
01:10 - own universe so in order to have more
01:14 - control over them as a whole instead of
01:17 - just individual comments we need to
01:19 - pretty much surround it in a parent
01:21 - container or just think of it like a
01:24 - manager where you can kind of manage all
01:26 - the pieces so what I'm going to do is
01:29 - I'm actually going to set up a board
01:30 - component and you can think of the board
01:32 - component as this blue surrounding
01:36 - container right here now this board
01:38 - component is going to be made up of all
01:40 - of these comments and since we set it up
01:43 - that way it's going to be aware of every
01:46 - single one and it can move them around
01:47 - change your order delete them remove
01:49 - them and it's a much better system than
01:52 - just having a bunch of Standalone
01:54 - objects so let's go ahead and do that
01:56 - and in order to make another
01:58 - component let me just minimize that so
02:00 - it's a little bit easier to see so
02:02 - here's my comments right here you can
02:04 - make as many comments as you want and
02:06 - I'm only going to make one called board
02:09 - so I'm going to have one board and we
02:12 - can stick you know a dozen comments in
02:14 - there uh three however many we want so
02:17 - in order to make a new board just call
02:19 - react create
02:21 - [Music]
02:23 - class stick this as object now this is
02:26 - another thing that I'm going to do I'm
02:29 - actually going to have an array in here
02:31 - and this array is essentially going to
02:33 - be equal to each comment so again in
02:36 - this board we're pretty much going to be
02:39 - able to reference each individual
02:41 - comment and manage them all in that kind
02:43 - of way so let me just write get initial
02:47 - State make sure I write that correctly
02:50 - and this is going to be a function and
02:52 - again all this is going to do is it's
02:54 - going to return an array of
02:58 - comments
03:00 - so again you can have as many states as
03:02 - you want but I'm only going to be you
03:04 - know making a really simple example so
03:05 - there I go and let me just add three
03:08 - different comments so I'll say I like
03:11 - bacon um want
03:16 - to want to get ice
03:20 - cream why do I always think about food I
03:22 - think something's wrong with me and I'll
03:24 - say uh okay we have enough comments
03:28 - now
03:30 - all right so our initial state is
03:34 - essentially just an array with three
03:37 - strings of
03:38 - text so remember whenever we actually
03:41 - make a comment component all we do is we
03:44 - just use comment and then we put a
03:46 - string of text right here so it's going
03:47 - to be really easy so now let's go ahead
03:51 - and actually make those now whenever we
03:54 - make it remember we have to use the
03:56 - render function so the render function
04:00 - and again if you have multiple functions
04:02 - you need to separate them with the comma
04:04 - this is going to be responsible for
04:06 - returning whatever HML that we want to
04:09 - draw so the first thing I'm going to do
04:11 - is since this is on multiple lines
04:13 - surrounded with parenthesis is I'm going
04:15 - to make a div that's going to represent
04:17 - this entire board and actually what I
04:19 - can do is actually just take
04:21 - this and copy it right here so this is
04:25 - the HTML that it's going to return and
04:27 - now whenever I render
04:29 - [Music]
04:30 - I just have to write board like that and
04:33 - it returns this so the class name is
04:37 - board and instead of just having these
04:40 - comments I actually want to make
04:41 - comments based on this array so I pretty
04:44 - much have to take this array Loop
04:46 - through it and for each item in it I
04:49 - want to stick it inside a comment right
04:52 - like here
04:53 - so I'll delete this I'll do it the long
04:56 - way all right so what I'm going to do is
04:59 - is in order to do that in JavaScript if
05:01 - you aren't familiar with mapping we
05:03 - first need to reference to this comments
05:05 - array now remember it's a state it's not
05:07 - a property and the reason it's a state
05:10 - is because it's going to change so this
05:14 - state and then you write the name of it
05:16 - which
05:17 - is comments and then what we can do with
05:20 - JavaScript is we can actually call a
05:22 - function called map now whenever you use
05:25 - map what you can do is you can throw in
05:27 - a function in here and it will call it
05:29 - for each element in the array so
05:32 - whatever function we write right
05:34 - here um it's going to call it on this
05:37 - one and then this one and then this one
05:41 - now the arguments for this function or
05:43 - parameters are item I
05:48 - so again like I said this map function
05:50 - is going to take this array and it's
05:52 - going to Loop through it and for each
05:54 - item it's going to treat the
05:57 - text as item and I I can actually change
06:01 - that to text that might be a little bit
06:02 - easier and for the counter it's going to
06:05 - be equal to I so zero then one then two
06:07 - then three then four tomato tomato so
06:10 - for each of these iterations what I want
06:13 - to do is just create a new comment so I
06:15 - just want to
06:17 - return and
06:20 - remember sure I got that capitalized
06:24 - comments
06:25 - comment now whenever we make a comment
06:28 - All We Do
06:30 - is we add the text in between and now
06:33 - we're good to go so this is going to
06:36 - work just fine however here is the one
06:39 - issue that we have right now we're just
06:41 - creating a bunch of comments but we
06:44 - still don't have any really unique way
06:46 - to identify each one the reason that we
06:49 - set up this new kind of Architecture is
06:51 - because we wanted this board to kind of
06:53 - be a manager for all of the comments so
06:56 - in order to have control over these
06:58 - comments we need to give them a unique
07:00 - identifier now the main way that you
07:03 - kind of do this is you actually use a
07:05 - key so in react a key is a way that you
07:08 - can uniquely identify each child and you
07:12 - can actually give it an ID or ID number
07:14 - or whatever you want but this is kind of
07:16 - the standard way and we'll take a look
07:17 - at a couple tricky things later but for
07:20 - right now there you go so again we made
07:23 - a
07:23 - board and all this board did it is it
07:26 - took an array and for each item in the
07:28 - array it generated a comment so now this
07:32 - board it actually owns all of these
07:35 - comments pretty cool huh so now if I
07:38 - refresh
07:39 - this we can see I like bacon want to get
07:42 - ice cream okay we have comments now I
07:44 - like bacon want to get ice cream okay we
07:47 - have comments now so essentially it's
07:50 - the exact same result as before but now
07:54 - even though the user doesn't really
07:55 - realize it we now have a lot more
07:57 - control over the items
08:00 - or comments in our program