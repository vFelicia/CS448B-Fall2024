00:01 - hello YouTube Sam here from youtube.com/
00:04 - onli gamer for the New Boston and in
00:06 - this tutorial we're going to be covering
00:08 - functions now functions are very similar
00:10 - to Subs except there's one main
00:13 - difference functions return a value and
00:16 - what this means is when you call that
00:18 - function it's going to give you a value
00:20 - back and you can set this value to um
00:24 - anything that you would like uh we're
00:26 - going to be using some of the primitive
00:28 - data types for our function in this
00:30 - tutorial so let's go ahead and get
00:31 - started and make a little demo
00:33 - application so go ahead and click new
00:37 - project I'll resize this here Windows
00:40 - forms application and we will call it
00:44 - functions and go ahead and click okay
00:46 - and we'll wait for that to
00:48 - load okay so we're going to open up our
00:50 - toolbox
00:52 - here and we're going to find the
00:56 - button now I'll just add the button to
00:58 - the to our form
01:00 - we'll set the text to run
01:05 - function we'll go ahead and scroll up
01:07 - and we'll set the name to button run
01:13 - function okay so now that we've got that
01:16 - done we're going to go ahead and double
01:17 - click on run and you can see it opens up
01:20 - our event handler for button run
01:22 - function click and we're going to go
01:24 - ahead and make a function so we're going
01:27 - to come down here below our private sub
01:30 - button run function click and what we're
01:33 - going to do is we're going to create a
01:38 - function so just like a sub we're going
01:41 - to start out with either the private
01:43 - keyword or the public keyword now since
01:45 - we don't want another class to access
01:46 - this we're going to call it private and
01:49 - then we're going to use the keyword
01:53 - function and then we'll just name this
01:55 - solve math we will add empty parameters
01:59 - and now after this you have to specify a
02:02 - type for your function now since all
02:04 - functions return a value they have to
02:06 - return a certain kind of value so what
02:08 - we're going to do is use the as
02:11 - keyword and we will just use double so
02:15 - what this means is that our function
02:17 - solve math is going to return a double
02:20 - and then we've got in function here and
02:22 - you can see that we get a warning and it
02:24 - says function solve math doesn't return
02:26 - a value on all codes code paths so what
02:29 - we have to do is we have to return a
02:31 - value so what we'll do is we'll just
02:34 - return 20 uh 13 ided
02:39 - 5 so what this is going to do is it's
02:42 - going to take 13 ID 5 and give that back
02:45 - to the person who called that what we
02:47 - can also do is create a couple variables
02:50 - so we'll just do num one as integer and
02:54 - we will set it equal to um
02:57 - 23 and then we can declare num two as
03:01 - integer and set that one equal to five
03:04 - and then what we can do is instead of
03:06 - returning 13 / 5 which will give us an
03:08 - answer something like uh 2 point
03:11 - something we can just do num one / by
03:16 - num two now if you wanted to you could
03:19 - also create another variable that was
03:21 - called answer and set answer equal to
03:23 - num1 divid num two and then return
03:25 - answer but we don't really need to do
03:28 - that so we're just going to return num1
03:29 - divided by num two and since there's a
03:32 - possibility that we're going to get a
03:34 - decimal number by dividing we're going
03:36 - to go what we did was we declared our
03:39 - function solve math as a double so now
03:42 - if we go ahead and come up here to
03:44 - button run function click we can go
03:46 - ahead and type messagebox
03:50 - doow and then what we can do is we can
03:53 - call solve math so what this is going to
03:56 - do is it's going to print out the number
03:59 - that that is returned from solve math
04:01 - inside of our message
04:03 - box and now if we go ahead and run
04:07 - this we can click run and you can see it
04:10 - gives us
04:12 - 4.6 now instead of just displaying this
04:15 - inside of message box what if we want to
04:17 - save that value for later so let's come
04:19 - up here and we'll create a variable so
04:21 - dim answer as double and we will set it
04:26 - equal to solve math which is going to
04:29 - get the math path 23 / 5 and then we can
04:32 - just print
04:33 - out
04:35 - answer and if we go ahead and run this
04:38 - it's going to work exactly the same we
04:40 - click run and we get
04:43 - 4.6 now with functions you can have a
04:46 - function that is a double an integer a
04:48 - string a character a boine whatever you
04:51 - want so go ahead and make a couple
04:54 - functions um test them out and once you
04:57 - got that down go ahead and move on to
04:59 - the next
05:00 - tutorial okay so as I was saying go
05:03 - ahead and make a couple functions and uh
05:05 - practice that and then once you got that
05:07 - down move on to the next tutorial and um
05:09 - in the next tutorial we're going to be
05:11 - talking about passing values to
05:13 - functions so that you can use values
05:16 - outside of that function uh which is U
05:19 - very useful and you're going to be doing
05:20 - this with mostly all of your functions
05:22 - so um thanks for watching guys and stay
05:24 - tuned for the next tutorial