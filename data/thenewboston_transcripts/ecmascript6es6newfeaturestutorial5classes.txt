00:00 - all righty mate so this is one of the
00:03 - tutorials that I am most excited to
00:05 - teach you guys about and that is the new
00:07 - class syntax with es6 because I had a
00:11 - real problem with classes and you know
00:13 - the traditional version is the
00:14 - JavaScript it's like if I want to create
00:16 - a class I know how to do it I'm just
00:18 - going to use the class keyword write the
00:20 - name of the class then I have
00:22 - constructor tomato tomato it's simple
00:24 - but JavaScript no have to make it so
00:27 - confusing have to make functions and
00:29 - prototypes and god forbid even try to
00:32 - use inheritance because get ready to
00:34 - pull your hair out well now with es6 it
00:37 - changes all that it allows you to make
00:40 - classes pretty much like you should have
00:42 - been able to since the beginning so
00:44 - let's say that I want to make a new
00:45 - person class so all I have to do is
00:48 - write class person and of course
00:51 - whenever I create a person the instant
00:53 - that I create them I want to give them
00:54 - some initial values I want to be able to
00:56 - give them a name maybe an age and maybe
00:59 - a weight I don't know maybe this is like
01:01 - for a doctor's office where you have to
01:02 - like store their weight who knows so I
01:07 - thought that was going to pop up but
01:08 - basically anytime you want to do that
01:11 - you have to make a constructor and you
01:13 - just call it constructor easy enough so
01:15 - now any values or attributes that you
01:18 - want to initially set you just pass in
01:20 - some name age weight boomer Elstad now
01:25 - of course you want to make these
01:26 - attributes specific to this object so
01:29 - thankfully we can use the keyword this
01:32 - now whenever we hit something like this
01:34 - name equals name then what this means is
01:37 - whatever name we passed in is equal to
01:40 - this object's name and of course what
01:44 - this allows is for you to be able to
01:46 - create multiple different people and
01:48 - they each have their own name so Bucky
01:50 - can have his name we can create another
01:53 - person called Sally she could have her
01:55 - name so on and so forth so this would be
01:57 - something like this age equals age and
02:00 - this weight equals weight so later on
02:06 - I'm going to show you guys how to create
02:08 - multiple objects in they each have their
02:10 - own set of properties and that brings me
02:12 - to another point
02:13 - people ask me a lot when do you use
02:16 - classes and when do you just create a
02:19 - bunch of you know standalone functions
02:21 - you're going to create a class whenever
02:23 - you have a bit of code that you need to
02:26 - be self aware so I always have like
02:29 - helper functions like to write a file
02:32 - parse JSON do whatever whenever I use
02:35 - those they're pretty much just a little
02:37 - snippets of code that run and then
02:39 - they're done I don't need them to
02:41 - remember anything or do anything special
02:43 - now whenever I create a person object
02:48 - then this person or this little bit of
02:50 - code it's going to need to remember its
02:52 - name it's going to need to remember its
02:53 - age it's going to have some bit of
02:55 - memory that it needs to be aware of so
02:58 - that is when you write a class versus
03:01 - just a bunch of functions whenever you
03:03 - need a bit of code to be self aware or
03:04 - remember something stick it inside a
03:06 - class also if you just have a bunch of
03:08 - similar code and you want to group it
03:10 - and make it a class but there you go
03:12 - all right so instead of just making a
03:15 - constructor in here you can also have
03:18 - methods so I'll say display weights and
03:22 - this is just method that displays the
03:24 - person's weight so I'll just say
03:26 - console.log um I'll just say this weight
03:30 - so again whenever we create methods
03:36 - inside here we have access to the
03:38 - objects attributes so we can just log
03:42 - out this object's weight and it's going
03:44 - to print out their weight right there so
03:46 - with that being said let me go ahead and
03:48 - create a few objects I'll make one
03:49 - called Bucky and this is going to be
03:51 - equal to a new person object and of
03:55 - course it takes three parameters the
04:00 - name the age in the weight so the name
04:02 - is going to be Bucky how old am i 87 and
04:06 - how much do I weigh so centering six
04:10 - thousand six hundred and fifty pounds
04:11 - all right beautiful night now anytime I
04:14 - want to print out my weight I just call
04:18 - the object we only have one which is
04:20 - Bucky and then display weight and boom
04:23 - look at that now again like I was saying
04:27 - we can also do is we can create another
04:29 - object named Sally that is an object
04:32 - from the same class the same template of
04:35 - course Sally she's my girlfriend in case
04:39 - you guys never heard verse she's
04:41 - actually 21 years old and she owning
04:42 - lace 89 pounds what I yeah she's pretty
04:45 - cool I guess sometimes you get in the
04:46 - movies and whatever but anyways anytime
04:50 - I want to display Sally's weight then
04:52 - all I have to do is something like that
04:54 - boom roasted there you go so I'm not
04:57 - going to go in too many details about
04:58 - how to work with classes because I'm
05:00 - assuming that as programmers you guys
05:03 - already know um es6 just makes it a lot
05:06 - easier to use classes and create objects
05:08 - and makes the entire syntax a whole lot
05:11 - cleaner so yeah thanks for watching and
05:13 - in the next video I'll show you guys how
05:15 - to use inheritance with es6