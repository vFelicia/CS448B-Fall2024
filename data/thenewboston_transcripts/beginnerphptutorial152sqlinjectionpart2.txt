00:00 - the data from here is going to be
00:02 - substituted in so it will look now like
00:04 - this what we can then do so the the data
00:11 - has been substituting through these
00:12 - variables what we can then do is we we
00:14 - run this query and it returns I see the
00:17 - 0 rows or 1 row depending on if the
00:19 - username in the password match so
00:21 - hopefully you understand that at this
00:23 - point now what happens if the user was
00:26 - to enter some some values that actually
00:31 - modify our SQL query which is here so
00:35 - for example let's say the username was
00:38 - inverted a sorry single quotation mark
00:42 - equals no sorry in single quotation mark
00:48 - or two quotation marks equals quotation
00:53 - mark let's just say the user entered
00:54 - that as the as the username and they did
00:59 - the same for the password so because
01:02 - they're free to enter anything in the
01:03 - form we've picked up these variables
01:05 - using this and now we're transferring
01:08 - these variables into here so now
01:10 - username let's just copy it and copy
01:12 - over them pet copy and paste over I mean
01:15 - that's our there and copy and paste that
01:19 - over to there now let's get rid of this
01:23 - because that just showed us and the
01:25 - example so the username is now equal to
01:28 - this value here and the password is also
01:31 - equal to this value in below so let's
01:33 - just look at the highlighted value in
01:35 - blue well this is actually done if I
01:37 - take the blue away you can see it's
01:39 - modified our SQL statement so obviously
01:43 - our users of our website can't see what
01:45 - we're processing inside of PHP but what
01:48 - they can do is fiddle around with the
01:50 - website until they can make a very good
01:51 - guess or an exact guess how our SQL
01:54 - statement is structured now what this
01:57 - query reads is select ID from users
02:00 - where username equals nothing or nothing
02:04 - equals nothing and password equals
02:06 - nothing or nothing equals nothing
02:09 - now nothing equals nothing so that's
02:11 - true
02:12 - and nothing equals nothing so that's
02:14 - true therefore what we're doing is we're
02:16 - returning a row or a couple of rows so
02:20 - let's copy and paste this into our
02:23 - database to see what results we get
02:27 - let's click go okay so we've been
02:31 - returned with our two rows in our
02:35 - database or our two records rather so
02:39 - what we've actually done is just by user
02:41 - input and me demonstrating user input
02:43 - we're going to actually create the
02:45 - application later what we've done is
02:47 - we've returned two rows now so we've
02:50 - entered the password as this as this sum
02:54 - let's just go back to it we've entered
02:57 - the password as this here or the
02:58 - username is this here and the password
03:00 - is this here and we've now automatically
03:03 - gained access to this whatever
03:06 - registration system however we're
03:08 - creating it so this isn't always the
03:09 - case it depends on how its programmed
03:11 - this is why we're going to go through an
03:13 - example program so that's just basically
03:15 - a bit about PHP or SQL injection in
03:18 - general but with PHP obviously it's the
03:21 - same as same vulnerability so now we
03:25 - know that what well now we know what SQL
03:27 - injection is and we've seen an example
03:28 - of them you you know now that a
03:31 - statement can be modified and you can
03:33 - and a statement can be modified to let's
03:35 - say delete records we're not going to go
03:37 - into anything too complex this is just a
03:40 - representation of it but we can do
03:42 - absolutely anything we want to our
03:43 - database more or less so I'm going to
03:46 - talk now just about the first the first
03:50 - way to protect against SQL injection
03:53 - this doesn't actually prevent the user
03:55 - input we're not doing anything in PHP
03:57 - but if we go back to our home and we go
04:00 - to privileges and we edit privileges for
04:04 - our user let's say root our localhost
04:06 - this is what I'm using at the moment now
04:08 - you can see here that we've got ticks
04:10 - for absolutely everything now let's say
04:13 - we were creating a website and we were
04:14 - logging in and well we were connecting
04:16 - to our server and we were also we're
04:20 - also connecting to our database and
04:22 - reading values from a database let's
04:24 - just say we were just
04:26 - just reading values from a database
04:28 - we're not creating anything so we might
04:31 - want to unpick that we might not be
04:33 - altering anything so we might move out
04:35 - and tick that so you can understand
04:37 - uncheck things that you might not want
04:39 - to do so if we might select but we might
04:41 - not insert we might not update or delete
04:43 - and we can get rid of all of these so by
04:46 - getting rid of all of these we've
04:47 - already limited our privileges for this
04:50 - specific user
04:51 - therefore if someone was to come in and
04:53 - try to inject her or change your
04:55 - statement server-side to say delete your
04:58 - entire database then they might not be
05:01 - able to do it because you may have
05:02 - unselected the privileges so at the
05:04 - moment because I'm working on a local
05:06 - computer my privileges are set to
05:08 - everything just in case you know
05:10 - depending on what I need to do so that's
05:13 - one way that you can protect against it
05:14 - so only select the privileges that you
05:17 - absolutely need on the website so if you
05:20 - I mean it's very rare that inside a web
05:23 - application you'd want to say drop your
05:25 - entire database so you can you can you
05:28 - can move this or drop tables you might
05:30 - need to drop tables but you can you can
05:35 - uncheck specific ones so that's
05:37 - something to think about while we carry
05:39 - on with our actual PHP code