00:00 - hello YouTube Sam here from youtube.com/
00:03 - onli gamer for the New Boston and in
00:06 - this tutorial we're going to be taking a
00:08 - look at cues now cues like an array list
00:12 - is a collection now there are a bunch of
00:15 - different collections in um Visual Basic
00:18 - uh such as uh hash tables there Stacks
00:23 - uh list dictionaries order dictionaries
00:25 - uh string collections uh bit array
00:28 - collections um we'll go into some of
00:30 - those but not all of those in these
00:31 - tutorials so let's go ahead and take a
00:33 - look at a cue so we'll go ahead and
00:36 - click new
00:38 - project and we'll just name this project
00:40 - collections because I'm going to be
00:42 - looking at uh teaching you guys uh
00:44 - several different collections using this
00:46 - same project so go ahead and click
00:50 - okay so we'll wait for that to load and
00:53 - now we're going to do is we're going to
00:55 - view the code for this and we will zoom
00:58 - in some here so now what we're going to
01:01 - do is we are going to create a q
01:03 - collection so we'll type private and
01:07 - we'll just call it q and then we'll type
01:10 - as keyword then we will use the new
01:14 - keyword and then we'll
01:16 - type
01:19 - Q so what we did is we created a private
01:22 - queue which can only be accessed in form
01:24 - one and we used as New Q which means
01:27 - that it is an object of Q and if we can
01:30 - create as many Q's as you as we want and
01:32 - they're going to be independent of of
01:34 - each other so what Q's do is it's a way
01:38 - of storing um objects because when you
01:42 - add an item to your queue it takes the
01:45 - um argument object and it uses what's
01:47 - called fifo or first in first out such
01:52 - as a line at a ticket booth the people
01:55 - start lining up and the first person who
01:57 - got there is going to be the first
01:58 - person to get their ticket and then get
02:00 - out of there so let's go ahead and uh
02:04 - add some stuff to our CU so we'll type Q
02:08 - Dot and to add something to our Q we
02:11 - just type NQ or we can't do that outside
02:16 - of a sub so we'll go ahead and double
02:18 - click on form
02:19 - one so when form one loads we will type
02:22 - Q do in Q now if you read the
02:27 - description it says adds an object to
02:29 - the end of the system. collections. Q so
02:31 - it adds it to the end of our line we'll
02:34 - just call it a line because lines are
02:36 - first in first out so since the end of
02:39 - the line there is no uh there is nobody
02:41 - or no object in front of this uh item
02:45 - this will be the first one inside of our
02:46 - Q so q. NQ and let's just see the first
02:51 - one in
02:53 - our uh in our Q so we can add as many as
02:57 - we want so we'll add two
03:00 - two we'll add three and we'll just add
03:11 - four okay so now that we've added some
03:13 - stuff to our queue it's going to be
03:15 - first in first out so if we take
03:17 - something out of our Q it's going to
03:19 - take out one and then it'll take out two
03:22 - so the way we take stuff out is by
03:24 - typing q. DQ and it says removes and
03:29 - Returns the object at the beginning of
03:30 - the system. collections. Q so it's going
03:33 - to remove this object right here or
03:36 - whatever object we um tell it to and
03:41 - we're just going to leave this um with
03:44 - nothing inside the parameters so q. DQ
03:48 - is going to return the first object
03:51 - which is one so now if we
03:56 - type message box
04:00 - q.
04:03 - DQ and then we'll just go ahead and
04:05 - convert that to a
04:07 - string and if we go ahead and run this
04:10 - you can see that we should get the value
04:12 - two because we started off by declaring
04:15 - our Q we added the value one to it then
04:18 - two then three then four then we dced
04:21 - and since it's first in first out it
04:23 - DQ's one and then if we DQ the next one
04:27 - it's going to be two it Returns the
04:29 - value two to us and then we just
04:30 - converted that to a string now if you
04:33 - don't want to take the item out of your
04:37 - q and you just want to look at it and
04:39 - without removing it you can use q.
04:44 - Peak so let's go ahead and run this and
04:48 - you can see that it gives us two so it
04:51 - peaked at the value at the next item in
04:55 - our list which is two now if we type
04:58 - message box and then q.
05:03 - DQ it's going to give us two as well
05:06 - because when we typed Peak it did not
05:08 - remove it from our Q it just looked at
05:10 - it so let's go ahead and run this we get
05:14 - two and then we
05:18 - dq2 so Q's are um they can be useful you
05:23 - may not find any practical application
05:25 - for them when you're first starting off
05:27 - but you may later on and it's useful to
05:29 - know them so I'm practice with some cues
05:32 - um remember that they are fifo F IO for
05:35 - first in first out and I once you know
05:38 - how to make cues and how to use them go
05:40 - ahead and move on to the next tutorial
05:42 - and thanks for watching