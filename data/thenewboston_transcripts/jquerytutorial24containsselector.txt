00:00 - so we create a new variable called
00:01 - search name and that will be equal to
00:03 - this ie referencing back to the search
00:07 - name field and then we want to grab the
00:10 - value using dot Val so every time we
00:14 - have a key up we then want to search for
00:17 - that search for the fitter the search
00:20 - name variable inside of this Li here so
00:25 - inside this names unordered list and we
00:28 - want to search for each Li so we need to
00:31 - use a selector hash names obviously
00:33 - because the ID of the unordered list is
00:36 - names and then we want to say space Li
00:40 - and then inside of this we want to say :
00:45 - contains and then in brackets we want to
00:47 - have a value so I'm actually going to go
00:49 - ahead and change the single quotation
00:51 - marks on the outside to double quotation
00:54 - marks and on the inside here is the
00:56 - value that we're searching for and this
00:59 - will only select the Li element inside
01:04 - of our names unordered list where this
01:06 - value is contained so we can append on
01:11 - the search name value and then we can
01:16 - add a class to this you know obviously
01:20 - depending on which value has been
01:22 - matched through what's been typed so
01:24 - we're going to go ahead to style dot CSS
01:26 - and create a new class called highlight
01:28 - and that's just going to be setting the
01:30 - background color to yellow so background
01:33 - color yellow and that will just
01:36 - highlight the area behind the Li and we
01:42 - can go ahead and then input highlight in
01:44 - there so now what's going to happen is
01:46 - when we refresh and type say for example
01:49 - capital a you can now see that all the
01:51 - Li elements that contain this value
01:54 - using the contain selector we add the
01:57 - class highlight to so we're not actually
02:00 - performing a search we're just using an
02:02 - advanced selector to select particular
02:05 - elements now when we get rid of this
02:08 - we've got a problem because we've
02:09 - highlighted everything now
02:11 - and that's because we have actually
02:13 - matched nothing inside of this contains
02:15 - therefore we've selected all Ally
02:18 - elements so the first thing we want to
02:20 - do is we want to set up a if statement
02:22 - here that that will create a condition
02:25 - based on whether this contains anything
02:28 - so what we want to do is say if search
02:31 - name doesn't equal nothing so if it
02:35 - doesn't equal nothing then we can
02:37 - perform the search the only problem is
02:39 - now that if we were to say for example
02:41 - type a and then back again that's fine
02:44 - but when we when we type a space we have
02:47 - the problem that highlights everything
02:48 - again so a round search name we use
02:51 - jQuery trim and this will just trim
02:54 - white space from the left and the right
02:55 - hand side of the string so now we can do
02:58 - as many spaces as we want inside of this
02:59 - box as well as typing characters going
03:02 - back again and obviously we don't get
03:04 - the highlighting everything effect now
03:07 - the only other issue here is that when
03:09 - we do return to nothing the class is not
03:13 - removed so just before we actually add
03:17 - this class we want to go ahead and
03:19 - remove this class beforehand so let's
03:22 - just pull everything up to make it look
03:23 - a bit neater and here what I want to do
03:26 - is I want to select user selector with
03:29 - names and all li elements and I want to
03:32 - remove the class highlight from these
03:36 - and what that will do is is every time
03:38 - we have a key up it will remove the
03:40 - class and then add the class if
03:41 - necessary so we'll get a more
03:43 - streamlined effect of highlighting each
03:45 - element so if I was to type a and then a
03:48 - backspace obviously that a backspace and
03:51 - you know no nothing in here has matched
03:54 - so we've removed the class and we
03:55 - haven't then gone on to add another
03:57 - class if I then type Alex it highlights
04:01 - Alex by type of capital B it highlights
04:03 - the line with Billy in it and again I
04:06 - will select all of them so you know
04:09 - something like this is quite useful if
04:11 - you have a list of say database table
04:13 - generated elements in an unordered list
04:16 - it could be a list of data that you will
04:20 - you know wish your user to search
04:21 - through it could be absolutely anything
04:23 - but the contained selector and
04:24 - case we've made more dynamic and given a
04:27 - better example rather than just
04:29 - highlighting something statically we've
04:31 - given the user the option to type
04:32 - something in so this is just an example
04:34 - of how it can be applied however
04:37 - obviously contains can be used for other
04:40 - different elements it doesn't have to be
04:41 - alike with paragraphs spans divs
04:44 - anything at all
04:45 - so the contains selector in this case
04:49 - we've used to look inside Li elements of
04:53 - an unordered list