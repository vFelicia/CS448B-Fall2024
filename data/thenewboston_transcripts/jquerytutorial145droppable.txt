00:00 - so what we want to do is inside
00:02 - style.css we want to create a new class
00:04 - called border and this is going to
00:07 - essentially just contain CSS that would
00:10 - outline a thin black border on this
00:13 - element then what we're going to do is
00:15 - as we draw as we hover over this we're
00:18 - going to change the border of this to
00:19 - black and then it will make it look a
00:21 - bit more like we're able to drop
00:23 - something so this border class here is
00:26 - just going to be border one pixel it's
00:30 - going to be solid and black so now that
00:33 - we've got this class set up with a
00:35 - border of one pixel solid and black we
00:38 - can apply it into here so I'm just going
00:40 - to write border okay so now as we drop
00:43 - any element over this drop droppable div
00:47 - the class of it will be added the border
00:50 - class will be added to it so let's go
00:52 - ahead and test this when we drag over
00:54 - you can see that the border changes so
00:57 - now it looks more like that we can
00:59 - actually you know we can like you know
01:02 - it's more feasible that you could drop
01:03 - something into this box than if nothing
01:06 - changed at all so it works as you hover
01:08 - out as you come out as well so it's only
01:13 - as we're hovering over this that we
01:15 - actually get this this border appear
01:18 - okay so now that we've created this we
01:21 - need to find a way of creating a
01:24 - tolerance as to when this is actually
01:28 - classed as hovering over and is has the
01:31 - ability to drop inside so at the moment
01:34 - we have the default tolerance set
01:37 - however what we're going to do is change
01:40 - this so I'm gonna create a new option
01:42 - tolerance and this is going to be equal
01:48 - to either fit intersect pointer or touch
01:51 - so the fit let's go through the first
01:54 - option or the value for this first
01:56 - option is fit now fit means that the the
01:59 - draggable which is this here has to
02:02 - completely be inside of this div here so
02:08 - as at the moment you can see that
02:10 - supposed to drag it from here
02:12 - as my cursor reaches the first part of
02:15 - this element or sorry the middle of this
02:18 - the middle of this draggable object
02:22 - reaches the first part of this element
02:26 - that's overlapped by at least 50% and
02:29 - that's the intersect option so that's
02:31 - the default option so at the moment 50%
02:35 - and it looks true and it looks droppable
02:37 - so fit will mean if we refresh that we
02:41 - can that we notice now that we have to
02:44 - have the whole of the element inside of
02:47 - this innate to be able to drop it so it
02:50 - works I guess a bit better you could say
02:53 - a bit more sort of like naturally as we
02:56 - fit the whole of the element inside that
02:59 - then means that we're able to drop it
03:01 - inside so that's the fit as I showed as
03:05 - I said before intersect is the default
03:09 - it works exactly the same way so at
03:11 - least 50% of it inside means that it's
03:14 - droppable let's look at the next option
03:17 - which is pointer and this is when the
03:20 - amount the mouse pointer itself overlaps
03:23 - the dropper ball so if I grab this
03:25 - element from the very end and force that
03:28 - in as soon as my mouse pointer enters
03:30 - this div that means that it is droppable
03:33 - so I could do it from the front or there
03:37 - take it there and drop it just in like
03:40 - that
03:40 - so that's the pointer value for this
03:44 - tolerance option we've also got touch
03:46 - which is when the element that you are
03:49 - dragging touches it by any amount
03:51 - whatsoever
03:52 - so this is somewhat of a you know you
03:55 - could regard it as somewhat of an
03:56 - illogical choice to make however you
03:59 - want to create something that feels
04:00 - natural to both yourself and your user
04:02 - and that you think will be beneficial
04:05 - when you're drag dragging and dropping
04:06 - objects so that is the tolerance
04:09 - personally I prefer the pointer because
04:13 - the user generally tends to look at
04:15 - their pointer as their point of dropping
04:18 - something in and for me it just feels a
04:20 - lot more natural when you you know as
04:23 - soon as your pointers
04:24 - inside somewhere that means that you can
04:26 - drop it so for now we'll leave this
04:28 - tolerance as pointer okay so the last
04:31 - thing we want to go ahead and look at is
04:33 - the accept option and we're going to
04:37 - have to change a few things around for
04:38 - this now accept looks like this it's
04:41 - just the option name is accept and we
04:43 - can we can provide a particular group of
04:47 - objects by class that we want to allow
04:51 - to be dropped into here so for example
04:54 - let's go ahead and change this span from
04:58 - drag me and let's create a few more
05:00 - names but first of all I'm going to give
05:03 - this a class of name and I'm going to
05:07 - copy this and paste that down and I'm
05:10 - gonna enter say Alex in there and Billy
05:14 - in there just put a slash after that and
05:17 - then the last one I'm gonna give a class
05:19 - of place and I am going to write London
05:24 - so now we have something that looks like
05:26 - this at the moment nothing is dragging
05:28 - at all because we haven't picked up on
05:31 - this in UI j s here however we're going
05:34 - to be changing that around in just a
05:36 - moment so this is our drop area it's
05:39 - remained the same however what we want
05:41 - is only specific elements based on the
05:45 - class so name or place to be allowed to
05:48 - dropped in drop inside here now you
05:50 - might be wondering why we do this now
05:52 - let's just say you had particular
05:55 - elements you wanted in particular boxes
05:57 - for example you might have another div
06:02 - next to this one