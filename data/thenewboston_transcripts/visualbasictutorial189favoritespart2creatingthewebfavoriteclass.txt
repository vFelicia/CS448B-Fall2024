00:01 - hello YouTube Sam here from youtube.com/
00:04 - onli gamer for the New Boston and in
00:06 - this tutorial we're going to continue
00:08 - working on my favorites so uh before we
00:12 - get started I just want to give full
00:13 - credit to the authors of beginning
00:15 - Microsoft Visual Basic 2008 um by
00:18 - theorin Willis and Brian Newsome
00:21 - published by rocks um because I don't
00:24 - want to take credit for this they made
00:25 - this program I'm just using it as a
00:28 - teaching tool so that you guys can learn
00:30 - um about programming and how to and a
00:33 - lot about objectoriented programming is
00:35 - which is what we're focusing on uh in
00:37 - these
00:38 - tutorials so let's come over here to
00:41 - favorites viewer YouTube and we'll add a
00:44 - class so if you don't know where we are
00:46 - right now or what we're doing then you
00:48 - may want to move back to the start of
00:49 - this
00:50 - series so we'll just call this class web
00:58 - favorite
01:01 - go ahead and click
01:03 - add so here is our class web favorite
01:07 - now we want to be able to dispose of um
01:11 - items in web favorite and we want to be
01:13 - able to use the using keyword so that we
01:15 - can cons serve resources and memory so
01:18 - in order for us to be able to dispose um
01:21 - and use the using keyword we need to
01:24 - implement I
01:26 - disposable so when you press um when you
01:29 - press enter after typing implements I
01:31 - disposable you can see it adds this
01:33 - region for you and that has a whole
01:35 - bunch of stuff and you don't really have
01:36 - to know what that does you just have to
01:37 - know it'll allow us to um dispose of
01:40 - objects that we create from this class
01:43 - so now let's go ahead and below the I
01:46 - disposable support inside of our web
01:48 - favorite class let's create some public
01:52 - variables so we'll make a name so public
01:57 - name as string and we'll do public URL
02:03 - as string so the name is going to be the
02:06 - name of the favorite um the name of the
02:08 - website and the URL is going to be the
02:10 - URL of the website so let's go ahead and
02:14 - create a
02:16 - method and we'll call it load and this
02:19 - is going to take a an argument so the
02:23 - argument is going to be file
02:25 - name as a
02:28 - string so in order order for us to be
02:30 - able to open and read files and write to
02:33 - files um that we're going to use with
02:36 - file name we're going to have to import
02:40 - system.io so
02:42 - Imports
02:44 - system.io so now we can open files and
02:47 - write to them and read them and so on so
02:50 - now we need to make some variables that
02:52 - we can use um in this method so we'll
02:57 - have string data as
03:00 - string and what this is going to do is
03:02 - string data is going to hold the
03:04 - contents of our favorites file now the
03:09 - your computer has a file in it for
03:11 - Internet Explorer and it stores all of
03:14 - your favorites for you well it doesn't
03:16 - store all of your favorites let me
03:18 - rephrase that it's got a folder that sto
03:20 - stores all of your favorites um and
03:22 - these are stored in different files each
03:24 - so the string data is going to hold the
03:26 - strings that are in those files that
03:28 - contain your favorites
03:30 - and then we're going to do we're going
03:32 - to create a an array of string so string
03:35 - lines as string now the favorit files
03:40 - that you have on your computer they are
03:43 - split up into different lines let me
03:46 - just go ahead and find one for you so
03:47 - you guys can see um what they look
03:51 - like well uh it looks like I couldn't I
03:55 - can't find a way to open the text of
03:58 - these uh file right here without
04:00 - creating a whole new application that
04:02 - will read all the text but basically
04:04 - what um is in these URL files these
04:09 - internet shortcuts is it has the base
04:13 - URL and then um and this is all
04:16 - separated on different lines it has a
04:17 - base URL has the URL the icon file the
04:20 - icon index and other stuff that has
04:23 - information about the URL of the website
04:26 - so we'll go and close out of that so the
04:29 - string line lines array is going to hold
04:32 - each of the lines in this text file that
04:34 - we're going to load it's not really a
04:37 - text file but we're reading the text
04:38 - from a
04:40 - favorite so let's go ahead and we will
04:44 - start adding some more so we're going to
04:47 - need a variable called string line so
04:51 - String Line we're going to be using
04:53 - string line in a uh for each Loop to go
04:56 - through each of the lines in string
04:58 - lines array
05:00 - so now that we have some variables
05:02 - initialized we're going to declare
05:04 - object file
05:06 - info as a new file
05:10 - info and then file name so what we've
05:14 - done is we've created an object um it's
05:17 - called object file info and it's a type
05:19 - file info and it says provides instance
05:22 - methods for this creation copying
05:24 - deleting moving and opening of files so
05:27 - file info just gives us a whole bunch of
05:29 - Stu that we can use with files and we're
05:31 - going to get the file info for the file
05:33 - name which is passed to this method
05:35 - right here so now what we want to do is
05:39 - set name equal to object file
05:43 - info. name.
05:46 - substring so we're getting a substring
05:49 - of our file now name is going to be the
05:52 - name of the website so this is going to
05:56 - take some arguments we're going to have
05:58 - our start index
06:00 - which is
06:01 - zero and for our length we're going to
06:04 - do object file
06:06 - info.
06:08 - name.
06:10 - length
06:11 - minus object file
06:14 - info Dot and now what we need to do is
06:18 - get the extension for
06:19 - it so we can do this by typing object
06:22 - file info.
06:25 - extension.
06:27 - length Okay so let me try and EXP
06:29 - explain what this does we've got our
06:31 - name variable which is going to be the
06:32 - name of the website and we want to get a
06:35 - substring of the name of the file file
06:38 - name so file info contains the info info
06:41 - for file name so we're going to use the
06:43 - object of that and get the name of the
06:44 - file um which is the whole file um and
06:48 - it doesn't include any paths so let's
06:50 - say we've got google.url that's our file
06:54 - so we're going to start at index zero
06:56 - which would be G and we want to go to
06:59 - this ending Index right here so we want
07:03 - the length of the file name let's say we
07:05 - have 10 minus the extension so minus the
07:09 - length of the extension so URL would be
07:12 - three so it's going to be 10 minus 3 so
07:14 - it's going to go from zero to let's say
07:17 - seven so it would just give us Google
07:19 - and then no extension length so the name
07:22 - is just going to be set to the name of
07:24 - the
07:25 - website so let's go down below this and
07:28 - add some more code
07:30 - so what we're going to do is we're going
07:32 - to split um all the data in this text
07:35 - file into different lines so we'll do
07:38 - string lines our array and we're going
07:41 - to set that equal to string data which
07:45 - is the um
07:48 - data uh everything in the file so we're
07:51 - opening that file and getting all the
07:52 - text from it and we want to split it so
07:55 - string data. spit and the first argument
07:58 - is going to be an array of
08:01 - characters or we can use another
08:03 - overload that has an array of string so
08:08 - we've got separator as string so we need
08:10 - an array of strings so we'll create a
08:14 - new string
08:16 - array and inside of these curly braces
08:20 - we want to tell it um where to split the
08:22 - items so it's got an array and the first
08:24 - item is going to read the full line and
08:27 - then once it hits an end line um we
08:30 - wanted to create a new item in that so
08:32 - we'll type control characters control
08:36 - chars it says the control characters
08:38 - module contains constants used as
08:40 - control characters so we want to use CR
08:44 - LF now crlf stands for carriage
08:49 - return and let's see what else stands
08:52 - for carriage return and Line Feed so
08:55 - basically when there's a new
08:57 - line uh we want to to um split it split
09:01 - that so the first item in our array is
09:04 - going to be the first line um in the
09:06 - string data the second item in the array
09:08 - is going to be the second line so
09:09 - whenever there's a new line it's going
09:10 - to create a new um object in that array
09:14 - so for our options what we want to do is
09:17 - just remove any uh duplicates so we'll
09:20 - do string split options do remove empty
09:25 - entries so if any empty I mean if any
09:28 - entries go into our array that are empty
09:31 - it's just going to go ahead and remove
09:32 - those for us