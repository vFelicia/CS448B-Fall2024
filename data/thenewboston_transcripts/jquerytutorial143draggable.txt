00:00 - so you can see how it's snapping to a
00:02 - grid so this is extremely useful if you
00:04 - are creating something where you need an
00:06 - element to snap to a particular area on
00:09 - a page so if you're creating a web
00:10 - application that requires this it's an
00:14 - extremely effective way of actually you
00:18 - know snapping to particular areas on a
00:21 - grid so that's a another option there
00:23 - now let's just pull this down and
00:25 - refresh I'm gonna remove this grid
00:28 - option now and we're going to go on to
00:30 - look at revert now revert is not really
00:33 - something you would include with you're
00:38 - dragging it would only be something
00:40 - you'd want if you can if you wanted the
00:44 - the element itself to revert back to a
00:47 - particular position so revert we can set
00:50 - to true and what this will do is
00:52 - wherever the element has started sorry
00:56 - let's just get rid of that there sorry
00:59 - okay so wherever the element has started
01:02 - I'm continuing to drag it however when I
01:04 - release it you can see it it returns to
01:06 - its original position so wherever I drag
01:09 - it to it snaps and revert back to its
01:12 - original position and we also have an
01:15 - additional parameter that we can set for
01:17 - this and this is revert duration and we
01:20 - can set a time in milliseconds how long
01:23 - this takes to revert back to its
01:25 - original position so I've set revert
01:27 - duration now if I drag you can see it
01:30 - takes that was a second to revert back
01:32 - if I was to say change this to five
01:36 - seconds you can see that it's
01:40 - significantly slower it takes five
01:41 - seconds to revert back to its original
01:43 - position so that's the revert option and
01:47 - then the revert duration option that
01:49 - allows you to set the speed however I
01:51 - tend to find that the revert set to true
01:54 - by its default speed is a nice speed for
01:57 - it to revert back to I think it's
01:58 - probably 500 milliseconds by default
02:02 - okay so now that we've looked at a few
02:05 - options in here we're going to take a
02:07 - look at events now events can be
02:09 - appended as normal onto the end or
02:12 - sorry onto the end of here and then we
02:15 - create a function inside of these to
02:18 - perform a specific action so for example
02:21 - I want to I'm going to come and separate
02:23 - the last option that I've chosen and I'm
02:27 - then going to start the or type the
02:32 - start option now the start option is
02:35 - going to be equal to a callback function
02:38 - now what this is going to do it's when
02:41 - the dragging has started is going to
02:42 - perform the opera by the block of code
02:45 - inside of this function so I'm just
02:47 - gonna pull that down a minute as well as
02:49 - pulling down start as well just so we
02:51 - can see what's going on a lot better so
02:53 - as well as these options here I've
02:55 - chosen this start event now it's it's
02:57 - important to know that this doesn't cut
02:59 - this isn't classed as an option
03:01 - these here are options and this here is
03:04 - an event the event has a callback
03:06 - function and inside of the callback
03:08 - function we can specify it something to
03:10 - do so what we're going to do is as soon
03:13 - as the dragging starts we're going to
03:16 - apply some text to a div down here and
03:21 - it's gonna tell us the status of the
03:23 - element so has it beings has it started
03:26 - dragging is the element currently being
03:30 - dragged and when the when the dragging
03:32 - has stopped as well so we're going to
03:33 - look at these three events the first of
03:35 - which being start so we've created this
03:38 - div here and I'm just going to call it
03:40 - event and when the start when the
03:46 - element starts to be dragged so ie when
03:48 - it's clicked and the you know first
03:51 - action is made we want to put some text
03:55 - inside this event div so I'm going to
03:59 - say event text and inside here
04:02 - dragging started so now what's going to
04:06 - happen is when we drag you can see that
04:08 - the div now says dragging started okay
04:11 - so as soon as we start dragging or we
04:13 - activate this I we click on it that's
04:16 - when the dragging has started so when I
04:18 - when I click and pull it a tiny tiny bit
04:20 - of the way it says dragging started the
04:24 - other elements are drag and stop so the
04:28 - first one we're going to look at well
04:31 - the second one we're gonna look at in
04:32 - this case is uh let's see where are we
04:35 - so that ends just there and then after
04:38 - this we want to say come down here and
04:45 - we're gonna say drag and this is equal
04:48 - to a function we're gonna pull this down
04:50 - as well just to make it look a bit
04:51 - neater so while the element is being
04:55 - dragged we want to again place some text
04:58 - inside this event div and this text is
05:02 - dragging dragging so you'll notice now
05:07 - that when we drag it we won't actually
05:09 - see the dragging started message here
05:12 - and that's because this will override
05:15 - this text in this event div when the
05:18 - dragging started yes we will get a
05:19 - message saying dragging started inside
05:22 - of this div the text inside this div
05:24 - however as we drag this will replace it
05:26 - so you'll notice that we won't see the
05:28 - dragging started text but we will
05:31 - automatically see the dragging text when
05:33 - I let go this doesn't actually change
05:36 - because we need to supply an additional
05:38 - event this additional event is stopped
05:42 - so we create a new a callback function
05:45 - inside here and we pull this down and
05:49 - inside here we are going to set the
05:53 - event text
05:55 - - dragging stopped so now that the
06:00 - dragging has stopped well when the
06:01 - dragging has started we have this
06:03 - dragging text here I'm still dragging
06:05 - this element however when I let go and
06:07 - it returns we have dragging stopped so
06:10 - with this you can work out if an element
06:13 - is being dragged or not now this might
06:16 - be useful if you wanted to say pinpoint
06:18 - the coordinates or find out when an
06:20 - element had been dragged if you wanted
06:22 - to log this in one way or another so
06:24 - these events aren't just here for the
06:26 - sake of telling the user when the
06:29 - dragging has started when the dragging
06:30 - has is commencing or when the dragging
06:33 - is or the elements being dragged or when
06:35 - the element has or dragging a stopped
06:39 - but we obviously have make use of
06:41 - callback functions in order to do
06:44 - something when the dragging has started
06:46 - so for example if you wanted to you know
06:49 - allow an element to be dragged and you
06:53 - wanted to say change something on a page
06:56 - as it's being dragged or changed
06:58 - something on a page when the when the
06:59 - dragging has stopped you can use these
07:02 - events here and the callback functions
07:05 - associated with them so let's just pull
07:07 - that down there so the three events we
07:09 - have our start drag and stop now as well
07:12 - as these there are other properties of
07:15 - this draggable interaction we can use if
07:21 - you go over to the jQuery documentation
07:23 - itself you can view a list of options
07:28 - events and also different methods
07:32 - associated with this draggable
07:34 - functionality so in the tutorial we've
07:37 - looked at a variety of options which
07:39 - either help the functionality of
07:42 - draggable or the aesthetics behind it
07:45 - and we've also looked at some of these
07:48 - events and placing text inside of a div
07:51 - when these events actually happen so
07:54 - draggable is an extremely powerful tool
07:56 - and there's a variety of options you can
07:59 - apply to it depending on your needs