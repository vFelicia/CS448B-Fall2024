00:02 - hello humans
00:03 - welcome back we are in unit two and now
00:06 - we're going to jump into a little bit
00:07 - more
00:07 - uh deep learning in terms of this code
00:10 - this whole programming thing
00:12 - when we talk about coding it's so easy
00:14 - to forget
00:15 - everything that goes on in these
00:17 - programs you open an app on your phone
00:19 - and you just use it and
00:20 - you think nothing about the fact that it
00:22 - responds to your touch on the screen and
00:24 - how that code works or
00:25 - the fact that it's able to network and
00:27 - interact with other devices and
00:28 - how that code works and it's so easy to
00:30 - forget
00:32 - how many layers there are in this
00:34 - software development
00:35 - kind of world that we live in and it's
00:37 - not like one person creates an app and
00:39 - they've written every single layer of
00:40 - code
00:41 - they've written this one top layer that
00:42 - uses code that's in the next layer which
00:44 - uses code that's in the next layer
00:46 - it's this whole crazy structure where
00:47 - everything's depending on layers beneath
00:50 - it but
00:51 - we're going to start to dive in a little
00:52 - deeper we're going to talk today about
00:54 - booleans about boolean statements
00:56 - boolean variables conditional operators
00:58 - and logical operators
00:59 - i'm going to kind of keep it low level
01:00 - for the beginning part with our basic
01:02 - talk about conditional and logical i'm
01:04 - going to end it with a little bit of a
01:05 - high level piece for you to go look at
01:07 - if you want to dive a little deeper
01:08 - or if you're interested in a more
01:10 - academic pathway this is unit number two
01:12 - today this is booleans and conditionals
01:15 - and this is really important before we
01:17 - start
01:18 - looking at actually structuring our code
01:20 - so the decision making can happen
01:22 - we need to first understand the idea of
01:24 - booleans trues and falses
01:26 - and how we can take other expressions
01:28 - and bring them down to true or false
01:30 - so we're going to talk about two kinds
01:31 - of operators we're going to talk about
01:32 - conditional operators
01:34 - which are things like less than greater
01:36 - than greater than or equal to whatever
01:38 - and then we're going to talk about
01:39 - logical operators which are things like
01:40 - and
01:41 - or and not there are more in these
01:44 - categories
01:45 - again this is an introduction to python
01:47 - i want to get you going
01:48 - and not make you overwhelmed initially
01:50 - you can go in and you can dive way
01:52 - deeper with logical and conditional
01:53 - operation you can spend your whole life
01:55 - in the world of logical
01:56 - uh math and discreet mathematics if
01:58 - that's the world you want to live in
02:00 - um that's not the world i want to live
02:02 - in so i'm going to scratch the service
02:04 - with some of these deeper topics
02:05 - and then you can go off and investigate
02:07 - more on your own so we're going to start
02:08 - with this program so for conditional
02:09 - operators i'm going to bring in two
02:11 - integer values
02:12 - from the user so i have x equals int
02:15 - input and then i just put this little
02:17 - literal thing in quotes
02:18 - so x colon space so then the user is
02:20 - going to see x colon space
02:22 - they're going to type their number and
02:23 - hit enter and then it's going to say y
02:25 - colon space they're going to type their
02:26 - number hit enter
02:27 - and then our code is going to store
02:28 - those in variables called x and y then
02:30 - what i'm going to do is i'm going to do
02:31 - this so i'm going to do a print
02:32 - statement where i say
02:33 - x is less than y and then a colon and
02:36 - then i'm going to
02:36 - as a string print the result of this
02:39 - conditional operator
02:40 - is x less than y now this is what's
02:43 - called a boolean statement
02:44 - this statement can only evaluate one of
02:46 - two ways it can evaluate to true
02:48 - or it can evaluate to false there is no
02:50 - other option
02:51 - either x is less than y or x is not less
02:54 - than y those are the only two options
02:56 - it's a binary operation
02:58 - so i've repeated this for greater than
03:00 - greater than or equal to
03:01 - less than or equal to and equal to i
03:03 - just realized my order's a little off
03:05 - it's a little bit annoying so i'm going
03:06 - to rearrange the order there we go
03:08 - so less than less than or equal to
03:11 - greater than greater than or equal to
03:12 - and then equal to now look at the equal
03:15 - to conditional operator
03:16 - it is two equal signs now this is
03:19 - important because we use
03:20 - one equal sign when we are assigning a
03:23 - value to a variable
03:24 - we use two equal signs when we are
03:26 - comparing
03:28 - true or false statement whether
03:30 - something is equal to something
03:32 - else very important we have the
03:33 - distinction so i'm going to run this
03:34 - code
03:35 - and we'll input a couple of numbers and
03:36 - we'll just kind of see how it works so
03:38 - when i run it you can see it prompts me
03:40 - for a value for x so i'm going to say x
03:41 - is 5
03:42 - and prompts me a value for y i'm going
03:44 - to say 10.
03:46 - so we'll see x is less than y is true
03:49 - 5 is less than 10. x is less than or
03:51 - equal to y
03:52 - also true x is greater than y false
03:56 - x is greater than or equal to y false
03:58 - again 10 is bigger than 5. so these are
04:00 - not going to be true
04:01 - are they equal no they are not now we
04:03 - could kind of pump this up a little bit
04:05 - if we really wanted to i'm not going to
04:07 - do it all the way but we could instead
04:09 - do something like string
04:11 - x plus the quotes plus
04:14 - string y plus quotes
04:17 - and the colon space and just kind of
04:21 - have it actually print the numbers
04:22 - in the statements so if i run that again
04:27 - five and ten you only see on the first
04:29 - one but now it actually fills it in with
04:31 - the numbers
04:32 - which is kind of nice and it looks a
04:33 - little prettier you know what let's take
04:35 - a quick second and let's just update
04:36 - that code all the way through
04:40 - all right we should be all updated now
04:42 - so let's run it and let's just test it
04:44 - 5 and 10. so now we see the statements 5
04:47 - is less than 10
04:48 - true 5 is less than or equal to 10 true
04:50 - 5 is greater than 10
04:52 - false 5 is greater than or equal to 10
04:55 - false 5 is equal to 10
04:57 - false all right so you're starting to
04:59 - see how that works in terms of
05:00 - conditional operators and checking
05:02 - whether something will be true or will
05:04 - be false now obviously you can enter
05:06 - different numbers there
05:09 - so i could put 6 and 6. you can see
05:12 - the less thans and the greater thans are
05:14 - false
05:15 - but anything that had the equal to in it
05:17 - is true so i'll just leave that code up
05:18 - there for one sec
05:19 - pause it if you need to if you want to
05:21 - go have a look at how i did that so
05:22 - that's conditional operators and those
05:24 - are always going to evaluate to true or
05:25 - false
05:26 - now you can put those directly into a
05:28 - print statement like we did here
05:29 - you could also store them as a variable
05:32 - so i could have a boolean variable
05:33 - called z
05:34 - that is equal to you know x equal equals
05:37 - y
05:38 - and that variable is going to be equal
05:40 - to either true or false so it will in
05:42 - itself
05:43 - be a boolean variable so you can either
05:45 - store it as a boolean variable which
05:47 - again
05:48 - binary only holds true or false or you
05:50 - can print it directly
05:52 - into a print statement or what we'll see
05:53 - in the next video we can bring them into
05:55 - a conditional statement like an if
05:56 - statement that's conditional operators
05:58 - now we're going to look at a logical
05:59 - operator
06:00 - i'm just going to comment that out
06:01 - because i don't need it right now and
06:02 - i'm going to scroll down logical
06:03 - operators i'm going to create a couple
06:05 - of variables i have one called a which
06:06 - is equal to true one called b which is
06:08 - equal to false
06:09 - and you'll notice capital t capital f
06:12 - okay
06:12 - now when we talk about logical operators
06:14 - we're talking about three primary
06:15 - operations
06:16 - and or and not and these go back to
06:19 - electrical engineering they go back to
06:22 - voltage passing through or not passing
06:23 - through these gates
06:25 - and an and gate will only allow voltage
06:27 - to pass through if it's true in both
06:29 - instances an or will let it pass through
06:31 - if either one of them is active
06:33 - and a knot is just going to be an
06:35 - inverter that's going to invert the
06:36 - signal
06:37 - and this this is really if you want to
06:38 - get into what's going on at the bottom
06:40 - layer of your computer and hardware and
06:42 - cpus and all that
06:44 - and or gates logic gates are at the core
06:46 - of all that right
06:47 - this is how math is is done on the very
06:49 - first computers is this idea of
06:51 - decision making ands ors and knots
06:54 - inverting a zero to a one or taking a
06:56 - one and a one and seeing if it's going
06:57 - to be a one or a zero and all this
06:59 - so it gets pretty deep pretty fast we're
07:01 - going to keep it pretty simple we're
07:02 - just going to overlay
07:03 - the three main ones which are and or and
07:05 - not and then i will touch briefly on an
07:07 - academic piece called de morgan's law
07:09 - so we're going to start by just printing
07:11 - out a little bit so we can understand
07:13 - what's going on
07:14 - so i am just going to print
07:18 - the value of a and b and then i'm going
07:21 - to print the value of a
07:22 - and b not a and not b so we can
07:25 - investigate a little bit what's going on
07:27 - so let's start with one where they're
07:28 - both
07:29 - true so it's going to print the value of
07:32 - a
07:32 - the value of b the value of a and b
07:36 - the value of a or b value of not a and
07:38 - the value of not
07:40 - b save that we're going to run this
07:44 - so a is true b is true
07:48 - a and b is true because both a and b
07:51 - are true therefore the statement a and b
07:54 - also evaluates
07:55 - to true a or b either a is true or b
07:59 - is true that's true not a is the invert
08:02 - of a
08:03 - so true becomes false and not b is the
08:06 - inverse of b
08:07 - so true becomes false cool let's change
08:09 - our values
08:10 - let's make one of them false okay i made
08:13 - b false
08:13 - save and run so now b is false
08:18 - so are both a and b true no they are not
08:21 - false is one of them true yes it is
08:25 - the inverse of a the inverse of b
08:28 - get the hang of it let's look at the
08:29 - code so here is the actual code to do an
08:32 - and operator
08:33 - it's the variable so the boolean and the
08:36 - next boolean
08:37 - and you can have anything that evaluates
08:39 - a true or false
08:40 - on the sides of that ant you could have
08:42 - the conditionals we just had in the last
08:44 - question
08:45 - x is less than y and x is greater than
08:48 - zero
08:49 - those can both be there because they
08:50 - both evaluate true or false
08:52 - what's going to happen in coding
08:54 - languages is your conditional operators
08:56 - have a higher order of operations
08:58 - than your logical operators so it's
09:00 - going to evaluate the conditionals down
09:02 - to true or false
09:03 - then it's going to and or or not those
09:06 - values
09:07 - as kind of the last ish statements in
09:09 - that order of operations
09:10 - obviously for getting brackets okay so
09:13 - there's our and
09:14 - there's our or and there's our not not a
09:17 - not b in a lot of programming languages
09:20 - this is an exclamation point
09:22 - so not a not b in python we're going to
09:25 - write out not lowercase
09:26 - just like and and or lowercase you'll
09:29 - notice my notepad plus plus recognizes
09:31 - these makes them yellow
09:32 - keywords really nice there okay so this
09:35 - is that essential structure of
09:37 - and or and not and this is really
09:40 - important we try to make decisions so
09:41 - you know you're talking about whether or
09:43 - not you can divide something so you have
09:45 - two numbers you want to know whether you
09:47 - can divide them well
09:48 - you can't divide them if the denominator
09:49 - is zero so you might have to check
09:51 - if the denominator is greater than zero
09:53 - and then maybe
09:54 - and the value is greater than 0.5 then
09:57 - you pass the test
09:59 - so you might want to do stuff like that
10:00 - where you need these
10:02 - logical operators these ands or ors or
10:05 - maybe it's a user input thing and it's
10:06 - if they press this button or they press
10:08 - this button
10:09 - and we want to do something that's the
10:11 - same action so you've played a game
10:12 - where you could use the up down left
10:13 - right arrows
10:14 - but you can also use wasd well the w
10:18 - key and the up arrow are going to
10:19 - provide the exact same effect
10:21 - so in the code it's probably if the up
10:23 - arrow or
10:24 - the w key is pressed and that's going to
10:26 - create the same operation
10:28 - so this is that idea of logical
10:30 - operators logical operators
10:32 - and or not require booleans so trues and
10:35 - falses
10:36 - on either side of the operator if it's a
10:38 - not there's only one
10:39 - operand there's only the one there's not
10:41 - one on each side and then
10:43 - those can come from all kinds of crazy
10:44 - statements you can see
10:46 - crazy long boolean statements where
10:48 - people put together and string this
10:49 - stuff
10:49 - into a hot mess but the the core idea is
10:53 - that what is on either side of an and
10:54 - what is on either side of an or
10:56 - has to be an expression that evaluates a
10:57 - true or to false
10:59 - all right if all you want is to scratch
11:02 - the surface
11:02 - stop the video here we're going to talk
11:04 - a little briefly
11:05 - just um smidge about de morgan's law
11:08 - it's going to bend your mind a little
11:09 - bit and you can go do some googling
11:11 - look it up i'm not going to go crazy
11:12 - with it but i want to show it to you
11:14 - because it's cool
11:14 - but there's no challenge for this video
11:16 - we're going to jump into the bigger
11:17 - stuff next lesson
11:18 - we got to do if statements before i can
11:19 - put a challenge out there for you
11:21 - all right de morgan's law i'm going to
11:23 - throw this print statement out yeah
11:25 - okay it's a mess it's fine we're going
11:27 - to keep our true and false values here
11:28 - and uh i'll actually keep my little
11:31 - statement here where i print a and b
11:33 - don't worry about the code let's just
11:34 - run it
11:37 - all right so de morgan's law works two
11:39 - ways think
11:40 - expanding brackets grade 8 9 7 math
11:43 - whatever
11:44 - not a and b in brackets is equal to not
11:47 - a or not b
11:48 - think about like dividing each side of a
11:50 - math equation that's an inequality by a
11:52 - negative value you have to flip the
11:53 - inequality symbol
11:54 - similar mindset here the and becomes an
11:56 - or when we nod it
11:57 - so not a and b becomes not a or not b
12:00 - and then the second part of demorgan's
12:01 - law is not
12:03 - a or b is equal to not a and not b now
12:07 - what i will tell you is this when you
12:08 - try to put context to this you're going
12:10 - to hurt your head
12:12 - when you try to think about like if i
12:14 - need
12:15 - to pass the exam and
12:18 - have all my assignments completed in
12:19 - order to get my credit and you start
12:21 - trying to categorize those using a's and
12:23 - b's
12:24 - you're going to melt your brain a little
12:25 - bit so you can see it work here so i
12:28 - have a true and a false
12:29 - so not a and b well a and b is going to
12:32 - be false because they're not both true
12:34 - nodding it is going to be true not a or
12:36 - not b
12:37 - not a is going to be false not b is
12:39 - going to be true
12:40 - or them one of them is true so it's true
12:42 - it works if we look down here
12:44 - a or b is going to be true because one
12:46 - of them is true nodding it's going to be
12:48 - false
12:49 - not a is going to be false and not b is
12:52 - going to be true
12:53 - when you're doing an and operation if
12:54 - either one of them is false you're
12:55 - automatically false
12:57 - so that works as well now you can go out
12:59 - and do some looking at de morgan's law
13:00 - you want to get a little bit heavier
13:01 - with it
13:02 - again it can be hard on the head it's a
13:04 - cool topic uh if you're kind of math
13:06 - minded and you like that stuff
13:07 - if you're not don't worry about it we're
13:08 - not really going to touch on it again
13:10 - we're going to jump into if and l
13:11 - statements in the next video so that's
13:13 - it
13:13 - for unit two topic number one which is
13:15 - booleans conditional
13:16 - and logical operators this is so
13:18 - important when we start to make decision
13:20 - making
13:20 - in our code which we're going to start
13:22 - next time with if and l statements
13:23 - there's no challenge
13:24 - so just make sure you followed along
13:26 - with the video and it kind of made sense
13:27 - if you want to code along
13:28 - code along it's never going to hurt to
13:30 - code and mess with things and try to get
13:31 - them to work and break them and fix them
13:33 - and break them and fix them
13:34 - beat your head against the wall a little
13:35 - bit and then come back good all
13:37 - perfect learning opportunities all right
13:39 - next video we'll jump into vanello
13:40 - statements thanks for watching
13:41 - like share subscribe do all that
13:43 - annoying stuff that everybody on youtube
13:44 - tells you to do
13:45 - it keeps me going it's awesome comment
13:47 - below if you have questions and i'll try
13:48 - to hit you back as quickly as i can
13:50 - and we'll see you in the next video see
13:51 - ya bye humans