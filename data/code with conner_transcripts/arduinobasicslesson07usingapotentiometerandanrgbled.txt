00:00 - [Music]
00:11 - [Music]
00:26 - all right welcome back my name is Adam
00:28 - and we're here to change the world one
00:30 - line of code at a time in today's lesson
00:32 - we're gonna be using an RGB LED and
00:35 - controlling the red value using a
00:37 - potentiometer have a look so here you
00:40 - can see as you turn the dial on the
00:41 - potentiometer the red LED lights up to
00:44 - full brightness and as you turn down the
00:46 - dial on the potentiometer it goes down
00:47 - all the way until it's off alright so
00:53 - now it's time to wire up our circuit so
00:55 - we always start by taking our 5 volt and
00:57 - bring it on to the plus row of our board
01:00 - do that and then we'll take our ground
01:02 - and we'll bring it on to the negative
01:04 - throw of the board can we do this so
01:06 - that on our breadboard we know we can
01:08 - access ground and the voltage right from
01:10 - the board so the next we're gonna do is
01:12 - remember bringing RGB LED now your RGB
01:15 - LED has 4 pins on it the left pin is red
01:18 - then there's a long pin which is the
01:20 - cathode then green and then blue now you
01:23 - may have your spun the other way around
01:24 - so you may see the long pin to the right
01:26 - just flip it over so it goes red long
01:28 - pin and green blue and then we're gonna
01:31 - wire that up so let's start with red
01:33 - according to our code we have red wire
01:36 - it up to pin number 9 so I'm gonna take
01:38 - pin 9 now I'm not gonna plug it directly
01:40 - in to my LED because I need a resistor
01:43 - in between the two so I'm gonna put my
01:45 - red over here and then I'm gonna put a
01:48 - resistor in between my wire from the
01:55 - board and my LED and what that does is
02:01 - that allows me to have resistance in
02:04 - between the voltage coming out of the
02:06 - board and the voltage going into the LED
02:09 - which is important to quickly switch
02:11 - these over to red so that we can tell
02:14 - what's what and then we'll do this for
02:16 - great and we'll do this for blue
02:18 - so our green is coming out of pin 10 so
02:21 - I'm just going to pull it over here
02:22 - leave that green my blue is coming out
02:25 - of pin 11 so we'll bring that over there
02:27 - now we're going to put resistors in
02:29 - between each of these as well so I'm
02:32 - going to bring a green resistor over
02:34 - here and we're on a wire green resistor
02:36 - oh okay
02:38 - and then we're gonna bring our blue
02:39 - resistor in and we're gonna wire our
02:43 - blue resistor up so that now we have
02:47 - coming from our Arduino pin 11 is blue
02:50 - it's gonna go through a resistor and
02:52 - then into the blue pin of the LED green
02:54 - is coming from 10 through a resistor
02:56 - into the green pin and read through a
02:58 - resistor into the red cone so what do we
03:00 - do with that missing pin well we don't
03:02 - connect it to the potentiometer because
03:03 - although that's happening inside of our
03:05 - code all we need to do is provide a
03:07 - ground for our LED so we're actually
03:09 - just gonna wire anywhere in this row up
03:12 - to the ground row of our brand board and
03:16 - that provides us with grounding out of
03:18 - the LED so that's actually all we need
03:20 - to do for the RGB LED the only code left
03:22 - to do is the potentiometer so now we
03:24 - need to do is bring the potentiometer so
03:26 - any standard potentiometer comes with
03:27 - three pins the middle pin is actually
03:30 - where the output from the potentiometer
03:32 - is going to get sent so we're going to
03:34 - wire that up to a zero so if you can do
03:37 - that with a yellow wire so don't get
03:38 - confused so that's gonna send whatever
03:41 - voltage the potentiometer is letting
03:42 - through send that voltage signal into
03:45 - the computer so then we just need to
03:47 - have a ground and a voltage so that it
03:50 - knows where to get power and it knows
03:52 - what to send for the resistance so I'm
03:54 - gonna wire the left leg of this over to
03:56 - the voltage and I'll make that red and
03:59 - then I'm going to bring the right leg of
04:00 - the potentiometer into the ground it
04:03 - actually doesn't matter which one you do
04:04 - to grant on which one you do to voltage
04:06 - because the way a potentiometer works is
04:08 - it just takes the full voltage the whole
04:09 - 5 volts and then it acts like a resistor
04:12 - that's controlled by a dial and then
04:13 - sends through the voltage reading that's
04:15 - left over to the Arduino in Port a zero
04:18 - all right and that actually completes
04:20 - your circuit so now you can jump ahead
04:22 - to the code and see if you can get
04:23 - things up and running
04:24 - alright let's get started with our
04:25 - program we're going to want to make sure
04:27 - that you start off a new sketch in your
04:30 - online sketchbook
04:31 - you can give it a name if you want for
04:33 - lesson seven and then let's get started
04:36 - so the first thing we need to do here's
04:38 - your code here it is we need to declare
04:40 - the physical outputs so that is the
04:43 - values that we're going to send from the
04:45 - computer to the board which will go to
04:48 - the RGB LED so off to someone for red
04:50 - one for green and one for blue okay so
04:53 - let's have a look so the red pin here
04:54 - I've got it as an integer that's a value
04:56 - that's non decimal and number value red
04:58 - pin set equal to nine so that means that
05:00 - on my board I've got my red pin plugged
05:02 - into the nine port out of my Arduino
05:05 - green is ten and blue is 11 okay so
05:08 - that's going to set up my physical
05:10 - outputs to send values to the board all
05:13 - right next up we need to set up our
05:14 - physical input so right now we're going
05:16 - to be using one potentiometer to control
05:18 - our red value so let's have a look we're
05:21 - going to set up an integer I called it
05:23 - our pot pin standing for the red
05:25 - potentiometer pin and I've set it equal
05:27 - to a zero all right
05:28 - so for this next section we're going to
05:29 - set up the constants and variables that
05:31 - we're going to use in our program now
05:33 - the codes a little bit longer here so
05:34 - you might want to pause the video it's
05:35 - not going to type along remember you
05:37 - don't need to type in the comments
05:38 - they're just there for clarity so first
05:40 - we've got something called the read
05:42 - value and the read value is going to be
05:44 - the value that we take in from the
05:46 - potentiometer and that gives us a range
05:48 - from zero to 1,024 and that's going to
05:51 - be that value we get as we turn the
05:53 - potentiometer dial then we're going to
05:55 - have a green and a blue value which I'm
05:57 - going to set to zero for right now now
05:58 - in the extension you're going to want to
06:00 - play around with these a little bit but
06:01 - for now we're going to set them to 0 and
06:03 - then I have this red value now notice I
06:05 - didn't give this a value and the reason
06:07 - for that is we're actually going to get
06:08 - that value calculated based on what we
06:10 - get from the potentiometer later on in
06:12 - the code all right so now we need to set
06:14 - up the actual values in Arduino so we do
06:17 - this using the setup function which
06:18 - you've seen before so take a minute
06:20 - pause the video take down the code and
06:23 - then let's go through it together so
06:25 - first things first I set up my serial
06:27 - now I'm not actually using my serial in
06:29 - this program but it's good to have it
06:31 - there because a lot of times we need to
06:32 - use debug statements or little print
06:34 - lines to just double check that things
06:36 - are working right so then I'm going to
06:37 - set up the output pins for each of the
06:39 - colors so this is telling the Arduino
06:41 - software that the pins that we've
06:43 - already pre assigned numbers to
06:45 - are actually output pins so we do one
06:47 - for the red pin so pinmode
06:50 - red pin output we do one for the green
06:53 - pin mode green pin output and we do one
06:56 - for the blue pinmode blue pen and output
06:58 - then we do that for our input from the
07:01 - potentiometer so that's pin mode our
07:03 - potpan which is our red potentiometer
07:05 - pin and we're setting it to input notice
07:08 - that output and input are in all caps
07:10 - that's a syntax that we use with the
07:12 - Arduino software alright so now that we
07:14 - have the setup done we're going to get
07:15 - into have a look at the actual loop so
07:17 - what's going to happen in our code each
07:19 - time that it works so what's the first
07:21 - thing we need our code to do well we
07:22 - need our code to be looking for the
07:24 - value coming from the potentiometer so
07:27 - we're gonna do that here so take a
07:28 - second have a look at what I've got so
07:30 - we're gonna take in the voltage from the
07:31 - potentiometer which is a range from zero
07:33 - to 1024 and we're going to store that in
07:36 - that read value variable that we saved
07:39 - earlier in in the program we'll do this
07:41 - using this analog read function analog
07:44 - read function needs you to tell it where
07:45 - to listen so we want it to listen on the
07:48 - our potentiometer pin the our pin
07:50 - variable that we set up earlier in the
07:52 - code all right so that's going to get
07:54 - our code listening for the value from
07:57 - the potentiometer well what's next
07:59 - next we have to do a little bit of math
08:01 - we have to take a value that goes from
08:03 - zero to 1024 and convert it to be from
08:07 - zero to 255
08:09 - well why 255 colors the standard RGB
08:13 - color spectrum goes from 0 to 255 so
08:17 - let's have a look at this code if we
08:20 - want to take a number we want to take a
08:23 - number between 0 and 1024 we basically
08:25 - want to divide it down so that it's
08:28 - between 0 and 1 and then multiply it
08:30 - back up to the range that we want so to
08:33 - do that we take a value from 0 to 1024
08:36 - we're going to divide it by 10 23 and
08:38 - then multiply it by 254 and this makes
08:41 - sure that our value doesn't go above and
08:43 - stays in the correct range that we want
08:44 - it to be so in or do we know we see that
08:47 - we've done red value which is the value
08:49 - we want to write out to our LED U is
08:52 - equal to 255 divided by 10 23 multiplied
08:56 - by our read value value
08:58 - in from the potentiometer now I know
09:00 - what you're thinking what's with the
09:02 - weird dots this is the thing when you
09:05 - divide 255 by 10 23 you get a decimal
09:09 - number between 0 & 1
09:10 - the problem is the computer thinks that
09:14 - when we're dividing two integers which
09:16 - remember have no decimals that it wants
09:18 - to give an answer that's also an integer
09:20 - which means it's going to give us zero
09:22 - every time so what we need to do is we
09:24 - need to tell the computer hey we don't
09:27 - actually want this to be an integer we
09:28 - want the decimals we do that by making
09:30 - sure at least one of the values of the
09:32 - division has a little dot at the end of
09:34 - it and that's what you can see there in
09:36 - the code have this new value called read
09:38 - value which is a range from 0 to 255
09:40 - which is ready to be written to our led
09:43 - so let's do that
09:44 - here is our code to push it out to the
09:47 - led it's called an analogue right and
09:50 - it's gonna write a value from 0 to 255
09:51 - out to that LED so I done analog right
09:55 - on my red pen because it's the red value
09:57 - I want to push and what am i pushing
09:59 - well I'm pushing the right value which
10:01 - is now a number from 0 to 255
10:04 - well what about green and blue well not
10:06 - super important but it should be noted
10:09 - that let's keep them at zero for now so
10:11 - that we only see red when we turn our
10:13 - dial on our LED so we should still write
10:15 - our values note to those so it's going
10:18 - to be pretty much the same code where
10:21 - we're going to do analog right for green
10:22 - and an analog right for blue all right
10:25 - so now we've got the code in there
10:26 - that's going to let us make sure that we
10:29 - have a zero value in for green and a
10:31 - zero value in for blue so the only thing
10:33 - that should be happening is our code is
10:35 - as we turn our potentiometer our code is
10:38 - going to recognize that value 0 to 1024
10:40 - using the read value then it's going to
10:43 - take that value and convert it to red
10:46 - value which is between 0 and 255 and
10:49 - then it's going to push the red which is
10:52 - between 0 to 255 the green and the blue
10:55 - which are both 0 out to our board which
10:57 - means as we turn the dial on our
11:00 - potentiometer our LED should basically
11:02 - go from being off it should be 0 0 0 up
11:05 - to a full red brightness of 255 0 and 0
11:09 - good luck getting it working and when
11:11 - you're right
11:12 - for the extension come on back wait
11:14 - you're done already all right all right
11:16 - don't get carried away let's do an
11:18 - extension today how about you wire up to
11:20 - more potentiometers on your breadboard
11:22 - one for the green and one for the blue
11:25 - so that instead of green and blue always
11:27 - being zero which is kind of boring you
11:30 - can now turn three dials or through
11:32 - potentiometers and control the full
11:34 - range of colors that your RGB LED is
11:36 - capable of doing good luck