00:01 - [Music]
00:11 - hallo future loopers looper looper
00:14 - loopers of the world welcome back to the
00:16 - arduino basics tutorial serie in this
00:18 - video we're going to be exploring loops
00:20 - both for loops and while loops and how
00:22 - we can use them to impact our LEDs to
00:26 - start us off we'll look at our wiring
00:27 - diagram that we left lesson 3 with here
00:30 - we have a single led wired up to pin
00:33 - number 8 through a 220 ohm resistor I'm
00:36 - gonna bring in a second led to this
00:38 - circuit so from pin 12 on my Arduino I'm
00:41 - gonna come up to my breadboard row here
00:43 - make this wire yellow then I'm gonna
00:45 - bring over a 220 ohm resistor to bridge
00:48 - the gap on my breadboard and finally a
00:50 - yellow LED with the long leg connected
00:53 - to the resistor and then a wire headed
00:56 - to my ground channel so here we'll see
00:59 - the completed circuit that we're gonna
01:00 - use for lesson 4 where we're gonna start
01:03 - playing around with four loops now let's
01:05 - head over to the code so here we are in
01:09 - the code all I've done so far let's
01:11 - click on new sketch so first I'm gonna
01:13 - rename this sketch this is lesson number
01:15 - four all right now let's get started
01:18 - with our code what are we going to be
01:19 - doing in lesson 4 we're gonna be
01:21 - controlling two LEDs using loops first
01:24 - things first we're gonna set up some
01:25 - variables for the pins that we've
01:27 - plugged our LEDs into there we go we
01:32 - have variable setup for green pin and
01:34 - yellow pin we show that this variable is
01:37 - linked to eight cuz that's where I
01:38 - plugged in my green LED and yellow pin
01:41 - is linked to pin 12 which is where I set
01:43 - up my yellow LED on my wiring diagram
01:45 - now we're gonna jump into our setup
01:47 - function for the code that's only gonna
01:48 - run one time in here we need to set up
01:52 - our LEDs as output pins
01:55 - you'll notice that when I do this I use
01:58 - green pin and yellow pin as opposed to
02:00 - the numbers eight and twelve and this is
02:02 - so that if I ever needed to change my
02:03 - wiring for whatever reason I would only
02:05 - have to change it once at the top of my
02:06 - file as to which pin it's plugged into
02:08 - and the rest of my code would remain
02:09 - flexible next because we're going to be
02:12 - using the serial monitor to help us
02:13 - understand what's happening we're going
02:15 - to set up our serial so our serial is
02:19 - set up and ready to be used in our
02:21 - function now it's time to jump down to
02:22 - the loop function as you know the way
02:25 - Arduino is work the set up function will
02:27 - run one time and the code inside the
02:30 - brackets the loop function will run
02:31 - repeatedly repeatedly repeatedly over
02:33 - and over and over again until the
02:35 - Arduino no longer has power what we're
02:37 - gonna do is within the loop function
02:38 - we're actually gonna create our own
02:40 - loops that will run as many times as we
02:43 - need them to so we're gonna talk about
02:44 - two different kinds of loops the first
02:47 - kind of loop we're gonna talk about is
02:48 - called a for loop so I'm gonna type in
02:50 - the code and then we're gonna go through
02:52 - it let's look a little bit what we have
02:58 - creating a for loop that will loop four
02:59 - times now I chose four times for this
03:01 - particular lesson obviously that's
03:03 - something that we can change as well for
03:05 - the yellow LED that's where we're gonna
03:06 - start it's this line of code here that's
03:08 - important this is the initialization
03:09 - statement for the for loop let's go
03:12 - through it one step at a time
03:13 - for with regular parentheses wrapping
03:16 - around the whole rest of a statement
03:17 - that indicates to Arduino that this is
03:19 - going to be a for loop we start off with
03:21 - an initial value so we have to have some
03:24 - type of a tracking variable that helps
03:25 - us understand how to loop so I start by
03:27 - creating an integer value which is a non
03:29 - decimal number I call it I and I start
03:32 - it at zero all right so this says we
03:34 - create an integer called I that starts
03:36 - at zero and we have a semicolon this
03:38 - indicates we're ready to move on to the
03:39 - next condition the next condition is
03:41 - called the end condition this is the
03:43 - thing that's going to make the for loop
03:45 - stop looping and it says continue to
03:47 - loop as long as I is less than four as
03:51 - long as I is less than four the code
03:54 - inside of my loop will continue to run
03:56 - then we say do you want something to
03:58 - happen after each loop so after each
04:00 - execution of the for loop I want I to
04:03 - iterate by one we do this with I plus
04:05 - plus and this means the value of I will
04:08 - increased by one after each time the
04:10 - four loop executes before we do anything
04:12 - else let's just watch what happened well
04:14 - I'm just gonna put in a serial dot print
04:16 - line I statement and this way when I run
04:18 - it I can just see what's happening
04:19 - inside of my loop see if you can guess
04:21 - what you think is gonna happen even
04:23 - though I know it's not the code I'm
04:25 - going to use I still need my Arduino
04:26 - plugged into the computer at this point
04:28 - once my Arduino is plugged in all CD
04:31 - Arduino show up at the top I can push
04:32 - this code out to the Arduino now I know
04:34 - that this isn't the code that we want to
04:36 - light our LEDs but it's gonna help us do
04:37 - some debugging and understanding what's
04:39 - happening inside of our loop now that
04:41 - the codes pushed out let's go to the
04:42 - serial monitor and have a look it's a
04:45 - bit chaotic but what we see is that it's
04:47 - the number zero one two three repeating
04:49 - over and over and over again so why is
04:52 - it repeating so many times if we only
04:53 - wanted it to repeat four times
04:55 - well that's because this loop might only
04:59 - run four times printing the number zero
05:01 - one two three but remember this loop is
05:04 - inside of my loop function which is
05:06 - going to repeat forever so once this
05:08 - finishes running four times my loop
05:11 - function ends starts over and this whole
05:14 - four loop starts anew so hopefully that
05:16 - helps you understand a little bit what's
05:18 - happening in there let's add something a
05:19 - little more interesting and let's get
05:21 - our LEDs involved here so let's put in a
05:23 - digital write a delay a digital write in
05:26 - the delay just like we would typically
05:27 - do to blink an LED so there we go
05:33 - and that's code we should be familiar
05:34 - with it's gonna blink the LED on and off
05:36 - for one second so what should happen in
05:38 - this loop is four times our yellow LED
05:40 - should blink on and then off let's have
05:42 - a look and see if it actually works
05:44 - what we'll see if we did it right is
05:46 - actually a yellow LED that's gonna keep
05:48 - blinking on and off for one second
05:51 - intervals it's not gonna stop after four
05:53 - because it's inside that loop function
05:55 - so it's gonna keep blinking on and off
05:57 - repeatedly we'll have to add in a little
05:59 - bit more code so we can see that
06:01 - separation a couple of quick notes about
06:03 - the for loop we can change these
06:06 - parameters as to when the loop is going
06:08 - to stop executing we can change the
06:10 - iterator how fast is the value going up
06:12 - is it going up with a multiplier with an
06:14 - addition is it going down with a
06:16 - subtraction all of these are up for
06:18 - modification we can also use variables
06:20 - in place
06:21 - these numbers to give us even greater
06:23 - control over how something loops so this
06:25 - is just a very brief introduction to the
06:27 - structure of a for loop in order to look
06:29 - at the next type of loop we need to
06:31 - first create a variable and the next
06:32 - type of loop is called a while loop and
06:34 - it's very similar to a for loop except
06:36 - that we have to manually control the
06:39 - variables and the iterations it's only
06:42 - gonna manage the condition for us so
06:44 - I'll show you what I mean
06:46 - what I've done here is I've created a
06:49 - variable called J which I've set to 0
06:51 - and you'll notice I've done this myself
06:53 - this is not included in the while loop
06:54 - statement then I start my while loop all
06:57 - I put inside the parentheses is a
06:59 - condition of success J is less than 3 as
07:02 - long as that is true the code inside the
07:04 - while loop will run so let's do our
07:06 - green LED and let's do another blink
07:09 - code inside my while loop now I have my
07:13 - digital write for my green pin my delay
07:16 - my green pin my delay this looks
07:18 - beautiful I wonder what happened if we
07:19 - push this code out right now let's try
07:22 - it and see what I'm thinking is we're
07:23 - gonna get the yellow LED blinking four
07:25 - times from our for loop and then our
07:27 - green LED is gonna start to blink now my
07:29 - green LED just started blinking but
07:33 - uh-oh it's not stopping after two blinks
07:35 - in fact it's not stopping at all let's
07:37 - see if we can figure out why that is if
07:39 - we trace our code we enter our loop
07:42 - function our for loop function begins
07:43 - this code runs four times when it's done
07:46 - running I reach this point in my code I
07:49 - now create a variable set it equal to
07:51 - zero and I check while that variable is
07:54 - less than three which it is run this
07:56 - code until such a time that J is not
07:59 - less than three let's see here's the
08:00 - problem nowhere in this code does J get
08:02 - changed in value which means J is never
08:04 - going to be bigger than 3 so J is never
08:06 - going to cause my while loop to stop
08:09 - this is where I said we are in charge of
08:11 - manually controlling the variable and
08:13 - the iterator if I add in the line J plus
08:16 - plus with a semicolon after it runs my
08:18 - blink of my LED it's going to increase
08:22 - J's value by 1 and that will let it run
08:24 - then it will end then the loop function
08:27 - will end and the whole thing will start
08:29 - or let's try that so there's our yellow
08:32 - LED blinking 4 times 3 and
08:35 - four and now our green lady should leave
08:37 - three times one two three and if we're
08:42 - right it goes back to yellow hey it's
08:44 - working what happened is our green pin
08:47 - is now blinking three times for J equals
08:51 - zero J equals 1 and J equals 2 so we are
08:55 - now using loop structures to help
08:57 - control the way that our lights are
09:00 - blinking I'm gonna add a few comments
09:01 - into the code now and then after I'm
09:03 - done that pause the video and take a
09:05 - second just to make sure that you
09:06 - understand what our code is doing so
09:15 - you'll see that we've got some comments
09:16 - in there now feel free to look them over
09:17 - if you feel that you're still a little
09:19 - confused as to how the loop structures
09:21 - actually work great job on the main
09:24 - lesson now let's have a quick look at
09:26 - the extension so in the extension it's
09:28 - gonna ask the user how many times they
09:30 - want the yellow and how many times I
09:31 - want the green to blink before it
09:32 - actually does the blinks so if I enter 4
09:35 - for yellow and then I enter 3 for green
09:38 - then it should actually blink the yellow
09:40 - four times blink the green three times
09:42 - and then ask the user again so that they
09:45 - can put in their values for the next set
09:46 - of blinks great job with the extension
09:51 - now we're on to the challenge for lesson
09:53 - 4 challenge we're going to get rid of
09:54 - user input and our LEDs are going to
09:56 - start by blinking once each then twice
09:58 - then three times each and this pattern
10:01 - is going to continue indefinitely until
10:03 - the Arduino doesn't have power anymore
10:05 - we're going to do this without any user
10:07 - input so you need to make use of
10:08 - variables in your for and your while
10:10 - loops to help allow these lights to
10:12 - continue to grow in their number of
10:13 - blinks good luck on the challenge and I
10:15 - look forward to seeing you back here for
10:17 - the Arduino basics tutorials and lesson
10:19 - number five don't forget to like this
10:20 - video and subscribe to the channel to
10:22 - stay up to date as we continue to roll
10:23 - out this tutorial series thanks for
10:26 - watching and happy looping looping
10:27 - looping
10:29 - [Music]
10:34 - [Music]