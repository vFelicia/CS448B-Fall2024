hello this is John from Cave of programming. comom this is the eighth tutorial in our series of beginners Java tutorials um and in this tutorial we're going to look at a whole bunch of things I'm going to show you do while loops and we'll look at variable scope and also multiline comments so a really common task that gets assigned to beginners in Java courses is to ask the user to enter some input and enter Loop until the user enters some particular input so for example I could say ask the user to enter a number and then keep asking them to enter a number until they enter the number five for example so let's see how we would do that using a while loop and the first thing I need is um a scanner object and as I said in previous tutorials don't worry too much about this syntax at the moment just get used to typing it um so I've created a new scanner object which I can then use to get input and I'll satly user enter a number and then I will get the number I enter I'll say int value equals scanner. next int and now I want to keep asking them to enter it until they enter the number five so to do that using a while loop I could say while value not equal to 5 do the loop and in the loop I would have to say enter a number again and I would have to get the value again now um you'll notice straight away a problem with this um I'm getting an error here and the reason for that is I've got two int values and you can only have one so I'll get rid of this int because I've already declared this here and I can use it again down there no problem and what I'll also do is I'll say at the end got five because this loot will only finish if someone kills the program somehow or if the user does enter five so I I'll run this uh I'll enter three 8 7 five got five so it works but it's not really ideal because this and this are practically identical and I'm repeating them and I can solve that problem using a do while loop so the first thing I'm going to do is get rid of this code um get rid of this code actually and I'm going to do that with a multiline comment I'm going to comment out the code and a multiline comment in Java looks like this slash asterisk um is where you want to start the comment and then where you want to finish the comment type asterisk slash and I've turned this into a comment so it doesn't do anything and that's really handy for just temporarily um disabling code that you don't want to use but that you don't want to delete but it's best not to let too many of these commented out blocks build up in your program because then it will just look like a total dogs breakfast or a pigs here um now a do while loop um looks like this you have the keyword do and an opening curly bracket and a closing curly bracket and the code that you want to run goes in here and the condition um goes here um so you've got while round brackets and a semicolon and then here I can check some condition for example value not equal to five and as long as this condition is true the loop will go round and round and round now the difference between this and a while loop is that because I'm only checking the condition at the end of the loop there will always be at least one run of the loop um because regardless of what this condition is when my code gets down to here it will execute this stuff then it will check the condition and if the condition is true it will go round again and if it's not true it will just drop out the bottom so here I could have my um sis out enter number prompt and then I might think okay I will get my Val here and I might think that would work so I get the scanner up here that's I still need that and then I come down here and it's a do while loop so I will enter the loop I'll say enter a number and I'll get the number and then if the number is not equal to five I will go around the loop again and I'll keep going until it is equal to five then the loop will stop here and I'll print this got five now you can see there's an error here and that has to do with variable scope because when you declare a variable for example int value or string name or whatever that variable only exists within the curly brackets um in which it's declared in fact only exists within the innermost curly brackets in which it's declared so there are more pairs of curly brackets here for example um containing the main um meth method but it's um it's um basically within this pair of curly brackets and for that reason outside of those it it doesn't exist and it doesn't value doesn't exist here for example where I need to check it so to get around that I need to declare it outside the curly brackets um so I'll put it here and I'll give it a default value and then here I can just use it and here I can happily use it as well um and variable scope is very very important in Java and many other practically all other um programming languages um so you have to always bear it in mind and now I run this program and it says enter a number so I can enter three 7 and when I finally enter five um hey Presto um the loot terminates and this executes um so that's all for this tutorial and in the next tutorial we will look at another another basic building block of computer programs the switch statement um so join me again for tutorial 9 and until then Happy coding