hello this is John from cave of programming comm and this is tutorial number 13 in our series of beginners Java tutorials this tutorial is on classes in Java and it's also gonna be a little bit about objectoriented programming in general so I've got a project in Eclipse as usual and I'm gonna show you the first step again which by now I usually don't show you in the tutorials but I'm gonna just go to file new class and I give my class a name and I give it a name that by ticking this box and I click finish and the reason I wanted to show you that was just to remind you that you're already creating classes in Java because unless you are using some really strange editor that some kind of university course are saddled you with then you will already be creating classes to run your java programs so you know how to create a class in Eclipse you go to new you can right click on project as well and go to new class and just give it a name which the first letter should be uppercase and if you have more than one words making up the class name you know like I don't know red fruit you'd capitalize the first letter of each word in the name just to make it easy to read like that so this would be a class and of course you only need a main method for your for the first for just one class in your program and this is where your program runs from so this is what class normally looks like and it's really important to notice that if you have a classes declared public then this class name must match the name of your file like red fruit the red fruit class must be in red fruit Java but anyway and you're probably wondering what is public and what is a class well what I'm gonna do to kind of make things a bit simpler is you don't normally do this but although you can only have one public class in your file you can have as many nonpublic classes as you like so I'm gonna just create a class here in my main kind of class file just to show you so then you can see everything on one page so to create a class you type class and Java keywords are always lowercase only given a name as I said and I'll call this person so the idea behind a class is a class is a template for creating objects or a classes of blueprints if you like for creating objects and what objects are is well in the real world everything is an object arguably like you're an object your cat is an object your computer is an object and so on and it's the same in a Java program everything is an object and you need some way of specifying what the different objects in your program are like and that's what clusters it's just so like for example a person class could be used to create person objects that would represent particular people but this isn't a particular person it's just gonna represent the idea of a person in general so another way of looking at it is this a class is also a bit like a type like you we've seen int double and string and you can create your own types to order this is a person type and what I'm going to do is well a class and flat matter objects have two kinds of things in them so classes can contain first thing is data which represents the state of your objects and what I mean by that is if you think about yourself as an object you have a state you have a name probably an address you have an age a location you have a mood you have a certain heart rate all of these things or they make up what we call your state they are how you are at the moment and to represent that in Java we put data into our class in the form of what we call instance variables which I'm going to show you in this tutorial but in the next tutorial we'll also look at subroutines which can be part of classes so like here is a subroutine the main method and in here you can type just things commands that are executed one after the other so your java program starts wherever you declare main and it just works through your commands in main one after the other as you already as you already know and so this is actually an example of a subroutine called main which is part of this class app and a subroutine that's part of a class we call a method in Java to use the lingo so this is a the main method I'm going to show you how that works in the next tutorial but in this tutorial we're just gonna look at the data part of classes so I'm just going to finish typing here so the second thing you can have in a class is a subroutine which you call methods okay so let's have some data in this person class so I'll have some data and we call the data in a class instance variables data or state and the reason for that is to to represent data that you want to attach to an object it's really simple you just type variables here like I could have string name so that this person so that people that I create from this person class can have names and for example they could have an age and in my main program now I can use this person class to create particular personal objects or particular people if you like so I could say person I'll give it a name person one I'll say when I say give it a name I mean give the variable that refers to the person the name I don't mean this so person 1 equals I'd say new person so well something here is here I'm declaring a variable of type person I'm in other words it's a variable that can refer to a person object and here I'm creating a particular person I'm creating a person object not an object of type person and now I can refer to the name and age of this person I can say person 1 dot name equals let's say Joe Joe Bloggs and person wonder age equals 37 and I could have another person I could say person person to have as many as you like of course equals new person and when you create the personal object using new don't forget you need these two round brackets here so to break this down once more is the type of the variable that I'm going to create here's a name for my variable but then I'm going to set the variable equal whoops gonna set it equal using this equal sign to a new person object which I'm creating here and to do that you just have to keyword new the name the name of your class and then two round brackets here which are very important so don't forget them and I can get person to I can assign a value to its name as well I can say Sarah Smith and person one age equals 20 oh sorry person 2.8 equals 20 so you can see that I'm accessing these variables up here just by using a dot after the person after that variable name the name of a variable that refers to the person so it's the variable name which I chose here then a dot and there's no spaces and then just the name as a variable that I want to refer to and this actually isn't best practice in Java but what I'd strongly recommend is because by now if you haven't seen this before probably your brain is bubbling out of your ears I'd recommend just typing this too far for yourself just create a few classes you can just create them one after the other here above your main class and give them some data and then just create a few objects on your classes here like this and play about with the data and of course you can access the data using the dot notation in exactly the same way person 1 dot name for example and all this is actually very simple and if it looks complicated believe me then after practicing a little bit it will seem dead simple so that's all for this tutorial and a lot of information to absorb but really it boils down to some quite simple codes as you can see and in its tutorial we're going to look at probably subroutines and that you can have in classes in other words we're going to look at what we call methods which this main method here is an example so yes I strongly recommend just typing this out because if you don't practice what happen is when you get onto methods he'll start confusing methods with variables which I've seen many people too and then you won't know a from B but if you can just practice this a little bit the next bit will be a lot clearer I promise ok so have fun with that and you can find this code on cave of Programming calm please watch the next tutorial too if this is useful and until then happy coding you