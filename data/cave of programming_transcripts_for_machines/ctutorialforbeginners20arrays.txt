hello in this video we're going to learn about arrays in C++ as so so far in this series of tutorials we've seen variables that look like this for example so that's just a single value an array is a list of values contained in one variable and how this looks is like this so let's say we want an array of int that means a list of int variables we type int and then the name let's say values here and square brackets after that and in the square brackets we put the number of items that we want in the array so let's have a an array a list of 3 in seer so here we've created an array of three items and each and item in that list we call an element so each element in that list behaves exactly like a normal variable and to access the elements for example to access the first element and we start numbering the elements at zero so here we've got element zero one and two because there are three items we can tie this value and square brackets again and we type in these square brackets the index the position of the element that we want to access in the list so because we've got zero one two and three the first element is at value zero here and I can set that to some value just like I would with any normal integer and so oh yeah its values that's why I'm getting a little area so now we can output that just like we could with a normal variable so let's say values and square brackets to access it again and we type endler and let's run this program so we get 88 so there are three values that we can access them accessing this array of three elements let's set all of them so we've got 0 1 & 2 let's set these two different values I'll have 1 2 3 & 7 and we can output them all here with C outs so 1 & 2 & if we run this then we get exactly what you might expect so we've got when the thing finally runs here are our values that we've output so you don't have to access them in order or anything like that and this is literally created 3 integers 3 different elements which we can access wherever we need them individually in the program in any order just by using this subscript this array index we call it and let's let's take a look at what happens if I don't set one of the values in fact before I do that yeah yeah let's do that let's just do that so if I comment out this so here I'm setting the value of the second element with index 1 because we start numbering at 0 2 1 2 3 if I now run this program you see for the value and the element at index 1 we go just this garbage value and that's because by default and the different integers in an array or whatever values you have in there it could be doubles or whatever are not initialized so they're not set to anything in particular and if you output them or you try to use them without setting them first you just get whatever rubbish happen to be hanging around in the computer's memory so it's important to set them first so some other things that you can do with arrays let's create another array here let's say we could we could use doubles just for change let's say doubles I'll call this numbers and we need to squirt square brackets and we'll create an array of let's say four values here and one thing you can do is you can initialize this array when you declare it so initializing means actually setting values for your variables here we say what we're declaring an array when you do this you're declaring a variable but you can also initialize it when you declare it and that means actually setting the values in it so to do that we said we we type equals and then we have a pair of curly parenthesis and if you've done any mathematics you might recognize this as being very similar to set notation and then we type the values that we want to initialize this array with in these curly brackets so let's type four point five two point three and seven point two eight point one or whatever and now we can output these so let's just copy this so I'll use this and type numbers zero so we'll output the zeroth one and that should be four point five and if we run this here we get four point five down here just to make this output a little bit clearer let's and let's put in some like a title so array of integers endler I can also put an end ler and at the beginning if I want just to have some extra space there well I won't put it X this is to start the program but I think what I will do is let's just have like a sort of and some equal signs just to underline this title and then let's put this down here as well so here we're dealing with doubles now array of doubles and I'll just auto format that there with the command shift therefore control shift F or control shift F on Windows and I'll have another endler at the start here so you can use endler anywhere where you want to have a newline character output you don't have to have it at the end here so that will just create a proper blank line and let's just run that and see how it looks and yes we've got some nice titles there now so a common thing to do is is actually to iterate through an array and we can do that one way of doing that is with a for loop which is quite a common thing to do so we're going to say here for int I equals naught we usually start a loop counter at 0 and we're going to loop while I is less than the number of items in the array which is 4 so remember this this will loop through 4 values 0 1 2 & 3 and that's exactly what we need for the fully indices in the array because we start numbering numbering at 0 and I plus plus it can be a little bit confusing to beginners that that we start numbering at 0 and and sometimes like results like that first element is that there is a position index 0 instead of index 1 this is sometimes referred to as the off by one problem it's not really a problem it's actually quite convenient but it can be confusing when you when you start programming so we've got this loop here that's looping over all the array indices so 0 2 3 for this array of 4 values and we can output now some stuff let's say the fal elements elements at index and that's output the loop counter here and then some just some punctuation and then I'm going to output the actual element in the array so numbers and I endler and let's see how that looks so if I run this now we got this sub nice little table we've got all the different values here that we set here you can also set elements in the new there's no problem as I said and they behave like just normal variables so I could in its loop you know I could assign numbers to something numbers I equals 77 if I did all that that that would set every element in the array to 77 so here I'm setting the values but here I'm overwriting them one by one before I output them so we can set them or get them in a loop it's not a problem sometimes you want to initialize an array with zero values so let's let's take a quick look at that so I'll type it in this shell icing with zero values and we'll have an array of numbers again I think I say int Center and array of int so I'll say int number array and let's have my I don't know eight values or whatever you can have lots and lots of elements in an array you could have tens of thousands or whatever it's not a problem and to actually initialize that so that each value is set to zero at the start we can just set this equal to a pair of empty curly brackets like that and then it's copy this for loop just to output these values so I'll format that and then we're going to say I is going from 0 through to 7 here so what will loop until I is equal to 8 and then we stop looping and it's output here number already and run this so I want to say that and now we see that we've got all zeroes in this array we've set them all to 0 with these empty brackets not really any need for space in there although you can put 1 if you somehow feel move to do that but it's not necessary I think that's all I want to tell you about the basics of arrays at the moment yeah I should mention that you can have any type in an array basically any type at all you could create an array of strings so array or strings and that would look like this let's say so you can say string Tex and let's are 3 of them and actually yes something else that I should mention it's that if if you initialize your array of a star like this so so here I can put initializers in here in its initial values in here just like I did here but because this is strings now I can put stuff in quotes like that 'banahna and orange let's say and if if you initialize it then you don't have to put a number in the bracket so if you have values in here C++ can figure out how many values there are and it can size your array automatically for you so with with if you initialize it when you actually declare it then you don't have to have the initial size of the array array it's as you do if you're not in not initializing it when you declare it and you can loop through that just with a loop like that it would work just the same and output them let's let's actually do that just just because this unused variable warning that we see oh yeah no it wasn't unused variable warning it was just pointing out that I hadn't got a semicolon in there so let's let's just output this anyway just fun so now it's going to have to go up to three because I've got three elements in there so I'm going to give you a little challenge that you can try in a minute if you want to and and as far as I can think there is one last thing that I want to mention which is actually extremely important so let's say initializing with strings here format so that that looks good so one important thing to be really hyper aware of and is that c++ will not stop you accessing elements that don't exist if we type let's say well it's taken existing array up here we've got inked values three so file use the values array has three elements in it but there's nothing stopping us doing stuff like see out values and three so it's got three elements and the array indices start numbering zero so these are the only value value indices we can use zero one and two they number all the items in this array of three values three is not defined it's not part of the array the so called array value the element at index 3 is it's not even in the erase off the end of the array and some languages like Java would stop you doing that and so that you don't mess your program up but this doesn't you see here I've output and where are we here I think it's this one right so let's just double check bad idea but C++ does not stop you doing this but what we're doing here is it's very bad we're just accessing some some memory that's not being allocated in the program is some basically a random bit of computer memory and accessing it it's just stupid there's no possible reason here why you could possibly want to do that but writing to it is even worse and a common source of books and C++ programs is that you like you for example we could assign a value to values 3 or values 10 or whatever but that would screw up your program and a terrible thing about it as well is that your program won't necessarily crash if we assign something to values 3 for example the program might work most of the time but then occasionally at my crash and I you could even and crash your whole computer doing that I'm not sure if you could actually mess up your operating system I I read a long time ago that it was a theoretical possibility but I'm not sure if that's still true in moderate modern operating systems but in any case what you definitely don't want to do is you definitely don't want to try to work with values though off the end of your array so be really really careful about that C++ won't stop you doing it unlike Java for example ok so and that's that's a sort of briscoe review of arrays and I'd suggest to practice this first try to glaring some arrays and try assigning values try using those values and output the entire array with an ax loop with it with a loop as I have done in this tutorial and if you want a little bit more practice try to create an array that contains let's say that 12 times table so 12 24 36 and so on start with 0 and go up to 12 times 12 so that's going to be 13 and from values in your array and use a loop first to initialize the array with the 12 times table don't over manually use a loop and then use another loop to display the whole 12 times table see if you can do that so that's it for this tutorial and until next time happy coding you you