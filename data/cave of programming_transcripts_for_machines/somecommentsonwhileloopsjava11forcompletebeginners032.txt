hello in this video i just want to go over the this basic while loop a little bit more so i'm going to even i think repeat a little bit of what i said in the last video because this is really an important topic now hopefully you've tried out this code it's really important to do that and hopefully you've tried the little exercise i gave you to make the loop execute exactly five times instead of 10 times in this case or may execute some particular number of times of your choosing it is only with typing it repeatedly that you will gradually become familiar with it and yes we'll be explaining everything that happens here and you'll gradually come to understand all the all the individual elements of it much better than you currently do but even so it's it's important to type these things out um to sort of that will really help you remember them and effectively you've got a sort of recipe here so that if you want a loop that executes a certain number of times you know what to type and then um you don't even necessarily have to understand it but eventually certainly you will um so as we've seen uh we've got this while loop and it's going to execute this code block repeatedly or it it might not execute it at all if the while if the loop condition here is never true this will never get executed but typically we're going to execute it at least once and probably several times that's the point of a loop and after the while loop is finished running your code your code block then whatever statements are below it's going to carry on your program will carry on executing those and we've seen that to actually terminate the loot we start with a variable declaration and we assign a value to it typically zero and then usually what we do or perhaps most often is we say run this loop as long as that counter is less than some value so if i were to put five here this would execute this code block would execute exactly five times and um the reason is that uh well it's the counter starts off at zero and then this would be true for the values uh one zero one two three and four remember we're incrementing the counter increasing the value of it every time we go through the loop when counter is equal to five it would stop this is a little bit confusing because we're saying while counter is less than five and and yet um somehow the loop executes exactly five times and the reason is that we start at zero so uh we it executes for the value zero one two three four instead of as you might expect one two three four five uh so that's that's just a little bit confusing but basically if you want a loop that executes you know 63 times you'd put 63 here so it's pretty simple it's really important to type out this even a few times if you can be bothered try to type it from memory or by looking at the code as little as possible until you can actually write a loop yourself that's a good thing to do if you feel like looking at looking at it doing it i should say because um as i've mentioned a lot of learning just occurs with sort of almost like muscle memory just by typing it again you've got a little little recipe here for how to execute a loop a certain number of times and i know at this point if you're new to programming you're going to probably still feel a bit confused uh quite possibly if you don't that's great but it would be normal to still feel confused we're going to be looking at all the different elements of this loop in more detail and in other contexts so you'll become familiar with them but even if you do feel confused by sort of learning this as a little recipe then you've got something you can use and then you can improve your understanding of it as time goes by okay uh so one important element of this is that we must increment or in other words increase the counter as we go through the loop otherwise it otherwise this will never be this condition will never be false and the loop will go on forever we have to remember to increment it increment just means increase usually by one and there's also decrement which means decrease by one and we're going to be looking at those in this case so we've got this expression which as i've noted previously can confuse beginners because it looks a bit like a mathematical equation expressing equality it looks like it's saying counter is equal to itself plus one that's not what it means at all it's really important to realize that in java and a number of other programming languages a single equal sign doesn't express equality it expresses assignment it's the assignment operator and with the assignment operator is it's typically best to look at the right hand side first and work out what that is going to amount to and then that's going to get a sign to whatever variable is on the left hand side so in this case we take the variable of counter whatever it happens to be at that moment we add one to it and then we assign it or we store that value in this variable on the left hand side which also happens to be counter but that doesn't cause any problems so it's like we're taking a value of counter adding one to it and but that doesn't actually change counter this bit doesn't change counter you just you're just using the value of counter and adding one to that and that's kind of stored in a computer's memory temporarily it's it's this assignment that actually takes that new value counter plus one and then stores it back in counter if you are still confused don't worry that's normal uh your confusion will gradually clear up i one thing i noticed was that there's a um with eclipse i've been using um working sets which i don't i don't use that much to be honest but i thought it would make things less confusing here when i create a new project uh it doesn't it doesn't seem to automatically add it to the working set i think that's a little eclipse bug maybe it won't happen in your version you know because when i go to new java project there's an option there to add project to working sets and the one that i'm using is selected by default but even so i'm finding that my project ends up invisible to see it i can click this little down arrow go to window working sets then i see all projects and if i don't do like if i just stay on the working set i'm in what i've what i'm finding i have to do is click the down arrow go to um uh let's see yeah go to edit active working set and then i can see the project i've created and i can add it to my existing working set the one i'm using at the moment the active one uh so you you hopefully won't have that eclipse bug but if you do if you if you're creating projects and they don't appear click the down arrow and go to edit working set and just add it with the add button here okay we'll leave it there for this video and what we're going to do in the next video is look at various ways of incrementing variables because it's such an important topic we're going to be using it over and over again and um gradually i'm going to introduce you to things like operator precedence but sort of bit by bit this is a complicated topic and pretty soon we're going to get on to looking at other fundamental building blocks of computer programs like the if construct and uh other types of loop this sort of thing okay so until next time happy coding