hello in this video we're going to take a look at getting input from the user so we're going to take an important step and actually make our program interactive so to do that I'm going to use a class called scanner so at the moment you still don't really know what a class is but we do have we do have at least one well we have a couple of examples of classes here we've got AB and that's a class that we're creating ourselves we've set a public class app we've created an app and we've also got a system here and we can recognize these because they have uppercase first letters these are actually classes and you'll find out what a class is later on we're going to use another class in this video called scanner so I'm going to write something that's going to look quite cryptic but if you type it out a few times you'll get used to using it and you'll gradually come to understand it as you go through the course as with many other things so after the opening curly bracket of this main method I'm going to put a couple of blank lines so I'm gonna write scanner with an uppercase s scanner with a lowercase s equals new scanner two round brackets and a semicolon it's the capitalization is very important here you have to get it right and between these two round brackets I'm going to type system capital S dot in and we've still got an error at the moment now that's because I'm using this scanner class which is part of Java it's part of the JDK Java development kit but it's in a it's in a package and my program doesn't know how to find this package so to tell it where to find scanner I'm going to use a shortcut key so on the Mac I'm going to do command shift o or on the windows ctrl shift o so I hold down if I was on Windows I'd hold down ctrl and press shift on Mac command + Shift and then press o the letter o o stands for organized imports and it brings up this dialogue box and I'm going to select this Java dot util dot scanner and click finish and what that does is all it does is it adds this line at the top of my program after the package statement it adds import java.util.scanner and that's saying when we say scanner in the program we mean this scanner and we're going to use this scanner and it's in the java.util package so this what our packages in a class will become clearer to you in time from for the moment I'm just kind of trying to get used to the terminology let's take a closer look at this line looks a bit cryptic scanner here is a class and we can recognize it because it has an uppercase first letter and s so let me give you a little question here we're already working with two other classes in this one program and maybe try to maybe pause the video if you feel like it and see if you can figure out where those two other classes are that we're using on the basis of what I've just said okay so now maybe you found them or maybe you don't want to pause the video what I'm going to tell you so we're defining a class of our own here called app and that's got a first upper case first letter and we're also using the system class here and we're using the system class here it's the same class so there's there's two that I can see already here this here is a variable it's a variable of type scanner now I've given it I've also called it scanner I've given it the same name as a scanner class but with a lowercase first letter some people don't like to do that they may even argue that this is bad practice to give a variable the same name as its type so both are called scanner in this case I'm a fan of it I think it makes it clearer what this actually is I don't mind that they only differ by capitalization but if you want you can call it something different like you know scanning pots or some people even calls that call it input but I find that a bit confusing here because it's not actually input there's a thing that's used for getting input and what we do then is we want to set it to a new we call this an object but we're setting it to a new instance of scanner so a class is kind of like a template and an object is like a particular object made from that template so we're creating a new scanner object here and that will become clearer also later on don't worry about it now but it's as if scanner is a blueprint or a recipe for making something maybe more like a blueprint and here we're actually creating a particular instance of that thing like if we had plans for making a car here in the form of a class and we have a particular car we create a particular actual car by doing new here and then we're saying that scanner is going to scan the system input system dot in and that's going to be input from the console okay let's actually make this work so what we have to do is I'm gonna say underneath this I'm going to say let's maybe have another blank line and write sis sis owl and value in fahren height to convert and let's put like one of these characters a sort of angle bracket pointing to the right to make it a bit more like a prompt maybe I'll have a I'll have a space there as well and I'll also change this from print line to just print so hopefully the user can type directly after this space we'll see how this works so if I run this now it simply outputs some text and if the result is on the same line so it even looks a bit ugly but after this immediately after the system dot out dot print I'm gonna write that's right well let's actually let's change this double Fahrenheit so I'll move it up slightly and instead of saying equals ninetyone I'll say equals scanner dot next float and as soon as I see the right thing selected in this autocomplete I think I press control space sort of instinctively so you've type a few characters press control space and this thing comes up get s gets rid of it so what I want is next float hit return and semicolon let's try that so I'm going to run it and in the console it says enter value in Fahrenheit to convert I'm going to convert 97 very hot hit return and we get 97 point naught degrees Fahrenheit is 36.1 degrees Celsius what happens if you enter something that isn't isn't a floatingpoint value let's run it well it's fine with integers if I write 454 or something it works it can easily convert an int to a float just treat it like a float but supposing we run it I enter something that's not even a number like some random text we get an error and in the next video we're going to look a little bit at that error so for now try this out for yourself and if you're feeling creative even better make up your own program for example make up a program to convert miles to kilometers something like that you can find a formula for it here to convert miles to fill up miles to kilometers you just multiply the number of miles by one point six zero nine so you could write a program that asks the user for a number of miles and converts it to a number of kilometers and it will work very much like this maybe have a go at that and type this out for yourself I was just first or just launched into trying to create a program very similar to this one that converts something to something else but also gets input from the user okay I'll leave it there for this video until next time happy coding