hello this is John from cave of programming calm in this tutorial we're going to take a look at primary keys in my sequel so I'm going to say use tutorial one as usual and I'm gonna say show tables and at the moment I've just got one table in here called users so I'm going to do drop table users because I want to recreate this table now I'll say create table users and let's give this a ID of type int and we'll give it an let's give it a name field I'll just call it name stead of user names is shorter of type text and also let's have email of type text now before I create this table it's good practice in sequin in general to make sure that every table has a think or the primary key and what this is is it's one of your columns which in that column the values in a column are going to uniquely identify each row so for every row in your table the primary key will have a different unique value and it can't be null its usual to make and the primary key a integer type you can make it another type so for example if you had a table with had a column which was like a username column in so you had a table of users and each user had a unique user name important that it's unique you could choose to make the user name the primary key you can't do that with tight text on a counter text being a variablelength feel but later on we will see fixedlength text fields text types that you could use in your primary key but the bottom line is that every table ideally should have a primary key and that's ideally that should be of an integer type because that will give you the fastest results with your queries but it is possible to use text types as we'll see later on so I'm going to make this ID column here which is which is an integer type my primary key so that's going to contain a value that's going to be unique for every row in a database let's say primary key after int yeah so I'll run this now and then if we do a desk users we can look at the type of it's table so we see that the ID field can't be null and that's because primary Keys can't be null in general if you want you can say primary key not null but that's implied by that just the fact that you made it a primary key and we see here that it is the primary key you see that the type is in brackets xi xi doesn't actually refer to the number of digits you can store in there or anything is purely a relatively unimportant display feature which means that if you have a integer in that it's smaller than eleven digits my sequel in some circumstances depending on how you do the query what you do the query with will left pad the integer with spaces I think usually left but it but that's not that's not really important so this brackets 11 is not so important it just somehow sometimes under some circumstances it will affect where the small integers you know get displayed in a field that has the 11 spaces in it or not but it won't truncate your integers or anything like that it doesn't affect how many digits you can store in that I think for an intern any case a normal int you can get 10 digits in that but if you google for my sequel numeric types you'll find more information on that okay so let's see what we can do with the primary key let's say insert into users ID name and email values and we'll put 0 in for the ID and we'll have a name that say Bob and email Bob so I'll just type some nonsense in that I don't know whether this site actually exists but we'll add that in so I'll go ahead and execute that it's executed fine now we could you know happily insert other stuff in that let's insert some other stuff we'll give this a primary key value of one so that that's worked as well we can see those values of course in the normal way select star from users and there we go but now let's try to do some things that won't work so if we go and we let's bring by this query if for example we try to insert some data with a primary key that already exists in that that won't work so if we execute this it won't execute because you can't have duplicate values and the primary key column the point of it is to uniquely identify every row in a table similar similarly you can't have null for primary keys automatically not null so this query this statement won't execute either so the primary key must be you means most often you make it an integer and sometimes I see users doing stuff I mean beginners with my sequel I seen them do things like they'll take the value or another key let's say that had a user name Bob and then they'll append something to that user name which is already in the database to make it you mean like an underscore in some digits this is very bad practice you shouldn't duplicate data in your database because imagine if you had a user with the user named Bob and they had a primary key zero this is fine there's no data duplication but if you had the primary key as a text value and remember you can't use the text type for a primary key but there are text types that you can use which we'll see later so if it was a text type you might think okay I'll do this Bob on the score like this that's not a good idea because now you're duplicating some data it takes up unnecessary space and what if you want to rename Bob what if Bob changes his name then you've got to rename it both here and here which is even more difficult so try to avoid having any duplicate data in your database you need to get all the duplicate data out there of course if you have two separate users and they both happen to have the same name that's not considered duplicate data this is the unique name for each user it's just that they happen to have the same name but there again if they do have the same name you can't use their name as a primary key because the primary key really must have duplicate values in it the point is just that you don't want to repeat data in your database so you don't want to have the name of one particular user repeated in two places but if two people had the same name that's fine as long as you're not trying to put the same name of two different users in a field where you can't have duplicate it's like a primary key so anyway the way to get to grips with this is really just to play about it a bit so do try this create a table with some columns in it give it a integer type primary key insert some data in there and then check that you can't insert duplicate values for the primary key and checking you can't insert null values for the primary key because even if this does seem complicated to you at first just by typing this stuff out it will start to remain in your head and it will start to become understandable even if you get to a point either now or later with this course where you're struggling typing this out and actually singing work is really the key to understanding that ok so until next time happy coding