hello this is John from cave of programming calm in this tutorial this is another video from C++ for complete beginners I'm going to look at let's start looking at variables in this video so variables are one of the fundamental building blocks of programming languages and we're going to just start looking on them here so I'm going to create a new project and hopefully you typed in this for yourself and you tried about putting different bits of text in the ways I showed you in the last video because that's that will be great preparation if you've done that so let's go to project no sorry let's go to file new C++ project and let's give this a name of variables and click finish so we've got a new project here and actually what I meant to do was still eat that so I delete it I'll say I want to delete the project contents on disk as well because what I really wanted to do was use the basic project template so new C++ project HelloWorld C++ project variables click finish and there we go I used to record videos if I made a mistake but I realized that everyone's making the same mistakes so if I make a mistake sometimes people are sometimes happy because they made the same mistake ok so anyway so we've got this main program I'm going to delete this C outline here and just hit return a few times so we've got some blank lines we've got some space to work in here and so we've seen that you can type stuff like C out Chevron and in quotes hello and then after the double after the closing quote Chevron endler that's basically what we just had a minute ago and if I select the project go to project build project and click run and yes I want to say that and it says hello now this is a bit of text and in the programming lingo we call two bits of text strings so this is a string and we say this is a string literal meaning it's the actual value of a string it's not something that can change it's a it's an actual string a little literally a string a string literal and but often in programming we want values that can change that can be added together that can be used later in the program and so on and for this we need variables so I'm going to type something here and it's going to look if you've never seen it before a bit mystifying but I'm going to explain it so I'm going to type int number cats equals five semicolon and what this is doing is it's actually allocating a bit of the computer's memory is setting aside a bit of the computer's memory to store a value in to store actually an integer value an integer is a number that doesn't have a decimal point in it basically like five or 369 or whatever so I've written a keyword this is a keyword int and you know it's a keyword because your IDE will highlight it in a particular color so here in Eclipse sort of I don't know what is it mobile dot pink I'm not sure but it's highlighted in this brownish pinkish color along with things like this so these are all key words in the C++ language C++ doesn't actually have all that many keywords you'll be pleased to know what's control said yep okay so I so int means allocate me some memory for storing an integer then we've got space and then we've got the variable name now this is something that I've made up as you might guess the cats and notice the way I've written it so there are two words in this variable and it's important to give variables descriptive names they won't always they won't always have multiple words in them but if they do you need to differentiate the words from each other somehow so one way that people often do this is they use underscores so I could could have type int number underscore cats equals five that's the same thing but what I've done instead is called camel casing for some reason where we made the first letter of each subsequent word after the first one uppercase and you have to choose one of these styles and it doesn't matter which one you choose for your variable names but stick to it consistently in your program whatever you do don't mix this kind of thing with this kind of things it looks really ugly so so your variables they if they have names of more than one word either uppercase subsequent words or separate the different words with underscores so I've just made this up it's just made up of normal letters and you can also use numbers in variable names you can't start them with a number so I can't put 6 there as an arrow you see there warning thing here but I can't put 6 at the end see you can use numbers in variables just not at the beginning so they should be made up of basically normal letters on the scores and numbers were necessary and so I've set aside and a bit of memory suitable for holding an integer I've labeled that bitter memory with the label number cats so it's just like going up to a bit of your computer's memory and sticking a physical bit of paper on it and writing number cats on that you labeled that bit of memory and that equals five here says and now put the value five into that memory and so that's that's what I'm doing there allocating a bit of memory giving it a label which I've made up and sticking the value five in it and this is called a variable because it can actually change so let's see what we can do with this between double quotes here with my C out I'm going to type number of cats semicolon space so this is all including space it's just some text there's nothing special about that I could type anything I wanted in there and then after that I'm going to put another Chevron and I'm going to put number cats in there and now so what we've got here if we break it down first were outputting this text number of cuts and colon space then we're out putting the value contained in this variable this bit of memory which is 5 and then we're outputting a new line character to two like make make them any any subsequent stuff that we output appear on a new line after this and we're also flushing the buffer so we're telling our operating system I'll put this text now don't save it up and do it later and no so I've got that the tub the tap here as well I've indented all these statements one tab which is really important so let's select the project here let's let's just run it and see what happens and it says number of cars 5 and we can have multiple variables in the program so on the next line here we could say int number dogs and there's nothing special about this text except that it followed the conventions that I explained earlier with regard to naming but we could call it anything I could you know call it that if I wanted but you've got to give your variables descriptive names so that you know what they are so I'm going to call this number dogs this is the number of dogs that I own I don't actually own any dogs but it you know just imagine I'm going to say equals seven so I've got five cats and seven dogs now let's pop underneath here see out number of dogs and then a chevron and number dogs Chevron and endler and we should see exactly what you expect so let's run the program yes and here we are number of dog seven now we can also do stuff like adding these together so I could say here see out whoops we need a kind of chef on points towards the sea out if you like and let's say here between double quotes total number of animals and then after the closing quote Chevron and let's say number cats plus number dogs and then let's put a chevron in and endler like that and let's run that so it's going to tell us it's gonna as you as you can guess it's going to add the number of cats the number of dogs and now we've got a total number of animals 12 so it pretty simple and but another thing that we can do in variables is we can reassign the value that they hold that's why we call them variables because they change they vary so let's uh put some text here see out new dog acquired quiet I dispel it quiet yeah it's like that new dog quiet and Chevron endler and let's stay here number of number dogs equals number dogs plus one I'm going to explain that in just a second and then its output see out new number of dogs a chevron and number dogs chevron if you feel that you're losing the plot a bit here it'll become a lot clearer when you type out yourself believe me we do need to practice this let's run this just see what happens firstly so it says now new number of dogs is eight so before it was seven and now it's eight and so what what happened here and what happened was this expression is read from from left to right no from right to left I suppose and so what we do yeah what we're doing is we we take the existing number of dogs and we add one to it and then we take that value so reading from right to left take that value and store it back in number of dogs so the equals sign here is kind of like an instruction that says store so and from from right to left we take number of dogs we add one to it and we store it back in the original bit of memory that we've labeled number dogs remember it's just a label bit of memory they can't that can contain the value and we then output that value down here you can add variables together too so like I could have added I could create one called number of animals int number animals let's say animals equals number cats plus number dogs and let's just change that number animals and I could output that I could say instead of putting the plus here directly in the see out statement I could say here number animals and that would also work let's run this so it says number of animals 12 so sewing here I've added two variables together I've added the value stored in the variables together so reading from right to left I've got the number of dogs so and this is the memory label number dogs and it's got the value 7 in it and I've added it and to the value in the memory location that I've labeled number of number cars and then I've stored that value the combined value here I've stored it in a bit of memory which I've allocated here suitable for storing an integer I've stored that combined value in a bit of memory which I've labeled number animals and here I'm outputting that value that's stored at that memory location so if this is the first time you've seen this and it's the first time you've thought about this it's going to seem pretty complicated all this talk of memory and you know adding value stored in memory locations and variables and stuff but programming is like learning a language like what a lot of people do when they start learning is they try to analyze everything in my need detail the write loads of notes they agonize over the precise meaning of everything but what you really need to do what's really more important is just to practice practice typing it because when you type the owl and somehow it's like learning a human language like learning Italian if you're not Italian or something as you practice speaking it and using it and you get to the point where when you need a particular bit of language it just comes out of your mouth you just know automatically what to use and like if you're if you're if you're Italian and you speak Italian you don't spend your time agonizing about Italian grammar you don't know the rules of Italian grammar even and necessarily you just speak it automatically and it's similar with programming it's really important now to go away and practice this type out a program like this one if you want start by typing this exact program but type it all out yourself and then try changing it great variables that you've named yourself put different values in them try adding them together try out putting them with C out see what happens so make up your own little program where you've got some variables and you've got variables that you're adding together and you're outputting them with C out it's really really important that you do that because just watching the video you won't learn C++ it's all about practicing it but and I hope you've basically understood roughly what's happening and when you type this out a few times you know typed out at least once and play around with it a little bit and when you keep doing it slowly this will start to seem intuitive and obvious even if it seems impenetrable now but it's vital that you do type it for yourself and get it working okay so that's it for this tutorial and until next time happy coding you