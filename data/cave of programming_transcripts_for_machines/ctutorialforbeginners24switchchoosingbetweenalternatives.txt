hello this is John from Cave of programming. comom in this tutorial we're going to look at the switch statement in C++ and a switch statement lets you choose between um various possible values so it's uh it's basically the same as if Els if else if else it's that kind of thing which we've seen before but um it's kind of a more elegant statement and it used to be the case at one point that switch was a bit slower than if uh else if else but now these days I believe it's highly optimized and is um often faster than um then using an if else else if type thing uh I'm not really sure about that and usually these kind of tiny differences in speed are not going to make any difference to you anyway but it's it's always nice to know that something's fast so let's uh declare a value here let's say int value equals let's say five and now supposing we want to uh take different actions depending on what that value is so the value could be like the results of some kind calculation in the program or it could be taken from user input so we're going to type switch and then we're going to have round brackets and we're going to have curly parentheses after that uh so this is a pattern that we've seen many times before and in here we're going to put the value the value that we want to switch on uh so we're going to examine this value with our switch and take different actions in here depending on what what its actual value is so we're going to type some case statements here I'm going to type case and then we're going to put a literal value in here four and then a colon I'm going to hit return and under that I'm going to type break semicolon and we'll see we'll see how this all works in a minute and in here I'm going to type c out value uh value is four value is is four and let's put a endler there and we can have multiple case statements here so we're only going to take this action if the value is four let's copy that and let's put another one in you can have whatever you like of course let's say five value is five let's have one more um six and let's say value is six I'll just format that with the auto formatter and finally we're going to have have default colon and under that we're going to have see out un recognized value endler uh so what what's going to happen here is that switch will examine the value and it's going to look at these case labels it's going to go down them one after the other and as soon as it finds a match it's going to execute this code underneath the case label and um and then then the program ends if none of these are matched it's going to do whatever specified in the default and it's going to say in this case unrecognized value so let's run this and it says value is five so it's executed this one if we change it to four of course we're going to get it's going to say value is four if we change it to something that isn't matched by any of these case labels let's say eight we're going to execute the default at the bottom there it's going to say unrecognized value uh so again this this you sort of have to type this out a few times yourself to really feel comfortable with it it looks a bit ferocious when you first see it but it's really not that bad it's just a question of uh remembering what bits tight were and not forgetting vital things like the colon or the or the brakes or whatever we don't have to have this default value in here if I just get rid of it temporarily and we run it then it's just not going to do anything because none of the case labels are matched but often you want um a default for the case where U none of your case labels are matched now we can um we can only use certain types of values in there um basic we haven't seen the um the enumerated types so far um so all we can really use in there from what we've seen so far is like integer type values we could the Char in there that shouldn't be a problem let's see what that does let's run it so it it still works if we set Char to 4 because although Char is intended to store byes or that's that's one of its uses value is four um Char Char is excuse me actually a integer type um as is you know long and that sort of thing um you can also missart these Brak State statements but it's usually a very bad idea because what's going to happen is um the switch is going to execute stuff it's going to as soon as it matches a case it's going to start executing the stuff below it and if you don't put break in uh break will actually um it will actually bom out of the switch it will actually leave this uh closing curly bracket and execute the stuff afterwards if you don't put break in you'll end up executing other other case statements so let's try this so case 4 is going to be matched and we haven't got a break here it's probably going to warn us about that let's go to project build project and run this so we've got value is four and value is five it's executed this and then it's executed this and then it's got to a break and then it stopped executing stuff so although this is legal C++ and I have seen it used in production code um it's it's very uncommon because you almost always want the break in there and it's a bit confusing um if you don't have breaks in there so that they are important to remember we don't need one here after the default cuz that's the last item in the list anyway uh you also um beginners uh sometimes um try to do stuff like this let's say number equals 4 and they try to put number in here you're not allowed to have a variable as as one of the cases in your switch if you feel strongly that you do need that then you are um you're doing something kind of wrong and somewhat confusing and you want to rethink what you're doing uh there there's no need to use uh variables for your case labels and they're not allowed but you can use constant values so if you wanted to give each um value some specific name you could do that let's say const there so I've made this constant and now this is allowed if I save that and just build it we should get rid of the warnings here and it should execute as before so you can use that but you can't use variables constant is basically the same as typing a literal as far as the case is concerned let's let's get rid of that just put this back because this is um this this looks good okay um I think that's all I have to tell you about this uh yeah the the important things that to remember to break don't try to use variables for your for your case labels and it's not going to work with a string either it's only basically going to work with integer values from what we've seen so far at least if you want to practice this I'd suggest create a little program that outputs a menu and each item in the menu is numbered so just a bunch of rows of text and and then ask the user to pick a value pick a entry in the menu by typing the corresponding value and then switch on the value and then take different action uh depending on what the user has entered and it's always good to get creative if you want more practice it's it's really really really good to like make up your own little programs try try putting switches in loops and things like that um try combining it with previous stuff you've seen and uh try to write some you know even more complicated program and see how far you get that's that's fantastic practice okay so that's it for this tutorial and until next time happy coding