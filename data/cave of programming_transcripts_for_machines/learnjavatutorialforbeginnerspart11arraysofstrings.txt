hello this is John from cave on programming calm welcome to tutorial number 11 and this tutorial is going to be on arrays of strings in Java I'm also going to show you a another way of iterating through arrays in Java and this tutorial is going to be kind of divided into two halves and then the first off I'm just going to give you the lowdown on arrays of strings and then the second half will dig a bit deeper into values and references arrays of strings in Java work pretty much the same as a race of integers I can type string array words for example equals new string array that's elf let's say three elements in this array I can set the elements by saying word zero equals hello words one equals two and the third element will have index two because I started numbering at zero you and I can access those values same way I could say for example words two which will be you so if I run that I get you down here and the same trick with integers that I showed you with integers and the last tutorial works with strings that is here I'm setting I'm allocating enough memory for three references to strings actually and here I'm actually allocating the memory for each of the three actual strings themselves but I can do all of this stuff stuff in one step by saying string array fruits let's say equals and then I just open curly brackets and I can literally type some strings here as many as I want apple banana / kiwi whatever and and this is basically equivalent to this excelled here I've got of course four and here is three and I want to show you also a new way of iterating through arrays because in the last tutorial we looked at using for loops with a loop index and there's another way of using for loops without a loop index I can create declare a variable here that I want to set to each of the array members in turn I'll call this fruit let's say so it's a type string because I'm going to iterate through an array of strings and then here I put a colon and here I type the name of the array that I want to iterate through and now Java will set this variable fruit to each of the values of this array in turn so if I do is this out I can say fruit and I get all the values in my array so that's basically all you need to know at a basic level about using strings of arrays now I want to tell you a little bit more about values and references in the context of arrays particularly and as I always say the really important thing is just to practice using this stuff and don't stress about their technical details too much but if you kind of listen to what I'm about to tell you and try to bear it in mind it'll help you to understand what's what's going on here so if I declare an int in Java int value equals one two three for example as we've seen already this is kind of enough memory to actually hold an integer and it can only hold an integer it's it's kind of the right size bit of memory for an integer and if I want to set it some kind of default default value I could set it equal to zero let's say but int that works because in is a primitive type and you know it's a primitive type because it's got a lower case letter and start here if I type string let's call it I don't know text this is string is a non primitive type it's a class and the giveaway is the capital letter at the top of top early start of string here and this isn't actually allocating enough memory for a string because how would you know how long your strings going to be and of course you don't this is allocating enough memory for a reference to a string and a reference is just basically an address of some memory so you could think of this as being a bit like a scrap of paper that you scribble down the address of your house on where your house in this slightly convoluted metaphor is the string so this is just the address of your string and the default value for references is is null so null is just kind of like it just kind of means pointless reference nothing it's not pointing anywhere and I can do assist out on that actually I could say this out text and then I get null and this this isn't the string of characters n ull this is an actual special type that means kind of nothing so if I create an array in Java off strings like this if I say string tetes with an S there and of course I need the array brackets here then again this is a reference that can point that an array actually of references to strings so let's say I do new string array I have like two references in myarray then by default Java will initialize each of those to null so I do sysout Tex 0 I'm going to get none again here so this whole thing here is only allocating enough memory for two references to strings it's not allocating the memory for the strings when I say text for example 0 equals 1 here I'm allocating memory for a string and I'm pointing this reference here at this string at this memory which really contains a string and so this is this is a useful thing to begin to get your head around at this stage but as I say don't stress about it because it's something you can absorb gradually as you go along and in the next tutorial we're going to look at multidimensional arrays which you can think of for example as as tables and I hope you'll join me then this will be tutorial number 12 and until then happy coding you