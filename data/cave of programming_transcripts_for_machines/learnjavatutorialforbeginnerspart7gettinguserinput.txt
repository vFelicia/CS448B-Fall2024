you hello this is John from cave of programming calm this is tutorial number seven in the series of beginners Java tutorials and in this tutorial we're gonna look at getting user input so I've got my main program here I've got a main method inside a class and I'm gonna use the scanner class to get user input now the scanner class looks like this so you've already seen the string class this is scanner and I'm going to create a variable that can refer to a an object of type scanner so I'm going to call it input so input is an arbitrary variable name I could call that anything I like I could call it not if I wanted to it makes no difference I'll call this input and and the reason I'm getting an error here at the moment is because I need a statement at the top of the class file that imports the scanner class so that my program knows where to find it and I can either type that myself or I can get Eclipse to do it for me and I could click on this icon here and go to import scanner or my favorite shortcut I could go to I could press ctrl shift + o and eclipse will add all necessary imports for me so I've got this import statement here which must be the first line in your file except you could have a package statement on the first line but we'll look it up in the future okay so I've got a variable here but I haven't actually got a scanner object this doesn't actually refer to anything so I'm going to type here new scanner system dot in and don't worry about this syntax if it's new too because we will we will examine it in more detail later on but basically what I'm doing here is I'm creating a new scanner object and I'm passing it the standard predefined system in input stream object but for the moment I'd suggest you know just practice typing this and to get some user input I I'm going to get a line to start with a line of text and I'm going to store that in a string so I'll create a variable of type string and I'll call it line and again it could be anything and I'll say that equals input dot next line and here I'm going to add a prompt a prompt is just some text that last user to do something so I'm going to say system dot println enter a line of text and by line I mean that the user can enter zero zero or more characters but he or she must then hit the return key and that's kind of the definition of a line and once I've got the line I'm going to say this out control space you entered line so I'm going to tell them what they entered so this here I'm just creating the scanner object then I'm saying enter line of text and then at this point here I'm actually going to wait for them to enter a line and just to make this clearer what I'm going to do is I'm going to put some comments in here now you can put a oneline comment in Java by typing slash slash and then just type some text so I'll say great scanner object and here I'll say output outputs the prom and here I'll say wait wait for the user to enter a line of text and then here I'll say tell tell them what they entered so I'll run this program and says enter a line of text and I can enter anything here my name is John you entered my name is John now we're not restricted to getting just lines of text with scanner for example I could get a number we could say enter an integer which means a whole number and I could say instead of string line here I put to wait for the user to enter something and here instead of string line I'll say int value and I'll say input dot next int extend and if you if you type the first few letters of something in eclipse and press control space you get this autocomplete and pop up and you can accept you can scroll between different defaults with the arrow keys or the mouse and you can accept a suggestion by pressing enter which is really handy sometimes you need to get rid of extra brackets if you've already typed some okay and here I'll say you entered value and if I run that enter an integer 88 you entered 88 this program unfortunately isn't very robust because if I run it and I enter letters instead of an integer it will crash but at least it has Christ in a controlled way by throwing something called an exception which will occur in future and I can also get a floatingpoint value I could say enter a enter a floatingpoint value in other words a fractional value with a decimal point and I can say double value equals input next double say you entered value again there's a little complication here because if you're in the UK or the USA for floating point values you'll be used to typing things like sixty seven seventy seven point four but if you are in summer in Europe outside the UK you will be used to using a comma instead so you'll say 77 comma four and I'm using a actually a Dutch version of Windows here so if I run this program I have to enter for example five comma six but if you're in the UK or the US this is going to be five point six and then when I hit return is actually telling me what I entered in UK u.s. format okay that's all for this tutorial just about if you want more information on the scanner class then just type scanner Java into Google and you can look at the API document and if you want to make your program more robust scanner has a method that will enable you to see if there is an X double or a next int and you can use an if statement to get a line if there isn't one waiting but I will leave that as an exercise for you and in the next tutorial we are going to look at dowhile loops which is just a variation on the while loop and until then happy coding you you