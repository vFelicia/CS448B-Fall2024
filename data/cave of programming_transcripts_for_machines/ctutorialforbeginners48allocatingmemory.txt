hello this is John from cave of programming calm in this tutorial we're going to load up allocating memory in C++ we've already seen in this course some ways of allocating small amounts of memory by declaring a variable or using the new operator to create an object or let's say an integer or something but we're going to look at this in this tutorial of how to allocate a whole load of memory all at once so we've seen before that you can do stuff like this I've got by the way I've got an animal class here and for this tutorial the relevant bits of this are that we've got constructor and destructor that just have C outs in them so that when we know when they're running we've also got a private instance string name and a setname method so an instance variable they're called name so we've seen that you can do stuff like this we can do animal and let's say pointer P animal equals new animal and later on if you do that with new you have to remember to call delete on the pointer later on to free the memory so if we run this now we're going to get animal created and destructor called so that's coming from the constructor and destructor just here we can also do similar stuff even with primitive types like for example int pointer P int equals new int like that and again we need to do delete P int so that will give us a single integer we can set the value of for example by st. P in T equals 8 and we could do C out think point 2 by P ends like that let's just run that so you can use new on basically any type at all what we can also do though is we can also allocate entire arrays of primitive types or of objects let's take a look at objects first so this is creating one animal so it's allocating the memory for that animal object and it's also actually instantiating an object that we could allocate enough memory for this animal object but not actually put anything in that memory not actually have an object in there and this is doing but this is doing both of those things it's actually allocating memory enough to put this animal object in and it's also instantiating the object in that memory so we can use array brackets with new like this so we can say new animal we can put a red break it's after it and put in the number of animals but we want to create let's say 10 and if we if we use these square brackets after the type here after new to say that we want a certain number of of these objects or it could also be a primitive type here like into double we must remember when we delete when the memory when we free the memory by calling Delete on the pointer we need to put square brackets also after delete and before the pointer like that and this tells C++ that we're not just deleting one instance of the object that the pointer points at we're going to free up a whole load of memory that it's pointing up so a whole load of memory blocks of this size so if you have square brackets there you're going to need them here as well although these don't have to have any number in them but this says how many of these objects you actually want to create memory for allocate memory for and instantiate in that memory space so let's run this now and we get 10 animals created and then when we call delete we'll get 10 lots of destructor called down here so we can also do this with primitive types and it's particularly common to use char because if we say char pointer P let's say just Pete man for memory equals new char and in square brackets because char is a single byte we can allocate a specific number of bytes let's say a thousand and then we must remember of course to do delete on this as well so delete P men like that so this also works and it allocates a thousand bytes and we can use this with any type in double absolutely anything that we like so if we actually do this with animal here of course then we could we could move this pointer around in that space to access different animals and there are various ways of doing that we could just use a for loop or something we could do stuff like P animal could use array syntax or say P animal 5 so that's actually the 6 animal in the sequence we've got 10 starting at 0 at P animal v dot speak let's say and that is a method that I created here that outputs the name of the animal so we probably should set it as well let's do that so say P animal 5 dot set name George let's check that that works this is just working with the 6 animal in the array which is at index 5 and there we get here we got my name is George so I'm going to leave it there for this tutorial and I'm going to give you actually a little exercise to do the exercise is to allocate we'll create a class much like animal here something similar to that but as an instance variable of type string and a set method lets you set that string and also some method the less you output that instance variable as well so create a class like that call it person or animal or whatever you like could be anything and then set could allocate an array of 26 of them and then for each object in that array which have allocated using new so I'm calling this an array X is like an array so for each and each object in that memory that you've allocated all 26 of them set the main to be a string that contains a single letter of the alphabet going from A through to Z so like the American or English alphabet and then call the method on it whatever you've created that outputs that string so you can have 26 animals allocated with the new operator and you're going to set the name on each so they're going to be called ABCDE and so on through to Zed and you're going to also output that name with some method you've added to your class to output the string instance variable I'll just make a couple of little remarks I'll just give you a couple of tips on how to do that one thing that I want to show you is that if you want to set a string to a single character we can do it like this we can say here's a character we'll just call it C equals a let's say then we can say string let's call it name and we can use a form of the constructor that accepts that character but it's actually got a parameter before that and first parameter tells you how many of these characters put in the string so if we set this to one that's saying create a string that has one character in it and that character will be a if we put 10 there the string would have 10 A's in it one after the other that's just output that and check that it works so and let's save that and run it and yeah I actually meant to use this yeah we've got the aether but I actually meant to use this child I declared that this let's do that so we can see we've got a string and it's got just the letter A in it if we put like five in there for example would have a string that consisted of five A's let's run this and there we got we've got our string five A's in it and if you create a char like let's remember tries basically an integer type so you can actually increment it like this if you increment the charge you could add some number to it for that matter if you run this because we started with a we've now got B that's because and wherever a is in the table of ASCII characters so no matter what this number is equivalent to if we increment it we're going to get a next character in the set which is B so using those two facts you can create strings with all the letters of the alphabet and use them to set the names of your objects so have a go at that and I'm not going to give you the solution to this but if you do get stuck anywhere then absolutely the thing to do is Google for every every little thing that you get stuck on try to build it up step by step and absolutely don't be afraid to Google for example code for what you want to do and the better you get with using Google the better programmer you'll be because you'll see more and more techniques more and more ways of doing things and gradually those hope you'll gradually remember those and you'll get flexibility with using different techniques so googling it's a great thing to do whenever you get stuck okay so until next time happy coding you