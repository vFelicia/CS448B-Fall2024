hello this is John from Cave of programming. comom in this tutorial we're going to look at um passing values two functions so here I've got the code from the last tutorial and I'm going to start actually by changing this because uh one thing I forgot to do in the last tutorial was rename this function this function that we created uh is um it's called process selection but it's actually just getting user input and the selection is processed down here so I could just rename it by hand but let's uh use an eclipse shortcut which is very handy if you've got a lot of um calls to the same function because you can call them repeatedly that's part of the idea and uh you're not sure where they all are so let's just right click this function select it and right click and go to refactor rename and I'm going to give it a new name so I'm going to call it um type in here get input and you'll notice Eclipse has renamed this for me as well now I'd like to split um I'd like to split this code off into its own function so I'd like main to just consist of three function calls show menu get input and process selection uh but at the moment the problem there is we get the selection here and then we have no way of um passing it to um a function that then process processes the input let's have a look at how we can do that so I'm going to type here void process let's call it process um process selection process input it doesn't really manner process selection and I'm going to take this switch statement here I'm going to cut it like this paste it in process selection and so the problem we have now is that uh the selection variable here which is it's the it's the user input that we get here um from here is not available in process selection and to make it available we can type stuff in these round brackets here so we want to pass an integer to process selection and I'm going to type here int selection in these round brackets and now in the main uh function I can type process selection just as before with round brackets because it's a function call and we need we need um to have the round brackets when we call a function as we have um here and here and here but but now I'm going to just type in these round brackets selection so the changes we've made are just we've we're putting the in integer value that we want to pass into these round brackets here when we call the function and uh we've changed the function here uh so that in its round brackets it says in selection this is actually declaring a variable and uh we call this passing a variable and when we pass the variable we're actually copying the value in this variable here copying it uh into this new variable here so this in selection it's not the same as this again it's a completely different variable and the scope of this variable is these curly brackets while the scope of this variable is these curly brackets so as we're returning we're actually uh creating a completely new variable and we're copying the value of this variable into this variable and they don't have to be named the same either so um we could um call this something completely different let's do that option so if I was writing this program just for myself I'd probably call this and um this and this I'd call them all input uh because um I'm I'm well aware that those are completely different variables but because I don't want to confuse you here I'm going to give them all different names uh so this int option receives the value from uh selection here and um it's it's it's a bit like uh throwing a value down a choot so you can think of this as a chute and here we're throwing the value of this variable down the Chute and here we receive it in the value uh option and option it has the right size to receive that value so we're sending an INT down the shoot so to speak we're passing the function an INT and um the function parameter also has Type int so it can it can receive that value we can copy that value into it uh so now our main function looks really simple and it and it shows you exactly what's going on we're showing the menu we're getting user input here and then we're processing the user input here processing the selection that the user made Let's just try that and check that it works so I'm going to run this and when it finally builds and runs that c selection let's say one and it says searching because it's executing case one here so that's it for this tutorial um in the next tutorial we're probably going to look at passing multiple values to functions but to practice this again I'd suggest taking the tutorial uh the project from the last tutorial and creating this new function try to do it without referring back to this source code but if you get stuck refer back uh but try to do it as much as possible from memory and equally if you've written some other program uh just try to declare a function that um that accepts accepts some kind of variable you could return stuff from functions as well as passing stuff to them so it's not a problem combining this kind of thing with this kind of thing you can do that and in the next tutorial we'll look at passing multiple values to functions so that's it for this time and until next time happy coding