in this video we're going to look at a couple of improvements we can make to this program just using the syntax that we have already seen so one problem is that we've got output statements print statements kind of sprinkled throughout the program now incidentally when we read text from the console that the user has entered we say we're reading from standard in and when we write texts like this we say we're writing to standard out standard in and standard out or we call them input and output streams they kind of streams of data that deal with what happens on a console we're writing to standard out here in multiple places but supposing we wanted to change this program so that for example it wrote the output to a file instead of writing the output to standard out then we have to find all the print statements and change them so it's not a good idea in general to sprinkle print statements throughout your program now if I'm just writing a small program for myself I generally won't worry about that at all but if this was going to be quite a large program let's say or a program that I was Distributing to other people then I probably would think about what I could do and one thing we can do is create a new variable here let's call it status and I could set it initially equal to whatever the default value for status should be so we could set it equal to fridge okay we could say that's the default status of the fridge but if we look at what the default clause is in this if block the default is really fridge is broken so we try all the other conditions first and if none of them work out we say the fridge is broken so really we could say here fridge is is broken like this that's the default and then we're going to check and see if anything else is true which hopefully it is and then we can change these print statements so I can say status equals fridge is too cold and I'm going to do that with all the others I'll just copy that to make it a bit easier let's paste these in and get rid of the trailing bracket now and then finally we can put the print statement just in one place here I can say print status let's see how that works I'll run the program and enter the fridge temperature let's try seven fridge is broken so it works as before as you can see but the advantage is now we've only got got a print statement we've only got some kind of output statement in one place in general in programming we want to try to separate code that interacts with the user what we call the user interface with code that is just dealing with pure logic you can stress about that too much in a small program but in a larger program that becomes an important principle you try to keep the user interface code or code that interacts with the user separate from the other code as much as you can in a large program that code would be in its own set of files rather than being mixed up with the rest of the code but I'm not going to adhere to that in this course particularly because we are going to be dealing with relatively small programs here even so this is an improvement to have the printing to standard out just in one place another thing we could do is we could think about well what happens if for example we want to localize the program to a different local like we want to write a version of the program in Spanish then we've got this problem as before that we've got strings in English sprinkled throughout the code so we could create some constants to deal with that remember a constant is just a variable that we don't intend to change so it's not like temperature where we assign a value to it and then here we're assigning a different value to temperature with a constant we wouldn't do this we wouldn't ever change the value of it and to signal that it's constant we give it uppercase letters now to make it clear that these constants all belong to the same part of my program that they all perform a similar function let's give them some kind of common prefix so maybe f for fridge or s for status or something or even status underscore like that so let's say status uncore broken equals this and then we'll have status okay what else are we going to need here we're going to need status Cod and Status warm I think that's it okay Cold War broken okay so this is going to be set to this I put spaces in they're not necessary but they do make it easier to read if you use kind of nice and consistent spacing and Status cold so we set that equal to this status warm we set that equal to this now here we can use status broken and here so there we can use status C then we've got status okay and Status warm so I put the names of these variables in uppercase letters to indicate that they should be held constant they should be thought of as constants and we've also got status broken down here at the moment but we are going to fix that so if we run this now it's going to work just the same as before but the advantage is we've got all the strings in one place well apart from this one but at least we've got the strings that give fridge statuses all in one place so they're easy to change now if we look at this this else isn't really doing anything useful anymore because status by default is set to status broken right so if we don't do any of these it will still be set at status broken so we can actually get rid of this and it will work just the same as before let's try it so three we get fridge okay minus one fridge is too cold let's try five too warm and seven fridg is broken so from a point of view of maintaining the code this is something of an improvement I would say and if it seems more confusing and even if it doesn't it's worth typing it out writing it out in this form yourself and checking that it does work for yourself so as we go along I want to give you some tips on how to structure your programs and you know what's considered best practice in software engineering and so on but I won't always adhere to them just because we're often writing small demonstration programs here and in a really big Serious Program we could put these constants in their own file so that they really are all in one place and there are other ways of dealing with them other than just setting constants to all of these values as well but we'll look at that sort of thing later on hello you've been watching a free sample from my Python and machine learning for complete beginners course I'm uploading enough videos from the start of the course to get you started with python and machine learning the full course is absolutely massive if you're interested in it please click the link in the description the complete course covers not only basic p python but also some fairly Advanced python even some desktop programming stuff and then goes on to machine learning and artificial intelligence until next time happy coding