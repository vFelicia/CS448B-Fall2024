hello this is John from cave of programming calm and in this video we're going to take a look at command line arguments in node J s so we've seen that you can write use strict like this at the top of your files I mean it just an empty file here which I've called command line J s and you can declare variables like this let that's right let greeting equals hello and you can output stuff you can print it on the console like this console dot log greeting so I've declared a variable called greeting I've assigned a value to it hello and I've printed the value in that variable and I can run this from the command line by writing node and the name of the script it says hello now you can actually output multiple variables or values with console dot log so let's supposing I want to output a name or some text here I can write comma and in single or double quotes a name so I'm going to say hello to myself here hello John if I run this let's try it it says hello John notice there's a space between them although there's no space here that you can see well there is a space there but the thing is JavaScript doesn't take notice of spaces in your code it would take notice of a like a space in your string this may be change this to single quotes for consistency it doesn't matter which you use though all right I like to keep things consistent but when you output multiple variables or values like this it will put it will helpfully separate them by spaces so that they're easier to read now do try this out for yourself and what I want to show you here is that there's a special kind of well it's actually what we call an array Arg V that contains various useful values so let's let's try outputting stuff with ography here so I'm going to write console.log and process don't worry about what processing console and stuff like this are just at the moment process dog V and then we have two square brackets like this an open opening and a closing square bracket and in there I'm going to write 0 right so we've got to consult logs let's run this program and see what it does so we've got we've got the hello John that's still there but what this console dot log processed that our v0 did was it output actually the location of node the node program that we're using you'll probably get something different it just depends where you installed it and how you installed it you know but you get the location of node hopefully if we change this 0 to 1 there's something else in there that is sometimes potentially helpful and here we get what is this it's the is the location of the program that I'm running commandline doc j/s that's my that's the file that I'm actually running and there's another possibility process the arc v2 now if I run this it's just going to say undefined but here's what it actually does let's just clear this I'll say node commandline yes and I'm going to type something like giraffe and it outputs giraffe so you can see that this text here is actually outputting what I've typed on the command line here which in this case was giraffe now if you've been if you've done some programming before you'll recognize rgv as a array and if you haven't done any programming before this will be like completely cryptic as far as he'll concerned but that's alright that's alright for the moment you'll you come to understand this in time as we go through the course notice there are two places where I've written something dot something this console dot log and this process dog V those are what we call objects in JavaScript and if we search on the internet for nodejs global objects there are a bunch of these things let's go to this link here at nodejs dog and you can see in here there's console there's process there are a bunch of these global objects and there we can access never mind about what they are just know that there are several different ones and in fact log here is it's what we call a method it's essentially a subroutine it's some code that we can run some lines of code basically and ography is what we call an array and we're going to be going through all this in great detail but for a moment let's just make use of this and so this process ography let's let's get the value of it in a variable let's say let name equals that name equal process dog V so whatever the user enters after the program we will take that and we will put it in a variable name and then when I do consult log I'll write console dot log greeting and then name okay so it again if you've done program growing before in some language this will probably be very straightforward to you but in case you haven't it'll look a bit mystifying do type it out for yourself essentially we've got two variables here one I'm setting directly with us what we call a string literal an actual hardcoded value a value I've written directly into my program so greeting is is a sign this value we've got a variable called name which is assigned a value from this thing here and that thing there contains whatever you type after the name of your program when you run it and then we're outputting both of these variables one after the other let's try this and so I'm going to write node command line and some name like Joe or whatever you can write your name there hello Joe notice if I write two two things that's right a surname it only picks up the first one that's because it's considering this to be another what we call commandline argument so this is the first commandline argument and that's another commandline argument we could access that using the number three but we won't worry about that here and all I want to do is get some many more stuff off the command line and I'm happy just with one bit of text okay try all that out for yourself if if you are a beginner this stuff is confusing and there is this just initial feeling of confusion that's always associated with program with learning programming at the beginning and also if you have program programming experiencing you switch from one language or framework to another it doesn't persist as long but often you sort of recreate that feeling of confusion slightly and you just have to persist through it because the important thing at the moment is that you type stuff and you just see what it does an ideally experiment with it a bit yourself as well and gradually this will become second nature to you and as we go through this course be able to explain to you all of the stuff that's going on here so eventually it will lose its mystery but I can't just explain it all now because X the explanation would involve just too many different concepts and you would get lost so you need to practice this stuff that I'm showing you kind of just practice typing it and getting it working and you'll gradually get used to it one thing that I should do here is since we're using I'm using getting this course I should check this in to get but I can't I'll do that I've tried pause the video ok so until next time happy coding