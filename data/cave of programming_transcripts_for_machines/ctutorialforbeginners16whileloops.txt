hello this is John from cave of programming calm in this tutorial in sleep as possible beginners we're gonna learn on my own so I'll create a new C++ project here I'll use the hello world project template and another of the basic building blocks of computer programs are loops because the computer program that just execute the load of statements and then finishes usually isn't much use often you want to do things repeatedly in programs and the simplest way to do that is to use a while loop well it is simplest when you're starting out which is why I wanted to show you this although we're going to see nicer ways to do loops later on so supposing we want to repeat some code to use a while loop we need a keyword while and then round brackets and Oakland close curly bracket so this pattern is the same as for if and just like with if we need a condition in here so let's take the simplest example to start with of an infinite loop I'm going to write while true here and what's going to happen here is is the code that I type in here however many lines this is come in multiple lines it's going to execute as long as the condition in wild is true which is always going to be true because the condition is literally the keyword true so this is what I call an infinite loop let's let's run this and normally in your programs you want to avoid infinite loops but I'm just going to show you this as demo so I'm going to click run and let's hit this stop button here but we can see we've got hello coming up over and over again it's going to keep doing that until there forever or until it crashes or something so this isn't very useful what's more useful is to be able to out and output your lines of code in here some particular number of times until something changes or until some limit is reached or something like that so let's take a look at a simple example but that in the rest of this tutorial so how can we have a condition that's going to change well let's suppose we want to output hello I don't know like five times let's let's have a counter here I'm going to say int I equals nought now I've said before that you shouldn't give variables single letter names in general but we'll make an exception for loop counters because often when you have a loop you need you need a counter that will count the number of times the loop executes and it's very common in this case just to use a single letter usually I as your loop counter but in general you should give your variables more explicit names and even in the loop if you can give a loop counter or a more explicit name then this is probably a good idea to do so I'm going to say while I is less than 6 or we could say while I is less than or equal to 5 if we want this to execute 5 times now at the moment this is still an infinite loop so if I run this it's just going to say hello hello hello over and over again but what I can do is I can change the value of I within the loop so after I've output this line here I'm going to say I equals I plus 1 so remember statements are evaluated from the right to the left so it's going to take one and add it to I and store it back in I that means every time this code executes the value of I increases by one and what's going to happen is and so that the program will will start from the top down and it's going to get to the while and it's going to say is this condition true and well is I less than or equal to five yes so it's going to execute the code within the brackets and then it's going to come back to here again and it's going to say is I less than or equal to five and it's still going to be true so it's going to execute the code in the brackets again eventually is going to be equal to six and then it's going to say here is I less than or equal to five no so then the loop is going to stop and it's going to execute whatever is down here so let's output here and program quitting just so that we can see some stuff after the loop here and now let's run this now is that right in fact this is going to execute six times right so let's let's run this so we've got one two three four five six first time it executes I is zero and then it adds one to I so I is one and then we run through zero one two three four five so we've got six iterations here and for that reason you often see in loops something like this so you start I and zero and you say while I is less than the the limit that you want to reach but less than it because remember you're going to execute it once when I is 0 is less let's run that so now we've got 5 iterations of the loop here so if you want your loop to execute five times you start your new country 0 and you say while I is less than five that's the number of times you wanted to iterate to make it a little bit more clear what's happening here let's also output the value of I here let's say I put space there and here upper I and I need another pot too and let's run that see what that looks like so here we can see that I was zero to start with when it's first executed this code and then we added one to it here and then then the next time I excuses one finally it ends up being four and then when the loop executes again so we execute this when the value of I is for down here and then we're adding 1 to it so now it's 5 and we check the condition again and now this is false I is not less than 5 so it doesn't execute anymore so we get 0 through 2 for executing again something that can be a little bit puzzling when you first see it but you just need to type it out yourself a little bit play around with it a little bit to fully comprehend what's going on here I think I think that's all I want to show you in this tutorial is this one there's one more little thing which is very very useful instead of writing pi equals I plus 1 there's a short time for this we can just write I plus plus and what that does is it increment I by 1 the spot common increment I by 1 and that will do exactly the same thing but it's just a little bit shorter than typing I equals I plus 1 and it's very common to see this plus plus operator when you're working with loops so let's let's run that we get exactly the same results so to practice this writer program if you want to that that out that does thing a fixed number of times that you decided on and make sure it actually does whatever you tell it to do the exact number of times that you told it to execute and also don't forget to indent stuff here within the eye when within the curly brackets of their of the while by an extra tab that's really important and you don't have to have a space there I've put one in because I don't know maybe it looks nicer but that's kind of a question of taste so you can put that line in or not but as I mentioned before it's if you have lots of stuff within your loop then it's good to to kind of split stuff up into logical blocks to help you read it so that's it for this tutorial in the next tutorial and we will probably look at dowhile I think and possibly at nesting stuff within loops nesting if statements within loops or certainly we're going to get on site in the next tutorials now the next few tutorials so until next time happy coding you