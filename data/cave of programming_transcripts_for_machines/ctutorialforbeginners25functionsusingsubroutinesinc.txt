hello this is John from cave of programming calm in this tutorial we're going to start looking at subroutines in C++ which are actually more usually known as functions so a function is it's just like a separate piece of code containing usually multiple lines which you can invoke from there from wherever you like so you can cause it to run wherever you like in your program that means you can reuse it and you can split up your program into logical kind of sections and I've got a little program here that I'm going to add a function to so what this program does is it displays a menu i should be three actually and ask the user to enter their selection and then they enter one of these numbers 1 2 3 or something else if they get it wrong and then we just switch on the number and we just we've got some dummy functionality here we're just outputting some text depending on what number they enter and so I'm going to add I think just one a function to this program just for the moment there's quite a lot to say about functions and so I'm just going to kind of start gently here one thing that I want to mention that the star is that C++ is is built on a language called C it's is it consists of basically extensions to the C language and in C you created your entire program using functions so you slept whole thing of using functions in c++ we split that there we split the program up using classes and classes contain both data and functions and we'll get onto that in due course but I just want you to be worth away for a moment that what we're looking at here is not the kind of final way of doing things it's it's a step on the way to creating methods and methods are functions that are part of a class and we're going to see that later on nevertheless it is still quite common to use some functions in the C++ program even our purists would say they should all belong to classes anyway enough about this let's go on and take a look at how this works so one thing we could do here just just to get started is we've got some code here that outputs a menu and that is prime candidate for putting in its own function so let's create a function up here I'm going to start by typing the keyword void and we're going to see what void means later on but for now I'll just mention that it means we're not returning any data into the into the what we call a calling function which in this case is going to be main and that's that's probably not going to mean much to you at the moment but we will look at it later on so type void and then we need a name for the function and the name for functions should follow pretty much the same conventions as name names for variables let's call this show menu so I'm capitalizing the Ender and in order to just kind of differentiate between the two words and I'm starting the function in this case with a lowercase letter as well which is a pretty normal thing to do although you do see different conventions in C++ this is one of the most common and again you could use underscores if you want in here instead but if you do that you should deal with your variables as well so however you separate the words and your variables and functions and whatever convention you are dear to you should adhere to it consistently and don't mix them following that we're going to have the same pattern that we've now seen multiple times we're going to have an open and close round bracket and in subsequent tutorials we're going to see what you can put in those round brackets and following that an open and close curly bracket like this and between the curly brackets we can pop code so I'm going to just cut this menu from my main function and paste it into this show menu function and I'll just use the auto formatter to format it so this defines a function this is defining a block of code which we've labeled show menu and this block of code is it's performing these actions it's performing these statements and we can now invoke this block of code from anywhere we talked about calling the function so this this doesn't do anything in itself this is stuff that we could do if we wanted to do and to actually make this happen we need to call a function and to do that in Maine where I previously had this code I'm going to type show menu with round brackets and finish with a semicolon at the end there so if we run this now it's going to look it's going to behave exactly the same as the program did before so I've got the menu now it's been output with this code in here and we can our enter enter a selection as say 3 hit return and it says quitting because we've invoked and case 3 here so here we're defining a function and here or you could also say we're implementing the function and here we're calling the function we're actually making it run we're actually making this code run and notice that I define the function above main here if I defined it below we'd have the same problem that we've seen previously with variables so if I try if I say this and then try to build it project build project then we get an error here she says show many was not declared in this scope and that's because the compiler reads these lines downwards and when it gets to this point it hasn't yet seen this so it says you can't use that because I haven't seen it and we're going to see ways that we can get around that because that's that's quite inconvenient but fortunately and there are things we can do that avoid us having to declare everything in order but for the moment I'm going to suggest that you take any program that you've written so far anyone at all and try to put some code into it into a function like this and then call it in your main function and and for the moment I think that's that's enough practice it's trying to think if there's anything else I want to say about functions at this point we're going to see a lot more stuff that you can do with them and that you need to know about them but I think this is a really good start and you can't have multiple functions certainly and you can try that if you want define multiple ones we could take all this code and split it off into its own function if I let's just do that quickly before we close so it's hard to know what to call this because at the moment we can't split this out into a really elegant way but let's let's call it for process selection or we could call it pros get under process selection or something like that I don't know and let's let's just cut all this paste it in there format it command shift left or control shift left on Windows and say process selection and save that and let's just run it and it should behave exactly as before if we've got this right so we can enter a number like five and says please set select an item on the menu because the default case is now executing so yeah I remember the thing that I wanted to tell you which is the inner C++ program if if it is built up of functions which usually it shouldn't be but you see a lot that are and certainly in the C program deep the aim its to get your main function really simple so you can just glance it and see immediately what it's doing so here is it's a really small main function which is good and we can see that it's just showing the menu and then processing the selection from that menu and that's kind of a good situation to keep your main really simple and make your main illustrate basically whatever is happening in your program so you can pretty much see at a glance so I'm going to leave you leave you with this try this out on any any program you've written try to define at least one function and in the next tutorial we're going to look at more stuff that you can do with functions so join me again for that and until next time happy you you