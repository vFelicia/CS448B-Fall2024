in this video we're going to take a look at returning values from functions in Python let's start from this program we had before but I'm going to get rid of all these lines that I put in just to elucidate What's Happening Here exactly let's just delete all of these so this function greet clearly get rid of that as well it accepts a name and then it prints a greeting but another possibility would be to have a function creating a greeting and then returning it so you can use it however you want I'll show you what I mean let's create another function I'll call this create greeting and that will also accept a name let's put pass in for the moment because I like my code to always be syntactically correct while I'm typing it so if I create some kind of statement like this that has a body but I don't know what I want to put in it yet I use the pass keyword so that it is syntactically correct while I'm writing the rest of the code and by the way you can't have two functions with the same name in python or better said more accurately you can't have two functions with the same name in the same scope because just like variables have a scope functions also have a scope they have a region in which they exist that's like physically a region of your code So within this file here I can't create two functions called greet for example some programming lounges let you do that as long as functions have different parameters so you could have a greet that accepts a name and a greet that doesn't accept a name some programming languages let you do that but python doesn't in python you can't have two functions with the same name you can't have two greet functions in this file for example okay so this greet function clearly it creates a greeting that's creating one string actually using the name in this case and then it's printing it but we could instead have a function which creates the greeting and then just gives it back to us so we can do what we want with it so we create the greeting like this let's say I'll actually use different text just to make it a bit clearer let's say Hi and then plus name that's creating a single string from two separate strings so this string and this string but what I want to do is write return here and then a space so we've got return and then we've got some value that we want to return to whichever function calls this and I'll show you how we use this so here we can say greeting equals create greeting and then we have to pass this function a name because it has a parameter here then I can print that let's print greeting let's see what this does so we get hi John this hi John is coming out from here so what this return does is it means you can then use a construct like this so I can create a variable and assign it to the return value of the function which is this this is the thing that's returned from the function returning in this context it just means giving back to whichever function called this and that's the main function so we get something back here in the main function from create greeting this can be confusing to beginners because it looks as though we are assigning some value to the function like we're setting this equal to a function that's not what we're doing we've already seen the same thing when we use the input function we're actually assigning this variable to the return value of this function and the return value is defined by this return keyword here which returns this we don't have to pass parameters to a function that has a return value so I could do this let's say def create simple greeting no parameters there's a colon and I could just say return hi there and that works in the same kind of a way so let's say here simple greeting that's just a variable that I just made up equals create simple greeting and then print simple greeting so if you run this we're going to get hi there and another thing that sometimes confuses beginners is notice that just because you return something that doesn't print it we have to print it ourselves we all do whatever we like with it we can do whatever we like with the return value of a function and you can see that you can think of functions in computer programming or for that matter also in mathematics is kind of like a sort of black box you can pass some data into the box although you don't have to it just depends what the box does and the box then processes the data somehow or does something and it can give you some data back it doesn't necessarily give you data back doesn't necessarily return anything but it can do so in this case here it's as though we've taken some data passed it to this create greeting machine or box or whatever you want to call it course it's a function and that then processes the data somehow like this and it returns it so you end up with this but notice at no stage here is the original variable name actually changed this is simply creating some new data and returning it so try out these examples for yourself and I think you will see how this is working you definitely want to type out this code and see what it actually does some people feel this is fairly clear fairly early on but other people are definitely confused by this so it's definitely worth typing it out and verifying that this does work how you expect it to work you've been watching a free sample from my Python and machine learning for complete beginners course I'm uploading enough videos from the start of the course to get you started with python and machine learning the full course is absolutely massive if you're interested in it please click the link in the description the complete course covers not only basic python but also some fairly Advanced python even some desktop programming stuff and then goes on to machine learning and artificial intelligence until next time happy coding