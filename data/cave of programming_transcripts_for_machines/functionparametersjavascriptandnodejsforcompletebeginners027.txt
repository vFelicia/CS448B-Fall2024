hello this is John from cave of programming calm in this video we're going to take a look at function parameters continuing my course on JavaScript and nodejs for beginners so in the last video we took a look at how to define a simple function now actually javascript is very flexible it lets you define functions in a variety of ways and we can also put functions in structures called classes and we can do functional programming where we're passing functions to functions but we're going to look at that later on here we're just going to concentrate on some basic building blocks and getting some basic ideas straight so let's create a new file here and I'm going to call it parameters J s we'll start with you strict and we'll create a function let's create a function I'll call it greet again which is what I called it in the last video so function names basically follow the same convention usually as variable names so if you wanted to create a function called greet person let's say you wanted to create a function called hello world usually you'd start it with a lowercase first letter most often or it's the most common convention and the second word of it would begin with an uppercase first letter like this I'm tempted to actually call it hello world but anyway no let's call it greet so as before we have the keyword function and we have a name that we made up for it and then we have two round brackets and we have two curly brackets and in here we can put some statements whatever we like as long as it's valid JavaScript let's write console dot log and hello so this by itself doesn't do anything other than define a function if I run this now so node parameters da che s nothing comes out we to actually call the function somewhere we can call it wherever we were wherever we like in our program here although so what we would normally do is this so let's write greet to actually call the function in other words to actually make the function execute so to make it run the code that it contains and then if I cut if I write no parameters such a s it says hello let's try moving greet above here above where we define the function and it actually still works so in some programming languages you could only call the function after you've defined it and that still looks kind of right to me so if you if you think about the JavaScript interpreter sort of reading downwards it's going to go down the function gets defined and then we can actually call it but actually javascript typically is very flexible so it allows us here to call the function before we've actually defined it and it's able to go and get the function definition for you but that's not true in all programming languages so it's worth being aware of that to me it kind of feels more right because I'm used to other programming languages to call the function after it's defined anyway we're going to look function parameters in this video so in the last video I said that and there the idea of functions comes from mathematics and a function in mathematics is like a black box where you throw a number into the box so to speak and it processes the number and spits another number out and in programming we don't have to pass any data to functions and we don't have to get any data out of it so here we're not doing the function is purely it's purely some statements that it executes but we can and less pass data to a function and we can get data out of it again let's take a look at how to do that so supposing we want to alter the behavior of this function so that it outputs a name so it says like hello Bob or whatever between these two round brackets we can write the name of a variable so it's although in effect here we're declaring a variable but we don't use any kind of word like letter or anything we just write the name of the variable that we want to use so let's supposing I want a variable called name I just write name there and this is something that I'm going to pass to the function when I call it so the function is going to have this name whatever's in there we don't know could be anything could be a number but hopefully it's something appropriate because we called it name and I'm going to output that with console dot log let's write comma name now this so this says that this function has a parameter called name in other words it can accept some data which is going to be placed in this name variable to actually pass that data to the function when we call it in the round brackets after you know where we actually call the function we can pass in some data that's right Bob and let's run this and see what it does so I run it and it says hello Bob what's happening here well a kind of analogy I like to make is that when we call the function these the two round brackets here are kind of like a chute and what we're doing is were throwing Bob in this case down the chute we're throwing some data down the chute the chute comes out here where we define the function and this Bob ends up getting thrown into this variable here and then we can use that variable here so let's try it again on a different name that's right greet and that's right Claire we've got to be that use male and female names equally but then there are also sort of names that are neither male or female sand minefield basically but anyway let's run this ok so hello Bob and hello Claire and so we're using the same function but we're changing how it works because the first time it says hello Bob the second time it says hello Claire if you if you've ever used a synthesizer like a musical the musical instrument it will have various things that you can change and control and we call those parameters so you change the parameters parameter values on the synthesizer to change what sounds it makes functions are kind of the same so we call this a parameter because it changes how the function works this is a function parameter and it is also a variable and we're outputting the variable in our consult log when we actually pass values to the function we call them arguments so we supply an argument to the function kind of strange lingo why why it's argument I guess that comes from mathematics as well but you'll get used to it so this is a function parameter this name variable here and here were passing arguments to the function we can actually also pass more than one so supposing we wanted to pass in the name of a day so we can have a list of parameters here let's write comedy so I'm not using it at the moment if I were to run it at the moment so many programming languages would if I try to run this now so I've got a function that expects two arguments because it's got two parameters and I'm running it each time with only one argument many programming languages would gag at that point they would refuse to execute they would say no this is wrong but javascript happily executes sit does the same thing as before at the moment JavaScript say extreme flexibility partly comes from just just I suppose it being an interpreted sort of scripting type language you know it interpreted in the sense that when you run it there's an actual program node in this particular case it's actually interpreting the program and running it and interpreted languages tend to be more flexible than compiled languages where you take text and you turn it into a binary file you compile it into a binary file it's also weakly tight so variables don't have types it's not like we have one kind of variable that's an integer and one that's a piece of text and so on you know we have weak typing in JavaScript so it's very flexible in the nature of it and because it was originally designed to run in browsers it doesn't make any strict demands on it on the programmer and it lets you do things like this but anyway let's actually make use of this day variable so let's say hello comma name comma . it is and then let's output the day what happens if I run this so now I'm I've got this day parameter but I'm only supplying one argument just the name each time I run the function if I run this it says it is undefined so it lets me refer today but because I haven't given it I'm actually given it a value it just says undefined but let's give it a value so here I'm going to when I actually call the function I need to supply ideally usually most of the time I'm going to be supplying a list of arguments that matches what we've got here so that's right comma Tuesday and here let's write comma Saturday so if I run this it says hello Bob it is Tuesday actually I dis looks a bit ugly with because consult our local puts of space here yeah they're scared of that . now that'll do it's it's quite ugly actually maybe it'd look better with a full stop in it doesn't matter anyway hello Bob it is Tuesday hello Clara it is Saturday so you know again going back to my shoot analogy it's here it's as if we've thrown the values Bob and Tuesday down the chute and they end up getting stuffed into the corresponding parameters here and we can make use of them here we can also of course you might guess we can pass variables instead of literal values so let's say we have a variable we can call it what we want so we could call it let's call it something other than day like day of week equals Tuesday we can pass day of week here instead of a literal hardcoded value and this works as before this can also be confusing to beginners because this variable doesn't have the same name as this variable but it doesn't matter the the mechanism here is not trying to match names of variables this is simply an argument simply a value that gets passed to the function thrown down the chute so to speak and it ends up being sort of received at the lower end of the chute here so you just simply taking the commaseparated list of values and shoving them into the corresponding variables here and of course you can also pass in numbers as well and other kinds of things you can even pass in arrays so we'll leave it there for this video the thing to do as always is try this out for yourself and see if you can get creative with it see if you can change it somehow try functions with three parameters once you think you've got the hang of it and you know see how you get on it is just a question of typing this out to understand it I don't think it's good to spend a lot of time puzzling over it the thing is to actually try it get it working for yourself and eventually your fingers will start remembering what to type and this will become second nature to you so until next time happy coding