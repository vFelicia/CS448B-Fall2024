hello Estes John from cave of Programming calm this is part four of the Java for complete beginners tutorial from kpop programming and in this tutorial we're going to look at loops I'm using the Eclipse IDE as usual and I'm gonna go to new Java project and I'm gonna type a name for the project in tutorial for next and finish and I'll right click the project folder create a new class as usual I'll call this application and I'll click finish and to create a main method I'm gonna type main control space hit return and here we've got some bad formatting not enough indent here so to deal with that I'm just gonna select it and go ctrl shift + F and now it's perfectly formatted okay so in the in the first tutorial we saw the boolean type which can be used to store a true or a false value so I could create a boolean for example which I call it well I'll call it loop for reasons that you'll see later and I could set that to if I you like true for example true and I could output this this out control space run the program and we've got true oh yeah now what I can also do is set it equal to something like 4 less than 5 so this is a less than sign and you can see there's the less than sign that's a kind of small end here and it kind of has a big end here and the smaller number goes at the small end and a big one again and if you have the numbers the right way around this whole expression we'll return true now 4 is less than 5 so if I run this program again we've got true or of course if I said 6 greater than 1 which is clearly not true this is a greater than sign I of course 6 is greater than 1 what am I talking about if I say 6 less than 1 I get false now I can also use a variable in in here I can say for example int value equals let's say 10 and then I can say boolean loop equals value less than 20 so value is equal to 10 and value is less than 20 so loop is set to true now we can use this to control a loop and to create a loop in Java I could type while and then in here I need some condition and the condition is what determines when the loop stops or rather I should say it determines when the loop will run because as long as the condition that I type in here is true the loop will run so if I say value less than 10 and let's set value equal to 0 and I put brackets in here I can put some code in here which will run as long as this condition is true and clearly this condition is always going to be true value will always be less than 10 so if I run this program it's just an infinite loop that never stops but what I can do to make this more interesting is here I can say value equals value plus 1 what something is so to start with value equals zero and then this condition is true so the loop starts to execute we output some text and then we say whatever value is add one to it and then store it back in value itself so value is gonna increase zero one two three four five and eventually it will be equal to ten and when it's equal to ten this condition is no longer true and the loop stops and so if I run this you can see that we've got ten of those and just to make it clearer I can I'll add a space after hello and then I'll put the value I'll concatenate the value as a string to this string and if I run that you see we've got hello zero to nine so in total is 10 this 10 hello its output it ten times so this is the structure of this is we've got here this is this is a keyword while and this is a condition which is in round brackets after the keyword and then after that you've got a pair of curly brackets and your code that you want to execute repeatedly goes in here and of course you need some something in here that will gradually count up a loop and eventually make this condition false the best way to learn this is not to ponder over it too long or too much but just to try typing out yourself try to create loops if you can start them and stop them see if you can print stuff out from them and pretty soon you will be a dab hand at it that's all for this time next time we're going to look for loops which her a little bit more complicated but extremely useful and you can find more information and tutorials on K for programming comm I hope you'll join me again if Linux tutorial and until then happy coding you