hello this is John from cave of programming calm in this tutorial we're going to look at writing files with Java which is pretty similar to reading files and I just want to also point out that if you if you're watching this on youtube or udemy or somewhere then you can find the source code for all of my free tutorials on cave or programming so if you go to cave of programming calm and at the moment where I've put it is you have to scroll down it's a bit obscure to these YouTube videos and let's say we want to know how to write the file we can go to sorry read the file look at reading files with file reader for example or actually let's take a look at this next one try with resources because I'm going to adapt this code a bit for this tutorial and if you scroll down you'll see you'll see the source code in there so this so this is the code that we've used in a previous tutorial for reading a file and writing files almost identical so I'm thinking about copying it just to save me typing illis let's do that let's just change it rather than type it all out again so I'll copy that and I'm going to use this I'll show you this using the Java 7 specific syntax that's kind of try with resources syntax but if you want to use Java 6 or earlier syntax then just look at the previous example let's go back here of go down to youtube videos here and if you look at reading files with file reader this tutorial and that I discuss reading files the old way that kind of pre Java 7 syntax and you can take what I'm about to show you in this tutorial and adapt it for previous versions of Java just like this if you want to but it is a bit more on winded so I've got a program set up in Eclipse here and let's just paste this in so it just does with reading files we need to create a file and now instead of using a buffered reader we're going to use a buffer writer and instead of using a file reader we're going to use a file writer so it's really that simple let's change this to buffered writer and I'll set a equal to new buffered writer and instead of file reader will have file writer this only applies to text files by the way you have to do something a bit different if you wanted to write binary files and then we don't want this stuff for reading the file and I suppose we yeah we don't want to catch file not found exception I don't think but we probably want to catch IO exception so I'll leave that in so now now we've got that the outline of the thing and but I need to put one one more thing in here and I don't I was going to say I need to close the file but I don't because this try with resources will handle it for me that's the point of it that it will call BR dot close if you're using previous versions of Java when you're writing files it's really important that you close the file so then you have to call B are close yourself because unless you close the file you won't see the stuff probably that you're actually writing to it but in this case with this syntax and it will close it for you automatically as we saw I think it's in the last tutorial so let's now just try writing some stuff to this file so the file doesn't exist at the moment test stop text I'm just going to say BR dot let's use right sees print and yeah oh yeah I can't you remember what what methods has got things got a write method that allows us to write strings yeah let's use that and we'll write a few lines so let's say I know this is line 1 and I have another line line 2 and to write a new line I'm not sure if it works if you put backslash n in but there's there's in any case is a BR dot new line method and then let's write one more line after that as well as say you're right and last line I'll do the trick and it's going to be closed I feel like I really want to type the odds up close but we had to really don't need to because this is this is going to call that method literally for me this try with resources syntax let's just run that and we could specify a full file path in here and if you do that all the considerations that we've talked about when we were looking at reading files also apply ie if you have a backslash in there then you need to backslash the backslash you need to escape it let's just run that so I think it ran and I'm just going to rightclick the project and go to refresh and now here's the file we double click on that and here we've written some files and actually I forgot to write a new line between two of those so you can see that the second right there is just continued on the same line so if I run it again it's it's just going to recreate this file I might have to I was going to say imma have to refresh it by obviously don't it has refreshed and there's the file that I created and it sits in the project folder the root project folder because I didn't specify a full file path file path just the name and obviously if I had specified a full file path it will be somewhere else and it won't appear until you're right click and refresh the project either so you won't see it until you do that although it will actually be on the disk so if you browse to wherever the project is let's just go to right click go to properties and it's going to be if we click resource it's going to be here a sort of project is the file will actually exist it's just the eclipse won't show it to you until you refresh the project so that's it for this tutorial join me again next time and you can find lots more tutorials and articles on cave of programming calm until next time happy coding