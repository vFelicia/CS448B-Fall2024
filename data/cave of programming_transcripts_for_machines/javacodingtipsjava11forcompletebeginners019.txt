hello in this video video i'm going to give you some tips about programming uh in general um i'm going to give you an exercise soon and in in the next video actually we're probably going to look at um some tips about how to get the most out of the course but in this video firstly before all that i'm gonna just talk about programming in general a little bit so i've got some tips here we're gonna look at these so my first tip for programming and these really will help you a lot this is not just idle chatter these will help you a lot if you do them so strive for great formatting and use auto format so what you should do is when you're developing your code let's open this so when you're writing code run the auto formatter regularly so remember that's um command shift f on the mac it's ctrl shift f on windows and you can alternately although it takes longer you can right click the file that you want to format and go to source format all right so run that all the time run this auto format because it's really important for the sake of understandability readability to keep your code well formatted but equally strive to write your code in a way that's well formatted to start with and you'll know you've got it right because when you run the auto formatter it won't change your code formatting the autoformatter will be happy with what you've already written so try to write your code so it's formatted well in the first place and if you get that right when you run the auto formatter it won't actually change your code but keep running the auto formatter keep doing that and try to get to a point where it doesn't have to do any work that will really help you if you can learn good formatting you've avoided you know one of the worst beginners mistakes that causes so many problems bad formatting really causes um wastes a lot of time for beginners so if you can get it right you know start getting it right to start to start with then that will give you a big um sort of helping hand google error messages so if you make a mistake in your code let's miss off a semicolon here you'll get an error icon here and also if you try to run it let's save it and run it you'll get an error down here in the console on resolve compilation program syntax sarah insert semicolon to complete statement at line eight i can even click on this line and it takes me to the to the right line now here it's pretty obvious um probably uh what the what the message means um well relatively obvious uh it could still catch you out if you're a beginner it's telling us to put a semicolon at the end of the line but often you'll get error messages that are quite cryptic and you don't understand them type those error messages into google or the search engine of your choice and maybe add java as well and then you'll you'll often see web pages that will be very helpful they'll explain to you what mistake you've made um and that's a lot quicker than having to you know you can ask questions in the course but it's a lot faster if you can just get to the bottom of it yourself with a web search so literally what whatever the error message says when you hover over the red icon or when you run your program don't be afraid to type that into a search engine and see what comes up you might need to add java as well to get the right results and that will usually help you it will help you to figure out what's actually gone wrong output values of variables so when you're working through your program let's take a look at this one here i think um put in system.out.printline and output the values of variables and put those in your code wherever you're not sure what the value of a variable is so at this point for example um i might i might be going to write more code further down that depends on total height and i might want to check that this total height calculation actually works so at that point i can output the value of this variable total height and check that it is what i expect it to be and that's something that all the programmers i know pretty much use that all the time they they put system.out.printline in their code to check that variables have the values they expect them to be at that point in the program so you can output the same variable multiple times as you work down through more and more lines to check that at any point in your program it has the correct value that's a really useful tip you'll see me doing that as we go through the course write code a little bit at a time running frequently so don't write a whole like page of code like a big page bigger than this don't write a big chunk of code and without running it so write your code in little bits and then output the values of important variables or just all your variables or whatever you like and then run it check that works and then you can delete the system.out.printline if you don't need it and then add more code to it so what i'm saying is don't write a big piece of code and only then run it write code a little bit at a time add code to your programs a little bit at a time and after you've written a new bit output the values of some variables so you can check that they are what you expect and run the program so build up your program a little bit um at a time that will really help you and you'll also see me doing this in this course i think um write the end of a pair of brackets or quotes before filling them in this will make more sense to you later on but if you've got something that comes in pers in your program like brackets are usually in pairs so this is a pair of brackets here that bracket is paired with that bracket this square bracket is paired with that square bracket and also this speech mark and this they're a pair as well so in general i recommend when you write some opening pair of something write the closing pair at the same time then go in and fill in whatever's in the middle of them you can do that with quotes and brackets the point is to avoid the point is to avoid situations where you've written an opening quote or an opening bracket and forgotten the closing one uh so you might want to come back to this video later on because this will make more sense to you later on but keep everything in pairs right the closing one soon after you've written the opening one and finally make sure you know what you're running because as a beginner i often got confused i'd have multiple projects open i'd click a run button in my ide and i'd run the wrong code and then i'd be changing the code and i'd be looking at the output in the console and thinking why why is why aren't my changes having any effect and it's simply that you're running the wrong program you know so i might be working on this program here but i um you know i click the run button and it runs doesn't run that code you know so make sure you you run the right thing and to be doubly sure so it helps to have the right code selected or the right project at least i think that will probably yeah that changes what you're actually running but if you want to be absolutely sure that you're running the right thing select the file that has the main your main method in it right click it and go to uh go to source no sorry where are we go to run as java application so um i select something that i want to run i right click it and i go to source sorry i go to run as java application and after that you can just use the run button but it helps if the first time you run something if you're not completely sure you're running the right thing actually select it right click it and go to run as java application and that that will that will help a lot because um you'll be if you've got multiple products open it's really easy to get confused about what you're running versus what you're writing at the time that's it for this video um you might want to come back to this later if you start finding programs getting really confusing but i wanted to just run these tips past you to start with okay so until next time happy coding