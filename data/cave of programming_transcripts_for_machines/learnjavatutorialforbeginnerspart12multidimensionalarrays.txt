hello welcome to tutorial number 12 in the series of beginners drama tutorials from cave of programming calm and in this tutorial we're going to look at multidimensional arrays in Java so one a onedimensional array would be for example I could say int array values equals and then I could specify a bunch of integers here like this and the reason this is called a onedimensional array is because to specify the position of one of the items in this list I just need one number or dimension so I could say you know Sissel values two for example and here I get my array value so I'm just using one dimension here to specify this 11 array index a multidimensional array would require more than one array index to specify the value so in this tutorial I'm just going to look at twodimensional arrays but you can easily extrapolate this to three or four dimensional arrays if you're completely crazy so let's have a look at an example of a two dimensional array so the first difference is to create the variable that will point to the array I need two sets of square brackets like this and then I say let's say I'll call this grid and I'll set this equal to and I open like brackets as before and I'll close it down here and I put a semicolon in and now what we're going to have in here well in Java the important thing to realize is that a multidimensional array it's just an array of arrays so here each element in this array is an integer because this is a twodimensional array each element in this array will be another array so for example I could have this one article element I could put that in there and because each element is an array and actually each element technically is a reference to an array unlike in C++ say the different elements of of this array don't have to be same length so I could have like two values here for example and then I don't know one two three four I could have four values here and so on so this is a multidimensional array and most often probably you want to have the same number of values in each row but as I say it's optional and to refer to values in this this is basically a table or a grid of numbers and what you do is I could say let's say I want to refer to this value so I type grid which is the name of the array reference here the array variable and then this is Rho 0 Rho 1 Rho 2 and you need the row first because if you think of this if you think of these as being each of these is an element of the kind of bigger array the outer array then the first thing you need to do is specify the position of this so and in other words you type the row index first and it's always row column so here this is Rho it's the second row but because we start numbering from 0 this is array index 1 and then again this is going to be this is going to be at index 0 within that row and this is going to be at index 1 so here again it's it's going to be 1 1 so this means row 1 column 1 but don't forget you start numbering from 0 so 0 1 for the rows and then 0 1 for the columns I'll put this value and I should get four and I can also of course output for example some maybe it's less confusing if I output value that isn't a 11 so let's say this one will be 0 and 0 1 2 so this values 0 2 so if I copy that and output this I will say 0 2 so row 0 column 2 and I output that and I get 2 3 4 3 again now here so here I'm them here I'm initializing the array at the same time that I declare it and of course I can just create the array first and initialize it later I could say 1 about I could use a string let's say string array so a twodimensional array of strings call it tetes equals and I say new string and here I have the number of entries that I want in this sort of outer array in other words the number of rows by one here so let's have two rows and then I specify the number of columns that I want in this array let's say 3 so this is an array of an array of strings twodimensional array of strings and technically a twodimensional array of references to strings and it could I could output any value in this array of array of strings by saying let's say I could have Tex 0 and then let's output so zeroth row and first column and of course because I haven't set any strings yet that will be null and I could of course assign values to these strings by saying let's say X naught naught and 1 equals hello there hello there and let's just put this up here so that I set it before I output it and you get hello there iterating through arrays of strings iterating through twodimensional arrays of strings or integers or whatever is of course a little bit more complex than the onedimensional case you could use the for loop with a style of doing it but let's I think it's actually simpler just to stick to for loops with with loop counters for twodimensional arrays so let's look at how you do that so what you do is first you iterate through two rows and then you iterate through the columns so you have a nested for loop for loop within a for loop so for the outer array let's let's take grid and I'll say for int I equals naught I less than grid length as if it was a onedimensional array I plus plus so this is iterating over the rows here and now I want to iterate over the columns within this so I say for and I need to choose a different name for the loop variable here to avoid a conflict so I'll say for into K equals naught in fact just to make it clearer I could in fact not use I I could use I could call this row so row row that's better actually and then here I could say for in Col equals naught call less than now what is the dimension of the rotor we want to iterate over I mean what's the length of the the road I am iterating over it's actually going to be grid array brackets row dot length and then call plus plus and of course as always you can take a closer look at this code and try to get your head around it on K for programming comm which is all one word and let's say I can output now grid and I need row and then the column and a handy thing to do with arrays to make your output look nice is I can change println to print so instead of printing each number here on its own line I can print them all out one after the other on the same line and I can just print out here actually I just add here some space after each number or if you put /t in quotes that will output a tab character so I'm just adding concatenating space here to them to this string that I'm outputting it's not actually strings and integer but Java will understand that I want to create a string here and then after each row so within the outer loop and not within the inner loop I want to output a new line so I can just output a empty six out dot println this this is quite complex but just play around with it look at the codes try and change it and you'll soon get a hang so if I output that it's outputting my grid of numbers here nicely nicely formatted as here okay I mean that's that's about it for multidimensional arrays I probably should mention the case where for example you could do something like string array 2d array let's call it words equals new string and I could just specify only the first dimension here I could say that's gonna that's gonna be two so I'm going to have two rows in my array and leave the last one empty and what that would do was it would not set each row to anything so each row will be null if I do this out since our words zero for example that will output null here so the last array index here is allowed to be empty and then you have to set it manually so to speak to an array so you have to set up your sub dart sub arrays one by one so I could say words zero equals new string array let's give it a dimension of three like this and then I'm able to say things like words row 0 and then column columns are now within this array so I could say 1 for example equals hi there and then I could output that copy and sysout control space fully auto complete and I can and slack but either so okay that's it for this tutorial quite complex and in a next tutorial on this I think of something else important that I haven't told you meanwhile we will look at classes and objects and you can find this code on cave of programming comm so do visit that and please click like if you liked the video and I hope you'll join me next time so until then happy coding you