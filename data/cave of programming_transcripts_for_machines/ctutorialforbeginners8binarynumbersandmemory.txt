hello this is John from cave of programming calm and in this video we're going to look at binary numbers so if you already understand binary numbers or you're just immensely bored by the topic feel free to skip this video but I wanted to insert it here because it strikes me that before I talk about types or maybe after I talk about C++ types we probably should look a bit at numbers and computer memory for that matter and so in inner kind of what we call decimal numbers the normal number system we could write a number like this 372 let's say and what that actually means you might remember from primary school is it means two times one so this this bit is two times one this bit is seven times ten so seven times ten and this bit is three times 100 so this is the decimal system based on tens and the rightmost number here tells you how many ones you've got then it's how many tens then how many lots of ten times ten then how many lots of ten times ten times ten then how many lots of 10 to the power of five and so on and the binary number system is really simple it's really similar we just use north's and ones there are only two numbers in it and the way it works is let's take a number like this 1 0 1 1 what does that mean well here we've got 1 times 1 just as in the decimal system but here we've got instead of 1 times 10 we've got 1 times 2 so 1 times 2 and here we've got 0 times 2 times 2 in other words 0 times 4 and here we've got 1 times 2 times 2 times 2 in other words 1 times 8 so altogether the number is going to be in decimal it's going to be 8 plus 4 no.not forks we've got no fours 8 plus 2 plus 1 which is 11 so this is 11 in binary let me just check now we've got yeah we've got 1 plus 2 that's 3 plus there's no fours and we've got 8 so that's 11 and now the reason this is important is because the computer's memory is is organized in like a series of cells you think of it as like series of cells like this and each cell is called a bit so let's label one of these a bit so we've got four bits four bits here and to represent this number 1 0 1 1 which is 11 in decimal and we could switch each bit on or off so each bit has two possible States which we could call on or off or we could represent it with 0 or 1 doesn't matter really what we call it two possible states so we can make this on or whatever you like to call it we could say this is off this is on this is on and then we've represented the number 1 0 1 1 in binary which is 11 hopefully I haven't lost you so far if I have don't worry too much because you rarely you rarely have to think about this as a program that's really as in seldom my Derbyshire accent rip really and really a quite similar for me but yeah you don't very often have to think about this but I just thought I better run it past you for the sake of completeness and so that's that's binary numbers for you and and Billy thing I want to mention is that bits in the computer's memory are organized into bytes so a bit is a byte so let's have one two three four five six seven eight so we've got eight cells here let's check this one two three four five six seven eight and this is called one byte so got bits and bytes and this is going to be like a limit to what size number you can represent in a byte and we're going to get onto that probably in the next video after the next one I kim won the next video but one and because you thing that you need to know really the practical thing here most of the time is just that you need to be aware that there are minimum and maximum values that you can fit into a certain amount of memory you also sometimes need to allocate memory to put stuff in it and then you need to be aware that memory comes in bytes and bits so that's all I'm going to cover for this tutorial very quick introduction to binary numbers here in the next tutorial I think we will get on to looking at C++ types so join me then and until next time happy coding you