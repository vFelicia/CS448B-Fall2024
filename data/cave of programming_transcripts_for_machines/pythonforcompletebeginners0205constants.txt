before we go even further with if else I want to tell you about a concept that is fairly simple but quite important as well especially in larger programs or if you're working on some commercial software in a professional environment and that is the idea of constants so the reason variables are called variables is because you can change them so there's nothing stopping me changing this name variable later on and setting it equal to whatever I want that's perfectly legitimate let's get rid of that but sometimes we want a variable that doesn't change so it's not really a variable we call it a constant we want to store some kind of value in our program that we can then use in our program but we want to make sure that value never changes now most programming languages have a way of enforcing that within the language they have a way of declaring a constant python at the moment doesn't have any such notion it doesn't have constants basically but we can fake them and the fact is that most of the time a fake constant is as good as a real one if you use some coding conventions to highlight what is supposed to be constant so if we take a look at this program it's got various strings in it right like this this and so on all of these strings but what would you do if you were Distributing this maybe selling it to end users and you wanted to create let's say a Spanish version what you would probably want to do is give that to someone who speaks Spanish and they can create localized versions of all of these strings so Spanish versions of all the text strings here but but that person typically wouldn't be a programmer why hire a programmer when what you need is basically a Spanish speaker you don't need a Spanish programmer you just need someone who speaks Spanish and can spell correctly and all that sort of thing so you would probably want all of these strings at least in their own file so you don't want them sprinkled throughout your program ideally and that's a common thing to do with software that you you create files containing only the text that you're going to use in your program so you can easily localize your programs you can easily change those texts now here I'm not going to go to such length but we could take a step in that direction so it's checking for the name John if the idea here is to check login credentials let's say again you probably wouldn't want to hard code this name right here hardcoding means typing stuff literally into your program so we would say these are hardcoded strings they're coded directly into the program hardcoding strings is generally a bad thing I'm going to be doing it a lot for demonstration purposes but in a really serious program you should try to avoid it so one thing that we could do is we could create a variable up here and I'm going to use all capital letters I'm going to say name equals and whatever you want it to equal I'm going to put John since that's my name and we can use this variable in place of the text so what we've accomplished is we've got rid of one of the bits of text that were just sprinkled throughout our program and we've at least put it in one area of the program if we did that with all the bits of text they could even be all put in a single file so in a real program we might fetch this from a database or something but instead here in this little program I'm at least using a variable that's set to that text rather than just sprinkling this bit of text into my code now why have I put it in uppercase letters because in programming in general it's a common convention to put constants in uppercase letters that is if you've got a variable that is not intended to be changed as your program progresses then it's a good idea to create the name of it all in capital letters now I won't always adere to this convention I mean in this particular program you could say well name is actually not changed once it's assigned but I'm not making name a constant here this particular name so I'm not going to adhere to this rigidly but I wanted to show you this so the bottom line here is that if you got a variable that you don't want to change in your program you can give it a name that has all uppercase letters and that's a signal to you as a programmer that it shouldn't be changed it's just referring to some value that you need to read in your program but you don't want to write it you don't want to change it and notice that I can have two variables called name if the case is different some people would say that was confusing I'm personally fine with it but these two are completely different variables because they have a different case and python is case sensitive this is lowercase that's upper case of course you don't want to go too far with that I wouldn't normally want to have two variables that have the same name but just one letter was uppercase in one and lower case in the other that could get confusing but here I don't think this is too confusing this is a completely separate variable to this you could call it correct uncore name or something else if you wanted to also by the way this comparison here is also case sensitive so let's just try this out if I run it and I enter John with a lowercase j it says your name is not John which isn't true so you have to enter the right case here well look at ways to get around that later on but in general in programming you have to be aware of case sensitivity a lot of things that we're going to be doing are going to be case sensitive you've got to get the right uppercase or lowercase letters in there and python as a whole is a case sensitive language as most programming languages are hello you've been watching a free sample from my Python and machine learning for complete beginners course I'm uploading enough video from the start of the course to get you started with python and machine learning the full course is absolutely massive if you're interested in it please click the link in the description the complete course covers not only basic python but also some fairly Advanced python even some desktop programming stuff and then goes on to machine learning and artificial intelligence until next time happy coding