in this video we're going to take a look at the ID builtin function in Python and I want to go over function arguments a little bit more because it's a really important topic so let's create a main function we'll have def Main and then I want to call Main down here now notice I've got an error here I've got an error because I've not filled in any body for main yet but I don't actually know what I want to write yet well I know it but it depends on stuff that I haven't yet written so to get rid of that error I can just write pass here pass is a keyword which basically says look this thing that I've created whether it's a for Loop or an if or a function or whatever it does have a body the body just doesn't do anything so the pass keyword actually doesn't do anything but in situations like this it can allow you to get rid of Errors by allowing you to fill in the body of some statement now let's create a function called greet which accepts some string name and then in here I'm going to say hello and then plus name now in main I can get rid of this pass and I can call greet let's say greet John or whatever your name happens to be so if I run this it says hello John now if we look at this function we know that it expects one argument because there's just one variable listed here and it's not obvious from looking at this but in fact this argument has to be of type string because here we're concatenating it to another string so it has to be a string but you can't tell that from looking at the definition here so what I've done is I passed in a string literal so we call this a function argument as I've said previously this we actually call a function parameter if you think about for example a synthesizer a musical instrument that makes sounds electronically that will have typically loads of dials on it and those dials we say they're adjusting parameters they're changing things that alter the sound that the instrument makes and in the same way function parameters alter what the function does so we have one or more parameters in the function header here in this case it's just one they are simply variables and then we pass arguments to supply values to those parameters when we call the function so in a nutshell this is an argument and this is a parameter now we've seen that this can itself be a variable so let's create a variable down here name equals some name and then pass that instead this does the same thing as before it says hello John in this case but this variable is not the same as this variable as we've seen the scope of this variable is the function body here that's where it exists the scope of this variable a different variable that just happens to have the same name is the body of this function here but they are two different variables how however they are both referring to the same string and we can prove that using the ID function let's do here print ID round brackets name what does this do well every object in Python has a unique ID which identifies it and so this is giving us the unique ID of this string object here which this name variable here refers to let's run this and we get this ID now here I could do the same thing let's copy this and do print ID of name and we see it's the same ID why is it the same ID because both of these variables refer to the same string object string objects in Python are actually what we call immutable that is you can't change a string once it's been created you could replace it with another string but you can't change the actual string object we call that immutability and at this point this name variable refers to this string object and we use this to pass this string to this function it appears here and when we do this that basically assigns this variable here a different variable to refer to this same string which is why it has the same ID it's the same string object even though these are actually two different variables which could have different names if you want an analogy I like to make is imagine you have a house you could write down the address of that house on a piece of paper and you could give it to a friend of yours that friend of yours could even copy the address and give that to other people but there's only ever one house so the variables here are like the piece of paper that has the address of the house written on it and the house is like this string object here there's only ever one house but you can have multiple copies of the address that refer to it and there's only ever one string object but you can have multiple variables referring to that same string object try out the ID function for yourself it's not something that we'll use a lot but I just wanted to go through this to hopefully make what's what's happening a little bit clearer here and also to mention that we call this a parameter but here this is an argument a thing that you pass to a function is an argument whereas the variables that you list in the function header just name here they're called parameters you've been watching a free sample from my Python and machine learning for complete beginners course I'm uploading enough videos from the start of the course to get you started with python and machine learning the full course is absolutely massive if you're interested in it please click the link in the description the complete course covers not only basic python but also some fairly Advanced python even some desktop programming stuff and then goes on to machine learning and artificial intelligence until next time happy coding