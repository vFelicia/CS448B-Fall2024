hello this is John from cave of programming calm in this tutorial we're going to learn our returning values from functions so I copied the project from the last tutorial and just paste it into the into the project view project Explorer here to create this copy which is here and now this process selection which we have from the last tutorial is actually doing two tasks here or at least two tasks it's getting input from the user and then it's processing that input what would like to do is create a dedicated function that just gets input from the user let's take out this stuff that is actually processing the input here let's cut it and put it back in the main function for the moment I'll just format that now the problem here is that we've declared input which is the variable we use to get the user input in process selection and variables are scoped to the enclosing pair of curly brackets so this variable the scope of it is these curly brackets and that means that it only exists between those curly brackets so we can't then use it down here which is why I've got an error here so to deal with that we need to make this function return a value into the calling function which is main here so we want to get a value from this and we want to be able to use it in this so to do that and what we do is firstly this void here this is what we call the return type of process selection the return type of the function and I want this function to return an integer so I'm going to change void for it means no return type and I'm going to change that to int because we want to return an integer then at the end of the function here I'm going to type return input and that is enough to say to actually make this function return a integer so here we're saying that it returns an integer and here we're specifying what integer we actually return it's this one it's input now to get input in the main function here we can declare a variable that's call it input again and set it equal to process selection so this looks like we're setting an integer equal to a function which is mind boggling but what's actually happening is that we're setting input equal to whatever process selection returns and that's going to be this variable here so this variable and this one are completely different variables they're completely separate this one exists between these brackets this one exists between these brackets and in fact that they're not connected in any way either what's happening is that we're returning the value of input here and we're storing it in a completely new variable here so it were creating a copy of the value by doing this and this does not not need to be named input we could call it something else let's call it selection and we need to call this selection as well where we actually use it so they're not connected it's just that this value is being stored ultimately in here and if I if I were to change this it's not going to alter this this code is completely selfcontained now the only thing it the only interaction it has with other functions is though it's returning a value here which is copied into this variable so that that should behave exactly the same as before let's run it and let's enter a selection let's say three quit and says quitting so execute case three so like a lot of things in C++ this looks quite impenetrable until you actually try it the important thing is don't stress too much over what's happening but actually try to get it working try to type out code and get it working I'd suggest as an exercise that you do what I've just done and take the tutorial from the last take the code from the last tutorial and modify it to add this new function that just gets the user input or alternatively take any program you've written and just create some function that returns input and you can have multiple ones in your program if you like get multiple input from different functions it's not a problem so at the moment we go we could return doubles or floats or even strings and intercourse but we can't return arrays there's no way of doing that at the moment so so don't try that everything else you can return from a function so that's it for this tutorial its assets important practices rather than kind of stress about how it works because once you've typed it a few times then your understanding will come after once you can get it working especially when you can get it working without referring back to to example code like this okay so in the next tutorial we're going to look at passing values to functions so until next time you you