in this video we're going to look at a possible solution to the exercise I gave you last time so I've deliberately not prepared for this I've not written this program recently anyway yet and that's because I want to show you how I go about thinking about tackling exercises like this this is the sort of thing that you could easily get asked in an interview for a software job at the entry level at least and I think a lot lot of people who can write computer programs they do have a tendency to freeze when they're asked to tackle something like this there are even software developers who spent a lot of time trying to find bugs in programs but they very rarely write a program themselves from scratch and that's going to put you at a big disadvantage if you get asked something like this on a job interview so I would definitely recommend practicing making up exercises like this and trying to tackle them so my strategy here would be read through the specification basically make sure I understand it and then I want to find some bit that I can immediately tackle and I see well ask the user to enter a password I can already do that right so let's go ahead so I'm going to say here pass well actually maybe not pass because that's a python key word we'll see it later on let's call it password equals input enter a enter your password so that bit's got to work we've already done that lots of times now it wants us to ask the user three times at the maximum to enter their password so that's a loop right let's have a loop for I don't think I'm going to need the loop variable so I'm just going to use underscore for underscore in range three that's three times then we do this now of course we could run this as someone who's been programming a long time I wouldn't bother but if I were a beginner I probably would run this and check that it actually works ENT your password okay yeah it works so far now we need to check if the password is correct or not so we're going to need some hardcoded correct password let's use a constant for that so I could call this correct password but I'm quite fond of having uppercase versions of constants that I also have as a variable some people would say that was a bad habit but let's say password equals hello so that's what they've got to enter and now we need to check this and how do we check things well typically with an if so so let's say if password equals password in that case it's correct and if it's correct we want to just print something like this and then exit so if it's correct let's say print that stuff I'll just put it in quotes and then we quit the loop right so I need break to stop the loop iterating and we can have an else because if they don't enter it correctly we want to print access denied so else print access denied so this is one way to do it now because I've actually remade some videos from the start of the course because I have problems with my microphone level being too high and getting Distortion it's actually now a long time since I wrote the original version of this let's take a look at the original version slightly different right and I see what I did here was I wrote the program so that if you enter the wrong password it prints incorrect password and then if you enter the wrong password three times it prints access denied so actually I don't think I adhered to my own specification very strictly the first time I wrote this but this is also a program that works it's just a little bit more complex than this let's try this one enter your password access denied enter your password access denied there we go and it's quit and if I enter the right password hello we get greetings Professor Falcon so this works pretty nicely if you were able to do this exercise then that's great if you weren't able to do it now that you've seen well two possible solutions this one's a little bit more complicated because it sets a Boolean variable and then after the loop finishes uses that to detect if the right password was finally entered or not have another go at this task put the code away and try it again if you couldn't get it the first time you tried it a lot of people worry that they're not smart enough to do computer programming but I think that's pretty rare this is something which if you keep practicing eventually you will get the hang of it if you think about the stuff you already got the hang of like speaking your own language and figuring out how to operate in the modern world all that stuff's way more complicated than what you have to learn to be able to do this sort of thing so with persistence you can definitely write programs like this and soon you'll be writing stuff that's way more complicated than this one if you keep practicing hello you've been watching a free sample from my Python and machine learning for complete beginners course I'm uploading enough videos from the start of the course to get you started with python and machine learning the full course is absolutely massive if you're interested in it please click the link in the description the complete course covers not only basic python but also some fairly Advanced python even some desktop programming stuff and then goes on to machine learning and artificial intelligence until next time happy coding