hello this is John from cave of programming calm in this tutorial we're going to look at ifelse if so in the last tutorial and I created this project where we have like we output a menu and we ask the user to enter their selection then we take different actions depending on the range of values that are dollar entered while here here we're checking to see if they enter the specific value and here we're checking ranges what we usually want to do with a menu like this is to check each of the possible values so we don't really it's not elegant at all it's quite ugly to have multiple if else's in your program what we want is one statement that can check all of these different values and we can do that with a if else if statement so let's delete this here and if you've tried the code yourself on previous tutorials then you should find this pretty easy hopefully so I'm going to type here if and let's say value that's value that the user entered equals one and then we can say see out adding new record Endre of course you could have anything in this menu it's just a madeup example and we've seen that you could and have an else on there and but that's what what we can also do is we can type it sorry else space if value equals equals two and then we can say let's say C out delete deleting record deli team record and we can have as many of these else if clauses as we like be sure that you don't leave any blank lines under here because it'll little compiled that still run but it just looks really messy and also be very very careful to indent stuff between these brackets with an extra tab and it's this good practice I think when you're beginning especially to just use the auto format anyway just to doublecheck go to right click source and format just a double chatter your formatting is good that's a really important thing to get right okay so let's copy this elsif and we'll have three more of them two three so we can check three four and five and I'll use the shortcut which is on a Mac is command shift F to format these to save me some time and so option 3 should be viewing viewing record let's say option 4 we can have searching and probably should say initiating search or something but you get the idea and we can also combine elseif if elseif with else so what if they enter some other value here that isn't 1 2 3 4 or 5 we can say finding here else and see out in valid option so what's going to happen here is that the compiler well the and the program is when it's compiled is going to work down these different options one one after the other and as soon as it finds one that evaluates to true it's going to stop there so you can only have only one of these options is going to execute and that's important to keep in mind so we're going to check here and is the value one if not go to the next one is it if not next one is it three is it four is it five and else if it's one of those we're going to do this so let's let's our polish now let's run it and so let's check one adding new record let's try five quitting that's had something else let's try some other input like zero or 500 or something and it says invalid option so another really important basic building block of C++ so to practice this probably the best way is create your own menu here and check the different options and use an ifelse ifelse so it should be should be pretty simple if you follow the last tutorials I just want to finish up by pointing out something important here I've said that you can use conditions like this with strings and here we're using it with integers and you might want it can you use conditions can you use ifs with floating point values well let's try so I'm going to say here float in fact what I'll do is a comment this hour coming out of a block of code temporarily we've seen that you can create comment oneline comment like this this is a comment and it's that can be really useful and if you want to just comment one or two lines of code you can also comment a whole block like this type sliced star and then at the end of where you want to comment to ntype star slash whoops so you need a forward slash that's a forward slash it's like if you go from left to right you'll be going up the hill if you imagine this is a sort of hell as a forward slash and you need slash star and an ending star slash and multiline comments like this they're great for creating you know big chunks of information that you need to put in your program and are also really great for commenting commenting out blocks of code so there's something that you don't need at the moment maybe you're debugging your program and you want to stop some bit of code executing but you don't want to get rid of it completely you can use star / and / start to comment out that code temporarily so now this program will do nothing but don't get carried away with that because and if you do comment out code and it's best if you if you're really not going to need it ever then delete the code or just put it somewhere else I've seen a lot of code that has lots and lots of comments that blocks in it that they're there for years and it just looks horrible and terrible so don't leave unnecessary code in permanently it's good as a like a temporary thing usually so what I want to show you is I'm going to right here float value equals let's say 94.5 and let's say if value equals equals 4.5 then see out value sorry see out safe equals endler elves see out not equal so you think looking at this code that you should say and that that there that this is equal to this because we set a equal to 4.5 and we're testing for point five in the Equality or if we if we run it it says well here it says it is equal actually which I'm a little surprised let's try something else let's try one point one maybe one point one hopefully I can demonstrate this to you now it says not equal so what what's going on here and basically if you compare flow with equals equals the behavior of it is going to be pretty unpredictable and really so this is best just not to do it just leave it alone depending on your compiler your system will you use floats or doubles or whatever you might find them it works as you expect but you might not and I think the best thing there is just to leave it alone don't use equals equals with floating point values the reason is that as we've seen in a previous tutorial floating point values are store are not stored with infinite precision because you've only got so much computer memory so if we actually output this float value let's do it so I've actually already included IO manip at all and we have seen this before and that allows me to do this see out lets out put it in fix notation so I want it to write all the numbers out rather than using scientific notation and I can use set precision from IO manip let's set it to 10 and then we can output the value and this is stuff that we've seen in a previous tutorial let's run that and we see that in fact the float value when it comes up is is not precisely equal to one point one because of the difficulty of storing stuff in the computer memory with with perfect precision but what you can safely do with floating point numbers is you can certainly use less than or greater than so we can say if value is greater than one point two I know that's always going to work because well at worst I suppose this could come out as being equal to one point one four or something but one point one is definitely going to be less than equal to one point two so don't get too detailed with it like it and it's best not to start doing is it stuff like is it less than one point one one well that's going to work in this case but yeah but be I would say be be careful and be aware that your your number is gonna and it's going to have in effect some extra numbers on the end of it that are going to be basically garbage and you're safe if you're comparing it color to the next number up 1.1 1.2 is fine but don't use equals equals and don't try to get too detailed don't do stuff like you know like this because will it work or will it not work probably in this case but you know it's getting a bit dodgy because who knows what this number actually is in the computer memory and so yeah Dhoni was equals equals and be careful when you're comparing floats and doubles because that back and catch well so I'm going to uncomment this now so for practice create your own menu system and use ifelse ifelse to check the different values or if you can think of some other program maybe using strings or even doubles with comparisons greater than or equal to or floats then make something up and try it yourself but the important thing is to try ifelse ifelse and make sure that you can actually successfully get it working so in the next tutorial I think what we'll we'll do and is we'll look at some more advanced conditions because you can combine conditions and I want to get on as soon as possible really to looking at loops because that even makes the program a whole other level of of interesting and gives you a lot more power but we've got maybe one or two little things to look at before we get to loops so that's it for this tutorial you can find more videos on my website which is cave of programming calm like a huge amount of free stuff there and until next time happy coding you