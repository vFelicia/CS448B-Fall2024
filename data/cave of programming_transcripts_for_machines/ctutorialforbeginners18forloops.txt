hello this is John from cave of programming calm in this tutorial we're going to look at fall in C++ I totally forgotten in last video that we still haven't covered the most important type of loop in C++ and I've saved this one for after we covered a while because and dowhile because it's a little bit more complicated but it's very commonly used and very very useful so that the for loop looks like this first we have the keyword for then round brackets and we're going to put some stuff in those round brackets and then we have the curly brackets that contain the code we want to execute multiple times now in these round brackets here I'm going to put two semicolons like that and so that that divides the the area in these round brackets up into three sections here and we're going to fill in each of these three sections now this in itself is illegal for loop so let's see that working there should be an infinite loop I'm going to type C out hello and endler and let's just run this so we see we get we've got an infinite loop like with while true but what we can do is we can put stuff in each of these to control precisely how many times the loop iterates so I'll show you what what we most commonly do with a for loop although there are many possibilities here so in this section here in the first section we're going to declare a variable that we're going to use as a loop counter I'm going to say int I equals naught so I've set it to naught to start with so this section here will be run before the entire loop runs whatever you put in there it's going to run before the loop starts in this second section here we put a condition which the loop will execute as long as the condition the second section is true so this is where we put a condition that similar to what we had in the round brackets for the while loop or a dowhile loop so what we typically put in here is going to be something like I less than let's say 10 so if you want a for loop to execute let's say 5 times you typically put I equals nor I less than 5 in here so that's going to be the number of times you want the loop to execute and notice that we've got I less than 10 we're not saying less than or equal to 10 because the first iteration of the loop has I equal to 0 and the last iteration will have I equal to 9 and that's a total of 10 iterations and then finally we park on we put something in the third section here which will be executed after every time the loop has run once so what I'm going to do is put I plus plus in here which you'll recall I just Inc increments I increases the value of it by 1 so we're going to start with I equal to 0 the loop will keep going as long as I is less than 10 and after every time the loop as has rung this is going to increase the value of I by 1 and to see that working let's just put in here let's put I in there so we can see the value of it I'm going to save that and run it and here we can see that we've got 10 iterated iterations of the loop from 0 to 9 so you can miss out any of these sections or as we've seen all of them and you don't have to you don't have to follow and this kind of stuff you don't have to put this kind of stuff in there you can get creative and put all kinds of things in these 3 different sections but this is the most typical usage you will say something like for int I equals naught is less than 10 or whatever I plus plus and after you type this a few times you just get into the swing of remembering these conditions so although this looks quite complicated it is pretty simple really and to practice this and I would advise that you certainly go and type out a for loop and try to try to get to the point where you can type this whole thing without referring back to to this code so try to get to the point where you can remember this and create loops that iterate a precise number of times that you decided on an experiment with it a bit as well see what happens if you miss out the different sections notice that I is usually if we declare a variable like I within curly brackets is available within those curly brackets but there are some situations where you can declare and I in round brackets that precede the curly brackets and then once again I is now available within these brackets so the scope of I you say scope of this variable is these curly brackets we can use either but we can't refer to I down here if I say something like I equals 5 or whatever it's not going to let me do that if I try to build this project it's it's not going to build them so I have to save it first and project build so we see that I is not available down here but it is available within the curly brackets so as always don't forget to indents your code by one tab and extra tab within these curly brackets and if you have any doubt at all about your formatting just right click or use the keyboard shortcut and go to an source and format so that's it for this tutorial and until next time help you coding you