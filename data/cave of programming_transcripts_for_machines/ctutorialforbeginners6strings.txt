hello this is John from Cave of programming. comom in this tutorial uh in C++ for complete beginners we're going to look at strings so I hope you had a go at um playing with integer variables from the last video otherwise this is going to gradually go over your head hopefully you've played around with that a bit and I'm going to create a new project here let's create a new C++ project select hello world C++ project and I'm going to call this strings so a string in C++ is um it means uh like a bunch of letters like some text basically let's get rid of this C out in the main program and uh we saw in the last video that you can type things like int uh value you can call it what you like equals six and then you can do stuff like SE out and uh value another Chevron and end BL semicolon uh one one thing that I want to point out here well a couple of things don't forget semicolons on the end of lines uh because it's really easy to forget those and if you uh don't put them in it won't work also um bear in mind that the compiler is going to read line by line starting at the top and moving down the file so I can't do this I can't put C out value here and int value equals six underneath it because when it gets to here it hasn't seen value it doesn't know it exists it only we only Define um value down here uh so um what I want to show you in this tutorial is you can do a similar thing with text so if you want to work with text and C++ instead of saying int value you could say string value and now we don't want to say equals six we want to give it some text so we put we always put um what we call string literals bits of text in double quotes so I'm going to put hello this is a string so it's just some literal text and we've assigned it to this variable now actually um this variable value is is not quite the same as the integer variables that we saw in the last video not only is it not the same type it's a string instead of an integer but this is technically what we call an object in C++ and string is technically a class whereas int is a primitive type and that won't make much sense at the moment but I just want to mention it cuz I'm going to keep going over these Concepts and gradually you'll see what I mean uh so if we just do this we we we could call it value we could call it whatever we want um let's call it I don't know text or maybe text one that's that's good so if we if we run this program now let's run it might have to build it first let's go to project build project and click run and yes I want I want to save it and it says down here hello this is a string so we could have another string here let's say string text 2 equals um well let's make this let's make the first one hello space and the second one I'm going to put Fred in there and the reason I want to do that semicolon is because I want to show you that you can also concatenate strings with join them together so we could put here see out text 2 endler so we've got two bits of text two strings and let's run that and see if it works so it says hello Fred and um we could also do what we've seen in a previous tutorial we could say text to and another Chevron here and get rid of the second one now so we could output them both with one see out statement so so if I run this that will also work now before I I show you um concatenation I just want to point out that strings are one of the things that are not completely standard between compilers so if you try this program and it doesn't work and you're absolutely sure that your program looks the same as mine and you've got everything correctly in it if you're using a different compiler that may be why you might have to do something a bit different on visual C++ I don't know but if you're using a different compiler you might have to do something like uh put include string at the top here possibly I don't know um or you might even need to give the string a uppercase first letter which doesn't work with my compiler but with yours it might string isn't a C++ keyword it's uh something that's kind of added onto C++ an extra kind of thing so bear that in mind if your if this program doesn't work on your compiler but hopefully it will so we've seen that you can add integers together and you might wonder can I add strings together and the answer is yes let's create another string string text 3 set that equal to text one plus text 2 so this looks like addition but technically it's concatenation concatenate an ordinary English word that we just don't use much normally but it's the right word to use in a programming context to concatenate one string with another means to add it on to join it on to the um first string so we're concatenating this to this and a resulting string we storing in this text 3 variable so let's output text 3 here see out text 3 endler and now we'll have two lines we'll have this line and we'll have this line and hopefully they'll both look identical they'll both be hello Fred and I put a space there so we've got space between the words let's try that so I'll save it and run it and there we go we've got two hello Freds so have a play around with this try declaring some strings try concatenating them try outputting them in in various different ways uh make sure that you can get the hang of this and in the next tutorial probably what we're going to do is we're going to look I don't know possibly getting input I'll think about that but yeah probably cuz it's interesting and we want to try to do as much interesting stuff as quickly as possible so that's it for this tutorial and until next time happy coding