00:00 - which is me so let me know when you can
00:08 - see my screen I can see it now
00:15 - you can see of it can you still see your
00:17 - screen as well yep yep okay so what
00:31 - we'll do is we'll quickly I think you
00:34 - did last week but we'll quickly just go
00:36 - over making a new Python file just to
00:38 - refresh your memory and then we'll start
00:40 - on the actual project so do you remember
00:42 - how to make the new Python file once
00:45 - you've had idle open yes yep okay so how
00:49 - do you do it so you go into file in
00:55 - click new file and then do you remember
01:01 - how to I am yep that's correct so you go
01:06 - file and then new file and then so you
01:11 - can see the difference between the file
01:13 - and the shell because the file is just
01:15 - plain hi David can you hear me okay
01:29 - hello
01:59 - hello can everyone hear me yeah okay
02:04 - cool and so we just started um so if you
02:07 - can open up Idol please yep and then we
02:14 - were just going over how to make a new
02:15 - file so I think the internet connections
02:21 - a bit slow so I'll just speak a bit
02:24 - slowly because I think it's lagging a
02:26 - tiny bit yep
02:31 - okay so Chester has already done this
02:34 - but once you have Idol open to make a
02:37 - new file you just click file and then
02:40 - click the button this that says new file
02:43 - and then you should get the this blank
02:46 - screen so let me know when both of you
02:51 - are up to this step it's a bit slow so
02:56 - I'm just gonna wait a couple of seconds
02:59 - to see if it's lagging
03:11 - you still hear me David yeah um do you
03:17 - think you could speak a bit closer to
03:19 - the mic please
03:20 - you're quite soft okay yeah that's right
03:26 - so do you have the new file you have
03:29 - Idol open yep
03:31 - okay so I'll just quickly go over again
03:34 - the difference between a Python shell
03:36 - and the actual file is the shell looks
03:39 - like this with the three arrows and then
03:43 - the file is just blank and then the
03:45 - shell does things line by line so the
03:49 - first one shows you show you how to what
03:54 - to do this path in those words on the
03:57 - top and if you open a new file it means
03:59 - you already know how to do everything
04:01 - and you can do it on your own booze
04:04 - answer yeah yeah pretty much
04:07 - yes so like the first one with the shell
04:09 - like it only does stuff line by line but
04:12 - like you said when you know how to do
04:13 - the things you can go straightaway to
04:15 - your file and then save it and run it
04:17 - yourself and you can always come back to
04:20 - this file so I'll just quickly we went
04:24 - over this but I'll just quickly do like
04:26 - a little test program so that you know
04:28 - how to save it and run it because we
04:30 - went over it last week but it was
04:32 - towards the end so do you remember how
04:35 - to print something onto the screen yeah
04:38 - yep
04:39 - so we'll just do one line that says
04:41 - print and then remember if it's a word
04:47 - what do you need to put the word in so
04:54 - if it's a string how do you have to type
04:56 - it you forgot that's okay so you have to
05:03 - put it in quotation marks so either
05:07 - double ones or the single ones yep so
05:14 - you can just say something like hello
05:16 - world and so this is just really short
05:21 - just to test to see if it works so now
05:24 - to run it
05:25 - you can click run on the top and then
05:29 - run module or you can press f5 on your
05:33 - keyboard so it's the same thing yep
05:37 - and then it'll first ask you to save it
05:40 - so every time before you run it it will
05:42 - ask you to save it so you press ok ok
05:46 - and then you just choose where you want
05:48 - to save it so if you it might be good to
05:51 - have like a folder with all your Python
05:54 - projects from this commercial script
05:57 - scripts or not scripts may be like on
06:00 - your computer somewhere
06:01 - umm no I'll do Scrooge ok scripts just
06:05 - somewhere you know where you can find it
06:07 - later on
06:07 - so actually it's it's better to do it
06:13 - out of this folder because this folder
06:17 - is where like the Python installing
06:19 - stuff is it's better to save your own
06:22 - cycle project somewhere else so Chester
06:26 - I was just going over how to save a
06:28 - Python project do you remember how we
06:32 - did it last week No ok that's ok so what
06:38 - all I did was in that new file let me
06:43 - just close this in that new file just to
06:46 - test that it's working we just wrote
06:48 - print and then HelloWorld so do that on
06:52 - your new file as well so just one line
06:55 - of code to write something on the screen
07:03 - yes so David generally it's better not
07:06 - to save it in that scripts file because
07:08 - all those folders are part of the Python
07:11 - package which users like which is how
07:15 - you install and use idle so it's better
07:17 - to save it in a different folder
07:19 - yeah sure can yep and Chester do you
07:25 - remember why we have these quotation
07:27 - marks if it's held the computer right
07:33 - printed yeah yeah
07:36 - so the
07:37 - those quotation marks means it's a
07:39 - string so it means it's just the word so
07:42 - yes and then once you've done that we
07:49 - wanted to try test it like by running it
07:53 - so let me know when you've done it
07:57 - you've done it yeah I do and yes sorry
08:02 - what did you say yeah god yep okay both
08:06 - of you have done it so then we just want
08:08 - to click run on the top and then run
08:11 - module and this is where I was telling
08:15 - you David you have to save it so Chester
08:18 - every time before you run your Python
08:21 - program it has to save you just press ok
08:25 - and then choose somewhere where to save
08:27 - it on so don't save it in this pipe then
08:31 - folder where it has like represent stuff
08:34 - because that's part of like the package
08:36 - which kind of installs and runs Python
08:39 - so if you save it they might get a bit
08:42 - confused
08:42 - so try save it somewhere in your
08:44 - computer like desktop or documents or
08:48 - something and create a folder if you
08:50 - want so I meant put it in documents and
08:55 - just go new folder
09:00 - - projects and then every time whenever
09:11 - you have a Python project that you're
09:13 - saving it's always good to give it a
09:15 - meaningful name so what I mean by
09:18 - meaningful is just some name that you
09:20 - know what is in that program so like you
09:24 - know how sometimes things might be saved
09:26 - untitled one two three that's not a
09:28 - meaningful name because we might not
09:30 - know what that program does the for
09:34 - example we could right here test print
09:39 - program or something because that
09:42 - something that you will know what the
09:44 - program does
09:48 - and once you've chosen a spot and given
09:51 - it a name just press save and then your
09:57 - shell should pop up and then it should
10:05 - say what your print statement so in this
10:09 - case it should say hello world and on
10:16 - the top here just above that line it
10:18 - says where it's saved like it's telling
10:21 - you which file it's running so let me
10:29 - know if that works everyone okay good it
10:38 - work yep cool
10:40 - I think Chester's internet might be a
10:43 - bit slow so wait a couple of seconds and
10:48 - see okay Chester can you hear me again
10:56 - so just on what I said before was just
10:59 - when you press run and once you've saved
11:01 - it um a Python shell should pop up with
11:04 - the program yep so did it work for you
11:09 - yeah yep okay cool and I'll quickly show
11:13 - you another thing so like you can close
11:15 - the Python shell keep your file open so
11:20 - when you have a file it means you can
11:21 - always go back and edit it but another
11:24 - thing before doing that I'll quickly
11:26 - show you is there something called
11:28 - or autocomplete in idle so for example
11:31 - if you're writing a function say you're
11:34 - trying to write that print function but
11:36 - you forgot what exactly the word is like
11:39 - you could start writing PR and then if
11:42 - you press tab on your keyboard you might
11:46 - get a little drop down or if tab doesn't
11:49 - work try press ctrl and the space button
11:53 - or if you have a Mac command and its
11:56 - face button and you should have a
11:59 - drop-down
12:01 - with different options did that work do
12:06 - either of them work for you guys
12:11 - yep
12:12 - so are you guys both using Windows or
12:15 - using Mac or what kind of comm using
12:17 - Windows you're using Windows a vehicle
12:20 - and David okay that's cool so that's the
12:22 - same as me so then you would just go tab
12:25 - door control space and then it will try
12:28 - to finish off what you are typing and
12:30 - then I think if you just press space it
12:33 - finishes off the word so that's pretty
12:36 - handy if you forget what exactly it is
12:39 - or how to spell it and you can finish
12:42 - like the rest of the stuff yeah so then
12:47 - I'll just get you guys to save it and
12:49 - run it again just to test it and since
12:58 - you saved it once it should
13:00 - automatically save it next time you run
13:01 - it and just straightaway run your
13:04 - program so did that work as well yeah so
13:18 - just check so generally whenever you are
13:21 - doing a program so this one's pretty
13:23 - simple it's just printing two lines but
13:26 - generally when you're doing a program
13:28 - it's always good to test it every now
13:30 - and then to see if it's running so every
13:32 - time you make a change it's good to run
13:35 - it so that you can see that it's working
13:38 - like it's mental like you can put a bit
13:41 - to work so sometimes if you have a small
13:43 - error and then you try to do a whole
13:46 - bunch of like like a lot of lines of
13:48 - code and then try to run it you might
13:50 - get an error and then you wouldn't know
13:52 - where the error is run it after every
13:56 - little bit of code you write and if you
13:59 - do can error you know oh it's the last
14:01 - thing I wrote oh yes it's what I did
14:03 - when there was an error in my in my
14:07 - script I just I didn't do anything I
14:10 - just did a new page uh-huh and you paid
14:14 - yeah yeah yes so sometimes like arrows
14:18 - can be sneaky and you don't know where
14:20 - they are which is why it's good to
14:22 - always do that so one more thing I'll
14:26 - quickly show you guys before we start on
14:29 - with the lesson so I'll get you guys to
14:31 - close both the Python shell on your
14:34 - actual file but just remember where you
14:37 - save that Python file so I'll show you
14:40 - how to open it again so pretend it's a
14:44 - new day and like you're done like if you
14:48 - want to start working on the same file
14:50 - again what you need to do is you need to
14:52 - find where it is to find the folder and
15:05 - then find which file you saved should
15:13 - let me know when you guys have found it
15:14 - I found it you found it ethical David do
15:18 - you find it oh yes yep
15:21 - okay so once you have the file once you
15:24 - can see your file you just need to
15:25 - right-click on it and then you should be
15:30 - able to see make sure you click on the
15:32 - file and then right-click you should be
15:34 - able to see something saying edit with
15:37 - idle do you see it you go yep so click
15:47 - that click edit with idle and then it
15:52 - should open up your file again might
15:54 - take a couple of seconds to load so now
16:00 - you can go back and add more to your
16:02 - file or edit stuff in your file and just
16:03 - run it the same way Chester did you
16:10 - managed to open yours as well no okay so
16:15 - what do you see when you right-click on
16:17 - your file on the program right
16:24 - do you just see something that says like
16:26 - you saw it by group by what do you see
16:33 - like a clip don't like it like clicked
16:41 - on the file they might like thinks I
16:49 - want to change the name okay so you
16:55 - might have double clicked on it
16:56 - accidentally because generally if you
16:58 - double click on it it tries like if you
17:01 - double click on the name it thinks you
17:03 - want to try change your name so try
17:05 - click a bit away from the name like next
17:08 - I like that you tried that too so make
17:13 - sure I using a mouse or just the mouse
17:17 - keyboard okay
17:19 - so make sure the right click is the
17:21 - other click so you first click on it
17:23 - normally and then click on it is it
17:26 - still trying to rename it yeah yeah okay
17:31 - um do you want to quickly share screen
17:34 - I'll stop sharing mine and you can you
17:38 - can show you this so David while you
17:46 - wait if you want you can try add a
17:48 - couple of things to that test file if
17:52 - you want like based on what we learnt in
17:55 - the last couple of weeks
17:56 - sure why not yep okay so hmm
18:06 - and now if you right click okay hmm okay
18:11 - so maybe yours works a bit differently
18:13 - but if you just unlike click out of it
18:17 - again sorry and then just click on it
18:20 - once and without right-clicking on the
18:26 - top do you see how there's a few buttons
18:28 - there like organize oakland share with
18:31 - click on open but maybe yes
18:38 - we'll see if they're open to otherwise
18:39 - click on the arrow next to open try
18:48 - choose a default so python might put
18:53 - some Python it might try to open it and
18:54 - run it
18:55 - so maybe click on that choose default
18:57 - program and see you can try find idle
19:07 - otherwise I'll show you another way so
19:08 - if you just close that so another thing
19:14 - you can do is if you just open up idle
19:17 - just a new one instead of going file new
19:23 - file you can just go file open click on
19:31 - and now you can go find where you saved
19:35 - it again
19:36 - so David another way of opening the file
19:39 - is by opening idle and just clicking on
19:42 - file and open yep and now if you click
19:46 - on that and then press that button open
19:50 - on the bottom sorry yeah yeah yeah sorry
19:59 - it could be must be your settings for
20:01 - right click it's a bit different to mine
20:03 - but yeah so you can just do it this way
20:06 - Chester it is about the same way but
20:09 - yeah I'm gonna start sharing my screen
20:12 - again so we don't actually need this
20:18 - test print program again so because
20:21 - we're gonna work on something else now
20:23 - that was just to test saving it and uhm
20:26 - you think running the file so if you
20:29 - want you can either create a new file
20:32 - now and just keep that one or you can
20:34 - edit this file so I'm just gonna make a
20:37 - new file
20:41 - [Music]
20:46 - so what we're going to do today is
20:49 - something called full loops
20:51 - and we're going to revise a bit of what
20:52 - we did last week with turtle as well
20:56 - yeah okay yep so oh well last week we
21:01 - didn't do much of anything oh yes I
21:05 - think David you a bit late last week so
21:07 - you missed the first bit of it yeah last
21:11 - week I couldn't okay yes we're going to
21:15 - go through something called turtle I'll
21:17 - try briefly like go over it again for
21:21 - you and if you have any questions just
21:23 - ask but just make sure you have a new
21:28 - file open or if you're using the other
21:31 - file just delete the other stuff in it
21:35 - for now so Chester do you remember a bit
21:41 - of turtle yeah yep okay so just quickly
21:49 - do a quickly explain to David what cover
21:51 - is like what we use it for it's turtle
21:57 - is like something that you start drawing
22:03 - yeah yeah so turtle is something called
22:07 - the library in Python a library is just
22:10 - a whole bunch of code that someone else
22:12 - has written which we can use so we use
22:15 - turtle to draw things on the screen yeah
22:18 - yeah so the first thing we need to do
22:22 - remember what the first thing we need to
22:24 - do is Chester if we want to use harden
22:28 - it so David we need to do is type the
22:34 - word input and type the word turtle all
22:41 - in lowercase so what that is doing is
22:44 - we're importing the library called
22:46 - turtle because we didn't write that code
22:49 - someone else did we have to import it so
22:52 - that we can use the things in turtle
22:55 - okay
22:56 - yep so what we'll do is we'll draw a
23:03 - little square with turtles the next
23:07 - thing you need to do do you remember
23:08 - what it is just so it I just okay yeah
23:20 - I'm gonna use Bob - it's a David now
23:23 - what we need to do is we kind of need to
23:25 - make something a bit like a variable
23:28 - which is like what our turtle will be
23:30 - yeah well okay so don't cuddle with an
23:37 - uppercase hey yep good job and then in
23:42 - brackets yep good job
23:44 - yep so both oh sorry David what you need
23:48 - a touch is the word like a name for your
23:52 - turtle equal and then we use turtle with
23:56 - the lowercase because that's saying
23:58 - we're using something from that turtle
24:00 - library the thing we just imported so
24:04 - turtle with the lowercase and then dot
24:07 - title with uppercase yep
24:10 - so the uppercase not all kind of means
24:12 - like a turtle object so when we Bob into
24:17 - a turtle which can like move and draw
24:19 - onto the screen so look quickly so if
24:24 - you haven't saved it already because a
24:26 - new file will save it otherwise just
24:31 - straight away run it and you can see
24:33 - what happens so I'm just gonna quickly
24:35 - save mine what does a turtle do so
24:39 - something just appeared in my screen it
24:42 - was - turtle graphics yep so turtle
24:47 - graphics thing which allows us to draw
24:50 - on the screen like lines and circles so
24:53 - I'll show you that's the thing but yeah
24:57 - so it's kind of like like painters but
25:00 - you can't do it automatically the turtle
25:03 - is Bob and what does Eddie do we just
25:06 - give it a name yes then we can control
25:08 - it later
25:09 - so that's the next step but I'll just
25:11 - show you so I'm gonna call this Tuttle
25:17 - loop because later on we're going to use
25:19 - something called four loops okay so what
25:27 - you would have seen David is the
25:29 - graphics thing that opened and then do
25:32 - you see that little arrow there
25:34 - that's our turtle which we can move
25:37 - around and make it draw on the screen
25:39 - so that's the thing we call Bob oh yeah
25:42 - and how do we move it around yeah so
25:44 - that's what we're gonna do now okay
25:46 - we'll just close this so what we'll do
25:49 - is we'll quickly we'll do a quick a
25:51 - small square so Chester do you remember
25:55 - what we might need to do to draw a
25:58 - square yeah yep so what's the first
26:00 - thing yep
26:05 - so David yep um the name we gave which
26:11 - yep and then we add the word for word so
26:14 - Ford is kind of like an inbuilt function
26:17 - in that turtle library but but who
26:21 - didn't tap it in
26:22 - so just you're just I'm so sorry what
26:27 - did you say Dave oh okay Chester sorry
26:31 - did you say something no I'm just doing
26:36 - like a small square as well yeah the
26:42 - numbers tiny okay yep
26:44 - 90 90 okay that's a pretty good size I
26:48 - think yep so David forward is like a
26:51 - function which that turtle library has
26:54 - and because we already made a turtle
26:57 - object dot forward is like part of Bob
27:00 - so our telling Bob to move forward and
27:03 - yes your brackets we need to tell it how
27:06 - much to move forward okay pretty sure to
27:09 - fix those yes so you can try 90 so 90 so
27:15 - it's kind of like steps but I think it's
27:17 - in pixels label do it I do next so if
27:21 - you want how it works
27:22 - yeah yeah yes yep so if you want to see
27:24 - how it works just run it and Chester you
27:27 - can test it - it's working and it should
27:31 - have run in a straight line
27:32 - oh yeah okay just good yep
27:38 - so if you want because we're making a
27:41 - square if you want it to be a bit bigger
27:42 - you can change that number 90 to be a
27:45 - bigger number if you want it to be
27:47 - smaller you can change it to be a
27:48 - smaller number
27:49 - oh yeah like like 100 no that would be
27:54 - too small like 100 folds and turn right
27:57 - then a hundred fools and turn right
28:00 - again so it took the censer right so
28:06 - instead of turn right there's another
28:08 - thing we can use so Chester do you
28:12 - remember what it is harden do you
28:15 - remember how we make the turtle turn do
28:19 - you remember
28:20 - yeah you go so what do we need a type oh
28:25 - don't laugh and brackets and then the
28:31 - brackets like however like whatever
28:35 - degree angle um it's a time yep exactly
28:38 - yeah you knew that yeah so like if you
28:42 - saw when you ran your program you would
28:45 - have seen like your turtle was facing
28:47 - that way to the right so if we go Bob
28:51 - left if you want it to face up it's all
28:54 - based on degrees so do you know how many
28:56 - degrees we need to change it to face up
29:00 - I think I do so what do you think it is
29:07 - it's George 90 degrees or 100 and sure
29:15 - no sir
29:16 - iein okay 90 yeah you all right yeah
29:19 - because it was already facing this way
29:21 - so we just want to move it to the left
29:23 - 90 degrees yeah okay yeah and then you
29:27 - can run it again and see what happens so
29:29 - I'm gonna make a smaller square so I
29:31 - just changed my forward to 50
29:38 - so it might have not have it wouldn't
29:40 - have drawn the line yet but you can see
29:42 - that it changed to face up David do you
29:59 - see how it's facing off now so now you
30:12 - can continue it and make it go forward
30:15 - and left and try to ask with okay so if
30:25 - you want to do a square how many times
30:27 - do you have to repeat it so how many
30:31 - sides would it have
30:34 - can't anyone tell me so how many sides
30:39 - is a yep cool so you want to go forward
30:43 - turn forward turn forward ten but done
30:47 - so you can just copy and paste it if
30:49 - it's easier so sometimes if you want to
30:55 - do like fancy shapes like a house or
30:59 - something it might be like good to plan
31:01 - it out on a piece of paper how you might
31:03 - draw it so for example if you're drawing
31:06 - a square you can plan out like how much
31:08 - which ways you have to turn and things
31:10 - like that yeah yeah but this is like a
31:15 - squares relatively simple so it's pretty
31:18 - much the same lines yeah
31:22 - so once you've done that try run it and
31:24 - see what happens I'll just write a
31:29 - square you made a square cool do it what
31:33 - yeah yep good job
31:36 - hey David did you make the square
31:40 - yes yep and did it work okay yeah and
31:47 - did it make
31:48 - sense to you yes yeah okay that's good
31:53 - so I'll we did this last week but I'll
31:56 - just quickly tell you there's you can
31:59 - also change like the size of the pen and
32:02 - the color of the pen in turtle and you
32:05 - can also change like what your cursor
32:07 - looks like so I'll quickly show you that
32:11 - so Chester do you remember what we might
32:14 - type in to change one of those things
32:19 - well don't shape yep
32:22 - abduct shape and brackets what shape you
32:27 - want yes
32:28 - so we can go bub dot shape and then we
32:31 - can type the word turtle if we want it
32:33 - to be a turtle shape so David there's
32:37 - like a few sets like set of shapes that
32:40 - Python knows so you have to use those
32:43 - shapes like if I typed in the word a
32:46 - polite not know if that is a shape so we
32:48 - might get an error so if you wanted to
32:50 - find what the shapes where I can use
32:54 - this you can go into Google and type in
32:59 - like Python turtle okay oh yeah okay and
33:06 - then that first result which is like
33:08 - duck stock Python is where you can find
33:11 - the answers to that and then I won't go
33:15 - through the color and size thing now
33:17 - because we did it last week but if you
33:18 - wanted to know how to change it you can
33:22 - go python turtle sub pen size so it's
33:27 - generally like bob dunne pen size or bob
33:31 - dot color and then you put in the color
33:34 - but to know what size need is pardon a
33:39 - few days ago yeah i'm tired on paper and
33:46 - i like to get the turtle up and i get
33:51 - the - turtle graphics up yeah and draw a
33:54 - square yeah that's pretty cool
33:57 - so you wrote it on paper
34:00 - yeah so I was up to test your memory
34:03 - kind of so that you could just practice
34:05 - yeah okay that's a good idea yeah so
34:08 - sometimes it's good to like plan it on
34:10 - paper especially later on if you do
34:13 - really complicated projects it's good to
34:15 - plan out what steps you're doing and
34:18 - like you said on paper as well pretty
34:20 - good okay
34:22 - so just run it again if you made any
34:27 - changes just run it just to test that
34:29 - it's working okay and then I'll
34:31 - introduce something a new concept so
34:36 - check that you can still draw a square
34:38 - ah it's cool did you manage to change
34:54 - the look of it David uh way to shake
35:03 - good copy
35:05 - that's good okay so now what we'll do is
35:11 - we'll go back into our pile so do we do
35:19 - trial
35:20 - oh no so sorry we'll go back to that
35:22 - file where we were writing it so I'm
35:26 - going to explain the reading order to
35:28 - continue file oh yeah
35:30 - so whichever file you had your square on
35:33 - we're still gonna use the same file so
35:35 - make sure that's open yeah okay so I'm
35:39 - going to explain something called for
35:41 - loops has anyone heard of a for loop
35:43 - little huh no no that's okay have you
35:48 - heard of the loop in general like in
35:50 - programming
35:55 - it's okay if you haven't not quite sure
36:00 - that's okay so that's what we're gonna
36:02 - be learning now anyway so a loop
36:04 - basically allows us to repeat bits of
36:07 - code so in Python we can use a for loop
36:10 - to repeat a bit of code for example do
36:14 - you see how right now to make our square
36:17 - we have these two lines which we've
36:20 - repeated four times yeah so instead of
36:26 - so like that's quite a bit of code so if
36:30 - we wanted to make it more like shorter
36:32 - and kind of more efficient what we can
36:35 - do is we can just have we can delete
36:38 - those extra three bits and just keep it
36:42 - once and then we can put it in a loop so
36:46 - that it will repeat four times instead
36:50 - of having to like type those lines out
36:52 - four times does that idea kind of make
36:56 - sense yeah yep okay so I'll show you how
36:59 - to do it what would you type yes so I'll
37:02 - show you what to take
37:03 - so David does that concept make sense to
37:07 - you yeah okay yep okay so in Python to
37:14 - do a for loop we type the words for and
37:18 - then we type the word I so this letter I
37:24 - can is kind of like a variable so it can
37:27 - actually be anything like you could be
37:29 - like oh like you know Apple in something
37:34 - but generally in code like they use a as
37:39 - kind of like a counter so we'll just
37:41 - stick with I and we'll go for I in to
37:47 - the next thing you write is for I in and
37:51 - then we want to repeat it because it's a
37:54 - square how many times do we want to
37:56 - repeat that bit of code well well so to
38:01 - do four we type in the word range so in
38:05 - Python there's something called
38:08 - have you done it before did actually
38:13 - sorry what did you say I didn't he I
38:17 - said only deleted that file how you
38:20 - accidentally delete that file
38:22 - did you like delete the file or did you
38:25 - delete what's in the file because it's
38:29 - just I deleted are delicious a file but
38:32 - I can go again to poison yeah I'm on
38:35 - yeah cuz if you deleted what's in the
38:38 - file you can just click on do and it
38:40 - should appear again but otherwise
38:42 - quickly try you can see on my screen
38:45 - what's written so just try a copy that
38:48 - but yeah so to do the follow be right
38:51 - for I in range and then we do the
38:54 - brackets again and inside the brackets
39:00 - we want to say how many times you want
39:02 - to repeat it so if it's full will write
39:05 - for I in a range of full so that's
39:09 - pretty much saying repeat this four
39:12 - times and there's one more thing we need
39:15 - to do so in Python the like it likes
39:21 - spaces cuz right now we need to make
39:25 - sure that this bit of code is part of
39:28 - this fold because otherwise if you write
39:30 - stuff after it it might not know what's
39:32 - part of the full of and what's just
39:34 - meant to happen once so to do that you
39:37 - type in keep the bracket you type in
39:40 - colon like the two dots and press ENTER
39:45 - and you see how your cursor is kind of
39:49 - indented a bit so it's not at the very
39:52 - level and that's where you'd put your
39:56 - actual code so you can either press
40:00 - Delete to make that go forward or if you
40:04 - click on your line you can press tab to
40:07 - indent it in so like to push it in a bit
40:12 - so python is a bit picky about
40:15 - indentation and spaces so if you didn't
40:19 - have it it would tell you there's an
40:23 - so does that make sense yep yep okay so
40:27 - the reason why we indent it is like if I
40:30 - wanted to do some stuff afterwards like
40:32 - for example print a square something
40:38 - [Music]
40:39 - because I just want this thing to happen
40:42 - once so that's why it's back like to the
40:45 - very edge so that way our program knows
40:49 - only this stuff is meant to be repeated
40:52 - four times if this was indented as well
40:56 - then that would also be repeated every
40:57 - time but we just want to do it normally
41:01 - so we put it back on the edge does that
41:09 - make sense yep yep
41:12 - Chester does it make sense you too yep
41:16 - yep so now what you can do is you can
41:18 - run it and see what happens so run run
41:23 - module and it should do the same thing
41:26 - so did you loose what did it still do
41:43 - ask where does it look the same as the
41:58 - square you had before yep okay okay
42:09 - chest up does go so up as well okay so
42:32 - when you actually run it it should look
42:34 - any
42:34 - different it's just when you look at the
42:36 - code you can see yep Cheston did you try
42:48 - running it now and see what happens
42:50 - was it still loading Chester did you as
43:14 - well
43:15 - yep did it well that's good not quite
43:21 - sure okay when you was I do then and
43:29 - then I made it say print something yeah
43:34 - oh so the print thing okay so the print
43:39 - thing if you have your shell open it
43:42 - says the print on a different place so
43:45 - turtle does all that stuff in this thing
43:48 - called Python turtle graphics that's
43:52 - because we're just drawing lines and
43:53 - shapes and stuff but if you use like
43:56 - that print statement it'll do it how we
43:58 - normally do it you know how in our first
44:01 - program it had print hello world
44:02 - something it will just appear in this
44:06 - Python shell here so do you see that
44:11 - Python shell so like it will print the
44:14 - word in your Python graphics window do
44:29 - you see where it's written just
44:49 - hang on I think it's a bit laggy I'll
44:54 - just wait a couple of seconds so David
45:01 - while you're waiting you can try change
45:04 - the color of the pen and things like
45:06 - that so to change the color of the pen
45:10 - yep I'll just quickly explain it before
45:13 - chester comes and you can go like bob
45:15 - dark color but type in the world color
45:19 - with without the you because they spell
45:22 - it like the American Way you're inside
45:26 - that color inside the brackets in
45:29 - quotation marks you want to say a color
45:30 - like green or something so again if you
45:36 - want to see exactly what color choices
45:38 - they have you can go onto that website
45:40 - and type in like python python turtle
45:43 - colors but generally they have standard
45:45 - ones green blue red and stuff like that
45:49 - yeah okay just I was just quickly
45:52 - explaining to David how to change a
45:54 - color of the pen but what we using about
45:58 - your project it'll happen
46:03 - so I did lunch then then I did try to
46:10 - make it do a shape but didn't walk
46:14 - didn't yet and did it come up with an
46:16 - error yeah yeah okay so do you want to
46:21 - share your screen so I can see what's
46:23 - happening so David if you've tried the
46:29 - color things try changing the size of
46:32 - the pen so try gone to that website I
46:34 - told you and see what happens
46:35 - yeah okay so do you mind opening
46:44 - have you been doing this in your file
46:46 - chest or have you been doing it in the
46:49 - Python shell it might be easier to type
47:00 - it in because when you do it in the
47:03 - Python shell you have to do it line by
47:04 - line so do you wanna maybe quickly go
47:07 - and open a new file but don't close this
47:11 - shell because then you can see what's
47:12 - written down because it's just easier to
47:16 - type out like when you're doing lots of
47:18 - bits of text because the Python shell is
47:22 - good like when you're doing like a
47:23 - couple of lines but sometimes it's
47:25 - easier to set it out especially because
47:28 - of the spacing but one issue I can see
47:33 - is you have the Bob forward and then
47:38 - right next to it you have Bob left but
47:41 - that should be in a new line I think
47:45 - that's the error that's coming up so it
47:49 - says invalid syntax which means like
47:51 - something the way you typed it is wrong
47:53 - so yeah it's just that you have the Bob
47:56 - left right next to the forward thing but
47:59 - yeah so it might be easy if you just
48:00 - quickly type it in this file so you can
48:02 - set it out nicely so we're using turtle
48:10 - so you go to import turtle and then you
48:23 - have to make your little bug turtle
48:39 - so daven did you figure out how to
48:42 - change the size of the pen did it work
48:45 - yes yep okay that's good
48:48 - yeah so you can make it like I think
48:51 - there's a range of numbers from one to
48:53 - ten I think
48:54 - and then did you test it and see if it
48:56 - worked as well and now what you want to
49:05 - do Chester is you want to type in that
49:07 - for loop so we want to repeat it four
49:10 - times so you type in yep what you wrote
49:13 - there so for I in range full mmm then
49:22 - press ENTER and now it's indented so now
49:26 - to do the square what two lines you need
49:29 - to do I think he's dropping out again
49:37 - oh I'm dropping out maybe so chest up to
49:43 - do the square you just need your two
49:45 - lines again and then in the new line so
50:09 - you press and take in and then you do
50:11 - Bob Douglas
50:12 - so the error you had this all was just
50:15 - that it will they were right next to
50:17 - each other but it's like a new command
50:20 - it's like a new kind of step so you have
50:23 - to do it in in you also to actually
50:29 - click on that order correct thing I
50:31 - think you just press space it
50:32 - automatically fills it out
50:38 - and left up 90
50:42 - I'm sorry brackets 90 and then if you
50:49 - wanted to do your print thing if you
50:51 - wanted to print something once where
50:53 - would you put it like at the end if you
50:56 - wanted to say the squares done or
50:59 - something yeah where would you type it
51:06 - so you can or not there so what do you
51:11 - think would happen if you don't have it
51:12 - there yep yeah so David and did that
51:17 - make sense to you as well so anything
51:21 - that's indented after that for loop
51:24 - would be repeated four times so if you
51:27 - wanted to do something once like later
51:29 - on like what Chester's doing with this
51:31 - print statement you you'd press
51:35 - backspace so that you're back in the
51:36 - edge again yes yep so we'll just see if
51:43 - this works
51:47 - and after that I'll quickly show you
51:49 - guys so you know mm-hmm so then try run
51:56 - that chest there and see what happens
52:05 - and yep just press okay
52:08 - oh yeah so this is a new file so you
52:10 - would just need to save it again and
52:15 - don't forget to give it a meaningful
52:17 - name so because we're using a loop here
52:22 - you could call it like that little for
52:25 - loop or something so again whenever you
52:31 - have like variables or whenever you have
52:34 - to name something when you're
52:35 - programming always give it meaningful
52:37 - names because sometimes if I have a
52:39 - really complicated program or like a lot
52:43 - of files if you have like names like you
52:46 - know file one five two two five three
52:49 - you wouldn't know what's what and then
52:51 - you
52:51 - they like try going to everyone to
52:53 - figure out what it's doing yep and then
52:57 - just to just save that cool
53:02 - so the square works and then the print
53:04 - function do you see it betting your
53:07 - Python shell
53:08 - it says Marcella yeah yep okay I'm gonna
53:13 - share my screen again really quickly
53:19 - sure so I'm just gonna quickly show you
53:23 - guys something
53:25 - yeah so if we sir can you see my screen
53:29 - again yeah yep okay so if I had
53:34 - something like this do you see my full
53:38 - loop right now if I was trying to draw a
53:42 - square and then I had this one or this
53:49 - one
53:49 - what's the difference between these two
53:53 - for loops like the first one and the
53:55 - second one which one would draw the
54:00 - square so the difference between these
54:07 - can anyone see a difference did they
54:15 - look the same
54:17 - yes yes they look the same to you as
54:22 - well yes all right so the fiction is
54:27 - this bob left so if I run it I'll show
54:31 - you
54:31 - oh yeah see yeah you see it now so what
54:37 - it's meant to do what I want it to do is
54:39 - just draw like tooth where's but let's
54:42 - see what it actually does oh yeah yes I
54:46 - do once closed and the doors
54:48 - oh yeah you won big understand what you
54:52 - want yeah so the reason why is if we go
54:55 - back into the code so the first time it
54:57 - did the square correctly so it did that
55:00 - correctly but the second time
55:03 - I didn't get any errors but it still
55:06 - didn't do it how I said wanted it to
55:08 - does anyone wanna does anyone want to
55:10 - try of a guess why
55:12 - pendants because the left is not mine
55:20 - yeah exactly so even though it didn't
55:24 - get me an error like the program just
55:26 - thinks oh that's what I wanted to do I
55:28 - just wanted to do a line and the reason
55:31 - why it didn't get an error is because
55:33 - there was nothing wrong with the code
55:34 - it's just something wrong with the logic
55:36 - so what Chester was saying was right but
55:39 - this bobbed up left needs to be like
55:42 - indented in so if you want to indent
55:45 - something you can also just press tab so
55:48 - if I didn't have it indented did you see
55:50 - how it drew just like a long line yeah
55:53 - the reason for that is it just repeated
55:56 - this line bobbed up forward four times
55:59 - so it just went like 50 50 50 50 and
56:02 - then it turned once so that's why it
56:07 - ended up pointing upwards oh yeah okay
56:11 - so you have you have to say - is that
56:13 - turn four times yeah four what's four
56:18 - times
56:19 - yep exactly so if we want it to always
56:22 - go straight and then turn we have to
56:24 - make sure that both things are in that
56:27 - loop does that make sense yeah yep okay
56:31 - cool now I'll give you guys a little
56:34 - challenge I want you guys to try have a
56:36 - go at doing different shapes like a
56:38 - hexagon or octagon or angle I think I'm
56:44 - gonna just pass on that because I said
56:48 - just try one of them okay so what should
56:50 - I do I'm gonna do a triangle okay try to
56:54 - triangle yes triangle is the easy you
57:01 - just remember you have to think about
57:05 - your angles as well
57:24 - and you have to think about how many
57:26 - sides a triangle have and how much you
57:28 - want it to turn so it's pretty similar
57:31 - to the square you just need to change a
57:33 - couple of numbers so do you guys have an
57:59 - idea on how you might start it yeah is
58:07 - that it yes or no yes yes okay yeah yep
58:17 - so if it's a triangle
58:21 - has anyone tried it out and seeing how
58:24 - it looks I did but it looks awful Oh
58:29 - what did it look like it looked like I
58:33 - don't know what you call that it looks
58:37 - like a cat a cat that was holding out an
58:41 - eye something in its paws that sounds
58:45 - pretty cool that sounds pretty cool but
58:48 - what doesn't look cool if you if you
58:51 - look at it it looks like I don't know
58:53 - like a Kraken mm-hmm okay so chested did
58:58 - you try run it and see what happens now
59:01 - I'm trying it right now you're trying it
59:03 - right now okay after you try it
59:05 - um if we'll see how it goes otherwise
59:08 - I'll leave you guys a little hint yes
59:14 - great
59:15 - [Music]
59:35 - hmm what did yours turn out like Chester
59:40 - I'm doing the mortgage mm-hmm
59:43 - are you bit stop just thinking just
59:51 - thinking okay so I'll give to David what
59:56 - did you write in your code all right oh
60:02 - [Music]
60:05 - but no import turtle turtle dot turtle
60:13 - George thingies yeah oh sorry I just
60:17 - meant the follow bit like the one we had
60:20 - before I didn't then Bob dot shape
60:25 - turtle yet for one in range three mm-hmm
60:32 - Bob to turn turned 50 so you go Bob
60:40 - forward or did you Bob Bob Bob said Bob
60:58 - dot then Bob dot last 90 degrees okay so
61:08 - then I went Bob affords you know round
61:13 - bobbing 90 degrees right yes then a dead
61:18 - forward and for 150 and for fifties and
61:26 - I did fall I said I did
61:29 - right turn right 90 degrees attract my
61:37 - to make a Pentagon a Pentagon okay yeah
61:41 - so one reason is because one reason is
61:48 - in the fold
61:50 - it's meant to make it easier so what you
61:53 - need you just need the same three lines
61:55 - you had before you don't need anything
61:57 - extra and the only thing you would
61:59 - change is you had the first step right
62:01 - so for I in range three because the
62:04 - triangle has three sides you want to do
62:06 - it three times but a square has when
62:11 - we're doing a square we want to turn 90
62:12 - degrees but if we're doing a triangle we
62:16 - want to turn 120 degrees so the reason
62:20 - for that is I'll quickly show you if you
62:23 - open up a calculator yes
62:27 - so how many two triangle pardon I
62:32 - created a triangle oh okay cool good job
62:35 - a wide one a wide one that's pretty cool
62:38 - yep so I'm quickly explaining today with
62:42 - the angle we have to turn is 120 the
62:46 - reason for that is we go 360 because 360
62:50 - is a full circle and then a triangle has
62:53 - three sides so we go divided by 3 and
62:56 - that's 120 so each time we want to move
63:01 - forward a bit and I'm turn 120 move
63:05 - forward a bit more 120 go forward again
63:07 - 120 and then when you run it you should
63:12 - be able to see a triangle I did a world
63:16 - working outside just did did you just
63:20 - guess it left 45 three times other 45 oh
63:25 - yeah no I knew those Sid left not only
63:32 - left right it's 45 three times did you
63:38 - like write the code 310 that line of
63:40 - code three times yeah okay
63:44 - so you can do that but remember the
63:47 - loops make it easier so that you don't
63:49 - actually have to repeat that bit of code
63:51 - so do you remember how when we were
63:55 - making the square or even now when we're
63:57 - making a triangle it would mean we would
63:59 - have to repeat that bit of code two
64:01 - extra times but because of this loop
64:04 - it's really short and that's all the
64:06 - code we need to make a shape so that's
64:12 - actually the end of the lesson but did
64:14 - anyone have any questions okay cool if
64:19 - you want at home you can try make some
64:22 - other shapes but otherwise I'll see you
64:25 - guys next week
64:26 - yep bye