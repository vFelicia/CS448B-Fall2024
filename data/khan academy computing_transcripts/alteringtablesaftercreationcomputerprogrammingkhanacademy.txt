00:00 - We're back with the database
for our diary app.
00:03 - Now, when we first created these tables,
like the `diary_logs` table,
00:08 - we decided to store
user ID, date, and content.
00:12 - And now I want you to imagine
00:14 - that a few months after
we launch this diary app,
00:18 - a user designer suggests adding
a how are you feeling drop-down
00:24 - on each diary entry.
00:26 - And the user would say something
like happy, or sad, or confused.
00:30 - In order to store that, we need to add
an emotion column to the table.
00:37 - Now we could just add it like this.
00:41 - But if this was a database for an app
in a real production environment,
00:46 - then we couldn't just
edit the `CREATE` statement
00:48 - because that's something that
we actually issued months ago,
00:51 - and it's already happened.
00:53 - And if we re-run it,
it'll actually remove the current data.
00:57 - And we don't want to lose all the data
that we've gotten over these many months.
01:01 - So, at this point,
after we've done `CREATE`,
01:04 - and after we've got data,
01:06 - we're going to need to use
the `ALTER TABLE` statement.
01:10 - And to use that, we write `ALTER TABLE`,
and then the name of the table,
01:15 - and then `ADD`, and then the name
of the column name we're adding,
01:20 - and then the data type
of that new column.
01:23 - Great! So now, the next time
that the user makes an entry,
01:30 - we'll need to specify that column--
or we can specify that column.
01:35 - So let's say they went to Disneyland,
01:40 - and to specify that new column,
we're going to put `, emotion`,
01:46 - and then here we'll just say happy--
most people are happy to go there.
01:52 - Okay, so, let's see what it looks like
now if we `SELECT` it all.
01:58 - So can we see the latest row
has happy in the emotion column,
02:03 - and the row before it
has that big old `NULL` in it.
02:08 - And that is what databases usually do,
02:10 - they fill in `NULL`
for unspecified values.
02:13 - If we want, we can actually get it
to fill in some other value
02:17 - for rows where it wasn't set,
02:19 - and that's what we think of
as the default value for a column.
02:23 - So to do that,
if we had wanted to do that,
02:25 - we would have put `default`
and then the value
02:29 - in that `ALTER TABLE` statement
when we ran it.
02:32 - So now you can see,
instead of `NULL` we see unknown.
02:36 - So that's an option for you
when you're adding a column,
02:40 - and just something to keep in mind,
02:42 - depends what you're adding
to the database.
02:46 - Okay, so now let me show you
something that you rarely do--
02:50 - deleting an entire table.
02:52 - Maybe I would do this if I
migrated all of the data
02:55 - out of the this table
into some new table,
02:58 - or if I just got mad and decided
to be a horrible person,
03:01 - and take a rampage all over a database.
03:04 - That's bad.
03:05 - But anyway, we can do this
using the `DROP TABLE` statement.
03:11 - And now, if I try to `SELECT`,
what happens?
03:16 - I actually get an error,
because my table no longer exists.
03:20 - So it can't select from it.
03:22 - So that was a bad idea,
and I'll just delete it.
03:27 - You should think really carefully
about dropping tables.
03:31 - Do not just
drop them willy-nilly.
03:33 - You should also be careful
with `ALTER TABLE`,
03:36 - especially if you're running it on
a table with a lot of rows,
03:39 - because you could have
performance issues there.
03:42 - Really, I don't want to scare you,
but you should be careful
03:45 - whenever you're making
any changes to your database.
03:48 - With great power comes
great responsibility--
03:51 - and now you have both.