00:00 - - What is an algorithm?
00:01 - A broad answer might be a set
of steps to accomplish a task.
00:05 - You might have an algorithm
for getting from home to school
00:08 - or making a grilled cheese sandwich
00:09 - or for finding what you're
looking for in the grocery store.
00:13 - In computer science, an
algorithm is a set of steps
00:16 - for a computer program
to accomplish a task.
00:18 - Algorithms put the science
in computer science,
00:22 - and finding good algorithms
and knowing when to apply them
00:25 - will allow you to write
interesting and important programs.
00:28 - Let's talk about some famous
examples of algorithms.
00:31 - How does Google Hangouts
transmit live video
00:34 - across the internet securely?
00:36 - Using audio and video
compression algorithms.
00:40 - How does Google Maps figure out how to get
00:41 - from Dallas, Texas to Orlando, Florida
00:44 - so that you could get to Disney World?
00:46 - Using a route-finding algorithm.
00:49 - How does Pixar color a
3D model of a character
00:52 - based on the lighting
in a 3D model of a room?
00:55 - Using a rendering algorithm.
00:57 - How does NASA choose how to arrange
01:00 - the solar panels on the
international space station
01:02 - and when to rearrange them?
01:04 - With optimization and
scheduling algorithms.
01:08 - Those algorithms are more complex
01:10 - than our everyday algorithms,
01:11 - like making a grilled cheese sandwich,
01:13 - but they boil down to the same thing,
01:15 - a set of steps to accomplish a task.
01:18 - If you know something
about existing algorithms,
01:21 - you can save yourself some effort
01:22 - and make your programs faster
by applying the right one.
01:26 - For example, let's say
you're writing a game
01:29 - and you want the user to be able to
01:30 - play against the computer.
01:32 - Well, computer scientists have figured out
01:34 - how to write chess-playing programs
01:35 - that beat the top chess grandmasters
01:38 - using an algorithm called
Minimax Search Tree
01:41 - with alpha-beta pruning.
01:43 - If your game is similar to chess,
01:45 - then you might be able to use algorithms
01:46 - based on those techniques.
01:48 - If not, then knowing the
limitations of those algorithms
01:51 - might lead you to redesign your game,
01:53 - if it does require having
a skilled computer player.
01:57 - It's also important to know
how to design new algorithms,
02:00 - as well as how to analyze their
correctness and efficiency.
02:03 - In the biological sciences,
02:05 - new algorithms are
continually being designed
02:07 - for purposes such as designing
the molecular structures
02:10 - that are the core of
disease-fighting drugs.
02:13 - In physics, algorithms simulate
climate and weather patterns
02:16 - and other algorithms search and analyze
02:18 - the vast data about stars and the universe
02:20 - that is collected by
automated space telescopes.
02:23 - Across all the sciences,
02:25 - and even on websites like Khan Academy,
02:27 - efficient algorithms are needed to analyze
02:29 - huge datasets or to select intelligently
02:32 - from a vast number of possible decisions.
02:35 - In just about any area you
might be interested in,
02:37 - new algorithms will allow
massive computational power
02:41 - to be harnessed to do things
02:42 - people really need and care about.
02:45 - Not all algorithms are created equal.
02:47 - So what makes a good algorithm?
02:49 - The two most important criteria are that
02:51 - it solves a problem at hand
02:53 - and that it does so efficiently.
02:55 - Most of the time, we want an algorithm
02:57 - to give us an answer that
we know is always correct.
03:00 - Sometimes, though, we can
live with an algorithm
03:03 - that doesn't give us a correct
answer or the best answer,
03:06 - because the only perfect algorithms
03:07 - that we know for these problems
03:09 - take a really, really long time.
03:12 - For example, let's say we want a program
03:13 - that would determine
the most efficient route
03:15 - for a truck that delivers packages
03:17 - starting and ending the day at a depot.
03:19 - It would take weeks to run,
03:21 - but if we're okay with a program
03:22 - that would determine a route that's good,
03:24 - but maybe not the best,
03:25 - then it could run in seconds.
03:27 - In some cases, good is good enough.
03:30 - How do you measure the
efficiency of an algorithm?
03:32 - We could time how long it takes
to physically run the code,
03:36 - but that would tell us only about
03:37 - that particular implementation
03:38 - in a certain programming
language on a particular computer
03:41 - and just for the input it was given.
03:43 - Instead, computer scientists
use a technique called
03:45 - asymptotic analysis,
which allows algorithms
03:48 - to be compared independently
03:49 - of particular programming
language or hardware,
03:52 - so that we can conclusively say that
03:53 - yes, some algorithms are
more efficient than others.
03:57 - Now you can learn about
algorithms and asymptotic analysis
03:59 - on Khan Academy thanks to the contribution
04:01 - of two Dartmouth college professors.
04:04 - Tom Cormen is the first
author of the most popular
04:06 - college algorithms textbook in the world,
04:08 - plus the author of Algorithms Unlocked.
04:11 - Devin Balkcom designed
Dartmouth's Intro CS course
04:14 - and researches robotics.
04:16 - He built the world's first
origami folding robot.
04:19 - Tom and Devin will teach
you many of the algorithms
04:21 - that you would learn in APCS or CS-101,
04:23 - like searching, sorting,
recursive algorithms,
04:26 - and my personal favorite,
graph algorithms.
04:29 - They'll be tons of
interactive visualizations,
04:31 - quizzes, and coding challenges
to help you understand better
04:34 - along your learning journey.
04:36 - Ready for the next step?