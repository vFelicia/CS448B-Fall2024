00:01 - A Gem, a pretty sweet gem!
00:04 - But you know would be better than a single gem would be a whole row of gems!
00:08 - And of course, now we know the best way to make
a row of gems would be with a loop.
00:12 - So let's use a for loop to draw 12 gems in a row.
00:16 - Going from left to right across the screen.
00:19 - Ohh like that. So that is a
00:22 - for (var i equal 0; i is less than 12; i plus plus)
00:31 - And then we will take this line and move it inside here.
00:36 - So now we have 12 gems but they're actually all piled right on top on each other.
00:40 - Remember, we want them going across the screen.
00:43 - That means we want to be changing the x. And,
00:45 - 36 is the X right now, but we want it to be different each time.
00:49 - That means we want it to be dependent on i.
00:51 - So what we can do is simply say; i times 36.
00:56 - So the first one is at 0, and then 36, then 72, and etc etc
01:02 - Cool! Now we have a row of gems.
01:04 - And this kind of reminds me of those those scenes
in Indiana Jones or Aladdin
01:07 - Where the hero discovers that underground treasure
trove of gems
01:11 - but they usually find way more gems than this.
01:13 - Not just a row of gems, but a pile of gems!
01:17 - so how could we actually make gems going
01:21 - all the way down the screen too?
01:24 - Well, we could start by just repeating the for loop and copy pasting it
01:30 - and then changing this y each time.
And, so
01:34 - we'll change it to 60 and then 90.
01:37 - So now we have three rows of gems and that's cool.
01:42 - Umm... but this is also getting really boring because all I'm doing is
01:45 - copying and pasting and changing this one little thing.
01:49 - And normally in the past when we found ourselves writing repetitive code like that
01:52 - We would be like, "Oh, maybe we should just use a loop instead"
01:57 - But we are already using a loop.
01:58 - so what's the solution to avoid writing this, you know, doing this repetitive copy-paste?
02:03 - Well it is something we call "nested for loops" - A loop within a loop.
02:09 - So what we are going to do is make an outer loop
02:12 - And that's what's going to take care of going down the screen
02:14 - and then our inner loop is going to keep taking care of what it's doing now
02:19 - which is going from left to right.
02:21 - Let me show you what I mean.
02:24 - So for - and we use a different variable this time, called j, since we're already using i
02:29 - so for(var j equals 0; j less than 13; j plus plus)
02:37 - Okay, so that is going to be our outer loop, in charge of going top to bottom.
02:41 - and then we're just going to take one of our previous for loops and put it inside there
02:48 - and fix the indenting, and we'll delete these old ones. Okay.
02:53 - So now what we have is we've got them all piled on top on the same row.
02:59 - So the thing is that we want to change the y, right?
03:01 - That's what we were changing before when we were copying pasting and
03:04 - right now, the Y is always 90
03:06 - We want to y to change for each row.
03:09 - So just the way x is dependent on i, we want the y to be dependent on j.
03:16 - So we can go ahead and change this to something like, maybe, j times 30.
03:24 - Tada! Yeahh! So many gems! Allright!
03:29 - Lets walk through what this does again.
03:31 - The outer loop creates this variable j and increments it upto 13. And,
03:38 - In each execution of that outer loop, it runs this inner loop.
03:44 - The inner loop creates the variable "i" which goes upto 12.
03:48 - And for each execution of the inner loop, it draws an image on the x and y which are based off of "i" and "j".
03:55 - And this "i" changes a lot more frequently than the "j" because of that.
03:59 - To try and understand this even better, lets try and actually visualize the "i" and "j" values.
04:05 - So what I will do is comment out image
04:09 - and then set a fill color
04:12 - and I'm going to use a text command to show the value of "j" - so text "j"
04:16 - and then I will put it at the appropriate spot here. Okay.
04:22 - Now we can see "j" going from 0 to 12.
04:26 - This is basically where our rows of gems were positioned as well.
04:32 - And now we will visualize "i" and see how that changes
04:35 - So for "i", let's make it a different color.
04:43 - Then we will go put the "i" somewhere.
04:46 - And we will change it's x so that it goes across the screen.
04:50 - We will do the same thing for the y.
04:54 - Now we can see that the "i" is going from 0 to 11.
04:59 - And the "i", as I was saying, changes a lot more frequently
05:04 - And this line of code gets executed a lot more times than this line of code
05:08 - Because this line of code is executed for every execution of this inner for loop
05:13 - Whereas this line of code gets executed only for every execution of the outer loop.
05:19 - So this visualizing of the "i" and "j"
05:22 - hopefully helps you understand what's going on with these nested for loops better.
05:26 - Now let's bring back our gems, because they are kind of cooler!
05:30 - So there's a lot you can do with nested for loops
05:34 - If you just think about everything in the world that
05:37 - looks like a two-dimensional grid, like a
chess board, a quilt,
05:39 - the stars on the US flag, cool patterns and wallpapers
05:44 - To start off your imagination, just play around with this code
05:47 - like by changing the image.
05:49 - I will start off by changing it to a heart!
05:53 - To show you how much I love nested for loops! Aww!