00:01 - Here's a function you might not know about: random.
00:04 - It takes in two parameters: a lower bound and an upper bound and it gives you back a random number somewhere between those two bounds.
00:10 - So here this variable number will be somewhere between zero and one. And then we're going to draw that number to the canvas using this text function.
00:18 - Those last two parameters are for the x and y coordinates of the text and we use textSize and fill to set the fill and the color of the text.
00:26 - So if I press restart a couple of times you can see the random numbers being generated.
00:30 - And you'll see that the precision of these numbers is to three decimal places.
00:34 - So here's a question: What if I only wanted to generate a number that's either zero or one?
00:38 - Well, we can use this other function called round, and this takes in a number that can have as many decimals as you want, and it rounds it to the nearest integer.
00:48 - So I'm just going to go ahead and make a new variable called "integer"
00:52 - and assign it whatever round gives us. And we can also draw that "integer" to the screen with our handy-dandy text function.
00:58 - So text "integer"...we'll put it maybe at 160 and 350. Nice. So this shows us that round of 0.2314 rounds down to zero.
01:12 - And if I put in something like 4.6, that would round me up to 5. Neat.
01:18 - So if I wanted to randomly generate a 0 or a 1, I could take this random decimal that we're generating that falls between 0 and 1 and stick it right into that round function.
01:30 - So just like this: I'm going to grab this number and plop it down here.
01:36 - And now you can see that whenever we generate a number that is less than 0.5 it gets rounded down to 0
01:41 - And whenever we generate a number that is greater than or equal to 0.5 it gets rounded up to 1.
01:47 - And maybe you can start to see the beginning of some sort of coin-flip game here where if you flip a zero, your friend gives you a dollar.
01:55 - And if you flip a one your friend gives you ten dollars. Great game, right?
01:58 - In fact, let's go ahead and illustrate this coin-flipping game with some super realistic coins that just happen to look like really boring ellipses.
02:06 - Just like this: I'm going to draw an ellipse in the middle of our canvas and that's going to be our coin. Ooh it's covering the text, let's scoot that up a bit. Great.
02:17 - And, I have this idea where if I flip a zero, I'm going to show the purple side of the coin, so to make the coin purple I can just fill it with some purple.
02:28 - And if I flip a one, I'll show the...umm...yellow side of the coin. So it'll be a purple and yellow-sided coin.
02:35 - And luckily, with our impressive knowledge of if-statements this is super easy.
02:39 - So we can just say if "integer" equals zero, so remember we use three equals signs to check for equality, then we will fill the ellipse purple.
02:53 - And then if "integer" is equal to one, we have a different fill function and we'll make that one yellow.
03:06 - Great. And it works! Woo hoo! But let's think about this for a second. Integer here will only ever be zero or one, right? We designed it that way.
03:16 - So that means that either this statement will be true
03:19 - Or this statement will be true
03:21 - Always.
03:22 - We've covered every possible case here, which means that we can start thinking about our decision making a little differently.
03:27 - That is, if "integer" is equal to zero, we will fill it purple, otherwise, we'll fill yellow.
03:35 - So do you see how we don't have to say anything about "integer" being one in that second case?
03:40 - All we have to say is if "integer" is zero, do this; otherwise, do that.
03:45 - And in programming, the way we say "otherwise" is "else."
03:48 - So watch this: I'm just going to replace this second if-condition with the word "else"
03:53 - And what this means is that if the stuff inside these parenthesis is true, then run the code in these brackets.
03:59 - Otherwise, run the code in these brackets.
04:03 - And sometimes we'll even put the "else" on the same line as that closing bracket just to remind ourselves that these two blocks of code are very, very connected.
04:10 - You can't have an "else" block unless you just had an "if" block. Got it?
04:15 - And this will also help you remember to not put something in between the two blocks like "var y equals 0," and that would just break everything! So don't do that.
04:27 - Great. So now we know about if-else which is really good when we are deciding between two possible things to do.
04:32 - But what if we have more?
04:34 - What if I generated an integer between zero and two and then I had three possibilities: zero, one, or two? What then?
04:40 - Duh duh duh! To be continued.