00:00 - - Do you remember why I originally started
00:03 - the crocodilization of this web page?
00:07 - It was because I have a
deep fear of crocodiles.
00:10 - Well, I think that I'm ready
to tackle my fear even more,
00:16 - to bring even more
crocodiles onto this page.
00:20 - Well, how is that even possible?
00:22 - I think it would be really fun
00:24 - if I could just cover a web page
00:26 - with crocodile images
wherever I click my mouse,
00:30 - so that's what we're going to do.
00:33 - Now, I've written this plan in
00:35 - pseudocode in the script tag here.
00:40 - If you've never used pseudocode,
00:41 - it's like a more
human-friendly version of code.
00:46 - I find it helpful to write out
my plan in pseudocode first,
00:49 - especially for more complex interactions
00:51 - that I want to implement.
00:54 - Now, I'm going to convert
this pseudocode to real code.
00:59 - Okay, so the first thing, when
the user clicks on the page.
01:05 - So, I want to know whenever the
01:06 - user clicks anywhere on the page.
01:09 - To do that, I can attach an event listener
01:12 - to the entire body tag, "body"
01:16 - then we use the 'on' method,
01:19 - and we give it the event name "click",
01:21 - and then we pass it a callback function.
01:26 - Now, inside that callback function,
01:28 - I want to create a new image.
01:31 - So, I'll store it into a variable.
01:35 - '$img =' then we pass in the image tag,
01:39 - and then we need to
change the source of it,
01:42 - and I'll use the source up here,
01:48 - and then I'll set the width of it to 100,
01:54 - and then, of course, we need to
01:56 - attach this somewhere to the page,
01:58 - so I'll just append it to the body.
02:01 - There we go.
02:04 - So, currently, if I
click, I'll just see this
02:07 - crocodile image appear
at the end of the page.
02:12 - If you want, you can pause and
02:13 - see that happen for yourself, too,
02:16 - but I want to position that image
02:18 - according to where the
click happened on the page.
02:22 - How do we know where the click happened?
02:25 - Well, whenever a mouse event happens,
02:28 - the browser gives the
page that information,
02:32 - and jQuery stores it inside
a jQuery event object.
02:36 - So, where is that event object?
02:39 - Well, jQuery actually passes it to
02:42 - our callback function
as the first parameter.
02:46 - I'll give it a name so I can access it
02:49 - by name inside the callback function.
02:53 - Now, sometimes I like to log out my event
02:56 - to inspect all its
properties before I use it
02:59 - just to see what I'm dealing with.
03:03 - If you pause the talk-through
and click the page,
03:05 - you should see a jQuery
event object logged out
03:08 - with a long list of
interesting properties.
03:11 - You can also look at
the jQuery documentation
03:13 - to see what properties to expect
and what they actually mean
03:18 - The two properties that I'm
03:19 - interested in are pageX and pageY,
03:23 - as those tell me the position of
03:24 - the click relative to the page,
03:27 - and I can use them to
position my image with CSS.
03:31 - So, first, I need to make sure
03:34 - to set my CSS position
property to absolute.
03:41 - If you don't remember
CSS absolute positioning,
03:44 - you look back in the HTML/CSS course.
03:48 - Now I'm going to actually position it
03:49 - according to the mouse position.
03:51 - So, I'm going to do
03:54 - the top equal to
03:57 - 'event.pageY'
04:01 - so we're accessing the pageY property
04:04 - of the jQuery event object that
04:06 - gets passed to our callback function,
04:09 - and then I'm going to set the left
04:13 - to 'event.pageX'
04:17 - Oh, and I should also add a unit, px,
04:22 - because CSS expects us to give a unit
04:25 - so that it knows which unit to use
04:26 - or if you're doing percentages,
04:27 - or, you know, what you're doing,
04:29 - so we're doing pixels, because that's
04:31 - what the pageY and pageX are representing.
04:33 - They're representing pixels.
04:35 - Okay, now, try, this is a cool part.
04:37 - Pause the talk-through; click the page.
04:40 - It's pretty cool, crocodiles everywhere,
04:44 - and I actually like looking
at them; I'm not afraid.
04:49 - So, the event object can be pretty useful.
04:52 - We can use it for cases like this
04:54 - when we need to find
out the mouse position,
04:56 - like painting apps, point and click games,
04:59 - drag and drop interfaces.
05:01 - We can also use the event object
05:03 - to find out what keys were
presses when an event happens
05:06 - so we can make keyboard-controlled apps
05:08 - like side-scrolling games and
05:10 - online code editors, like this one.
05:13 - Pretty neat.