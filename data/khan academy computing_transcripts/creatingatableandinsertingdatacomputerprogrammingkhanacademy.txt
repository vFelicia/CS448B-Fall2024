00:00 - - Welcome to my database.
00:01 - It has no data in it yet
00:03 - because I want to build it up with you.
00:05 - What sort of data should we store
00:07 - in our first table?
00:09 - Let's start with a grocery list,
00:10 - which you've probably used in real life.
00:13 - I'm pasting an example list
00:15 - which has three delicious items
00:17 - and how much we want to buy
00:18 - of each of them.
00:21 - Our first bit of sequel
will be the command
00:23 - to make the table to store this list.
00:26 - Alright. CREATE TABLE in all caps
00:30 - and then the name of
the table "groceries."
00:33 - And then ( );
00:37 - We see an error pop up
00:38 - because the sequel interpreter
00:40 - expects to see the column names
00:42 - inside these parenthesis.
00:44 - What column should we have
00:45 - in order to describe
each item on our list?
00:48 - Well first we need a name for the item,
00:51 - which I'll call "name"
00:52 - and we need to follow
that with a data type.
00:55 - We have a few options.
00:56 - Let's go for TEXT.
00:58 - If we look on the right hand side,
01:00 - we can see our new table
is listed with one column.
01:03 - But we also need to specify
01:05 - how many of each thing to buy,
01:06 - like our four bananas.
01:08 - So let's add and quantity column as well.
01:11 - And this will always have a whole number
01:13 - so let's use an integer
for that data type.
01:16 - And now we can see that new column
01:18 - listed in our table.
01:20 - That looks pretty good
01:21 - if we're thinking about what data we have
01:23 - in this grocery list.
01:24 - But we're missing something that we need
01:26 - in databases.
01:27 - A unique identifier for each row.
01:30 - We almost always need unique IDs
01:32 - for each row in a database
01:34 - because we need a way
to identify rows later
01:36 - when we're updating or deleting them
01:37 - and not be dependent on other columns
01:39 - because those could change.
01:42 - We typically specify this ID column first.
01:45 - So I'm moving my cursor before a name.
01:48 - I'll call this column "id,"
which that's standard.
01:52 - And then for the data type,
01:54 - I'll have to write this phrase,
01:55 - "INTEGER PRIMARY KEY"
01:58 - which signals to the database
01:59 - that it should treat this
as the row identifier
02:02 - and that each row must have a unique value
02:04 - for this column.
02:06 - Okay.
02:07 - Now we have our groceries table
02:08 - with three columns in it.
02:09 - It's empty though so
let's put some data in it.
02:13 - Write "INSERT INTO"
and then the table name
02:17 - "groceries" then "VALUES"
02:20 - and then (
02:22 - and here we start
listing the column values
02:25 - in the order that we declared the columns.
02:28 - The first column was id so I'll put "1"
02:31 - since we haven't used that id yet.
02:32 - The second column is name
02:34 - so I'll write "bananas"
02:36 - and third column was quantity.
02:38 - So I'll write "4."
02:40 - Do you see how the schema
update on the right?
02:42 - It now says that there's one
row in the groceries table.
02:45 - So our instruction worked.
02:47 - Let's add the next two items
02:48 - and just doing the same thing.
02:50 - "INSERT INTO groceries"
02:52 - "VALUES (2, "Peanut Butter"
02:57 - and just one of those
02:58 - cause if I say too much
02:59 - and "INSERT INTO groceries VALUES"
03:03 - and id "3, Dark chocolate bars,"
03:05 - have to be dark.
03:06 - Milk chocolate is not even chocolate.
03:08 - And we'll get two of those. Okay.
03:11 - So it says three rows but to really see
03:14 - that the database actually contains data
03:16 - you can click the table name on the right.
03:19 - This will insert a select
statement in your code.
03:22 - And don't worry too much about this now
03:24 - because we'll get to it in the next video.
03:26 - If you want, you can
pause the talk through
03:28 - and try clicking the table name yourself
03:30 - to see what happens.
03:31 - That's it, that's all we needed
03:33 - to create our first
table and add data to it.
03:36 - It's pretty cool, huh?
03:37 - In the next section, we'll see how
03:38 - to get the data back out of the table
03:40 - in more interesting ways.