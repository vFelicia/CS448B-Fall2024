00:01 - In our last talk-through, we showed how you can animate a ball bouncing off the walls using the draw function and if statements.
00:07 - Let's review.
00:08 - First, we set up some initial variables for position and speed of a ball.
00:12 - Then, in the draw function, which is that special function that gets called over and over when your program is running,
00:17 - we repaint the background and draw an ellipse on the canvas
00:20 - and we position that ellipse based on the position variable and the speed and how they affect each other.
00:27 - Now, without if statements, our ball just kept on going forever and ever,
00:31 - or until we pressed restart.
00:32 - So we added two if statements down here
00:36 - to check and see if the ball was near the right side of the screen or the left side of the screen,
00:40 - and if so, we change the speed to be positive or negative so that the ball basically would bounce back.
00:45 - So now we just have this ball, bouncing back and forth forever.
00:50 - So that was pretty cool, and there's a lot of really cool animations that we can make with that.
00:53 - But now, I want to add user interaction to this program.
00:57 - See, right now this program's like a TV show.
01:00 - if you gave it to a friend, and your friend didn't know how to program, they couldn't really interact with it.
01:04 - All they could do is watch it, which is cool,
01:07 - but it's a lot more cool if they could actually do something.
01:10 - So, let's give the user some ways to control it.
01:13 - Remember earlier we learned about two special global variables called mouseX and mouseY.
01:20 - Those variables return numbers that tell us about the current position of the user's mouse
01:25 - and they're a great way to make a program more interactive.
01:28 - So, let's see. How can we use them?
01:31 - Well, we should use them inside the draw function somewhere.
01:34 - Because that's the only code that's called over and over as the program runs.
01:39 - Everything outside of draw is only called once, when the program first starts.
01:44 - So, it doesn't make sense to use mouseX and mouseY there.
01:48 - The user hasn't had a chance to interact with it.
01:51 - In draw, we're drawing the ball 200 pixels down the screen right now.
01:57 - How about we just replace that with mouseY?
02:01 - Because that is the y position, right?
02:02 - So this way it will just add the y position dependent on where the user's y is. Right?
02:08 - So check this out. By just moving my cursor up and down, I can change the line that the ball moves along.
02:14 - That's pretty cool. But I want to use mouseX, too.
02:18 - So, how should I use that?
02:19 - Well, why don't we just make another ball
02:22 - and have that ball going in the opposite direction: up and down.
02:25 - And there we'll just have the user control the x position of that.
02:30 - So we kind of just do the reverse.
02:32 - We'll say ellipse mouseX position 50 50. Alright?
02:40 - Check this out! Now, I've got these two balls that I control, and going in perpendicular directions.
02:46 - But, I'm still not happy.
02:50 - I want to give the user even more control.
02:53 - I want to give the user the power to start up the second ball.
02:56 - To actually bring it into existence, just by pressing their mouse.
03:01 - Well, then I need to figure out how to tell that the user is pressing their mouse.
03:07 - Thankfully, we have a super special boolean variable for just that.
03:12 - It's called mouseIsPressed and we can use it inside an if statement.
03:19 - So, let's see. This is our second ball.
03:22 - So we can say if mouseIsPressed, and then we'll move the ellipse colon to there.
03:31 - So, what this is doing here, is telling the program that we only want to draw this ellipse if this is true
03:40 - and mouseIsPressed will only be true if the user is pressing their mouse.
03:46 - So, let's try it.
03:48 - Ta da!
03:50 - So now I can make the ball appear whenever I press.
03:53 - So it's zooming in from this parallel universe. In! In! In!
03:58 - It's awesome!
04:00 - So, the interesting thing about this variable mouseIsPressed
04:04 - is that it changes based on what the user does, not based on what our program does.
04:08 - and since the draw function gets called repeatedly over and over,
04:13 - the output of our program will change over time
04:16 - just with a little bit of user input.
04:18 - With the combined power of if statements and mouseIsPressed,
04:22 - you have everything you need to make awesome things like buttons, and drawing programs.
04:26 - Woo hoo!