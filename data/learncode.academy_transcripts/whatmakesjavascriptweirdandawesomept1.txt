00:01 - all right so I'm going to be doing five
00:02 - videos for you here um and they're going
00:04 - to be the five things that make
00:06 - JavaScript super weird uh but also that
00:09 - make JavaScript awesome these are five
00:11 - of the most misunderstood or barely
00:14 - understood or not even understood things
00:17 - about JavaScript uh they're going to be
00:19 - very useful very very useful if you're
00:21 - new to JavaScript and and honestly lots
00:24 - of intermediate developers still don't
00:26 - grasp these things very well so we're
00:29 - going to be covering I'm going to do a
00:30 - video on each so you can rewatch it they
00:32 - build on each other um for the most part
00:36 - they all build on each other and so
00:37 - you'll want to rewatch it till you kind
00:39 - of get it uh and then move on with each
00:42 - one so let's get into the first one uh
00:44 - one of the first things that makes
00:45 - JavaScript weird is first class
00:48 - functions what this means is that
00:50 - functions can be passed as arguments and
00:52 - if you don't understand it you're not
00:54 - going to understand why a lot of the
00:55 - javascrip JavaScript syntax is the way
00:58 - it is let me show it and code it's a lot
01:01 - more easy you know a lot easier to
01:03 - understand uh let's go make a function
01:05 - called
01:06 - add uh first second um and all this is
01:10 - going to do is
01:11 - console.log first plus second all right
01:14 - there we go and let's do something let's
01:16 - go add 2+ 3 let's add 4 plus 5 let's hit
01:21 - save and there we go I don't know if
01:22 - that's big enough for you uh but we we
01:25 - console log 2 + 3 and we console log 4 +
01:28 - 5 now let let's add a third one called
01:31 - call back um and this is something you
01:33 - see a ton in jcer whatever the optional
01:36 - last argument is a callback function to
01:38 - fire when it's done and so let's create
01:41 - a function here um and this one we will
01:44 - console log
01:46 - done so there we go and now I need to do
01:49 - something with call back here so I'll go
01:51 - call
01:52 - back and I'm going to actually fire it
01:55 - when I'm done with my addition here so
01:58 - what I've done is I've given it argument
01:59 - one and to our numbers argument three is
02:01 - a function I'm creating right now um and
02:04 - I'm passing that function up here it's
02:06 - not firing yet it's being passed as an
02:09 - argument that add is going to hold on to
02:12 - it's going to do everything it needs to
02:13 - do which in this case is just addition
02:15 - and then it's going to fire that
02:16 - function later as a call back uh let me
02:20 - show you what this is going to do so now
02:21 - it's going to say it's going to console
02:23 - log 2+ three and then it's going to
02:25 - console log done so let me actually
02:27 - create another one here
02:30 - and this is going to console log done
02:34 - again so this is going to do the exact
02:37 - same thing it doesn't care what your
02:38 - callback function is it's just going to
02:40 - fire it when you're done so it's going
02:43 - to console log 2+ 3 done conso log 4 + 5
02:47 - and then it's going to fire my other
02:48 - function again and so that is what it
02:52 - means to pass a function a function is a
02:55 - first class um object uh and so here's
02:59 - kind kind of another way to look at it
03:01 - is a function is basically a variable I
03:05 - can go
03:06 - function
03:07 - um uh log
03:11 - done and that will console log
03:14 - done there we go and so now I can
03:17 - actually pass log
03:19 - done and let's go ahead and mute that
03:22 - guy so there you go exact same thing I'm
03:25 - creating a function here called log done
03:27 - I'm passing it as if it was a variable
03:29 - because to JavaScript it is a variable
03:33 - um and so I'm passing log done in it's
03:36 - going to get it's now going to be
03:37 - Associated his call back and it'll get
03:39 - fired whenever and honestly in jQuery uh
03:42 - what you're actually seeing is something
03:44 - more like this if call
03:47 - back then fire call back so that way you
03:50 - don't have to pass call back I can just
03:52 - do console log 4 five here there you go
03:55 - so now it's going to do 2+ 3 fire the
03:58 - call back cuz it exists
04:00 - fire 4 + 5 and don't fire the call back
04:03 - cuz it doesn't exist um and so that's
04:06 - kind of a little bit closer to what's
04:08 - going on it's more complicated than that
04:10 - but if you want to build your own
04:11 - callbacks that's a nice way to make them
04:13 - optional um and so that's what it means
04:16 - for them to be first class functions so
04:19 - in jQuery when you're doing stuff like
04:22 - my
04:23 - div uh click
04:26 - function you're actually creating a
04:28 - function right there that you're passing
04:30 - to the click and it's not going to do
04:31 - anything with it until the click event
04:33 - fires um and that's why you can also go
04:37 - uh function handle
04:40 - click you know do something smart there
04:44 - something
04:46 - smart um and then you can actually go
04:48 - handle click and that looks a lot
04:50 - cleaner there that's a lot of cleaner
04:52 - way to do a lot of your jQuery um and
04:54 - that kind of leads us into uh video
04:57 - number two which is event driven envir
04:59 - enement let's get into that