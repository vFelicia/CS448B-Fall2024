00:00 - in this video we are going to cover
00:01 - parcel which is an awesome new build
00:03 - system tool um and dare i say it it just
00:06 - may be the webpack killer
00:08 - for anybody who builds modern javascript
00:10 - applications configuring and working
00:12 - with the build system is one of the
00:14 - greatest pain points that you're going
00:16 - to have but parcel streamlines almost
00:19 - all of that
00:20 - and for as young as it is it is
00:22 - incredibly featureful and it's my go-to
00:24 - build system until i should potentially
00:27 - need and most of the time i absolutely
00:29 - don't need webpack for something
00:31 - extremely business specific so i'm going
00:33 - to show you how parcel works it's a lot
00:35 - of fun and we're going to cover so much
00:36 - ground in just a couple minutes
00:37 - basically you start by npm installing
00:40 - globally parcel dash bundler you can
00:43 - also install this as a dev dependency
00:45 - into your project which just means
00:47 - adding a script to your npm package so
00:49 - we're good to go there i'm in the parcel
00:51 - directory now i can
00:53 - init y
00:55 - and i don't really need to do that yet
00:57 - but let's go ahead and get going i'm
00:58 - going to touch an index html i'm going
01:01 - to do a module 1.js and a module 2.js
01:04 - we're going to have three
01:05 - different files going on our page here
01:08 - and in vs code i can just an exclamation
01:10 - in tab to get kind of like a basic html
01:13 - file let's go and include our javascript
01:15 - module one
01:17 - and that's it i'm ready to have my build
01:20 - system all i have to do is run parcel
01:23 - which is short for parcel serve so there
01:25 - we go i have a local server running
01:27 - let's go to that local server
01:29 - and this is loading my empty html page
01:31 - so let's see what happens if i do an h1
01:36 - yep we've got live reloading going on
01:37 - there okay awesome let's do something
01:39 - more in javascript let's kick over my
01:40 - module 1js here
01:44 - let's just say hi
01:46 - console log hi
01:47 - and it's automatically reloading okay so
01:49 - that's not super magical i have a live
01:52 - server with live reloading but i can
01:54 - also do imports
01:57 - let's go to import module 2 and now i
01:59 - can console log something from module 2.
02:03 - you can see as it reloads
02:05 - it loads in module 2 and then it runs
02:07 - high so i automatically have all this
02:09 - dynamic importing going on i didn't have
02:10 - to configure babel or anything like that
02:13 - but i can configure babel if i want to
02:16 - let's say i want to run a specific babel
02:18 - feature i can touch a babel rc file
02:21 - let's say i want to use babel stage 3
02:23 - preset you know something specific to
02:25 - what i want to do for this project then
02:27 - i can install it
02:30 - let's save this now let's do babel
02:32 - preset stage 3.
02:34 - while that's installing let's go to this
02:36 - babel rc and add it and it'll
02:37 - automatically get picked up
02:40 - let's add stage three preset it's in
02:43 - there i can run parcel again
02:45 - and now you can see i'm gonna see
02:46 - installing babel core so it's
02:48 - automatically taking care of all the
02:49 - other details for me i just had to do
02:52 - the specific thing i wanted to do and
02:54 - parcel took care of the rest so now
02:56 - let's do some stage three stuff here i
02:59 - can go let's do some spread and rest
03:02 - values equals a is one b is two
03:06 - now let's say const new values equals
03:10 - values can't normally do this
03:13 - but i can do it with stage three and
03:15 - stage three
03:17 - so then i can just cancel on new values
03:19 - let's see what happens over here on my
03:21 - application
03:22 - and i have my new values array it's
03:25 - spread out values one and two and
03:27 - automatically included value three uh so
03:29 - excellent i'm automatically able to use
03:31 - babel super super simple but wait
03:34 - there's more let's say i decide that my
03:37 - application's growing and i want to use
03:38 - react well that's easy let's just go
03:40 - ahead and install the react packages
03:45 - react and react dom
03:47 - while those are installing let's go
03:49 - ahead and add an app tag
03:52 - to my page here um let's go over here
03:55 - and just uh import to react
03:58 - from react
04:05 - so now we have react and react dom let's
04:07 - go ahead and render a new application to
04:10 - that div
04:11 - id app that i created react dom
04:15 - render
04:16 - let's just do an h1 right here wait we
04:18 - haven't installed any jsx well we don't
04:20 - have to do it because once react is
04:22 - there parcel automatically takes care of
04:24 - that for you so hi
04:26 - let's render our render our dynamic app
04:29 - here
04:30 - and let's render it to
04:32 - document
04:36 - app okay this got a little messy here
04:38 - because i'm zoomed in so much not quite
04:40 - used to this but i want to make it easy
04:41 - for everyone to see
04:42 - let's go and save this let's parcel
04:44 - again
04:46 - and see what happens
04:47 - you can see that we're doing some react
04:49 - specific stuff here check prop types
04:51 - stuff like that
04:52 - let's refresh and whoa i have a react
04:54 - application let's say i thought that was
04:56 - a little bit too shouty and i want to
04:58 - take away that exclamation mark
05:00 - um does it hot module reload still yes
05:03 - it hot module reloads still so parcel
05:06 - tries to take away all of that friction
05:09 - uh from the local development experience
05:12 - it's super super cool um let's look at
05:15 - some examples in code real quick what
05:17 - else can we do i made a couple examples
05:19 - for you here
05:24 - um it can do code splitting code
05:26 - splitting is super easy it basically
05:28 - just allows you to use the dynamic
05:30 - import syntax which is in a proposal
05:32 - right now you run the global import
05:35 - function which returns a promise so i
05:37 - can import module two dynamically at any
05:40 - point and then do something with it once
05:42 - it loads so that gets split out into
05:46 - two files module one and module two so
05:49 - we don't have to load our entire
05:50 - application and if you already know what
05:52 - dynamic code splitting is then you know
05:53 - what that is
05:54 - give you more of a react example right
05:56 - there view if you like vue.js well
05:59 - that's pretty simple all you have to do
06:01 - is add parcel plugin view
06:03 - and also add view component compiler
06:06 - utils if you want to use the actual view
06:08 - component syntax
06:10 - and you're good to go then everything
06:11 - else works for view i'm going to go and
06:13 - put these
06:14 - code examples online so you can see them
06:16 - but that is parcel in a nutshell super
06:19 - fun
06:20 - instead of spending an entire day or two
06:22 - setting up your build system for many
06:24 - many if not most applications parcel
06:26 - will get you set up in a matter of
06:28 - minutes it's a ton of fun go have fun
06:30 - with parcel and i encourage people
06:31 - contribute to it
06:33 - let's build this thing up because
06:35 - managing the build is seriously the most
06:37 - frustrating part of web development
06:39 - these days
06:40 - let's get rid of having to do that by
06:42 - just making a nice smart tool and
06:43 - building it up well so that's my two
06:46 - cents on parcel i really enjoy it it's
06:48 - my go to build system tool for right now
06:51 - and i haven't really used webpacks since
06:53 - i've discovered parcel i hope this video
06:55 - helps you out a lot and i hope you
06:57 - enjoyed it thumbs up it subscribe and
06:59 - have a great day
07:05 - you