00:01 - okay so let's get into the second thing
00:03 - that makes JavaScript weird and awesome
00:06 - if you just caught this video I'm in the
00:08 - middle of five you'll want to start from
00:10 - video one uh there will be a link in the
00:12 - description uh but the second thing that
00:14 - makes JavaScript weird and awesome this
00:16 - is the one that honestly makes it really
00:18 - really awesome especially if you're
00:19 - doing
00:20 - nodejs um is the event driven
00:23 - environment um and let's kind of get
00:25 - into what that means especially I'll
00:27 - give you an example of how it's
00:28 - different versus pH P um if we have a
00:32 - PHP script here uh and you're load say
00:36 - let's load tweets page two uh the PHP
00:40 - script is going to start doing some
00:41 - things maybe get your username and then
00:44 - go to the database get your tweets put
00:46 - together your HTML page spit out the
00:48 - page and then your script exits and it's
00:51 - done so your PHP script is finished um
00:56 - and you're good to go uh and so at that
00:59 - point p PHP is dead it's done it's not
01:02 - doing anything unless you reload the
01:04 - page or load a different page it runs it
01:07 - loads all of its stuff and it dies um
01:10 - and if you rerun it it's going to rerun
01:13 - it again uh JavaScript is completely
01:16 - different JavaScript loads up your page
01:18 - and then it stays in memory waiting it
01:21 - waits for events because JavaScript is
01:23 - not just information it's user events it
01:26 - is Click events it's drag events it's
01:28 - typing it's uh scrolling um and so let's
01:32 - just look at code to give you some more
01:33 - examples this is a really common jQuery
01:36 - code right here it's a document ready
01:38 - function that says um when a button is
01:41 - clicked alert yay I'll show you what
01:43 - this does let me save and
01:45 - refresh click yay click another button
01:49 - yay all right so uh what the what
01:51 - JavaScript is doing when it runs this is
01:54 - nothing actually uh it's running this
01:57 - and remember those first class functions
01:59 - that I showed you in in the last video
02:00 - here's one right here we're basically
02:03 - giving the document ready function one
02:05 - argument which is this so whenever the
02:07 - documents ready run this function so
02:10 - JavaScript is not actually this script
02:12 - that we have right here is not doing
02:13 - anything until the document is ready
02:17 - then it fires this function which sets
02:20 - up a listener on button so whenever the
02:22 - button is clicked now it's going to fire
02:25 - this function as argument number two so
02:27 - once again JavaScript hasn't done
02:29 - anything again we have a listener for
02:32 - the button click and that's it it's
02:35 - event driven it's listening for a click
02:37 - event on the button um and so the
02:41 - implement the imple
02:43 - implementations the implementations uh
02:46 - what this means is huge uh and so it
02:50 - means that there's this entire ecosystem
02:52 - that has to be built around event driven
02:54 - programming all these other things we're
02:56 - going to get into in the next videos are
02:58 - a result of the event driven environment
03:01 - uh it means a couple things it means
03:03 - that this script will fire once and it
03:06 - will not fire again uh just like PHP it
03:10 - doesn't have to refire the script every
03:12 - time something happens it only runs the
03:15 - little piece that has to run because it
03:16 - stays in memory uh let me show you what
03:18 - I mean here let me say ver a equals 1 um
03:21 - in onclick we're going to alert
03:25 - one um and so and actually I'll do that
03:28 - and also go console
03:30 - log setting this up man that's a lot of
03:34 - te's setting this up so we're running
03:37 - some setup script here and then whenever
03:39 - it's clicked we're going to alert not
03:41 - one we're going to alert a so here you
03:43 - go console log setting this up and when
03:45 - I click I don't get another setting this
03:48 - up console log because my whole script
03:50 - didn't run again my whole application
03:53 - did not run um all this kind of is
03:55 - stayed up in memory the only thing that
03:57 - actually ran is this little function
03:59 - this one line of the function that's all
04:01 - that ran on my click event so when
04:03 - people say JavaScript is fast that's
04:05 - what they're talking about JavaScript as
04:07 - a language is not actually really really
04:09 - fast but JavaScript has the ability to
04:12 - stay in memory and only fire what it has
04:14 - to Fire and that's what's fast about
04:17 - JavaScript especially node.js um on in
04:20 - nodejs your application runs it's
04:23 - sitting in memory um and when a page
04:25 - request comes through it only fires the
04:27 - code that has to do with that little
04:28 - bitty page request and everything else
04:30 - is already loaded in memory um and so
04:32 - that's kind of what it means to have an
04:35 - event driven environment is we can take
04:39 - this argument function which in this
04:40 - case is a call back to the click event
04:43 - and we can just kind of remember that
04:45 - call back event we can remember that
04:46 - callback function and fire it whenever
04:49 - we need to fire it and that's all we
04:51 - have to do so that's kind of how the
04:53 - event driven environment of JavaScript
04:56 - Works um and that actually creates some
04:59 - problem problems that have to be solved
05:01 - with complex things like closures scope
05:04 - and context let's go ahead and get into
05:06 - those and this is some of the real meat
05:08 - and potatoes um intermediate level
05:10 - JavaScript that we're about to be
05:12 - getting into
05:14 - here