00:01 - all right in this video we are going to
00:02 - be adding uh engine X as a front end to
00:05 - our node application which is running on
00:07 - Port 3000 and we're going to be setting
00:09 - it up as a load balancer so as our
00:11 - application grows and grows and grows we
00:13 - can add a second third fourth server and
00:16 - it will load balance between the four um
00:18 - and then we're also setting it up to
00:20 - where uh it will cash some static assets
00:23 - to imp increase performance so I've got
00:26 - my application server we'll call this
00:28 - the do two box uh the two box is running
00:31 - on Port 3000 like a normal uh node
00:34 - application would you can see as I load
00:35 - requests they're coming through I'm
00:37 - sshed in over here so you can see it um
00:39 - and here's a four box you can install
00:41 - engine X on the same box if you don't
00:44 - think your application's going to grow
00:46 - but I already know I'm planning on
00:48 - multiple boxes to come so I'm going to
00:49 - install engine X on its own box um you
00:52 - know to better handle the load so the
00:55 - four box currently does nothing this is
00:57 - where the domain will resolve is to this
01:00 - address and I'm sshed into the4 box
01:03 - let's go ahead and uh get engine X set
01:06 - up the first thing you're going to want
01:07 - to do is pseudo apt get update which
01:10 - I've already ran I don't need to do that
01:13 - um so then you're going to go pseudo
01:15 - aptg install engine X which I've already
01:18 - done it says it's at the newest version
01:20 - so now engine X is installed you can go
01:23 - CDC slh not not SL hosts sline X and
01:28 - then you can see here's my my engine X
01:30 - I've got a default engine X
01:32 - configuration file let's take a look at
01:35 - that um let's vim and look at this guy
01:38 - you can see by default it's started four
01:40 - worker processes you're going to want
01:42 - kind of as a rule one worker process per
01:44 - CPU that you're running that's kind of
01:46 - the most efficient way to run engine X
01:48 - um it's running 7 768 uh connections and
01:52 - all this other stuff and as you can see
01:54 - let's scroll down
01:56 - here these are all decent things to look
01:58 - into to get to know what they are
02:00 - um but what it's doing is it's also
02:02 - including any file in the sites enabled
02:05 - directory so that's we're going to add
02:07 - our that's where we're going to add our
02:08 - specific configuration so let's go into
02:10 - the sites
02:11 - enabled folder and then there might be a
02:15 - default file in here if not you're going
02:16 - to want to create it um default let's go
02:19 - ahead and create that I'm going to go
02:21 - over here here's a gist that I've
02:22 - created for you with the code that I'm
02:24 - going to be using so I'm going to copy
02:26 - the Upstream project let's paste that
02:29 - and I'm also going to copy the first
02:31 - portion of the
02:33 - server and I'm going to wrap that out so
02:36 - what I've done here is I've got three
02:38 - nodes I've got my2 node My3 node and my
02:43 - five node um let's go ahead and comment
02:46 - out the other
02:49 - two and save my file um what I'm also
02:52 - going to be doing here's the actual
02:54 - server that's going on is I'm listening
02:56 - to Port 80 which is your default port
02:58 - for your url and then I'm going to be
03:00 - forwarding that on to project which is
03:03 - up here and so any nodes I add will
03:05 - automatically get load Balan let's save
03:07 - this and then let's go pseudo
03:11 - service engine X
03:15 - start there we go starting engine X and
03:17 - now I should be able to refresh and it's
03:19 - automatically forwarding it to the two
03:21 - server you see as I load this then the
03:24 - requests are coming through to the2
03:25 - server awesome let's say the load has
03:28 - increased um and we should now add some
03:31 - nodes I've got some more nodes going on
03:33 - here um let me drag one over here for
03:37 - now let's go ahead so we're getting a
03:39 - lot of traffic constantly we don't ever
03:41 - want to have to shut down engine X let's
03:44 - go back into our default file Let's uh
03:47 - uncomment these two servers save and
03:50 - quit nothing has changed if you notice
03:53 - I'm loading these it's still all the
03:55 - requests are going through to my2 server
03:57 - it's cuz I have to reload not start
04:00 - reload engine X so I'm going to go
04:02 - pseudo service engine X reload that's
04:05 - going to keep it going it's going to
04:07 - reload the configuration file and now
04:09 - let me go ahead and minimize you bring
04:12 - you over here all my requests are now
04:14 - getting load balanced between all three
04:17 - boxes which is awesome now let's have
04:20 - some fun and do some bench testing shall
04:22 - we um let's go ahead and I'm going to
04:26 - turn those back off turn your you off
04:30 - turn you off save and reload okay let's
04:34 - run some bench testing here let's run an
04:37 - a pachy bench pretty basic I'm going to
04:39 - run 40 concurrent requests going to run
04:41 - a th000 requests and we're going to hit
04:42 - the do four server which is all going to
04:44 - be coming through here right
04:46 - now running 100 200 300,000 requests you
04:50 - can see that took about 5 and a half
04:52 - seconds to complete let's go ahead and
04:54 - go back into defaults add my load
04:56 - balancing here
05:01 - reload my configuration
05:03 - file and let's start seeing this fly I'm
05:06 - going to make you take up a little
05:08 - different space here there we go let's
05:10 - run that exact same benchmarking now you
05:12 - can see the requests are flying through
05:14 - all of them and that's going way faster
05:17 - instead of 5 Seconds that took about 3
05:19 - seconds to run great let's go ahead and
05:21 - add some static caching now I'm going to
05:24 - edit my default file again and let's
05:27 - cash static assets which is this little
05:29 - piece P of code right here we're
05:31 - basically going to take anything CSS
05:34 - JJs uh PNG any images and we're going to
05:37 - cash them they're not going to they're
05:39 - not going to reload to express for 168
05:43 - hours so let's go ahead and add this
05:51 - in there we go uh let's reload that
05:54 - service and now let's go ahead and bench
05:58 - test Style sheets I think that's
06:02 - stylesheets
06:04 - style.css I believe that's it uh let's
06:07 - go Ahad and bench test that
06:13 - guy there we go so that flew through as
06:17 - you can see um almost no time whatsoever
06:21 - complete requests uh let's give that a
06:22 - bench actually before I'm kind of static
06:24 - caching that let me edit my default here
06:29 - and let's go ahead and comment this
06:32 - whole thing out I didn't give you a
06:33 - chance to see what it does without it
06:36 - let's save let's
06:38 - reload there we go you can see the
06:40 - stylesheets are all coming through here
06:43 - um our requests are coming in at a rate
06:45 - of 20 milliseconds to 194 milliseconds
06:49 - that took about 1.3 seconds let me edit
06:53 - that again
07:03 - reload boom that took almost no time at
07:06 - all we went down from 20 milliseconds to
07:08 - about 4 milliseconds which the highest
07:11 - is still around 210 but that went down
07:14 - to3 seconds so as you can see static
07:16 - caching your assets with engine X is way
07:19 - faster than serving them up with Express
07:22 - so that's kind of a little bit of fun
07:23 - with engine X um you can cash as I think
07:27 - I gave you some examples of how to cash
07:29 - some different you can cash specific API
07:32 - URLs uh which is nice to cut down the
07:35 - load on your servers have some fun with
07:37 - that and have a great day