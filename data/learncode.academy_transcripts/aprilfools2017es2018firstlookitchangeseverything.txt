00:00 - in this video we are going to cover the
00:01 - new ecmascript 2018 um or es super next
00:06 - as some people have been calling it so
00:08 - let's get into these awesome new
00:09 - features the first new feature is global
00:11 - variables or always global variables
00:15 - so there's this thing that can happen
00:17 - called scope conflicts if i were to go
00:19 - const a equals one and then a function
00:22 - some function
00:24 - and const a equals two here this creates
00:27 - what's called a name conflict which
00:29 - means i cannot access this value of a
00:31 - because i've already defined a here
00:34 - and the issue here is it doesn't throw
00:36 - an error no error is thrown i just no
00:39 - longer have access to this a which i
00:41 - might find out later on my programming
00:43 - so to get around this javascript has
00:45 - defined everything in es2018 as a global
00:49 - variable so this is global this is
00:51 - global this is global and now this will
00:54 - throw an error
00:55 - so a has already been declared so
00:57 - whether it's been declared here or in
00:59 - another third-party library or any other
01:01 - part of my application i'm going to get
01:03 - an error here and so there's basically
01:05 - no more guesswork
01:07 - when we're coming up with variable names
01:10 - we're going to know if they've been
01:11 - created anywhere else in the application
01:14 - another thing is common keyword
01:16 - shortcuts
01:19 - common keyword shortcuts so const
01:21 - function
01:21 - [Music]
01:23 - things that you type all the time const
01:25 - function
01:26 - there let's math
01:29 - anything that's really common they've
01:30 - come up with single letter shortcuts for
01:32 - it so you could just go c for const so
01:34 - const a equals one
01:36 - and then function same thing f sum
01:39 - function
01:41 - and that really shortens up the code and
01:44 - to go along with the keyword shortcuts
01:46 - all the baked in libraries like math
01:49 - have also given you the shortcut of just
01:51 - m and so instead of math you could do m
01:54 - instead of math.round
01:56 - you could do m.r so that really shortens
01:59 - up the syntax that you have to type
02:01 - and that brings us to the third point so
02:03 - let's just go ahead and erase that and
02:04 - that's dot syntax
02:06 - dot syntax has had this cult following
02:09 - for years now
02:11 - and people are then pushing to get it
02:12 - into javascript some think it's going to
02:14 - be a lot better for beginners some just
02:16 - argue that it's better to read and what
02:18 - it is is the methodology behind dot
02:20 - syntax is is let's take a lot of those
02:22 - common characters that you type every
02:24 - day that the interpreter translates
02:27 - anyway
02:28 - and let's actually just replace those
02:30 - all with a dot so you don't have to
02:31 - worry about what character you're typing
02:33 - so all those characters right there
02:35 - equal parens curly braces brackets and
02:37 - semicolons those can all be replaced
02:39 - with a dots so we could go const a
02:42 - dot
02:43 - one and then you could have the
02:44 - semicolon or not that's up to you that's
02:46 - still arguable
02:48 - same thing for a function so
02:50 - function sum function
02:53 - dot give it an argument say name
02:56 - dot age the comma can be replaced with a
02:58 - dot as well age
03:00 - end your column do a curly braces
03:03 - and then you can actually come in here
03:05 - and do something console log
03:10 - dot hi
03:11 - and then a semicolon at the end and then
03:14 - wrap that with another closing curly
03:16 - brace and so the dot functions as you
03:17 - can see what it does is dot syntax
03:19 - really cleans everything up you read the
03:22 - words and you don't have to get messed
03:24 - up with the jargon and the semicolons
03:27 - and the curly braces and all that and
03:29 - what it basically does is it makes it
03:30 - really really readable and so if we were
03:32 - to actually combine this
03:34 - with our
03:36 - keyword shortcuts then this could be f
03:39 - name age and console.log also has c so c
03:42 - dot l
03:43 - and that really cleans things up you're
03:45 - able to see hey we have a function
03:47 - getting name and age and we're console
03:49 - logging high or i guess in this case we
03:50 - could also console log name
03:52 - and so that's really really clean really
03:55 - really easy to read only thing that's a
03:57 - little quirky with it is if you use dot
04:00 - syntax to define objects
04:02 - like let's say b is an object b equals
04:05 - we'd normally do what c one d two
04:10 - uh then you can replace all those
04:11 - obviously with a dot syntax dot dot
04:14 - dot
04:15 - dot and the white space becomes a little
04:17 - bit more involved
04:19 - and then at this point if we were to
04:20 - console log something let's say we're
04:22 - going to console.log b dot c
04:25 - um then you know if you don't know what
04:27 - the program is doing uh you wouldn't
04:29 - know that this is console logging b.c
04:32 - but again if you know what the
04:33 - application is doing this is super
04:35 - simple syntax and it's so readable
04:38 - that's the best thing about it
04:40 - lastly uh flow and typescript support
04:43 - are coming native to javascript uh
04:45 - that's gonna be out in firefox 54. i
04:47 - don't know the chrome version of that um
04:50 - what it is is if you're on uh os x or
04:53 - linux if you're on mac or linux you're
04:54 - gonna get flow if you're on a pc you're
04:56 - going to get typescript support and i
04:59 - think they've kind of taken more of the
05:00 - divergent mentality of that if you've
05:02 - seen the movie divergent
05:04 - as as people have been saying by
05:06 - creating segregated groups of developers
05:09 - will ultimately be able to find the
05:11 - divergent quote unquote developer
05:13 - is kind of the methodology behind that
05:15 - and so by dividing the community up
05:17 - we're actually going to be able to
05:19 - figure out where the community needs to
05:21 - be going in the future
05:23 - and so that makes a lot of sense and
05:24 - that's going to be baked in as well so
05:27 - there's your ecmascript 2018 new
05:29 - additions i hope you're enjoying your
05:31 - april fool's day and have a good one