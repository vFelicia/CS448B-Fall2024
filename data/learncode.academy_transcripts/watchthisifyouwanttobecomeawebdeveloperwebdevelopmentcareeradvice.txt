00:00 - all right i'm really excited about this
00:02 - video this is a video that i did about a
00:05 - year ago um and it's been pretty much my
00:06 - most popular video or one of my most
00:08 - popular videos and so a lot of people
00:10 - have said hey give me some 2015 updates
00:12 - and so here you go
00:13 - this is what you need to learn if you
00:15 - are wanting to become a web developer
00:17 - now in 2015. we're going to start at the
00:20 - beginner level and we're going to work
00:21 - our way up to intermediate and advanced
00:23 - and i'm also kind of going to give you
00:24 - the order that you want to learn things
00:26 - and the the possible directions that you
00:29 - can take in your learning experience so
00:31 - let's just jump right into it you'll
00:32 - notice here i'll give you a link this is
00:34 - a koggle.itmindmap so this link will be
00:36 - in the description everything that's
00:38 - blue has a url that you can click on
00:40 - which means i've already got a video for
00:42 - it
00:43 - yay which is nice so we've got at least
00:45 - a lot of the basics covered
00:47 - and you'll be able to see as we move
00:48 - along what videos i have covered for you
00:50 - so if you want to be a web developer
00:52 - you're going to want to start
00:54 - with html css javascript and what these
00:57 - are is these are the languages that the
00:58 - browsers run
01:00 - these are the three languages that are
01:01 - very core to the internet because
01:03 - whether you're on an iphone google
01:05 - chrome a super old version of internet
01:07 - explorer your browser is going to be
01:09 - running it's going to be putting
01:10 - together an html page
01:12 - with css styles it's going to be adding
01:15 - javascript
01:16 - for any functionality on that so these
01:18 - are the kind of the first three
01:19 - languages you have to learn if you're
01:21 - going to get into web development
01:23 - and so how do you know when you're done
01:24 - with basic frontend i say when you can
01:26 - put together an html page style it
01:28 - somewhat decently
01:30 - do some basic javascript and i added
01:32 - jquery here because that's kind of
01:33 - that's kind of a basic get a lot done
01:35 - without a lot of code javascript library
01:38 - and so i actually have a whole series on
01:40 - jquery and i'm starting up a series
01:43 - about three or four maybe five lessons
01:44 - in javascript so far so once you've kind
01:47 - of got some basic jquery down you're
01:50 - good to move on you can either go up
01:51 - here to front end or down here to back
01:53 - end
01:54 - regardless of which route you take
01:56 - here's some things you're going to want
01:57 - to learn next
01:59 - in order top to bottom you're going to
02:01 - want to learn how to ftp up to a web
02:04 - host and set that web host up it's not
02:06 - as complicated as it sounds i got a
02:08 - video kind of walking it through the
02:09 - whole thing i recommend hostgator for
02:11 - that i keep some coupons and deals by
02:14 - the way down here on several things you
02:15 - want to check that out especially if
02:17 - you're learning um that's kind of where
02:19 - i keep any coupons that i come across
02:22 - you want to learn how to set that up
02:23 - again not as hard as it sounds you're
02:25 - going to want to learn some basic
02:26 - terminal usage the command line is
02:29 - terrifying to new developers because
02:31 - computers we tend to think in terms of
02:33 - point and click whereas the command line
02:34 - is commands that seems scary but there's
02:36 - only about 10 or 20 commands you have to
02:38 - learn to get started
02:40 - it's just kind of scary because we're
02:41 - not used to typing out commands we're
02:42 - used to clicking file open instead of
02:44 - typing file open it's not that big of a
02:47 - deal learn the command line you'll be
02:49 - really glad you did
02:51 - basic ssh is kind of the next thing so
02:53 - when you're starting off with web
02:54 - development you you start off by ftping
02:57 - all your stuff up to a server
02:59 - later on as you go you're gonna ftp less
03:02 - and less you're gonna ssh a lot more so
03:04 - get to know ssh next
03:07 - github which is actually a combination
03:08 - of git and github which is a website
03:12 - it's kind of the most common place for
03:14 - coders and companies to keep their code
03:16 - their source code so you'll definitely
03:18 - want to learn that that's going to be on
03:20 - so many jobs so so so many jobs require
03:23 - you to know github or will wonder why
03:25 - you don't know it if you're applying so
03:27 - that's the next thing to go
03:29 - as you can see i've got videos for all
03:31 - these which will hopefully help you out
03:32 - in your learning
03:35 - next thing you're going to learn how the
03:36 - client and server talk to each other i
03:37 - got two videos on that that really
03:39 - explain it and hopefully an easy way i
03:41 - got some kind of basic visuals for you
03:44 - and then lastly you're going to want to
03:46 - learn about restful web services
03:48 - this is get post put and delete requests
03:51 - i kind of have a video that provides a
03:54 - free service for you to learn that with
03:55 - javascript so that's kind of no matter
03:57 - which route you take you got to learn
03:59 - this stuff too
04:01 - and i would suggest learning this before
04:03 - you pick a hardcore route or at least
04:05 - make sure you learn it towards the
04:07 - beginning so kind of in between basic
04:10 - and wanting to end up here so
04:12 - let's say you've got basic front end
04:14 - down
04:15 - then there's two routes for you to go up
04:17 - here front end or back end you can learn
04:19 - both but you generally have to start
04:22 - with one or another
04:23 - um
04:25 - to stereotype things if you're if you're
04:27 - not sure which you pick if you like art
04:30 - creative graphics maybe come from a
04:32 - design background you'll probably feel
04:34 - more at home around front end if you
04:35 - like data
04:37 - accounting finance budgeting you know
04:39 - left brain side of stuff back in will
04:41 - probably be a more logical choice
04:43 - although either way
04:45 - you'll work great in both if you can do
04:46 - one you can totally do the other
04:49 - and so that just might give you an idea
04:51 - of what to try out or take a day trying
04:53 - out both and see which feels more
04:55 - natural to you
04:57 - so don't let this daunt you don't let
04:58 - this terrify you this is kind of the
04:59 - entire skill set of a front end
05:01 - developer these days and honestly some
05:03 - of these are a list of things you don't
05:04 - have to pick them all
05:06 - so don't get terrified if you if you
05:08 - feel like you learned a ton and then
05:09 - just now got under this branch you want
05:11 - to be a front-end developer here's the
05:12 - order that you're going to want to go
05:13 - the first thing you're going to do is
05:15 - learn about some css tools
05:17 - pre-compilers
05:19 - sas lesson styles this hasn't really
05:21 - changed over the last year these are
05:22 - kind of still the big guys and i think
05:24 - these are the order probably of
05:26 - popularity and all these are going to do
05:28 - is these are going to allow you to add
05:29 - some more
05:31 - functionality to your css you can create
05:33 - like css variables so you can define
05:35 - defined at the very top gutter equals 10
05:38 - pixels and then from there on out you
05:40 - can reference gutter and it'll compile
05:42 - it out to normal css it's not very hard
05:44 - you can learn this in a day or less
05:47 - you're going to want to learn you're
05:48 - going to want to learn one or more css
05:51 - frameworks to start off we haven't
05:53 - really seen a lot of change with these
05:55 - over the last year
05:57 - bootstrap and foundation are definitely
05:58 - still the most popular css frameworks
06:02 - for building a responsive website
06:03 - bourbon with need is fun it's very light
06:06 - gumby skeleton these aren't even new
06:07 - these have been around for a while um
06:09 - there's there's so many css frameworks
06:12 - but still bootstrap and foundation are
06:14 - kind of the big ones the ones that keep
06:16 - staying popular
06:18 - so learn one or more of those what those
06:20 - will do is these will help you create a
06:21 - responsive website very easily
06:23 - a responsive website is basically the
06:27 - kind of website where as you shrink your
06:28 - window size down
06:30 - it displays it differently so maybe when
06:32 - you get your window really small like
06:33 - just this big it will look like a mobile
06:36 - website and then as you get it bigger it
06:38 - looks like a tablet website when you get
06:39 - your window full size it looks like a
06:41 - computer website that's a responsive
06:43 - website it's changing its layout
06:45 - depending on the size of your screen
06:48 - and so
06:49 - you can do that very easily with these
06:51 - frameworks but then you're going to want
06:53 - to learn how to do that by yourself as
06:55 - well at least be able to kind of get by
06:58 - you'll never be able to well it's going
07:00 - to take forever to hand code a bootstrap
07:02 - or foundation
07:03 - but you'll want to be able to kind of
07:05 - know what's going on behind the scenes
07:07 - so you can do some of your own custom
07:08 - work at some point if you need to so
07:10 - that's css not a ton going on
07:13 - this is not months and months of work
07:16 - it's really going to happen in a few
07:17 - days except for this might be a few
07:19 - weeks or a few months you know ongoing
07:21 - you don't have to dedicate yourself to
07:23 - this directly
07:24 - and ignore everything else for a season
07:27 - so moving on then next up i would
07:30 - actually say front end build tools would
07:32 - be next so i'm going to rearrange this
07:35 - okay front end build tools is next next
07:37 - thing you want to learn is build 2. i
07:39 - actually have a video called
07:41 - why you need a build system i can
07:43 - probably make a link to this i'll see if
07:44 - i can link this later
07:47 - and so i won't really explain too much
07:49 - of what that does except for basically
07:51 - build systems will do things like
07:53 - compile your sas less stylus for you
07:56 - they will take all your javascript files
07:58 - and com minify them all together into
07:59 - one javascript file that the browser
08:02 - loads these things really speed up your
08:03 - development process
08:05 - and clean up your code base and help
08:07 - your
08:08 - website be more efficient when a user
08:10 - loads it so the top two task runners
08:12 - gulp is definitely number one these days
08:14 - grunt is still really big because
08:16 - there's a ton of projects that were
08:17 - built on grunt so these are pretty much
08:20 - if you're starting new website pick gal
08:22 - gulp hands down i think the jury has
08:24 - spoken that gulp is just easier for
08:26 - developers just like it better
08:28 - um
08:29 - dependency management is kind of the
08:31 - next thing this is for javascript
08:33 - how do files require other files to be
08:36 - loaded
08:37 - in basic javascript like jquery work
08:39 - this is not necessary if you're just
08:41 - using jquery plugins lump them all into
08:43 - one file who cares
08:44 - but once you start getting a lot of code
08:46 - you're writing an actual front-end
08:48 - application in one of these frameworks
08:50 - down here you have to split up your
08:52 - files at this point because you can't
08:54 - have a 2000 line javascript
08:56 - file that's too much so you need to
08:58 - break it up into files that each do one
09:00 - thing well
09:01 - then you need a way for those files to
09:03 - require each other say i need to load
09:05 - the math component before i start doing
09:08 - math kind of things so
09:10 - browserify i think is kind of number one
09:12 - on this now require.js was number one
09:14 - for a while because it was kind of the
09:15 - first
09:16 - browserify came out and webpack is very
09:19 - quickly growing
09:20 - because the react
09:22 - community really likes webpack if i had
09:24 - to pick one today
09:27 - i'd pick browser fire webpack and
09:29 - honestly i can't decide between the two
09:31 - at this point i definitely wouldn't use
09:32 - require.js anymore
09:34 - not that it's bad still totally fine to
09:36 - use but
09:38 - these would be my two picks
09:40 - uh bower package management not as
09:42 - popular as it is as it used to be more
09:45 - people are using npm but bauer's still a
09:47 - very legitimate tool
09:49 - there's definitely a need for it in
09:51 - specific situations so bauer's something
09:53 - good to get to know yeoman is very cool
09:55 - for generating project
09:58 - folder structures and generating your
10:00 - initial gulp file grunt file with
10:03 - browserify and all that so i have a
10:05 - video on yeoman that kind of shows you
10:06 - more what that is it'll get you up and
10:08 - started very very quickly a very cool
10:10 - tool to get to know
10:12 - um and then you want to pick a
10:13 - javascript framework and this is really
10:15 - what you'll grow and be good at there
10:18 - are actually job descriptions for
10:20 - angular developer react developer
10:23 - backbone developer ember developer kind
10:25 - of things so
10:27 - these are the things where you want to
10:28 - find one that seems to make a lot of
10:29 - sense to you get really good at it now i
10:32 - put these in order of what i would learn
10:34 - i would definitely learn react this is
10:37 - the most popular one today is angular
10:39 - and then backbone was the most popular a
10:42 - year ago but angular is now the most
10:44 - popular i mean react is growing very
10:47 - very very quickly facebook backs react
10:50 - google backs angular
10:53 - and react just has some very cool
10:55 - methodologies behind it i will be doing
10:57 - react videos in the future i'm working
10:59 - on some reactive projects right now
11:00 - loving it it's so different
11:03 - but it's different for very good reasons
11:06 - um definitely learn react if you've been
11:08 - scared of it or been staying away from
11:09 - it it's gonna be a very significant
11:11 - player in the days to come flux is is
11:14 - the methodology that you will code react
11:16 - with it's not really a framework
11:18 - um it's it's more or less a way of
11:21 - coding react so definitely look into
11:23 - flux as well if you're looking into
11:24 - react
11:26 - like i said angular backbone still tons
11:28 - of backbone jobs out there because
11:29 - backbone was the javascript framework to
11:32 - use for a long time and honestly ember
11:34 - has hung around for a while it's been
11:35 - around for a while was not popular um
11:38 - but it's a it's a very good framework
11:40 - and it is it is grown in popularity
11:42 - slowly over time it's very good for for
11:44 - large scale apps it does have its
11:46 - frustrations but it you know it's not
11:48 - going away at least not any time yet so
11:51 - just not as many jobs out there so if
11:52 - you're learning i wouldn't necessarily
11:54 - recommend ember is your first pick even
11:56 - if you like it
11:57 - me thrill and reactive are kind of cool
11:59 - ones to look at i would not say learn
12:00 - them first reactive is kind of the
12:03 - simplest way if these are just way too
12:05 - confusing for you and you cannot seem to
12:08 - get it to click try looking at reactive
12:10 - reactive is very simple but accomplishes
12:12 - quite a bit
12:14 - um then you're going to learn how to
12:15 - unit test that framework of choice the
12:17 - framework you've chosen mocha and
12:19 - jasmine are pretty much the biggest
12:21 - ones out there what is there there's uh
12:23 - there's there's a lot of other ones but
12:26 - pretty much mocha and jasmine for
12:27 - javascript are the top two i prefer
12:29 - mocha no big real reason why these are
12:31 - very very similar anyway if you can do
12:33 - one you can definitely do the other and
12:35 - karma is a test runner which is kind of
12:38 - cool you don't have to learn that but
12:39 - that's noteworthy
12:41 - so there you go that's front of
12:42 - developer tons of front end developer
12:44 - jobs out there tons of demand for
12:46 - front-end developer jobs
12:48 - they're great great great jobs fun teams
12:50 - to be on so it's a great track to take
12:52 - let's say you're taking the back end
12:54 - track um lots of change in the back end
12:57 - track this year as well so
12:59 - uh first off you're going to want to
13:00 - pick a language
13:02 - and there are tons of languages for
13:04 - back-end oh my goodness tons of
13:07 - languages for back-end these are not in
13:09 - order because there's really no right or
13:11 - wrong um
13:13 - my personal favorites i just love
13:15 - node.js we're seeing a lot of companies
13:18 - like netflix paypal groupon uh the list
13:21 - keeps going and going uh switching from
13:24 - these monolithic ruby on rails
13:25 - applications to much smaller broken up
13:28 - node.js applications with express or
13:30 - happy or koa
13:31 - um so node.js is very fascinating to me
13:34 - php has not gone anywhere php um if
13:36 - you're gonna pick one i'd say pick one
13:38 - of these three here ruby on rails
13:40 - node.js with express
13:42 - or php with laravel let's say you're
13:44 - just a new learner say tell me one to
13:47 - learn i say look into these three
13:48 - languages find the one that seems to
13:49 - make most sense to you and go with that
13:52 - advantages to php tons of php jobs you
13:55 - don't have to be a rock star to get a
13:57 - php job because there's a lot of
13:59 - companies that don't require a lot out
14:01 - of their php developers because of that
14:04 - php has gotten a bad rap sometimes even
14:06 - though there are tremendous php
14:08 - developers out there
14:10 - so again you'll see the pay range is
14:12 - extremely broad for php developers
14:15 - because there's just such a range out
14:16 - there ruby on rails is much more
14:18 - specific it has a ruby on rails way so
14:21 - if you learn it
14:22 - you'll probably have a little more
14:24 - confidence that you know what to expect
14:26 - from a ruby on rails job whereas this
14:28 - could look a thousand different ways
14:30 - this is much more specific so if you're
14:33 - going to learn ruby definitely learn
14:34 - ruby on rails first sinatra is very cool
14:36 - it's a micro framework a lot more like
14:38 - express for node
14:40 - i personally if you just love javascript
14:42 - then learn node there's there's a
14:44 - growing number of node jobs node is
14:46 - becoming more and popular more and more
14:48 - popular every day
14:50 - uh other languages that there's still
14:52 - lots of opportunity lots of jobs for net
14:54 - which would most likely be c sharp
14:57 - if it's asp.net my recommendation is
15:00 - stay away
15:01 - python which generally will use the
15:03 - django framework although there are
15:05 - other python frameworks
15:07 - out there
15:09 - java is still tons and tons of java jobs
15:12 - people keep saying java is going to go
15:13 - away from web development but it's not
15:15 - done that yet and there's some great fun
15:17 - new frameworks out there like play
15:19 - these are kind of the top three java
15:21 - frameworks for the web spring grails
15:24 - play if i was new when i was starting
15:26 - off and i was going to learn one i would
15:27 - learn them in the reverse order i would
15:29 - learn play grail spring
15:32 - grails and play are kind of the newer
15:33 - more modern takes on web development
15:37 - and those are kind of duking it out for
15:39 - who's going to be the fun new guy and
15:41 - then there's just a lot of spring jobs
15:42 - because spring's been around for a while
15:44 - so that's kind of if you if you you know
15:46 - have any kind of java background you
15:47 - might want to look at those and then
15:49 - you'll want to learn how to do again
15:50 - unit functional testing for your chosen
15:52 - technology they're going to have
15:53 - different frameworks if you're if you're
15:55 - from javascript you can use mocha for
15:56 - your node
15:58 - but you're it's just going to be
15:59 - different based off the language you
16:00 - have some cool upcoming languages which
16:03 - they're not really upcoming they're
16:04 - already here
16:05 - um go or golang is very very cool i like
16:09 - go a lot it's a lot of fun
16:12 - um scala
16:14 - erlang also some cool languages just to
16:16 - kind of throw on that list for you
16:17 - there's probably a dozen more but those
16:19 - are three that i figured i'd throw on
16:20 - the list
16:22 - um and then you're going to want to
16:24 - learn in that language so you've chosen
16:26 - your language
16:27 - and if you're still daunted by which
16:30 - language to pick and you say well just
16:31 - tell me one language to pick i'm still
16:33 - going to say pick ruby on rails this
16:35 - year although
16:37 - i wouldn't be bummed out if you picked
16:38 - laravel or express js but those would
16:41 - kind of be the three frameworks that i'd
16:43 - say to pick from
16:45 - i'd you would say ruby on rails because
16:47 - i think you'd have the highest chance of
16:48 - getting a decent job as a junior
16:51 - developer with ruby on rails but that's
16:53 - my guess i haven't done that in a while
16:54 - so
16:55 - you're going to want to learn some
16:56 - things then with that language of choice
16:58 - you're going to want to learn how to
16:59 - build an api for say jquery to consume
17:03 - how do i build a restful web service
17:05 - that the jquery or the front end angular
17:07 - or whatever can consume can use
17:10 - you're going to want to learn some
17:11 - security um and that's going to be
17:13 - different based off of each framework so
17:14 - you know you'll want to do some research
17:16 - on it you know do some research on ruby
17:17 - on rails security
17:19 - you know
17:20 - how to secure a ruby on rails
17:22 - application you're going to want to
17:24 - learn authentication and authorization
17:26 - so that's two things but it's one
17:28 - concept authorization is how you verify
17:30 - a user so they log in with their
17:33 - username and password or they log in
17:34 - with their facebook which is called
17:36 - oauth2
17:39 - and then that's basically authorization
17:41 - authentication then
17:43 - basically says
17:45 - i'm sorry i flipped these around so
17:47 - that's authentication
17:49 - authorization is whether or not they
17:52 - have access to things so basically once
17:55 - the user has authenticated
17:58 - can i allow them to post on somebody
18:00 - else's twitter feed well not if they're
18:02 - not authenticated as that ut user can i
18:04 - allow them to view your emails well only
18:07 - if you're authenticated as you and not
18:09 - somebody else so authorization kind of
18:11 - is a way of locking down your data so
18:14 - people can't see information delete
18:16 - information they shouldn't see and
18:18 - delete
18:19 - so then you're going to want to learn
18:21 - kind of maybe some architecture
18:23 - microservices or a service oriented
18:25 - architecture
18:27 - is kind of ways of getting around
18:29 - building one gigantic monolithic
18:31 - application
18:33 - so lots of companies start off with
18:34 - their one big application and then as
18:37 - they grow that becomes more and more of
18:38 - a pain because now they have 12
18:40 - developers working in this one big
18:42 - application and so they have to break it
18:44 - up into services or even smaller into
18:46 - dozens of micro services so uh kind of
18:49 - gets a bad rap because there's this old
18:51 - school soa
18:53 - which is not kind of what i'm talking
18:55 - about i'm talking about just the concept
18:57 - of breaking your application up into
18:59 - smaller
19:00 - applications that deploy separately
19:03 - you're also going to want to learn of
19:04 - course how to deploy your server
19:07 - or you're going to want to learn how to
19:08 - deploy this
19:10 - to a place
19:12 - can you deploy your application to
19:14 - they're all up here on these web
19:16 - platforms we'll get into those in a
19:17 - little bit and you want to learn about
19:18 - caching caching is basically a way to
19:21 - store stuff so
19:23 - say you've tied that oh yes you want to
19:25 - tie it into some databases so let's make
19:27 - a ruby on rails application that
19:28 - connects to a mysql database and then
19:30 - let's make a ruby on rails application
19:32 - that connects to a mongodb database and
19:34 - then let's use redis for sessions or for
19:36 - some caching and then other two other
19:38 - cool databases to look into are postgres
19:42 - and cassandra and there are many many
19:44 - many other ones out there but these are
19:46 - you know some pretty popular ones my
19:48 - sequel and if you're just gonna
19:49 - pick two
19:50 - and then redis is also a very kind of
19:53 - very simplistic
19:54 - database that's good for certain things
19:57 - like sessions and caching as i mentioned
19:59 - so
20:00 - deeper into caching
20:02 - you're going to want to learn how to put
20:04 - nginx in front of your application uh
20:07 - you or app apache if you're on um you
20:10 - know say something like php apache might
20:12 - make more sense i'm a big fan of nginx
20:16 - um and then you'll want to possibly do
20:18 - some in-memory caching with memcache
20:20 - just what it used to be
20:22 - anyway so you want to learn how to add
20:24 - some caching layers so you don't always
20:26 - have to hit the database every time
20:28 - you know a certain email is looked at
20:30 - maybe we can cache that email for a
20:32 - while so
20:33 - next time the user looks for it boom we
20:34 - can just pull it right away out of redis
20:36 - or out of memory so that's kind of some
20:38 - thoughts on caching
20:40 - and if you're still with me right now
20:42 - and you're not bored and you're a
20:43 - back-end developer you want to take this
20:45 - thing kick it up to a higher level then
20:47 - you're going to want to look at what's
20:48 - called dev ops and devops is this whole
20:50 - world of
20:52 - bridging the server administration world
20:55 - with the developer world and so it kind
20:57 - of bridges dev and operations ah i lost
21:01 - my connection no
21:03 - oh well well we'll see what happens
21:05 - um anyway so devops is basically this
21:08 - combination of several things we're
21:10 - going to automatically
21:12 - spin up servers and then we're going to
21:14 - automatically provision those servers
21:16 - and what provisioning means is we're
21:17 - getting them configured say we have a
21:19 - node.js application
21:21 - to deploy it we don't have to want to
21:23 - log in through ssh manually copy our
21:26 - files over that's a terrible idea
21:27 - there's so much human interaction
21:29 - developer number 13 who's a newbie is
21:31 - going to blow up your website every time
21:34 - so you want to try to take a lot of that
21:35 - risk out there and a lot of that
21:37 - manpower out of there and devops is
21:39 - basically the practice of building
21:41 - awesome workflows into all the things
21:44 - developers do every day
21:46 - so let's take that node application we
21:48 - want to add it to a server so from the
21:50 - command line we can provision a server
21:51 - boom digitalocean just spun up a new
21:53 - server and it installed node.js in the
21:55 - correct version we have and all the
21:57 - stuff that it needs and then from the
21:59 - command line we can actually deploy that
22:01 - thing straight out
22:03 - and then we can also monitor that thing
22:04 - so we know when that server might be
22:06 - getting overloaded so we can add another
22:08 - server and have that load balance
22:10 - between the two maybe having nginx
22:13 - uh
22:14 - balance the load between both the
22:15 - servers so that's kind of the concept of
22:18 - the world that devops lives in
22:20 - um you'll want to learn some web
22:21 - platforms
22:22 - so many out there no right web platform
22:25 - out there digitalocean is great for
22:27 - really small projects heroku is great
22:29 - for really small projects but can grow
22:30 - more expensive significantly more
22:32 - expensive as applications grow
22:36 - that's about all i have on that
22:37 - rackspace is very good
22:39 - amazon has of course all the services in
22:41 - the world
22:42 - my goodness so many to choose from these
22:44 - days no right or wrong you got to just
22:45 - kind of look into tons of them you're
22:47 - going to want to learn server management
22:48 - that's kind of what i talked about
22:49 - before
22:50 - server management
22:53 - or configuration management cm is
22:56 - actually kind of what it's referred to
22:57 - as is is the way of allowing servers to
23:01 - automatically get provisioned salt
23:03 - puppet chef and ansible
23:06 - linux is well you're going to probably
23:08 - be configuring linux servers so linux
23:10 - isn't really a language or a utility
23:12 - it's you know just got to get a little
23:14 - bit more comfortable with how the linux
23:15 - operating system works
23:17 - docker is a very very very cool
23:21 - thing for doing that i'm gonna actually
23:22 - get into some docker stuff over here um
23:25 - but look into docker that's a huge thing
23:27 - that's changed this year docker is is
23:29 - really revolutionizing a lot of both
23:32 - development and ops and in by
23:34 - containerized applications very very
23:36 - cool
23:37 - um so you're going to want to learn some
23:38 - workflows there's continuous integration
23:41 - continuous integration is basically code
23:43 - is always having tests unit tests run
23:46 - through github or travis ci jenkins lots
23:50 - of continuous integration tools code
23:52 - ship is another one
23:53 - that's kind of if you're starting with
23:55 - devops this is the first place i would
23:57 - start let's start with continuous
23:58 - integration and deployment those are
24:01 - kind of like your first big deals
24:05 - these are some things for devops
24:07 - workflows that are important vagrant is
24:08 - a great tool to learn because vagrant
24:11 - will help you set up a local development
24:12 - environment that is not your machine it
24:15 - runs on your machine but it's the exact
24:17 - same environment as your
24:19 - amazon server or your rackspace linux
24:21 - server is so that's a very smart i got a
24:24 - video i have a video on vagrant i will
24:25 - add that
24:26 - capistrano fabric flight plan these are
24:29 - deployment tools
24:31 - they're all great you can use any of
24:33 - them for most any application so you
24:35 - don't have to use capistrano for ruby
24:37 - i've deployed lots of node.js
24:39 - applications with capistrano
24:41 - fabric is a very simple
24:43 - npm based one it's very very lightweight
24:46 - probably the easiest to learn
24:49 - i mean you'll want to learn some
24:50 - deployment strategies and then lastly
24:52 - let's just kind of talk about some
24:53 - docker docker is a super fun cool new
24:55 - thing out here it's changing about every
24:57 - three days
24:58 - there's a new player out there for so
25:01 - who really knows where docker is going
25:02 - to end up but you do want to basically
25:05 - the concept of docker is is let's take
25:06 - this application we built let's turn it
25:09 - into a container and so then let's build
25:11 - let's kind of spin up 15 different
25:15 - servers from say digitalocean and make
25:17 - them act as one giant computer that we
25:18 - can now run 30 copies of our containers
25:21 - in so if we basically need more power
25:24 - to our website we just run four more web
25:26 - server containers if you need more
25:28 - database power you add three more
25:30 - database containers and that's kind of
25:32 - how that works um in a nutshell
25:35 - coreos and mesos these are kind of some
25:37 - great
25:38 - um
25:39 - operating systems that are working very
25:42 - well with docker containers
25:45 - docker itself gives us three really cool
25:47 - utilities docker machine for spinning up
25:49 - things docker machine allows you to just
25:51 - spin up a digital ocean or an amazon
25:53 - docker server docker swarm is very cool
25:56 - now it's not ready yet but it's very
25:58 - very close to being ready for production
26:00 - docker swarm will allow
26:02 - without installing coreos or mesos will
26:05 - allow you to create 10 different servers
26:08 - and talk to them as if they were one so
26:10 - that's very cool docker compose is also
26:12 - very cool
26:13 - kubernetes or kubernetes or however you
26:16 - do pronounce that mesosphere panamax
26:18 - these are very interesting ways of
26:20 - managing docker containers i'm gonna
26:22 - leave that at that because there's still
26:23 - a lot to be said about docker that i'm
26:25 - not going to get into in this video
26:27 - there you go that's web development in
26:29 - 2015. if you're new and i just freaked
26:31 - you out
26:32 - just just take a deep breath
26:35 - learn these
26:37 - learn these little things on this list
26:39 - here and pick up gosh what is going on
26:42 - and pick either a framework on front end
26:44 - or back end i mean that's really what it
26:46 - comes down to and so it doesn't have to
26:48 - be all that confusing these are just all
26:50 - the little steps along the way that
26:51 - you're going to want to learn hope this
26:53 - helped you out have an awesome day and
26:56 - what a great industry we're in yeah