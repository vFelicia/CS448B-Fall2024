00:01 - okay in these next videos we're going to
00:02 - be building single page apps with react
00:05 - um and I I understand that there's
00:07 - probably a few people who have never
00:09 - even built a single page app before
00:10 - they're going to be watching this so I'm
00:12 - going to try to not leave you behind
00:14 - while not um kind of making it to
00:16 - beginner for the people who are very
00:18 - familiar with angular or maybe backbone
00:20 - Ember other single page application
00:22 - Frameworks so basically a single page
00:25 - application is just you want to be able
00:26 - to navigate do everything you normally
00:28 - do without ever leaving the page it all
00:30 - happens within JavaScript notifications
00:32 - and alerts pop up real time you don't
00:34 - have to navigate away so that's a single
00:37 - page application um and here's kind of
00:39 - what I got going on I didn't want to do
00:41 - it in just boring HTML although this
00:43 - really isn't beautiful HTML I went to
00:45 - start
00:48 - bootstrap.css
00:52 - Swatch grabbed a different looking um
00:55 - bootstrap CSS theme because bootstrap
00:58 - kind of looks a little generic on it own
01:00 - it looks very generic on its own and
01:03 - although I'm not super in love with
01:04 - bootstrap it's really fast to manipulate
01:06 - so that's why I went with it for these
01:09 - tutorials and then I went to bootstrap
01:11 - without jQuery so that way bootstrap
01:13 - requires a little bit of JavaScript for
01:15 - stuff like this you can see this right
01:17 - here these little sliders uh that is re
01:20 - you know normally requires jQuery for
01:22 - that which is a little Overkill so
01:25 - bootstrap without jQuery JS lets those
01:27 - little bit of bootstrap animations
01:29 - happen without ever loading jQuery on
01:31 - our page so that gives me basically this
01:33 - HTML I'll show you what I got here and
01:35 - this is all in GitHub again and then so
01:38 - I've got here's my boot Swatch CSS and
01:40 - then my client MJS just like we had in
01:43 - the first five videos and then I've got
01:46 - my div ID app just like we had in the
01:48 - first five videos and we'll be starting
01:50 - here and moving forward building out a
01:52 - full single page app so let's go ahead
01:54 - and get into how we're going to do this
01:57 - again the client just like last time is
02:00 - loading in a layout it's finding ID app
02:04 - and it's rendering my layout into that
02:05 - ID so nothing magical going on um the
02:08 - first thing we want to set up is routing
02:10 - so that's where when we click on buttons
02:12 - we can actually route to different pages
02:14 - different states of the application
02:17 - without ever actually leaving the HTML
02:19 - page all happens in JavaScript and for
02:21 - react we're going to want to use react
02:23 - router and we're going to go npm install
02:26 - s react
02:28 - router get that going and then we also
02:31 - want to add history for HTML 5 history
02:33 - so npm
02:35 - install s history and history has
02:38 - version 2.0 but that is not that's only
02:41 - supported with react router 2.0 which is
02:43 - not out yet so we want to do history at
02:46 - version one which I think we'll grab
02:48 - 1.17 yeah grabbed history at
02:51 - 1.17 so those are added to our package
02:54 - Json we got history we got react router
02:56 - now we'll just hit npm install for the
02:58 - rest and all this will be in GitHub at
03:02 - whatever state we end up leaving this
03:03 - section of tutorials off with so a lot
03:05 - of this will already be done for you and
03:07 - that as one of my awesome viewers
03:09 - pointed out um whenever you're running a
03:11 - script in npm it automatically adds node
03:14 - modules sl. bin to the path so you don't
03:17 - actually have to do this part you can
03:19 - just run webpack Dev server and if that
03:21 - file webpack Dev server exists in bin
03:24 - which it does you can just execute it as
03:26 - a command as long as you're doing it
03:28 - from a node script it's going to work
03:30 - great so thank you very much for that
03:31 - tip pass it on to you guys and we're
03:34 - installed we're good to go we can run
03:36 - npm run
03:37 - [Music]
03:38 - Dev and we're rocking and rolling let's
03:41 - make sure this is still good to go okay
03:43 - killer news.net is the only person only
03:45 - thing that's actually Dynamic on my page
03:47 - right now it's that is my layout
03:49 - component everything else here is static
03:51 - HTML so as we go we're going to be
03:53 - converting this all over to
03:55 - Dynamic um and let's just go ahead and
03:57 - start with our routes our routes are
04:00 - as we click the hash the hash part of
04:03 - our navigation up here will change and
04:05 - allow us to go to different pages and
04:07 - different states of our application so
04:09 - react routers installed so we can now
04:11 - import it
04:13 - here uh we're actually going to go
04:15 - router and then
04:17 - route and then index route we want to
04:20 - have an index route as well and then
04:23 - hash history to get our HTML 5 history
04:26 - booting up we're importing all of those
04:28 - from react router and this is all on
04:30 - react routers GitHub page so this is
04:33 - nothing magical here and then instead of
04:35 - rendering a layout we're simply going to
04:36 - render our
04:40 - router here we go let's clean this up a
04:42 - little
04:45 - bit we got our router rendered and then
04:48 - we're going to get history booted up
04:53 - here so there we go that's all it really
04:55 - takes to officially get react router
04:57 - going and then you can render out all
04:59 - your routes and point them to different
05:01 - components so our our basic route is
05:03 - going to be our
05:04 - layouts and then that's got a path of
05:08 - root and the component for that is
05:13 - layouts so I've already imported layout
05:15 - and I can inject layout there so that's
05:17 - how that's
05:19 - working and then I can close out that
05:21 - route so now my app should still be
05:23 - working let's make sure it all goes
05:24 - bundle's valid it's reloading and killer
05:26 - news. net.net is still rendering so
05:29 - that's my layout rendering here for the
05:32 - default path which is just forward slash
05:35 - so now I can add some sub routes to this
05:38 - kind of how how your react layout will
05:40 - work is your layout's going to be
05:42 - whatever is on your entire page so
05:44 - that's going to be my navigation up here
05:47 - uh that's going to be my footer down
05:49 - here and then all the other child routes
05:52 - will get loaded in here depending on
05:53 - which page I'm on which state I'm on um
05:57 - and that layout might even load in
05:58 - several different comp components like
05:59 - it'll load in a navigation component
06:02 - it'll load in a footer component for now
06:03 - we just have killer news.net so let's go
06:06 - a and just show you how to make your
06:07 - first few routes and then we'll start
06:09 - breaking this page out in the next video
06:11 - so let's go ahead and make an index
06:13 - route
06:14 - here um an index route uh let's uh make
06:17 - our components here first so you notice
06:20 - I actually created a Pages folder and I
06:22 - put layout in there so kind of those top
06:25 - level Pages kind of what we're
06:26 - considering featured archives settings
06:29 - I'm going to put all those in a Pages
06:31 - folder just so it's a little easier uh
06:33 - to get to them so let me go save this as
06:38 - featured I'm going to go ahead and just
06:40 - hack these
06:41 - now
06:43 - featured
06:44 - featured there you go now let me go save
06:47 - this as what archives and
06:53 - settings and then
06:56 - settings same
06:58 - thing
07:00 - okay so I have featured archives and
07:02 - settings let's go and import those now
07:04 - again into
07:13 - client got them all in they're not
07:15 - alphabetical ah come on OCD have to do
07:19 - it a b c d FG all right we're good and
07:21 - then let's go ahead and load our index
07:23 - route will be
07:27 - featured path uh that's the same path
07:30 - that's our default it's our index route
07:32 - duh so I'm leaving that
07:34 - there component gets
07:42 - featured and now we can actually add
07:44 - some other routes down
07:46 - here and they'll have different paths so
07:49 - this path will be slash
07:52 - archives and that'll get the archives
07:56 - components
07:58 - component
08:04 - I copy and paste that one more time for
08:11 - settings excellent so now we should
08:13 - actually be able to route back and forth
08:15 - let's make sure everything's working no
08:16 - typos page loads great so now we can
08:19 - actually get to those uh let me go to my
08:22 - layout pretend we're building a little
08:24 - navigation here so I've got killer
08:26 - news.net Let's Go Wrap This in a div
08:36 - let's go ahead and make our first button
08:38 - uh what I'm actually going to do is I'm
08:39 - going to import link from react
08:43 - router uppercase
08:48 - link and that's going to allow me to do
08:50 - just a link so instead of doing an a tag
08:52 - with an HF in it I'm actually just going
08:55 - to do a link tag uh and that's going to
08:58 - have a two in it uh so let's go ahead do
09:02 - that link and this will go to what is it
09:06 - archives yeah so I've created this link
09:08 - tag here and now all I have to do is
09:10 - give it a place that I'm going to which
09:12 - is simple you just add a
09:15 - two and that's going to work so let's
09:18 - say it's going to hot reload in here
09:21 - archives takes me to slash archives
09:25 - excellent it's going to load archives
09:27 - it's going to grab that component
09:29 - and it's going to inject that component
09:32 - archives as a child component to layout
09:36 - so it's basically going to send this.
09:38 - props doch children is going to be this
09:41 - guy right here so now all we have to do
09:44 - is render out this. props doch children
09:46 - wherever we want it to
09:49 - be so what react router has done again
09:52 - is it's taken whatever we've given it as
09:55 - children which in this case it's going
09:57 - to match hey you're a child you match
09:59 - match we're correctly on this path you
10:01 - match as a valid child we're going to go
10:03 - ahead and inject you as this props
10:05 - children and now we can spit that out
10:06 - wherever in layout we want it to appear
10:09 - and now we've got our first there you go
10:11 - archives is there so now let's go ahead
10:13 - and add another link here to
10:19 - settings so let's
10:21 - reload settings will take me to settings
10:24 - there we go dynamically happened
10:26 - archives and you'll notice that the hash
10:28 - now navigation is also changing up there
10:30 - settings archives settings archives
10:33 - great um and there's some other ways
10:35 - that you can do this as well so you can
10:36 - do the link uh you could also wrap say
10:39 - you wanted to do a
10:41 - button I can just wrap my button in the
10:45 - link like
10:49 - so and that will work so that'll still
10:52 - get me to settings I can make this a
10:53 - bootstrap
10:56 - button BTN BTN sucess
11:00 - ESS you load up there you go so that's
11:03 - going to work settings archive settings
11:05 - um and honestly you can just put these
11:07 - classes as well because bootstrap allows
11:09 - you to put these classes on links as
11:11 - well so let's say you're a button
11:17 - danger there you go archives settings um
11:21 - then another thing you can do is you can
11:22 - also just kind of call this
11:24 - programmatically um I can just do a
11:26 - button
11:27 - here I can do an onclick
11:30 - is this.
11:36 - navigate and we'll make you go to
11:38 - featured back
11:42 - home and so now we can add of this.
11:44 - navigate
11:47 - here and I'm just going to console log
11:50 - this. props so you can see what react
11:53 - router injects into those props for you
11:55 - so when I hit featured here's my props
11:58 - that I'm getting I'm getting a props
11:59 - children again which is a react
12:01 - component I'm also getting this history
12:04 - option I'm getting this history thing
12:05 - I'm getting a route which is the path
12:07 - that I'm on so I'm getting a route
12:09 - object I'm getting any route params and
12:11 - so navigates right there I get a lot of
12:13 - stuff so what the prop that I'm looking
12:14 - for is
12:16 - history and then I can simply push a
12:21 - state and I'm going to go to where are
12:23 - we going feature I'm just going to just
12:26 - my root so there we go and now the
12:29 - featured button will push State and take
12:31 - me back home there you go it pushed me
12:34 - back home and I'm on featured archives
12:36 - settings featured another thing I can do
12:39 - now whenever you push State you get the
12:41 - back button so my back button takes me
12:43 - to settings if you'll notice right there
12:44 - push State back button took me to
12:46 - settings I can also replace
12:49 - State and now I will not get the back
12:52 - button it'll just say Hey My My State's
12:53 - going to just switch out right away I'm
12:56 - there I'm going to hit featured there
12:58 - you go I'm there and if I hit the back
13:00 - button I stay right where I am because
13:02 - that was where I started off so replace
13:04 - state is very different from push State
13:06 - very important for you to know and
13:08 - that's your basic navigation I know I
13:10 - kind of flew through that because there
13:11 - was a lot to cover but I didn't want to
13:14 - break it up into three videos for you so
13:17 - again just take your client JS I'm going
13:19 - to go ahead and push this code already
13:20 - to GitHub for those of you guys who are
13:22 - following this series as it's coming out
13:25 - um go ahead and mess around with routes
13:26 - a little bit we'll get into some more
13:28 - cool Fe features in the next video by