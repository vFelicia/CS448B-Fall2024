00:00 - okay so now i have two modules on my
00:02 - page i have my people module and i have
00:04 - my stats module i'm also including pub
00:06 - sub js even though it's not getting used
00:09 - yet so there we go and so you can see
00:11 - whenever i delete something that my
00:13 - people gets updated
00:15 - test test 1
00:17 - or 21. there you go so people is
00:19 - automatically updating here's how that's
00:21 - happening i have a very basic stats
00:24 - module that basically just has a set
00:26 - people method that it's exposing so set
00:29 - people is right there and whenever set
00:31 - people gets fired it's going to update
00:33 - with the amount of people you have and
00:34 - it's going to render excellent that's
00:36 - also going to console.log i can probably
00:37 - take that out
00:38 - there we go so that's basically what's
00:40 - happening our people module is calling
00:42 - stats.set people whenever it renders so
00:45 - it's calling set people it's passing it
00:47 - the length of people we have
00:49 - it's receiving that
00:51 - setting it up here
00:54 - and then it's going to render which is
00:56 - going to spit out our mustache template
00:58 - okay so that's basically our module so
01:00 - once again we don't want this to be
01:02 - coupled to the stats module we want to
01:04 - decouple that and so now all people has
01:06 - to do is it just has to go events dot
01:10 - emit uh let's go people changed
01:14 - people changed we're gonna emit a people
01:17 - changed event
01:20 - and we're just going to add
01:21 - people.length to it
01:24 - excellent so let's go ahead and pull up
01:26 - our console here
01:27 - and i'm going to now subscribe to that
01:29 - event let's make uh
01:31 - let's go events dot
01:34 - on
01:35 - people change
01:38 - let's just make a function here count
01:42 - and i'll just alert count
01:49 - there we go so now i've subscribed to
01:51 - this event so now we should get an alert
01:53 - whenever this count changes yep now we
01:55 - have one person
01:57 - now we have two people let's go ahead
01:59 - and add another listener here
02:01 - um let's console login
02:05 - let's console.log that account so now
02:06 - when this changes i'm going to alert
02:09 - account yep and then it's going to
02:10 - console log an account yep
02:13 - test2
02:14 - alert2 and then console.logs2 great so
02:17 - let's go ahead and now all we have to do
02:19 - is go into our stats module
02:21 - and then we can actually forget this
02:23 - whole api we don't have to expose an api
02:25 - anymore
02:26 - all we have to do is bind the event so
02:29 - instead of
02:31 - binding
02:32 - to a dom event we're just going to bind
02:35 - to a pub sub event
02:38 - events on people changed
02:42 - we're going to do set people
02:44 - there we go so now set people will fire
02:47 - i don't need to do the underscore render
02:49 - anymore because basically i have no more
02:51 - api
02:53 - and so now whenever
02:55 - people changed
02:57 - we're going to fire set people and set
02:59 - people is going to fire
03:02 - with the people length that we're
03:03 - emitting so let's go and check this out
03:05 - see if it works uh oh render's not
03:07 - defined yep
03:09 - that's what i get for changing my code
03:10 - on me so look at that it automatically
03:12 - starts up with two
03:13 - if i delete that it goes to one delete
03:15 - that it goes to zero excellent so now
03:18 - what's awesome about this is stats does
03:20 - not know where this event comes from
03:22 - there could be 20 other modules
03:24 - triggering this people changed event and
03:26 - it doesn't matter
03:28 - and people does not care about the stats
03:31 - module it doesn't care about any of the
03:32 - other modules it's just emitting this
03:35 - event with this data and so anybody else
03:37 - can listen to that and let's say later
03:40 - on this stats module
03:42 - you know i actually am going to change
03:43 - my mind i'm going to
03:45 - i'm going to um
03:47 - expose an api here on the stats module
03:50 - i'm going to expose a destroy here so
03:52 - let's go ahead and go return
03:56 - destroy
03:58 - and let's make a destroy function here
04:03 - so now this function this uh module can
04:05 - be destroyed if we want it to
04:07 - and so this is going to be
04:09 - this function here so whenever we call
04:11 - destroy that'll destroy this so what
04:13 - what i'm going to do here is i'm going
04:15 - to
04:17 - let's say i'm going to take that whole
04:19 - stats module and i'm going to remove it
04:22 - and then i'm so that's module's going to
04:24 - poof disappear from my page i'm going to
04:27 - unbind my event
04:32 - events off people change
04:36 - set people so now i'm no longer
04:38 - listening
04:39 - to that event anymore so let's go and
04:42 - check this out it's working
04:44 - it's working and let's destroy this guy
04:46 - stats destroy
04:50 - that's gone and nothing is listening
04:52 - anymore
04:54 - so now my people module is completely
04:55 - working just the same
04:58 - this thing is gone from the page and my
05:00 - people module doesn't blow up it doesn't
05:01 - explode because i'm not listening to
05:03 - that module in the first place i don't
05:05 - care if that module is on the page or
05:07 - not i'm simply emitting events and
05:10 - whether that module is there or not
05:11 - everything's going to work just fine so
05:13 - that's your pub sub pattern that's a
05:14 - great way to scale your apps even
05:16 - further