00:00 - alright everybody if you are a web
00:02 - developer in 2016-2017 or you are
00:05 - learning web development 2016-2017
00:07 - there's so much noise out there on what
00:10 - technologies out there what do I learn
00:12 - what's the best stuff to learn and so
00:14 - every year I try to really process
00:16 - through all year long if I was going to
00:18 - learn all over again today or if I was
00:20 - going to level up in an area what would
00:22 - I tell people to learn what would I tell
00:24 - people to choose as a level up
00:26 - technology to learn so that's what this
00:28 - video is it's one of my favorite videos
00:29 - all year long I guess it's probably my
00:31 - most popular video as well and hopefully
00:33 - you'll learn some great stuff so
00:35 - starting from the very beginning and
00:37 - then we'll go to front end then we'll go
00:39 - to back end what do you want to learn if
00:41 - you're a learning and growing web
00:43 - developer in 2016-2017 let's go ahead
00:46 - start as at the very beginning you're
00:49 - starting off you need to learn basic
00:50 - front-end web development and that
00:53 - really is HTML CSS and basic JavaScript
00:56 - you'll pick a text editor the best text
00:59 - editors out there these days are a DeMeo
01:01 - sublime text and brackets dot IO
01:04 - brackets is great for beginners I feel
01:06 - like these are a little bit better as
01:08 - you get more comfortable sublime text is
01:10 - the only one on here that charges I
01:12 - think it's worth it but atom is also
01:14 - great so you start off learning basic
01:16 - HTML and very quickly you'll start
01:18 - adding CSS into that because they're
01:20 - kind of hand-in-hand interlinked and
01:22 - then you'll learn your JavaScript
01:24 - fundamentals you'll learn with
01:26 - JavaScript how do I change HTML and CSS
01:28 - on the page in real time let's say a
01:30 - user clicks a button I'm going to go
01:32 - change HTML and I want to change the CSS
01:34 - that's really where JavaScript is used
01:37 - in a basic level and I used to say hey
01:40 - learn jQuery but notice it's a different
01:41 - color now I've done this new thing this
01:44 - year where I've changed things to a
01:46 - different color if you don't really
01:47 - necessarily need to know them anymore
01:49 - so jQuery is this interesting thing
01:52 - there's this world of developers who are
01:54 - really good at the design element the
01:56 - HTML and the CSS and then they use
01:59 - jQuery plugins to do some functionality
02:01 - and that still is in existence that is
02:04 - still around people make fine salaries
02:07 - on that support their families there's
02:10 - kind of a salary cap you will hit but it
02:13 - for people
02:13 - really like the design side of things
02:16 - that might be where people want to stay
02:18 - and so it's a legitimate skill set to
02:20 - just know HTML and CSS really well and
02:22 - know jQuery really well however you
02:25 - don't really have to know this is the
02:27 - first year I'm saying you don't really
02:28 - have to know jQuery if you're not going
02:30 - to go into that niche so basically do
02:33 - the JavaScript fundamentals course got a
02:35 - link there everything that's blue is a
02:37 - link to videos I have out there for you
02:38 - do the JavaScript is weird an awesome
02:41 - course and then possibly do the jQuery
02:43 - course it's certainly not going to hurt
02:45 - you tons of companies still use jQuery
02:48 - so you've got basic front-end down
02:50 - you're now officially hireable in the
02:52 - industry so if you want to level up
02:54 - you're going to go become a full-on
02:56 - front-end developer which is this orange
02:57 - road we're going to want to come down
02:59 - here to this green road and become a
03:01 - back-end developer no matter which route
03:03 - you take here's a couple things I want
03:05 - to point out that you want to learn
03:06 - along the way these haven't changed
03:07 - since last year but you'll basically
03:10 - want to learn how you set up a web host
03:13 - and FTP files on there this is what you
03:15 - learn at first as a very very beginner
03:18 - you'll use FTP it's the easiest way to
03:20 - get your HTML and CSS files onto your
03:23 - website and then you want to learn basic
03:25 - terminal usage everybody's terrified of
03:28 - the terminal at first because it's black
03:29 - and you use commands that you type
03:31 - instead of commands that you click from
03:33 - a menu that's once you get over that
03:35 - fear you're fine it's not hard to use
03:37 - then you use that terminal to use basic
03:40 - SSH and that will be the new and
03:42 - improved way that you get your files
03:43 - onto the server over FTP but again start
03:46 - with FTP if you're new it is much easier
03:48 - then go SSH and that basic SSH you learn
03:52 - will be allowed to teach you github
03:56 - you'll use SSH to get your files to
03:58 - github as well github is where
04:00 - professional developers keep their code
04:01 - it's a source code repository it gives
04:04 - you full history and you can revise back
04:06 - to any point in history and fix merges
04:09 - from other developers all sorts of stuff
04:10 - github is a phenomenal tool it's pretty
04:13 - much the standard for where professional
04:15 - developers keep their code and then you
04:17 - want to learn how the client server talk
04:19 - to each other somewhere along the road
04:20 - again don't have to learn it all right
04:21 - away I did two videos in a series that
04:24 - really helped explain things that took
04:26 - me about ten year
04:27 - to put together just kind of to really
04:30 - figure out some things that nobody
04:32 - really talks about to people who are
04:34 - learning web development and then you
04:36 - want to learn about restful Web Services
04:38 - basically get post put and delete
04:40 - requests how do you send information
04:42 - back and forth in a standard way from
04:45 - the client which is the web browser to
04:47 - the server so these are not languages
04:49 - these are not going to be as hard as
04:50 - learning CSS or JavaScript these are
04:53 - little tiny skills you learn along the
04:55 - way that may take you everywhere from a
04:56 - couple hours to a day so no I don't want
04:59 - to zoom a page all right so you've
05:01 - you're kind of on the process you let's
05:03 - say you want to become a front-end
05:04 - developer you slowly start learning
05:05 - those things on the list I just went
05:07 - through here's kind of your level up
05:09 - list if you want to level up from a
05:11 - basic front-end or you're already
05:13 - front-end developer here's kind of where
05:15 - things have settled in 2016 so 2015 ish
05:19 - towards the beginning of 2016 saw a lot
05:22 - of craziness in just react world and
05:26 - JavaScript frameworks it was nuts there
05:28 - was a new thing every day and there's
05:29 - been a lot of settling that's really
05:31 - happened so what kind of this is
05:33 - actually a lot shorter of a list than it
05:35 - used to be a year ago so I'm really
05:37 - happy to bring the changes this year I'm
05:39 - really excited about where it is
05:40 - basically you want to learn es6 20s 2015
05:44 - they're the same thing I mean you'll use
05:46 - babel as a standard to transpile that
05:49 - into es5 code because you probably still
05:52 - want to transpile it to es5 code that's
05:55 - a great thing to learn it's not that
05:57 - hard it's really not a lot it's almost
05:59 - all syntax differences but those syntax
06:02 - differences make a huge huge impact on
06:05 - the way you code that makes it much more
06:06 - enjoyable I highly recommend you start
06:09 - using es6 on your projects and then CSS
06:12 - tools they really haven't changed you'll
06:14 - you want to learn pre compiler to
06:16 - compile your CSS down sass is pretty
06:19 - much the most popular lesson stylist or
06:21 - hanging in there that really hasn't
06:23 - changed CSS frameworks there's still
06:25 - tons of them out there but bootstrap and
06:27 - foundation remain the kind of primary
06:30 - ones you learn if you learn bootstrap
06:32 - learn foundation and you go to any other
06:34 - company using any other CSS framework
06:36 - you'll be fine
06:37 - and then you want to hand code your your
06:39 - own responsive design
06:41 - CSS which is what these frameworks do
06:42 - for you but you kind of want to know
06:44 - what they do for you so responsive
06:46 - design is when you change the size of
06:48 - your web browser window then the website
06:50 - automatically resizes for you and
06:52 - changes the look of the website to match
06:54 - a mobile device or to match an iPad so
06:56 - that's what responsive is that's where
06:58 - bootstrap and foundation will save you a
06:59 - lot of time and on to the JavaScript
07:03 - world this is really where the change
07:04 - has happened so it used to be you need
07:06 - to learn gulp and grunt as your tap as
07:08 - your task runners I'm changing those to
07:11 - an odd color you don't really need to
07:13 - learn those these days you may come
07:15 - across a company that uses them that
07:17 - hires you so they're not a bad thing to
07:19 - be familiar with but you don't really
07:21 - need to use those if I learn one I would
07:23 - learn gulp over grunt and then you
07:27 - really are going to do a lot of things
07:28 - with web pack these days or even just no
07:31 - js' on your actual machine nodejs NPM
07:36 - scripts are just fine to get the job
07:38 - done in most scenarios so I'm really not
07:41 - using a task runner anymore I'm using
07:43 - NPM scripts with web pack for pretty
07:45 - much all my projects browserify again
07:48 - don't really need to learn it it's a
07:49 - really kind of standardized around web
07:51 - pack in a lot a lot of ways you really
07:54 - don't need to learn yeoman or Bower
07:56 - anymore they're cool technologies
07:57 - they're fine yeoman is good if you're
08:00 - doing a whole lot of spinning up new
08:02 - projects in which case yeoman will help
08:05 - you boilerplate those projects out with
08:06 - one command so it still has a use it's
08:09 - just not as useful as it used to be
08:11 - since that's not a thing a lot of people
08:13 - end up doing so here's where a lot of
08:16 - the settling has really happened in 2016
08:19 - and even in just the last few months of
08:21 - 2016 is in the JavaScript frameworks
08:23 - Department for those you guys who don't
08:25 - know what these are all about it's when
08:27 - you start writing single page
08:28 - applications which involve a lot of
08:31 - JavaScript just hundreds and hundreds
08:33 - and thousands of lines you really need a
08:35 - framework to help you organize that code
08:36 - and so there's really four that you
08:39 - should be familiar with react angular
08:42 - ember view if you're going to pick one
08:44 - hands down pick react that's just the
08:47 - one to pick right now I don't even think
08:49 - I'm going to offend that many people by
08:50 - saying it because it's kind of a
08:52 - standard thing learn react
08:54 - and then learn everything else and
08:56 - there's other great frameworks that
08:58 - could totally be on this list but I just
09:00 - want to keep a lot of the noise out of
09:01 - the way for you
09:02 - polymers out there still is doing fine
09:05 - irelia is a great newer one a ure Li a I
09:08 - believe very very cool but again it's
09:11 - not one of the ones that I'd say you
09:13 - need to have in the core of your tool
09:15 - belt so on the angular side of things
09:17 - angular 2 is kind of out and honestly a
09:20 - lot of people aren't happy with how
09:22 - angular 2 is kind of made this massive
09:24 - shift from angular 1 is it actually
09:26 - better so many devs I know still using
09:29 - angular 1 it's just kind of weird it's
09:32 - it's one of the reasons react is kind of
09:34 - the one to pick right now so just
09:36 - unusual things going on in the angular
09:38 - world these days and then ember is
09:39 - really really good for massive apps it's
09:42 - got a really big footprint to it but
09:44 - that's expected on a big app and then
09:47 - view Jay s is really great for smaller
09:48 - lighter apps but also react is good for
09:51 - smaller lighter react react is good for
09:53 - smaller lighter apps as well but these
09:55 - are kind of the four to learn now if
09:57 - you're in the react world there was a
09:59 - massive amount of noise over the last
10:01 - year just stuff changing every other
10:03 - week very confusing for a lot of people
10:05 - here's where some settling has happened
10:06 - if you're going to build a smaller
10:08 - application use react in mob X if you're
10:11 - going to build a really small thing with
10:13 - just a module either don't use react at
10:15 - all or just use vanilla react but mob X
10:18 - uses the observable pattern super easy
10:21 - it's the easiest way to get started with
10:23 - building out a react framework with data
10:25 - and you want to learn flux either way
10:28 - you'll want to learn flux because that's
10:29 - where a lot of these concepts for all
10:31 - these things kind of stemmed from they
10:33 - all kind of come from flux I have a
10:35 - tutorial series on that that will really
10:37 - break it down for you
10:38 - Redux is great for an application that's
10:40 - grown and has some complex data
10:42 - interactions readex will really solve a
10:45 - lot of that by creating one giant store
10:47 - where the data all sits in it and well
10:49 - the Redux course kind of talks about
10:51 - that and then if you have really large
10:53 - applications like you're going to build
10:54 - Gmail and react I would use relay for
10:56 - that graph QL is also a really great
10:59 - facebook technology that you can
11:01 - implement into most any of these but
11:04 - relay is where you go to for huge
11:06 - applications that have a long life
11:08 - cycle you're going to be maintaining
11:09 - them for a long time and then also if
11:11 - you're going to just spin up a react
11:12 - application create react app is a really
11:15 - easy way to just spin up a react
11:16 - application in no time so that's the
11:18 - react world hopefully that'll help you
11:20 - kind of site decipher all of that and
11:23 - then if you want to take on something
11:24 - fun and something a little wacky and
11:27 - crazy try closure script or Elm these
11:29 - are both the framework and the language
11:31 - closure script looks terrifying at first
11:34 - because it is based off of closure in
11:37 - elm is kind of its own language as well
11:39 - and so they are both based on this
11:41 - functional programming concept which is
11:44 - super awesome but they will really pull
11:47 - you out of your box if you're looking
11:49 - for something to really shake things up
11:51 - on the front end close your script or
11:52 - Elm and then unit testing hasn't really
11:55 - changed mocha Jasmine karma enzyme is
11:57 - great library to use with any of those
11:59 - if you're testing react enzyme is really
12:01 - kind of I think the best react testing
12:03 - framework and that's kind of front-end
12:05 - so if that freaked you out here's what
12:07 - you do you basically you're coming into
12:09 - the front-end developer stream as a
12:12 - basic HTML CSS developer learn how to
12:15 - pre-compile sass that won't take you
12:17 - hardly any time at all learn a CSS
12:18 - framework and then when you're confident
12:21 - with those things start to learn a
12:23 - JavaScript framework you don't learn
12:25 - them all pick react and then just start
12:27 - learning more every year that's kind of
12:29 - how it is you don't have to freak out
12:31 - seeing all this stuff you don't have to
12:32 - learn it all so let's go back end what
12:35 - do you do on the back end I want to be a
12:37 - back-end developer well I try to clean
12:39 - this up a lot since this there is so
12:41 - much more going on in the backend so
12:43 - much more happening that I try to kind
12:45 - of group stuff for you there's scripting
12:48 - languages functional languages and
12:49 - high-performance
12:50 - compiled languages and you basically if
12:54 - you're looking for something to learn as
12:56 - a beginner to back-end learn a scripting
12:59 - language pick one of these these are
13:00 - kind of the best entry point and they're
13:03 - kind of some of the most popular as far
13:04 - as jobs go so if I'm going to recommend
13:07 - one I'm going to say no js' for several
13:09 - reasons one you probably already know
13:10 - some JavaScript and nodejs is just
13:13 - awesome it's getting more and more
13:14 - popular all the time used by every size
13:17 - of company across the board so no js' is
13:21 - great and then I also
13:22 - put in parentheses kind of the
13:23 - frameworks that you'll use with these
13:25 - languages because this is the language
13:27 - and the parentheses are the frameworks
13:29 - the most popular ones to pick anything
13:31 - with an a caret to mark that little up
13:33 - caret mark that means it's a micro
13:35 - framework micro frameworks are kind of
13:37 - the easiest ones to start with they're
13:39 - much simpler so no js' Python Ruby and
13:43 - PHP are definitely the scripting
13:45 - languages to choose from and then if
13:48 - you're looking to level up if you're
13:49 - looking to challenge yourself stretch
13:52 - yourself don't pick a second scripting
13:54 - language pick something that's of a
13:56 - different paradigm either a functional
13:58 - language or more of a high-performance
14:00 - slash compiled world so if you know node
14:03 - already don't go and move over to Python
14:06 - go to something over here on the
14:08 - functional languages it will completely
14:10 - challenge and stretch the way you think
14:12 - about coding and development and
14:14 - engineering so that's kind of my two
14:16 - cents on that if you're looking for a
14:18 - way to level up pick something of a
14:19 - different paradigm if I were to take
14:22 - absolutely my picks I go no js' I go
14:25 - Haskell and I would go going or rust and
14:29 - then I kind of did the odd color on Java
14:32 - and c-sharp and I get a lot of flack for
14:34 - this hey why wouldn't you tell me to
14:35 - learn Java there's tons of Java jobs why
14:37 - wouldn't you tell me to learn c-sharp
14:38 - net I think that they're going to put
14:42 - you maybe into a world that's not very
14:44 - good for beginners if you're coming out
14:46 - of this world there's no issue with
14:49 - being in there but believe me after
14:51 - having so many friend developers who
14:54 - have been in the Java C sharp C sharp
14:56 - world it's very enterprising there's
14:57 - tons of opportunity in those areas but I
15:01 - would just encourage new people to go
15:03 - with scripting language then add
15:06 - something else on top of that that's
15:08 - kind of my two cents on there that's
15:10 - mostly experience and experience with
15:12 - other developers and the stuff that's
15:14 - the horror stories I have heard is
15:16 - what's kind of driving that
15:18 - recommendation so what do you do once
15:20 - you pick that language I want to learn
15:22 - language how do you actually kind of
15:24 - absorb that language and become good at
15:25 - it
15:26 - well first off here's kind of the things
15:28 - you want to learn in a language no
15:29 - matter what language you pick how do you
15:31 - test it how do you do unit and
15:33 - functional tests how do you build an API
15:34 - for it how do you
15:35 - RESTful API in nodejs or in Python how
15:39 - do you handle security authorization how
15:42 - do I do dot JSON web token JWT
15:45 - authentication in Python how do i do Oh
15:48 - auth - and these are basically the
15:49 - questions you're going to ask yourself
15:51 - is there a common deployment platform
15:55 - for that you know if you're doing Ruby
15:57 - Capistrano is the most popular thing you
16:00 - use to deploy a ruby app or you use
16:02 - flightplan or something like that for no
16:04 - js' or fabric for python so how do you
16:06 - deploy this application is there any
16:09 - popular ORM in the language Oh RM is
16:12 - basically how you manage your objects
16:15 - and the way they will save and fetch
16:17 - from the database so it kind of gives
16:19 - you a code representation of the
16:20 - database is there a popular ORM for your
16:23 - data and then you'll want to just learn
16:25 - how to tie that into different databases
16:27 - now there are oh my goodness dozens and
16:30 - dozens of databases so many good for so
16:33 - many different reasons at the end of the
16:35 - day start with a relational database if
16:37 - you're not comfortable with them you
16:40 - want to learn my sequel first then learn
16:42 - how Postgres is has better features than
16:45 - my sequel lots of people still use my
16:47 - sequel because they don't need those
16:48 - features but learn a relational database
16:50 - first the next thing I would learn would
16:53 - be to learn Redis for sessions and
16:55 - caching learn how to cache your queries
16:58 - to a database in Redis and then you know
17:01 - have fun learning document or know
17:03 - sequel database MongoDB is still the
17:05 - most popular one even though a lot of
17:07 - people gripe about it Couchbase and
17:09 - rethink DB are - super cool ones and
17:13 - then learn a search engine database
17:14 - elasticsearch or solar you know super
17:16 - cool learn how you know to use a
17:19 - database tuned for search engines and
17:22 - then you also want to learn caching you
17:23 - know how do I cash in nginx how do I
17:26 - cache in Apache if I'm using that how do
17:29 - I do a database level caching which is
17:31 - of course Redis right here or an
17:33 - in-memory cache even is useful sometimes
17:36 - so that's kind of back end that's the
17:39 - recommendations I have for the backend
17:40 - world in 2016 and then if you have been
17:46 - in back-end for a long time you're
17:47 - really looking to challenge yourself
17:48 - look
17:49 - DevOps DevOps is how you do supercool
17:52 - workflows with back-end let me see if I
17:55 - can get rid of how can I get rid of this
17:57 - just second here to move back-end over
17:59 - and pull DevOps in okay there we go
18:01 - so DevOps here's kind of the things you
18:05 - want to learn there's there used to have
18:06 - a ton of web platforms up here and I'm
18:09 - just kind of standardizing around the
18:10 - four most popular digitalocean is great
18:12 - for practicing things you can spin up
18:15 - servers and spin them down in no time
18:16 - they're extremely cheap although if I
18:18 - was going to do anything on professional
18:20 - scale I would pick AWS personally as
18:23 - your in Rackspace also totally cool I'm
18:27 - pretty much if you're going to learn to
18:28 - learn digitalocean in AWS Heroku it's
18:31 - its own animal it gets expensive as you
18:33 - scale it it works really good for small
18:35 - projects it's it's just its own animal
18:37 - it's it's a good thing for everyone to
18:39 - look at at some point in time just to
18:41 - know their paradigm and then to try to
18:43 - recreate that experience with your other
18:45 - stuff and then docker is something
18:49 - you're absolutely going to want to know
18:51 - this is docker right here if you're
18:52 - going to learn one technology to expand
18:55 - your DevOps stuff learn docker if you
18:58 - don't know it if you know it a little
19:00 - bit learn it well docker is where stuff
19:02 - is going container izing and
19:04 - containerization is really where stuff
19:06 - is going in docker is the technology to
19:09 - learn in that field right now so if you
19:11 - want to do docker on a big scale
19:12 - enterprise level kubernetes is the one
19:14 - that over and over again just keeps
19:16 - coming up kubernetes is not going away
19:17 - anytime soon it's a great technology
19:19 - mezzos is another really good just
19:22 - platform for running docker stuff if
19:24 - you're doing smaller scale docker you
19:27 - can either use docker swarm or Dockers
19:29 - new 1.12 version has its own swarming
19:32 - capabilities that don't offer a lot but
19:34 - for small scale stuff will keep things
19:37 - extremely simple for you and then if
19:39 - you're looking for a good UI if you want
19:41 - to really manage docker with a great you
19:44 - know graphical user interface rancher's
19:46 - my favorite love-love-love deploying
19:49 - docker apps with rancher docker cloud is
19:52 - a very similar Rancher as a service type
19:54 - of thing you basically you know you use
19:57 - the docker cloud service it's very
19:58 - similar to Rancher although I do think
19:59 - Rancher is much more feature full docker
20:02 - datacenter
20:03 - Universal control plane that's the same
20:05 - product or two pieces of one product
20:07 - that's kind of if you're looking to do a
20:09 - local enterprise installation although
20:11 - ranch are you install on your own
20:13 - hardware is well that's kind of what I
20:16 - like about Rancher a lot you install it
20:18 - on your own machines on your own
20:19 - infrastructure doctor datacenter is
20:21 - really kind of docker cloud with
20:24 - enterprise level features that you also
20:26 - run on your own hardware so that's kind
20:28 - of if you're going to look at anything
20:29 - in the docker world look at this set of
20:31 - stuff Dockers awesome I did just come
20:34 - out with an O'Reilly course on docker
20:35 - called real-world docker where I kind of
20:38 - really take you if you know the basic
20:40 - basics you can take the course and it'll
20:42 - take you through a lot of kind of the
20:44 - fundamentals of docker and you'll be
20:46 - comfortable moving into most to any of
20:48 - these things because you kind of know
20:49 - the fundamentals again it's called real
20:51 - world docker it's a course with O'Reilly
20:53 - publishers the animal book people and
20:56 - then you'll also want to learn
20:57 - continuous testing and deployment
21:00 - Jenkins is a continuous testing platform
21:03 - that runs on your own hardware and then
21:05 - there's stuff like semaphore CI circle
21:07 - CI code ship what else is out there
21:10 - Travis there's just so many CI places
21:12 - that will get real-time testing and
21:14 - deployment on your stuff it is
21:16 - definitely to me old-school feeling to
21:19 - have to run a deployment command to get
21:21 - your code to production merge it to
21:23 - master have it go to production as soon
21:25 - as you merge to master merge it to a
21:27 - staging branch to get it on staging
21:29 - let's see I take care of the rest of
21:30 - that for you if I had to take my pick
21:33 - semaphore CI is extremely fast you can
21:36 - get a build a test a deployment out in
21:39 - like 30 seconds
21:41 - semaphore is extremely fast extremely
21:43 - simple to use circle CIN code ship are
21:46 - also great so these are kind of my
21:48 - favorites these days vagrants I gave
21:52 - this the odd color because you really
21:53 - don't need to know vagrant anymore
21:54 - docker is really in my opinion the
21:57 - replacement for vagrant it's a good
21:59 - thing to be aware of in case you were to
22:01 - come across a legacy application that
22:02 - used vagrant but I think docker is the
22:05 - thing to learn and then if you do a 111
22:08 - any kind of enterprise level
22:10 - configuration management learn ansible
22:13 - docker and of course you got to know
22:15 - linux to do that
22:17 - salt chef puppet I've made those the odd
22:18 - color because that type of thing is not
22:22 - as much where things are going
22:23 - everything's going containerization and
22:25 - docker is your provisioning server
22:28 - management configuration management for
22:30 - most situations so that's kind of the
22:34 - 2016-2017 web world in a nutshell that's
22:38 - what you got that's what you want to
22:39 - learn I hope you enjoyed this feel free
22:41 - to comment with any questions I'll try
22:43 - to answer everything I can especially
22:44 - during the first weeks of this video
22:46 - being live and have yourself a great web
22:50 - development year