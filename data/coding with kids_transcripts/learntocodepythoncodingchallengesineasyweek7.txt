00:00 - welcome to cutting with kids my name is
00:03 - Kalia my name is Andrew today we're in
00:05 - edible so edibit is a coding platform
00:08 - where there are lots and lots of
00:10 - problems you can solve using different
00:11 - kinds of coding languages So today we're
00:14 - going to do three easy coding challenges
00:16 - in Python so our first coding challenge
00:19 - is called is it true so in this
00:22 - challenge you will be given a relation
00:24 - between new two numbers written as a
00:26 - string rough functions that determines
00:29 - if the relation is true or false so here
00:31 - are some examples to give us um
00:34 - uh expression for example eight is less
00:38 - than seven so that's not true so we're
00:41 - gonna return false so here
00:44 - two equals two that is true so we're
00:47 - going to return true
00:48 - so tests will only have three types of
00:50 - relations z uh equals more than less
00:54 - than many approaches work here but the
00:55 - evil function is particularly useful so
00:59 - now we're going to go to the code so we
01:01 - have a function called is it true with
01:04 - the relation variable so first we're
01:08 - going to do a variable called answer
01:11 - and wants to evaluate the expression to
01:14 - see if it makes sense so the evil
01:17 - function will evaluate the expression
01:19 - for example a check if 10 is more than
01:23 - 10 is true for example right here
01:27 - and then it will replace the variable of
01:29 - true or false then here we're also going
01:32 - to use the replace function and replace
01:34 - a single uh equals Mark with two equals
01:39 - marking python so for example because
01:41 - here when it runs these 101 equals 101
01:45 - just one uh equal sign in Python will
01:49 - not make sense only two equals sine will
01:52 - work because if you do one equal sign
01:54 - like a variable it's just assigning
01:56 - something not actually being making it
01:59 - equal
02:00 - okay so he uh store true or false in the
02:04 - answer variable so if answer is true
02:06 - that means the relation is true and it
02:10 - works and we're going to return true if
02:12 - it's not we're going to turn false now
02:14 - let's check it and see the test cases so
02:18 - here there is 2 equals two this is the
02:20 - first equal sign so it won't work at
02:22 - first when I did not use the replace
02:24 - function as like what why won't it work
02:26 - and then I saw it the one equal sign and
02:30 - I solved the problem so now in the
02:32 - console we test we pass all tests let's
02:34 - see one more test case there 15 equals
02:38 - 137.
02:40 - 157 obviously not so we're in a term
02:43 - false okay on to the next problem this
02:46 - it's called check if a list contains a
02:49 - given number so write a function to
02:51 - check if a list contains a particular
02:53 - number so here are some examples it will
02:56 - give us a list here there's one two
02:58 - three four five then it will go to the
03:00 - number then when you check if it's in
03:02 - the list of it here is three so one two
03:05 - three four five so three is in the list
03:06 - so we're going to turn true if not here
03:10 - there's the empty list they want us to
03:12 - check if five is in the empty list so
03:15 - it's empty so there's nothing in it so
03:16 - we're going to return false don't forget
03:18 - to return the result okay so we have a
03:21 - function called check and we have a list
03:24 - called list and a variable called L for
03:27 - some reason so first we're going to do
03:29 - if l in list return true so just it's
03:34 - very simple to check if something is in
03:36 - the list then if it's not you're just
03:39 - going to return false very easy and then
03:42 - now we're going to see the test cases
03:45 - one one two one five four seven so we're
03:49 - gonna check a seven in there which it is
03:52 - so we're gonna turn true and then here's
03:54 - one one two one once and there's only
03:56 - one and two in the list so it wants that
03:58 - to check for three there is no third in
04:01 - it so we will return false there's also
04:03 - one one two one five four seven oh sorry
04:06 - one one two one five four seven yeah and
04:09 - then we're gonna check if eight it's not
04:10 - in there so we're gonna turn false so
04:12 - let's see in the castle yes all tests
04:15 - are passed okay on to our final coding
04:17 - challenge it's called less than a
04:20 - hundred given two numbers returned true
04:22 - of the sum of both numbers is less than
04:24 - 100 otherwise return false so here's
04:27 - some examples less than 100 so it's the
04:30 - function 22 and 15 so 22 plus 15 equals
04:33 - 37 so right here and when 37 is less
04:38 - than 100 so we're gonna turn true and
04:41 - here there's 83 and 34 so the sum is 117
04:46 - so that's more than 100 so we're going
04:48 - to turn false so now let's go to the
04:51 - code so there is a function called less
04:53 - than 100 and we have two numbers A and B
04:56 - so first let me find out the sum because
04:59 - we're supposed to check if the sum is
05:02 - less than 100 so we're going to do sum
05:04 - equals a plus b which is the variable
05:07 - with with the sum of the two numbers
05:09 - whatever the numbers are then we're
05:12 - going to check if it's less than 100 so
05:13 - if sum is less than a hundred return
05:16 - true yeah if not we're going to return
05:19 - false okay so now tests there are lots
05:24 - of tests that's a lot okay there is 74
05:27 - and 53 that's more than 100 so it's
05:30 - false and then here there is 10 10 and
05:34 - 45 that's 55. so it's true let's go to
05:38 - the console all tests are okay
05:41 - test ideas it's just like
05:45 - okay well that was fun and that's it for
05:48 - today thank you for watching Remember to
05:51 - smash the like button and subscribe bye
05:54 - bye