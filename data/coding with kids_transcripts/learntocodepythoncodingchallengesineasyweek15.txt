00:01 - welcome to pudding with kids my name is
00:04 - Kalia and my name is Andrew today we're
00:05 - in edible so edibit is a coding platform
00:08 - where there are lots of problems to
00:10 - solve using coding languages and you can
00:12 - use different coding languages to solve
00:14 - the problems so today we're going to do
00:16 - three easy coding challenges with python
00:19 - so our first coding challenge is called
00:21 - drinks aloud a bartender is writing a
00:24 - simple program to determine whether he
00:26 - should serve drinks to someone he only
00:28 - serves drinks three people 18 and older
00:30 - and when he's not on break given the
00:33 - person's age and whether break time is
00:35 - in session create a function which
00:37 - returns whether he should serve drinks
00:39 - so for example here it will give us the
00:42 - customers age and if he's on the break
00:45 - yeah so
00:47 - uh to for the bartender to give a drink
00:50 - to that person the person needs to be 18
00:53 - years old and older and uh the
00:57 - um break variable needs to be false
00:59 - okay
01:00 - so we have function called should serve
01:03 - drinks with two variables age and on
01:06 - break so first we're going to do if age
01:08 - is more or equal to 18 and on break
01:11 - equals equals false so we need make sure
01:14 - to put the and because we need both of
01:17 - these conditions to be true
01:19 - so H is more than 18 and on break the
01:22 - variable equals equals false so we need
01:24 - him not on break because if he's on
01:27 - break he won't do any be doing any work
01:29 - and
01:31 - we need two equal signs because one
01:34 - equals sign will just assign something
01:37 - okay so if he is available and the
01:41 - customer is more than 18 years old we're
01:43 - gonna return true because the bartender
01:44 - can give a drinks to the customer if not
01:48 - we're gonna just return false because he
01:50 - can't
01:51 - okay so here are the test cases
01:53 - one of them are three years old of
01:56 - course it's false
01:58 - okay and then there's one that's 30 true
02:01 - okay so it's still false because he's on
02:03 - break so he's passed all the tests onto
02:06 - our next coding challenge it's called
02:08 - Matchstick houses this challenge will
02:11 - help you interpret mathematical
02:13 - relationships both algebraically and
02:16 - geometrically so we have pictures of
02:20 - little houses made with matchsticks
02:23 - our instructions are to create a
02:25 - function that takes a number as an
02:27 - argument and Returns the number of
02:29 - matchsticks and that's that see step one
02:31 - two and three in the images above so
02:33 - here's a step one step two and step
02:36 - three so each step we're adding one more
02:38 - house so here we need to see how many
02:43 - how many matchsticks are in the number
02:47 - of steps they give us okay Step Zero
02:50 - returns zero match sticks so if a zero
02:53 - just returns zero so here in one house
02:56 - we see that it's one two three four five
03:00 - six so the first house is six but when
03:03 - you add one on you count
03:05 - one two three four five six seven eight
03:10 - nine ten eleven so eleven minus six
03:14 - equals five so after the first house
03:16 - every house is only five more
03:19 - matchsticks so first we have a variable
03:23 - called match houses with the numbers
03:26 - step
03:27 - so first when you do is Step equals
03:29 - equals zero we're just gonna return zero
03:31 - if there are no steps to eliminate that
03:34 - first okay then we're gonna do
03:36 - matchsticks equals step times five plus
03:39 - one so this variable holds the number of
03:43 - matchsticks for the steps and we do step
03:46 - times five with the star symbol because
03:50 - each house is five matchsticks but then
03:54 - you ask but the first step is six
03:57 - matchsticks so we're just gonna add one
04:00 - because it also multiplies the first
04:02 - step by five so we only need one to make
04:05 - it six so now we have the total number
04:07 - of matchsticks we're going to return the
04:09 - variable matchsticks and see how this
04:11 - goes so in the test there are 99 steps
04:16 - 496. that's matchsticks that's the
04:19 - highest one yeah and then there's zero
04:21 - and then zero so the first one is still
04:23 - six
04:24 - so we pass all our tests onto our final
04:27 - coding challenge
04:29 - our final coding challenge is called
04:30 - trophy or falsy a trophy value is a
04:34 - value that translates to True when
04:36 - evaluated in a Boolean context all
04:39 - values are truthfully unless they're
04:40 - defined as falsy all falsy values are as
04:44 - false false non-zero then these kinds of
04:48 - parentheses
04:49 - and then the quotation marks create a
04:52 - function that takes an argument of any
04:54 - data type and returns one fits through
04:56 - three and zero if it's falsy for example
04:59 - here the if it's false if it's a falsy
05:02 - we're gonna turn zero if it's a a truthy
05:05 - we're gonna return one
05:08 - yeah okay
05:09 - so make
05:11 - sort of a function called is trophy with
05:14 - the variable Val which is value so first
05:17 - we're going to do if value equals false
05:19 - so first we're gonna
05:21 - do if value equals false or none zero
05:24 - and then the brackets and then the
05:27 - quotation marks make sure to put both
05:29 - kinds of quotation marks so the brackets
05:32 - and the quotation marks are empty one
05:34 - yes not the ones with like letters of
05:37 - words yeah then they would be strings
05:40 - okay so if it's any of these we're gonna
05:43 - turn zero because they're falsies
05:45 - remember to put the
05:48 - um double equal signs for each if ball
05:50 - equals equals and then the value value
05:53 - because if you don't it for some reason
05:55 - it won't work
05:57 - okay so now we've eliminated all the
06:00 - falsies if it's not a falsy it's we know
06:02 - it's a truth B so we're gonna do else
06:05 - return one
06:06 - now let's see there is
06:09 - empty and then a zero there's none which
06:12 - is also a falsy there only there are
06:15 - five true fees true and this is a string
06:18 - false so it's one because it has words
06:21 - inside the quotation marks so let's see
06:24 - we pass all the tests well that was fun
06:28 - and that's it for today thank you for
06:30 - watching Remember to smash the like
06:32 - button and subscribe bye bye