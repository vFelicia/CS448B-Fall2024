00:00 - welcome to coding with kids my name is
00:04 - andrew today we're in edibit so edibit
00:07 - is a platform where there are lots and
00:09 - lots of challenges that you can solve
00:11 - using coding languages of all kinds so
00:14 - today we're at edibit and we're going to
00:16 - use python and we're going to solve
00:18 - three challenges so our first challenge
00:21 - is called are the numbers equal so our
00:25 - instructions are to create a function
00:27 - that takes two integers and checks that
00:28 - they are equal so here are examples so
00:31 - is equal which is a function that will
00:34 - give you the numbers five and six is it
00:36 - equal
00:38 - false five and six are not equal so we
00:40 - need to um
00:42 - make the function to work then there's
00:44 - another example example is equal one and
00:47 - one true because one is equal to one and
00:50 - then there's another one
00:52 - with one and one but one one of the ones
00:55 - is a string and the other is the integer
00:57 - so there is a note and it says if
00:59 - there's a string that you should return
01:01 - false
01:02 - okay let's see so define is equal then
01:05 - we have number one and number two so
01:06 - this is our function
01:08 - so
01:09 - i'm going to do if number one equals
01:12 - equals to two question marks
01:14 - integer number two return true so if one
01:18 - number is equal to another number and
01:20 - both of them are integers it will return
01:22 - true
01:22 - and else if one of them is an integer or
01:26 - um one of them is not equal to the other
01:28 - it'll do else return false
01:31 - now let's check it
01:33 - now it's checking so there are the tests
01:36 - so it'll give you two numbers for number
01:37 - one and number two as variables and then
01:40 - their answers so for the console
01:43 - here we passed all the tests and then
01:46 - here you can see in the test
01:48 - these are the results where we are
01:50 - supposed to give is there's two two
01:53 - they're equal so there's true and then
01:54 - there's a one and five and one is an
01:58 - integer so it's false and there's 88 and
02:00 - 88 true 3645 false okay that's our first
02:05 - challenge
02:06 - and moving on to next challenge
02:08 - this challenge is called let's fuel up a
02:11 - vehicle needs 10 times the amount of
02:13 - fuel that the distance it travels
02:15 - however it must always carry a minimum
02:17 - of a hundred feet before setting off
02:20 - create a function which calculates the
02:22 - amount of fuel it needs given the
02:24 - distance so here are the examples
02:26 - calculate fuel 15.
02:28 - so if there is 15 i mean
02:31 - 15 um distance we need to calculate how
02:34 - many fuel we need so 15 times 10 equals
02:38 - 150
02:40 - so then we will return 150 so if
02:44 - here for example calculated field 3 3
02:47 - times 10 is 30 but it says um
02:51 - it
02:52 - it must always carry a minimum of a
02:54 - hundred field before setting off
02:56 - so here it says distance will be a
02:58 - number greater than zero return 100 if
03:00 - the calculate
03:02 - calculated field turns out to be less
03:04 - than a hundred so here three times 10 is
03:06 - 30 30 is less than 100 so we need to
03:09 - return a hundred
03:11 - okay
03:12 - now we have a function called calculate
03:14 - field with a variable called n
03:16 - so only if uh we're going to make a
03:18 - field a variable called feel it goes n
03:22 - which is the distance times 10 so that
03:25 - fuel holds the variable field holds the
03:28 - fuel need then if fuel is more than 100
03:32 - then return fuel so we're checking if
03:34 - it's more or less than 100
03:38 - because remember the vehicle needs to
03:40 - carry a minimum of 100 fuel and else
03:43 - if the fuel is
03:45 - less than a hundred it will just return
03:47 - a hundred okay now we're gonna check and
03:49 - see the tests so test will give us the
03:52 - um
03:53 - the
03:54 - distance there's
03:56 - um a bunch of there's sometimes there is
04:00 - um points and then so we passed all the
04:03 - tests okay and then here there's a
04:05 - number that is the
04:07 - distance we or we need the fuel we need
04:11 - to um
04:13 - return
04:14 - so
04:15 - here's 15 15 times 10 is 150 so that
04:18 - works but here
04:20 - um
04:21 - 3.14 times 4 i mean times 10 equals 31.4
04:26 - that's less than 100 so we return 100
04:29 - okay now for our last challenge it's
04:31 - called luke i am your dot dot dot so
04:35 - luke skywalker from says star wars has
04:38 - family and friends humans will remind
04:40 - him who is who so like
04:42 - maybe his memory got a little
04:45 - whack-a-doodle-doo
04:47 - given a string with a name return the
04:49 - relation of that person to luke he's a
04:51 - chart so
04:52 - in case if you didn't watch star wars or
04:54 - didn't know anything you can see the
04:56 - names and the relation to luke skywalker
04:59 - so there's darth vader leah han and r2d2
05:02 - so darth vader's relation is father
05:05 - leah's his sister han is brother-in-law
05:08 - and r2d2 is just a droid
05:10 - it's a robot yeah so here are examples
05:14 - so relation to luke darth vader then
05:16 - when you say luke i am your father so
05:19 - luke knows who how his relation is
05:22 - and then for hand is luke i am your
05:24 - brother-in-law so let's go to code and
05:27 - there are functions called relation to
05:28 - luke with a variable called name okay
05:31 - let's see so if name equals equals darth
05:34 - vader return luke i am your father so
05:38 - then luke will be oh you're my father
05:42 - but you're evil
05:44 - okay
05:45 - then we're gonna do the same to the
05:47 - other three people
05:49 - and r2d choose the jordan if name equals
05:52 - leah return luke i am your sister
05:55 - and then if name eagles equals han
05:58 - return luke i'm your brother-in-law and
06:00 - the same for r2d2 except i am i i am
06:03 - your droid or robot yes now let's check
06:06 - it and for the test it will only do the
06:09 - four members
06:11 - and then
06:12 - it has the thing that the relation the
06:16 - people need to say to luke so lou can
06:19 - remember
06:21 - okay so console so we test all four uh
06:24 - we passed all four tests and we
06:27 - succeeded okay well that was fun and
06:30 - that's it for today thank you for
06:32 - watching remember to smash the like
06:35 - button and subscribe bye bye