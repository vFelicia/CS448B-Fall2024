00:00 - welcome to
00:01 - coding with kids my name is kalia my
00:04 - name is andrew today we're in edibit so
00:06 - edibit is a coding platform where there
00:07 - are lots and lots of problems you can
00:10 - solve using all kinds of coding
00:12 - languages so today we're going to do
00:14 - three challenges in edibit
00:16 - using python so our first challenge is
00:19 - called return a string as an integer so
00:22 - our mission is to create a function that
00:25 - takes a string and returns it as an
00:26 - integer so here are examples what our
00:28 - function should do so string and six so
00:32 - it gives us a string which is six we
00:35 - need to turn it into six but it's an
00:38 - integer and then we need to do the same
00:40 - with all numbers so let's go to code so
00:42 - we have a function called string int and
00:45 - we have a variable called txt that
00:48 - stands for text
00:50 - so text is the thing we need to change
00:52 - into an integer so first we do a
00:55 - variable called result
00:57 - equals int
00:59 - text so this int will turn whatever
01:03 - is inside the variable into an integer
01:05 - whatever it was before
01:08 - and then we're going to return the
01:10 - result variable which is the um
01:13 - the text
01:14 - but turned into an integer so now let's
01:17 - check it and for the test it will give
01:19 - us a number and then which is a string
01:22 - and we need to turn it into an integer
01:24 - so let's see oh
01:26 - all four tests are passed
01:28 - let's go on to next challenge add
01:31 - subtract multiply or divide
01:33 - write a function that takes two numbers
01:35 - and returns if they should be added
01:37 - subtracted multiplied or divided to get
01:40 - 24. if none of the operations give can
01:43 - give 24 return none so here are some
01:46 - examples so it goes two numbers in this
01:48 - case 15 and 9 so 15 plus 9 equals 24 so
01:52 - when you return added
01:54 - and then there is um 11 and 11. there's
01:57 - no way you can get 24 with 11. you only
01:59 - can get 22. yeah so there's none and
02:02 - then 26 and 2 26 minus 2 equals 24 so
02:07 - when you return subtracted
02:09 - let's see only integers are used as test
02:11 - input numbers should be added subtracted
02:14 - divided or multiplied in the order they
02:16 - appear in the parameters the function
02:18 - should return either added subtracted
02:20 - divided multiplied or not let's see the
02:22 - code so we have a
02:24 - function called operation and we have
02:27 - two variables num1 and num2 number one
02:30 - and number two yeah so first we need to
02:32 - do if num1 plus num2 equals equals
02:37 - 24 return added so we need two equal
02:40 - signs because
02:42 - um
02:43 - one equal sign is just stating like this
02:46 - is stored inside this for variables two
02:49 - equal signs actually means is one plus
02:52 - one equals two yes okay so
02:55 - if
02:56 - number one plus num two equals twenty
02:58 - four it'll return added so it's like if
03:02 - is 20 plus 4 equals 24
03:06 - and then it will return added yeah so
03:08 - we're going to do the same we've all uh
03:10 - subtracted multiply and divide it so
03:12 - we're going to do lf which is else if
03:15 - num1 minus number 2
03:17 - equals equals 24 or num2 minus number
03:21 - one num1 equals equals 24. there are two
03:24 - ways this could work out because it
03:26 - maybe the number two is like bigger than
03:29 - number one yeah then if it works we're
03:31 - going to return subtract it and we're
03:33 - going to do the same with multiplied and
03:34 - divided so lf
03:36 - um we're going to do
03:38 - num1
03:39 - divided by num2 equals equals 24.
03:42 - so this could also go two ways and if it
03:45 - does work we're gonna return divided and
03:48 - finally multiplication
03:50 - lf num1 star which is multiply num2
03:53 - equals equals 24. this can only go one
03:55 - way uh return multiply
03:58 - so
03:59 - then else this is the last
04:01 - well if none of these work
04:04 - that means they can't get into 24 so
04:06 - we're going to return none now let's
04:08 - check it and see the tests
04:10 - so here they'll give us two numbers 12
04:12 - and 12. so here 12 plus 12 equals 24.
04:16 - 100 minus
04:18 - 706.76 wow subtract it that's still
04:21 - worth now there's 10 and 12 that doesn't
04:24 - work
04:25 - there's also 528
04:27 - divided by 22.
04:30 - okay let's see so we passed all the
04:32 - tests now to our final challenge to the
04:35 - power of
04:37 - okay so create a function that takes a
04:39 - base number and an exponent number and
04:41 - returns the calculation
04:43 - so here for example 5 to the power of 5
04:45 - is 3
04:47 - 125.
04:48 - this 3 to the power of 3 is 27. so
04:53 - when you return the result and all test
04:55 - inputs will be positive integers so
04:58 - um
04:59 - after you do the exponent like 3 to the
05:02 - power of 3 so if they're both integers
05:04 - which they are um it will be 27 and 27
05:08 - will still be an integer okay let's see
05:10 - so we have a function called calculate
05:13 - exponent with two variables
05:15 - num which is the number and the exponent
05:19 - so we need to do return
05:21 - num
05:22 - star star x that's all we need to do is
05:24 - very simple
05:25 - so um
05:28 - a longer way is to put a num star star x
05:31 - into a a variable and then
05:34 - you return the variable so star star and
05:37 - python means exponent like to the power
05:40 - of so if one to the power of one it will
05:43 - be one okay now let's check it and see
05:45 - the tests so there is
05:48 - three and three 27's these are the
05:50 - examples right here
05:53 - they're basically just tests let's see
05:55 - the console so all tests are passed yay
05:59 - well that was fun and that's it for
06:01 - today thank you for watching remember to
06:04 - smash the like button and subscribe bye
06:06 - bye