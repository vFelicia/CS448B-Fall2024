00:04 - today we're in edible so today uh we're
00:09 - gonna do three easy coding challenges
00:11 - with python so edibit is a coding
00:13 - platform where there are lots and lots
00:15 - of problems to solve easy coding
00:17 - languages and there are also different
00:19 - kinds of coding languages you can use so
00:22 - for our first problem is called free
00:25 - coffee cups
00:27 - where each of the six coffee cups I
00:29 - bought I got a seventh cup free I don't
00:31 - know why would anybody buy Six coffee
00:34 - cups or one day that's a lot in total I
00:37 - guess seven cups I know
00:40 - um they are making a party and they need
00:42 - coffee
00:43 - that's to create a function that takes
00:46 - any cost for a bot in return total
00:49 - number of cups of debt so basically we
00:52 - have to calculate how many cups gets
00:54 - extra and then add it to the to the
00:58 - number of Cups he already has so the
01:00 - number of cups I bought plus number of
01:03 - cups I got for free only valid inputs
01:05 - will be given so let's go to code so we
01:08 - have a function called total cuffs and
01:10 - we have a variable called n
01:13 - so first we have to calculate how many
01:17 - three cups we get so we're gonna do
01:19 - three which is a variable equals int n
01:23 - divided by six so we need to turn it
01:25 - into integer by using the end function
01:27 - and we need to do n divided by 6 to see
01:31 - how many three cups we will get then
01:34 - we're going to reduce we're going to
01:36 - turn the 3 into string I'm going to make
01:38 - a variable called string and then we're
01:40 - going to use the string function to turn
01:41 - the free like the number three because
01:44 - we get into a string
01:46 - then we're going to make another
01:48 - variable called total then I'm going to
01:51 - do 3 plus n
01:53 - so here we're going to add the number of
01:55 - coffee cups we already have to the extra
01:57 - like the free coffee cups that we earned
02:00 - that's a lot yeah and then we're going
02:02 - to return the total number of coffee
02:04 - cups we get so while we're checking
02:06 - we're going to see the test cases so
02:09 - here the coffee goes there's one 200 I
02:12 - know the person needs
02:15 - um a lot for a
02:17 - um a cake a coffee cake that's still
02:21 - super much so there's three so here you
02:26 - can't get any extra coffee because
02:28 - because you don't even have six coffee
02:29 - cups so you just returns three there's
02:32 - 213 maybe they need coffee for the whole
02:35 - Army then here you'll get 248 and then
02:40 - um 12
02:41 - 6 goes into 12 two times so you get two
02:45 - coffee cups three coffee cups so 12 plus
02:48 - 2 equals 14. okay so let's go to console
02:51 - all tests are passed hooray
02:59 - you are free programmers and you
03:02 - hopefully pay them of course
03:05 - create a function that takes free
03:06 - numbers to hourly wages of each
03:08 - programmer and Returns the difference
03:10 - between the highest paid program and the
03:13 - lowest paid program so here for example
03:15 - there's 147 33 and 526. one get 526 and
03:21 - one get 33. so 526 is the most and 30
03:25 - series the least so we're going to
03:27 - subtract 33 from 526 in order to get 493
03:31 - and that 493 is a number would be more
03:34 - third another is one five and nine
03:37 - that's closer yeah nine and one are the
03:41 - uh highest and lowest so nine minus one
03:45 - equals eight so when you return the
03:46 - number eight notes don't forget to
03:48 - return the result okay so now in code we
03:52 - have a function called programmers and
03:56 - there are three variables one two three
03:58 - in terms of the hourly wages of the
04:00 - three programs very high so first when
04:04 - you create two variables called Y is
04:06 - called pause so we're going to set the
04:09 - values to zero for now and
04:12 - um
04:13 - for highest and lowest I'm gonna instead
04:16 - of two highest the highest and lowest
04:18 - numbers into these variables and then
04:20 - we're going to subtract them to find the
04:22 - difference
04:23 - so it's going to take a long time long
04:25 - code to figure out these but it's quite
04:28 - simple so first I'm going to do if one
04:31 - is more than two and one is more than
04:33 - three that means here in the scenario
04:35 - one is the greatest number out of all
04:38 - three numbers we're going to make
04:39 - highest equals one Whatever number one
04:41 - is then we're going to place the number
04:44 - in the height then else if two is more
04:48 - than one and two is more than three yeah
04:49 - here two is the greatest number we're
04:52 - gonna make highest into two else if it's
04:55 - not one or two we know it will be three
04:58 - because it has to be one of them so
05:00 - we're going to make highest equals three
05:01 - so we're now we're done with the highest
05:03 - we need to do the same thing with the
05:05 - lowest except we need to change the
05:07 - greater symbol into the lesson so if one
05:10 - is less than two and one is less than
05:12 - three that means one is the lowest grade
05:15 - yeah we're going to do lowest equals one
05:17 - and else if two is less than one and two
05:21 - is less than three lowest equals
05:24 - and then finally else if it's not two or
05:28 - one we're gonna make lowest into three
05:29 - so now we're done assigning values to
05:32 - the highest variable and the lowest
05:34 - variable
05:35 - so next we're going to do difference and
05:37 - find the difference between the highest
05:39 - and lowest paid programmer so I'm going
05:41 - to do highest minus lowest and then
05:44 - we're going to return the difference of
05:46 - the two numbers so while we're checking
05:48 - you're going to see the test cases so
05:50 - here it is 254.
05:53 - 345.
05:55 - well how did you get those monies and
05:58 - it's like hourly not like daily if you
06:01 - want to do 457 minus 234 which is
06:06 - 223. another one 43 33 and 43 so it's 43
06:12 - minus 33. oh 33 the person that must be
06:15 - so sad yeah because the other two
06:17 - programs have the same amount of pay
06:20 - yeah so now constantly passed all the
06:22 - tests on to our final problem
06:25 - so our final problem is called half
06:27 - quarter and eighth create a function
06:30 - that takes a number and return a list of
06:32 - three numbers half of the number a
06:34 - quarter of the number and eight of
06:36 - another number so here are some examples
06:39 - so give us a number in this case it's
06:42 - six nine million divided by two which is
06:44 - three divided by four which is basically
06:47 - divided by half by two so three divided
06:50 - by 2 is 1.5 and then 1.5 divided by 2 is
06:54 - 0.75 so three is a half 1.5 is a quarter
06:59 - and 0.75 is at eighth yeah so if you're
07:03 - in this the order of the list is half
07:04 - quarter and eighth so here we have a
07:07 - form to call half underscore quarter
07:09 - underscore H which is variable called n
07:11 - so first we're gonna do half quarter and
07:15 - eighth variables to calculate the half
07:17 - coordinate of the number it's gonna do n
07:20 - divided by two and divided by four and
07:22 - divide by eight to get the quarter half
07:26 - an eighth yeah so then we're going to
07:27 - create a list by ourselves with an empty
07:30 - bracket then we're gonna append or add
07:34 - all the half quarter and each to the
07:37 - list so remember is that append half so
07:39 - append is a list helper function which
07:42 - will add an item to your list so we're
07:45 - gonna add half quarter and eight to the
07:47 - list so we're gonna complete our numbers
07:49 - list and return our numbers list the one
07:52 - we're checking to receive test cases
07:54 - where there is
07:55 - 14. 14 divided go to seven then three
08:00 - point five and then 1.75
08:05 - okay and then there is six which is
08:08 - three 1.5 and 0.75 and now all the tests
08:12 - are taxed well that was fun and that's
08:16 - it for today thank you for watching
08:18 - Remember to smash that button and
08:20 - subscribe bye bye