With timestamps:

00:00 - hello everyone welcome back to show code
00:02 - today we are going to be doing one final
00:04 - challenge and we have covered all of the
00:06 - Python basics so this will be the last
00:09 - video in this series this challenge will
00:12 - incorporate as much of the basics as
00:14 - possible I will be giving the solution
00:16 - in this video as well so make sure you
00:18 - stick around for that anyway let's get
00:20 - right into it
00:21 - so the challenge is to make her NASA
00:23 - control system it needs to have a login
00:26 - system that uses a text file a main
00:29 - control center with various options a
00:31 - launch option but launches to a planet
00:33 - that the user inputs and Valencia should
00:36 - toss a coin and decide whether the
00:38 - mission was successful or not it needs
00:39 - to write all the successes with the
00:41 - planet name to a text file and the
00:43 - second option on the control center
00:45 - should be to view the success text file
00:48 - and finally the third option should just
00:50 - quit the program okay a little tip here
00:52 - I haven't actually told you how you can
00:54 - quit a program yet and you do this using
00:56 - the quit function okay that's all you
00:59 - need to know start coding now I know
01:00 - I'll give the solution once you are
01:02 - finished so pause the video now ok did
01:07 - you manage to do it if you didn't don't
01:08 - worry I'll go over the solution now ok
01:12 - so the first thing we'll want to do is
01:14 - create this login system so let's define
01:17 - login as a function then we'll want to
01:21 - get some user input so what do you ask
01:23 - user equals input user name and then ask
01:31 - password Oh password equals input
01:37 - password type go go and then we'll do
01:44 - what with open this is a different way
01:48 - to open a file so with open users dot
01:51 - txt
01:53 - I've just got a text file here which has
01:57 - user 1 hello with a comma at the end and
01:59 - use it to hello with the comma at the
02:02 - end make sure you have these commas at
02:03 - the end it will make life a lot easier
02:06 - we could also use the CSV module here I
02:08 - decided not to that you could have done
02:11 - if you wanted and then we'll want to
02:13 - open it in
02:14 - as and then four line in F will want to
02:20 - create fields equals line got split and
02:24 - if you remember this is just this fields
02:28 - is equal to a list of each individual
02:31 - item but as being split by a list so in
02:35 - this text file user one will be F the
02:38 - first item in the fields list second and
02:42 - then what we want to do now is go up
02:45 - here create a new list users equals just
02:48 - the list and then password passwords
02:53 - equals another list and then we'll want
02:56 - to do users dependent fields zero
03:01 - because what's this doing the zero
03:04 - item if that's a word is user one so
03:07 - once it append to user 1 the users list
03:10 - and then once you do passwords that
03:13 - append fields one which will append the
03:17 - password which is hello okay and then
03:20 - now if we just do print users and print
03:29 - passwords and then let's just call the
03:34 - login username hello this isn't master
03:42 - of them you can see we've got a user's
03:44 - list and a password list let's get rid
03:47 - of this now and then let's do for user
03:50 - and users so this is iterating over the
03:53 - users list if asked user which is the
03:57 - user input equals a the user which is
04:01 - just an item in the user list let's
04:07 - let's run the main function and let's
04:11 - also set lesson to be true which will
04:13 - come in handy soon letting people's true
04:24 - and then outside of this if not lesson
04:29 - so if this is false it will ignore this
04:33 - it will move on to if not less in print
04:37 - username / password incorrect and then
04:44 - it'll just go back to the top of the
04:46 - login function again so I'll go over way
04:48 - back up here so now ice make our main
04:52 - function so by name and then let's use a
04:56 - multi-line print so print just some
05:01 - fancy text welcome to the Plaza I got
05:08 - these on one principle like what would
05:09 - you like to do what do you successors
05:13 - and three okay cool and then ask equals
05:20 - imports if asked equals one
05:28 - let's run launch a la ask equals o and
05:36 - I've missed out my double equals there
05:39 - if ask it was two successes la asked
05:48 - equals three print both in now what
05:58 - we're going to do is do time dot sleep
06:01 - and then we'll do is time not sleep one
06:04 - and quit now we're going to import the
06:07 - time module I never actually covered
06:09 - this before I've never done a specific
06:13 - video on it just because there's
06:14 - literally no of ease for it apart from
06:17 - time dot sleep so time not sleep just
06:19 - pause this a program for one second and
06:21 - then we'll do else let's print invalid
06:30 - and then let's just go back to the top
06:32 - of main and now let's do our launch
06:35 - function that's just right past here at
06:42 - the moment but let's do we define
06:45 - successes pass now it's gone to our
06:50 - launch so ask equals inputs what planet
06:54 - would you like to go now let's move on
07:17 - to the toss the coin section so we'll
07:21 - just do find out sleep too as well
07:24 - select two seconds and then chance
07:27 - equals random dot random one or two
07:32 - misses are going to be one or two and
07:35 - then if chance equals one print let's do
07:40 - an app string one did on ask which is
07:46 - their plan if they wanted to go to
07:48 - success
07:50 - Oh will do else print own success Oh
08:01 - abort mission and there is virtually no
08:05 - reason to use that right there so it's
08:09 - got a 50-50 chance of being successful
08:12 - and not being successful in it if it's
08:16 - unsuccessful it's just going to go back
08:17 - to the main function down here but if it
08:19 - is successful we'll run the function
08:22 - right success and then we'll also pass
08:27 - ask now we need to define write success
08:30 - so define write success and with
08:34 - parameter will be planets which is why
08:36 - we've passed in ask right here
08:39 - with open success txt in append mode as
08:47 - F F dot right let's use an app string
08:54 - let's just write planet /n so it goes on
08:59 - to a new line once we've written the
09:01 - planet then underneath ear will do print
09:04 - success recorded time dots sleep or we
09:10 - can just pop it in pieces up there then
09:13 - let's go back to the main function now
09:15 - it's time for to do the successes
09:17 - function so we'll also do with open so
09:24 - processes that's yep ste in arm out in
09:29 - read mode so as F for line and F so this
09:34 - is going to iterate through each line in
09:36 - F let's print line and then we'll sleep
09:42 - one and we'll go back to the main okay I
09:48 - think that's pretty much it guys
09:50 - so yeah I'll just scroll through the Co
09:51 - if you miss any of it
09:59 - okay let's run it now username user one
10:05 - in the password it was hello welcome to
10:08 - Vanessa control desk what would you like
10:09 - to do
10:10 - well that's lunch first what planet
10:12 - would you like to go to let's go to
10:14 - Pluto even though it's not a planet
10:16 - throwing for left off t-minus three two
10:18 - one liftoff and then we'll wait Oh
10:23 - random is not defined why is that the
10:25 - case we forgot to import random because
10:30 - I'm a silly-billy using let's make it a
10:33 - bit bigger username lets you log in with
10:35 - user - this time hello what would you
10:40 - like to do I would like to lunch and
10:41 - hopefully without any bugs this time
10:43 - what planet would you like to go take
10:45 - Bluto again please preparing for liftoff
10:48 - three two one liftoff
10:51 - oh no it was unsuccessful well shame
10:55 - let's just keep on doing it until we do
10:58 - get success read it one no as few
11:02 - successes oh that's because in here it
11:07 - is called success not successes there we
11:11 - go you'll need to have the right these
11:13 - have the right text file we need
11:15 - successes there as well so username use
11:20 - a word but it's and then view successes
11:25 - sleep is not defined we need time doc
11:29 - sleep your success Pluto and we've had
11:32 - one success and now let's try the quit
11:34 - function so free quitting and we'll get
11:38 - this pop up your program is still
11:40 - running do you want to kill it yes we do
11:42 - and there we go that's the final
11:44 - challenge completed and it is also the
11:46 - end of a Python basic series why I am
11:49 - thinking of doing next is in
11:50 - intermediate series where we learn about
11:52 - object-oriented programming
11:54 - object-oriented programming is very
11:56 - useful and is the best way to code in
11:59 - Python so make sure you subscribe that
12:01 - it will be coming soon
12:02 - also make sure you comment any tutorials
12:05 - you would like to see on the channel I
12:06 - am open to your suggestions if you'd
12:08 - like to support me all you have to do is
12:10 - give this video like
12:12 - Chevis series with someone who you think
12:14 - will find it useful and subscribe to the
12:15 - channel because I post Python videos
12:17 - almost every day that's it from me
12:19 - Cheers and goodbye

Cleaned transcript:

hello everyone welcome back to show code today we are going to be doing one final challenge and we have covered all of the Python basics so this will be the last video in this series this challenge will incorporate as much of the basics as possible I will be giving the solution in this video as well so make sure you stick around for that anyway let's get right into it so the challenge is to make her NASA control system it needs to have a login system that uses a text file a main control center with various options a launch option but launches to a planet that the user inputs and Valencia should toss a coin and decide whether the mission was successful or not it needs to write all the successes with the planet name to a text file and the second option on the control center should be to view the success text file and finally the third option should just quit the program okay a little tip here I haven't actually told you how you can quit a program yet and you do this using the quit function okay that's all you need to know start coding now I know I'll give the solution once you are finished so pause the video now ok did you manage to do it if you didn't don't worry I'll go over the solution now ok so the first thing we'll want to do is create this login system so let's define login as a function then we'll want to get some user input so what do you ask user equals input user name and then ask password Oh password equals input password type go go and then we'll do what with open this is a different way to open a file so with open users dot txt I've just got a text file here which has user 1 hello with a comma at the end and use it to hello with the comma at the end make sure you have these commas at the end it will make life a lot easier we could also use the CSV module here I decided not to that you could have done if you wanted and then we'll want to open it in as and then four line in F will want to create fields equals line got split and if you remember this is just this fields is equal to a list of each individual item but as being split by a list so in this text file user one will be F the first item in the fields list second and then what we want to do now is go up here create a new list users equals just the list and then password passwords equals another list and then we'll want to do users dependent fields zero because what's this doing the zero item if that's a word is user one so once it append to user 1 the users list and then once you do passwords that append fields one which will append the password which is hello okay and then now if we just do print users and print passwords and then let's just call the login username hello this isn't master of them you can see we've got a user's list and a password list let's get rid of this now and then let's do for user and users so this is iterating over the users list if asked user which is the user input equals a the user which is just an item in the user list let's let's run the main function and let's also set lesson to be true which will come in handy soon letting people's true and then outside of this if not lesson so if this is false it will ignore this it will move on to if not less in print username / password incorrect and then it'll just go back to the top of the login function again so I'll go over way back up here so now ice make our main function so by name and then let's use a multiline print so print just some fancy text welcome to the Plaza I got these on one principle like what would you like to do what do you successors and three okay cool and then ask equals imports if asked equals one let's run launch a la ask equals o and I've missed out my double equals there if ask it was two successes la asked equals three print both in now what we're going to do is do time dot sleep and then we'll do is time not sleep one and quit now we're going to import the time module I never actually covered this before I've never done a specific video on it just because there's literally no of ease for it apart from time dot sleep so time not sleep just pause this a program for one second and then we'll do else let's print invalid and then let's just go back to the top of main and now let's do our launch function that's just right past here at the moment but let's do we define successes pass now it's gone to our launch so ask equals inputs what planet would you like to go now let's move on to the toss the coin section so we'll just do find out sleep too as well select two seconds and then chance equals random dot random one or two misses are going to be one or two and then if chance equals one print let's do an app string one did on ask which is their plan if they wanted to go to success Oh will do else print own success Oh abort mission and there is virtually no reason to use that right there so it's got a 5050 chance of being successful and not being successful in it if it's unsuccessful it's just going to go back to the main function down here but if it is successful we'll run the function right success and then we'll also pass ask now we need to define write success so define write success and with parameter will be planets which is why we've passed in ask right here with open success txt in append mode as F F dot right let's use an app string let's just write planet /n so it goes on to a new line once we've written the planet then underneath ear will do print success recorded time dots sleep or we can just pop it in pieces up there then let's go back to the main function now it's time for to do the successes function so we'll also do with open so processes that's yep ste in arm out in read mode so as F for line and F so this is going to iterate through each line in F let's print line and then we'll sleep one and we'll go back to the main okay I think that's pretty much it guys so yeah I'll just scroll through the Co if you miss any of it okay let's run it now username user one in the password it was hello welcome to Vanessa control desk what would you like to do well that's lunch first what planet would you like to go to let's go to Pluto even though it's not a planet throwing for left off tminus three two one liftoff and then we'll wait Oh random is not defined why is that the case we forgot to import random because I'm a sillybilly using let's make it a bit bigger username lets you log in with user this time hello what would you like to do I would like to lunch and hopefully without any bugs this time what planet would you like to go take Bluto again please preparing for liftoff three two one liftoff oh no it was unsuccessful well shame let's just keep on doing it until we do get success read it one no as few successes oh that's because in here it is called success not successes there we go you'll need to have the right these have the right text file we need successes there as well so username use a word but it's and then view successes sleep is not defined we need time doc sleep your success Pluto and we've had one success and now let's try the quit function so free quitting and we'll get this pop up your program is still running do you want to kill it yes we do and there we go that's the final challenge completed and it is also the end of a Python basic series why I am thinking of doing next is in intermediate series where we learn about objectoriented programming objectoriented programming is very useful and is the best way to code in Python so make sure you subscribe that it will be coming soon also make sure you comment any tutorials you would like to see on the channel I am open to your suggestions if you'd like to support me all you have to do is give this video like Chevis series with someone who you think will find it useful and subscribe to the channel because I post Python videos almost every day that's it from me Cheers and goodbye
