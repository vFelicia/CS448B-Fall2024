With timestamps:

00:00 - hello everyone welcome back to short
00:01 - code in this video I'll be teaching you
00:03 - what ever handling is and how to
00:05 - implement it into your Python code I've
00:07 - lots of experience in Python and by the
00:09 - end of this video you'll have a clear
00:11 - understanding of what error handling is
00:13 - anyway we have three different key words
00:15 - in error handling we have try accept and
00:18 - finally try let's you testing block of
00:20 - code for errors except lets you handle
00:22 - the error and finally lets you execute
00:24 - code regardless if a result of the try
00:27 - and except walks so I have a new python
00:30 - file open and let's use try and accept
00:32 - so try
00:33 - print X except print there was an error
00:44 - then if we were in it we get there was
00:46 - an error because try is going to try and
00:50 - run this block of code and then if it
00:52 - finds an error l move on to this except
00:55 - so if we get rid of this if we just
00:57 - comment out except
00:58 - comment out try and tug this back we get
01:03 - an error because X isn't defined and
01:05 - then this try could walk here we'll try
01:07 - and run this and if it finds an error
01:09 - LLL pass it on to the accept walk we can
01:13 - have as many accepts as we would like so
01:15 - you could do accepts here print there
01:19 - was a different era and then accept name
01:29 - error so you can combine it with
01:30 - different types of arists if there was a
01:33 - name error there was a name error
01:35 - because printing x versa name error
01:38 - because X isn't exist so I'll throw in
01:40 - what's called a name error and then when
01:43 - it finds an area which is a name error
01:45 - they'll do print there was a name error
01:47 - if you're enjoying the videos so far be
01:49 - sure to drop a like it really does help
01:51 - me out anyway the finally block will run
01:54 - the code regardless of whether there was
01:56 - an error or not so you can do finally
01:59 - print cleaning up
02:08 - that was a name era cleaning up so this
02:11 - would usually be used to like glass
02:13 - stuff up like delete some variables so
02:15 - we don't want get rid of any errors now
02:17 - let's talk about raising exceptions and
02:19 - you confirm an exception if the
02:21 - condition occurs so to raise an
02:23 - exception we use the rate raise keywords
02:26 - so what's 2x equals 10 if X is greater
02:31 - than 5 and we'll do raise exception here
02:38 - only values 5 and a little loud and then
02:48 - we'll get an error here only values 5
02:52 - and below are allowed so I'll just
02:54 - create an era for us and I'll say only
02:56 - values 5 and below are allowed because
02:58 - we've told it to raise an exception here
03:01 - okay that's it forever handling if you
03:03 - have any questions or comments leave
03:05 - them down below I'll be sure to reply if
03:07 - you would like to support me be sure to
03:09 - give this video a like it really does
03:11 - help me out also consider subscribing
03:13 - I'm post Python content almost every day
03:15 - that's it from me
03:16 - Cheers and goodbye

Cleaned transcript:

hello everyone welcome back to short code in this video I'll be teaching you what ever handling is and how to implement it into your Python code I've lots of experience in Python and by the end of this video you'll have a clear understanding of what error handling is anyway we have three different key words in error handling we have try accept and finally try let's you testing block of code for errors except lets you handle the error and finally lets you execute code regardless if a result of the try and except walks so I have a new python file open and let's use try and accept so try print X except print there was an error then if we were in it we get there was an error because try is going to try and run this block of code and then if it finds an error l move on to this except so if we get rid of this if we just comment out except comment out try and tug this back we get an error because X isn't defined and then this try could walk here we'll try and run this and if it finds an error LLL pass it on to the accept walk we can have as many accepts as we would like so you could do accepts here print there was a different era and then accept name error so you can combine it with different types of arists if there was a name error there was a name error because printing x versa name error because X isn't exist so I'll throw in what's called a name error and then when it finds an area which is a name error they'll do print there was a name error if you're enjoying the videos so far be sure to drop a like it really does help me out anyway the finally block will run the code regardless of whether there was an error or not so you can do finally print cleaning up that was a name era cleaning up so this would usually be used to like glass stuff up like delete some variables so we don't want get rid of any errors now let's talk about raising exceptions and you confirm an exception if the condition occurs so to raise an exception we use the rate raise keywords so what's 2x equals 10 if X is greater than 5 and we'll do raise exception here only values 5 and a little loud and then we'll get an error here only values 5 and below are allowed so I'll just create an era for us and I'll say only values 5 and below are allowed because we've told it to raise an exception here okay that's it forever handling if you have any questions or comments leave them down below I'll be sure to reply if you would like to support me be sure to give this video a like it really does help me out also consider subscribing I'm post Python content almost every day that's it from me Cheers and goodbye
