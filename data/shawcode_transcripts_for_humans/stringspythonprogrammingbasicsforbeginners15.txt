With timestamps:

00:00 - hello everyone welcome back to short
00:01 - code in this video I'm going to be
00:03 - teaching you everything you need to know
00:05 - about strings in Python I have lots of
00:07 - experience in Python and once you have
00:09 - followed along with this entire video
00:11 - you will be a master at using strings
00:13 - ok now you should have a basic
00:15 - understanding of strings from the
00:17 - earlier videos we have done now I'm
00:19 - going to be introducing a new concept to
00:21 - you today about strings they are just
00:23 - arrays of characters if you don't know
00:26 - what an array is it is similar to a list
00:28 - or tuple so strings are basically just
00:30 - lists of characters this means you can
00:34 - access items of a string just like how
00:36 - we can access items of a Lester a tuple
00:38 - i've just got a new file open in idle so
00:41 - because strings are just lists of
00:44 - characters we could access them in the
00:47 - exact same way we do with lists so if if
00:51 - we create a string called my string
00:53 - equals hello there then we could just do
01:00 - print my string and then we could do my
01:06 - string to save it and then if we run it
01:09 - we get L that's like the parts not
01:11 - warden eight so now how about we change
01:14 - it to one yeah we get E because this is
01:20 - the index 0 of this list of characters
01:23 - index 1 index to index 3
01:26 - index for index 5 and so on so in let's
01:30 - print the index one of the string which
01:34 - is e we can also do a negative indexing
01:37 - so if we do minus 1
01:40 - we'll get actually let's just change it
01:43 - to minus 2 to get our yep oh girl we get
01:45 - R we can do ranges although with strings
01:48 - it's not actually called ranges it's
01:50 - called slicing so 3 to 6 right so if you
01:55 - run it we get L and we also get a space
01:58 - so what it's doing here this is the
02:02 - third index which includes fourth fear
02:05 - and it gets to the sick but remember
02:09 - ranges or slicing doesn't actually
02:11 - include the last index rate
02:14 - so it never goes on to tea if we change
02:16 - this to seven we get lot with a space in
02:20 - the middle which is there we can also
02:22 - just use a length function of a string
02:24 - so print when my strength 11 because
02:35 - there's 11 characters in this string we
02:38 - can also use the in operator so Fe ll in
02:43 - my string
02:46 - print yep PLL in my string then if we
02:54 - save it run it yellow in my string
02:57 - because it's found the part where it
02:59 - says y ll there if we change this just
03:02 - to like ah our in my string oh sorry
03:07 - Adam changes to our as well our in my
03:10 - string value so strings are literally
03:14 - really similar to lists but they are
03:16 - just less of single characters pretty
03:20 - much everything you can do with a list
03:21 - you can do with a string make sure to
03:24 - give this video a like if you are
03:25 - finding it helpful or interesting it
03:27 - really does help me out also subscribe
03:29 - to my channel I post Python tutorials
03:31 - almost every day and you really don't
03:33 - want to miss out on that so now let's
03:36 - move on to concatenation so as you know
03:41 - we could do my string print my strength
03:46 - plus 1 2 3 I'm Val print hello perl 1 2
03:52 - 3 we could also use commas to
03:55 - concatenate we get the same result the
04:00 - sooner or later this could get messy and
04:03 - it's not that fast it's quite slow
04:06 - actually compared to like other methods
04:09 - so what we could do I don't know QWERTY
04:13 - and then two curly braces dot format
04:21 - and then in here we could put my string
04:25 - and then QWERTY hello there because what
04:30 - it's done is this here is a placeholder
04:32 - and then we're doing dot format and then
04:35 - we're inserting my string into that
04:37 - placeholder we could have multiple
04:40 - placeholders format my string hi Chrissy
04:48 - hello there
04:49 - anteye we can use an infinite amount of
04:52 - placeholders now as you can see if we're
04:55 - going to be using quite a lot of these
04:56 - it will get messy just as messy as
04:59 - before the only advantage to this is
05:01 - it's faster so I'm going to show you a
05:03 - different way that's even better
05:04 - but if we do print F and then type in a
05:10 - string as you can see if the F has
05:12 - turned green QWERTY again then space my
05:18 - string inside of that placeholder we get
05:22 - quest hello there and we don't have to
05:24 - use any of that dot format stuff this F
05:28 - is just a short quick way of doing it
05:30 - and you can insert it right there in
05:32 - that placeholder it looks a lot cleaner
05:35 - and it's just as fast and it's easier to
05:38 - read this is the best way to concatenate
05:40 - strings and format strings as a little
05:43 - side note make sure to comment down
05:44 - below how you usually formatted your
05:46 - strings before you learnt this method I
05:49 - will read all of the comments and reply
05:51 - to as many as I can so now on to
05:53 - something called escape strings they're
05:55 - used to insert illegal characters into a
06:00 - string so what I mean by illegal
06:02 - characters is Python doesn't recognize
06:05 - them and ill cause an error if you just
06:08 - type him in normai so for example print
06:10 - if I wanted to like have a quote in here
06:14 - so we could do she said hello there as
06:20 - you can see it's gone a bit weird it's
06:24 - not gone how we wanted it to it's going
06:26 - to give an error yeah invalid syntax so
06:30 - what we can do is you can do she said
06:34 - backslash speech mark something
06:40 - backslash speech mark speech mark so
06:44 - what this backslash does is it's a way
06:47 - to insert an illegal character if we run
06:50 - it
06:50 - she said something as you can see we're
06:53 - allowed to put in V speech marks now
06:54 - even though we've got speech marks on
06:56 - the ends here we can also use these for
06:59 - new wine so backslash n backslash n she
07:04 - said something which is onion you mind
07:07 - if we just close up these gaps she says
07:11 - something there we go we can also use
07:14 - tabs backslash T hello okay so this
07:21 - backslash T will tab
07:23 - she said tab something tab hello so this
07:29 - is how you use illegal characters in
07:31 - strings and now let's move on to string
07:33 - methods and there are loads and loads
07:36 - and loads of string methods I'm not
07:39 - going to cover them all today because it
07:41 - would turn into like an hour-long video
07:43 - but I'm gonna cover four most important
07:46 - ones let's move on to this strip method
07:48 - so let's just do nice let's just call it
07:54 - my equals a yes dear and then we do x
08:00 - equals my dot strip print X and then as
08:12 - you can see it strips off the F
08:14 - character so now we only have a s and D
08:18 - the lower-left converts a string to
08:22 - complete lowercase so if we went my
08:25 - equals hello there then
08:32 - print print my dot whoaaaa as you can
08:40 - see it's been completely converted to
08:42 - lowercase and now this is really useful
08:44 - when you getting user input and using if
08:47 - statements so I'll just do a quick
08:50 - demonstration so I equals input hello if
09:00 - I equals yes print yes obviously this is
09:07 - absolutely no meaning and it's so
09:09 - pointless there's just a demonstration
09:11 - so if we run it hello
09:13 - type yes it'll give us yes but if we
09:17 - type hello yes we don't get anything so
09:20 - what we can do if I don't
09:22 - woaaa equals yes print yes so we get yes
09:27 - because what it's doing is it's getting
09:29 - I and then saying if lowercase version
09:31 - of I equals yes
09:33 - print yes there upper case method so my
09:37 - my equals yes
09:41 - print my doc opera it just converts it
09:48 - to a capital letter now for a place
09:51 - method so Michaels yes print my dot
09:56 - replace Y J so now we get Jess instead
10:09 - of yes because it's found y with this
10:11 - first argument here and then it's saying
10:13 - replace Y with J and print it out so we
10:18 - get Jess finally the split method so x
10:22 - equals hello there
10:28 - make sure you've got that comma print X
10:33 - dot split and what this does is it
10:42 - returns a list of the split up items
10:46 - first let's look for all the commas in
10:48 - this okay we found a comma let's split
10:51 - it up and then pop those two different
10:54 - strings have just been split up into a
10:57 - list so if we have multiple Commerce
10:59 - hello there yes we get a list hello
11:04 - there yes this is useful when reading
11:07 - from a file and you want to do comma
11:09 - separated values and we'll get onto that
11:12 - later the split method is fun to
11:14 - remember because it'll come in handy
11:16 - later okay there we go
11:18 - well I think you should do now is look
11:20 - up some more string methods online and
11:22 - have a practice with those this was just
11:24 - an overview of what strings actually are
11:26 - and some important methods next video we
11:30 - will be talking about sets which is
11:31 - another collection type if you have any
11:34 - questions errors or comments be sure to
11:36 - leave them down below I'll be sure to
11:38 - reply also give this video a big thumbs
11:41 - up if it was useful or if you enjoyed it
11:44 - doing that it really does help me oh up
11:46 - make sure you subscribe for more Python
11:48 - tutorials that's it from me
11:50 - Cheers and goodbye

Cleaned transcript:

hello everyone welcome back to short code in this video I'm going to be teaching you everything you need to know about strings in Python I have lots of experience in Python and once you have followed along with this entire video you will be a master at using strings ok now you should have a basic understanding of strings from the earlier videos we have done now I'm going to be introducing a new concept to you today about strings they are just arrays of characters if you don't know what an array is it is similar to a list or tuple so strings are basically just lists of characters this means you can access items of a string just like how we can access items of a Lester a tuple i've just got a new file open in idle so because strings are just lists of characters we could access them in the exact same way we do with lists so if if we create a string called my string equals hello there then we could just do print my string and then we could do my string to save it and then if we run it we get L that's like the parts not warden eight so now how about we change it to one yeah we get E because this is the index 0 of this list of characters index 1 index to index 3 index for index 5 and so on so in let's print the index one of the string which is e we can also do a negative indexing so if we do minus 1 we'll get actually let's just change it to minus 2 to get our yep oh girl we get R we can do ranges although with strings it's not actually called ranges it's called slicing so 3 to 6 right so if you run it we get L and we also get a space so what it's doing here this is the third index which includes fourth fear and it gets to the sick but remember ranges or slicing doesn't actually include the last index rate so it never goes on to tea if we change this to seven we get lot with a space in the middle which is there we can also just use a length function of a string so print when my strength 11 because there's 11 characters in this string we can also use the in operator so Fe ll in my string print yep PLL in my string then if we save it run it yellow in my string because it's found the part where it says y ll there if we change this just to like ah our in my string oh sorry Adam changes to our as well our in my string value so strings are literally really similar to lists but they are just less of single characters pretty much everything you can do with a list you can do with a string make sure to give this video a like if you are finding it helpful or interesting it really does help me out also subscribe to my channel I post Python tutorials almost every day and you really don't want to miss out on that so now let's move on to concatenation so as you know we could do my string print my strength plus 1 2 3 I'm Val print hello perl 1 2 3 we could also use commas to concatenate we get the same result the sooner or later this could get messy and it's not that fast it's quite slow actually compared to like other methods so what we could do I don't know QWERTY and then two curly braces dot format and then in here we could put my string and then QWERTY hello there because what it's done is this here is a placeholder and then we're doing dot format and then we're inserting my string into that placeholder we could have multiple placeholders format my string hi Chrissy hello there anteye we can use an infinite amount of placeholders now as you can see if we're going to be using quite a lot of these it will get messy just as messy as before the only advantage to this is it's faster so I'm going to show you a different way that's even better but if we do print F and then type in a string as you can see if the F has turned green QWERTY again then space my string inside of that placeholder we get quest hello there and we don't have to use any of that dot format stuff this F is just a short quick way of doing it and you can insert it right there in that placeholder it looks a lot cleaner and it's just as fast and it's easier to read this is the best way to concatenate strings and format strings as a little side note make sure to comment down below how you usually formatted your strings before you learnt this method I will read all of the comments and reply to as many as I can so now on to something called escape strings they're used to insert illegal characters into a string so what I mean by illegal characters is Python doesn't recognize them and ill cause an error if you just type him in normai so for example print if I wanted to like have a quote in here so we could do she said hello there as you can see it's gone a bit weird it's not gone how we wanted it to it's going to give an error yeah invalid syntax so what we can do is you can do she said backslash speech mark something backslash speech mark speech mark so what this backslash does is it's a way to insert an illegal character if we run it she said something as you can see we're allowed to put in V speech marks now even though we've got speech marks on the ends here we can also use these for new wine so backslash n backslash n she said something which is onion you mind if we just close up these gaps she says something there we go we can also use tabs backslash T hello okay so this backslash T will tab she said tab something tab hello so this is how you use illegal characters in strings and now let's move on to string methods and there are loads and loads and loads of string methods I'm not going to cover them all today because it would turn into like an hourlong video but I'm gonna cover four most important ones let's move on to this strip method so let's just do nice let's just call it my equals a yes dear and then we do x equals my dot strip print X and then as you can see it strips off the F character so now we only have a s and D the lowerleft converts a string to complete lowercase so if we went my equals hello there then print print my dot whoaaaa as you can see it's been completely converted to lowercase and now this is really useful when you getting user input and using if statements so I'll just do a quick demonstration so I equals input hello if I equals yes print yes obviously this is absolutely no meaning and it's so pointless there's just a demonstration so if we run it hello type yes it'll give us yes but if we type hello yes we don't get anything so what we can do if I don't woaaa equals yes print yes so we get yes because what it's doing is it's getting I and then saying if lowercase version of I equals yes print yes there upper case method so my my equals yes print my doc opera it just converts it to a capital letter now for a place method so Michaels yes print my dot replace Y J so now we get Jess instead of yes because it's found y with this first argument here and then it's saying replace Y with J and print it out so we get Jess finally the split method so x equals hello there make sure you've got that comma print X dot split and what this does is it returns a list of the split up items first let's look for all the commas in this okay we found a comma let's split it up and then pop those two different strings have just been split up into a list so if we have multiple Commerce hello there yes we get a list hello there yes this is useful when reading from a file and you want to do comma separated values and we'll get onto that later the split method is fun to remember because it'll come in handy later okay there we go well I think you should do now is look up some more string methods online and have a practice with those this was just an overview of what strings actually are and some important methods next video we will be talking about sets which is another collection type if you have any questions errors or comments be sure to leave them down below I'll be sure to reply also give this video a big thumbs up if it was useful or if you enjoyed it doing that it really does help me oh up make sure you subscribe for more Python tutorials that's it from me Cheers and goodbye
