00:00 - hey guys congratulations on completing
00:02 - cs50s lecture zero
00:04 - this is the first step that you'll
00:05 - presumably take into your journey
00:07 - of programming so let's just jump right
00:10 - into the screen here
00:11 - and the first problem set of this course
00:14 - is
00:14 - we need to make a program on a
00:16 - programming language called scratch all
00:18 - right
00:19 - and this is the program right here so
00:21 - unlike most coding languages
00:23 - it's not based on text but rather on
00:25 - puzzle pieces as we can see here
00:27 - so it's more of a graphic programming
00:28 - language and it's the perfect
00:30 - introduction for us
00:31 - to understand the logic of programming
00:33 - all right
00:34 - so we can see here that we have a cat
00:37 - and any object on scratch
00:38 - is called a sprite so this cat right
00:40 - here is a sprite so
00:42 - in order to do this problem set they
00:44 - give us certain criteria that we have to
00:45 - fulfill
00:46 - this is from cs50 themselves um but
00:49 - let's ignore this for a minute and let's
00:51 - focus on scratch
00:53 - all right so we're supposed to make any
00:54 - sort of game or interactive story or
00:57 - anything that involves some sort of
00:58 - interaction
01:00 - so i've decided that i want to make a
01:02 - game you can make anything at all
01:04 - um i want to make a game all right but i
01:06 - don't want the game to have a cat
01:08 - i want to make some sort of paddle ball
01:09 - game you know the ones that we used to
01:10 - play when we were kids
01:12 - yeah so uh first of all i don't want
01:15 - this cat so let me
01:16 - delete the sprite right here all right
01:19 - so it's a blank screen
01:20 - and so i want to add a sprite and for
01:23 - that i come to the bottom right corner
01:25 - here
01:26 - and it pops up here so choose a sprite
01:29 - so the first thing i want is a ball okay
01:31 - perfect there's a ball right here
01:34 - okay so there's a ball and i also want a
01:37 - paddle
01:37 - right i want to make a battle ball game
01:39 - so choose a sprite again bottom right
01:40 - corner
01:42 - and paddle all right let me just search
01:44 - for a pedal
01:46 - pedal okay perfect so we have a ball and
01:49 - a paddle
01:50 - the two sprites required to make this
01:51 - project
01:53 - but first of all what's the first thing
01:55 - i want
01:56 - i want the ball to move how do i go
01:59 - about doing that
02:00 - so if you look at the left side menu
02:02 - here there's a tab called motion
02:05 - and the first puzzle piece here is
02:06 - something called move 10 steps
02:08 - okay that sounds about right i want the
02:10 - ball to move so let me just try that
02:12 - and to run any program on scratch we
02:14 - click the green flag
02:15 - right so let's hit the green flag
02:19 - and nothing appears to be happening
02:22 - and that's because i didn't tell the
02:24 - program to do this
02:25 - when the green flag is clicked so let me
02:28 - jump on you over here to events
02:31 - and drag this over here when green flag
02:33 - clicked move 10 steps and by the way
02:36 - when you start off with scratch
02:38 - you won't you won't necessarily know
02:39 - that when green flag clicked is under
02:41 - events
02:42 - but eventually as you mess around with
02:44 - the program a bit you're going to get
02:45 - the hang of it
02:46 - so i already knew there was an events
02:48 - but you might have to look around here
02:50 - maybe scroll a bit
02:51 - and find when green flag clicked and now
02:53 - we know it's in events all right
02:55 - so let's run it now click the green flag
02:58 - and the ball does move but i have to
03:01 - keep on clicking the green flag for it
03:03 - to move
03:04 - i don't want this to happen i want to
03:06 - just keep moving automatically by itself
03:09 - and for this if you remember from the
03:11 - lecture we can use something called a
03:12 - loop
03:13 - which basically means do something again
03:15 - and again
03:16 - and in this case i want the ball to move
03:18 - forever i want the ball to keep on
03:19 - moving
03:21 - all right so for that we can use a
03:24 - forever loop which again is an event
03:27 - so i want to use a forever loop and let
03:28 - me just drag it here it'll automatically
03:31 - combine over there all right
03:33 - so now the move 10 steps is within the
03:35 - forever loop
03:36 - okay now let's try to hit the green flag
03:39 - oh so the ball did move quite a bit and
03:42 - it's still moving
03:44 - but when it hits the edge of the screen
03:46 - it just stops
03:47 - and we don't want that to happen what we
03:50 - want
03:50 - is we want the ball to bounce when it
03:53 - hits an edge
03:54 - right so let's look again
03:58 - you scroll try to find something that
03:59 - makes sense
04:01 - and here we see a puzzle piece called if
04:03 - on edge
04:04 - bounce and that sounds about right so
04:06 - let's drag it here
04:08 - under the move 10 steps still within
04:10 - this forever loop
04:12 - and let's play the program
04:15 - and now we can see that it actually
04:17 - bounces but again
04:19 - i want the ball to sort of interact with
04:21 - the paddle and move around here and
04:22 - there
04:23 - so this is not the best way to do it as
04:25 - we can see it's just rolling from side
04:26 - to side
04:27 - so let me stop the program there and how
04:30 - might we go about
04:32 - sort of pointing the ball in a certain
04:34 - direction
04:35 - so we can see here that there's a puzzle
04:37 - piece called point in direction
04:40 - so let me just put it in my forever loop
04:43 - and point in direction and this is 90
04:46 - degrees presumably yes
04:47 - so the ball is currently running on 90
04:49 - degrees because it's going from side to
04:51 - side
04:52 - so rather than 90 why don't we make it a
04:55 - 45
04:57 - and let's see what happens now oh
05:00 - what is happening so the ball is moving
05:05 - but when it's on the edge it's not
05:06 - bouncing and it keeps on trying to go
05:08 - through that one side so we must have
05:10 - made some error in our code and don't
05:12 - worry this is completely normal
05:14 - everyone makes errors all right so
05:17 - how can we fix the error now is the
05:19 - problem
05:20 - so let's start the program and we can
05:23 - see here
05:24 - that we put the point in direction
05:26 - puzzle piece in the forever loop
05:28 - so it's going to forever point in that
05:29 - direction but that's not what we want
05:32 - we wanted to just point in the direction
05:34 - once when when the green flag is clicked
05:37 - so we take out this point in direction
05:38 - from our forever loop
05:40 - and we instead put it above it here and
05:42 - then when a green flag clicked
05:45 - so let's see what happens now okay
05:48 - perfect so we can see that
05:50 - you know there are some puzzle pieces
05:51 - that we don't want to put in the forever
05:53 - loop because there are some things that
05:54 - we don't want to do forever
05:56 - but again as we can look at the game
05:58 - here it's not much of a game
06:00 - the ball is moving right through the
06:01 - pedal right we don't want the ball to
06:03 - move
06:03 - through the pedal we wanted to interact
06:06 - with the pedal
06:07 - so it sounds like we need to do some
06:10 - more programming
06:11 - all right so it sounds like
06:15 - when the ball touches the pedal we want
06:18 - it to move back where we wanted to hit
06:21 - back we want the battle to hit the ball
06:22 - sort of
06:24 - so how do we go about doing that well if
06:27 - you think about it we need a condition
06:29 - right we can say something like if the
06:32 - ball
06:32 - hits the battle then it should move
06:34 - rather than simply go through it
06:37 - so what might we be using here
06:40 - we need to use us an if function right
06:43 - so where can we find an if function
06:46 - well again we won't know this but if you
06:48 - mess around with scratch enough you'll
06:50 - know that it's under controls
06:51 - you're not expected to know this
06:52 - beforehand though i just do
06:55 - so this sounds like the correct puzzle
06:58 - piece
06:58 - if something happens then something
07:00 - should happen
07:02 - all right let's put it in our forever
07:03 - loop
07:05 - if what if the ball is touching the
07:08 - paddle right
07:10 - so this is our condition if something
07:11 - happens then something
07:13 - so if the ball is touching the pedal it
07:16 - sounds like we might need to use the
07:18 - sensing tab here
07:19 - because if it's touching something all
07:21 - right again this is sort of something
07:23 - you think about you mess around scratch
07:24 - and it'll come naturally to you
07:26 - so we can see here under sensing there
07:28 - is a puzzle piece called touching
07:30 - but we don't want it to be touching
07:32 - moist mouse pointer
07:34 - so we click on the arrow oh and there is
07:37 - paddle
07:38 - so touching paddle okay
07:41 - so if the ball is touching the paddle
07:45 - then what we wanted to do we want the
07:47 - ball to turn around
07:49 - and then move the steps again so we
07:51 - wanted to turn around
07:53 - sounds like something we could use in
07:54 - motion and then we wanted to
07:59 - what what can we use here we want it to
08:02 - perhaps
08:04 - turn right we want to turn
08:08 - let's say 180 degrees and hit right back
08:11 - so let's
08:11 - try that green flag clicked oh okay
08:15 - seems like it worked but again this is
08:17 - not a very fun game because there's no
08:19 - way we can move the paddle
08:21 - right so how about now we can switch the
08:25 - code we can switch the sprite that we're
08:27 - writing code for
08:28 - so here we can see that the ball is
08:29 - selected so this is the code for our
08:31 - ball it's a script for the ball
08:34 - and now we click on the paddle here
08:37 - and okay so it's blank again because we
08:39 - have not written any scripts for the
08:40 - battle
08:42 - so for the paddle what do we want we
08:45 - want to be able to move it somehow
08:46 - so it sounds like we're going to need
08:49 - the motion
08:51 - so how do we go about moving this
08:54 - let's look around here how about
08:57 - set x to something all right let's drag
09:01 - it here first
09:02 - set x to minus 30. uh by the way set x
09:06 - is just referring to set the position of
09:09 - the sprite
09:10 - on the x-axis if you remember from math
09:12 - class
09:13 - x is the horizontal axis and y is the
09:16 - vertical axis
09:18 - so set x to something but i don't want
09:21 - to set it to minus 30
09:22 - i want to set it to wherever my mouse is
09:25 - so again
09:26 - it sounds like we need to sense where
09:27 - the mouse is
09:30 - so perfect we see here that there's a
09:32 - pencil piece called
09:33 - mouse x so set to mouse x
09:38 - and let's not make the same mistake as
09:39 - before like we did in ball
09:41 - here we need to put when green flag
09:43 - clicked and if you remember that's an
09:45 - event
09:47 - so when green flag clicked set x to
09:49 - mouse x
09:51 - so let's see what happens here what
09:54 - why is it not moving let's try this
09:57 - again
09:59 - and again it doesn't appear to move and
10:01 - that's because
10:03 - it's only following this instruction
10:05 - once it's only setting its location on
10:07 - the x-axis
10:08 - one time rather than doing it forever
10:11 - it's only when the green flag is clicked
10:13 - that it's following where the mouse is
10:15 - so again we need to use a forever loop
10:18 - here
10:19 - under the control section so let's put
10:22 - that inside there
10:24 - okay so now let's try it out
10:29 - oh wow so now it does work okay
10:33 - that's pretty cool so far but this is
10:35 - not a very fun game
10:37 - uh because first of all if i miss
10:40 - if the ball misses the paddle nothing
10:42 - happens so that's not very fun there
10:44 - should be some sort of way to die or
10:46 - something like that
10:47 - so how do we go about doing that well we
10:51 - don't want it to hit
10:51 - the bottom side right so if it hits
10:53 - somewhere below the pedal we want to say
10:55 - game over or something we want the game
10:57 - to stop basically so for that we can use
10:59 - another sprite
11:01 - and if you remember uh just click here
11:03 - bottom right choose a sprite
11:05 - and let's say we just want a line let's
11:08 - see if there's okay
11:09 - there's a line here put it below the
11:11 - pedal
11:13 - so now what code can we write for the
11:16 - line
11:17 - basically just thinking out loud here we
11:20 - want
11:21 - we want the game to stop basically when
11:24 - the ball
11:25 - hits the red line right so currently
11:27 - nothing happens when the ball hits the
11:28 - red line
11:29 - because we haven't programmed anything
11:30 - for the red line
11:32 - so if we miss the ball and the ball hits
11:34 - the red line we need
11:36 - to we need the game to stop we need to
11:37 - be game over you know
11:40 - so first of all for the line here
11:43 - again let's not mess about first things
11:45 - first when green flag clicked
11:48 - when green flag clicked what do we want
11:50 - to do
11:51 - again let's not make the same mistake as
11:53 - before let's we want
11:54 - whenever the ball hits the red line we
11:57 - want the game to stop
11:58 - so it sounds like we need to forever be
12:00 - checking is the ball hitting the red
12:01 - line
12:02 - no is the ball hitting the red line is
12:04 - the ball hitting we want to keep on
12:05 - asking the computer that
12:07 - so for line it seasons that we need on
12:09 - the forever loop
12:12 - so forever if the ball is hitting the
12:15 - red line
12:15 - we want the game to stop so it sounds
12:18 - like the
12:19 - if condition here sounds about right
12:22 - so forever if the ball is touching the
12:26 - red line
12:27 - the ball is touching the red line sounds
12:28 - like something we can use with sensing
12:32 - so if touching again we can come to the
12:34 - drop down here
12:37 - and if touching the ball right we're
12:40 - writing code for the red line
12:42 - so if the red line is touching the ball
12:46 - then we want the game to stop stop
12:49 - sounds like something that could come
12:50 - under events
12:52 - if i'm not mistaken and turns out it's
12:55 - not it's actually under control
12:56 - right so it's just a game of trial and
12:58 - error here to find the pieces
13:00 - but the logic the conditions stay the
13:02 - same
13:03 - so under control here there's a stop so
13:06 - if
13:06 - the red line is touching the ball then
13:08 - stop all
13:10 - all right so now let's run the program
13:13 - again let's see if it works
13:16 - okay let me miss and it does stop okay
13:19 - that's a good sign
13:21 - let's try to restart the game by
13:22 - clicking the green flag again
13:25 - and again we can see that there is some
13:27 - sort of error here
13:29 - we click the green flag and the ball
13:30 - moves 10 steps
13:32 - but when the bomb moves 10 steps it's
13:34 - still hitting the red line
13:36 - so we wanted to move again and again
13:37 - until it's no more hitting the red line
13:39 - so we need to click the green flag
13:41 - multiple times here and that doesn't
13:42 - seem very fun
13:44 - so instead what we can do is we go back
13:47 - to our ball here
13:49 - how about when green flag clicked
13:52 - the ball moves to a random position
13:54 - doesn't that sound nice
13:55 - so rather than starting over here on the
13:57 - red line it'll start from any random
13:59 - position
14:01 - so go to any random position again
14:03 - sounds like something in motion
14:05 - and right here we have a puzzle piece
14:07 - called go to random position and this is
14:08 - perfect
14:10 - so again try to think over it should
14:12 - this be in the forever loop
14:14 - or should it be outside the forever loop
14:17 - my logic tells me that it should be
14:18 - forever it should be outside the forever
14:20 - loop
14:21 - because i don't want the ball to go to
14:22 - random position forever
14:24 - but only at the start of the game when
14:26 - the green flag is clicked
14:28 - so let's test it out now let us die
14:32 - click the green flag and okay we saw it
14:35 - started from a random position let's try
14:37 - it again hit the green flag
14:39 - okay so there's a there's also a bug
14:42 - here
14:43 - because when we do a random position the
14:45 - random position can also be where the
14:47 - red line is but that's just uh you know
14:48 - that's an edge case
14:50 - so let's try again start from random
14:52 - random random random all right so it
14:53 - seems to be pretty
14:54 - uh going pretty well but again this is
14:58 - first of all a pretty boring game
15:00 - i'd say uh let's try to spice it up a
15:02 - bit
15:03 - so first of all i think making a
15:05 - backdrop would be nice
15:07 - so over here in the bottom right corner
15:09 - we don't add another sprite
15:11 - we want to add a backdrop here choose a
15:13 - backdrop bottom right corner
15:16 - and i want to make it something let's
15:18 - say it seems nice here what i want to
15:20 - make it something related to space
15:22 - space let me search for one here and
15:25 - this background looks pretty
15:26 - nice okay so the game already starting
15:29 - to look a little more fun
15:31 - um but again uh how we could make this
15:34 - game a bit more fun
15:35 - is by keeping track of our score right
15:38 - because right now the ball is just
15:39 - bouncing off the paddle it's going here
15:40 - and there
15:41 - and with the red line it hits the red
15:42 - line it stops but let's try to make a
15:45 - score
15:45 - to keep track of your progress in the
15:47 - game that sounds pretty fun
15:50 - and when we want to store a value we
15:52 - sort in a variable
15:54 - okay so let's the menu here we click
15:56 - variables
15:59 - and let's make a variable so let's make
16:02 - a variable
16:03 - let's call it score for all sprites
16:06 - okay so instantly here we can see on the
16:10 - top left corner there's something called
16:11 - score
16:12 - so let's try to play the game
16:15 - okay the ball hits the pedal but the
16:17 - score isn't updating
16:19 - and that's because we haven't actually
16:21 - done any programming with the score we
16:23 - just put it there
16:25 - so now when do we want the score to
16:27 - increase
16:29 - well we want it to increase every time
16:31 - the ball hits the paddle right
16:33 - so if the ball is touching the paddle
16:35 - increase score by one
16:37 - that's sort of the way you say to the
16:38 - computer right so over here we can see
16:42 - change variable by one okay so we want
16:45 - to change
16:46 - i get the drop down menu here change
16:48 - score
16:49 - by one if the ball is touching the
16:53 - paddle
16:54 - right so 280 degrees and change score by
16:57 - one
16:59 - and also another thing we should do is
17:01 - in the beginning of the game
17:02 - we need to set our score to zero so here
17:05 - we can change
17:06 - set score to zero and again we'll put it
17:09 - here
17:11 - and oh wait so over here you might be
17:13 - thinking
17:14 - why do i need to set the score to zero
17:16 - at the beginning isn't it already zero
17:18 - so okay let's let's listen to the
17:20 - counter argument let's not put the score
17:23 - but here we have change score by one if
17:26 - the ball is touching the battle
17:28 - okay let's do this let's try it out
17:31 - okay and the score is updating so one
17:34 - two every time the ball hits the paddle
17:35 - the score is being updated so this is a
17:38 - pretty fun game
17:40 - but let's see what happens when i die
17:42 - here
17:43 - i know i wanna start a new game i hit
17:46 - the green flag
17:48 - but we see that the score started from
17:51 - five
17:51 - instead of from zero right so that's why
17:54 - in the beginning
17:56 - we need to set the score to zero so
17:59 - again we do events
18:01 - when green flight clicked move to
18:04 - variables here
18:05 - set score to zero so that's why we need
18:07 - to do it uh we've
18:09 - shown the demonstration all right
18:12 - so again the game seems to be working
18:15 - perfectly
18:16 - let's try to die on purpose here hit the
18:19 - green flag again
18:20 - and the score resets to zero all right
18:22 - so the game seems to be working very
18:24 - well
18:25 - um but again it's just missing a little
18:27 - bit of that you know
18:29 - so let's try to add maybe a sound every
18:32 - time the ball hits the paddle
18:33 - that sounds like it could be fun so
18:36 - in the menu luckily here we have sound
18:40 - so okay play sound pop until done
18:43 - that sounds pretty fun so
18:47 - where where might we drag it here here
18:50 - in the ball script we can see that when
18:51 - green fly clicked
18:53 - if the ball is touching the paddle then
18:55 - play sound pop
18:57 - that sounds like it makes sense you know
18:59 - so green flag clicked
19:01 - that's right oh you can hear that sound
19:03 - pop
19:04 - okay so that's pretty fun the game is
19:06 - already looking very nice
19:08 - and when it dies what happens okay so
19:11 - again a sound effect when it dies might
19:12 - be fun as well again this is not needed
19:14 - just it's just to make the game a little
19:15 - more fun a little more interactive
19:18 - so we come over here to click the line
19:20 - and we write a script for the line
19:22 - uh let's say if the ball is touching
19:26 - if the line is touching the ball then
19:28 - let's play
19:30 - sound uh we can record a sound here
19:34 - uh so you can actually record any sound
19:36 - you want with your computer's microphone
19:39 - but i'm not gonna do that right now so
19:40 - let's just say play sound pop
19:43 - all right ideally it'll be a different
19:45 - sound but let's just try it out here
19:49 - pop all right that's pretty fun let's
19:52 - see what happens when we die
19:55 - okay and so this is our game we can see
19:58 - that it's very simple
19:59 - all you have to do is work on the logic
20:01 - step by step
20:03 - and that's it so now let's
20:06 - check our game that we made against
20:08 - cs50s criteria right
20:10 - and this is found on cs50's website i
20:12 - can leave the link in the description
20:14 - below
20:15 - so first criteria is your game must have
20:17 - your project must have at least two
20:19 - sprites at least one of which
20:21 - must resemble something other than a cat
20:23 - so we got our program here
20:25 - okay ball paddle line it seems that we
20:27 - have three sprites and none of them are
20:29 - cats
20:30 - so okay we fulfill this criteria your
20:33 - project must have at least three scripts
20:35 - total okay so remember scripts are like
20:38 - whenever
20:39 - green flight clicked that's one script
20:41 - so here we have a script one
20:43 - two paddle has its own script here
20:46 - three and line has its own script so we
20:48 - have four scripts
20:50 - so okay it fulfills this condition
20:54 - your project must use at least one
20:56 - condition and remember what a condition
20:58 - is
20:59 - it's like if something happens then
21:01 - something
21:02 - so we can see here that we use a
21:03 - condition on the ball if touching paddle
21:05 - then
21:06 - so that's a condition so paddle we don't
21:08 - have a condition
21:09 - and line we do have a condition so if
21:12 - touching ball then stop
21:14 - so we use two conditions here and the
21:17 - criteria is that we have at least
21:19 - one so okay we fulfill that criteria
21:22 - it must use at least one loop so again
21:25 - here
21:26 - the forever that's a loop do something
21:28 - forever
21:30 - and again we have a forever loop here
21:33 - and we have another forever loop here so
21:35 - we have three loops
21:36 - and we need at least one okay so we
21:39 - fulfill that condition
21:41 - let's use at least one variable and
21:44 - again score here is a variable that's
21:45 - where we store our score
21:48 - and finally it needs to use at least one
21:51 - sound
21:51 - and we do have a sound here place on pop
21:53 - until done
21:55 - so it fulfills the criteria your project
21:58 - should be
21:58 - more complex than most of those
22:00 - demonstrated in the lecture
22:02 - so this isn't quite that complex it's a
22:04 - very simple game
22:06 - so maybe we could do something to make
22:08 - it a little more fun a little more
22:09 - interesting and a little more complex so
22:12 - here are some things to consider
22:15 - how might you increase difficulty let's
22:17 - say a program where the ball starts off
22:19 - slow
22:20 - and gets faster the higher your score is
22:23 - so let's say
22:24 - in the beginning the ball moves slowly
22:26 - slowly slowly
22:27 - and let's say when you reach a score of
22:29 - 5 we want the game to get a bit more
22:31 - difficult
22:32 - so the ball becomes faster the ball
22:34 - speed becomes faster
22:36 - how might we do that well i'm not going
22:38 - to tell you the answer because that's
22:39 - for you to figure out
22:41 - but we know we can change the ball speed
22:43 - by changing the number of steps the ball
22:45 - moves
22:45 - so let's say here instead of 10 steps i
22:47 - move it 20 steps
22:49 - you can see the ball is a lot faster
22:51 - okay
22:52 - but we don't want it just like that we
22:54 - want it to be
22:55 - only if like let's say just like a game
22:58 - logic
22:59 - as the game progresses the difficulty
23:01 - should increase as well
23:03 - so how do we make it in such a way where
23:04 - if the score reaches a certain amount
23:07 - then only should the speed become faster
23:10 - maybe we could use something like if
23:12 - score is above 10
23:14 - then move 20 steps forever i don't know
23:16 - something like that
23:18 - i'm not going to tell you how to do it
23:19 - this is something you should figure out
23:21 - and again
23:22 - how would you add lives to the game with
23:25 - the game only stops after you missed
23:27 - three times
23:28 - rather than one so currently here
23:33 - if the ball hits the red line once you
23:35 - immediately
23:36 - die the game stops but what if i wanted
23:39 - to
23:40 - have lives let's say three lives so the
23:42 - game would only stop
23:44 - when i when the ball hits the red line
23:46 - three times
23:47 - how would we go about doing that could
23:50 - we perhaps make another variable called
23:52 - lives
23:53 - so when green flight clicked set lives
23:55 - to three
23:56 - and every time the ball hits the red
23:58 - line decrease lives by one
24:00 - maybe maybe something like that that's
24:02 - something for you to figure out again
24:04 - and what if i wanted to move the paddle
24:06 - with my keyboard
24:07 - rather than a mouse so again how might
24:09 - we go about doing that
24:11 - these are some things that i'm going to
24:12 - leave open to you guys leave it in the
24:14 - comments below if you have an idea on
24:16 - how to do it
24:17 - walk it through logically try to think
24:18 - about each of these scenarios and again
24:20 - you don't have to do this
24:22 - this is just a game that i made like
24:23 - from scratch
24:25 - you can make your own game obviously
24:27 - make it a little more complex than this
24:28 - is a rather simple game
24:30 - and yeah hopefully you enjoyed that
24:32 - video guys thank you so much for
24:34 - watching
24:35 - and as usual bye david