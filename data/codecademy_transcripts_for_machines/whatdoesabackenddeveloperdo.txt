hi my name's doug i am a senior backend software engineer at codecademy in the context of web development you have code that runs either on the client side so the user's web browser or on the server side so the computers at the company that are creating the website and a backend engineer writes all the code that happens on the server side so it does things like looking up data doing calculations all kinds of things basically preparing the information that needs to be sent over to your web browser in order for that to be shown to you in a nice way so one of the nice things but also the downsides of working on the back end is you don't have to worry about making things pretty and showing them to the user but the flip side of that is you don't always get to see your work visually so if you like just solving problems and getting to that like aha moment of figuring out something tricky and logical then that can work is great and especially if you don't care about having to have an artistic eye and and make that look good but if you're looking for more of the i want to be able to make things flash and appear and look pretty on the page and have a really engaging beautiful user experience then you should look more at front end or full stack i think the best way is always to learn by doing and even though back in engineering has maybe a reputation of being tough or complex it definitely doesn't have to be you can just on your own time on your own computer set up a simple website and use a backend framework like ruby on rails it doesn't have to do anything too complicated maybe just create some simple data and save it and look it up but once you have your own first web page up and running then you're basically halfway there if you want to be a successful backend engineer the number one thing is just to be a good problem solver being able to think through a problem uh really break it down understand what's the goal what's the input what does the output need to be understanding algorithms and a little bit of math is very helpful there's really no limit to what you can make a computer do the anything that you can figure out logically and encode it into a set of instructions you can accomplish and we've seen just absolutely how transformational that technology can be and the only limit is really your imagination and your creativity