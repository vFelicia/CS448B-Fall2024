hi this is Pat with code Academy I'm a developer based in Washington DC if you're looking to get a job full time as a developer this is for you in this video we're gonna cover how to form a plan how to learn what technologies to study and what the hiring cycle looks like now while I've interviewed plenty of my developer friends as well as given my own advice here it should be stated that this is the billion dollar question and no one can really answer it in a short YouTube video see everyone's circumstances history and current situation is different all of which influence what your chances are of landing your first job as a developer I want you to succeed but we're not doing anyone any favors by suggesting a onesizefitsall approach that will work for everyone I was selftaught but I've worked with people who studied computer science in college went to boot camps and though these paths are quite different there are some habits of highly successful web developers that we can all learn from first it's helpful to begin with the end in mind there are three things I want you to keep in mind when considering what you should be working on when you want to start interviewing where do you want to work where are your technical skills currently where do you see yourself as a culture fit see companies typically screen for two major things one technical ability and two culture fit I found that even if a company thinks you're a good fit they might not be a good fit for you let's focus on what I mean a web developer can be doing vastly different work at a startup where they get to do all kinds of tasks a midsize company where they will have more defined role and likely not stray from that too much to a large company where they get to focus on a narrow specialty so knowing what type of company that aligns with where you want to work can both increase your chances of getting the job and being happy there knowing where you want to work can also have a super helpful benefit which I'll discuss in just a second but before we leave this point it's important to point out that you're interviewing the company as much as they're interviewing you be sure to ask the kinds of questions that can help you clarify it of the work that you're actually going to be doing there and what's expected of you be sure to take a look at the company values and if you can talk with someone who works there or is familiar with that company be sure this is the kind of place you want to spend your time at it is possible to be a developer at the wrong company for you next and probably most pressing you're mine are your technical skills this is a super tricky one to answer because while I've been a frontend developer all my coding career the tech stack hasn't been the same for any of my companies but depending on what your timeline is for when you want to interview for a job you'll need to start a road map and get all the technical skills that you need there are some Universal technologies you should have under your belt for your first job as a developer command line nearly all web developers tools don't come with a sleek interface with fancy buttons local environments deployments gets even installations are all run using command line it's the ABCs of programming literacy get this is what web developer is used to work on the same codebase the same file even the same line without erasing each other's contribution it's powerful stuff you should be familiar if not worked with application programming interfaces or api's which is how different applications talk to each other basic web programming patterns we've been building the web for a while and we've learned some lessons so we try to apply them in a pattern where we can programming patterns like objectoriented programming or functional programming these two schools of thought of the primary ways that we build applications they're about as different as soccer and football even though they share a lot of similarities if this all sounds like gobbledygook to you don't worry you'll have plenty of time to learn and there are links in the description to a ton of free or cheap resources that will help you get all these under your belt some general advice would be things like being comfortable with a text editor or IDE an integrated development environment knowing the strengths and disadvantages of your chosen language or framework dry coding meaning don't repeat yourself and why that's important to the health of a codebase some are just best practices like linting the programming equivalent of spellcheck for your code formatting code conventions of a language and project structures now there are many different kinds of developers so it's hard to narrow down a good list for everyone but there are some general guidelines knowing what kind of technologies go into your chosen text deck and why they're there what I mean is what advantages do they bring to the application for example you'll likely be asked why you were working with the technologies that you did and it looks better if you can speak to the benefits and limitations of those technologies if you want to know what technologies you want to start learning but not sure where to start let's circle back to that original point a beginning with the end in mind where do you want to work a great way to get a list of things to learn is to go to the job board so companies you'd like to work for they'll likely have job postings and quite literally list out all the skills you'll be expected to know why is this important for context a fullstack developer might be expected to know HTML CSS in a JavaScript library like react angular or view for the front end and some serverside scripting languages like note or Python with a database like or my sequel for the back end however this could vary wildly from company to company so you may end up learning the wrong tech stack depending on where you hope to end up you won't necessarily go wrong by picking some of these languages but you'll make yourself more attractive to the types of companies you hope to work for if you have what they're looking for lastly what does the hiring process look like don't worry if you've been on job interviews it's not soo different but there are some unique characteristics the typical interview will start with a phone screen either with a hiring manager or a person most likely to have you on their team the phone screen is a ballpark for how good of a fit you are for the role next if you pass the phone screen you'll likely be interviewed for a first round depending on how senior of the position you're going for it this could take a couple of hours or all day in some interviews I've met with as few as one person and as many as thirty people all for a single role next most developer jobs involve a text screen sometimes this is a whiteboard exercise where you can have two broad strokes solving a technical problem or you'll be sent a code challenge which can be asked for submission before your inperson interview or after sometimes before you can advance to a subsequent round of interviewing you'll have to pass the tech challenge first the text screen can sometimes even come before the phone screen it's usually designed to be harder than a position you're applying for if you nail it that can be a good sign but often the company wants to see how you solve the problem more than they want the answer companies know that things rarely go according to plan and they want developers who can think their way through problems rather than having all the answers hi this is Pat with code Academy I really hope that this video was helpful for you but did I answer all your questions do you have any more leave a comment or subscribe to this channel because I love responding to learners calm it's also I'll link all the stuff that I mentioned up in the show description here so that you can reference that for the future and if you want to get started in programming come on over to Co Academy and we'll help you get started I promise your friends will be asking you how you did it in no time