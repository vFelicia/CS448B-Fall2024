faster than we think because um i know i i agree because the the recordings always have this awkward 15 minute sec or 15 second seconds but worth checking i'm gonna put myself on mute for a second so i can get the chat popped out all right you're still on mute sophie i gotta i gotta get the um the youtube chat so i'm gonna mute myself for a second you welcome hello everyone uh welcome to another edition of codecademy live uh i'm back with sophie who's gonna be teaching a uh stats course today um we are live right now on a couple of different platforms sophie and i are gonna both be looking primarily at the youtube chat so if you want to uh chat with us you can come over to our youtube channel which is where we'll be hanging out if you're looking at the this in the recorded suck uh recorded um prerecorded on youtube um we are live streaming every tuesday at 4 p.m eastern and so yeah we would love for you to come along you can ask questions uh we're trying to make this as interactive as possible um i see a lot of people in the chat already saying we got someone from boston uh hello from greece again he's like he's all over the place he's uh he's coming to every one of these so we appreciate him um yeah so welcome everyone yes welcome excited for this can you hear me yeah you're very low can you say something else can you hear me now yeah you're very quiet huh let me take my headphones out yeah now that seems good weird i i feel like my computer has like a ghost inside of it or something that just comes out during live streams where i have all the technical issues like live streams when it's least uh least convenient well that's the time that my internet dropped in the middle of a live stream so we're doing better than that yes we are all right well um so i think we can pretty much get started uh i think alex already mentioned this but we are streaming on a couple different platforms we'll keep an eye on the chat on the youtube chat so if you have questions drop them in there um alex will interrupt me if necessary and otherwise i'll also keep one eye on it as well um for context a little bit of context today we are going to start with a new data set um and we're gonna start looking at some summary statistics so last week we went through a little bit of a data cleaning process um this week we're gonna kind of shift gears and we're going to uh and we're gonna go focus on our first piece of our analysis which is kind of looking at one variable in our data set at a time and trying to make some um visualizations and draw some conclusions uh about our data which is very exciting um if one last thing is the sorry it's sorry to cut you off sophie uh one last thing is that if you want to code along i just posted a link to a github account in the chat it's also in the youtube description so that has sophie's starter code and solution code perfect yeah and the the solution code is going to be a little different i think than what's posted right now but i'll make sure to update the solution code after today so that it really represents what we what we covered last time um cool uh so let me share my screen um and i'm gonna share oops i'm gonna share just the uh just the um jupiter notebook this time alex can you see that yep that looks good to me awesome so if you did not attend last time um that our first in our first live stream we went through the process of actually uh opening up a jupiter notebook and um running our first little bit of code i'm gonna skip that this time uh but if you want you can always go back and watch the first live stream to kind of get caught up cool cool um awesome so the so what we're going to do is we're going to look at a slightly different data set this time um i'm going to just run this first block so that we get all of our libraries imported this data set uh i i picked this just because i think it's really fun um so this is it's a data set that we got as part of like a partnership with street easy um which is this it's a website that you can go to to look at apartments um website and app that you can go to to look at apartments in new york city uh and in fact i found my last apartment on stream fun uh and and it's kind of fun so these are all new york city apartments uh we can get a quick sense of the data by looking at the first five rows so there's some things in here that we probably don't care about like a rental id and a building id we're not gonna really make sense of those things um but uh we've got some other things that are interesting we've got rent uh this is in u.s dollars we've got a number of bedrooms bathrooms size and square feet uh minutes the subway the floor that it's on the building age and years a bunch of amenities so these are all like things that the apartment might have where one means that they have that thing and zero means that they don't and then some information about where the apartment is located so we got lots of interesting variables in here um last time we were talking about uh a little where we talked a little bit about how um when we looked through here this is this is all stuff that we did last time so we last time did some replacing and changing a variable so i'm just giving you guys the code for that right now but um remember last time we looked at this output of rentals dot describe and then we did include equals all that just includes all of the variables so we say we want to summarize everything and remember we got this output where we saw that different types of variables or different uh columns were being summarized in different ways so we saw that rental id and building id even though it's nonsensical we're getting like means and standard deviations same with rent bedrooms um and now over here has roof deck is getting we're getting this top half of the the describe the uh the number of unique values the top most frequently that frequent value and the num the frequency of that we're getting these different summaries um alex can you maybe remind everyone how we or which variables uh had each different type of summary and how we kind of figured that out like why as a recap from last time are we getting these different summaries right so last time was pretty much all about data cleaning where looking at the name of our variable we realized like okay this this variable is actually not a continuous number it's a category of one two three four five and you know there's there are lots of like subcategories within that where it could be ordered it could be unordered there's like lots of different ways that things could be a category um but that's this that's this top half right of those are categories so that's something like um i think the the neighborhood is a good example um right of there's like no way to take the mean of what neighborhood you are you're in uh right there's no way to take the mean of the upper west side and lower east side and all these different neighborhoods um so that's a category we can report um the most frequent one we can report the what are the other ones the total number of responses i think that 93 for neighborhood is unique yeah i think so for unique is the number of unique values and then it's the top most frequent one and then the frequency of that top one right so there are 579 apartments from the upper west side and there are 93 total um neighborhoods represented in this data yeah um awesome so right we saw that we got some different summary statistics and today our goal is to really dig into what each of these summary statistics really means and um and try to put them and put the summary statistics in context because right now i'm staring at this table i see a lot of numbers um it's really hard for me to parse and really understand what's going on um the this amount of numbers is better than looking at the entire data set um but i think in order to really understand this we've got to break it down even further yeah and something to even call out here right away is uh that scientific notation there on building id which again building id taking the mean of a bill tonight building id doesn't really make a ton of sense and we probably won't even use that but this might be something that you see elsewhere in data that you're working with and something to keep track of what does this what does this mean sophia 5.12 e plus yeah that's a great point um this is actually something that you're if you are taking content on codecademy it's something that um we you know we try to avoid to avoid confusion but then i think that when people get working with their own data sets it's something that throws a lot of people off um so this is scientific notation this e plus 0 7 means multiplied by 10 to the seventh essentially what that means in terms of this number is that it's not actually five point one two two it's five point one two two times ten to the seventh that's like an equal million or something right yeah and multiplying by ten to the 7th is equivalent to moving this decimal place over seven places so um one two three four five six and then another one seven so that would be like another zero then here so this number is like five one two two zero zero seven zero which again makes sense for the building id it's probably like an eight digit id or something so again that number is totally meaningless but i think it's something to notice that like if you're working with your own data you might you might miss that right you might see like okay the mean is like 5.3 great uh but you don't realize that it's 5.3 times e to the negative four which means that you tack four zeros on to the start of it or times or uh e to the oh seven which means there's a lot of zeros at the end so something to something to be aware of is to like keep an eye out for that i'm sure there's ways to customize pandas uh to either not include that or include that and that kind of stuff but there there definitely are ways to do that one of the things that i found um that i discovered is that so there's different settings for different packages so you can set the you can basically set it to not use scientific notation within numpy but then if you use a pandas function or you use like a function from scipy it's going to ignore that so so if you're trying to work with those settings it can get a little frustrating sometimes all of these packages are like calling each other and it's not clear which uh what settings takes precedent yeah um okay so i think we should start with quant a quantitative variable so um again just for a little bit of context today we're going to start we're going to focus just on one variable at a time and by variable i just mean one column of our data set um there are lots of other kinds of statistical analyses that have to do with looking at the relationships between variables so for example like we probably expect that bigger apartments tend to cost more money and we might be curious about those types of relationships between multiple variables but at this moment we're gonna start by looking at one variable at a time um i'm gonna imagine i think that i am because this is kind of true i'm gonna imagine that i am looking for an apartment in new york city and i'm trying to understand what typical apartments look like or what typical apartments go for in terms of rent um and so i'm using this data set to try to understand what a typical apartment in new york city looks like um it's kind of true because eventually i'm going to move back to new york city so this is great yeah i was going to say i see in chat we have a lot of people from cambridge watching and i know that there's a really great uh open data set about um boston housing as well um i think the cambridge person is my mom there we go so uh if you're looking to if you're looking to buy a house sophie's mom uh you just did yeah there you go it's really funny yeah definitely wave rider from cambridge that's my mom for sure um we're we really like waves in this family it's a whole it's a whole thing um okay so quantitative variables uh so i'm gonna pick rent again trying to understand what's the typical rent monthly cost essentially for an apartment in new york city so like we saw in this describe uh output before um for rent we're getting a bunch of summary statistics we have the mean standard deviation minimum we've got some percentiles here and a maximum we're going to kind of gloss over i think these for now but let's start with the mean i'm not going to go into a ton of detail about how to calculate the mean or what the mean is but mean same thing as average it's basically a way of calculating some sort of typical rent um so our goal here is like what's a typical value in this data set um it's calculated by adding up all the values and dividing by the number of values um so there's a couple different ways in python that you can calculate the mean um so one of them is to use the numpy package which we've saved as mp and we can just say rentals.rent and calculate the mean that way we also can do um we can use this dot mean method on this column um and that will give us the same number so again i think within the path on codecademy we teach one or the other um but it's it's true for all of these things there's lots of different ways to do them it's also a good example of something that is easy enough to calculate by hand that if you want to you know practice your coding skills it's fairly easy to uh make a loop or you know it's not fairly easy but it's good practice of making a loop adding up all the numbers dividing by the total it's a statistic that the formula isn't complicated enough that if you're more interested in coding than you are in statistics then that's a good one to be able to like practice your coding skills yeah totally um i think one of the first things that i did when i started learning statistical computing or the one of the first assignments that i ever had in school was basically rewriting all these functions myself and when we get into the uh the like hypothesis testing segment we're gonna actually do a little bit of that we're gonna write our own functions to do some hypothesis testing which i think is a really important thing to do in order to understand how hypothesis tests work so okay so we've got the mean there are a couple different summary statistics i can use to try to understand what a typical price is though so um the mean is not the only one uh if you've taken like a a math class or a basic statistics class you probably have heard of some of these other ones um the median is another really great way of trying to estimate kind of a typical value of a quantitative variable um instead of i'm going to print this out to get the median instead of adding up all the numbers and dividing by the number of numbers you're essentially reordering all the rents so that they're in ascending order and then looking for the middle value so again um i think i can print out like if i print out rentals dot rent um that i think i'll do actually 0 to 10. right so this column is just a bunch of numbers if i was to reorder them and basically just like cross off the lowest one the highest one the next lowest one the next highest one the next lowest one the next highest one um i would find the median and so one thing i'm noticing right off the bat as i'm doing this is that the median rental price is a lot lower than the mean rental price um so almost by like a thousand dollars a month which for those who are not used to us dollars it's kind of a lot um and so that's something that we might want to investigate further why that is it usually means that the data is something that we call skewed um which we'll we'll look at a little bit later and then you even almost start picturing it in your head of like if i'm crossing off both from each side i'm gonna run into the median before i run into the mean and so there's something about like there was more data down at that end uh you know below the mean then uh than there was above it ah so yeah it has to do with how it has to do with outliers actually even more so because or large like super large values because if you think about how you're calculating the mean um you're you're adding up all the numbers and dividing by the number of numbers and if you've got like a couple of apartments that are going for 500 000 or i mean that's crazy but i don't know what the we should see what the maximum value is i think it prints it prints it up here um right so the maximum rent is 20 000 a month so that that rent that really high rental value is pulling this mean up whereas if you're calculating the median let's say you just had three rental prices and the rental prices were like 100 200 and 300 then the median would be 200 and the mean would be 200. but if you had the rental prices 100 200 20 000. the mean is going to get pulled way way way high um but the median is still going to be the middle value which is still 200. so um so it has to do with basically those outliers i saw somebody uh mention on here the trimmed mean so that just essentially means getting rid of some outliers before you calculate the mean and that can definitely help uh that can definitely help prevent the mean from being biased one way by really big outliers see it looks like trim underscore mean it might be the function if you uh if you want to try it rather than mean we can see if it's different um here we'll try rentals trim dot run dot trim yeah this one might not put a scifi function we'll see what happens do you put like .05 or something like that to tell it how much to what's the um yeah yeah it's in the example that i'm seeing like 0.01 but this is also a different it's a scifi function so it might not work perfectly with our um okay so i think there somewhere i can i'll i'll look into it as we as we keep going and get an example cool um okay so we've got two measures of typical rents um i'm gonna give us one more so if you've taken again a stats class um i see somebody actually sent us this code awesome um sorry if you've taken a stats class you probably have seen mean median and mode as kind of the three main measurements of like a typical uh value of a quantitative variable one thing i'll point out is that for something like rent so mode is just the most common value um and for something like rent where you get you have a lot of different values in this data set it might be true that none of the no two apartments have exactly the same rent just because of random like these are just random uh numbers that where there's a lot of different options like something could be two five five zero or two five five two or whatever will probably be unique there's gonna be not a ton of overlap right most of them will be unique so it's possible that something could be the mode just because there's two apartments that happen to have the same rent um so i would be careful about using the mode for quantitative variables but um i think it's worth printing just so that we can see in this case it actually does make sense um in the mean i'm gonna do that in one sec i saw that iowanus posted this uh this code thank you as i always got our back you've got our back yeah so let's let's try it um so yeah it's uh it's from scipy uh scipy.stats.trimmedmean and then you give it data and then uh value yeah oh wait sorry say that again it's from scipy yeah let me uh i'll drop it in our chat yeah let's see i'm gonna import scipy dot stats and i then it looks like the one that i want to send was just mean is it really scifi we can uh well this is also a good opportunity to show um uh looking at documentation too there's the documentation in the in the chat if you want it let's try it yeah no so it's trim amine trim underscore meme yeah and you might need to uh yeah was that the let us know if that's the one you meant i want us or if you meant something else i don't know get ready get rid of trim equals just just do 0.1 sorry what i get rid of trim equals just try 0.1 that might be they might have changed the parameter name okay yeah so this is a lot smaller so that's a good indication that and it's a lot more similar to the median that's a good indication that there is some large outliers or there are some large outliers that are impacting this um i think this is a good time actually to look at documentation so i'm going to do that really fast let's take a look so again i i just googled pandas trimmed me into to get this and you can see it's coming from the scipy.stats package um yeah and then and then down in those examples you can see uh stats.trim mean and then you give it your data set of x and then this second uh this second uh parameter of 0.01 or 0.1 um i imagine we don't really want to get into what that is actually doing but presumably that's talking about like which outliers to cut off or how many outliers to cut off yeah so it it's telling us oh i guess the reason why it wasn't working is that the parameter was named proportion to cut um and it says that's the fraction to cut off both tails of the distribution which is a fancy way of saying if we put 0.1 it's going to take 10 of the data from the lowest and highest end so um so if we crank that up to like 0.5 which would probably be absurd if like cutting out half of our data we're going to be i don't even know if that will get closer to the median or not i guess it depends on well i think it cuts it off both ends so i don't think we can 0.5 yeah um but if we cut it to like even more um yeah it's going to be even closer and if we do a humor here if we do 0.4999 that's going to like leave basically only the median right it cuts 50 off from one side 50 from the other side yeah brain's gonna close exactly um yeah so i see this question so we're effectively calculating um the median for eighty percent of our data yes and the answer if we if we set this to 0.1 then we're only keeping 80 of our data to calculate that mean um so yeah awesome um cool so this is a great way like i said to get some numerical understanding of typical rents but a much easier way i think to kind of understand all of these numbers in context is to try to look at a histogram oh i forgot to do the mode and i really quickly i think we can actually no um so for the mode i think that will work and it's interesting actually the mode is a little bit similar to uh the summary statistic that we like for categorical variables of like what's the most frequent um what's the most frequent number and so you can see how you were talking about how it's not like the most useful summary statistics for these um quantitative variables because it's like these rent prices there could be there's not going to be a ton of overlap necessarily yeah i think so one of the things that i have seen reported frequently is a mode that's arranged so i think it will help if we print the um the histogram so what i'm going to do is i'm actually going to make a histogram of rhett and then we're gonna talk through what this visualization can tell us um there are a lot of different ways again to make histograms but this is probably one of the easiest actually i'm gonna not use plt.show in here for a second because i know that that is going to print out um some more information to us that might be helpful uh so let's take a look at this picture and see if we can kind of dissect it so you'll see there's there are bars i think by default there are 10 3 4 5 6 7 eight nine ten um and each rectangular bar in here uh is representing the height is representing the frequency of prices in that range so for example this this range or this bar is ranging from let's say like 2 000 it looks like from about like 2 000 to maybe 4 000 or something like that the scale is a little hard to tell um but or actually we can read off exactly what it is um i would assume that that's what this is telling us yeah so i think this is so here these are the points so actually the first bar is running all the way from 1200 1250 to uh 31.25 um and it's it's kind of a little hard to see but it's saying that between these two rental prices so between 1250 and 31.25 there are seven 1779 apartments that are in that range nice the second one is a little bit easier to see where it's going from that 3125 to 5000 and you can see the second bar the right side of the second bar is right at that 5000 tick mark right exactly i just remembered last time i meant to remember to zoom in again yeah yeah it looks good yes uh cool and so each bar right we've just now divided up the rents into these kind of bins they're called um so we've divided it into 10 equally sized bins um and then the heights of each bar represent the number of of apartments in that bin so this really gives us a sense of how frequent different price ranges are for our apartments and just taking a look at this we can already see kind of what we were talking about before how there's going to be a smaller number of really expensive apartments that are kind of drawing that mean upwards from where uh the majority of the data is so you can kind of imagine like we said remember that the median was 3600 so that's somewhere down here and you can kind of imagine if i um i think i can add or let me add a verb collide this um actually you know before i even do that i'm gonna actually increase the number of bins here so by default there were 10 let's increase the number of bins to 20 just so that we can get a little more detailed of a view of this so actually it looks like there's two bars that are almost exactly the same height here interesting and then i'm going to pull this code from the final the final code just because it's a lot to write out but um let's throw the let's just throw the meat or let's throw the median on actually um and i called it i called it something different didn't i called it rent median and we'll label it again um okay so all this is doing is it's going to plot a vertical line on top of this that's located at the median gonna get rid of that okay so here's my median and so it it kind of turns out and i think this is hard to it's almost hard to visualize here just because the bins are so um like the the way that the xaxis gets plotted on on histograms is always a little bit hard to say or hard to see but basically what this is saying is there are as many apartments on this side of that black line as there are on this whole side of the like other side of the black line like in theory the area of this side should be equal to the area of this side i don't think it's quite right just because of how the bins and the xaxis are lining up if we add like this it'll be easier to see and now i need to make it max out at like 300. um yeah so now you can probably see a little more clearly like we're saying that the area over here is equal to the total area over here so if i wonder if we can look at uh can we look at another column just for another example yeah would you like um i love the minutes to subway and i'm trying to even think of what this this might look like whether it's going to be it might just be totally flat right where there's like an equal number of apartments all distances from subways maybe not i don't know i'm gonna have to think about it men too so it seems like most here we'll add some more bends for um also this so there's two main plotting libraries in python there's uh matplotlib and then seaborn which is built i think on top of matplotlib and seaborn i know like if i do snss i think i imported eborn as sns if i do sns.dist plot with kde equals false i'll get the same thing but it will do it will automatically try to decide how many bins to use based on my data whereas matplotlib just always uses 10 no no matter what i pass to it um so just as an aside i think like you should use whatever you feel comfortable with and there's lots of there are lots of different options for doing the same thing but i'm i might start doing this just because it's a little it's a lot easier to kind of see this distribution anyway um okay so we've got most it seems like most apartments are basically zero to ten minutes yeah i guess that makes sense like very very few apartments that are really really far away from a subway and then we seem to randomly have a couple apartments that are like 45 minutes away yeah so that's a good example of like we can maybe consider that uh data worth throwing out of like something is something is clearly weird about that data yeah it's interesting i i mean it would be interesting to go in and look at those apartments like filter try to filter this data set oh i bet it's staten island do you think so probably that's what i would guess right is there i don't know if there are subways over on staten island i don't think so or whatever would a subway station be considered there but uh greater than 40. i think we can do this yeah i think so like print it out um hmm so it looks like we've got a bun a couple in the upper east side more upper east upper west and can we confirm that this is actually can we look at their mints to subway and make sure that they're all over 40. sorry guys um 43 43. so a bunch of 43 which is odd um i would think that that has to be error right there's no way that they're all exactly 43 and the upper west side is like you know the middle of manhattan there's no way that they're 43 minutes away from the upper west side what would you do in a situation like this of like i think that this data is wrong like what's the right thing to do that you think is wrong that's a really hard question so i don't claim to have an answer to that um i think one of the things one of the first steps i would take at least here is i know this uh i know this data set was kind of like created for us in partnership with street easy um and i don't know if like maybe they pulled a bunch of apartments from the same building or something like i would actually first look to see if maybe building id like for some of these if i said like building id was the same for all a bunch of them oh yeah like this one this one this one so i guess the short answer just like dive into the data further to figure out what's going on yeah so i would first look at the data i'd try to see if there was any sort of reason why a bunch of them should have the same minutes to subway um i think what's more confusing to me is in this like histogram is that there's a clear bar here at 43 and like nothing on either side of it that i really see um and as you're scrolling through here like these are not all the same building so i don't really know um like it might have to do something with like the data collection um or how this data set was filtered uh and so you'd really this would be again like a situation where you'd have to be a little bit of a sleuth um and and look into it but this is uh somebody asked are they all on the top floor with a broken elevator that's great i mean maybe you can look into it but i think i think this is a really good point um more generally for the importance of doing this kind of analysis this univariate analysis and looking at the looking at these distributions because this is how you catch weird anomalies and then um and then you can go back and kind of be like okay why is this happening is it a data error what other data cleaning steps do i need to do uh and this is really a cyclic or cyclical process so like we are presenting this as if like you're gonna clean your data and then you're gonna do this but this process might lead you to go back and do some additional cleaning steps because you suddenly realize that there's something weird going on um and it's super super important i was also having i like had a conversation with somebody after uh the the last live stream actually i should just say i had a conversation with my dad after the last laughter because my parents are probably one of very few two very few few people who are watching this and uh and he was saying you know like in practice data cleaning a lot of the time gets automated like you're not gonna go necessarily have to go through um and change the data types of everything or change the missing data that you have to um to like something that python can recognize as missing data because you'll probably want to write a script to check for common forms of missing data and like maybe if you work in a company and you understand like common data issues you might write scripts or write functions that can do all that data cleaning in one step but i think like this this piece of it really highlights the importance of not just using the same script on lots of different data sets because it still is really important to get to know your data and understand understand each variable and understand what's going on because otherwise like there's all sorts of weird things that can creep into a data set without your realizing and if you don't do these steps then you might never know about it yeah and it's probably worth pointing out that it's someone's job to do that data cleaning right where like somebody at your company needs to define like okay this this data is gonna be categorical this is this is gonna be um numerical right but it's probably like the the database engineer or whoever is like setting up the database in your in your company but you know somewhere the data is coming in somebody's gonna have to define what it looks like and hopefully once it gets to you as like a data scientist or a data analyst hopefully it's been clean for you a little bit um and you won't have to mess around with it now that stuff too much yeah um okay so one thing so far we've really focused we've really been focused on central location um or in other words mean median and mode trying to understand what a typical value looks like um we we plotted the median on here we could also plot the mean and the um and the mode uh what i was saying to alex before about mode and sometimes mode being reported as a as a range for quantitative variables is that essentially you might look at this histogram um i'm gonna change well uh you might look at this histogram and look which bar is the tallest and then report that range as the mode rather than reporting a single value as the mode um but we can kind of get a sense for this the mean is um or the median is here the mean is going to be a little bit larger than the median and then the mode i think is going to be maybe a little bit lower um yeah and i would say histograms even are sometimes like deceptive in showing the mode because it could be possible that the most frequent number is in some bar that's not the tallest bar right where it's like right if there are if there are 300 you know if every single bar at 2500 is exactly 2500 that's probably going to be the mode even though it's not the tallest bar because in the tallest bar it could be split up among 10 different numbers or something right which is why i think giving a range as the mode for a quantitative variable is really a smarter way to summarize that variable um okay so typical apartment looks like it's somewhere around i'm going to say like 36 37 3700 a month but there's another piece to this visualization which is it doesn't just tell us essentially what the kind of middle value or most common value or um most typical value is it also gives you some information about how spread out values are around that so i mentioned before this being kind of a skewed dis i would call this a skewed distribution which essentially just means that it's it's not symmetrical like it doesn't just go up and come down and there's an equal number of apartments on either side of the mean um in other like in other distributions this might look super super uh symmetrical but but it's not so um and then the other thing we can glean from this is that it seems at least on the right side of this histogram like values are pretty spread out like you can be on the right hand side of this line and you could be anywhere from thirty seven hundred dollars a month all the way up to twenty twenty thousand um and so there's a lot of variation here and if you're summarizing a quantitative variable you probably want to capture that variation somehow because i'm just going to imagine like so i'm talking to alex uh i'm looking for apartments in new york city i've downloaded this data set try to understand what typical apartments in new york city look like i'm like okay alex the median the median rental price is um 3600 dollars a month so that i'm gonna try to get like a an apartment that's about that expensive because i feel like median sounds good to me um or like that sounds like a reasonable price for me to ask from a landlord obviously there's more things that go into that like how many bedrooms i need but we're gonna simplify this and um and then maybe alex is like okay well you can go a little above the median because you know like maybe you can splurge a little bit um and and so i might come back and say well i don't know how much above i could go because i don't know if rental prices are all really close to the media and then there's going to be no buildings that are way higher than that like 4 000 or 500 you don't know if splurging means 10 or a thousand dollars yeah but if rental prices are really spread out um from that middle number then i could you know then it it makes sense for me to try to find something that that is a lot larger or a lot more expensive or a lot less expensive i have a lot more to choose from basically and so not knowing more than just the middle is helpful for me in understanding what these rental prices look like so um there are a bunch of different measures for spread which is really just measuring how wide this distribution is like how far away are we getting from this middle number um and and you can probably guess some of them i mean the simplest the simplest simplest one is to just look at the minimum and the maximum which we did in our um in our describe thing but uh i'll really quickly look at so yeah and again this is a these are statistics that can can be pretty impacted by outliers where if you have an outlier that is huge that's gonna that's gonna be the maximum uh but it's not really gonna tell you anything about the rest of the data or what how the rest of the data is represented um or in the in the case of the subway um right the the max would have been that 43 minutes but we don't really know what that represents right um so we see right it's between 1250 and 20 000. like alex said we've definitely got some outliers here um i think there's a couple of things we can do to try to understand to try to get rid of the outliers right we can we can start kind of doing the same thing that we did for the trimmed mean but we can just like trim off ten the bottom ten percent in the top ten first percent and report those numbers um so like the the cutoff for the bottom 10 is called the 10th percentile the cutoff for the top 10 is the 90th percentile um and so that would give us kind of like a a trim range if you will um we can actually see if we go back up to the describe output it gives us i think the 25th percentile and the 75th percentile so those are the kind of the cutoffs for the middle 50 of the data and that can tell us something so for rent um that's between 2750 and 5200. so basically the middle 50 of apartments are somewhere between 27.50 and 5200 so um so that can give me some understanding of how much variation there is around this this median remember the middle the 50th percentile is the median it's the middle number um so look at that poor minimum for square footage of i think that's 250 uh minimum square feet uh oh yeah oh man i i have never i think the largest apartment i ever lived in was my second apartment in dc we had like 900 square feet in two people and it was super glorious and it will never happen again um there are some other ones like standard deviation i'm looking at the time and starting to realize that once again we've over scoped i always think we're gonna have extra we go on tangents but the tangents are worth it yeah we do um so standard deviation is another one that's a really uh common measurement for uh for the amount of variation around the mean um and i mean we can calculate it it's it's not a super interpretable statistic uh right off the bat but um but we can use it to kind of compare distributions and for distributions that are normal which we'll talk about what that means in a later um in a later live stream this gives us some sense of how far away you have to go from the mean in order to encapsulate like 65 of the data 95 percent of the data you can kind of uh calculate those things super easily so a smaller standard deviation means that the the data is more is closer together yeah we can actually like super super fast because why not um small standard deviation let's like create some data um so there's this function numpy random normal where we can create a data from a normal distribution um actually i'm gonna just really quickly pull up the uh the information about it so the parameters are the center and the standard deviation and then the number of values so let's say we center it at 10 and then we'll do a standard deviation of one and we'll grab a thousand values and then we'll get one with a standard deviation of 10 instead and then let's um plot histograms of them i'm gonna do the large one first because that way we can plot them on top of each other that just the alpha parameter is just going to make it um let's see if this works on the fly yeah nice so yeah so you can see i probably should have added a legend but this is the standard deviation of one and this is the standard deviation of 10. so you can see they're both centered at 10 which is what i said um but you can see that the one with the larger standard deviation is way wider than the one with the super small standard deviation cool okay we've got five minutes left so i am going to jump into categorical variables really fast so that they don't feel left out um i think the main thing to say about categorical variables and summarizing them is that you really shouldn't use the same summary statistics as you use for uh quantitative variables and this can happen a lot of times by accident um it can happen if you don't code your variables correctly so um if you have a categorical variable that's coded as values like one two three four like we saw last time um it can be then if you're using builtin packages or builtin functions um sometimes you'll miss categorical variables especially if you're working with a really large data set um but the other thing is like if you have a categorical variable that's ordered so i think the example we gave last time was something like responses to a question about agreement like strongly disagree disagree neutral agree strongly agree and you've coded those um in your data then it might be tempting let's say like everybody had to in their responses rate their agreement on a scale from one to five so you have those numbers it might be tempting to say okay well we can calculate mean agreement score um but that's really not a good idea because the difference between strongly disagree and disagree might be very different than the difference between disagree and neutral like it might be a large much larger amount of change in agreement between each like each step um and so to treat that as if it's numerical when it's really not is kind of misleading yeah you could even imagine a survey that was like created poorly where the options were like strongly disagree kind of disagree very barely disagree neutral and strongly agree where it's like the gap between all of those is not even right and so um taking the average there is not really fair to some of those uh to some of those responses yeah i'll pull up so i have i had some notes from a different data set that i was looking at and one of the examples was with travel time this so this is a data set of students um and one of the um one of the variables is travel time to school so this is like how far each student has to travel to get to school and so these are the categories they're less than 15 minutes 15 to 30 minutes 30 minutes to an hour or more than an hour and so these are different amounts of time right like 15 so this is a 15 minute window whereas this is like a 30 minute window and then these are like anything more than an hour anything less than 15 minutes um so i guess this is also a 15 minute window so but these are all kind of different sized buckets and so because they're different sized buckets to calculate a mean of these even though they're there is an ordering and we could like in the original data these are coded as one two three four um we still shouldn't calculate the mean of these i think it's more obvious with this kind of thing with an agreement scale people do it a lot because it feels normal but don't do it would you even say i'm sorry i know this is a tangent we have literally two minutes left but would you say that uh like if a survey is made properly and it's like the spaces are even would you still recommend not doing it because folks don't respond to surveys as if every bucket is is of equals how do you know you mean for something like this where the spacing is even between them like it was like zero to fifteen fifteen to thirty thirty if yeah yeah but but even with a survey where it's not like where you can't quantify size where if it is strongly disagree even if it's disagreeing you can't agree quantify size then you have no way of under if you can't if it's agreement and you can't quantify the size of a agreement then you have no way of knowing if they're if they're not equal yeah so you still shouldn't do it yeah yeah i guess that makes sense where it's like strongly disagree might be of smaller size because you like yeah it's actually like a whole area of statistics um like psychometrics and understanding i yeah i mean i know like i know a very rudimentary or i have a very rudimentary understanding of it but um but yeah it's like a whole area of statistics that we will not go into in this live stream but it is interesting um okay we have like two seconds i think the the first thing that i always do if i'm trying to understand a categorical variable is i just print out the frequencies of each category i'm gonna just demo that really quickly um i think the easiest one is the burrow uh variable and i'm just gonna do oops bro value counts gives us the frequencies um so we've got and by default it puts the most frequent one at the top so there are 3 500 apartments in manhattan 1013 in brooklyn 448 in queens we can also get these as proportions if we want um i think normalize equals true we'll calculate proportions there's no missing data in this data set but um if there were missing data like if i really quickly uh like create um some missing data and then oops oh what what am i doing wrong okay well if i were to create some missing data um we would see that it's not getting counted it might be i walk i don't know what lock versus oh oh it's because i did burrow twice um like if i do this and then i do normalize equals true you'll see that these numbers change slightly like .7078 went to 0.7077 um because it's it's not counting that missing data in the um in the denominator so the denominator is now slightly smaller um so just like again these are all just little things to pay attention to and the last thing i'll demonstrate is how to create a power plot um which is super easy um and this looks a lot like a histogram but now because we've got categorical data um it's not like we have an ordered set of values on the xaxis we just have discrete values like manhattan queens and brooklyn um and so this gives us the same the same sort of sense the frequency of each category but now it's not a frequency of a range of values it's just the frequency of a category yeah and speaking to how uh these aren't in like ranges these are just like a single value right it's not a it's not a a bucket of a range it's just no these are all the ones that are manhattan as opposed to a histogram which was like hey this was apartment buildings that cost between a thousand and two thousand right awesome okay i'm gonna leave it there i know we're two minutes early or two minutes over um and at this point i think uh i've we've thrown a lot at you this is like probably a couple of classes of a regular statistics class to really dig into each of these summary statistics and really understand them this is multiple modules um in the master statistics path so if you're really interested in digging into this and you are a pro member i really suggest that you go through some of that uh that content there's actually a bunch of like noncoding content content which is really just focused on looking at histograms and reading them and trying to understand them and also goes through some other plots like box plots that we didn't have time to cover today um but this was really fun for at least one hour of time to kind of swing through all of this stuff so if we unplug what we're doing next week yeah so next week we're going to start looking at relationships between multiple variables so um again like if we're starting let's say our end goal is to try to predict or say what the what a fair price is for an apartment with specific attributes then we want to understand how rental price is related to other things like the number of bedrooms or the square footage or something like that so we want to understand how things are related to each other and that's what next week's class is going to be about and then we're going to move after that into my most favorite part of this whole series which is going to be uh hypothesis testing and inferential statistics which is really when things get fun um cool so tune in next time uh send us questions like if you if you have any followup questions or comments or feedback you can let us know um either my email is sophie codecademy.com um sophie i'll drop it in the chat uh but also like you can comment on the youtube video or um comment comment on the youtube video that'll help more people find it you know we can do the like youtuber thing of like hit the like button hit the subscribe button do all that stuff if you like these videos uh you know let's let's try to get more people watching them too yeah all right have