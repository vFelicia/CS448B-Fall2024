youtube says that we're good they're receiving the data so i'm gonna click youtube tell it to go live and bam so now we are live on youtube for posterity welcome everybody to the community hackathon number two where we test people with building a app using swift ui we have two teams today competing and i'm gonna let them introduce you themselves uh you wanna go ahead and go first sadish hi my name is sadish i am from india and i am representing team newbies and in my team there is another member his name is salil bajaj and we both are part of newbies team and we joined this uh hackathon to build an ius uh application using swift ui uh for both of us this swift ui programming language is new and we have learned a little bit of it from this learning path provided by code academy and excited to share what we have built awesome thank you sadish what about you alex oh yeah so my name is alex on i am from sweden and this is my first time joining the code academy hackathon and i'm very excited to present what we've accomplished in these two weeks that we had to learn swift ui and to build an app okay and we also have two judges for suite ui with us we have the once and only's curriculum developers can you go ahead and introduce yourselves please kalina you go first sure um my name is galena i'm a curriculum developer at good academy i work on the mobile team alongside ben on our ios and swift content and i'm super excited to be here and see where you go i'm ben excited to be here as well a senior curriculum developer at codecademy also working on our mobile stuff got a lot of great stuff on our platform uh swiss content intermediate swift content so if you like content so excited to see what um teams here have made today and hoping that more people will come and check out what content we have awesome well thank you everybody for being here so i'm going to explain the format for anyone that is new to how our community hackathons work the way it works is we had a kickoff two weeks ago where we introduced the judges and we posted the topic of the hackathon this time around was swift ui and we have we give the teams two weeks to either learn the material they need to use for the hackathon and build the app or just go build the app if they already know the material and after two weeks which is today monday they come back and present what they accomplish with during those two weeks and the judges will score them based on four categories those categories are difficulty creativity the design quality and the live demo because they're going to be demoing today what they worked on so without any more preambles let's get right into it who wants to go first which team wants to present first uh i would like to represent first okay alex four is yours feel free to share your screen okay so the first thing i'm gonna do is i'm going to open a powerpoint presentation that i've created on google docs but first i have to share my screen let's hope it worked does it work yes i see your screen okay so so my team name is team shahia and we have built a simple todo list in xcode uh so uh my team is uh it uh composed of uh which is me i'm from sweden uh op which is also known as alex he is from usa and time traveler is from the uk and stepper girl is from mongolia unfortunately she dropped out so let's continue so the procedure how we created the app so first thing we began is yeah we started with brainstorming like we came up with different ideas and we choose the yeah it just happened to be the todo list and so afterwards we started learning swift ui about one or two weeks and after that we we went into since we were sure we were very sure of time we had like one day so we decided to use um a kind of a base app that was already built and what we did was we added new views one view which is called detail view and new features like edit to do and add due date and also did some redesign of the app so so while we were doing that we had different challenges uh as you can see all the to do's or somehow this every time i clicked on the edit button they just stack together like like it is shown in this picture and here is uh how it looks after we fixed it and yeah some of the challenges was learning swift without the mac and that means that i could not program on or i could just read like the content but afterwards i i managed to get hold of a computer and then we had dropouts and we found some base apps that was not updated and and also it was like learning two things at once learning how to use the computer and also learning swift ui so uh so a quick introduction of how the app looks so this is the landing screen so when you enter the app this is what you see and after the loading screen we have the add item screen which is the screen where you add the title of the todo and the description and we also so we have added the feature of a due date and the description and this is how it looks after adding a to do and if you want to edit your todo you can just click on it to do and you'll get into the detail view where you'll see the title the description and the due date and also the button where you can mark it complete or finished uh here's the home screen when there are no tasks and here's how it looks like when you when you're deleting an item so you basically click on edit and and the red button and delete and we are back with no items uh so yeah before i summarize i i want to give you a live preview of how the app works and uh and it looks uh kind of different from the powerpoints let's see where can i find it there you go so as you see um we also changed the background color to yellow because the in order to uh because we thought that uh black text with the yellow background kind of fits the the ui okay so the first feature i want to show is ads okay i don't know why it corrects probably i'm using another language but i'm just gonna demonstrate that it works and also let's choose a due date click save let's scroll down and here is how to do and the editing feature we click on to do we get into the detail view it's right uh yeah changed too and also i want to finish the todo and as you can see all the changes is applied to the todo and now i want to remove the tattoo and it's gone so let's summarize uh so uh what we have learned from uh doing the hackathon is some swift and some swifty i we've created a todo list made some new friends extended on ios app with some new features and yeah changing the color and here is a list of basically the things we did and uh yeah of course so we want to thank code academy for hosting the event and also swiftly thinking for uh because that's where we got our base app and google for making life easier you can basically google anything and github because that's where we store a project so yeah thanks for listening do you have any questions thank you alex yeah so uh i have a couple questions and that way the judges can like write down any notes or start filling out their score cards for the categories uh i wanted to ask you so you live in sweden that means uh english is not your first language right no it's not all right and you're presented in english anyway so whatever yeah great um so the app you decide to make a yellow because it looks better in the in the black text were you trying to make it look like uh postit notes like the sticky notes that you can write to those with was that the idea um well it uh now that you mentioned it kind of looks like todo list and uh i guess it's one one thing that i think makes it fit okay and also you mentioned also you mentioned that you didn't have a mac to program this and then you got one later is that what it was you got a hold of a mac so you could code this yeah basically bought the new macbook air you just you bought the macbook okay you just bought the computer yes i was in need of a laptop anyway and i couldn't choose between windows or mac and now i have a need of mac so i bought it okay yeah great uh i don't have any other questions uh judges if you have any general questions you can ask them now otherwise we'll wait until the end that way it's kind of like a fair ground for both teams uh going through the same process do you have anything in general that you want to ask or add uh we can we can we can hold everything until after unless uh sorry you had something out no uh not right now okay yeah then then we're good to see uh other things and uh thanks for presenting that there i think the this is cool to see extending something that exists already with some of your own tweaks on it if we have time afterwards we'll have to get more into how you're thinking about the edit feature sure if you guys want to see the code i can show you later all right awesome well let's move on to satish and team newbies uh alex you can stop sharing your screen there perfect so swish whenever you're ready okay uh is my screen visible now yep you're good okay so we have built a app which is a stop watch it's a basic application uh stop watch and uh we we have used four tools uh now while learning swift ui one is the x code itself and then there's a simulator which will show the mobile uh how the actual device looks like the app is it's just like a simulator how you can simulate your app on a different models of iphone so that is a simulator that is one tool i used and the other one is i used this profiler this profile to find out uh where something is going wrong uh why the cpu utilization is high and while i was building this app trying to use xcode the simulator my mac got my mac heated up i don't know why but this consumes these apps consumes a lot of battery power of the mac i'm not sure if you guys have faced that issue and the other uh app i used was sf symbols so uh this was like uh because i found out this from the documentation of apple as well this is the symbols which you can use in the code uh to get the buttons like the system name you can view the system name and it will render that so i am going to resume this now my mac is already heated up it's taking a while okay so this is how the app looks like it is a it is having a text button which shows the number of minutes colon the number of seconds this is the right arrow button the blue triangle to start the timer and this is the backward and on to reset the timer so i'm going to uh preview start the preview with of this uh stopwatch okay so when i hit uh click on this start button the timer starts and then when it reaches 59 it will become 0 and then 1 is one will come here in the minutes place and then you can stop the timer you can also reset it so uh this is all this is what i have read this view it it works perfectly when i preview this which is inside the explode however when i run this on a simulator when i run this on a simulator uh the text does not get gets updated i don't know why i was trying to read about this state and binding and i'm not sure how the um binding works maybe because it's swift ui language is new i also uh read about you know saw the different code which is provided by uh the code academy in the learning part and i was trying to figure out how to use the environment object how to use the state variable and the binding um however in the simulator the values do not get refreshed as in when the seconds change uh so i have to look into that maybe practice more or read the documentation and then fix that issue this is all i have thank you all right thank you so much satish thank you for the demo and yeah those questions that you were having a binding on the state like i'm sure that uh i mean i'm sure that you're gonna keep learning this after we're done with the hackathon you're gonna keep uh getting better so i'm sure this app is gonna look great in like with another two weeks so uh now we are going to the q a with the judges and both teams are here to present both uh i'll let you uh run with it galena and ben whatever questions you want to ask either team uh first just want to say that i think those are both very different in terms of like how they're scoped and conceptualized but you know it's it's tough so there's so many new things like both of you are talking about that you had to like figure out through the process so just being able to like set up the environment get running start messing around with things start like adding to and playing around with it exactly like why we try to structure these so i'm really impressed to see like a lot of like the great work happening so i just want to leave with that um and then going back to what i was talking about a little earlier with uh team shuhiya uh so you could you mentioned you had that starting to do app base that you were working on and then we're coming up with the edit feature from it what did you find was challenging when you're trying to implement that edit feature did something not work as intended or was it kind of smooth sailing it was the date uh so uh so one of the features though if i was missing was a due date what to do without the due date is like uh it's like very low probability that or at least for me that i will finish it so i i googled the date uh the date picker and i added it to the to one of the or maybe it's easier if you just share screen see uh could you repeat the question again i i'm very bad at remembering no worries i was just asking what did you find interesting when you're building the edit feature so well the interesting part was how finding out how the app works how it's structured and the guy that built the app he used uh something called uh i don't remember but uh have you guys heard of like oneway data flow like uh redux for example so uh basically he uh okay every time i read that i i think of javascript but the let's in swift it's a constant so basically yeah so every time we kind of we want to do a change to a todo list we cannot change it directly by assigning id and that was a very challenging problem for me at least uh uh i i had to like i had to kind of create a new todo for every small change that i did to it and then remove the old one and replace it with the new one gotcha that makes sense and also how the how we style things that the order is uh important yeah that's a really good takeaway to have for swift ui for those modifiers it kind of sneaks up on you but the order will change the way that things look especially if you're trying to change the theming around yeah and i was talking about the date picker i remember now so uh the something cost uh it was something about the date pick where that caused the entire app to somehow collapse into one to do and that was one of the hardest challenging i think uh i had so we had this space app that worked so we implemented a feature and for some reason we didn't like commit until we made like a lot of changes and so we couldn't really roll back so instead i just copied and like i just took the base app and then rebuilt it from the ground until i found the bug that must have been very time consuming i thought it would yeah i i thought so too but but i found the bug pretty quickly because uh it was only one i could some i i knew which which of these files the problem was uh uh yeah which uh which file the problem was where the problem was on and then i could somehow then i added like components to component until the entire thing collapsed so gadget i think i think it was fun yeah definitely well thanks for getting interested because yeah that gives us a much better sense of like kind of what you're thinking around i'm looking at then i had one more for uh satish and team newbies uh what how did you implement like um the ticking up so like to make it so that the timer worked at all because i know you mentioned that there's some challenges between the simulator and the preview but like how did you make it so that every second the number would change uh yes so when i thought about this uh stopwatch uh that was all always there in the back of mind i was thinking uh how i would do that how should i do that because it's a new programming language i'm learning uh so i was uh it was always there in the back of mind that uh how i should be implementing that but i uh i did not work on that initially i started working on the views uh to first keep the uh initially how i started off i thought i'll uh uh i know what i want on my stopwatch stopwatch i need a text box and then i need a two buttons just like how we have a stopwatch on every iphone so that is how i visualize i want it to be but then slowly slowly when i started uh uh seeing the final project of code history which is there on the uh learning path then i realized that is not how uh views are done and i also watch some of the videos uh provided by apple in the developer uh portal and i also saw there there there is one other project provided by code academy that is address book uh address book uh project so it's kind of a different way of building or you visualize your app but the way you implement it is a bit different however it is quite uh interesting to build uh apps with swift ui there are there are many classes many a lot of functionality provided placement so how i thought of ticking this timer is like i was uh reading through the documentation to find out uh if there is any timer related uh object or a class which is provided by the framework and i did find one video where one of the apple engineer is uh you know a building a a podcast player for the uh for the watch apple watch so there uh a code code was provided which was related to a health kit but that did not fit into the project where i am trying to do a simple one and then so i was i used the documentation and then uh made that logic that i know okay first it has to come to when that even it's it's a simple uh uh published timer wherein you have to check uh if it becomes 59 then you have to increase one minute and then reset the seconds to zero again count i think that makes sense i think using the like timer that then publish is exactly how i would have done that as well and i love how when you're explaining how you're trying to find resources your kind of resourcefulness and looking at everything we have on our platform and then also looking at like the wwdc videos and the documentation because those are all very good sources for trying to find out different ways of writing that so appreciate that answer thank you judges uh we have a chat a question from the chat uh somebody's asking well basically complaining that apple makes you use a mac to code in xcode can you explain why is that a compilation thing like the processor hardware what's what's keeping people from running xcoding windows i guess the real question is why would apple spend resources to let people do it on windows and you know like i think alex is a great example of this saying like well i want to do mac development so i was debating between windows and the mac so i decided to end up getting a mac and that's pretty much exactly what apple wants people to do is say well if you want to do ios development you can go ahead and this is what we allow it to be used on so they really just don't have any interest in letting you do it on other platforms and they can get away with it i guess like theoretically android could try doing the same thing too but you can do all kinds of android development that you want to the kind of other broader answers like windows is a little bit more particular as like an operating system than like some of the unixbased ones so you have to do things a little bit differently if you're not building for it initially and apple just has no interest in investing in it so you're right that it's annoying though it's hard to get into if you don't already have access to a mac okay all right so do you have any other do you have any questions galena um no i i think i'm i think i'm good all right well then i guess we are uh ready for some of the judging and the feedback uh you both have listened to the presentations you've bought got some questions in and heard their logic behind how they built the apps and why they did it that way we've heard both satish and alex say that they've had to look for resources outside and that most of the time not most of the time but often they had to you know go around the internet and research stuff so they definitely put the effort and the time and now would love to hear any feedback or any thoughts you have on this actually freddie i'm so sorry to interrupt you can i jump in with one quick question yeah okay i'm very very curious uh why you guys chose to build the app that you chose so uh satish why a stopwatch and alex why a todo list i wanted to uh build a simple app uh why i chose is because uh it was it's there on my phone i have an iphone and uh i have used a stopwatch so i wanted to build a stopwatch because it's also an ios application okay so i think the first reason why i chose or we didn't really bother we the team voted and we chose the todo list and i thought it was a great idea because i used to do this all the time i used to do east and uh and i thought that it should be pretty easy to create something that you already know how it works and you might have something maybe i might add something that i'm missing from other to do is to do this as well so that's why i i was motivated on doing the todo list all right awesome i mean i think another way of putting it uh you're saying you know it should be easy to do i think um another way of thinking about it is you know you have a time constraint and that there's a lot to do so sometimes uh you're looking for easy things to do not because they're easy but because they're going to be better to it's going to be better to structure them and to get them done in the time that you have so all right so uh back to the judges galena and ben feel free to share any feedback you have with every team each team any thoughts uh maybe how they could take the apps uh next from here they want to keep working on them any recommendations the floor is yours uh great so next steps good things uh i guess i'm uh newbies so figuring out how to like what that simulator bug is is probably a good place to start on that and like for specific resources since you if you don't have the code up on like github or something i would just push it up there so other people might be able to access it and then in our discord channel we have an ios specific thing that i think some people might have found each other at so that might be a good starting point for saying like posting and saying hey can you take a look at this and let us see like what the challenge is i try to take a look so if you get that there i would love to go and take a look for figuring out why it's not working the same way on simulator as it is in the preview so i think that's going to be your first next step i think of a great base to be working from uh in order to kind of like be building that kind of stopwatch app like i think you did a really good job of identifying the right set of features to be starting with like you need to start you need to pause you need to reset that's exactly i think how i started as well and then you can start looking at building out other features from there like you know having multiple different like like timers or counting down instead of off and whatnot once you figure out what that bug looks like that's my that's my newbie feedback i know if i gleam of notes on the shoe yeah that you want to go over um you know i think ben you had a lot of great points uh yep would love to see you take this a step further see if you can implement a feature where the um the minutes are decreasing or the seconds are decreasing would love to also see some design around it it would be cool if you can implement uh just add like a title heading uh something of um aesthetic uh aesthetically pleasing like visualization uh that would be really cool too so yeah we'd love to see where you take this further and then on shuhiya i think starting with a like to do app from like an existing framework and building on it is a great way to kind of like get a understanding about like what is this framework like what can you do in it so i think that's a great place to get started what i'd recommend that you do is kind of like a next step is to take that as a base of inspiration and then try to go off and build something where you aren't starting with a template because you can start figuring out a lot of like what did the template need and what did it not need and start piecing together a lot more of like how that's built together but i love like being able to just say like hey we know this works we're gonna go ahead and get running with this and then figure out how to tweet something is a great place to start on that so i like that you're able to kind of like say like hey we don't have a lot of time how can we start making some tweaks or something to get something accomplished there so that's kind of my recommendation for next steps as i start building out kind of like a simpler version that you own all the like parts of so that you're not using that boilerplate for it uh and then i love some of the work that you're doing around like the editing that you mentioned like i think that you're a really creative solution for figuring out how to adjust and you know they have this whole complex like redux like management thing for storage and like you figured out how to actually make the edits you wanted and purchase those which i think is great and then add that theme as well and mess around with a lot of those dude modifiers yeah and i i thought that um it was a great looking app um i think that the due date is going to be super helpful for anybody uh that's using a todo list application um so i noticed that you had some cool shadow on some of the buttons so a lot of minor intricacies that uh stood out and yeah i mean it's it's awesome that you're also able to um get started on a mac and not only learn xcode and swift and swift ui and everything that comes with the ios system but also a completely new machine so all right well uh thank you for the feedback uh now the moment that we've all been waiting for uh i don't know if you lena ben want to talk to each other uh or slack or something for a minute and try to decide um you know on your scorecards and final thoughts while you do that i'll just uh be following up with alex and satish here i think um you got guys you both said that uh did you have any background in coding before you were doing this hackathon either of you do you have a background have you coded in other programming languages yeah okay uh one at a time so satish what uh what background do you have in programming yeah sorry for that alex uh in java programming okay java um and you alex what do you what kind of programming do you do um so well from the university i also have java programming but from high school i had c sharp programming and then right now i've programmed with html yeah the oh the frontend stack like css javascript react okay good cool so i guess uh swift was sort of uh new new for both of you um and i guess you both had kind of like a basic understanding of programming so you could hit the ground running based on the content of the swift ui coursework that you had access to and how much you had to go outside to look for resources or look for their information to build your app uh what would you say that is the ratio like did you find yourself having to go outside of the program like frequently did you find the content that that was in the culture for sweep ui very useful i want to hear your thoughts on anything that you said that you think that might have been missing or that could be improved well one thing that i'm missing is like usually when i study at code academy i can like read some read something about code and then i can code and then and then like do it all again but on on swift ui it seems like you have you need a mac in order to follow the course or else you just end up reading everything and forgetting about a lot of it that's what happened for me at least so i ended up looking at the different sites like apple and well usually i google i don't really remember all the different sites i've been to one of them had the date picker and uh but the ratio i would say like uh maybe 50 because i also went back to course and looked for for example what the v stack does okay uh so the learning path which was provided to us uh the swift ui learning path uh it is good it is very comprehensive and it has a lot of text one thing i appreciate about uh code academy is uh there are no uh videos everything is text so you so whoever is taking the course uh he he or she has to read has to understand and then try to implement it so that is one good thing i know i i have taken lot of courses uh in coursera however what happens is you tend to i know when you're watching a video uh like a training video uh you cannot sit in front of the computer for a long time you have to take breaks but uh with uh code academy everything is text based and you can also take it on your mobile phone and you can read and you can understand you can try to recollect whatever you read so when you're reading so you also tend to keep in mind some of the terminologies of that programming language which is being used so there's uh it's a good thing uh i went to i chose to go for a lot of other resources outside of code academy because uh we were short of time and i remember last monday when ben said you can jump in and see the final project and get some idea so that is how i started off and then saw different projects how it how the views are developed to make a full single ios application so uh it's good though there are no videos in code academy that's fine but uh it's good and uh the developer documentation wwc dc videos are they are not very lengthy though they uh it just they ex the apple engineers uh now make it a point to explain the concepts very simple and straightforward uh within a half an hour uh window 30 minute video window okay yeah so it sounds like you went for outside resources when you were looking for very specific to answer very specific questions because you probably didn't know what part of the course work in swift ui data and that question was so rather than taking the time to go through the entire course to see where that where that question is you can just go to the internet and go to other resources where you can search for the specific problem that you're having or the specific thing that you're trying to solve so that makes sense okay um yeah judges how are you doing have you arrived at a conclusion we believe we have we're we're doing good okay so without without further ado here uh we have uh the the winner of our ios uh hackathon the code academy hackathon number two is team newbies came down to the wire thank you so talking over at high level i think we like that you kind of picked something that was a little bit challenging that you know we didn't have in any of our materials so trying to figure some of that concept out uh you kind of came up with your own idea of what you wanted to do there you said as galena mentioned the comments there's definitely some more work you can do around design quality and what that looks like so that's kind of like a good growth area as you start exploring more on that um and then also fixing that one uh like simulator bug that you have there uh and then team chuhia we thought you did great work on this so again this came down to a point to the rubric that we had um we think that like the demo that you had was really great for going over kind of like in a lot of detail on the slides like how you conceptualized your work how you're kind of like identifying what you're building there we really like for the design aspect of it how you're tweaking that and trying to add like you know playing around the modifiers making it adds to kind of what your own like take would be like um that you picked some interesting features to work on um but brought down a little bit for creativity mainly because there's a different app that you're kind of starting from and then moving forwards on um which again it's a great thing to do from learning so there's i think across the board like great for diving into new frameworks and was really impressed with a lot of the work that we saw especially this is coming into like not knowing anything about the framework and then taking two weeks to build it together super impressive so really appreciate all the work that everyone did as part of this and uh it was really great to look and see these projects awesome well thank you both um i'm hoping that station alex you got some good feedback from the judges and some areas of growth to focus and keep if you keep developing the swift ui apps um i think uh the only thing left to say is congratulations to the winning team and you know don't be demoralized for the losing team uh like the judges said it was close so you you know it was it was right there i think uh at the end of the day just the point of hackathons is to learn and to push yourself to learn something new so everybody wins in that regard exactly yeah i think that uh well i like that satish win and also because uh sounds very determined or uh like uh i don't really know how but i get a good vibe from uh satish nice maybe you you guys should stay in touch maybe you should stay in touch and participate together in hackathon number three when it comes up maybe you two can come up with a winning team for the next one um okay then i'll send everybody off uh we've been here for a while live so thank you everybody for watching on youtube and if you're going to be watching this into in the future remember that you can check us out at codeacademy.com to learn all the coursework and if you're interested in the next hackathon go to our community page community.codeacademy.com and find the hackathon chapter that's the one where we publish all the hackathons with all the information and we'll see you on the next hackathon thank you everybody for coming bye bye i'm going okay