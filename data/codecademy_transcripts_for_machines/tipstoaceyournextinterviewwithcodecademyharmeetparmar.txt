all right let's hit uh i'm gonna hit the live button youtube says going live all right so we are live now perfect and i'm just checking everything's cool i think so all right well uh welcome to another episode well the first episode of the live stream series where we're going to be talking to recruiters from the code academy team and trying to learn a bit more about the interviewing process uh what it takes what it involves and how to be ready for it without any further ado uh harvey do you mind introducing yourself and giving me a quick background of what you do at code academy definitely so harmeet i am a senior technical senior technical recruiter at codecademy and what i do is recruit specifically for engineering uh right now i'm working on some manager roles i'm also working on some roles for our growth team which is a new team and our payment's a billing team which is also a new team so all fun stuff but yeah that's a little bit about what i do full cycle recruiting here at cook academy all right it's safe to say that you know what you're talking about basically uh just on that quick introduction so i think we're in good hands all right that's good i i hope after six years of doing it i know maybe a few things that'll help out today okay great no i mean that's why people are tuning in and that's what they want to learn so let's jump right into it uh let's get started with uh just a general sort of overview of what the interview process usually looks like for like a junior developer role the kind of uh role that some of the code academy learners might be looking for has their first job when they're trying to break into tech yeah definitely so i think in terms of what you can expect as someone who's new into development and you're doing your first rounds of interviews you'll probably have some type of fun screen with a recruiter like myself and then from there you'll probably do a takehome challenge um or a technical phone screen depending on the company and how they do things but for us you have the option so you could do a technical phone screen or a takehome challenge and then after that depending on the company you might talk to the hiring manager before you do your final interview but otherwise you're doing a final interview and so the final interview might consist of several different components but usually there's like some type of handson component where you're doing some type of coding exercise there is a component probably around debugging there's probably going to be something around like system design and architecture but um that might depend on the company and the role itself too and then you'll probably meet your hiring manager again or your future manager rather and doing this uh round so during all these stages like the phone screen interview with any takehome challenges or any technical interview calls uh do you know if there is like a typical time range like i know that some of you know especially when you're applying for the first time it might feel like a very anxious you know anxiety inducing process that you talk to somebody and then for a week or days or two weeks you don't hear anything back uh is there like a typical uh time range that people can expect like okay this usually takes two weeks this usually takes a week if you haven't heard back by week three you're probably not going to hear back at all is it like a like a time thing or is every company different yeah every that's funny because i just helped out a friend in the same exact situation they're like i haven't heard back from the company but everything was going well like what should i do so really it's very much situational and dependent on like what's going on with the company and the recruiting team but i would say this like usually if you're doing well you should hear back soon from the team unless the team has told you like hey our for instance co academy we were off from the fifth to the ninth right of july and so if the recruiter had has told you like hey our you know there's some things going on with the team we're making a few decisions there might be delay and then there's a delay you know um okay there's some explanation behind it but if there's not an explanation behind it not a good sign but you should hear back within i'd say like a week or so is is like a rough timeline estimate now if it's a takehome challenge sometimes that does take time to grade or get graded and sometimes you need second opinions because sometimes the team wants to give that person the benefit of the doubt and so they have another person grade it um so things like that do take up time but i think a week is safe yeah i know a lot of applicants might feel tempted to reach out to the recruiter or reach out to maybe they network inside the company maybe they got referred by someone or they know somebody already working at the company uh it's a fair game if if sometimes gone by let's say a week and a half is gone but like maybe you interview on a wednesday and the whole week goes the rest of the week goes by the next week goes by after it's a fair game to reach out to the recruiter or reach out to somebody that whoever you your content say hey i was just wondering about this like is there like a like a line of between being too eager or and just just following up yeah for sure that's a good question actually i would say in terms of following up definitely definitely follow up that shows that you care about the position that you're being considered for you care about the opportunity and you just genuinely want to know how you did if you're following up like literally a day after a little too eager okay maybe give it a couple couple days if not like four or five days like a business week at most and then follow up um but totally like i think it i think it's worth following up in fact i advise people hey if you don't hear back from me by end of day x day please do follow up because sometimes recruiters are inundated with a bunch of action items that they have to do and they might forget to get back to you so sometimes if i'm going to be honest that might be the reason behind the delay so okay no yeah that's totally fair i just know that some people feel really anxious like oh i shouldn't do it i shoulda it's a good etiquette it's bad etiquette sure follow up so it tends to be a question that a lot of people have um going back to the process and the stages so first step is the phone screen yeah what is what is the phone screen somebody that has maybe has never heard of the process before i assume in starting from zero what is a phone screening what does it usually entail and what should people expect of it for sure so in terms of phone screen if this is your first time doing a phone screen and you're just kind of new to doing interviews in general i would think of it as like a chance to get to know each other as cheesy as that sounds but it really is it's a chance for you to get to know the recruiter who represents the company as well as you know get to know about the company but also there's a part of it where us the recruiters want to get to know about you and your background so i like to think of it as like a twoway street where there's time for both ends both parties to ask questions um and and so yeah i can dive into like what that typically looks like but at a high level that that's how i would envision the the phone screen there okay so if somebody is there any like big nose that you can you know you can think of right away like for example i know that most people will assume things like okay it has to be a quiet space i have to be able to answer questions like i can't pick up this phone screen if i'm on my bike riding back home or something like i'm in the bus and the phone cuts off it's like hey i'm in the subway it's gonna cut out i'll call you back is there like like a top three of if you're gonna do a phone screen you never want to do these three these things is there like a really clear cut never do this yeah that's it that you'll be doing this time after time you'll get calls where you you find out new like new things that you should never do in an interview like for instance don't ever take your phone screen at the casino because i've had a candidate to do that and there's like slot machines going on in the background oh so the point about noise definitely put yourself in a place where one you know you're there there's not much distraction for you personally going around uh but two not too much distraction for the recruiter or the person on the other end going around because that could um deter their performance in asking questions right so you definitely want to be in like a quiet environment make sure you have good service i know that's not always feasible depending on your carrier but if you can try and be in an area with good cell service that's a huge one and i think too just knowing that there there there is like an agenda from the recruiter and then you have your agenda as well so keeping a healthy balance there because um as much as you want to ask a ton of questions like there is also time for the recruiter to ask you questions as well so sometimes people might forget about the time and they ask a lot of questions and and you get to the end of the call as a recruiter and you're like i haven't really gotten to ask the questions that i want so i don't know if this person is a fit right so um you know just knowing that there's a balance between like the things that you're trying to gain from the this phone screen as well as what the recruiter is trying to gain so i'm assuming and i'm assuming that every company is a little different but a phone screen probably serves like a specific purpose like you said like it's a chance to get to know each other learn more about the candidates so from the perspective of the other person applying for this job is there some like general rule of thumb uh things that they should be preparing for on this uh phone screen like you know i know like all the cheesy questions like why are you interested in this role or like why would you like to work at company x or you know uh tell me uh you know tell me a situation where you do this or what is more proud achievement or something like i know there's like a lot of cheesy questions that go through interviews but um is there anything in particular like that applicants should be prepared for at least have maybe not a script but at least have in the back of the mind a good answer for because these questions are very common yeah yeah i would say like some of those questions that you mentioned are aren't actual questions that i asked for for a few different reasons but i won't dive too much into that i'll directly answer your question so one question that i would definitely like just try and get like some type of confidence in is like being able to talk about an intro about yourself so when i ask someone like hey tell me a little bit about your background especially at a junior level like tell me about your background how you got into software development and like you know all of those details there um being able to talk about that with enough detail but not going too much into the weeds so it's all about basically yeah exactly because you don't want to go into the call about your intro and then about 10 minutes into the call you just finished your intro and there's maybe 20ish minutes left um if i were to break down the call like typically how i break down a call is there's about i want to say four ish four to five minutes on my end talking about the role the company what's going on then about i want to say 15 to 20 minutes of questions from my end and then i leave the rest the time for questions for the candidate every phone screen and recruiter is different um but that's kind of how it's broken down so you definitely want to prepare for like a good intro about yourself as well as think about like as you apply to jobs and you see different job descriptions get a sense for what are some of the things that they're really looking for in this role just from the job description how can you do that well you can read the job description and see like honestly just keep tabs of what's mentioned the most in that role and what are they looking for the most up a lot of the times that will be a good predictor of like what are we looking for in the role so be able to so in the sounds like the job description has like keywords and has a lot of details that will get you so um i know that you mentioned the phone interview and the technical interviews so is there a so the phone interview will you get asked any questions do phone interviews ever go a little technical not at all like the phone interview is just not about that like would you ever look at a candy and ask them maybe to give you some specifics of the project they worked on or something is that something that you might you might be have to be ready to talk about your work or your projects or your portfolio is that something that can happen during the phone interview definitely good point it depending on how junior they are sometimes no because they're you know coming in from a boot camp so they can talk about projects yes but um in general i would say that is something i will ask and most folks will ask it won't be to the detail or we won't want to get the type of detail that a developer would be looking for but we are trying to get a sense of like okay tell me about a project you've worked on and how you may have like what was the problem you were trying to solve how did you go about solving it um what was the end solution right and so through that you kind of walked me through the journey of what you worked on what you built what was the like customer pain point it might have been solving um and the purpose behind it and then like your process about how you completed it in that if you're able to answer that you know that tells me a few things one can the individual break down technical concepts into more like layman's terms because although i am a technical recruiter i'm no developer so a lot of this like i know just through repetition and talking to engineers and developers but a lot of the times i don't know the nittygritty details of what people are talking about so giving some detail but being a little more generalizing with the details that you give helps to kind of paint the story if you will okay um so it sounds like a phone interview during the phone screening you might not have most people might assume that it's about your character and your person and it it really is but they might be at ten percent they might like depending on what you're applying and who you're talking to the type of recruiter you should be able to talk some of your products you can't just assume now this is not that kind of interview i don't even need to worry about this you definitely have to like at least not blank out completely if a recruiter says well i saw that you have this this project in your portfolio can you talk a little bit about it and you don't want to go uh yeah let me pull up github and look at it i don't remember it you you don't want to do that right that's a problem that's a problem if you are having some struggle talking about the work that you've recently done that's not a good thing you want to you want to memorize that like the back of your hand because then when you're going into technical rounds they're going to ask you okay you worked on this project what are some of the tradeoffs that you considered while you were building x right so you're going to have to be really intimate and be able to talk about the different decisions you made and how you think about things and your thought process there so to be at that in the recruiter screen is like the precursor for further conversations you'll have if you do well in the the phone screen with the recruiter and talking about technical interviews um is it fair to ask the phone screen recruiter about the technical interview like at the end of the like maybe there's like a general q a at the end of the phone screen screen there's like a few minutes left say hey you have any questions for me we have a couple of minutes left is it fair to tell to ask the recruiter hey uh if assuming this goes well and i go to the next round of interviews can you walk me through what any interview is going to tell can you tell me a little bit more like is that like asking too much that does that does that come across as cheating a little cheating or is it totally fair to to show interest in in the next round i think it's fair game to be honest you know squeaky will get to greece you never know some companies are very much for it codecademy we do it we give a little prep we do candidate prep calls before every final interview too so i would say ask it's it doesn't hurt to ask um for a majority of companies i would say every every company has different stance stances on this but i think it's okay to ask and they can give you some details about the technical interview um which will help you a lot because otherwise you're shooting in the dark there and you're kind of waiting for what's to come and you have no idea what to prepare for which will probably make you even more anxious about the interview so i think it's okay and do you have any general advice for prepping for technical interviews definitely definitely so one always ask so that way you can get some type of answer from the recruiter on what the prompt might be what type of technical interview there's different types so you just want to be prepared as best as possible once you figure that out i think it's always safe to say like with for instance like a technical phone screen or any type of technical interview um there's going to be opportunities for you to ask clarifying questions or you might need to ask clarifying questions say you're given a prompt and you're not giving much instruction and you have to build uh out some system that's relevant to the the company that you're applying for right at like a very bare bones level you're probably gonna want to know like okay we're building the system who are the users why are they using this you know things like that to get a better sense of like conceptually what you're trying to build so then you can be a little more detailed about how you approach building that so asking clarifying questions is huge uh do not be afraid to ask clarifying questions i've read online a lot that uh sometimes you get in the zone sort of thing like uh somebody will throw a problem on you you kind of like go quiet and just start typing like coding like if it's a coding interview we're talking about uh technical interviews and coding you might have a shared screen or something start coding and you you don't comment on what you're saying you don't do anything just kind of like go at it and then if the other person on the other side goes hey can you explain what you're doing or the rationale behind this so i know that uh that that tends to be a no no right kind of like when you do what then you're going through very of what you're doing say your thoughts out loud share what you're thinking because the other the person on the other side can't read your mind so you need to explain so like if you make a mistake they know what you're going for and like it might save you yeah i feel like i feel like you might have aced some technical interviews yourself because that is spot on advice 100 you you need to get in the habit of thinking out loud exactly how you put it and that's exactly what i tell candidates too like they won't know what you're thinking unless you speak to it out loud so just as you like even if you need a minute like if they stump you with the question you're like okay um i don't know what they're asking me at least tell them like hey i need another minute or two to to get an answer to this or like to think about this and give you an answer is that okay i'm like okay so they know that you're taking some time to think about it so thinking out loud is a huge part of it for sure um is that uh is that your goto advice uh if if you're doing an interview and they ask you to do something that you're not super clear about or something that you just don't know what a is is it like a like a better way out of all the ways you can go about it what's like the better way to say you don't know or i need a minute to think about this how do you express that in terms that don't you know they make you sound competent but but they still give you time to think for sure for sure well it depends on how unaware of the the topic you are um talking about if you completely do not know flat out i think honesty is the best policy and just just own up to it like you know i'm pretty unfamiliar with this topic if i'm going to be honest i've never encountered it if there's any saving grace or if you want to have some type of saving grace in that situation try and relate it back to another concept that you know and see if there's some relationship between that concept and this new concept that you learned and odds are the interviewers are going to be like no it's actually not like that it's like this hopefully that detail that the interviewers gave you gets the wheels churning and you can think about how that new concept is applied in this uh this prompt or this interview so it sounds like a bit of an emotional rap it's sort of like you're doing okay in the interview you hit stump and you want to wrap it into kind of like saying i'm not familiar with this but i am familiar with that or like i i have worked in the past with this other technology or i have you know i have experience with this other framework that is similar but not quite the same maybe you can even ask like do you mind if i solve this in the framework i know or the maybe that different programming language or something like the recruiter might say yeah sure like just just show me the general idea of what you were going for right like it might save you the fact that you can wrap it back into sort of like the positivity of i do know but not quite like i'm capable of learning i can overcome this i can overcome this exactly it shows that you're resilient it shows that you're trying to make connections because a lot about what we don't know is connecting it back to what we do know so that we can become more familiar with things so i definitely think everything you said is is spot on like it shows sometimes some type of resilience instead of i don't know and then that's it and then it's it gets awkward from there yeah so kind of like uh yeah i guess i guess if you're gonna say i don't know you want to follow with with i don't know but i could like you want to show that there is an opportunity for growth right like because i know that a lot of recruiters or a lot of people in tech will always tell you hey we all start from the beginning we don't know everything even senior role people are still googling things don't worry about it it's more about showing that you can learn for sure is that a fair statement that's a fair statement for sure depending on the the level of the role that you're interviewing for i would say most of the time that's a fair statement once you get to like senior and staff that's when you need to yeah you're you're a little you're more expected to know some of the things at that level for sure but um you know you know considering the audience is more junior folks getting into software development or you know their first first or second jobs like there are probably things that you've learned or picked up on the fly at your at your your current workplace or prior on a project so you can also relate back to that instance where you had to pick something up on the fly because you're not expected to know everything um within you know like the first couple years of development i mean throughout your entire career no matter how advanced you get you're not going to know everything so i think that wraps kind of uh back where we're saying about how when you're doing the preppy before the prepping for the interview you want to to have kind of like a story for everything right so like you might want to prep okay i know this and this but i'm a little weak on this like maybe i'm a little weak on data structures i'm a little weak on that and algorithms so this is how i'm gonna like get out of that if if if it goes you know if it takes a wrong turn but you can prep for that too i guess kind of like already mentally thinking of this story that's gonna go definitely i i think it's good to just look at it from like uh what you're good at and what you're not good at try to line that up with like okay what is the interview actually focused on um and then two i think the other thing that's going to help is just um preparing for it as much as possible but also understanding the type of interview like some companies do really really like practical interviews where it's more so reflect flex like the daytoday work that you're going to be doing which codecademy does that um but there are a good amount of companies that do a lot of like heavy data structures and algorithms types interviews super like complex very dry theoretical nobody ever uses except for interviews yeah exactly you know the ace acing your your coding quiz or what what's that like book that's very famous like um that has all those types of questions but anyways yeah there's a subset of companies that that have interviews like that as well so you definitely want to know what you're up against and understand what type of interviews this company does okay last question before i let you go um i wanted to know if you have any sort of like common soft skill questions something that people can prepare for just in general you you apply for a job send your resume your cover letter boom you get a phone interview you're super excited all right my resume worked cover letter is good i'm gonna get into this interview what sort of soft skills questions you should be ready for like is it like you know general stuff like what does it mean to have uh to be able to work in teams like i have teamwork what does that mean right like uh is there any any can you give us some some guidance on what soft skills mean and how you showcase those yeah for sure i think in terms of soft skills and what that means to us we kind of assess it throughout the interview there might be targeted soft skills questions but in general like even oh tell me about a project you've worked on i'm gonna pay attention to how much detail they're giving and how um verbose or not verbose they may be right um but in general i think in in the soft skills questions we're trying to look for is this person a good teammate can they work well with others you know when accidents happen do they point fingers do they treat me with respect right because sometimes you might be on a call and the person is continually talking over you or they might have taken up all the time asking questions and then you have zero time to ask questions and and then you just you kind of don't have any time to assess what you're trying to assess so i think those are kind of the main things that we look for is this is this person um you know a good person to work with in terms of like do they do they gel well within the team environment are they respectful and do they provide enough context in detail without going too much into the weeds now in terms of different how can that translate into a soft skills question i mean honestly like tell me a little bit about yourself is probably the most common question that is ever asked in a recruiting interview whether it's tech or nontech um i feel like a common common one might be uh when they ask you when something went wrong and how you fixed it or how you got over it that seems to be like a very tricky sort of question because it's not so much about what went wrong this one i know how you reacted to it or like how you right like uh if hey tell me one time where something where your team missed a deadline or something went wrong in your project and what you did and if they candice or something like well you know it was somebody's fault they didn't follow blah blah like just i feel like like that's one of those three questions right when they asked you like something that went wrong and they're just trying to see how you reacted to it yup that's definitely a common one as well so you know what was a mistake that a team member might have made that impacted you or what was the mistake that might have impacted the team and how did you go about correcting it usually the question can come in different forms but it's it's a type of question to get a sense of that person's selfreflection as well as like do they blame others versus putting the not the blame but like taking ownership of the mistake uh so that can you go too far into that though is there is that online like if you say well this one's wrong but i took care of it i worked all weekend like there's no work boundaries or anything i worked for like 20 hours straight didn't sleep i worked on this and and i you know i picked up somebody's slack and i did it for the like is there is there a line should somebody be watching for a line where it's like okay there's teamwork and then there's what you did which is you overwork yourself for a week and burn down like is that is that something that people have to watch out for like you don't you don't want to show get too much of a superhero complex yeah yeah you bring up a good point so i think the things to avoid in this is like over contextualizing it to the point where you like you talk too much about the context and then you start talking about how other people's uh messups or mistakes might have been involved in why you're doing extra work per se or like you you give too much context and then you end up spilling the beans on like oh the pm messed up this part of the project right so like keep the context to what's relevant to you know the the setting which is a phone screen between you and a recruiter um so just knowing that knowing the context there like i don't need to know if your pm like was the reason why you're staying up all weekend to do this um but you know if you had to do that then that does show something good i wouldn't i wouldn't hold that against someone if they like made a mistake and took a lot of time to like fix the mistake or provided that kind of like superhero complex as long as they don't put people down while they try and make themselves look good i guess it's just prepping right like you said uh we keep going back to prepping for the interview having that story ready so you don't have to make it up on the fly having the details down right so like if you if you're ready to tell about a time when something went wrong you want to make sure that you like you said that it's relevant that you don't over contextualize it you want to make sure that the way you tell the story like it shines a light on you but it doesn't like shun others right kind of like say well something this we missed this deadline and like you know we we pull as a team i did some extra work to pick up some like you you might like you want to think that the end of the story is you want to think about it ahead so you don't spill the beans in an interview right you you don't need to know it memorize word by word but you need to know where you're going with the story so that it goes your your way i agree that seems to me we're just going back to the same thing and it's like just prep for it like don't don't i mean because how i mean in your experience you said you've been doing this for six years how often would you say that somebody shows up to an interview just doing it on the fly they have the zero prep they just show up and be like this is gonna be a conversation you're just gonna talk about stuff how often do you think that happens not often at all not often at all like usually people prepare for it or all try and give people some type of heads up so that they like know what to prepare for and do it on their own um so you know most of the time people do prepare there have been times where uh people have come into technical interviews did not even look at the prompt and they think they kill it but then it that's also a weird signal if you let the team know like i didn't prepare for this interview like what trying what type of point are you trying to make so it's always good to prepare for the interview 100 i've i've i had a friend that i applied for a lot of junior roles and they're all similar when you're junior applying for junior roles they're more or less similar so they actually lost track of which company they were applying for and when they got called in one of them like why do you want to work for us and like they they totally like miss target the company and like we're talking about somebody else uh so so i think uh prepping is good um all right well thank you for me for all the advice that you give today i think there was a lot of golden nuggets there a lot of good information and uh if you have a few minutes let's do some q a yeah let's do it i'm all right i'm gonna check the chat let's see uh someone was asking uh can you give some suggestion for improving logic building so i'm assuming like in terms of logical answers or logical problems do you have any advice for getting better at those gotcha yeah that's a pretty direct question so feed i'm uh or fed it i might need your help on this so like from a how would that be applied to like um would that be like some type of data structures and algorithms question i would i would assume like a logic based question around data structures and algorithms yeah it sounds to me like it would be the kind of question where maybe you're giving some data and you have to put it in certain way arrange it or you know uh maybe follow steps that will get you there kind of like a sort of like one two three step where you have to logically think about how the pieces go in which order yeah how it all comes together yeah okay so this helps a lot so one thing that i did there right was i wasn't too familiar about where the question was going so i asked a clarifying question so going back to it ask clarifying questions one just so you can get more context into any question that you're being asked to i think it's it sounds very straightforward but you want to think about things at a high level and then start to break them down to the details so it's kind of like an onion you want to get to the core of the question like what is it that they're really trying to ask you and kind of answer that at a more broad general level and then peel back the layers and talk about how your solution or however you're trying to approach the problem um and how you would do it step by step by step so eye level break it down to the details high level break it down to a little fair enough let's see let's keep going um somebody asked could you please share with us the main key to success facing a software developer interview is there like a one key so i'm assuming that there's many but do you think that there's like a common maybe in your experience you see some commonality across junior roles but it tends to be a key component or ingredient that everybody has or tends to have yeah i think the one that stands out the most is think about it this way like you're a junior developer you're new to development but you're also new to being on a team of developers so one of the key things that i think will help you do well in interviews is just thinking out loud being able to talk about your thought process out loud so that your team or your the group of interviewers in the interview know like how you're approaching the problem they can follow your train of thought and just kind of follow your thought process in general and a lot of like when you go on to the other side and you get the job you're going to be doing a lot of that as well because you're going to have to explain your approach and through that you'll learn things from other developers and other developers will be able to understand where they need to help you um so i would say practice thinking out loud um is definitely going to help you in your interviews definitely it's uh i think that's one of the things that they always say go to community and try to involve yourself with other people because that's when you realize oh my code is not so selfexplanatory as i thought people keep asking me questions what is this what is that like i think that's when it kind of like hits you i have to be able to speak about my code i have to be able to explain my thought process because people until i explain it nobody knows right i think that's one of those things where getting involved online with projects and collaborating with others probably usually helps let's see uh another question can you answer are there problems okay so this person is asking about so foreigners working in the u.s problems with recruiting foreigners my english i don't speak english perfectly let's say okay so so i guess this person is asking uh when your language when there's a bit of a language barrier where you know enough english to apply for a job you know enough english to maybe have a conversation but you might not be at the conversational level of english where like we are having a conversation um is that is that something that you need to worry about like i mean if you've made it to the phone screen interview does that automatically mean that that they've decided that you're good enough anyways or can you still uh lose lucid in the phone interview in english it's just not coming across yeah that's a very good question and that that kind of dives into a whole set of like how lenient the recruiter is from my personal experience i try to give as much of the benefit of the doubt when it comes to folks who um you know english isn't their first language right so what benefit of the doubt means to me is really like taking the chance to listen to every single word how they say it um and try to listen to the relevant content so i would say this um if you are not a fluent english speaker don't let that deter you i think by no means you should let that deter you in fact the recruiter is usually going to try even harder to really like meet you and understand where you're at in terms of your communication how you're answering questions and things of that nature so their odds are they're probably gonna um you know give you more benefit of the doubt um because of the circumstances that you are dealt with right so i think that's a huge thing i would say just because you made it to the phone screen though doesn't mean you're you're good you're good to go so if english is your second language everything that you're doing like there's a common language that you and other folks on the the recruiting teams and have and that's the code the things that you write things that you work on the projects like those are the commonalities so if you're able to speak to that pretty well then you should be okay great and i think uh just to add to that um has a has a foreigner that uh i had to learn english well uh one thing that really helped me is you're really excited about the interview and you might have a lot of adrenaline going on slowing down taking a deep breath and this helps this is both not just foreigners this is for native english speakers too slow it down and just a little bit i'm not saying like comically slow but doing a little slower speaking a little slower and just kind of like being mindful of how the words are coming out of your mouth that can help a lot and even if english is not your first language if you're speaking a little slower and the interviewer can follow you what you're saying and you're just kind of like doing a bit of an effort that can also help because i know that sometimes you're just very excited you start talking really fast and you have an accent and maybe and things just kind of like get lost in translation you know like direct like literally so uh i think it's slowing down a little bit just a bit maybe practicing with somebody that that can help just speaking in general like speaker just speakers in general um let's see i think i got this but okay so the person that asked the question said i think i got this just don't be afraid and ask some questions yeah so don't be afraid ask some questions yeah so if you're worried about not just the interview not understanding you but you not understanding the interviewer i think it's fair to to ask to repeat the question and that's just normal i think for sure yeah don't be afraid to ask the interviewer um don't i mean if you're finding trouble finding the right word maybe you can say like i'm trying to just you can even give more context behind what you're trying to describe and maybe the interviewer can help you as well so you know i wouldn't think about it as like a oneway street there like don't be afraid to ask the interviewer questions if you're unfamiliar with something and i think it goes back to what you were saying it's like the interview is trying to be fair with you so just you know uh just as long as you're respectful and you're you're trying your best it's gonna work out exactly okay last question uh what is your estimate on the weight of behavior versus technical interviews during the interview process is that uh is there a balance uh like if you ace if you ace the the phone in the screening does that mean that you have a bit more leeway when it comes to the other side or or the opposite maybe you don't not so good in the soft skills but really strong technical is there like is it like a 60 40 30 70 like is that is there a balance there i wish there was a there was an equation that i could just like send to everyone and they could follow that equation everything would be golden but unfortunately there's not i would say if you want to lean on one side especially as a junior engineer coming in you want to be leaning on the soft skills side more than the technical side like if there's a there's like one preference if i had to give one preference it's the soft skills side that being said um it really just depends i wish there was a straightforward answer for us it's a mix of both you can't be a very talented brilliant engineer who's has all the technical skills but then soft skills you have none of it you're you're abrasive you might come off with the chip on your shoulder your communication is terse like that's not going to fly a codecademy odds are that's not going to fly at most companies there is opportunities for developers who are just really talented but may not like want to be in a team setting and that's fine but i would say nine times out of ten you need to have both skill sets so honestly it's it's about 50 50. if you don't have the relevant technical skills at all depending on the rule that might not work out for you even if your your soft skills are are really really high you got to have some baseline of the technical skills so um so it sounds like you can't bomb either one like you have to perform a certain minimum in either one but as a junior role it's sort of understood that your technical skills are on the lower end that's why you apply for a general rule so the soft skills really have to shine through they need to i think as somebody told me once it was something like they need to know that they can invest in your growth sort of like you need to show that that the technical skills that you don't have today that if they teach you and they get through the process of the next one year to year or two so that you don't you are not you grow from your general rule they need to know that they are doing that for the right reasons like you are the right candidate for them to spend their time in in teaching you basically it's kind of like and i guess that's what shows in the soft skills it shows that you are that person that has the growth potential and a good teammate and somebody that is a solid person that is worth teaching yeah isn't that why like kind of like the reasoning exactly like if for instance like this person doesn't take feedback well that's that's not good because then the the whole time in your career as like a you know first developer role second developer role like the whole time you're there you're going to be given feedback you're that i mean that's how you're going to grow at any level right so like if you're not able to take feedback well that that's not a good sign and how are you supposed to help that person grow odds are it's going to be very difficult so is it is it does it make sense for the company to invest time in this individual if they don't take feedback well all right well i'm sorry i interpret you want to finish thought finish the thought that being said i think if as long as you display that you can work within a team you take feedback well and you have a baseline of the technical skills you should be good to go all right well that was like a good 15minute solid q a and i like that uh well that's the end for today uh i think i've kept you here long enough for me thank you again for sharing your wisdom with all the learners i'm sure that a lot of people are really nervous about job interviews and i'm hoping that they get you know some useful information out of today uh for everybody watching we are going to be doing this every week we're shooting for monday at 3 p.m every week so tune in next week check out our youtube channel codeacademy and see you in the next recruiting video thank you or me see you take care everyone