okay and we are live hello everybody hello Internet hello Academy users we are back again Live on YouTube to bring you more awesome we are here with Tyra and Christine from the curriculum team and they're going to be using their awesome knowledge on Academy docs and sprinkle that with a little bit of October 1st 2023 to bring you new cool ways to make contributions to open projects like Academy docs so hello Cara hey how you doing today all right I'm doing great uh what are you going to be covering today So today we're going to be covering on how to contribute to coacademy docs as a contributor and we're gonna go into like a brief overview about what code camping talks is hacktoberfest and then we're going to continue to the workshop where Christina's gonna share her screen and I'm gonna navigate to what you're gonna do when you try to contribute fantastic well uh the floor is yours so hi everyone how you doing um we're gonna start off with talking about exactly what coacademy docs is so second so kokomi Dax is in online reference for coding Concepts and terms we rely heavily on the community to contribute to our documentation So today we're going to show you exactly how you can do that yourself so but first we're going to talk about like what hacktoberfest really is so it's an annual monthlong celebration hosted by digitalocean during the month of October where contributors can get digital rewards from completing pull requests so um to participate in hacktoberfest individuals need to register on the official hacktober website and they can contribute to a public repository on GitHub once they're registered so the first 50 000 to get their first pull request pulled and merged we'll get a tree planted in their name and then there's other digital rewards available afterwards so you can go on to oktoberfest.com to learn more about it um so why is this a great time to contribute to coacademy docs in particular um well it's always a great time to contribute but since it's October you can get the benefits of Oktoberfest all in one so we have a bunch of um good first issues which is great for firsttime contributors they're the issues are typically meant to be relatively simple or more well defined which makes them a good entry point for individuals who are new to a project or open source development in general so we're gonna go through that process um in a second so we're gonna show you exactly um everything from the contribution guide which is on the cocammy docs website and it's also linked in the description of the um live stream so once you go to the guide you'll be able to see the contribution guide and we always recommend you viewing the guide first before any work we also recommend you having some basic understanding uh get in GitHub we also recommend you um knowing markdown a little bit and also the command line too so we're gonna have like all that in the um description linked out so once you're feel comfortable enough to start contributing then we can next go into what you should do first so I'm gonna give Christine a moment to bring up the GitHub repo so we can show you what it looks like so this is the GitHub repo so first what you're going to do is you're going to try to look for an issue to work on so we do that by going to the issues tab within the issues tab we're going to get a list of issues and we're gonna specifically if this is your first time contributing look for a good first issue it'll be labeled you can also filter by that label by pressing on the label at the top and then putting in good first issue you can also filter by Noah signee you're going to make sure no one's assigned to it so you'll go to assignee press assign to nobody and then scroll do which issues you'll like so when you find one that you come upon that you really like you can just press on the issue in this case we're going to use the hectograph S1 we're going to redo the description make sure everything looks okay we understand what it's asking for if there's something that seems amiss or we just don't understand too well then you can comment within just asking a maintainer say hey I don't understand this can you please explain and I will get back to you once um we see your message if not if everything seems okay and you want to continue on just ask to be assigned we this is like a crucial step we ask everyone to be acts to be assigned because just to ensure no one else is working on an issue too so then once you send that comment then please wait for a maintainer to assign you or assign you and we'll send you a message saying that you're assigned and then once you're assigned you can move on to creating your entry so the first thing we recommend when going to create your entry is just to have your computer set up already so we're gonna go through that process a little bit now so first you're going to Fork the code academy docs repo you do this by going to the main repo page you'll see a fork in the corner you're gonna press on that fork and then once you're forged you're going to get a message saying that the repository is forked then you can go to your profile page and then go to your list of repos and you're going to find that the code company docs repost forked you press on that then within there you're gonna get the URL to your freshly forged repo you go to code you copy that URL and then once you have that copy you're gonna move on to your terminal or command line depending on your operating system you're going to change directories into where you want your local repo to live once you change directories then you can clone the repo using get clone followed by the URL once that's completed then you're going to see that the repo lives on your desktop so now that it is you can change directories into the Repository and you successfully have a clone now so once you change directories we always say to change your branch um never work on your main branches especially like when you're collaborating with others so we want you to change branches in this case we're just going to create a branch called um Oktoberfest yeah and once we create it then we can check out into the Oktoberfest branch and then great we now we have our Oktoberfest branch that now we can work on and make changes to so the first thing we're going to have to do is now we can create our markdown file with the entry in it so in our case we've made our markdown file just for a sake of time and we did it based on the documentation as also linked in the issues so when you're on your issue there's going to be documentation we suggest that you read through the concept entry template the content standards and the markdown style guide to make sure that you're following what exactly we're looking for this saves a lot on the review process time if you you know exactly what you're doing so we recommend that you just go through it make sure you understand and then you can create your entry and then so our entry is based off of all these standards so we can go back to our markdown well first let's take the file path actually sorry the file path is where we're going to want the place our um document so we're gonna take that and we're going to replicate that in our local repo so in our case we're going to be using a visual Studios they get to the file path so we're going to go to General and then we're going to go to Concepts and then within that we're gonna put our hacktoberfest um folder I have to recreate that then we can place our markdown file within the folder okay so we have the file place where we want it now so we can see using our terminal that we've made changes to the branch we created so we need to do that by using get status we can see that the file is ready to add so we can add it using get add followed by the file path which we can copy and paste and then we use get status to see that it's ready for commit so then we can commit using git commit followed by our message which we can call hacktoberfest entry great and then we can do git status again the C that is committed and then afterwards we can just push up our changes now so we're going to get push we're going to set our Upstream to our local repo because that's where we want it to go and then we're going to use put our Branch name and then we're gonna push so once we push we see that our pull request was created there's a message and then so we can go back to our forked repo see that there's a compare and pull request at the top for hacktoberfest we're going to click on compare and pull requests and then our we can see that our entry is here so we can go through make sure everything's okay we can change our title to whatever we want in this case we could just leave it that seems fine we can look at our descriptions see if everything's okay put in a description saying that this is the entry for Oktoberfest then the scroll then we can um delete what's not relevant so in this case we're just gonna delete everything that's not relevant and then we're gonna go down and check off all boxes that pertain to us in this case we can check off all these boxes and then we after we check we can scroll through and then go to the bottom where we can see our file everything looks okay so then we can go ahead and create our pull request so once we've created we get to this screen where I'll pull requester here um everything looks good so right now if you're a new contributor just so you know there's going to be a message asking you to sign the CLA agreement so um please make sure you sign that we ask that you signed that first before we start making the review process so you were just clicking and you'll go through the steps that are mentioned there and it is pretty easy so it'll only take you about like less than two minutes so make sure you do that and then when you go back there's nothing else for you to do at that point so you can just um wait for a maintainer to review your entry um after they make a review then you can add changes we could show you real quick right now um an example of this from already merged entry but um but exactly what we're just gonna have you wait and then once you I mean once you make your changes then there's going to be a second review typically um after that if everything's approved and it looks good then we can go ahead and merge an entry uh we also asked that you please be patient with us with um reviews just because especially Oktoberfest coming up now it's going to be a large volume of pull requests we're expecting so just be patient uh we'll get to you as soon as possible and we appreciate when you're yeah when you're patient assistant and and also um when you're on here you can so that you know you can see your file at all times by going to the files change section at the top so you're just press on that and then you can review your file and then you can also make changes to that in this case that there was a change by a maintainer um as you can see and yeah so you'll see all your changes there and you will also see um comments from retainers there so yeah um that's pretty much everything for going through pull requests so now we can open the floor to any questions that anyone might have let's see I see a question saying what is the best way to learn everything about code academy including viewing videos from previous webinars in case someone wants to review them again so um for that we also uh recommend like you going over any documentation that we mentioned during this so um the contribution guide um you can also go through all the the style sheets and the templates which are in the issues that we showed where the links were before you can also um rewatch just live stream too so um later on it will be posted so you can go back to that if need be we also do recommend again um using the git and GitHub course that is a great place to start or even go back to if you just can't remember like what commands to use um are there python docs to work on oh yeah Chris I see adult put in the comment for that yeah so we're always creating um new issues too so um if there's no python entries to work on right now there definitely will be in the future uh we're constantly changing the issues and adding up more so yeah so stay tuned if you don't see any right now is there any other questions let me give it a second to see if anyone else has any questions or okay well if there's no more questions I guess we can yeah I guess we can um end the live stream here thank you for all the um positive comments guys I really appreciate it and yeah I guess we can get going on Friday is there anything you want to say before we leave I'll jump back in hey uh thank you for the demo on how to use git and how to contribute to Academy dogs uh maybe we can go to since we have a few extra minutes do you have any FAQs that come into mind people that you know might be asking questions that people in my ass all the time about dogs or contributing or I don't know some helpful tips you might have for people yeah so um helpful tips would be like if especially like if you run into an issue that's specific like if you can't figure it out do get in the GitHub course or you can't figure out do our documentation just always feel free to reach out to us asking for help because we'll be willing to help you there have been times where um pull requests have gone stale just because the author ran into an issue and they couldn't figure it out and it just sat there and instead of reaching out to us um they just let us sit so we ask that if there's something like uh pertaining like a personal issue or anything of that sort that you just can't figure out just yeah just send us a message in the um in your pull requests I'm asking for help and we're sure we'll get back to you as soon as we can and most times like if it's a problem that you're facing like other people faced it before so we definitely know how to deal with it so it's not is it might seem really difficult but we can definitely help you out so like don't be afraid nice um when you ask I know that repos have like a discussion board or something is that where people usually ask questions or what kind of like the the way that people or do you like submit a ticket yeah so typically like if it's specific to your pull requests or issue then just put a comment in that or if there's a like a general question you want to just ask everyone then we do there is a uh discussions tab in the GitHub repo it's at the top it'll say discussions and you can put in uh like a general discussion comment and it's open for anyone in the repo to look at and respond to um if if we don't respond to it first nice and when it comes to I know I see some comments here ask about Oktoberfest in the chat and what it is um so I don't know people know about Octoberfest yeah I think it started in 2013 this is the 10th year that it's running um and I think somebody already mentioning that I think it might have been you that hot offs is just this sort of call to action for everybody online to say hey let's pick one month a year where we all take extra care or like focus our energy more on contributing to uh open projects on GitHub so if anybody in the chat right now is wondering what is a hackover first why should I care um it's just it's just something that we're tagging along in this big Global movement of coders and developers online that just take more time this month to contribute to open open projects so things like code code can be docs it's pretty cool um when it comes to um I know that uh some of the viewers that we have today might be beginners or people that maybe don't feel uh as if they know enough to contribute but I know that code academy docs is sort of like Wikipedia where you always know something that somebody else doesn't and I know that we have a lot of open issues and stuff so um what are some of the tips that you have for when people feel like maybe they just oh I just don't know enough like I guess how do you overcome that sort of fear that maybe you don't know enough about something to to be uh to make a meaningful meaningful contribution to dogs yeah for something like that I also really recommend like looking through like the courses the free courses that we have because if there's a language just say you don't feel like you know enough about it I feel like our free courses does a great job with explaining um everything that you need to know so in that case if you don't feel like you know enough you can do that but you can also like look around look for other resources that you feel comfortable with or that you like um learning from too and you can use that in your process of writing an entry I mean everyone starts out somewhere and we we like to have this platform here so that you can begin your start at um contributing to open source so we are here to help you too so if there's something that you just really just don't know just reach out to us we'll help you out there but um it's especially and I also make really make use of the good first issue label because those are the ones that you're going to want to go for if you know that you're just starting out nice yeah so I guess that's a good way to close this off uh reminding people that the labels on GitHub are super important and code academy docs has two labels going on this month that you should be paying attention to which is good first issue in Octoberfest if you're participating in October Fest I guess uh look for those under the issues Tab and that's your point of entry for all things Academy docs see you in the discussion board and I want to thank everybody for stopping by listening to Kyra and Christine driving in the back the presentation thank you for your questions and if you know somebody that wants to learn more about GitHub and git and to Academy and Oktoberfest we also have another session on Wednesday in the morning so it's a different it might catch a different time zone might be more convenient for some people so if you know anybody that could benefit from this don't forget to invite them over to check out the code YouTube channel and follow us on socials for more Live Events into the future thank you for stopping by and have a great day bye okay so we just