okay we're live hello hi everyone welcome welcome to the first live stream in our threepart journey through code Academy's Evolution we're so excited to walk you through this project from our course learn JavaScript I'm a Corey c code academy is content marketing manager and I'm joined by Fede Garcia Lorca our community manager who you probably recognize from forums and Discord as well as Zoe Bachmann our curriculum director and Melanie Williams an instructional designer who will be on hand ready to answer all of your questions in the chat so Augustus code Academy's birthday month which is very exciting and as Leos we're going all out and celebrating big we have a full lineup of plans including new AI course launches and interactive events like this one where we'll be covering topics like generative Ai and fight that for data python for data science so be sure to check out the calendar which is linked in the YouTube description below because we would love to see you there um today though we're throwing it back to the first ever course that code academy launched 12 years ago learn JavaScript JavaScript is a fundamental language for web developers and it's also one of the first languages that people tend to pick up when they're learning how to code Zoe will be walking us through a project from learn JavaScript step by step so you're welcome to follow along but keep in mind you can also take this course on your own time whenever you want and it's also linked in the YouTube description and this live stream will be available to replay if you get stuck or need hints let me tell you a little bit more about Zoe as the curriculum director at code academy she focuses on finding new ways to make learning to code more accessible and engaging Zoe is an artist and an educator who's interested in how we use technology to increase political engagement critique society and invent new forms of collaboration her practice involves research pedagogy and creative uses of emerging technology she is a former member of the gorilla projection group The Illuminator founder of the feminist technology Collective tendernet and she holds a master's degree from the interactive telecommunications program at NYU hi Zoe um before we jump into the project I wanted to ask you what makes JavaScript a good first language an entry into programming yeah absolutely um so I love teaching JavaScript because it has so many applications and we'll talk a little bit more about all those different forms of application but you know I find that for firsttime programmers anyone interested getting into coding you know oftentimes you want to build something tangible and a website is a great thing to build and so oftentimes you'll start off with HTML and CSS but if you really want to make your website powerful exciting interactive you need JavaScript for that and so you can use JavaScript to code interactions on the front end but if you want to start getting into that full stack programming you can also use JavaScript for that which is why we actually you know designed our full stack career path with JavaScript as that core language so you wouldn't have to use a different language if you wanted to go into programming backends right take it away let's get into this project all right let's get into it um hi everyone it's so exciting to meet you again thank you Corey thank you Fede um very excited to be here it's been a minute since I've done a live stream um but I love live streams you know in my job as a curriculum director uh I don't always get the opportunity to get face to face with Learners um as much these days so it's really wonderful to be here with all of you um I've put together a little presentation for us before we get into the project so let me load that up all right so as we were saying we are going to be talking about learn JavaScript today which was one of the it was the first offering from codecademy um funny enough I was on codecademy as a learner back in 2011 when it first launched so it's it's really cool to be here today and talking about it so what are we going to cover today um we're going to talk a little bit more about the role of JavaScript as a programming language and it being the first course on codecademy um then we're gonna jump into and talk a little bit about programming logic um I'm really excited I think logic is one of the most interesting parts of learning how to program also one of the most difficult parts so maybe you've started to learn JavaScript and this I find can be a uh sort of one of the most early challenges for folks when they're starting to learn uh how to program so we're going to talk about it uh after that we're going to go through the race day project which is in the learn JavaScript course so we'll go step by step um and talk about how we're going to code that um welcome your questions welcome your ideas as we go through that and then we'll have a little bit of a wrap up um so if you do have questions throughout please post in the chat as mentioned we have Melanie who's one of our instructional designers in web development hanging out there and she'll make sure to pass me any questions I can answer live okay so moving right along our objectives for you know this walk through today as mentioned we're going to talk about the purpose of JavaScript and how it's used um history importance of logic in the history of computer science uh introduction to conditional statements and then we're going to apply it all in a project love it so what is Javascript um so I was just talking a little bit about this with Corey but again JavaScript is a very powerful and flexible and fast programming language used for things like complex web development as we are talking about but it also has a lot of other different applications too it Powers the dynamic Behavior across a lot of websites including code academy um and it is oftentimes one of the first programming languages that people learn because it can be used in so many different ways so let's talk about those use cases a little bit so this is what JavaScript looks like if you haven't seen JavaScript before um initially JavaScript was created to make web pages alive right we were talking about this in terms of interactivity if you've done some of the HTML and CSS stuff it's cool and you can do a little bit of like animation stuff with uh CSS as well but really JavaScript is what you know can make these really powerful fun experiences that you may love on the web um so programs in JavaScript are called scripts that's where the name comes from they can be written right into web pages HTML and they run automatically as the page loads um they don't need any special preparation or compilation to run like some other languages like Java sometimes people get confused is there a relationship between Java and JavaScript there is no relationship it was just that Java is a really popular language when JavaScript was first invented so um you know I kind of talked about that relationship between other languages that you might be familiar with HTML CSS and JavaScript I love this graphic um because I think it just you know really helps you understand what is the role again of each of these different languages when building a website so with HTML you know sometimes we think about it as like the bones of the page is where you add your elements to them CSS is going to add some styling to it a little bit of pizzazz but JavaScript really enables you to move and transform elements and create something like a game so a lot of this is kind of what we term as like the front end what you would see when you end up on a web page but what's cool about JavaScript is that you can also use it to program servers or the back end of a web page um so that's going to make your website more powerful store data things like that um and what's great again is if you're interested in becoming a full stack software engineer that means that you don't have to necessarily go out and learn another language like python or Java which are our other great backend programming languages but you could stick with JavaScript for your first one um so talked a lot about JavaScript in relation to web development but you know Corey mentioned in my bio I'm an artist I'm a creative technologist one of the things that I love about JavaScript is that it has a ton of different applications there's some really cool libraries out there um that enable you to program using JavaScript so again we've talked about websites that's awesome but um one of my favorite uh things to do is program creative coding applications in a language called p5.js that's powered off of JavaScript and once you know JavaScript it's really easy to pick up um you can create data visualizations with um D3 uh you can create 3D models with 3js you can create your own games with phaser.js and you can even uh do some machine learning with ml5.js which is pretty neat um even more applications you can do programming with music with tone.js and one of my favorites we have a course on this is a program called Aframe which uses HTML and CSS and JavaScript to build in browser VR and AR experiences so again lots of really cool stuff very worth your while to learn JavaScript and that's why JavaScript was the one of the first I keep saying one of the first it was the first programming languages that we taught here at codecademy starting back in 2011. so just wanted to show some like fun screenshots of what codecademy used to look like back in the day um this is our very first JavaScript course or getting started with programming course and you can see you know similar today we had that you know we have a two panel here um with the console and you have those tasks that we had and you'd go through and you would run your code again code academy if you all didn't know was really the company that pioneered Interactive Learning on the web which is pretty cool um back in 2017 we did a massive update to teach the latest version of JavaScript um so we've kind of iterated our JavaScript course over the past you know gosh how many years is it 12 years now um and you know with that our platform has also grown we've added more courses but we've continued to improve our JavaScript content as well um even most recently we updated our react courses which is a JavaScript framework uh and so yeah so you can see the learning environment as we call it the Le um starting to look more similar to what you may have seen today with that three panel um we have you know the checkpoints we're checking your code and then what we have today which we all know and love so yeah so that's basically just the evolution of JavaScript on codecad me so now we're going to switch gears and we're going to talk a little bit about the role of logic in programming because the project that we're doing today is called race day and it's in the learn JavaScript course in our third module on conditional statements um and if you're not familiar with conditional statements conditional statements allow us to add programming logic um into our programs and I think it's this really powerful moment when you're learning how to code because before that you know you're getting the basics down you're learning about variables you're learning about comments you're putting things to the console um you can see how you can do basic calculations with operators but when you learn conditional statements this is the moment where you can start to see the power of using a computer program versus just doing something yourself with a calculator right you can start to see branching logic so to talk a little bit about the history of logic and how that's impacted computer science and programming um you know logic is the I would say Foundation of computer science in many ways and it's certainly the foundation of artificial intelligence and this whole live stream series is about you know how we're evolving as the learning platform especially within this you know new moment of artificial intelligence with applications like chat gbt so I think it's cool to kind of like you know come back to the beginning talk about JavaScript as our first course but also talk about the foundations of computer programming and artificial intelligence within the world of logic um I don't know if there are any people out here who like reading graphic novels but uh if you are interested in learning more about the history and the development of logic as a field and how it you know again created the foundations of computer science I definitely recommend logic Comics uh it's the story of the foundational quest of mathematics and how uh Bertrand Russell and Alfred North Whitehead pursued the idea that mathematics is based on a logical system um it doesn't get into actual like the development of logic in relation to computer science it kind of hints at it at the end but it um you know again talks a lot about these kind of foundational you know arguments that were happening between mathematicians in the 19th century so you know to talk a little bit about how Bertrand Russell's and Whitehead's work influence computer scientists the very first artificial intelligence program known as the logic theorists system was actually built with the intention to prove some of the mathematical theorems in Bertram Bertrand and Whitehead's work which is super interesting so this program the logic theorist program uh was written in 1956 by Alan Newell Herbert a Simon who are here and also someone named cliff Shaw and it was the first program to deliberately engineer to deliberately engineer to perform automated reasoning so it was designed to mimic the problemsolving abilities of a human right now we can understand how we get to artificial intelligence here so interestingly enough the logic there has proved 38 of the first 52 theorems in Chapter 2 of Whitehead and Russell's principle of Mathematica I know this is real nerdy stuff right here but bear with me but it was a really major moment so again not only does logic provide the foundation of computer science but also logicians are using computers in order to further their work and their research as well so to talk a little bit more about artificial intelligence um I'm sure many of us here are familiar with chat Bots but um you know while chatbots these days especially like something like you know chat gbt we can call a chat bot are using pretty Advanced forms of technology like neural networks um back in the day chat Bots were really just based off of conditional statements they really were just following these you know control flows and so Eliza was one of these early chat Bots it was one of the first programs you even capable of attempting the Turing test and I I think it's interesting and we'll talk about this as we get into the project in a second but you know we can look at something like a flow chart and we start seeing how you know we can use a flowchart to come to decisions about what we want our program to do right maybe you even used a flowchart at some point in your life to come to decisions about what you wanted to do but this is a great way to pseudo code out right to Think Through the logic of a computational program before we implement it with syntax in a language like JavaScript all right so that's a little bit of our uh uh part about logic and computer science um looks like Melanie's in the chat answering questions um and yeah so with that I'm gonna jump into the project so um our project for today is the race day project it is the second project in the learn JavaScript course um so if you are enrolled in learn JavaScript or uh any of our skill paths or our career paths that use our JavaScript content you'll be able to find it there um as mentioned it is in this third module here um and it's totally okay if you haven't programmed in JavaScript before we're gonna I'm gonna like talk through what's in the program um and also this is um not just a live stream but being recorded and will be hosted on YouTube so you know feel free to after this live stream go and do the project and then come back and rewatch this live stream if you get stuck at all we also have in on this project a Project walkthrough video too so another person explaining how to go about uh programming all right uh with that we're going to jump into race day so um we're going to just read over The Prompt together I'm going to talk about how this relates to using conditional statements and logic all right so race day code Academy's annual race is just around the corner this year we have a lot of participants you've been hired to write a program that will register Runners for the race and give them instructions on race day so we have this visual here and it basically tells us as a timeline registration would look like this at 9 30 a.m if you are a adult which we're defining as being over 18 and you've registered early you're going to start at that time if you are an adult and you registered late you're going to start at 11 A.M and then anyone who is considered a youth which is younger than 18 years of age we'll start at 12 30. doesn't matter what your registration are so in addition to assigning someone a start time we're also going to um towards the beginning of the project assign everyone a race number um I don't know if you all have run a race I actually am running a race this Sunday and just got my race number in the mail but you get a little bib it has a number on it and that's how you know what your time will be um so yeah so we're going to talk about how we're going to use conditional statements to assign race numbers to everyone in the race too uh you may have noticed that uh we talked about assigning times for adults who are over 18. we talked about assigning times for youth who were under 18 but we have not planned for runners who are exactly 18. don't worry about it you can still run the race if you're 18. um we're just going to handle that at the end of our project so uh with that I'm going to press Start um if you've never done a project on code academy uh let me just talk a little bit about what we've got here so I went over the prompt um and below the prompt here we have different tasks you can see that we have nine of them to complete as we go through we're going to check them off you can also uncheck them if we get stuck we can open up a hint um and then over here is our code editor our IDE and this is actually where we're going to write our code out together and then over here is our output console so if I you know want to print something to the console I can write console.log right hello and then I'm Gonna Save that and you can see after I've saved that what I wanted to print to the console will appear here so we'll be using a lot of these console.log statements to check our work as we go along um I'm also going to have us you know talk a little bit about again the syntax that we're going to be using in this I've mentioned things like conditional statements we're also going to be talking about comparison operators logical operators also known as Boolean operators um as we go through so it's totally okay again if you haven't learned this stuff before we'll explain things as we go along all right so with that um going back to the project prompt I think one thing that's important to call out here if it wasn't already kind of apparent as I was reading through it is that we have a lot of different situations happening here right and that's a good signal to us that we want to use conditional statements that depending on the data that we're inputting whether it be in this case age registration status we want to make sure that based on the specific data that our program is receiving that we're going to Output the correct information in this case for our user who's signing up for the race right so again if you are building a project on your own if you have an idea for your own project or you come across a project you've never done before or something like a code Challenge and you see these like you know certain requirements asking for different outputs it's probably a good indicator that you want to use conditional statements for them so um just to talk a little bit more about conditional statements again I kind of mentioned flow charts in the beginning but this is I think like a great way of if you're going into a project where you're thinking about how you have different conditions that are going to end up in different outputs you can use a flow chart to think that through moving forward accidentally so you know this is just again an example of a flow chart lamp doesn't work you check and see if the lamps plugged in if it's not okay plug in the lamp if it is check if the bulbs burned out if it's still not working you can replace the bulb no repair the lamp right so you have these things and you're checking basically is it true or is it false so in programming that question that we're kind of asking ourselves is a Boolean expression it's called a Boolean expression because again we're checking to see is it true is the condition true or is the condition false and we want to take we want to do different tasks depending on what the condition is so what that looks like when we're writing it out is something called an if statement or an if else statement um so you say if this specific condition and if this condition this Boolean statement here is true then we're going to execute the code that's within this block here what's cool is you could just have an if statement and that's it and move forward or if you have multiple conditions that you want to check you can use else IFS um and if you just want to make sure that like there could be you know any situation outside of the ones we're checking uh you can use an else and that will execute if condition 2 is false all right so just setting that up a little bit it's going to help us with the project all right coming back to it let's dive into these tasks so um before we actually get into the logical part of our program we have a little bit of set up to do so in this first task we're being told that race numbers are assigned randomly we've already provided the necessary code that will power this random generation at the top of the file so you can see this here we have a variable called race number and we're setting it equal to math.floor and within that parentheses is math.random times a thousand so these are some builtin functions that JavaScript gives us um which is very nice of them and basically they programmatically will give us a certain set of numbers it's between zero includes a zero and exclusive of one so everything up to one in order to get to a thousand we multiply it and this is the multiplication operator here the little asterisk by a thousand but that's not going to give us nice even numbers and so that's why we use math.floor here so I'm going to just show you what some outputs of this look like so I can console.log race number and then I'm going to save it and we can see that output 930. okay great so I can just keep doing this for a little while and we can start to see the range of numbers that we get between zero and a thousand fantastic we can check off this task um if you weren't familiar with that again we have hints here which are super nice parts of projects so just explains exactly what I said here and yeah all right so next step um we need to create some variables and steps two through three so um we are going to create a variable that indicates whether a runner is registered or not and we are going to set it equal to a Boolean value you'll change this later as you test different Runner conditions so remember again I kind of mentioned Boolean values right so Boolean means is it going to be true or is it going to be false those are the only two options that we have right um so we are going to say our we're going to use the const version because we don't need to change well we're not going to change it in our program which is why we're going to use cons so we can change it ourselves you know um so we can say const you can use let it's fine this is just a little project const registered early I'm going to set this to false but we can change this again to see how our program will change in the future great again we can see here cons registered they all set it to false and then we're going to create a variable for the runner's age and set it equal to a number so I'm going to do const age and I'm going to give it 21. I myself am not 21 but you know 21 is a great age okay so with that oh I'm seeing folks want me to zoom in a bit okay I'm gonna pop in and say that all right is that better good on that all right let me know if if y'all need anything else from me thanks for interrupting Okay so we've gone through steps one through three nice and Speedy uh so now we're gonna get into the meat of it um going into step four so now we're going to create a control flow statement that checks whether the runner is an adult and registered early and if so if that's true we're going to add a thousand to their race number all right okay awesome I'm seeing it's better I'm so glad that's easier to read I also have astigmatism so um feel you on that all right so um control flow is a general term for any kind of again um syntax that determines the flow of our program so conditional statements but you could also say a loop is a control flow as well but in this case again we're going to be talking about conditional statements those if if else else if statement so with that we only really have one condition here right so we're going to check whether the runner is an adult and registered early I got a little bit ahead of myself because I kind of want to show a couple different ways of um coding this as you know there are a couple different ways always usually in programming of solving a problem so I'm going to show you one way and then I'm going to show you how we can refactor our code to be a little bit neater and use some logical operators with that so first I'm going to break this up okay so we have actually two Boolean statements that are happening right here we want to first check that Runner is an adult we want to make sure that's true and then we also want to check and see if they registered early so I'm going to say if and we defined age as being greater than 18 right so let me say age is greater than you might remember this from math class right you want to have it being eating the bigger number 18. and then I'm going to open some curly braces here all right so this is the first part of our program um and I just want to talk a little bit more about comparison operators just in case anyone's not familiar with this so let me pop back over to my little presentation here so comparison also known as relational operators for some reason operators we always have like multiple names for the same thing but um we have this way of relating things and then you can see over here depending on how it evaluates we can get a Boolean value of that and again we use that to determine if the condition is going to be true and thus whatever it goes into um will happen so we talked about having greater than you can also have less than you can even add an equal sign so you could be inclusive of a number same thing here we can also check if two values are equal and we can also check to see if something is not equal as well we'll talk more about this exclamation point or bang operator also known as the not operator in a few more steps too so again this is just like a helpful little kind of cheat sheet to remember what we're kind of looking for and you know in our case we want to make sure that it's going to evaluate um well depending on what our age is of course right but in this case we're looking for adults and you know if the condition is true it should evaluate to true all right so then our second part here is registered early so I can write another statement that says if registered early now again like I said before there's a couple different ways of doing this you could say as we just looked at In the comparison operators you could use that double or triple equal sign um to check for true and then open this up and I'm just gonna say um we'll get to the the second part of that but I'm just going to console.log true let's see if that works all right so I forgot we had this console log race number here but as you can see it didn't evaluate to true because we had registered early as false so if I change this to registered early this should get us to stay true okay so let me break that down again right now my age is above 18. and I have actually registered so when I get into this first Boolean statement and I'm checking to see if the variable age is greater than 18 that's going to go to True right 21 is more than 18. and then for registered early checking to see if it's true that's also going to evaluate to true because I changed this to True remember if I had this as false nothing's going to show up here except for that race number here which I'm just going to comment this out remember to comment out you can just put two slashes in front of it nothing's gonna show up because this is false so registered early is not able to evaluate to true all right so with that I'm gonna do a little bit of refactoring so one place I'm going to start is you actually don't need to set registered early and check it that it equals true you can just put this value in if there is a value that exists or there I should say if there's a variable and it has a value it means that it's going to be um considered as a true statement I should say except if you know the value is false um and then another thing that we can do is we can actually combine these into one Boolean statement here I don't have to have them nested in this way so I do that by I'm just going to kind of roughly do this and then I'm going to get rid of my curly brace and then I'm going to use a logical operator or Boolean operator called and and I do that by putting two ampersands in between them so let's talk a little bit about Boolean operators really quickly so Boolean operators um look like this we have a logical and operator which again are those two ampersands or we have an or operator and you can see similar to how we were looking at the comparison ones that you know they can evaluate in different ways so if we have two true statements then it evaluates to true if it's true and false it's going to be false if it's false and true it's false it's false and false and is very very strict as you can tell or we're a little bit more flexible on it right you get more trues out of it and only one false but in this case we're being strict you have to be an adult you have to have registered early so we're gonna stick with and there and now let's save it it's still going to be blank which is what we expected because it's false up there we did not register early so if we change that to true it's true again great all right but I didn't finish this task um I don't want it to be true in here what I really want to have happen is one I don't I'm not actually console logging anything I just need to add race number um so again a couple different ways you can program this you can take the race number variable and you can have it equal to you can set it equal to itself plus a thousand and we can now I'm just gonna um uncomment this so we can see this change so we can see that initially when we generate this number it's 209 but now when we generate it it is 1209 amazing our conditional statement worked um again to do a little bit of refactoring you may remember this but you don't have to write something as long as this you can actually change it to B and I'll just write it below so you can see it race number plus equals a thousand and so this is the exact same process but it's just a little bit cleaner we just like our code to be clean right so I'll save that show that it's still doing the same stuff fantastic all right so that was number four the tasks after this are very similar so we're going to go through them a little bit more speedily but again please make sure to keep asking questions Melanie will let me know fantastic all right so for step number five we're going to create a separate control flow statement below the first and then this statement will check age and registration time to determine race time okay so now we're getting into the second part if you remember of the prompt we've currently figured out how we're determining race number um so now we're going to get into this portion where we're determining start time so again we didn't need to create an else situation here basically if you met this criteria your number is going to be a thousand otherwise your race number is going to be yellow below a thousand so starting our new can control flow conditional statement I'm going to say if and this is actually the same Boolean statement that we have above right for runners over 18 who registered early we just copy and paste sure if you've been programming at this point you know copy and pasting something you end up doing quite frequently but what's going to happen within it um is going to be a new uh thing that we want to execute in our program so I want to log a statement to the console telling them that they will race at 9 30 and I'm going to include their race number excellent so we've seen some console log statements already here so I'm going to type console.log um and prior to this I was just kind of inputting strings right strings are text that we wrap with quotation mark single or double but what I want to do instead is I'm going to use something called string interpolation so that you use the back ticks in it not the quotation marks but it makes it much easier if we're putting a variable a variable within our console.log statement just like in terms of writing it again just kind of neatness so console.log I'm going to tell them you will race at 9 30 A.M and your number is and this is where it gets spunky you do a dollar sign curly brace which we give you the both of them at the same time just make sure your cursor is inside of it and then I'm just going to put that race number variable right there okay awesome so let's save that and let's see fantastic okay so um maybe I'll keep that console.log statement excuse me um below the other conditional statement just so we can see kind of the whole logic of our program so first we're generating a number second if our input here matches these conditions we should add a thousand to it that's happening there and now we should see if that's we're still matching that data then we're going to tell be told that we're going to race at 9 30 and our race number is going to be exactly what we got before 1532 awesome we're doing great Hey Zoe we got it yes um what the question is what if I add a thousand to race number in the initial declaration in the initial declaration like up here I'm guessing so you can do that um but the thing is is that you're not going to be following the project prompt right so we'll see that in a little bit as we get into these other conditions that we don't always want a thousand added to our race number we only want a thousand added to our race number if someone is an adult who registered early so if we have it happen up here when we're defining the variable race number we're no longer making that a condition that we are um looking at does that make sense I hope so any other questions all right feel free to keep uh interrupting so I hope that didn't come off sarcastically because it definitely was not meant to be sarcastic okay um we're going to get into some fun stuff now so uh we've gone through our first one and our second one is that late adults I love that late adults it's all too registered late are going to run at 11. so we are going to be creating another conditional statement and it's going to be part of this same flow right because we are what happens when you write a multiple conditional statement is it's going to check the first one if it's false we want it to jump into the second one and then check if that one's true if that second one is false then maybe we want to have an else statement you could have so many else ifs in here although at a certain point if you really have like more than two three you probably want to use a switch statement instead which is also um gone over in the lesson before so I encourage you to check it out but we only have um really like four conditions in here I believe so we're going to use else if and this time um it's a little bit different right so we're still checking for adults so we're still going to use that greater than comparison operator uh we still have a second condition but this time we are checking to see if they registered late so so how do we Define that someone has registered late well um we could see like we did before registered early is equal to false but there's a nicer way of doing this um and I kind of hinted at this before when we were going through things so there's something called The Nut operator and basically it reverses what we get into so if we put this not operator or the bang operator in front of a statement it's negating the tune returns false or it can say that that's you know so that's what we're looking for here is we want to return false so all I'm going to do is put this little exclamation point before registered early and that's our Boolean statement for the second condition here uh and so again gonna copy and paste and I'm just going to change in this one that they are starting at 11 A.M all right so now I'm going to show that this can evaluate to true and I'm going to do that by changing the value of this right here so imagine we have someone here um let's say they're still adult let's say instead that they're like 65 um but they didn't register early so I'm going to save this and you can see now some things in our program have changed okay so we generated that random number and it's 83. um but because this person did not register early we did not add a thousand to the race number the race number is just staying 83. also they're no longer this person is not racing at 9 30. instead they're going to be racing at 11 A.M and as you can see here we also have the number 83 here awesome so yeah so you know again you could imagine this as a computer program where someone's logging in they have um you know their information already and the computer is looking and checking for again these things like did this person register early how old is this person Etc et cetera we're just kind of doing this like in the project right now but you know maybe you could have a user input um within your program that enables people again going back to the interactivity part of JavaScript right you can imagine a front end that you program and this is some of the logic on the back end but actually has the opportunity for someone to input these values but we're just using them for testing okay almost there um so now we've been talking a lot about adults we're going to get to these um so for the Youth uh we want another conditional statement and again we're going to use else if so else if age and this time we want to say ages less than 18 um and oh and so we don't have to care about the registration so we don't have to use any of these logical or operators right here we can actually just keep it as just checking if they are below 18 because it doesn't matter if they registered early we don't have to check for it nice and easy so we're just going to take that console.log put it in and then we are going to change it to 12 30. youth get to sleep in Lucky them um and your race number is going to be race number so what we want to do now is we're going to change this to 15 and we should expect to see that we get to this third conditional so let me press save all right again generating a number we're not adding a thousand to it because they are not above 18 they are below 18 so we're just completely bypassing this if statement because it uh it was false and we are also bypassing both of these first two statements here because they also evaluate to false because in both cases it's checking to see if they're over 18 and they're not I'm also going to show you that again changing this value from false to True doesn't matter in this case because we're not checking for it still racing at 12 30. all right so um eight enter in different combinations of values for the two variables you created and run your code several times we've been kind of doing that along the way um so you know honestly my preference is check your code as you go um you know use a lot of like console.log statements as I kind of showed change your inputs to make sure and stress test um the different conditions that you're writing um and then there are some examples in the hint so you know you can use these uh Runners Who start at 25 years old and registered early will run at 9 30 so we can just double check that press save awesome you can see that they're racing at 9 30 and they've got their number there uh if we were to change that to false save that now you can see that they're running at 11. um we just did the teen one so so yeah good to check your work all right but we have not finished yet uh we need to remember the num uh the runners who are exactly 18 right so we've talked about this a little bit in the um part around comparison operators just to go back to that so really we're only using these less than and greater than which means that they're not inclusive so we're not actually checking if someone is 18 only if they're older than 18 or younger than 18. so we need a condition for those 18 year olds so what we can just do is use an else statement uh we don't need to put anything besides that there's no again Boolean condition that we were checking there and then we're just going to console.log that that person needs to see the registration if I could spell registration that would be great registration desk all right so I'm going to save now let's check that we're going to change this age to be 18. we're going to save it then we can see that the result is that they need to see the registration desk now if you wanted to include 18 year olds in either one of these categories um you know some might say an 18 year old is in fact an adult we can add a equal sign to the conditions where we're checking to see if someone's an adult so I'm going to add it here to this first one because remember this was for adults who registered early I'm going to also add it to this one for adults who registered early and for adults who didn't register really now let's see what happens to our program for an 18 year old I'm gonna click save uh we can see that they jump down to this condition of 11 and if I change this and that's because again the registration was false so the previous two conditions didn't evaluate to true but if I did change it to true we can see they have a number in the thousands and that they're going to race at 9 30. so that is the entire race day project uh thank you for coding along with me I see that we've had some really fantastic questions in the chat thank you so much to Melanie who's been answering questions as we go um so I hope this was a really fun introduction for folks who haven't done much with conditional statements yet who haven't gotten into the logic parts of programming thinking about how things evaluate to true and false um again I feel like this is really going to unlock some powerful programs for folks who are just getting started here and yeah feding you want to take it away here I am hey thank you so much Zoe um I think this is the most exciting part of the live stream today which is the Q a we have about 10 minutes to go so I would like to extend an invitation to everybody in the chat that is following along if you have any questions for Zoe this is the time to ask those questions we'll be checking the chat anything you want to ask about JavaScript or I guess curriculum at Academy is fair game we'll be reading through the chat and bringing up those questions um so do you mind turning the screen sharing off yes it should be off now great awesome fantastic so um you know while we wait for questions to come in uh one question on my own how do you feel about JavaScript versus python I know that a lot of people ask or which one should I go for first yeah it's a great question and you know as a as a CS educator it's one I personally go back and forth on um so you know in addition to working at Coke Academy I've taught with girls who code I also teach a college class right now um and and it really kind of depends on what the overall objectives are I find that um python is an extremely powerful program that's similar to JavaScript has a lot of different applications and it's not surprising that pythons are first most popular course and JavaScript is our second one so you know with python you can get into data science applications if you're really excited about AI I would definitely recommend python um and then if you are interested in very creative applications or doing more web development web design I think JavaScript is for you and the great thing is honestly is you can learn both like when I was learning how to program I started with JavaScript and then I took a python class it was actually so I went to this really wild grad program that was like all about fusing art and Technology so my python class was a poetry class and what I found is that learning a second language really helped ground me in the basic principles of you know programming topics like conditionals like Loops um so yeah I'd say pick one language python or JavaScript kind of depending on your um you know what you want to do in terms of projects career and then you can always come back to the second one okay great that's I guess that's uh that's all more indepth than I've ever thought about it so that's awesome yeah JavaScript versus python I know that it's a very contagious sort of question that everybody has oh people people fight I mean you can get into the whole thing I mean I mean I could talk about this forever so please stop me but like you know intact sugar and job script Python's a little bit a little bit cleaner some folks like that more so all right I think something that people people tend to forget is is what you were talking about how it transfers over you learn a language and then when you go to the second one do you see the commonalities they're walls Loops the whole thing right yeah absolutely so I think they're both great languages I'm looking at the chat somebody was asking about AI Tools in our coursework do you know anything about that AI tools and our curse work well we are you know developing some very exciting things right now this is what so much of our um big code academy evolved campaign is about I don't know how much I can talk about them right now okay yeah we don't want to spoil them you know I know no spoilers some really fun surprises coming up you know we've done some AI coursework we've actually been developing you know I think everyone knows this but artificial intelligence has been around for a while as I talked about in the presentation you know it's been around since the turn of the last and uh well Midway Point through the last century um but you know chat GPT has really just kind of opened a lot of people's eyes outside of you know the tech world to the power of AI so we have you know our intro to chat gbt course highly recommend taking that that kind of walks you through how to do prompts with chat gbt but also like the history um and the technology itself um but we also have some really cool artificial intelligence we have like a great um learn how to build your own chat bot program or skill path so you know definitely recommend looking into those things I think um I just saw Matt Simon asking a really good question I think this goes across the board pretty much everybody has encountered this before which is the question is is it just me that or is it normal to feel frustrated sometimes when you feel you are not grasping a certain concept oh it is not just you Matt Simon it is definitely not just you it is incredibly normal when learning something new to feel frustrated actually I think it is a sign that you are learning if you're feeling frustrated right like if it was easy you wouldn't be learning it so I would say you know a big part of learning something new is to be resilient and you know continue learning I mean there are things I've been learning to code now for I don't know like eight years and there are still new things that I find out or my knowledge of it expands especially you know through teaching I always see things in new ways so it is totally normal to feel frustrated and not get Concepts at first you just you know take your time keep coming back to it take time for rest honestly you know I say this also as a creative person your best ideas come after you know you've gone for a walk or in the shower or sometimes even asleep you know I have friends who are software engineers and they'll dream about bugs that they're trying to solve and wake up and be like oh okay yeah now now I know how to go about it so give your give yourself the time nice I see a related question here which is about um doing multiple passes through learning at the same thing and these users mentioning all their sites out there online that you can go to learn online and I think that this is something that we don't that we're not shy about what we talk about how we at Coconut we are hoping to be that great resource to learn to code but you know everybody learns differently at different pace and different uh learning techniques and sometimes uh it's good to even if it's the same content to cover in different formats or in different places oh yeah a hundred percent I mean this is something I personally feel passionate about so our team is really interested in learning about you know learning science and we take learning science research and research and use that to design all of our courses and something we feel um again really is really important is how you develop what's known as a mental model right what is your personal understanding of this information that you're getting and I personally find one of the best ways to build a mental model is to engage with a ton of different resources on the same subject because people are going to explain something like conditional statements in a lot of different ways and some may click with you better than others maybe they use the right metaphor that really resonates with you um I think you know there are some interesting things too about like learning modalities you know I would say one interesting thing we found out when reading about learning science is like the more closely you do something and you're gonna say this is a whole point for code academy and learning on code academy but the more closely you learn something in the way that you would apply it it's going to stick better with you right like you wouldn't necessarily learn how to play soccer by only watching YouTube videos it's the same for coding you can absolutely watch a video on YouTube of someone coding and again I think it helps build that mental model but you know what drew me to code academy when I was a learner before I even started working here was getting to actually write the code and getting it tested for me which I thought was great but yeah I mean there are so many wonderful resources out there if you're looking to learn JavaScript really recommend the eloquent JavaScript book um that's like a classic text and I think you know getting your information again will just help you further internalize it and really remember all of the information that you're learning nice great so one last question here will we still have time uh Eric Lozada is asking I'm trying to build my web design business should I take the front end engineer path or build a website skill path so I guess the question is out of in your catalog what would you recommend for some somebody looking to build a web design business yeah I think that's a really great question so we design our offerings for people who have different goals and so I think if you're choosing between a skill path like build websites versus a career path like front end I'd recommend starting with the skill path Because unless you have a personal interest in becoming a frontend web developer there is going to be a lot of additional information in the career path and that's great for someone who wants that we want to make sure it's comprehensive that people feel really confident that they have all the information at their hand to be able to get a job in that role but if you are looking to build something very specific that's why we design our skill pass they're a bit faster and they get you to your goal quicker I'd also recommend if you're interested in web design we actually have some really fantastic new visual design content that's come out this past year some UI ux materials so I would also dig into those that those courses first um and then you know can supplement with the build websites to build your own website nice okay well uh that was all the time we have for Q a today I want to thank everybody for stopping by the live stream today and please join me in the chat to thank the great Zoe for her presentation today I think it was very fun and useful a lot of people are going to watch this live today or later and they're gonna enjoy the content that we put out so thank you Zoe for that yeah thank you so much for having me yeah and if you like the content that you saw today and you want to practice on your own don't forget to stop by and create a free account with code academy you can do that today start going on in your JavaScript Journey get try to get as good as Zoe a JavaScript I guess we'll see you there online in our community spaces also don't forget to subscribe and follow us on YouTube because we are having a threepart series on these contents so today was part one but we will be live again next week same time same day Thursday and the following week on the 17th of August so we're hoping to see you all there and of course you can follow us on social media like Twitter LinkedIn Instagram to keep up to date with all of our content and all the coursework that we put out and all the events that we're having in the future so thank you everybody for stopping by and we'll see you next week have a good one everybody bye and that's it that's the live stream it's over