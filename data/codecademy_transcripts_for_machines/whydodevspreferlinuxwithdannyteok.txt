all right hi everyone and welcome my name is laura i'm the chapter lead for academy seoul here in south korea and i'm here today with danny who is going to talk to us about linux and the way this is going to work danny has put together a presentation for us which is going to take 30 35 minutes after which we'll be taking questions from the audience so if you do have any questions please post them in the live chat and we'll do our best to answer them running over to you if you could please introduce yourself um right do it okay hi i'm dan um oh um i'm a uh i live in the uk uh based in london uh i'm a data engineer uh by profession uh and i've been doing this for about 1315 years so so i'm quite honored to be happy to have you given this opportunity to be here to tell you a few things about uh about this topic on why do you developers prefer linux let's get started i'm just going to pull out screen share and launch so um yep hello um i hope you're all well and safe hopefully uh at the end of this session you will have a couple of things to think about uh in your journey to becoming a developer this is not a technical discussion uh just you have to remind yourself that uh also we'll be taking it easy let's get started if you don't already know linux that's okay i can only guess that you are here because you want to know more about it and how it can benefit you in your projects or at work so choices the image are the images on either sides must be a familiar scenario when you decide on your next brand new computer in my opinion the one on the right is far too expensive so i can safely assume a large majority of us would settle for the one on the left however many developers i've come across have expressed their preference for the mac for development and i'm here to shed some light on the on why you should be aware of not one but both systems especially in the context of development well the penguin is in between the two but it doesn't exist in either machine you have to go and get it hello uh again just brief introduction um i'm dan and i've been teaching myself how to code and i've been involved in numerous projects building applications software developments and data solutions for the past 13 years i have worked with within the windows linux and the mac os i deal mainly with data in my world this is the etl specialist but it is now more glamorous to be known as data engineer so that's who and what i am chances are that the large majority of you here on the windows operating system you may have been using it for a while and may be comfortable making system changes but on a minimal scale to be safe if you're not that's uh that's absolutely fine as well i'm not here to call you on that and for the more advanced audience if you are here did you know that you can practically navigate windows using just a keyboard forget the mouse can you believe it using windows without the mouse that would be quite an experience there was a time the unthinkable happened my fear of wireless pointing device and mouse had a heart attack i was on windows and i was completely paralyzed i was unable to complete even the most basic task of browsing the internet for technical help it was then i discovered keyboard shortcuts i never knew and in retrospect i was convinced to this day that the mouse can be made redundant most of the time but for a better user experience you know what to do keep it and make sure it's still alive so how is this short story any relevant to this topic well again i have worked on you a number of interesting data projects depending on the project i found myself switching between operating systems like the sales events and i have found it particularly interesting as it is important to know exactly what must be done to set up a viable development environment on my machine and be ready to adapt i'd like to point out here that knowing your os means knowing how to set up your development environment this means configuring applications open source tools text editors which are easy and straightforward most of the time this includes applications that you already know as well as the ones you don't because some companies have their own list of approved softwares that can be installed onto your to your machine that can only be installed onto your machine this is typically big companies however doing them right at the start will save you from future headaches and mess that's the difference just like the dance if you were pulled out to the dance floor and it was your first time to salsa or or dance of any kind you will be like stiff frozen and may not even feel the lens at all i felt the same paralysis in a sense of not knowing what to do when i had to start a project on a provisioned macbook it was my first you see working in the it in the uk you are usually alone um a machine when you join a company so you never know what you're gonna get that's not a quote from uh what's that tom hanks a movie i can't remember what it's like anyway i don't know what it's like in other parts of the world but perhaps one of you can tell me at the end of this session i'll be very curious to know so with that it took me quite a while to get used to the new os let alone setting up after some time i can say that i have had a positive experience because of my familiarity with linux personally i think it wasn't just about the macbook or linux but more on customization in other words hackability you see i have seen first hand power developers move blocks of codes copy paste it search and replace text then jumps from line 35 to 1287 to insert a function and does the same thing all over again in different places save the changes and immediately in another active terminal session the unit testing for that script kicks off when that task pass in just a few more keystrokes the code has been committed and pushed to his github repository all in the flash boom the party was over within a minute or what felt like a minute the mouse wasn't even there or was it not even involved it was fascinating to watch and behind the scenes all of that was made possible because of customization i was like whoa that's productivity over the roof that was unbelievable truly the one thing that both the mac elements have in common is the terminal this is where you run bash commands among other things depending on the specialization or your specialization the developer can spend up to 65 percent of their time within the terminal if not more when when you can hack your system and benefit your will so to speak you will see your productivity improve just like that developer this includes automating some mundane tasks creating terminal shortcuts aliases functions scripting up preloaded environment and many more that guy had everything under his control it's like magic for an average user when you look at him you will not you will not even have a clue what what just happened but if you were to peel it under the under the the layers if you were to examine there were many things that have been automated what this means that it means that many keystrokes can be saved which means it will save you time which means more time for you to focus on what's more important and solutionizing them which means your delivery cadence goes up there are many native tools or small applications in which are simple to use customizable and i dare say powerful they are the command line applications that we have come to to know and love i am referring to tools like the one listed here not find which man kill cat but actually each of these is a key word for an application i just just arrange them intentionally to you know yeah so just like this one's here i said all of which the most seasoned developers know of and have exploited and the beautiful thing about all these tools is that they can be chained together for sequential execution only one line if you want to you can create your own simple application this way to automate certain things just to mention quickly the mac os is based on the bsd code base which is unique it is similar to the linux system however they are not binary compatible okay so because of the similarities between the unix and the linux distros or the linux in other words the mac os and the linux distros these tools are widely available in both operating system and when i say linux here excuse me i'm also indirectly referring to the mac so as mentioned you can customize your environment using property files dot files system and local environment paths as well as creating environment functions to boost productivity and to automate certain repetitive tasks there are documentation as well on how to use each of these these tools from the terminal if you just need to be reminded just to highlight other favorites on the mac you can add new workspaces and swipe sideways to them this allows you to better organize your open applications and helps you focus on your thoughts depending on which workspace you are in so emails for me emails and messaging in one space text editors encoding application in another space the web browser in the other space depending on how you want to organize it yeah so similarly you can find multiple virtual desktop environments in linux as well depending on the chosen desktop environment when you install it such as the pde no and others oh there's also launching application like typing it out i think this didn't happen until windows 7. thanks to development in linux distro and mac os and last but not least the availability and accessibility of numerous open source softwares at the touch of your fingertips just key into just key them into the terminal you get it no end user license agreement buttons to read and click anymore it must have been ages ago since i last saw eula she wasn't nice it was always her way or the highway if you're like me if you're like me stuck on it on a technical problem i'll consult stack overflow or at least if uh type that i'll type that out in a search engine uh most of the time the stack overflow result will come up to the top is where we all go to again depending on the problem you're trying to solve in my area of expertise those uh those responses are almost always going to be a command line explanation they are a more direct resolution just as a doctor would prescribe a drug for your ailment so windows has not really been a popular has not really been popular among developers it has a reputation of being unstable and unreliable now emphasis here is that this may no longer be the case but its stained reputation has remained stubborn to come off the mind don't get me wrong because i am also aware and know of developers developing only within the windows ecosystem and will raise a finger at linux and the mac so which linux you may ask can i install linux no because there isn't a linux os to install but you can choose a linux distribution for installation for example there are at least seven categories and hundreds of digitals available to be had i will not discuss them here just take a look all free and available except for the red hat and some of its variant if you look at this is a slackware um category and it's got like i don't know 10 so at least 50 of them it is arranged by timeline from 1992 to today and the line extends beyond 2018 which means they're still available here the debian stack variant has got a lot of this uh distros and each of them if you go to your website you can download and install them yeah okay so what i want to say here is this over the decades i noticed the shift towards adaptations or limits like features on windows i believe this was not just a strategic move to recapture some developers they may have lost over time in terms of market share but more on the point of recognition on the fact that linux is more efficient by comparison i do not hope to see my windows get thrown eggs and tomatoes for making this stigma but anyway it really depends on the need and requirements for the project if i'm honest then it means most of the time so what does it mean for you what are leaners like features the ones that immediately comes to mind are launching your applications by typing them out after pressing the windows key recent additions of the windows subsystem for linux that you didn't know this then there's the terminal specifically powershell not the cmd which is dos multiple desktop workspaces like those on the mac machines this was since windows 10 or six years ago um and then there's this free for all package management you know like on the mac you can get the home brew which is free it says uh the sort of the home brew to access most open source applications if not all so oh by the way there are a lot of things that can be done or actually are done and achieved through the terminal it's a very important uh feature for within linux so like i said uh these are the similarities okay and just to remind ourselves this is a nontechnical also keeping their normal technicals and these are all high level similarities so how do you get into it how do you get started if you haven't already you can run it on virtualbox or vmware download the distro's image and load it up in there it's a nondestructive way of having another os virtualized within windows when you are more comfortable with linux and have found yourself spending more time with open source projects or just wants to hack consider dual booting you can always boot back to windows or boot windows out completely and just put a linux distro in it or two or five if you want or get a macbook if you can afford it and please do not install windows that i shall not say it's a dumb thing to do nope i haven't said it ubuntu is widely supported and has a strong community base there it is one of the most popular linux desktop distro out there so you can start looking over there i'm not here to convince you to ditch windows entirely no but rather question on how fast you can adapt and switch without loss of productivity if or when situation changes but you're not familiar with that situation or if the project that you are interested in is of an open source collaborative but you don't have the proper environment or if your production environment is not a windows ecosystem and you have problems deploying to it because your windows your machine is windows what would you do you can certainly resist change and insist on the one thing that you're already familiar with there is absolutely no problem with that but i want you to be flexible adaptable fluid like welcome changing environments because the software web development landscape or development in general daniel's code is definitely always changing their backend production ecosystem is almost consistently a linux distro of some kind if you're not already a windows sorry if you're not already in a windows ecosystem then it has to be linux there is a high chance that you will be interacting with it via ssh api docker all the others so get familiar with batch scripting and the command line operations they will be your friends learn how to use a terminal be that power user it will be like magic to all give yourself the option the ability to approach any project open source or not not the software or the operating system choosing you enable yourself with the experience of knowing the other world of os this way you can increase your prospect for employability community collaborations productivity and efficiency in software development oh oh yes i mentioned the uh the windows subsystem for linux wsl in short this way you could sorry this it has been around for about five years and got a major update in may 2019 ws wsl 2 which offers better performance and user experience so without getting too much into details this is windows with a linux terminal among other things have to think what that is in short it's all about security the terminal and the open source applications which are free these are all these are the ones that i want to highlight among others no microsoft office on linux is true there isn't one another problem there is an open source version for um just like office and it works just as good and it can also save the the files out in word uh compatible files uh doc or ctocs yeah from the likes so i would say i would also say to always look for alternatives to the ones that you are familiar with already be cures and test our competitor software both paid as well as open source counterparts know how to configure them correctly and observe best practices i have an interest in photography i do a lot of photo editing and post production works when i decide that i don't want to pay for adobe subscription fees anymore which can sometimes join up to more than a hundred dollars a year i know for a fact that i can always fall back to using the dog table and gi mp for linux they are the um the equivalent the equivalent of adobe's uh lightroom and photoshop respectively the best thing about that it still does exactly what i want this is just to illustrate that there are alternatives of course photoshop in my experience so far is far more superior but i don't take advantage of all the power features to justify for the for the subscription cost so yes the um the items to take away from here today about the topic we've discussed so far are the terminal and the fact that everything is customizable almost everything i think of it as having a pandora box which can enable me to do a lot more a smarter way of working and this is why i believe developers prefer linux here is some food for thoughts did you know that devices and applications around the world runs on the linux packet the usdod uses them extensively and the red hat runs in nuclear submarines did you know that linux is favored by defense tech giants like facebook apple amazon netflix google did you know also that 99 percent of the top fastest supercomputers of the world runs on linux or its basics even microsoft themselves contributes to their linux kernel development i'm definitely not suggesting hacking to a certain government's defense infrastructure as your open source projects please don't do that so back to choices what's it gonna be a windows machine or a macbook or in the the one in between get a linux if you're if you're curious about you know your development or is it maybe i see this i see it as a step towards uh the world linux you know if you're ever uh curious about getting a macbook but don't know how to use it yet but we but don't want to spend that much money yet try out linux i'll suggest you to try on linux and that's it i'm happy to take any questions you may have or dodge them nice uh thank you danny and thank you laura uh for bringing danny over that was an amazing presentation we actually had a lot of questions going on through the chat so i'm going to go through it now and look at them uh the latest one comes from ddl sds and he was wondering if so he these users starting frontend web development and he's wondering linux is going to help them much on frontend web development uh what do you think danny sorry can you please repeat um do you think that if you are a web developer you should be worried about things like am i using linux am i used to mac am i using windows is this um for that kind of developer like a web developer is that an important choice to make i don't i don't believe it it should be a worry at all but the point of all this uh this uh session uh is to to raise awareness that you should also be aware that there are the other environment that you can take advantage of that could enhance your experience in development because these days uh developments are mostly their code agnostics it is it is the the point here is that the terminal can can can give you a lot more a waste or different ways to work more efficiently so if you have been if you have been very comfortable while in the in the development working research in the indian web development then please continue but also i'm asking you to um to be curious on what it's like in your workflow in another environment see if you can achieve the same thing i'm sure you could but see if if you can uh uh work better in another environment this is more like an insurance uh if in event that you wanted to change that and you you can you can't move uh across it quite fast right okay yeah makes sense uh do you mind stop sharing your screens so we show our faces back to the audience i've been trying to find where zoom is so oh stop here yeah great okay um another question uh up here was uh when you show the graph with all the distros over time somebody was wondering if there's any major differences between distros or anything that they should know about when choosing one distro and another yes every distro is unique to the other two to the other one as i mentioned if you're not sure where to start the safest choice is to go for the distro that has the largest community support and that and the names that the that immediately comes to mind are ubuntu uh x ubuntu uh as well as debian uh that's these are all the desktop uh distros that you can you can pick and start with uh if you have any questions you can just type into your favorite search engine and you have uh you get a lot of support from community forums on how to do certain things uh and that's also the best place to start your exploration there and the thing is if you and the one common thing as i mentioned all the all the industrials have the terminals in them that you can take advantage of if you do not have to take advantage of the terminal that's okay you can use your the the limits distro just as your windows you know just as anything to do your daily your daily tasks i think it's um my first experience with the different kinds of distros happened when i started using a raspberry pi and i realized that because it's running on our arm architecture the raspbian that i was running that distro was a little different than the ubuntu i was running on my windows machine like you know my desktop so i think um it was different and it was fun also to just learn that there was little quirks little commands that weren't the same there were certain applications or tools that were a little different so i think uh the point that you were making earlier about how it's all about exploring your options and being flexible about the tools you use uh that's a really good point and and i mean if you like if you're going to be a developer if you if you're in the chat right now um and you're thinking about being a developer you're trying to learn to be a developer and get into tech uh being curious about the tools that you use it's it's going to be a key factor to your success professionally um so you know don't be afraid of using tools i think that's that's a great key takeaway from today let's see uh somebody in the chat was wondering um if i primarily use mac for development would you still use linux on the same machine okay so you have a macbook would what are the reasons why you would go for linux when you already have unix running on your macbook can you think of any specifics uh no because those who can afford a macbook already would not think of anything else as i mentioned in my earlier uh when i say linux i'm also kind of indirectly referring to the mac so once you're you're there and you know your uh your experience so you know what you you know your ways around then what your environment and you're comfortable with it already uh you know that's fine because even i have asked the question myself with my friends and other developers hey i see that you're you're using mac would you would you be able to do what you are doing right now as efficient if you do you know to set it up in a windows machine you're like nah i won't even consider it so yeah that makes sense you know sometimes it's not even your choice right uh i know that companies you know sometimes you get onboarded and they say well we are a back shop we are a mac uh office so here's your laptop your work laptop and it's a mac so sometimes uh for p sometimes for developers is the first time with a mac like you said they have they've been learning on windows their entire live maybe using linux and now they have a mac and they have to uh learn the way of the mac and i'm sure that some of them will the first thing that they do is try to revert it back to as much as linux as they can yes and and this is where i i begin to discover the the wsl uh it's it's a wonderful tool and i thought this is well this is like we do some crack really because now now you have a windows and you have the linux terminal within it and that and both of them works uh seamlessly uh well together and uh and it gives me the linux experience to be the linux terminal experience as well as being uh like on on the mac machine yeah uh because i do everything uh within the usd terminal a lot as well uh yeah it's uh i think somebody's asking here a question about they're asking the advantage of linux over the terminal and i'm assuming that what they mean is terminal the app on mac so uh i think mac terminal does it it runs bash or what does it run so i would imagine that the mac terminal and the linux terminal are fairly close they are fairly close because they are they you they are based on the unix kernel if i remember correctly they are similar but the both environments are as i mentioned they are not binary compatible however just on the terminal alone they are very similar and somebody else is asking can windows terminal work like unix so i'm assuming that the question there is does dos the work like no yeah personally don't hold me up on this against me personally i think this is the reason why a lot of us developers move away to leave windows and go to either a macbook or limits because of the the flexibility the the robustness of the of the terminal in the in the limits environment is far more superior than what cmd does can offer until the time when it came out with powershell and when i saw powershell i'm like you know it's i can't even understand it but then years later they came up with the wsl which now which means now i can run linux commands exactly like uh like batch commands in windows that's so it's not so much that windows got better they just borrowed the tools so which is why i highlighted uh there are a lot of linux like features that i think i'm beginning to see between these systems so again back to the point where where i say it is important or it is beneficial for you to know or to recognize that these these are the the features in each of this system and if you already know if you already know them then for you to transition from from one to the other is quite fast and easy because you recognize it uh i think someone is wondering if putty on windows would be better than using ssh on linux i'm not familiar with performance indices or if there's any particulars party is party is an application that really allows you to tunnel into a linux environment which is the the terminal now once you're once you are connected and tunneled into it you will be running bash commands which is why again i mentioned it is useful beneficial for you to be familiar with batch commands on the command line applications because then you'll be using you you guys have very high chances that you've been interacting with with them i moved from uh from onpremise development to cloudbased development uh implementations right now and a lot of them i have to to connect remotely uh through the ssh tunnels and run batch commands really so yeah it's not to say that one is better than the other but that party application tunnels into a uh the linux backend so i guess it's sort of a hidden question when you are trying to compare putty with uh as i said as you're you're talking about the same thing it's just presented different to the user and maybe users don't realize what's going on behind the scenes so because now with with with the wsl i can install linux on there and it gives me the terminal i don't have to use party it's all it's built in um lara do you have any questions for danny that maybe you prepare ahead of time or am i cutting into your time you're a mute um actually no um i think you've pretty much answered everything i was curious about but i just wanted to know and can you just remind me again which distribution or distributions are you currently using yourself and what's your work experience been like what just reasons have you been getting from the companies that you work for is that like a pattern or something so yeah the the very first one that i be that i have interacted with is centos which is based on a red hat variant um which is mainly implemented for their servers yeah and at that time i had to use ubuntu distro um they are compatible in one way or another um there isn't there isn't much of a problems uh in terms of uh experience anyway so my my experience with it has been great so far although admittedly it has been quite a challenge to learn coming from windows and i have tried all the uh the this uh steps sorry going through the uh the virtual box and then dual booting and then now i've completely left windows uh and for more than five years now i haven't really even looked back um i have also now in the last few months i think recently i've tried a new district called garuda it's a it's based on an arch arch linux architecture which is really different from from ubuntu but it's a it's a very beautiful uh gui and it's it's very pretty to look at but in terms of building out softwares or uh installing some applications in that it's a little different from uh from what i'm used to within ubuntu you're mute no i was wondering if i was just giving laura some time for more questions uh yeah people you know the chat just keeps going back and forth i think a lot of people are just like they keep comparing systems and trying to figure out which one is the best i think that's the nature of the internet we're always looking for rankings and who's the best of what um well i think the question here is if i may interject here it's uh yes it may seem relevant to find the best but i think what's more practical is to do is to is to choose the one that that is more relevant to you and then make the best out of it if if whatever your use case is doesn't fit into that the one that you've chosen explore another one right until you find uh find something that's more suitable but i do not imagine that you have to that you would have uh explored uh like 10th uh you know more than five or more than ten it it usually is within a handful of choices that you've made and that will that you will make the most out of it it's practicality is best for the use case not necessarily the best software out there it's um i think i had a professor once uh while i was going to college that explain it saying look when you look at racing they all have different kinds of tires for different environments you wouldn't ask a driver to have the same set of tires for every race in every condition and you have to think of operating systems this way you don't think about them which one is the best they all got they all have the role and they all have the tools and you just have to figure out what you're doing and where the tools are better for you so i guess it all comes keeps coming back to flexibility i think if anyone walks away today with one lesson is be flexible [Laughter] yeah true um okay um yeah i don't think anybody is having any other major questions someone is wondering our security and if distros have different levels of security um i would imagine that they are all more or less similar when we're talking about linux distributions yeah it is uh in my opinion uh and i'm sure uh the linux community would also agree uh uh much of this is that it is very secure um there's i mean personally like i said i've been using the linux for more than 10 years right now if you're talking about virus antiviral you know or having some kind of diverse software that runs on it i don't have one and i don't have to worry about one but also be mindful that it also depends on what websites and what you're downloading of course you can download virus without you know knowing but you know be mindful where you go and what you download and be be aware of cyber securities that these data topics are cyber securities you know what you get if you're if you're just doing development work uh searching for answers resolutions or searching for ideas working on projects or working well with open source collaborations generally you don't have to worry about viruses it is also secure because there's a the super user of the root password only you know any applications or malware that wants to make changes to your system will have to have uh your your root password uh yeah that's a really good part that's a really good uh point i remember setting up windows where the administrator or the machine would be by default the person that was installing the os and i remember someone saying what you should do is create a second user and always be running out of that restricted user because if your main user gets compromised on windows you are the the root of windows so you have a problem if that user gets compromised so even though it sounds counterintuitive that you own the machine and you want to be in a restricted user there is several advantages why you would want to be in that state uh and only allow for higher yeah high permissions uh in certain locations um that's uh that's a thing that linux has been doing for so long yeah exactly root is like being the god of of your phone system uh and there can only be one god in your environment which is you right no every everybody else no excess you want to make changes to some system files no access unless you're typing a password right yeah i think we can finish with one last question that came through the chat and uh it's about someone is wondering if if anyone can make edits or contribute to linux wouldn't that make it less secure there is a there is a point here however because it's a communitydriven development there are organizations or basic community that checks peer review your codes and and there's there's always the people who are will be scrutinizing the way codes are written and if there are any issues that are that are highlighted there it will always be patched and fixed and ubuntu or the linux system is quite good at updating their system regularly and addressing any security issues in the background as well so this is where my confidence with the with the system that lies on in fact you could make the argument that it is more secure than closed systems because in closed systems like windows they have to depend on their engineers finding bugs and fixing them and patching security flaws well in places like ubuntu linux a community of tens of thousands or millions of people the likelihood of them discovering these vulnerabilities and fixing them quicker than a private company would it's uh i i've heard that point before what i would say you know big companies like microsoft only have so many engineers in their staff and they only have so much time to find errors or bugs or vulnerabilities by the community it's millions around the world in all time zones and they can find problems all the time much more quickly so i've actually heard the argument that is more secure precisely because everybody's contributing not not not the other way around not less secure because everyone's control that is that is a very very good point thank you do you use um linux academy or is that something you can talk about we have macs at code academy and i know that most people use linux for the back end so uh it's a mix of both yeah it's kind of like what danny was saying once you're in a max unix environment uh it becomes kind of like a very fussy uh gray line are you on unix are you on linux are you like it's all become sort of the same thing so that's that's how we run uh i know that we have some engineers that have windows machines laying around so that we make sure that uh code academy the website runs well in internet explorer and other browsers that might be windows only or windows specific um but uh most of the time people are running google chrome or firefox which are browser engines that run pretty much the same based on uh on linux mac on windows so um that's been really helpful for development because uh you know uh edge even microsoft edge now runs on chromium which is the same technology that chrome uses so um it's becoming all sort of the same thing and so having to develop for 10 different systems you're developing for two or three now um i remember reading that chrome os is actually a linux district type linux history i wouldn't be surprised [Laughter] just based on whole chrome os yeah i mean google likes linux for sure yeah um well laura i mean if um we don't have any other questions so uh whatever you want to do next you want to wrap this up yeah i think we can uh pretty much finish i thanks everyone for attending um thanks tony and feather for your time especially fedor for waking up extra early today oh yeah he's uh thanks everybody yeah uh danny you want to send them off uh any any last words of wisdom about linux anything that you would like to share party thoughts um partying styles i i think the point i'm trying to make here is really to to to enable yourself and be flexible when it comes to development and do not shy away from changing environments i have experiences myself as i mentioned in the i'm going to get the the analogy a lot like a salsa dance i was completely frozen because i was given a macbook and it took me quite a while to get used to things over there but the my linux experience did help bt to to continue my delivery quite fast faster yeah quicker so yeah enable yourself be flexible don't shy away from challenges or unknown areas of software and be curious that's what i'm trying to say okay well thank you again everybody for stopping by and uh hopefully we'll bring people back soon live on our youtube channel and keep learning all together have a good one