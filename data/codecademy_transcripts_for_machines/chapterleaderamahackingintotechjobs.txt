uh going live all right yeah we're live hello everybody and welcome to another live streaming event with some of our chapters today we're hosting two chapter leaders so do you mind introducing yourself guys yep so from my side i'm lorenzo i'm based in helsinki finland and i'm currently working as a software developer in a bank called nordia my name is christo mead and i'm a scrum master a contractor for raytheon technologies we're working for the air force's kessel run nice all right so seems like both of you know your stuff and that's cool hopefully we get to this is an ama so anyone feel free to ask any questions in the chat i have a few questions to get us started with um my first question to you is how do you end up in the role that you're in today uh was that something that you planned for or did you discover the role as you were doing other things okay so i guess i can start um so from my side i was working as a business analyst in another company and then at some point i decided to change job to change career um i was not looking for something specifically like what i'm doing now it was not very well defined in the beginning so um while i was transitioning to my to my current career i was exploring a bit of data science and then i moved towards web development and then when i started to go a bit deeper into web development i thought yeah this could be actually interesting and nice i really like the idea that you can create something from scratch um yeah so that's probably that's a that's the moment when i decided to yeah go deeper into it and now yes i would say now i'm in the role where i wanted to be yeah nice so you were a business analyst and kind of did a bit of a career switch uh was that was that influenced by uh your coworkers of people you knew that were on the software side and you saw their work and said you know i would like to be doing that instead um not really not really because in my previous company i didn't really i was not in touch with developers so i was my position was something like a consultant so i was traveling to other you know um to other places talking to customers and it was really really like uh customer facing uh rather than say developer facing a role um so that was nice but yeah i didn't i didn't have anything to do with developers but on the artist on the other side i was really frustrated that i couldn't create something on my own you know like if you have an idea and you want to try something you think okay this shouldn't be that difficult um so i think that was the moment where i started to think about it about moving towards towards development okay what about you crystal i probably started off farther afield because i started off i was a translator so i have a degree a master's in russian language and culture and i was living in russia at the time and doing translation work and then an opportunity came for me to go back to school and i did that to get into software engineering so i came out with a software engineering degree um but even then switching to getting more into tech was difficult because uh people would tend to use me for what the gaps that they needed to fill um since i had a background in other areas so they would use my english language background or they then what happened is because i'm a person that asked a lot of questions i got into quality assurance um because i was always prodding why are we doing it this way what could be better so that got me into tech but then to get where i am now where i'm much more back and closer to handson as a scrum master so i engage with the team that's actually doing development work and i'm helping coordinate that but the way i got there was not so much my plan which goes back to original question the role i'm in now i got there because of being open to take on new tasks and stretch myself and get out of my comfort zone because i didn't picture myself being a scrum master but because i'm very good at closing the loop and following up on things with people to make sure things get done and checking the quality of items that made me a good fit for this particular role so that's how i ended up where i am okay great well we have uh some questions for rain let's see uh chelsea has a question what was the most significant barrier you faced when transitioning to coding software engineer like i guess tech in general what was one of the biggest barriers that you find yourself having to deal with you can start okay i'll start all right yeah go ahead so my one of my biggest was i made the mistake in my resume that i showed the languages i spoke where i studied and that ended up being a distraction and and that's part of what in them ended up funneling me away from development and more into say the management side of things or the administrative side of things so that was one of the things that ended up being a barrier with and then when i would remove that from my resume then the responses i got and the interview questions would be more focused on specifically the task that i was looking for or the job i was looking for okay so basically your resume was holding you back a little bit based on the keywords and the language you were using like how you were portraying your skills i guess they thought this is this is a person for this bucket instead of that bucket i guess okay actually part of it was first literally i meant languages as in i i showed that i spoke russian a little bit of german a little bit of arabic and that just threw people off and would be a big distraction okay wow what about you lorenzo uh well that's a very good point actually i have to say that i agree with crystal um um yeah i've experienced something similar meaning that people could see my resume and then they were like okay but you know uh you've worked as a business analyst for a few years um so you could do something like that right and i was like no no no no i'm you know i want to change i'm doing something to change career and i want to be a web developer so at some point you have to be willing to turn down some offers for example if that's not what you want to do right so that was definitely 100 something like that and another point in my case was focusing on on a specific language or rather a specific direction meaning that you know as i said i started with something like data analysis um so i was using python there and i was going towards data data science basically that analysis um and then at some point i switched to web development so then you start again with html css javascript and of course you know um at the beginning you could you know if you go on the internet you'll find well you know you could program with python and you can create website with pythons and you can create you know the backend with but yes that's true um and you can do that with c c sharp there's a lot of stuff out there right um and i think it's very very important to find a way to follow a specific direction direction and don't get distracted so in my case this is one reason why i joined codecademy actually because at some point say you want to be a frontend developer right you go into the frontend developer parts and that's it you don't get distracted by python or by csharp or whatever else so that's extremely helpful in the beginning just focus on what you have there do that properly and then later on you'll have the skills to to change so it seems like you were a little dispersed in the topics you were covering and it was a little hard for you to market yourself as a i guess as your first job as a developer career switching it was a little bit difficult to to say this is the the skills i'm really kind of uh you know how you might be a mile wide an inch deep it's a it's a saying that they have of you know what are you focused on versus how many things you think you know right uh sounds like that you were dealing with that a little bit uh oh and by the way for the people joining the event that are not in the u.s uh a clarification that resumes uh it's sometimes referred to as cv or curriculum vitae in other parts of the world so when we say resume we're also talking about cvs this kind of interchangeably here in the us um i mean here in the us we use resume more often to talk about the skills and like the piece of paper that shows what you know um let's see another question you both selftaught or cs degree how long did it how long it took you to land a job okay so you both said that you were working on places and then you kind of transitioned to the roles you are you have now how long did it take you to for that transition to happen so um i can start um to some extent i have to say i was really really lucky just because um when i decided to to leave my previous job i i was basically i was unemployed right and then i was lucky enough to follow some unemployment courses and stuff like that that pretty much every country offers and in one of these let's say courses or like meetings um i met this guy who was supposed to be sort of a tutor for me someone who could kind of help me um and he put me in touch with another guy and eventually that guy was an entrepreneur and he hired me for an internship even though my skills at the time were extremely basics right extremely basic and by the way he hired me as a data analyst something like that so it was at the beginning it was more on the data side as i said but yeah i would say so how long do you say like six months a year between between learning like so your business is like you know i want to be a developer so between the learning of the skills and then finding someone that will give you a shot of using those skills in a professional setting how long did it take you so i'd say probably four to six months so a bit a bit of a disclaimer here while i was still working as a business analyst i started to study python and data science and i got a it was not an online degree but i was following one course on coursera and the course was something like data science with ibm something like that so by the time four to six months might be a little fast for some people was it how long were you like how many hours do you think you were put in every every week like were you every night after work dedicating yourself to this or how much of a focus was this for you i would say um maybe not every night i would like i would say that uh but i i would i was catching up during the weekend yeah you know like if you need to work then then the thing is that i sometimes i could use what i was learning into my daily tasks at work you know so instead of instead of doing some analysis with excel sheets i could use some python so that's a good thing if you can do it because you start to use it in a sort of professional way that that helps yeah okay what about your cursor how long did it take you more or less from the time you decided i mean i don't know if you actually decided you kind of like just got moved into the world slowly and discovered it so was there a point where you said well i'm gonna go in this direction maybe i should go take some classes maybe you should do some something to add in my resume like did it take you some time to train and then sometime to find someone that would give you that role um yeah definitely because as i said i i tend to get not this makes it sound like it was a bad thing but it was a good thing for me careerwise i tended to end up in manager roles in different capacities so for instance i was in quality assurance for a good long time which in my area you may be more familiar with the term as mission assurance because i wasn't a tester i was responsible for preventing defects and looking at the processes and the overall program execution from that aspect but getting back into tech or getting the ability to do it that required that took time so um and what had to happen was i had to switch from one company to another and even then it took a good eight months before i started getting more technical getting more technical opportunities um and again it came back to doing the job well but showing that i could do more and taking classes at the same time so i always whenever i was looking to do a transition to bolster my confidence i would take classes um and since they were talking technology there's always new stuff to learn and always things you need to do to keep up to date so that was never really the issue but yeah it probably took me i mean the shortened version would be say it would take it took me about a year once i set my goal to get to something more technical um this last one i was not particularly acting no that's not true the last one i was definitely looking to move more technical and once i set my mind to it it took me about six months and that actually once i got the transitions when i signed up for code academy because i realized for in my current role i wanted to do more uh with python specifically in data and that's what led me to academy and why i'm here okay to your point mine is more of a bumpy path than i think than lorenzo's because i would go into management and come back out a little bit but every time i wanted to get back more technical i would go back towards learning and make sure one thing we haven't touched on network so i was never burning my bridges always trying to show people that i could do more than they maybe expected from me and i would step up and do something that was maybe a little bit out of my comfort zone and always looking for a sponsor um you know somebody that could put in a good word for me somewhere because that's really how i found that i would base make my best moves in my career hmm so those last six months was that um when you were taking courses do you think that what were you doing like the weekends a few hours here and there did you have a set schedule did you say okay i'm going to make sure to put five hours a week whatever that is like do you put it in your in your calendar like 7 to 8 p.m that's coding time like that's that's project time that's python time i wish i could do that um what i try to do is i try and set myself a goal of five hours a week um and stick to it okay it tends to be i tend to make up more of it i think like lorenzo said on the weekends and i'll usually end up getting a half hour an hour a couple days a week during the week okay you know when i was doing the uh i was doing the full stack path and got a code academy what i did is i went down the syllabus and i i wrote down the 43 46 45 chapters that he has and i basically said okay how fast can i get i did like the first two or three chapters and i timed myself like how many hours it took me to go through chapter and i tried to extrapolate that and say okay if my average time is you know an hour and a half per chapter then that's this is gonna probably take like 80 hours of work i'm going to assume that the later chapters are harder so i'm going to add a 20 margin on that so 100 hours of work like i and i tried to like map it out in a way that i liked how i could just say okay if i keep up this pace by december before christmas i'm gonna be done and that kind of motivated me because i could see that my daily work was you know driving me to that it was kind of like mini milestones in a way so a lot of different people get motivated different ways to get through coursework let's go back to the questions i have a question how to become a full stack engineer well sir uh there has a lot of answers to that uh do you both of you do you have any idea any answers for how would you go about becoming a full stack developer uh you want to go first i i'm not a fullstack developer so that that's a question for me uh yeah so um i think uh okay so um first of all like a full stack the developer is sort of a unicorn in my opinion you know like nowadays everyone's a full stack developer but no one is really like only only a few people are full stack developer okay you should i mean in my opinion now that i'm working in a professional environment and i see what i know and what i should know to be like comfortable let's say i think you would need at least maybe three years in the front end and then three years in the back end and then after six years maybe you can be a full stack developer okay that's the frank answer um having said that my advice would be to start from either front end or back end i don't really have a preference um do as you as you wish start either way find a job as a front end or backend developer and then while you're working keep studying there's i mean full disclosure here i'm i keep studying every day almost every day uh or definitely definitely every week um other than so other than my job i go back to study material and i try to understand more of whatever i want to learn and definitely more about frontend and backend but yeah study well you will never stop studying first of all um but yeah yeah yeah um well i'll step in i'll step in here since you said you're not from the developer of full stack developer um i've talked to developers here code academy and in their experience and obviously this changes from company to company and it changes from person to person but most boot camps and places that teach you how to be a developer they have a full stack they make you full stack aware now a full stack developer it's a difference of you know what the back end is and what the technologies generally are but usually at a company for example here at code academy you will join one of the teams engineering teams and they have focus areas so maybe you are in the engineering team working on the platform side and then you're going to be more back end heavy while maybe you join the team that is working with marketing on new pages and new things and you're more front than heavy and that sort of gets you moving in one direction and gives you more experience in front then or back end but here code academy true full stack it's only people that have been here for many many years and they become this kind of like staff engineers where there are these people that just know they just like everybody knows that they know and they know how everything connects and how everything works they have it all in their minds but that's a very unique role and usually at least here uh it's a lot more common for you to just you put in your resume a full stack but you will end up focusing in one area or another depending on the team that you're in and the projects i really like i really like how you phrased it like you become a full stack aware you know like it's not it's not that you know ever especially when you go out of a boot camp or maybe some courses and these kind of things you are aware of things it's not that you are a professional developer you know like i mean i can totally put up a website and use some google services or aws services to have a back end there but this doesn't make me a full stack developer okay i kind of know how to work my way around but yeah i think this is very common that a lot of people that get into tech especially the first job in tech um there is a before and an after like once you get in that professional setting and you start talking to the developers and you start realizing what is truly possible or how com the complexity level of projects i think there's like a like a realization of i thought i knew but i don't a lot of people like they feel like they know and then three months later like they six months after they got their first job you asked them and they changed their mind and say no actually i don't know anything i thought i knew um i have a lot to learn right yeah as a before and after okay more questions let's see do you have a coding portfolio to share with potential employers to show your skill set or completed projects okay yo so this applies to both of you did you have to build up some sort of portfolio to get that job or um i mean for example crystal in your space in your your case you were in management and you moved through management roles how does that how do you showcase the impact you had in those roles and how that was worthwhile in the next role like how that you know translated into natural that's a great question part of it comes back to sort of the resume aspect of it one of the things that i learned in my trip because for for me where i am because of the different programs we work on for instance i can't have the government contractor i can't take my code from one place or another and show that so it has to be in my resume so it's going to be describing with the work idea the impact i had talking about so if i were managing how many people are i was managing the value dollar value of the program or the impact of the program when we were done for me also what comes to it is that the people on the program i was working on when i say program that's a project that has a many year phase to it if you will in government contracting but it's not a computer program it's a project that has multiple years to it that it evolves over time that's a program and what's most important there for your next position is the people you work with that can then vouch and say this is what they did this is what they're good for yes i recommend this person because he really helped with this so that's how you you build your reputation and you use that to move forward okay so okay so both project management i mean not paramount project showcasing but you you also put a lot of emphasis on networking and people vouching for you i guess okay i know that that's a big one especially when you're trying to get into certain companies they usually have referral programs and it's not something that people utilize often enough i feel like a lot of people don't really they feel shy or they feel like it's not appropriate but it is totally appropriate like every company or most companies have some sort of referral system where people that work at that place can highlight potential uh candidates right for roles so i feel like that's probably a big plus and if i could talk into that specifically okay i won't name any companies but um often what i've seen is that the recruitment process and the system may not be the best system for recruiting particularly there might be some gaps in it for so if you have a referral if you have somebody on the inside that is helping you get the position as not in the sense of getting the job but they can monitor how your resume is being going through the system and help resolve any glitches in that area or speak up for you so it's a matter of also sort of overcoming a system that might not be ideal so having the person on the inside that you can use is really valuable and it's not saying that your skills are less it's just making sure that your skills are seen for what they are at a minimum yeah it's uh one of those cases where you apply for a job and five minutes later you could reject it and you know it wasn't a person it was the system automatically rejected it was the server right you just didn't have the right keywords in your resume i guess what about you lorenzo how do you did you have to build up any portfolio you said you found an entrepreneur that hired you for some basic skills uh were you at the same time building a portfolio for for your skills yeah so at the time as i said um i started to work on python and data analysis while i was still working in my previous company and basically before leaving the company so let's say we're speaking about may of that year by that time i had let's say some portfolio regarding some data analysis project that i that i that i did during the certification during the kind of course that i was following online so i was definitely able to show that and i was able to kind of explain why i did that and and what i was trying to get out of that and that surely built uh some some confidence in the other person other than that i'd say that after that while i was working for him um in my spare time i was also like coding and of course building some small projects on the side and i have to say that when recruiters called me a couple of times they mentioned yeah i've seen stuff on your github profile so it is someone is looking at that let's put it that way i'm not saying everyone is doing that but we actually had um i've been talking to recruiters in live streams here at the code academy youtube channel there's like six episodes of those and every recruiter will always say the same thing which is make sure you have a linkedin page and make sure you have a github repo if you are going to be uh getting a developer job because we look at those all the time they said we don't look at each one like we don't always look at them if you don't get through the initial screening of your resume like a lot of recruiters have to read through hundreds of resumes and but if they see something interesting in your resume their next step is most likely going to be finding more information about you as a candidate either on your linkedin or in any other online page that you might have your personal page you might have provided or your github repo um so i know that that's that tends to be the case that the recruiter is always looking at gotta make sure you have a good one set up um we actually have a moderator in discord that he didn't build any portfolio projects what he was doing is well not as specifically but he was uh helping a lot of open source projects online and he got to the point where people that he was collaborating with ask him where do you work and he said nowhere i'm just like selfteaching myself code and and people are like you you don't you don't work anywhere here's a link to my website here's the link to my jobs website here's a link to my company and they started inviting him to to apply for jobs he said look look you definitely have the skills you're collaborating these open source projects with us on github and you definitely you know like we know we would like if i could i will hire you so sometimes uh the power network i guess networking so it all comes together let's see more questions if you guys had to have a different job which one would it be if you could just pack it up and let's let's imagine that somebody drops 100 million in your bank you don't have to worry about money and you say well now i can do anything i would like to do what would you do an orchard beekeeper surfer i don't know what would you go for um to be honest i don't think i would change that much now because so first of all um a step back i was studying a react as as you can study on code academy and because it's very very popular and then they hired me to work as a frontend developer with angular so i kind of started from scratch angular seems super hard to me um so i'm learning a lot of a lot of things but but in the end i like it um if i would get say a hundred million dollars i would just probably focus on some bad projects you know like stuff that i would like to have in the world and that's it right uh nowadays i have to spend most of my time working which is also about learning of course but i cannot work that much on my personal projects but yeah i think i wouldn't change so is that uh if i'm understanding correctly it sounds a bit like you would still be a developer maybe an entrepreneur developer like you would start a company or do some personal projects on your own like if you could remove the risk of needing to pay your bills and your random things you might have like start working on your own personal price so that would make you an entrepreneur i guess i think so yeah i think so okay entrepreneur nice you know maybe yeah on your mobile apps yeah i mean right i mean look if you get a bunch of money um you can go on a beach and have some fun for a couple of weeks and months maybe and then after all i think it becomes you know money like they make you happier for a while but then you kind of revert back to your um to your status to your kind of sort of happiness status just be one of those influencers posting like little coding tics uh tick tocks you know five programming languages to learn like things like that just one of those exactly yeah three three portfolio projects you need like you know those people posted on instagram and now yeah you could be from the beach you know from the hotel uh what about you crystal uh if you could uh drop everything and do something else what would you do a ranch maybe cattle horses oh no no no no i i'm a city person pretty much so you'd see me in a big city somewhere um but actually what i know what i would do right now because it's been my my recent interest i would probably work primarily on developing my mobile app skills that's a but i'd be looking specifically at decentralized social apps um so blockchain has become something i've been interested in now and now there's now the dso i don't know if any of you are following that so it used to be called big cloud they rebranded at the beginning of september i think to do so decentralized social media okay and they're creating the based on the blockchain there's now an opportunity and there's a lot of projects that are doing i think there are 100 projects that are starting up to develop on this blockchain decentralized social media so it's really interesting and it's very open and since it's the beginning of this deck if i got that hundred million dollars now i could drop everything and start doing like startups on apps that i think would be great and do the usercentric feedback approach to make sure that it would actually work you know that way so it sounds like both of you are going to the entrepreneur's side both of you would just like drop everything and start your own companies i guess and run your own projects i guess uh in decentralized finance i feel like the uh blockchain technology now it's sort of like machine learning 10 years ago like in 2010 after you know when the iphone 3 came out the first ipad uh everybody was talking machine learning and like the power machine learning like if you wanted to start a company and you wanted to have angel investments or any sort of uh vc fund investments you needed to have machine learning in your in your tag line right in your company like it had to be about that and i feel like uh blockchains did like that now in the 2020s where if you start any sort of company you have to say that you are working with a blockchain in one way or another talk about the nfts nfts we should start we could uh take a screenshot make an nfc of the this ama um sell it okay so let's see more questions there's an internet i want to be career switcher interesting okay so this person this person wants to be a career switcher uh focusing in frontend development but they get the feeling that they're not smart enough which areas is more value in the tech world okay so i guess this this kind of like a general question of like how smart you need to be or like how capable you need to be to break into tech and i'm assuming that the answer is going to be somewhere along the lines of anyone can do it but i want to hear your answers i can start i think on that one because one of the things that i think a lot of people and i'll talk from a us perspective because we tend to be uh more aggressive in our resumes if you will more assertive that how wonderful we are and all that but there's also the flip side of that when people look at the job requisitions they'll see all of these requirements in that requisition and that will scare people off if you in the united states if you have 80 of the requirements that you see in the resume you are overqualified for that position so if you have 50 i would say apply because there's always this wiggle room in a position where you may have some skill that's not in the requisition um from your current career for instance i think there's somebody on code academy that has a background in genetics well if i were working in a biotech company that could really play into helping get your your first position but it may not be on the requisition form so don't underestimate the value you have try and make sure that that's in your resume as you know aside something of interest that makes you stand out but not distraction and don't hesitate to apply for positions the worst they're going to do is reject you as long as it's not taking a long time to invest and again if you have somebody inside that can help you tweak your resume to fit the company's lingo that can help you get in also um you know again that's not doing anything unethical or legitimate that is really trying to show that you're doing your research on the company and aligning your resume and your application to that company and that will help you get the position because there's so much you can learn when we were hiring for at castle run we were hiring to do um a particular project i was actually not i was engaged in the hiring but i wasn't one of the hiring managers per se and one of the interesting things i did that might help this person is they forced the person during the interview to do paired programming in this case it was paired operations because it was more devops and i asked the person doing the interview what exactly are you looking for because there's no way this patient's going to know the ins and outs of our environment until they're in it so how are you gauging whether or not they're really qualified and the person said i'm really looking for curiosity more than anything because the person if they're smart is going to learn what i need them to learn to get the job done and we're working as a team so they're going to always have somebody that can help them with the areas they don't know but the curiosity was a key thing if the person is open to being told i think you could do it better if you follow this path and asking questions then i know that's a longterm very valuable employee that i want to have on my team because that's going to be a person that's going to help me solve problems so that's that's what i'd say to that person is don't sell yourself short and play to your strengths and allow for the fact that there are personality traits that can actually win the job for you what about you lorenzo yeah um well first of all i agree with christo um other than that i would add a few things um maybe i'm a contrarian here but i don't believe that programming is for everyone as everything i mean some people like it some people won't like it and it's simple like that right um so if you don't like programming but you want to do it for you know money it might work right uh but in the long term i don't think you'll be happy simple like that now if you are if you like programming or at least you think you like at the moment um that's fine and here i'm quoting a a person that was uh following i listened to to some of his conferences and he like he told us look uh you need three things to well to enter the world of programming become a software developer um isolation references and um perseverance okay so why those three because um first of all perseverance this is not a shortterm term game right if you want to become a programmer you can start with maybe a couple of hours per week very very slow paced but you know that it will take more time and that's fine but you'll get there at some point the more time you invest in that the the easier you will get it so you should play for the long term first and this is for severance reference this is what i mentioned before uh find a specific path that tell you look at the end of this you'll have the basic skills to be a frontend developer so for example the path that we have in codecademy just find that path or a mentor whatever you prefer but then just focus on that don't spread yourself too thin and the third thing the third thing that i was mentioning is isolation because um you know everyone else around you has uh its own life right they are doing whatever they are doing and they don't really care if you will become a developer or not right um actually for them you know they probably your friends would like to have you there on a saturday evening and they would like to share a drink with you and so on and so forth but at some point if you want to become a developer you have to say no to a few things and focus on your learning until you get a job probably um and this is maybe a hard truth but it is something you probably should should be aware of yeah i would put it there i feel like um uh to nuance your answer i feel like some people there's many ways to learn and everybody's a little different some people like to take notes some people like to watch videos some people prefer audio and others prefer to read the lessons um i feel like uh that you need to be aware of yourself a little bit and how you learn and if you feel like you're not smart enough because you're going through a lessons too slow you should try out to find lessons in a different format or in a different way and see maybe try to study at a different time of the day maybe maybe you're trying to learn to be a developer after your hours of work well if you already put eight or nine hours at your daily job they make you work in the day because that's when you're productive right so at night you're already spent and you go home and maybe maybe you need to take some time off use your vacation days to see if you if you study better uh sometimes it's a matter of the platform you're using to learn it's not adequate to the style of learning you have so there's a few variables to take into consideration and if you if you try a few things and you still feel like you struggle with motivation or you still struggle with learning programming you can also try to find peers online or projects or things to collaborate with and i would say once you've gone through a few of those if you're still struggling then maybe you start you have to start considering like laurence said you know is your motivation the right place is this really what you were looking for or maybe you thought this was what you're looking for based on you know like a movie you've watched like sometimes someone telling you how much money they make as a developer um so i would say uh you need to try a few things first before you give up like completely because uh you know everybody's a little different and it might just be that nobody explained it to you like um this happens a lot with uh i have friends i would say i'm really bad at math i said well you probably are not bad at math it's just that never nobody ever tried took the time to explain it to you in a different in the way that you understand it because basic math right like oh i can't add you know like you're doing shopping and 13 plus seven is is too much it's like nobody should struggle at that at that level of math so this must be that just the learning you took was just not effective for you so be aware of yourself and your capabilities sometimes it's just a matter of uh looking at it from different angle uh but you also have to be realistic that yeah not everybody's gonna be able to program that's just fact but maybe it's kind of fun for you if i can just expand a bit on this um another very important thing that i would add is that you shouldn't compare yourself with other people right i mean if you look at other people learning let's say exactly whatever you're learning exactly the same thing right maybe they are students or maybe they are unemployed they can dedicate eight hours per day and they will progress faster than you and maybe you have a job and and you have to work after your your job and you can only dedicate a few hours per day or even less right so there's no way you can progress as fast as they are progressing so as a rule of thumb you especially when you're learning something like this and you're doing it because you want it don't don't compare yourself with other people just compare yourself with what you did yesterday okay and if today you can just do a few small things that's perfect that's fine that's um i follow this guy that uh he has a very similar principle he says you know if you could uh every day you should be able to look back at your clone from yesterday and like are you better than that person like you know kind of like just as long as you are improving personally um obviously there's nuances to this right like uh if you're trying to for a job or something where there's 15 candidates and you're one of 15 yes you're gonna have to somehow be better than them but if you're just learning just the learning aspect of it i guess it's not healthy to say well somebody went through this lesson in an hour and it took me two and a half i must not be good at this well yeah yes yes no the bets if you put the time uh other questions let's see somebody here says i'm 15 loving coding but i'm doing python c plus what is next okay so they're doing python simples plus uh what is next i guess my question is what are you trying to do learning to code like where you're trying to go are you trying to a web developer a game developer a mobile app developer you're learning python c plus uh it's a little hard to know what will be next like what do you think that is next so if you're learning python super suppose at a surface level what's next like data structures or algorithms or what would be the next logical step i would hope if they're doing c plus plus they probably already had some data algorithms and structures um but you're right that would be a great place to to back go back to to make sure that you've got that under your belt before you move forward but it sounds like maybe the next step i'm assuming they're saying they're starting with the programming languages then the next step i would think would be moving on to projects maybe moving on to projects where you're working with somebody else because and even i have this tendency i tend to do things on my own because my time is so varied when i can actually work but in the reality is when you get into business you're going to be working with somebody else so if you can get somebody to pair with on a project i think that would be a great move for you and pick something really small if it's your first project make sure you you understand what it is that when are you going to be done like what's going to be your first really simple iteration on whatever you're developing if it's a game you know make it really simple that just barely gets done what you want to do so you can test it and test your assumptions and see what works and then move on one of the things that i've learned from working in kessel ryan from the past couple of years you want to experiment and test your assumptions and you want to do it in iterative smaller cycles a is more interesting so you can get stuff out to people you can if you're developing a game you can have your friends try and say hey i'm developing this really simple game i want you to give a look at it and see what you think what do you like what don't you like what could be better and the feedback you get from them is invaluable for figuring out what to do your next steps could be and knowing how to adapt and seeing how you have to adapt what you're doing based on feedback is a really critical skill in today's world so i do recommend working with somebody else and trying to get feedback from another group of people potentially on whatever you're doing i think that'd be a great next move for you yeah very good point um if anything i would add maybe well like the way i see it now is that you have a hammer and a saw right you can do a lot of things with that and that's great but you don't know what you want to do right do you want to build a house do you want to build a boat do you want to build up fence maybe you know like an and as uh federico um and crystal were saying like yeah you can go pretty much everywhere with those two languages those are i mean they are very good good that you started from there um but you can expand pretty much everywhere so try to build some project and and see what you like more you know like maybe you don't like game development at all maybe you want to go deeper into some data analysis and then after a while you discover that you don't like that one either um so yeah just try a few projects and it is a bit like crystal was saying try small things uh and then get feedback from you from yourself right do you like it or or you don't like it fine um and then try again something else right and i would say um one thing to remember when you're learning to code at the beginning is that at companies in a professional setting you will not be doing all the things that you're doing when you're coding on your own so for example you might have a team lead you might have a product you might have a manager you might have a product manager you might have directors and like you know vps and there's a lot of people planning the steps ahead for you so that all you have to do is focus on the building aspect of it and this is something that i see a lot with beginners with coding where they will say hey i learned the basics of html css and javascript but once it comes to building something for my own i blank i'm totally blank like i know the tools and i don't know what to do right like lorenzo was saying you have a hammer and some nails and some wood but like once it comes down to like doing something on your own that is not the ikea pamphlet you don't know what to do with it with the tools and um and that's totally normal you have to accept that these project management skills and this kind of planning uh that that's a that's a different skill set learning javascript doesn't teach you the how you can plan a project on a sprint so that you can get it done and erase through it and improve it over time that's just it's it's separate things it's totally separate so it's totally normal if you're learning programming languages that you don't know what to do with the languages it's going to take some time for you to figure that out and then once you get a job in a few years you're 15. so once you get a job in a few years i guess you will have people telling you what to work on because uh because this is you know that's just not your area of focus your focus is using the hammer nah not planning which bed to make uh let's see another question here someone with a noncomputer science degree trying to stand out by using portfolio to showcase my skills do you recommend any projects to work towards all right so is there any kind of project or type of project that might showcase your skill better than other projects um okay so if i can start here i'd say um so broadly speaking there are a few projects that are trivial like um a todo list which like everyone has right but it's a good way to start just because anyway you need to use a few things in the language um or in the framework that you are using that um will be helpful right so if you can do a todo list that's already something now of course you want to do something more than that so definitely um get some data from the internet there are a few websites where you can fetch data and and use a bit of calls to maybe change that as well one of them is called json placeholder so if you go there basically you can download some fake data regarding i think it's some website like facebook say right so there's like users there's pos there's albums whatever so try to get data from there and display it in your website as as you as you think uh it would fit best so that shows me that you are able to well get data from the internet and display it correctly and it shows me that you are able or you should be able to handle some errors in case uh data is not coming and so on and so forth so rather than specific projects i'd say i'd like to see how you handle these things error handling data from the internet these kind of things yeah cool i guess the only thing i'd add is if you're looking if you know the industry you want to go in or the type of company you want to work for try and make sure that your portfolio aligns with that because that will draw more of their interest and probably then they'll be able to ask more intelligent questions about your work specifically and you'll be able to respond to it i think that will get the engagement so and you might be able if you can do that as you're applying for positions indicate which of your projects they that you'd recommend they look at for that position i think that would probably be useful also and save them some time anything you can do to save a recruiter time is going to be value yeah yeah that's uh i think one of the recruiters that i talked to here at code academy they said the same thing that um when looking at portfolio projects uh they know the text that we use at code academy right like the the the text type being all the software and all the frameworks and all the languages that we use at code academy when they see candidates that have experience in those things first it that it it's not a make or break situation but it does give you an edge over other competitors that might not have knowledge in that kind of code base or that kind of frameworks that are used here because yeah if you know you know if you know django instead of another framework like react it is translatable and it is something that you can easily move from one to the other but still takes more time than somebody that's already a native developer and react right so it comes down to these situations where out of three really good candidates who has a slight edge because they can only hire one out of three so i think that's really good advice um to work on work on projects that will be meaningful to the company that you're applying for and like lorenzo said uh try not to make them trivial because you won't be you won't be hired for the project you did like oh we like you to implement this in our in our code base they probably gonna ask you questions like why did you do it this way what motivated you to make this choice what was the tradeoff that you did when you chose node.js instead of this other thing why express right like they will ask you these questions and they're more interested in knowing your mindset and how you you work through problems than the problem itself because everything all everything else will come with experience and your mentors and working with people that have more years of experience than you so build projects that are not just copy and paste be mindful of the project you're building and make sure that you can explain why you you did it the way you did it that's probably a big one um how can we know okay how can we know that we're ready for a job or an internship how would you what is this is a really big question it comes up all the time in the community at code academy with all the beginners is i don't feel ready i've built three projects this is that enough should i do five should have spent a month just been three weeks there's this impostor syndrome of saying i've taught myself this so i'm not legit i'm not a phd in computer science so i probably don't know what i'm talking about um and it's really hard to break through that to say i feel comfortable i feel confident in my skills to to talk to recruiters about this or to apply for jobs so do you have any tips on how to get over that wall i think the first thing is if you have any friends that are software developers or in the area you're looking to get into ask them um because if they're your friends well backing up when we think about ourselves we tend to be more critical about ourselves because we know our faults we know our strength and maybe we know our strengths um but if you ask your friend you know do you think i'm ready for a position like this or a couple of friends is probably even better if you ask them um they may come back and say i think you're almost ready or yes i think you're ready or you're overqualified for it even right because your friend might know if they're looking at your portfolio see what you've done and they would have the context of understanding that position um then they could advise you on what you might still need to do or if you're ready to apply for it and they might bolster your your confidence also because the first job is always the hardest one to get yeah i'd say the first job is definitely the hardest one to get once you have the first one it's like okay oh this guy is actually a developer yeah totally like that regarding your question that's a tough one i i was probably i was in your shoes 100 um what i could say is try to um well try to apply earlier than later earlier is better than later i would say that's that's something now how to define earlier um it's a tough nut i think yeah ask to some developers friends um but in the end maybe um get a list of companies that are interesting to you and then a list of like b companies where you are not very interested um and apply to the companies in the in your second list right so even if you fail uh you are like okay you know i tried and maybe they gave you some feedback as well and and you know what what they want you know how far you are from being startled already um yeah i would say i would say that you have to try you have to try some some interview um i think my advice would be the way i looked at it was okay who feels like they're ready to apply for jobs uh when they're learning to be developers and my first answer that came to mind was boot camp graduates you go through a boot camp three months 12 weeks something like that and you know at the end of the boot camp they get they are all told you're ready to apply for jobs so if you use that as a guiding principle of these people went from zero to developers in 12 weeks what did they learn to the point where the people that run these bootcamps feel confident that they can apply and if you're doing a full stacked uh kind of bootcamp you can look at the technologies you can you know find friends make friends online in communities online like the cod academy community or in the stack overflow any any other communities that too find people that have gone through boot camps and asked them what the syllabus was okay we learned html css javascript react node.js uh express.js bootstrap and we built like a back and front then we did a portfolio and then i got told to start sending resumes out if that's what they got told then that's the line that's what you that's the line you need to cross like whatever you learn in a bootcamp that is expensive or online on coursework that you found online learn those things and start applying because if they can do it you can do it too there's no difference between them and you if that's if that's what uh you know if bootcamps feels like that's the qualifications you need then don't stop doubting yourself that's it that's that's where you have to be don't worry about it like bootcamp graduates usually build like one big project at the end like a capstone project like then yeah how many projects you need one big one people get jobs with one big one like what else can i say yeah it's um that seems to be the the equation here the algorithm the winning strategy i'm doing the full stack course i'm going to get i mean okay yeah so i guess um okay so we got last two questions it's 11 59. okay so last two questions we'll go through them quickly number one is they're doing the full stack course on card academy will this prepare me for web dev jobs in the industry is it more as a supplement than primary course so either one of you that work with developers if you are familiar with what the full stack coursework is a code academy what it teaches more or less would you say that that is something that is preparing people to to be developers or do you see that more has a secondary source of knowledge that they should be looking for someplace else to learn to code i think that's kind of the question is is the full stack path uh you know is it deep enough yeah is it enough what do you think based on your experiences i'd say it is um so i i'm also in the full stack path by the way i didn't finish it yet but i'm working so that tells you something um i'm this is a personal preference i like to explore different resources as well so um when something was not clear from the from the full stack uh path that i was following in code academy i was checking the same information elsewhere that's mda and there's like a bunch of other resources online so definitely uh do as you wish it is well done though yeah yeah i have a degree i think the one thing if you if you really if you want to bolster it i'd pick probably one area in the full spec course and go deeper into that make sure you've got that so you have one thing you could say and within the full stack this is really what i what i like to focus on so that you've got one strength area that you can talk to because like what lorenzo was saying earlier i know a couple of people that officially have the titles of full stack developers and they both laugh and say there's no such thing as a full stack developer so no especially the funny thing is that developers working they are the first ones to say that like they think they're full stack developers they get a first job and like you can ask them like a week later and they go like no i'm not a full study i'm a frontend developer and they themselves will like retract attractive time but yeah i think the way that where that also plays into it this may play into the person's response also is that if you get into an agile team that's meant to be crossfunctional with a lot of different capabilities and skills that whole team together is probably full stack developers right because they've got the knowledge all together and so you just have to be able to provide a slice of that knowledge to that team to be valuable okay and last question let's see somebody asked what are your opinions on internships are they worth the sacrifice of time and financial opportunity cost so i guess some internships are not paid some internships are you know they take you for three months or something like that and it's just experience but they don't pay you and it's just timeconsuming obviously because you could have done something else with that time uh what are your opinions on on these kind of internships and is it a good way to get a job it's not should you do it should you just focus on getting a real like a fulltime job i think internships can be can be very good but they should always be paid if the company's not going to pay you for an internship then i think that's already showing how they're going to value their employees and i don't think that's probably a company you're going to want to work for and i would expect that they probably will exploit you and it won't be a very good situation that's just from what i've heard from the industry i wouldn't recommend taking a nonpaid internship you can get some real value from internships it's a great way for you to get your foot in the door in a company um see what they're doing they'll help you and bring you up to speed in their industry and their area of expertise and usually often that will lead to a job right after that so you may do your internship i guess i don't know if you're in college in your junior year or something like that after your senior year if things went well during your internship you will likely have a job offer from that company if they like to so that that makes the process much easier so i do recommend them in that aspect alright so yeah i can check on crystal totally um it's a put in the door and well in my case i took a pay cut right going from a fulltime position to an internship i went through an internship um that was definitely a pay cut did i learn something yes uh more important to me it was um well i could write on my cv or resume uh i am a developer at this company right um and that says something to the market to the industry right you are a developer at that point you are working as a developer and someone is or maybe is not paying you but you are working as a software developer in a professional environment and that is kind of key in my opinion okay i think there's this uh these two main things with internships that you might want to think about because remember that when you're in when you're interviewing for a position you can interview them too you need to make sure that that it goes both ways it's not just you begging for a job you also have to make sure it's a good fit for you and for your goals i would say two things about the internships uh number one is when you are going through the process ask them if these internships are structured in a way that there's a chance for you to become a fulltime employee of that company some companies look for internships and they have a very structure like internships and you go away and some other companies they do tell you if the internship goes well there's a there's a good chance that you will get a fulltime offer at the end of your internship so figure out if the company that you're trying to intern for has this kind of a work opportunity and number two there's a difference between internships when you are a working professional and when you are in school if you are doing a let's say a fouryear university degree and you are in the summer between your second and third year any internship is gonna be better than just going home to to enjoy summer like if you go home and all you're gonna do is just play video games and go and go with your friends it would have been a better use of your time to go that july and august somewhere to a company and i had an internship that would have been to uh to to just do nothing so that's a different setting if you're already a working professional and you're going to take a pay cut or you have to like quit your job to be this intelligent that's a big asking to do but it's totally different you're a student you're a student yeah internships are great that you might get a job afterwards they'd say hey we love you when you graduate let us know right uh okay well we are over time so we are going to call it a day we've been here for an hour guys can you believe that we'll be here for an hour it was a breeze it was a lot of fun it was nice talking to you all nice questions yeah all right anybody anybody on the channel uh you're a few in the could academy discord you know hit me up you'll find me there you can if you have any additional questions you want to ask um whether it's related to working for the government or whatnot feel free to hit me up all right well thank you both of you and i'll cut well lawrence or any final words no i was just saying same for me like feel free to get in touch on on discord that's quite a good channel i'm not super responsive lately because i need to learn a bunch of things with my new job so um yeah excuse me excuse me for that but yeah i'll try to try to answer yeah all right awesome well thank you everybody and we'll catch you on the next live stream we're always doing live streams here on the youtube channel on code academy so just keep an eye out subscribe all that good stuff and join our community and find the chapters i mean you both have a chapter right the helsinki chapter and also the scrum clock chapter so keep an eye out for the chapter events because they are awesome and they are hosted like every month so also go to our community.com dot go to academy.com and join our chapter page see you everybody bye bye bye yeah that's it