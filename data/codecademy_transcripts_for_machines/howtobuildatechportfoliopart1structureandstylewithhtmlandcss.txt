three two one all right and i think we are live welcome everybody we're celebrating national coding week with live coding lessons throughout this week i'm ferian community manager at code academy and this with me is ben senior curriculum developer code academy i'm going to be telling you a little bit about about then and then i'll hand it over to him ben is focused on building mobile development content like our ios developer career path before code academy he started out as a middle school math teacher uh teach for america and after that he worked as a program manager at nonprofit coding boot camp where he taught himself how to code since then he's been an ios instructor developer and a director of curriculum welcome ben thanks great to be here um really excited for this live stream i had everyone watching now live and hi to everyone who's watching the recording later i'm really excited to get into some portfolio building today so over the course of the live stream today we're going to be building out a tech portfolio using html uh and then adding some css to give it a little bit of style we're going gonna have another session on wednesday where we're gonna pick up where we left off and then take the portfolio to the next level by adding some javascripts to make it interactive with the dark mode if you don't already know that tech portfolio is your ticket to getting a coding job three can showcase your skills experience what makes you unique and the kind of coding projects that you're most proud of so really excited to be building this out for us here over the course of these couple live streams uh on friday uh we're going to teach you how to build one of our most popular portfolio projects that explores mba data so make sure to check out the portfolio projects page for some more information uh as we are going and building out our content here today uh feel free to ask questions so we're monitoring chat so you can see now people are asking how long the live stream is going for each live stream will be an hour so we'll have one hour of live stream on today on wednesday and on friday uh i can look and help answer questions we also have two curriculum developers lucas kenny will be monitoring questions as well and we'll take some questions as they come up while we're over the course of building content uh for uh more details on what we're doing for national coding week you can check out the link in the youtube description that you're watching from here so again super excited to be here to be helping build this out and showing you a little bit about what you can do with html and css so i'm going to go ahead and get right into it so i'm going to go ahead and bring up the codecademy platform right here and so what we're looking at right now is just the codecademy homepage now we're going to be building out our portfolio using the workspaces feature inside of codecademy uh if you have pro great you already have an account you can get right into it if you don't it might ask you to make a free account and then you can go and build your own space so i'm going to just click on this blank workspace and end up with whatever defaults we get here and i'll take the link that i get from this if you want to follow along as we're building it you can certainly do that so this is the link here to the workspace that i'm going to be working in you can either be following along here following along with the link as we're building things putting your own up or just watching to get a sense of what we're building here now if you already have some background in html and css fantastic you'll have a little bit more context for what we're building and why we're building it if you don't that's free too i'm going to be going pretty slow over some of the foundational concepts and really trying to make sure that i'm explaining how stuff on this left part of the screen ends up making a website so we're going from nuts and bolts to be building out our portfolio website now let's start here what is the portfolio website well why might we want to be building something so as i said earlier portfolio website's a great place to be showcasing who you are as a developer once you're ready to start talking to prospective employers now you can make anything a portfolio website some people have been very creative and done things like made a side scrolling games or portfolio website which is very creative it's most standard to have a portfolio that's just going to show yourself a bio and some list of accomplishments that you have with some links to projects you've worked on before i've actually we here at codecademy have asked our design team to build out a portfolio that they think represents a really welldesigned personal portfolio and this here is what we're going to be working towards in the live stream they built this here using a tool called figma and so that's a tool recently owned by adobe or bought by adobe that you can use to build out designs there are many tools that you can be using to build out portfolios this is just one of them uh it helps to have an idea in your mind of what you're looking to build before you get started you certainly can just start messing around and organically finding out how you want to be building your portfolio but taking the time beforehand to try to write out a little bit of what your end stage is and where you're going to will make your work a lot easier because you have that clear goal in mind so this is what our codecademy designers have put together for a welldesigned portfolio so we can see here that we have our bio section up at the top we have this header and footer at the bottom we've got some recent work that has our projects that has some links to where you can find them that has some nice images uh and that's our portfolio that we're gonna be working towards okay this is just what we're gonna be working towards for this particular live stream you can make whatever you want to uh you can have your own artistic vision that you're putting into what your own portfolio should look like so this is using a tool called figma we're not going to be getting into it a ton for all of the features and how to actually use sigma to build things in this live stream we do have a course on codecademy that goes into much more detail about ui ux design and figma um and i think we can get a link to that in the chat that you can take and look at if you're interested in finding out more about how to use this tool okay so sigma here we're just using as like a pdf so we're not going to be sharing this here with you but we're going to be using it as a baseline for what we're building okay so let's take a look here at where we're starting in our application so we have our initial workspace that is built out here we have our panel on the left with our html and we have how it's rendered which is our website now this is a website so we have successfully built just by clicking that uh new workspace button a website it's not hosted in the place that we can share yet and we have more information on codecademy about how you can actually put it and host it on something like github pages or your own server so that anyone can find it more easily but this is a website it has text it has colors it has some things that you might expect from it let's take a look at the html and figure out what exactly is this here and how does this work so we can see that we have recognizable text somewhere inside this mess of different colors that ends up on the right panel here this hello world shows up on the left side and on the right side as we change our text to say hello live stream and then we click the save and run button or which i've if i'm not moving my mouse i'm going to just clicking command return for the moment on a mac or it would be control return on a pc you can see that the text updates so all of this text here that shows up you can just update and you are building a website here with just editing some html so this can be whatever you want and then you're putting it together here so this here is the nuts and bolts of how you can be changing text around to make something appear in the website that you're building now if you look a little closer you'll notice that these bits of text look different from each other this one's bigger and this one's smaller why is that well if you look here in html you have these uh tags here that surround each bit of text so each of these tags stands for something this h1 stands for a header one and this p stands for a paragraph tag so how do you know what all the html tags and what they do uh they're looking online as one option or our codecademy docs goes into a lot of html details so you can see all of the different tags that are available uh within html tags or elements to see what can you add in and this is a whole big list of all of the different elements you can have inside here so we're seeing that there's an h1 and we're using a p tag there's a bunch more we're not going to talk about every element over the course of the live stream but this is one place that you can go and i'll just add the link in here or you can go and find uh information about all of the tags that we're using on our academy docs so an h1 stands for a header one a header one is a big tag and it makes the text show up very large if we have a different size header we can go and make this text bigger or smaller so instead of having an h1 we could have an h2 and that's going to make the text appear a little bit smaller this goes all the way down you have can have headers of size three four or five whatever you want to have different sizes of text get this little nice rainbow effect going down right here so a lot of different sizes of headers that you can make possible and then having a header four is really kind of the same size as paragraph so we can have our headers and then this here is a paragraph paragraph is the easiest way to make text appear in a document so you can add additional paragraphs and as you add additional paragraphs they come up next to each other so or they say they don't come up just next to each other they come up as new paragraphs where you have one below the other like you're making a new text other common tags that you can see is you can use these strong tags to make something bold and then you can see it make it a strong tag to make content bold and then you can see that this u shows up bold now importantly with html tags they all have a beginning and an ending so as we made this new one here we can see that it starts with this strong inside these angle braces and to show that it's ending we have the same syntax syntax being the way that we're writing things um except we have this forward slash before that lets the web let's your browser know that you're starting something a strong tag you have some content and then you're gonna end it so once you make one of these starting tags you're making a promise often that you're gonna end it with something and if you don't have it it'll start to get confused and you'll have some unexpected behavior that doesn't know when it's the ending of uh great so that's really the nuts and bolts of html you have these tags that need to start and end and they can contain content inside them there's a few more other tags in the boilerplate we can see one is just the big html tag that says we're going to start and end all of our html we have this head tag which shows a bunch of information about kind of the document itself so like the title and this here is how to show up on different devices and this here which we'll get to in a little bit is uh how we want our page to look and be styled uh this last one here body is a way of just illustrating what is the main need of our website what's in the body there so now that we have a little bit of a sense of kind of the nuts and bolts of html let's take this design here and start to actually be building it as this is the portfolio that we're going to be building out today hey ben we can see first that we have this text here yeah go ahead uh i want to jump in before we get started with this and the next section could you possibly make this font a little bigger on the editor so that people can see it better that is a good question and i will zoom in a little bit here which i think should help thank you so much yeah thanks thanks for that uh okay cool so now with our slightly larger font let's go ahead and get into starting to build this out here uh so first we'll go ahead and take this bit of text and then just copy this over into this header so instead of saying hello live stream it has some more information about the portfolio person that we're building out here great so we've gone and added that content in right here so next we want to go ahead and take this bit of text so it's a little bit of a bio again we're doing it for this person if you're building your own portfolio you should be writing except describes yourself for your own interests and that shows up just fine as well all right so far so good we have this here which is going to be a link so some kind of button we haven't talked about that yet but a common way of having links show up if you want to click on something and have and be able to look at something else is to use what's called an anchor tag anchor tags are shown with an a same thing here text goes inside and then you have the closing tag to say that you're done adding your anchor now by itself this doesn't look different you know it's not a link it's just text and that's because we need to give it more information about what should happen when you click on it so far each of these tags we've been adding has just been the tag itself it's also possible within a tag to specify more information about where you want to be going or about anything else about the tag that might be relevant we can see up here some attributes already that came inside so this link has an href and a rel has two attributes we're going to do the same thing for the anchor tag and we're going to use this href to show what should happen when you click on it where should it go and this can be whatever website you want so we're gonna go and just put in that we're gonna go to codeacademy.com and now we can see that this link shows up and it's a thing that we can click on when we click on it we'll notice that it navigates us to codecademy now i cheated a little bit because in these editors it's often uh hard to navigate directly so if you try to put a different link like google you actually get some kind of error here and this is because we in this environment uh we are still within the codecademy ecosystem so we can't go to and embed those other websites what we can do instead is we can add a target attribute which says what should happen when you click on it and blank means open a new blank tab and go to that website in that new blank tab instead and so that's a common paradigm you'll see with links is i don't want to interrupt all the work i'm doing i just want to open in a different tab okay so uh good thing from chad good question yes you can use either single or double uh quotation marks for any of these links in here it is best practice to pick one and be sticking with it uh you can see our defaults here has been that we come with these doubles so i'm going to be using that as we build here but it is a very good note that either of those works with uh html other languages are different so some languages handle those differently where you have to use i think they're only single or only double and be consistent okay so now that we have this link built out and we want to go and add in this image here uh to add an image we're gonna break the rule that i just said where you have a starting and an ending tag because images don't really have any text that go inside them for all of these tags we've had things in between the paragraph here or for this header too we've had text that goes in between that for an image we really just want the image itself so we're going and we can just add the source here to say where should the image be so the image here we're going to say that the source for it should be it can be anything any image that you want from anywhere on the internet so if we go to some free image hosting site like say pixabay we can go and look at a free royal royaltyfree image take that image and then add it into our application so this image can be any image you want and we can see that immediately shows up in our website right here okay so now that we have an image and we might want to make it the actual image for our portfolio again this is the image i'm using if you're building your own portfolio you should be using your own image here so that you can have your own picture on your portfolio so we'll go ahead and take this image here which i will put the link in just in case you want to use the same one and then we'll go ahead and add that to our portfolio great so now we have all of the core elements built out from this diagram right here now if you were building this out and say you're working at a company and your design team handed you this and said we want you to build a portfolio page or website that looks like this and you delivered them this website and said well i did it it has all the content that we should have that probably look at you quizzically and say what are you talking about like this doesn't look at all like we said even though the content uh is all there it looks very different from how this bit of content is supposed to look based on the design that we got from our design team and the reason for that is because we haven't added any styling to our page so our page has the basic styling that just came with this workspace we need to edit that so that our page looks more like the page that we wanted to that we built out from before so we can go ahead and take a look at the css to figure out how to make that a reality we see on this left panel we have all of the files that come prepackaged in here as i'm looking at i see this is untitled we might want to call this something like uh portfolio so that we can go and find it later this comes prepackaged with an index scripts and a style so all of these are files that come with our portfolio so we can go ahead and look at any of them and then change them to modify what our portfolio is going to look like back when we looked at this link we saw that it was using this style.css href here this uh style.css file which we actually have right here and the reason why we have this black background and white text is because we're specifying it right here we have a background and a color that are actually specified inside this file now we don't want it to be black and white we want it to be mixing along here with what we have from our page here so we want to go ahead and then add to change the background to this color right here so we'll go ahead and change the background and that will make the text show up as the same background color that we have from this link here but the text is unreadable because the text is still white we can see it's still there when we go ahead and move our mouse over it but it's not showing up in a way we can see so we're going to go in and then change the color to be this darker color here and then update it to be this not quite shade of black but this kind of darker blue color here that we see now if you're new to this year like what are all these letters doing here how does that specify a color so what this means is that we have uh it is called hexadecimal which is one way of specifying colors so we can go ahead and look at the color here and there's actually a few different ways that this can be rendered hexadecimal is a base 16 number system which shows you one way of understanding colors you could also see the same color for just how much red green and blue it has that's relevant here so there's a lot of that depth that you can go into with adding colors we have more of that in our ui ux source for now we're just going to be using these text colors as colors and then going from there okay so now this is looking a little bit better as compared with what our original design was but it's not quite the same so one big thing that's missing is all of our content here is top to down so that's not really what we're looking for we would like this here to be side by side instead so that's what we're going to try to build out so how can we make our content appear not just like top to down but side by side another thing that's not quite right is this image feels way too big so this image here uh is like much bigger than this image here and this text here is too small this text should be a lot bigger so we have a lot of information that we want to change about this so far we've just been changing things in the main body now we want to edit this file not just inside this but come up with a new way of specifying that the styling should be different we can do that using something called a css selector that's going to look through all of our html file for something that matches the selector and then apply a different set of styling to it how do we do that we see one example here this is a in element selector which is looking through our html for all of the body elements and then changing what their styling looks like if we want to make this heading bigger like it is here this heading is much bigger we want to find a way of saying hey take all of these h these h2s these these things and apply a set of styling to make it bigger we can do that by using the h2 element selector and then specifying that we want the font size to be bigger than it is already now how do we specify making that bigger so we can say that it's a certain amount of pixels so we can use that as a baseline we can make it really big and see here okay well that makes it huge so we could play around with pixels and then we could be figuring out the right size there a more common way to be using units for these is called a rem or rem and so that stands for a relative m which is relative to the base font size of your whole document you'll see pixels thrown around you'll also see rem as a way of measuring contents uh in this case it's about 16 pixels so that should give you a kind of rough frame of reference but there's no exact mapping so it depends what font size you're using so we want to go ahead and make the font size bigger here so instead of just having the font size be one rem which is about the same size as the text we're gonna make it three times as big and that looks a lot better so that matches up a little bit more with our text here so it's not an exact process right um but the going back and forth between the document that you're building and then the kind of design that you're trying to work with will help out and give you a sense of how you should be editing the file as you're putting it together the next thing we want to do is make this image a little bit smaller since it's a little unwieldy right now it kind of takes up the entire screen when you're looking at it so we're going to go and we're going to constrain this image size by having a selector for our image and we're going to make the size a little bit smaller here so instead of having this kind of like very large image size with whatever just happened to come with we're going to specify that it should be exactly 320 pixels and that's going to resize the image immediately here okay so now that we have our image set we want to go ahead and put these things side by side so that they're not just up and down but match the design that we're trying to go for with this link here how do we go and do that well we can go and specify that we want these things to be laid out using what's called a flexbox we're going to just touch on the surface of that there's a lot of different uh depth that you can get into but we're going to go and use that as a way of making our content appear side by side to facilitate that we need to specify what bits should be next to each other kind of this image is one bit and everything else is another bit so we're gonna go and take everything else and we're going to wrap it inside of a dib a div is a kind of container that doesn't make anything appear on the screen but as a way of organizing our content to say that certain things should be grouped together so nothing will happen differently when we run but now our content looks a little bit different here okay so now that we have our kind of div set we want to specify that everything in our that all of these things should be next to each other but our body element is going to have our entire website and we don't want to try to be saying that everything in the website should be next to each other we just want to have this bio has its own separate block of information how do we do that we can use what's called semantic html to be adding a new section here this is a way of differentiating our contents so that as you're reading through you'll understand what kind of content you're looking at this is especially helpful if you're uh if you're looking at content or reading content with a screen reader that helps you organize content because maybe you're not actually looking at it you are having something read it back to you so having these bits of organization can make it a lot easier to understand what uh how your content is organized as you're going through it so again nothing changes but now we have this section now we can specify and say that we want this section to be laid out in a way that's side by side there's going to be a little problem later once we get to from the way we've done our css uh points in chat if you can go ahead and see if that's uh what that problem might be but we'll go ahead and come to that once we get to it so we're going to add next section yes please come in someone had a good question about uh section the dib and the image being in between the section and the dip tags can you maybe elaborate a little bit about that sure so we have uh you're saying we have a section tag and the div tag here yeah there were the user was wondering why the image stack is not inside the dib and it's in between the section and the div that's a great question so as we build this i'll go and show what the differences between doing that the short answer is our div is a way of blocking out that all of this content should be grouped together the image should be grouped separately and those are kind of two different blocks when we're trying to move them around that's how we want them to play let's take a look and see what that does as we add in our flexbox because i think it's a great question so we want to take the whole section and we're going to say that the display is flex as we do we can see that the all of the stuff we put in the div appears to the right of the image now what if we hadn't done that and what if instead we had gone and blocked out so that the image was inside of the div if we had done that we can see that we actually don't get that behavior we were looking for the image and the and the text is still below each other because we haven't structured our html to know that these are two different categorizations two different groupings of activity that's an excellent question uh the best way to explore those things with uh any html is to just try them out and get to see how the behavior changes but this question the answer is because we want to be grouping these things together so that it moves around on pages great question um okay so we'll go ahead and put this div back and this little shortcut is quite useful if you hold down the option key and then just push up or down you can move whole rows up and down which is just an easy way if you want to switch things around okay so now as we look at our website we can see that this content is appearing side by side which is fantastic but it's really tight it's like this here is right up next to this which is kind of not fantastic so we want to add a little bit of spacing between the image and the text so that it looks a little bit nicer how do we do that as we go into our css file we can take this image and specify that we want a little bit of spacing uh between the image and then what comes next to it uh traditionally this would be done using something like margin right we can also use what is called a logical css operator proper or property uh which is a way of specifying uh how content should be laid out that also works with content that's supposed to reach from right to left so most content reads left to right some content reads right to left like hebrew or arabic and so being able to talk about that content using logical css attribute can be helpful all that being said we can specify that we want the margin inline end to have some distance and we can say it's four times whatever this kind of base uh text size is here and that's gonna go and add that padding so for all intents and purposes is the same as changing kind of margin uh the margin right property this is a way of handling it just in case we want to add some more internationalization okay so now we have most everything sorted except our button is still just a link instead of this nice big blue thing that we had here now how do we go and change that a big part of working with css is just kind of iterating at things until you get something looking the way you wanted to so we can go back to our anchor tag and we're going to want to add a little bit of styling here so we're going to add some styling to this anchor tag so that it's going to show up a little bit different do okay so we're going to add some styling here so that our anchor tag is going to be a blue button that looks a little bit nicer than before okay how do we do that so we first are going to go ahead with adding where is it okay to say that we want the text decoration to be none and this means we don't want to be underlined or anything like that so that's going to make it look more like we want we're then going to want to specify the background color here or the text color so the color of the button text itself should be this same as a background color and then the button color is the shade of blue and that's the background of the button here note importantly uh all of these different uh css attributes need to end with a semicolon if you don't have that everything starts breaking and it doesn't really understand what you're trying to do so lots of good coding related memes about missing semicolons this is certainly one place where it comes up and we've been using all these hex colors because that's what we've just had in our design file you can also just write in colors here that you know different shade of blue but these here can just be colors that you specify okay so it's already starting to look a little bit more like the button that we have here uh we then want to go and see change our button to add a little bit of padding so we get that spacing so we're going to go and add padding to it to say we want no left or right padding but we want a little bit of padding or sorry the opposite here we want a little bit of padding left and right but we don't want any padding up and down we're going to instead want to set the height property to specify that this thing has its own height that should be respected when we add in a height nothing actually changes right away and that's because the default display for an anchor tag is inline that means that it just tries to shrink as much as possible to fit in with content if we wanted to have that height respected we need to change the display to something else in this case we'll change it to inline flex which will then respect the height property we can see that the height property here is uh being respected which is fantastic so we can then go ahead and change the uh but the alignment's wrong excuse me so we want to go ahead and align the items to be at the center and then this is nice and centered and then the last thing we're going to want to do is go ahead and change this border radius so that it looks more like a circle and we can do that by changing the border radius attribute and we could do something like say 1.25 great there's lots more playing around we could do this still doesn't look exactly like it we can be changed between the font or the font size boldness but this should get us in a good place to go okay so this then gives us a pretty good start at what our initial bio looks like here uh before we go on and start adding to another section and exploring a little bit more we can do with our css selectors uh let's see that are there any good questions from chat that we're looking at we definitely have a few let me let me give you some for example somebody was wondering about captions with the images and if you had an image with a caption how would that affect the divs that you're using with the image i think they were wondering if we would need two dibs or we just read one dip with a caption that's a great question so let's say we had text that like belongs to the image we would then want to put the image and the text inside the same div so that it moved around in one block that's a great intuition from the question for because that's how that works there yeah and somebody was also wondering if there's a trick to remembering the difference between a margin and padding oh there are many many tricks i can say the best trick is uh always keep a codecademy cheat sheet on hands uh and then you can reference that for any for any uh anytime you have questions about it but honestly the best answer is just practice uh the more practice you have building these things out and going through and kind of like learning the material the better equipped you're going to be to be working right great okay and one minute one last question yeah are you reading the question about the uh the default alignment i was going to talk about the one about the padding the go ahead for the alignment oh yeah uh i'll read your question for this question first uh your the users are your elements are aligned vertically by default in html on your elements inline by default when you use flexbox they're wondering about alignments in line uh it's a good question so i think generally inline elements are just going to show up next to each other and that's going to be the defaults for like how things are in line i'll just refer back to we've got lots more content on like flexbox and alignment and there's a lot of jump that you can get into i'm sorry to go check out our content for more information there uh great okay so now we've got some uh we've got our basic page built out here so we're going to want to go and add in some of the recent work below and you'll see also as we're starting to scrunch this this image does get a little scrunched because i'm a little bit zoomed in we'll talk at the end if we have time about one way of handling that which i think is a pretty neat solution to that problem okay so we want to add in some recent work so we've got this recent workstation so we're going to add in another header so we're going to take this recent work we're going to go back to our index and we're going to add another section that's going to reflect our recent work so we're going to have a header we'll say that's another h2 we're going to call it recent work and then when we go it's usable again we can see that appears great so we've got a recent work set up then we're going to want to go and add in some more of this rich content we have below so we have an individual so inside recent work we have a bunch of stuff we can use semantic html again to be organizing our content and say that each of those is going to be an article inside that article it's going to start with another header that's going to have the title of whatever it is that we're working with in this case that's text message analysis for that first project but notice when we go and build this something a little weird happens instead of showing up like top to bottom like the question was coming up from before uh we have this appear like to the right like all weird looking the reason for this is our css was implemented a little bit naively we were talking about changing how all of the sections worked we were talking about how all of the anchor tags were supposed to be displayed that was actually a little bit too wide because we have a new section but we don't want this section to have flexbox maybe things inside want to have that laid out but we we have been too uh over generic for how we've been defining our css properties so now we're going to need to do a little bit of refactoring so we can add some more specificity one excellent tool we have our dispos at our disposal is the class attribute a class attribute is a way of giving more information to a specific bit of content you have so we can take this section tag and say that it's class is going here to be bio now nothing changes when we run this it's still just the bio but when we go back to our css we can then specify that we want not every section to be just a flex display but only a section that has a uh class of bio now we can use a class selector by having a dot beforehand and then the name of the class and when we go and run this here we'll see that our text message analysis now appears below this which is where we want it to show up great while we're at it let's do a little bit more refactoring because there's another couple of those cropping up uh we've noticed that we've changed all of the images but we probably just want to change the profile image and we've changed all of the anchor tags but we probably just want to change the button that we have at the top so we can fix that by adding in some more classes more relevant here so we can go and take in this body we can take this image and call this a profile and i've been a little bit lacks here for making all of my quotation marks match so we can take this profile image as a class name quick uh what's this not like uh spacing i think so it does give you warnings which is helpful as you're trying to build things out and get an extra space in there profile image okay so again nothing's i say nothing changes but we've lost our image let's go ahead and make sure there we go so we have an extra there we go okay so it's helpful to be able to use the editor because it'll tell you if you've got any syntax wrong as you're writing it okay so now we have this built out we have our image that we can be specifying and we can do that by going back and saying we don't want to talk about all images just these profile images an app can go and change this sizing oh okay um let's see great so now we've gone and added that here because this kind of keeps well we'll get we'll get to that okay so now let's go in and add some of our recent work so we'll just go ahead and learn a little bit more about some html elements that we can be putting in here so inside of our recent work section we want to be grabbing all of this content and then just displaying it in roughly this form to the learner so i'm going to go and just add what's called an html comment which is stuff that doesn't actually show up but it's just a way we can be using to be organizing this material we can then go ahead and then add this here as a paragraph tag and then just be slotting some of this information in so that's a paragraph we can make this feb show up as a strong tag like we talked about before to make it bold and then we want all of these things to show up as a list we can do that by uh we could do that just by trying to like put line breaks behind them and doing it manually it's gonna be a lot easier to use what's called an unordered list which is another html element which will go and just display any list items with the li tag as uh bullet points you can even then specify that you want list items to be appearing a little bit differently uh depending on how you want your uh for your website to look also note as i've been doing this it's standard to be indenting content as you're encountering in here and then last we want to link to this github repo no longer comment and then we can go and add in a link which is just going to be a reference to whatever link we have for this project we can just say this is that uh uh say github's academy page slash code academy and then we'll do the same target blank thing so that it shows up where we want it to okay when we go and build this again we can see that we have this looking up but we can see we didn't actually remember to change our anchor styling so we still get this big button for both of them that's not what we want so we're going to go back and then add in a class here to this profile anchor to have it instead say that it's a button then back in our css we can specify that we want the anchor tags to only apply the buttons now we should have uh only things that should be buttons show up as buttons great loading we'll figure it out okay sure okay the last thing we'll want to do is just add a little image to this uh and we can do that by just adding another image we looked at how to find images i've got this one stored here you can use whatever image you want and so we'll go and take right below kind of the bottom the repo we'll go and add an image that has a source that has a selfclosing tag and it can be probably way too big my goodness that's a large image here so we want to go and specify how big these images should be uh just like we specified that there are profile images we can actually give this kind of image a way of talking about it by calling it something like say an article image and then constraining it from there first we'll need to go back to our css and then say that this here is in fact an article image then we'll want to go and say how big should this actual image be here and right now it's way too big so we're going to make it a little bit smaller so we're going to go here on to our image and we'll give it a slightly more reasonable size of say 512 pixels and so again that's the width property and we'll set that to 512 pixels okay much more reasonable now that it kind of shows up like this size and then the last thing we'll do on this part is we'll go and just make similar to before the image show up on the right instead of the lefthand side to do that we're going to specify that we want all of our articles to also have that flex layout so every article is going to have a display of flex with a semicolon and now this shows up next to each other but uh we forgot to group all the stuff together so it's trying to put all of them in a row so we can go back to our index and then change this to make all these bits of content grouped together and this back and forth is like a hundred percent the key of what development looks like is that you make a change it changes something you go back and you fix that change or make it look more like you wanted to okay one last thing that we're going to work on here because this has been bugging me throughout it and probably has been bugging you if you've been looking at it is my goodness this looks terrible with the smaller screen size doesn't it and our platform makes that very apparent because you know with this kind of two window layout but this image like is all scrunched you have to scroll over like this is all like uh it doesn't make any sense if you're trying to look at this on the phone it'd be a terrible experience you'd have to scroll to the right on your phone and see all the content that wouldn't be a good experience at all uh another weird thing is if we make our page bigger it also looks kind of weird like this is all going out all the way and like kind of takes up too much room the last thing we'll do is we'll fix those couple issues and we'll do that by uh using what's called a media query so media query is a way of specifying that you want your website to look different for different sizes so for this bio we can say that we don't want the bio to always be showing things next to each other if the screen's really small we actually want the things to be on top of each other so we can add a media query that says in cases when the max when the width of the page is below say 10 24 pixels we can say that the bio should not have a display uh should have a display of flex but its flex direction shouldn't be a row which is default but should instead be a column and then for smaller pages it starts to make a lot more sense and you can kind of breathe out a size relief as this actually looks like a real website you can look at it on the phone or a small screen from the bio section so that's immediately a lot better but this part still doesn't make any sense so we're going to want to give the same treatment where we go down and say that for articles we have another media query we're going to specify that the max width for anything that's 10 24 pixels or smaller articles should also have a flex direction of a column and that's going to make this appear a lot more reasonable one thing that'd be nice is if we could change this image because it's like kind of weirdly not picking up as much room as it could so we can give multiple things specificity inside these media queries we can be taking article images and saying hey if you are inside uh a really small phone you should actually just take up as much space as you can just take the full width of the phone and then this will make the images uh show up and take up a lot more space once we add in our units always important adventure units so now the image size is and it looks like a much more reasonable browsing experience the last thing that we can go and kind of fix up is that we want this to not all be like taking up the whole width of the page but maybe just like part of it so we can take that same magic 10 24 pixel number that we chose and then specify that for the body we want the max width of the body to be that 10 24 pixels don't take up more space than that even if you're happy to be on a bigger browser window so when we expand this out now we can see that it looks much more reasonable and again there's lots more that we need to be doing to make this kind of match up to what we were trying at the beginning like we could add some more padding here this uh styling we could change for this year we could make this bigger or we could add the lines in so it's a neverending project to be adding all of the styling that you're interested in but this gets us to a much reasonable more reasonable approximation one quick thing we can do that will make it nicer though is to just be adding uh some centering so we can go and say that using the margin and the auto feature we can say all of this should be centered so as you build out and make your website all this content is centered and then because it's bugging me we can add a little bit of space we could do other things like add more spacing here line in add more recent work so there's a lot of depth that you can get into but we only have an hour this live stream to talk about all of html and css for portfolio so we're not going to be able to get into just everything but we did review a lot so just talking taking a minute or so to go over what we have learned right here we have seen all of html or a lot of html and what you need to be building out the raw skeleton of a platform right here so we looked at how to use divs to group things we looked at how to create headings and paragraphs and sections and lists and images to be putting the building blocks of our website together we then saw that that kind of how it looked didn't match how we wanted it to look even though the content was all there it didn't have the right feel to it so we went and added some uh css to make this match the design that we were interested in seeing so we went from our design and then added in different coloring and we made things different sizes and we could lay things out in different directions and we could even specify things so it looked differently on different size devices so lots of content that we went through right here um we've learned a lot over the course of the lesson here and i'm excited to see people back on wednesday when we go to be adding some javascript for adding a dark mode for some more interactivity so with that i'll go ahead and hand it back to better thank you ben uh let's go through a quick couple questions before we end the live stream um there were some good ones here so somebody was wondering about the code that you've been using for the whole workshop and if that's something that we're going to be sharing at the end or it's something that you need to update at the end and maybe you can just explain a little bit how people can get to that code uh sorry uh if you are interested in the question if you're interested in looking at the code from this yeah the workspace they wanted to make sure that they are gonna you know have access to the workspace or where do they get the code yeah yes so i'll put the link up again the link to the workspace is inside the chat from youtube that link was right up top i'll go ahead and put it again right now so if you're interested in looking at the code we ended up with you can look at the link that's right in the youtube chat great and another question that somebody had earlier in the stream was about creating these portfolio projects and they were wondering what are your recommendations for somebody that might not have such much work experience or degree experience but they still want to showcase some of what they know when they are looking for jobs and internships your projects are more valuable than your work or your experience on portfolios like you can have as many degrees as you want to but the question people are going to be asking is what can you make what can you build so portfolios are great places to be showcasing the kind of work that you can produce as you're putting content together yeah okay great well with that thank you everybody for attending today's live stream i hope it was fun and useful experience for all of you if you want to try more content on your own just go sign up for a free account at codacademy.com we'll see you there tons of free content online plus all of our community spaces ready to help you out when you have some questions don't forget to subscribe and to follow on our social media whatever you are in instagram linkedin facebook twitter etc uh that's the best way to stay up to date with all all new content for example next week we're gonna have some exciting web3 content coming out so follow us online to find out just when that content on web3 drops thank you again and i'll see you all wednesday for part two of this workshop thank you ben thanks so much we'll see you there okay livestream is