hi this is Pat with code Academy I'm a web developer based in Washington DC if you're new to tech or you don't know how software gets built this video is for you I'm gonna give you a highlevel overview of the development cycle and hopefully clear some things up for you you're in the right place if you want to know how product managers and project managers work with designers and developers to turn ideas into great working software by the end you should have a better idea of how everyone works and what their tools techniques and processes are let's get cracking who's with me sometimes you just need a basic understanding of the development cycle and how ideas start to when they get deployed and if that sounds like you you've come to the right place it can be confusing to separate where one team members focus starts stops and where the overlap is where is the product manager in all this when do they hand off to the project manager how do designers and developers work with each other to bring their ideas to life if you'd like a more detailed video about what a product manager is and what a project manager does check out the video description below where we'll link to some of those videos but for our purposes here we're talking about a highlevel overview of the entire development cycle so for this video we're gonna cover three main themes the first being from idea to deploy the development cycle we'll do an overview of the development cycle and how product managers and project managers get to work next we'll talk about developers and specifically how do developers work with designers how do they work with project managers and product managers we'll wrap up by talking about the tools and processes associated with agile development cycles specifically sprint planning backlog grooming and retros will cover Kanban boards epics stories and tickets and finish off with gits github pull requests and quality assurance there's a lot to cover so I hope you're hungry for our video imagine we have a fictitious company we'll call kitten Academy where new cat owners can find answers to how to raise healthy and happy kittens will use my cat Albus as our mascot next it's been decided that the priority is to create a feature on our website that allows users to schedule video conferencing between new cat owners and real veterinarians to answer all their questions they might have we need to go into the roles of how this feature is going to be broken down and let's start with product managers think of the product manager as the captain of the ship they're in charge of the direction the ship is headed therefore a product manager has three main priorities a highlevel focus stakeholder management and overall product success you see depending on how complex a product is product managers will need to break up the construction maintenance and oversight to their subordinates usually project managers but a product manager can't be everywhere all the time so they're counting on project managers to facilitate a number of things that need to happen for ship to both stay afloat and complete the voyage for our kit and Academy project a product manager is in charge of overseeing the buildout of the video conferencing feature to do that they delegate to the project managers to break up the build out in two steps designers and developers can focus on now for project managers they have to work with the stakeholders above them to set their expectations maybe features thinking longer to build after her engineers discover problems in their build out phase or maybe feature has unexpected complexity that needs to be addressed before a subsequent work is done in the design phase if the product managers focus needs to stay high level they're counting on the project managers to tell them if they're on course or if something's come up that needs to be taken into account the goal here is to not be blindsided and project managers oversee the buildout so things stay on track and go as smoothly as possible so here the project managers job is to push up the chain of command both good and complicating things to keep in mind when courses are being set and promises are being made for our kid an academy video conferencing feature this could be broken down like this the design epic user flows and how should the feature work from screen to screen another design of it could be how should these screens look to a user a development epic how will users create accounts sign up for appointment slots and manage their appointment and another development epic how will users be reminded of their appointments how will they join the video conference call next we need to talk about how developers work with designers features often and should start with a design team there's a joke that goes weeks of programming can save you hours of planning get it designers typically start with a design thinking and build out user flows to chart out how we user will interact with the application while there's some visual design that happens in the initial phase it starts with wireframes before getting too polished and branded then a developer will get these designs and ask questions about how a design is supposed to come to life this might seem straightforward but there may be timeconsuming work for simple features so designers and developers need to flesh out what needs to happen this could mean pushing back up on the project manager that a feature might need to be added at a later date or broken into smaller steps for example the designer chose to have a list of available veterinarians from a dropdown for each timeslot seems civil right spoiler alert it's not to a developer this means they have to maintain a database of who all the veterinarians are that signed up for this kitten Academy service and that means building a different application that allows veterinarians to sign up and set their availability again this admin application is entirely separate from our kitten Academy application so we just doubled our bill time for one nice to have feature so the developer here needs to flag to the project manager that this functionality is out of scope given at the amount of time they need to complete it this doesn't mean it's not a good idea or that it won't be added later just that if we want to launch kitten Academy the search feature might not be included or will find a creative way of tracking those appointments it might not be the ideal solution but we can build an iterate off it once a project manager understands the challenge they have to see if they can get the developers the resources they need to accomplish it if there aren't enough developers to work on this feature they might have to approach the product manager for pushback being able to select for a dropdown a specific vet is a great idea but it's gonna take a long time so the project manager relays this feedback to the product manager who deems the ability to select a specific veterinarian noncritical to lunch so that's a highlevel overview of the development cycle but there's a lot of tools and processes that we haven't talked about let's start with this sprint cycle there's a couple of parts of the planning phase first there's gonna be Road mapping where we estimate how long things will take to build and what team members will be available to work on it and whether or not we should be working on it at all next there's sprint planning where we inform the team members what's going to happen in the next release cycle and what the priorities are gonna be the actual Sprint's themselves the development cycle in action this is where our team members roll up their sleeves and get to work but there's also backlog grooming and this is where we look at other issues that might have come up or are related to what the team is working on but might not have been a priority maybe bugs are flagged or problem areas came up that needs to be upgraded from sometime in the future to actually being worked on the next sprint lastly there are retrospectives or retros where the team will come together and talk about what they should keep doing what they should start doing and what they should stop doing in the next sprint one way teams keep track of who's doing what is with a Kanban board a Kanban board is the most popular way of keeping track of priorities and issues during a sprint in an agile development cycle Kanban boards visually depict work at various stages of the process using cards to represent work items and columns to represent each stage of the process two popular software companies you might have heard of that specialize in this are Trello and JIRA but plenty of teams just start out with good old postit notes all you really need for Kanban board are columns and cards to keep track of what stage a ticket is at now once we are using a conman board we have some terms to run through that map out how the Kanban board works relative to the sprint an epoch this is a highlevel task for our example we want to allow users to sign up for kitten Academy story a sub ticket of the epic examples would be build a user interface for users to sign up for kitten Academy build a dashboard for users once they've signed up to manage their appointments and allow users to store and update information about their kitten a bug an unforeseen issue that creates problems for our users an example would be stop international users users with international addresses should not be able to sign up for kitten Academy at this time because kitten Academy is only available in the United States these are general models and each team tends to have a different way of doing agile sprints and minting tickets to suit their particular models next we talk about the code workflow specifically get github pull requests and quality assurance what do you do when you have more than one person who all need to work on the same codebase at the same time the answer it version control management it is a tricky piece of commandline software but it also has a user interface software that developers use to track for changes to the application using this version control git is used locally to push up changes pull down changes and track changes to a remote repository although git is used to manage your code it's not actual code itself even though it can feel like it at times but where does the code go once it's left your machine the answer github github is a popular remote code hosting solution used by many developers both individual and teams it's worth noting though that although git and github share the word get they are two separate pieces of technology confused yet let's try this git is for tracking changes on a developer's computer github is where those changes lives so that others can download the same code and work off it popular alternatives to get up our bitbucket get lab and SourceForge once the developer is done working on their feature they can submit a pull request for others to review it and make sure won't conflict with any other code someone else is working on this is also a chance for other developers to make sure the code written is done in the correct manner consistency is key so most developers like to see the same naming and programming patterns as the rest of the code in the codebase think of a pull request as a request to add your code that show someone what changes you're proposing side by side with the current state of that code once the feature is complete and theoretically it could be absorbed into master it's best practice and a general good idea to have it tested by someone else to make sure it works in a different environment than the one the developer used to create it most teams have special quality assurance copies of the real server the code will eventually live on to stress test the codes they can find any the bugs and not the users for example we could have a server we call kitten staging which is identical to our live website server so that we can deploy without fear of publishing a broken website then either another developer or a dedicated Quality Assurance engineer will test all the number of ways a user might use the software either correctly or incorrectly and if it passes this stage it goes live this is Pat with coke Adam II hopefully you have a much better idea of what the development cycle looks like for teams today but did I answer all of your questions do you have any more like or subscribe or leave a comment below because I love responding to learners comments and questions check out the video description for some helpful links that I had mentioned in this video but if you're ready to take your career to the next level come on over to code Academy and we'll help you get started