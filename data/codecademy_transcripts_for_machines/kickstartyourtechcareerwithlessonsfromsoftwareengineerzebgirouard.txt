go live okay well we're live thank you zep for stopping by today i think i want to start by asking you the basic questions if you can introduce yourself tell me you know a little bit about your background and what you do true um so i'm gerard i work at codecademy on the content platform team so basically we're responsible for all the stuff that gets submitted to codecademy so many quizzes articles uh lessons things like that um so that's what i do currently before that i was teaching at a boot camp called general assembly about a couple other odd tech jobs um here in the states but before that i was teaching english in taiwan wow wait so you go from english teaching english to teaching at a boat camp okay that's that's a bit of a gap uh how did that happen yeah i i guess i described it as like uh if you sail at all like when you're sailing you're supposed to attack which means like you go uh kind of towards the wind to the right and then to the left and to the right and to the left so that way you're not facing directly into the wind so it's kind of the same thing like my my parents uh were both teachers and i was i know i don't want to be like my parents let me go get a math degree and then uh i graduated in 2009 which wasn't a great time for getting jobs so my way to to find some meaningful work was to go abroad to taiwan and teach english and then doing that for two and a half years i started to miss technology so i came back to the states and worked at a software company called netbrain and then another one called in bravada and then i was feeling the other problem which is well now i miss teaching because i'm doing all this technology work so luckily at codecademy those things have kind of come together nice so coding teaching teaching coding yeah i mean do you was there any point where you thought well i guess since it's going to end up being a college professor or something like computer science like what's that kind of like what's that point in your life where you're like i want to teach and i like code this seems to be the only possible way yeah i i think again probably the main reason that that didn't happen was uh graduating university in 2009 meant that that's what all my other friends were doing and i think it seems like there is a pretty large amount of people who are going back to school and getting a second degree because the job market's still not where it should be um and i just didn't i didn't want to be part of that mass of people going to get a doctorate or a law degree okay i mean fair i guess just sometimes yeah it's just uh it's not where you see yourself and it's better not to try again so you try new things i mean it takes some some guts you know to uh go in a different direction like everybody else like you probably thinking maybe i made a mistake maybe maybe this group of people had it right and i should have seems like it worked out certainly in the beginning yeah i mean because i uh graduated college and i i could get by with spanish and i could speak english or looking at you know places to teach english in latin america instead and the jobs just weren't there um the school year was the opposite so they ended up going to taiwan red didn't speak any chinese at all so it's definitely a big culture shock to just get kind of thrown in there um yeah they're definitely in the first couple months regretting that uh decision i was a little bit scary but uh towards the end that i wouldn't trade it for the world nice that's awesome you um did you always see yourself once you were going to the coding down the coding path the technology that you use nowadays do you start with those or was it more like an exploration of trying different programming languages and different uh fields and then sort of like realizing which one interested you the most yeah there's certainly a lot of exploration i think i made a lot of i guess mistakes in the beginning just trying to figure it out on my own and i while i had friends who were coders i don't know that i had a mentor so i was just kind of like trying whatever would work um and then you know i'll make a i'll make a game in python i think one thing that i made was like a pizza falling towards the hungry character like okay cool i guess i did that pizza's falling eating right then you get 100 points and you win um and then it kind of pivoted towards web development for i think a couple reasons the first one is it's just so easy to see what's happening in web development you save something refresh the page and oh cool it's blue now right and then on top of that exactly exactly whereas if you're kind of more heavy um like python java things like this like you can make a chess game but it's not as obvious like how you would make those chess pieces show up um they immediately show up in my development um in general assembly um i was lucky enough that the general assembly had started uh their new office in denver just when i moved out there and that's the first the first course they always have is the web development course so that kind of pushed me even further in that direction i think that that's a very common theme with a lot of learners at code academy is that when they start to learn something like python or even web development at the beginning at the beginning it's very dry you learn html you learn css it's a very vanilla you don't really you see the big websites from big companies and all this and the social media places you are in and they're so sophisticated and a lot of people want to get there quickly and it's it's not always it's not very obvious the amount of learning you have to do or how much of it or it can be it can be a little bit of a hurdle to it for people to to visualize where they're trying to go and stay with it so that's why i was curious to know how you got into web development because uh you know a lot of people say well i started with this i did a bit of html javascript but it got boring or like you know by the time i got to the react part i was just like not interested anymore um did you when you were learning did you do anything to stay motivated like finding online communities or having any sort of like people to talk to or were you just like selfdriven do you have any any advice on that um i think the biggest thing that i found is is trying to find the skill uh that that you see in demand either in your workplace or or in a position that you want to apply for and something that that you want to do so if somebody's trying to get into web development and they're like oh well react in angular those are two different frameworks i'm not sure which one i should choose but you're seeing a lot more job opportunities for react well then you have a reason to do it not just to grow but also uh this this can keep me growing if i'm going to find a job where i can do it 40 hours a week it'll it'll put a little more i don't know jet fuel behind you so you don't have to just be selfdriven and rely on yourself i think the that's one big thing um the other big thing that um when you were saying like how uh how did i end up in web development i think a lot of that was hackathon driven to be honest you know just going out and meeting people and building random stuff and that i think kind of informed uh well i want to make this fun hobby project with a couple other people um and that's that'll keep me going too you know another couple months working on this project that i really like what technology do we all decide on oh cool that's the one that i'm learning on codecademy right now or something like that that's cool it's um i think the hackathons help a lot for people that are very um sort of like results oriented and i know that you touched on how you went to web development because you can immediately see you can refresh the page your change is there um and i know that that helps a lot of people stay motivated is that when they build something and they see what the impact of it is and with hackathons that's sort of like the end point right like the point of a hackathon is you build something at the end so it really drives people to stay with it um i know that there's a bit of a drop off when people are learning and towards the middle where maybe it gets a little more dry or a bit more theoretical in in things with framework something is there um did you find anything in particular to be challenging or something that you say well i'm just gonna have to remind myself why i'm here or why i'm trying to do this or i mean i don't know if there's any shortcuts in learning some of this stuff like you just just gotta memorize it i guess um well i think the good thing uh the good thing about millennials get a bad rap right because uh we're so dependent on technology um but that's exactly what makes someone a successful developer is you don't need to know everything um but if you know where you're going to look to find it um then you don't you don't need to memorize all those things um and so i think that's the that's that's one thing that that really helps when things are getting um super dry like do i really need to study this well no if i have a couple links that i can go back to that's that's enough let's move on to the next thing let's move on to something that's a little more fun um i think that's a that's a big part of it um yeah okay yeah so i guess uh it's sort of like you it's okay to it's okay to just be scrappy with some of what you know if you if at least you know where to look for it later when you need it it's sort of like write it write it has a note like this is important and then maybe later when you're building something you need it and at least you know the sources of where to look and finish learning it or um yeah because i feel like sometimes when people are learning to code they see it as a very linear path and and that might be our fault too because of the way we present curriculum is like here's the star line and here's the end line but like you said a lot of times the way that you learn things and the way you end up in places uh you might you might be learning javascript and then maybe all of a sudden you're interested in the back end and you have eric curious about hollow by canelo you can back go that way then come back later finish the the end of the front end um so that that's a really good point about not being too linear in the way that you learn things and just kind of like go with the flow a bit um i'm curious um when you mentioned earlier the boot camp did you spend a lot of time trying to decide on a boot camp because a lot of our learners at code academy they're they're in that same spot they're thinking okay there's like 10 15 bootcamps in new york which one is the best which one is the one that's gonna get me a job um do you have to spend a lot of time thinking about that um well luckily for me there are really only the two options at the time um in in colorado that we're hiring there was there was galvanize in general assembly um and general assembly was was new enough that they they were trying to hire really aggressively um i think as far as as far as choosing which boot camp to go to as a as a student i think i can't overstate just how important having a good instructional team is and so often you know people try to make uh comparisons about oh well this company is better let's go to flatiron school let's go to general assembly um but there's so much to be said for the the people that are actually delivering um that curriculum and i think what i'd recommend to everyone it's kind of what i would recommend if you're job searching too is to have kind of a comparison attitude you should be looking at a few different schools and you should be interviewing them as well as they're interviewing you um see if you like the the people that are giving these courses and usually i know this is true for general assembly and galvanized um usually those teachers um that are actually teaching the fulltime boot camps or the parttime courses they'll do kind of oneoff either promotional lessons where they're just like okay let's teach you the very very basics of html and javascript like let's get a website that says hi you know that sort of thing um or they have open houses i've been studying here in new york i've been to i've been to a couple of those uh i found them on meetup.com i got just browsing around like oh uh this one bootcamp is doing some uh some like three hour workshop free workshop on a friday and like i would stop by and stuff and yeah it's like you said they showcase some of it like look at look at our offices and look at the desk and like here's what you would study and they try to really make it all like very cozy uh trying to tell you hey you know next cohorts next month yep yeah that's that's the big thing i would say is is look for the people like does it feel good when when you're being interviewed does does it feel natural when you see one of those instructors actually teaching and then and then choose that uh whatever feels right as far as the instructional experience you'll get does it matter the background that you have and i mean there since there's so many choices with boot camps especially if you're in a big city does it matter for example um how you choose a bootcamp depends on if you already have like this computer science college degrees that come out and they get a bookcon to be job ready versus someone that's totally new for to tech or someone that might have some experience with online courses that's does where you come from make an impact in the kind of bootcamp that you like i mean that you that will work for you or is it just always comes down to the people like you said um i think it does or at least there's an intent there uh i know that um the the galvanized approach was um let's let's get you into a parttime course or something that's a little bit easier so we can engage if you're ready if not let's give you another parttime course and then you'll be ready to start um as a way to try to differentiate learning levels um and i think i think turing does something similar um i can't really speak to other ones because those are the only three that i've ever worked with but um i think that it matters um but it doesn't necessarily matter in the way that people might think like uh i think the the most important thing is that those who have a background in something that's not necessarily development or engineering um they might have a lot of translatable skills to development um the the thing that comes up for me a lot but most people might not think of is like professional weight lifters or like people who are personal trainers um they're remarkably in my experience they're remarkably adept at switching that set of skills to learning how to code 12 13 hours a day because my thought and what some of them said to me is like well that's what we do you know we're working out every day you know several hours a day and we know if we don't hit whatever goal we're trying to set we need to come into the gym early tomorrow and do it again um and so that that i think really feeds into it well um as well but yeah i think definitely experience matters um i mean i was asking because um i was asking because i wonder i'm assuming that the basics of like if you want to be a web developer i would imagine that the curriculum in every bootcamp is like basically very similar and the way that you might decide like okay if you come from a background where you already know some tech or you're already adept at certain skills you might be looking for a bootcamp that goes a bit more fastpaced a bit more project oriented and like i'm assuming that other bootcamps might cover the material over a longer period of time or they might have more support systems in place or more peer reviews or whatever it is um i would imagine that those are all factors that that play into this bootcamp is right for me or that book comes right for me yeah and uh so the last course i taught at general assembly was called sei flex of software engineering immersive flex and that catered to a little bit more folks who are in development but not quite in web development or trying to make a little bit of a career change or just polishing up skills um and i and and those those offerings exist at other boot camps as well um so i think that's that's probably the big thing like do you want to keep your job or at least keep a parttime role while you're going to a boot camp and there are courses specifically for that i don't know if it's like company specific but um there are certainly core specific things and then my my wife also taught uh a react specific not really boot camp but it was i think three days a week for three hours on react so if you feel like you need to you just need those react frontend skills and you feel pretty confident in other things there's usually an offering that will fit into that specific niche okay all right so let's say that i chose my boot camp i'm going to it it's going to be hell it's like 10 hours a day of studying and then i have to do homework for the next day it's going you know it's all kinds of crazy um once you get towards the end of the boot camp and you're starting to think okay i got like two weeks left i should be thinking about what i'm gonna do with this how i'm gonna apply what i'm gonna do how do you leverage what you've learned at bootcamp or like how do you play it to the best uh in the best light so that you do get to the point where you land a job or something like how how do you use boot camps and what you've learned to make that that jump is there like a trick to it or it's just luck there's a few things that i've seen that work really well i think a lot of it is luck a lot of us luck in volume you know the biggest thing is uh like i said before applying to a bunch of places and and often so the first thing is try not to apply to your dream job first because you're unlikely to get that job right away you've got to go at an interview make sure your portfolio is polished um so it's it's not necessarily the most ethical thing i guess but like to go after a job that you're like if i get it i get it if i don't i don't um do that first so you can kind of shake out those nerves i think that's a big thing another big thing that i've seen people do which is really cool is actually work for that company like their final project is a proof of concept which is basically a longform interview for the company they want to work for like we have this problem uh we can't organize the lawn equipment for our landscaping company and we want a website developer we need to prove to um uh the ceo that it's worth hiring a specific web developer for this problem you know whatever um so there's been a couple things like that where somebody's final project was actually just piecing together in a week something that might work for another company and both times that i saw it they got that job um okay so i think that's a big thing and the other thing is just like lining up kind of like i mentioned before you know what skills are you seeing in these jobs what skills do you want to um investigate and make your portfolio about that um okay at a certain point it starts to make sense you keep seeing the same words over and over again well that's probably the technologies you should use with your projects and then uh like what kind of fun things do you want to build oh okay well it looks like these companies also build those similar things those are the companies that i'll spend all my energy on so just lining up whatever you see similarity in your personality what you want to develop with what jobs are out there okay so don't apply for your dream job first be realistic also build projects that are useful for the companies you're applying for try to build something that seems to be useful for their tech stack i guess what they're doing and then the third one is to just um be i think your uh volume you mentioned it's uh a lot of places definitely that and also and also just trying to so it's volume but like you said it's it's catering to every so even if you apply to 200 companies every time you apply for one you have to look at what they're looking for and what the the keywords are and try to cater for that specific one even you have to do it 200 different times right like don't just make one restaurant copy paste send it around that's not going to be has efficient or like has useful i guess do you have you seen anything in your in your experience have you seen any bootcamp graduates or do you know any booking graduates that have this sort of like imposter syndrome where they will go to a job and they will say well you know like compared to the workforce it's kind of like uh these these college graduates with computer science degrees and they know their stuff their master's degrees whatever like all i did was a few weeks of coding like you know like the impostor syndrome is very real for a lot of people to get into tech especially for junior roles so is that something that you see often and like um something that maybe uh any ways that people can sort of like fight back that feeling that they don't belong or like they haven't done enough to to get these jobs yeah it's um it's rampant and and i think the other thing is uh i suffer from the two you know as as the instructor in front of 15 to 20 students who are trying to learn development i'm supposedly the expert but i can't know everything um i think the there's a there's a website i can't remember the name of it but it's like am i a developer.net or something am i a real developer and it just there's like five questions on it and it's like do you uh make web pages like do you code on a daily basis uh are you a chemical that converts photographs into finished images like if you answered yes to any of those questions then you were a developer and i think that's the big thing is focusing on what you've done um as opposed to what you haven't done or what you think people are expecting you to have done those who focus on well there's four projects in the general assembly curriculum and most boot camps are similar you've got a few projects and and you polish those up and then you display them for potential employers and i think that's the biggest thing is to focus on what you've done what you're proud of and then keep doing more you know um okay there's no ideal like oh this is the perfect developer um especially in interviews what people are looking for is like oh well can you make productive code and if you have made productive code that's the best indicator that you will keep doing that i know that uh talking to other guests that we've had they also mentioned that your first job can be a critical piece to to fighting this impossible syndrome where you land at a company where you know your mentor your manager your lead your team lead whoever it is uh they understand that you're a junior developer you got started like they understand that there's limits to what people know and they kind of like take you under the wings and i give you the space to grow and to feel confident and to you know uh feel like the skills that you know you know and you really feel you feel it uh they mentioned that that's also kind of like very important that sometimes people will have bad experiences but they will they're so desperate to land a job anywhere that they would just pick whatever whoever calls back and and then they end up being in places where maybe they they feel like they're inadequate or they didn't know enough or you know there was there wasn't that that spirit of mentorship or or just like okay it's okay it's okay you know just got here give give yourself some time like so do you think that that when you're applying for jobs it's also important to sort of uh just like you said about applying for boot camps you have to find the right one i would imagine that for jobs you also have to sort of fight your instinct of just taking anything you're desperate for finding a job and just try to be a bit more uh picky yeah yeah my my coinstructor had a really good exercise that we would do towards the end of a boot camp um and they were all vaguely based on mostly his experiences he's had some very very interesting experiences um and some of mine but like this is a job you've got very little information coming through an interview um and he he described it as like playing a slot machine and so like okay you got these things coming up and like the cherry comes in a cherry uh cherry oh orange crap that's not what i was looking for um and i think that's true with any job interview you're like oh okay well it pays 100 000 a year that's really great that's what i'm looking for uh it sounds like uh they're using um react that's a it's a good framework i really want to learn that um and uh if if i go there i'm the only person coming into the office and there's nobody else there that really sucks so like that's the um okay like the bomb or whatever came down yeah on the slot machine and so just kind of addressing those those jobs where you go in and do you care about money uh do you care about um being in a culture that feels welcoming um i always uh i always define um what i call a bs matrix like what's the bs that you're you're willing to deal with and that you're not um and so if it's if it's something that uh you don't care about well then you don't care about it right whatever like if you're willing to work for 25 000 a year and you're saving the world then do that definitely do that um if on the other hand you really want the money but you don't really care about um a congenial atmosphere and you kind of want to do things on your own then go in that way um and so just kind of listing out those pros and cons i think is a really really big thing just get get your head around like what is the job i'm looking for but if you're coming out of a boot camp i think like learning has to be in the top three in that list money's great but if you don't have that ability to grow working with somebody who actually cares about your development um as a developer i think that's the that's the most important thing is just finding somebody who can uh sponsor that growth and the rest of it is kind of secondary because once you have that first job the gates just open up so many other people will be looking to hire you um so if it's not the perfect job but it was a great learning experience for a couple years then then you're you're basically done your career from now is wherever you want it to go and do you have any specific advice for when um junior developers might they might find themselves in situations where they are trying to buy more than they can chew sort of so to speak or maybe you're very eager and you come in and say well can you take care of this can you think of that and uh you might end up in places where it's a friday night and you're working you wake up saturday you keep working because you feel like you know it's all great it's awesome i love my job i keep doing it like some days afternoons after what after lunch you're working and um you don't realize that you're burning yourself out until like eight months later you hate your job and you think that development actually said what you thought it was uh do you have any advice for uh junior roles where sometimes eagerness gets the best of you or like the excitement that okay you made it you went through the boot camp you learned it actually worked your resume got through you got a job and you like it uh how do you sort of like rein in that enthusiasm and so like keep it in check so that it works more long term um so i ran cross country and track in high school and and what i'd say like if you're starting a new job um you don't want to run your fastest right away because then you set that expectation same thing in crosscountry if you're if you're running a 5k race and you give it your all on the first day well that's going to be your pr and and you're going to have to keep improving every time from that oh my god i was going so so hard that'll lead to burnout for sure if you show up in your first day of work you're already working 12 hours um and then you continue that through well there's only down from you're not there to start working 13 14 15 well now you're not sleeping um that's that's not healthy um so i think it's probably uh if you are working really really hard sometimes just kind of hide that or or to compartmentalize my first couple jobs i would um i would stay after late at work until seven or eight but those last two or three hours of the day were me going through tutorials and learning new things um so that's not going to it's not going to affect my my velocity when i when i check in with my team saying oh i got three bugs fixed today and i got one bug fixed today and they're like what happened to the three bugs fixed uh keep doing that same amount of work um to make sure the company is staying afloat and and you're making good code but you can buffer that if you really do want to go crazy grow with that with that craziness um especially if you're if you're younger i i know this has changed for me certainly now that i'm in my 30s like i don't really want to work 12 hour days anymore and i know that they're not really fulfilling but they used to be like i did actually really enjoy those three hours of tutorials like oh cool now i can make the racer go this way on my new web page this is really exciting um and then you get up and you do it again the next day and it's fine um so again if that's if that's the vs that somebody can tolerate if they can work 12 13 hour days i think it's just like don't go super fast off the gate don't don't go super fast right away um and if you are spending extra time make sure it's also fulfilling for you i guess those are the two big things hey that's fair yeah i like it i'm gonna take that advice too uh thanks so much um before we jump into the q a with the audience do you have any parting thoughts or any general advice that you wanted to share about learning self teaching yourself code going to boot camps landing jobs at the boot camps uh yeah i think um i have this i have this pet peeve and it started as a um as a math major and then i started substitute teaching and just hearing over and over again like i can't do math or i'm so bad at math uh and and when you're talking to an eightyearold and that's what they say like i'm i'm so bad at math and like you don't even know what math is yet like you haven't started learning calculus and physics and chemistry all these other things that you could do with math that you've given up here before you've got gotten started um i think the the big thing that i i would stress towards people who are trying to do a career change or trying to get into a new field is like there's no such thing as can't but there is such a thing as like oh i have these skills and they're much easier for me um than somebody else maybe and so to lean on those skills without that idea of like oh i can't do this thing um it might be harder ask yourself the question well how much time will it take to get to the level that you want to be rather than like oh is this the right field for me it's never that black and white um but i think that's the big thing is focusing on everything is possible but is it going to take four years for you to get to where you want to go um so listen listen to whatever fate has placed in your way whatever jobs have been placed in your way like oh well this is feeling this is feeling smoother but but never accept that idea that like can't is a thing you can always do something if you want to i think i heard somebody say um we're all different and we learn at different rates and oftentimes what happened what happens with this standardized education system that we have where classrooms are you know 50 minutes for everybody and the book is the same thickness for everybody and you know the exams are the same for everybody it's like it ignores that part that everybody is a little different the way that they learn store concepts and you end up if you don't fit that shoe basically you might be bad at math but really what happened is that you needed like a couple of extra exercises to practice with before you clicked maybe what you needed is like three more examples maybe you just needed two more hours of reading the material but you just weren't given that choice because there's like this standard one one uh size fits all and if you are unlucky not to fit within that range then you just you go around saying well math is not for me um so i know that i've heard in the past i would say you know yeah if you need to read it two times until one time what yeah sucks people that read it once and keep stay with it yeah they they they got it and they walk away but you you can read it twice it was going to take some more time but you can get there too so um i know that that's a that's a big one for learners at code academy it's like do i need math to codes like yes and no but don't worry about it because you can learn it like even if you don't like if the your question is not do i need math the question is can i learn the math i need and yes you can yeah right yep okay awesome so um i don't know if we have any questions from the audience let me check in the chat um someone asked at the very uh towards the beginning they said oh they were asking about learning python yeah there's a lot of resources online learning python code academy is one and there's many many others do you have do you have any like favorite resources online for practicing python for example is there any i know like kaggle for example for data sets and stuff um what do you do if you want to practice python um yeah i guess it's been a while uh i think the last time i i was doing i was probably doing it on on codecademy um and and there are definitely other other tutorials out there um i think the biggest thing is like if you want to focus on on data probably want to go towards something that'll that'll teach you pandas or some other like data visualization um library uh i think that's that's the only kind of recommendation i have um and then just the general recommendation which is do something that would be fun for you so if you're looking to make a game with python you'll find a tutorial that does that if you're looking for more functional programming paradigms or whatever you'll find a course that that'll that'll teach you that python's a it's a language it's a way to code um but the question is really what do you want to do with it and i think uh a lot of people forget that when you're looking for a class or tutorial nice all right so be uh kind of like uh project oriented with it uh sort of like you learn english now what novel are you gonna write right like you know the language what's the book you're gonna write what is the essay yeah you know the words now put them together i guess sort of a situation well um i realized that we're going a little over time so uh thank you so much for your time i think you have awesome advice today and i'm sure that a lot of people are learning a lot from your advice uh i'll love to have you back in the future if you want to i'll be around so thank you so much and i'll see you all in our next episode of live conversations thanks betty no problem and that's it