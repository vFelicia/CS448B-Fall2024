oh my gosh who's the first person we see befeathered garc√≠a lorca say hi everyone hello okay cool just wait a bit for everyone to get settled in I'm seeing ready for the swift coolness hi everyone this is awesome yeah just right in the chat your name and where you're from and what get started oh one thing about oh hi ELISA again hi Lena and Alex D they know everything hello we actually have a hold on one second you guys this is so cool we have this is it showing so just like a quick rundown and then I'm gonna go away I'm gonna fade away use the chat to chat with each other on chat you can chat to the panelists that's Alex and Galina or if you use the drop down you can chat with each other by saying all panelists and attendees that's the fun one and use the Q&A box for all questions okay that is so officially it from me thanks Alysa thanks Melissa okay I'm so hi everyone we have a poll actually to poll questions that you guys can answer as you're getting settled in this just gives us some information about you and who's joining us today so if you see the polling button at the bottom and if you click that you should be able to see two questions so go ahead and pull those out and then also just like while we're here we do have some resources I'm gonna post them in that chat so some of the resources that you're going to see in there it's gonna be a box a lot we have our learned from home day syllabus we have some customer support swift resources in general or learned from home blog post so I'm just guessing that into the chat now so we have lots of things for you to look at and feel free to ask for these again because we know that they're gonna get lost in this check is already have so many people see yet you should be able to access the lecture videos after this goes on and this is being recorded and then if you guys have questions the best place to ask that is that Q&A panel Oh awesome we have plenty of questions um can we add the links here yep sure I will add that add those links that I gave you right now what lessons have you worked on that's a great question on Galena I'll let you answer that first one yeah um so I've officially coauthored Swift they learned so of course with Aleks as well as Sonny he's also one of the hosts here today and Kenny so we've worked on that currently Alex and I are gonna be working on something called Kotlin which is really exciting and previously i also you may have seen me do a couple of project walkthrough videos in the Ruby on Rails course the Python course even the Java course so just a little bit of everything really great and then I've also I joined recently in January and I've been a part of the learn Swift course um yeah so as we go through this just make sure to write your questions into the Q&A and we'll get to them as soon as we can we might not be able to answer it right away as we're walking a lesson but rest assured we'll try to cover as many as we can if you will give just another minute or two for everyone to get settled in I'm seeing one I'm seeing a couple things saying that they can't see the links in the chat Oh oh thanks Leonard Leonard Leonard oh man hold me down all right cool I'm going away now great and then on yep they're also in that Q&A we answered one of those questions that's gonna be in there hmm let's see someone just wrote I'm not seeing Galena can you guys see me I'm seeing you Galena I see you I'm looking at the polls now there's a hundred and eighty three of you who know your way around a code editor awesome and how many of you want to be the next Steve Jobs 54 Thanks okay what time is it maybe let's give it to 1208 to reminisce yeah two more minutes sounds good so if anyone's here what course did you just come from is this your first course of the day were you in the the JavaScript course before let us know P 5 yes awesome we were there too so it's great saying that everyone's joining in from there yes HTML awesome first course hello welcome Python cool no there I saw a question there wasn't Python I think that that's just like the last course that somebody was taking yeah yeah but like I think that your question Alex was like which session did you just come from so it looks like people are really following the track right now yeah that's awesome so you'll have to see that Ellen wrote in the QA and not sure if I missed this which link are we supposed to go to to follow lesson yeah that's actually one that we're going to link to in a few minutes as we get started so yeah it was anything see what will we be learning Kaela just asked that and we're gonna be learning about getting started with programming with Swift so if you've never coded before this is gonna be a great course for you we're gonna get into some basics of how you start with a code editor and how you write programs using the Swift language so that is a great question we're super excited to go through this with you how many uses two Swift have in real life well one of the major ones you'll see this as a programming language for a lot of Apple products so a lot of app development comes but we're going to talk a little bit more about that in just a bit I also in advance apologize a little bit for the background noise I am from New York so there's quite a bit of background noise so let me know if you guys can hear me okay and yeah definitely a lot of Hong Kong yeah if you're in the West if you were in the last lessons with Kenny and Alex you hear a lot of sirens in the background that might be here too yes the police are also coming after us from Turkey cool do we get started ox yeah let's do it Oh awesome alrighty so I am going to share my screen okay can everybody see my screen this how's it looking into chats Alex look we have so many chats going on this is awesome okay great as long as everybody can see my screen yeah we are going to first be navigating to cook Adam EECOM slash learn slash learn from home conference we can post this in the chats as well all right so I just posted into something everybody okay here we go turn again alright so now you should be linked to that learn from home conference so everyone should be able to see that yes if you're logged into code Academy you should have access to this page it's available for everybody so this learn from home conference page is made specifically for today it contains all of the courses and lessons that we're going through throughout today's sessions so we are going to be particularly focused on number five which knows languages and usage introduction to Swift so you should not have any progress on these if you do feel free to keep it or if you would like to reset your progress and start from scratch you can do so as well there should be a reset button so after you hit start there would be a reset button at the very top of the course so I'll try to show you guys that once so if we click and from home I guess because I didn't start the content yet it's not here but typically there would be a bris reset progress all the way over here so if you can click that it should start you from scratch did everybody get a chance to navigate to this page good looking good we have lots of guesses in here um okay so as you're all navigating to this page we'll just take a second to officially introduce myself and Alex I am a curriculum developer here at the Academy I've worked on the learn Swift course and also worked on various different parts of the curriculum so I'm really really excited to be here with you guys today and then I'm Alex I've also worked on the learn Swift course and I'll be working with Galina on our upcoming learn Kotlin course I joined pretty recently in January but we're super excited to be here all righty so if everybody is ready let's get started so click on this hello world interactive lesson and it should take you to the very first exercise of this lesson okay we have some really fun artwork here too okay so what is Swift Swift is a powerful and intuitive generalpurpose programming language developed by Apple its development started in July of 2010 and it's versions still get updated today so much of the inspiration for Swift came from Pascal Ruby csharp Python and so many more other programming languages so if you know any programming languages and you're coding in Swift you may find syntax and concepts that are very similar to Alain which you're already familiar with so yeah the Swift syntax is very concise but expressive and it has modern features that make it the perfect first language for beginners and one experienced developers also enjoy transitioning into so its first version was released in 2014 with the intent to create applications for all of these products so since then hundreds of companies including uber and slack have incorporated Swift into their tech stack so as you can see we have this really cool gift on the right side and it represents all of the company Alex you not all of them but some of the big companies that you may recognize that use swift in their textile so why don't you go ahead and write in the chat which companies you see lifts Apple Google Maps Ritter this little bird over here well we have the Apple watch down here yeah okay so let's get started with our exercise just out of curiosity can you guys see the when I'm viewing the chat panel no okay all right so let's move on first exercise hello world so take a look at the hello duck swift file in the code editor that is placed in the middle of the screen so in case this is the first session that you're entering in your very new to Academy we're just gonna do a very quick runthrough of the learning environment so the learning environment is where you input your code you get instructions from us and so on so in the middle of the screen which is where hello to swiftest that's your code editor this is where all of your swift code is going to go on the right side to that is a black panel that demonstrates the output terminal so anything that we type into here as we click run it's going to run our code on the right so we're gonna get into more what this code is doing but just one minute to familiarize you guys with this entire platform so on the left hand side we have the narrative so the narrative explains the instructions teach us something and just the main part of the exercise is handled in the narrative and then if you scroll on down there are the instructions which are the points as we call them so as you go through an exercise it's going to have checkpoints to check if you how well you understood the concept it's gonna give you an exercise to do so yeah and as you're going to go through it you are going to hit run and it's going to check your code and click check if it's correct or incorrect and if it is correct it's going to mark this check box screen as I have it on the left right now so actually I'm going to make sure I reset this so that I don't have this checked off and you guys all show should have a gray box on the left not a checked off one okay all right so let's get started so take a look at hello dot Swift and the code editor that is placed in the middle of the screen it's a swift program so when learning a new language tradition suggests that our first program prints those screen hello worlds in Swift this can be done in a single line with a print statement so we'll get more into what a print statement is but just for now familiarize yourself with how it looks so everything inside these double quotes will be printed to the terminal and that's remember the black panel on the right and it's the window that allows people to interact with a computer program it should be blank right now but that's going to change in a moment okay and just a quick reminder here if you don't understand something at the moment rest assured we're going to cover these concepts more in depth as we go forward throughout the lesson I'm just gonna check on the chat for a second to make sure I'm or Alex how's it looking over there looking good looking good great okay so if everybody's ready to run their first program let's hit run and I've done that before so you can already see the output on the right notice how we just see hello world exclamation mark we don't see the quotes we don't see the print statement and we don't see the parentheses that's because the print statement is a special builtin function from Swift that allows us to output something to the terminal so here we're just outputting something that says hello world also one other thing I wanted to mention if you guys are running in into any issues like you're not able to pass the exercise even though your code is correct or something just seems not right do send us a message in the chat or the Q&A post a screenshot of your window so we can see exactly what's wrong and try to be as descriptive as possible in your issue so we can really help you up okay so if everybody's ready let's move on to the next step cool so let's talk more about print so we learned how to output a line of text with the following code I'm just gonna refresh my page um seemed I have some kinetic connection issues oh cool as soon as you see this connected to cook atom II you're good to go but yeah so we learn how to output a line of text with the following code so we actually did a hello world but here it shows you that you can use emojis too which is really fun so having a print statement that has a car and this like poof wind emoji is going to output just the car and the wind emoji so we can also output multiple lines by adding more print statements so if we have print hello and print goodbye as you should already have it in your code editor running it is going to output hello and goodbye so don't mind this error message at the bottom at the moment this is just checking my instructions so I can either in person yep domani know what happens if we add a semicolon to the end of one of these print statements someone's was wondering if it was an optional thing in Swift yes very good question so if we add this I'm just curious is that person coming from JavaScript because there's a lot of semicolons in JavaScript that's my guess it's probably the JavaScript one but yes good question so if you add a semicolon Swift is going to ignore it it's very generous with some of its syntax so you're not going to get an error if you use a semicolon but for the purpose of staying with best practices and having clean code I'm just gonna remove this because Swift will not throw an error without okay so yeah so these print statements something really really interesting about Swift code is it is read from top to bottom so I didn't have good bye hello printed I had hello goodbye because that is the way that I laid out the code okay so now let's get into doing a little coding challenge so instead of displaying the two lines in the code editor which we already did um edit the code so that we output the following pattern in the terminal okay so we want it to look exactly like this but in this terminal in the black panel okay so let's get started so the key thing here is the spacing so be very careful with how you space it I'm gonna try and use tabs you can also maybe try space let's see how that works out but as long as you're using one or the other staying consistent is key so we'll have a first print statement that's going to have our one a second print statement that's gonna have our two or three so let's start pushing these off yeah so when you use spaces and tabs it kind of creates this disconnect so make sure to use one or the other okay now that's one so I'm using one space between the digits but I'm using tabs to get from the opening quote to the ending quote and then we're gonna have or i6 push that back and then we're gonna have 7 8 9 10 ok so you see how now we have this little disconnect that means we should start with an extra tab in the front so I'm gonna tap this let's do one more hey Galena yeah you're doing that there I'm like I selfishly want the answer to this how do you type an emoji in a code editor from Gregg Garin oh yeah sure um so we actually have an exercise within an emoji in the next exercise so we'll get to that in just a minute okay so once we hit run we have our pattern on the right the 1 2 3 4 basically all the numbers to 10 that are laid out and kind of like a pyramid scheme so how is this one guys did you get the right answer great awesome yeah lots of yeses lots of yeses all right so let's move oh one other thing I'm not sure if I mentioned before we have this stuck get a hint feature which allows you to get a hint for the exercise without necessarily getting the solution from running the code multiple times so be sure to check that out if you get stuck and one other thing I'll mention here at the bottom we have this reset to circular arrows so you can reset the exercise once you click that it deletes all of the code in your code editor you can also share your code and you can also copy your code to the clipboard so if you want to flag any issues to us with your code feel free to use one of these options and then a few people asked is there any way to do this all these prints in one line of code instead of doing several ones and one of the ways you can do that I believe is backslash N and then that should start a new line and then you could do that with just one print statement instead of like multiple yes for now we're just practicing how to work with print statements so but yes normally you wouldn't want to repeat so many in your code okay comments we're on the fourth exercise almost done comments are a very interesting feature in almost any programming language so as we write our code our code can quickly become difficult to understand when we return to it even if it's just a few hours later I've noticed if I'm coding especially a long program and I have a specific ID in mind and then I go take a lunch break or I go for a walk and then I come back and I start to wonder what was I thinking what was I writing what was happening so this is where Commons come in handy so for this reason it's often useful to leave a note or reminder in your code for our future selves or other developers so comments explain what our code is doing leave instructions for developers using code or add any other useful annotations so in Swift there's two different ways that you can create a comment so you can create a single line comment which will comment out a single line and is denoted by two forward slashes so I'm going to just copy this code paste it in the editor as we're going through this you don't have to do this this is just for me to show you guys how it works and so here as you notice we have our two forward slashes so as soon as you put those two forward slashes so if looks at it and says well okay that's a comment we're not going to run on that code and you can see how it's grayed out so that kind of gives you a hint as to which part of it is a comment which part of it is actual code that the compiler is going to run so another thing you can see in this second option is you can also write a comment on the same line as you write your code so it doesn't necessarily have to be two different lines you can also add this prints hi on the same line as a print statement and oh yeah I don't want to interrupt yeah maybe finish that and then I'll come back with what I'm seeing in the chat okay cool um yeah so you can write a prints a comment on the same line as the code or a comment on a separate line but now unless I'm really curious what that question is yeah I mean I'm seeing this pattern of questions come through oh this is very similar to Python or this is just like JavaScript and then there's this question of like which one is this more like can you and/or Alex speak to the similarity to other languages people are like Paige yeah certainly um Alex do you want to take over yeah I could start off with some stuff so one thing is Swift as a type safe language and we'll get into type safe in the next in the next exercise and so that just means when we declare variables and when we use data we have to stick with the same type of data with our variables whereas Python you could switch things you could start python as a string and then immediately change your variable to a number but with languages like java and swift and that's gonna kind of give you an error yep so Julia said type Swift is a type safe language and when we declare variables we need to stick to the same data type Thank You Julia yes perfect and in addition to that also I'll cover just the syntax portion of it yeah so print statements also I believe exist in Python and so the syntax is very very similar and as well as in java scripts the way that a console dot log works it's very similar to how a print statement works in Swift so the syntax is very very similar in some ways but in some ways it's also different so the reason that's what the reason that is is because Swift was inspired by many other Pro any language is just like we've mentioned before so a lot of the syntax is very similar but there's also a lot of things that are very Swift specific just like Alex mentioned it being a type language so yeah there are some differences but also some similarities I also believe that comments with a forward slash are also written like this in JavaScript as well as the multiline comments so I think that inspiration came from JavaScript okay cool so where were we o multiline comment okay so a multiline comment will comment out multiple lines as denote and denoted by a forward slash asterisk to begin a comment and asterisk forward slash to end a comment so I'm just going to copy and paste this into the code editor to show you guys how that works okay so if I run this what do you guys think is going to output to the terminal getting a lot of highs a lot of highs is that answer going into Q&A maybe um I'm getting a lot of the answers in the chat right now okay cool um so guys oh um yes okay great somebody said nothing very quick so why nothing why do you guys think nothing will output to the terminal if I click run okay Barry yeah it's very good the code will print high but the comment won't print okay perfect very good great job everybody who said hi perfect yeah so we run it don't mind this error at the bottom for a second because that's just checking our code but yes the comment is not going to be read it's not going to run so we can put anything we want in here and look this can go as long as we want it to go hey there so we can write anything we want and it's not going to be interpreted okay so let's delete all of this and now let's get into number one let's practice adding a comment to create a single line comment with forward slashes followed by your favorite emoji so here's where our emojis come in so I'm gonna do two forward slashes and let's take a second for you guys to maybe google your favorite emoji or if you want to you can also grab one from the hint I'm not gonna open it cuz I don't want to show the answer but yeah grab an emoji and put it in the comment got it is it work to do ctrl command space does that is that how you're opening up your emoji menu oh yeah I remember there was a shortcut for it I'm not sure what that is off the top of my head what did you say was Alyssa on a Mac keyboard it's control command space all at once Brenton Jackson is saying on Windows it's a plus Oh control command space worked thank you yeah you can choose any emoji you want let's go with as literally all I have to teach ever at all today golina we also do have a question so with print statements doesn't matter if you use double or single quotes oh very good question yes it does matter so this is another key difference between well let's say JavaScript syntax and Swift syntax so I'll show you guys so if you do actually let's just type what the XV check wants us to type so we'll do a print code cat of me so if we hit run this should pass us and so with Swift your Swift is very particular with the quotes we are going to get more into what type of data type this is it's a string and so strings are only denoted by double quotes not single quotes as they are in JavaScript in JavaScript you can write a string with double or a single and it will get recognized either way in Swift you cannot if we put single quotes here we are gonna see an error on the right here it is so error single quoted string literal used double quotes so also the cool thing is if you run into an error error they tend to be very very descriptive so you can almost always figure out what the issue is but yeah great question okay are we ready to head on to our review awesome okay so we've gotten into the last exercise of our lesson so we've written a few Swift programs we've learned that Swift is a generalpurpose coding language that code is read from top to bottom that we can use a print statement to output something in the terminal we can also use comments to describe what our code is doing so we can use a single comment with two first slashes or we can use a multiline comment with a slash as in the beginning and an asterisk / at the end so something also very cool recently that we've worked on our cheat sheets so if you click this link here it's going to take you to a cheat sheet for this entire course so this in particular is a cheat sheet for the learn Swift course and you can basically review everything that you've learned in the course with this cheat sheet you can also download the cheat sheet printed it so that's very cool and let's head back ok so now we have a really fun exercise to do with you guys so before we move on to the next thing let's write a letter to your future self so in letter dot Swift let's add the following goals for yourself your name and today's date and then we'll click click run to mail a letter so this letter will be returned when you complete the course so this is referencing the original learn Swift course so just keep that in mind okay is everybody ready to write their litter okay so in letter dot Swift we're gonna start it with print do yourself and then let's do our goal for yourself let's say that's gonna be Michael and my name and today's date and today's date is the 10th and you can also paste in the chief or something let's click run ok so here we can see our letter on the right and once you complete the learn Swift course you're actually gonna get the letter back to you in the very last lesson so this should be fun did you guys write your letters would you want to share some of them in a chat that's a great idea also shout out to Morgan happy birthday thank you for joining us oh happy birthday Morgan learn Swift and have fun love it I went to finish the Python class cool eat lunch Oh should we take up a few minute break do you guys want to maybe grab a snack or something before we get started with the next content item yes okay cool yeah for sure how much time do you guys think you'll need well then I can try and do a poll real quick oh yeah that'd be great thanks Alyssa wait no overpromised can't do it it looks like the everybody's mostly saying five minutes so maybe let's just take five minutes sounds good we'll take a look at all the questions on the Q&A and we'll do our best to get them answered yeah and we'll be here in five minutes ready to start the next topic like 1242 like five minutes or like 1245 five minutes uh yeah whatever let's go with 42 yeah okay you guys restrict five minutes grab lunch grab your chargers okay I'm gonna take a peek in the key six I'm with so cool Singh everyone's time that's three you have some people where it's about 630 or twelve so shout out to the person with eight percent battery left the charger last minute yeah you're welcome Joseph we got you um we're resuming at 1242 well in like four minutes so some people are getting breakfast love it Wow 1014 p.m. 2300 38 p.m. Wow that's late mmhmm yes we are both in New York has 10% Joseph I'm trying to open the QA and it seems like I can't do that with when I'm sharing my screen Oh interesting I can get to them when Alex you go oh here we go we have a question when does this class go to how long are we going on for Galena oh very good question so this was supposed to as plan to be 90 minutes long so we started at 12 its 1240 now so we're 40 minutes in so we have 50 more to go and yeah so I think it should and right on time as we're going now yeah we'll also link to the next session as we're completing this one and then closer to the end we'll ask everybody if they want like a five minute breather in between this session and the next one that might let us know how left there is and then just just a reminder seeing some questions come through on chat it's easiest to get those answered if you put them in the Q & A because then galina and Alex can note which ones they've already answered so yeah oh don't be sorry Liam it's nice that you're asking questions I appreciate it so is this people's first programming language it is let us know or if you've been if you've been doing a bunch let us know which languages you used before we had a lot of nose and I guess Alice is fun PHP Python want pythons JavaScript I love JavaScript yeah I agree with that I also love how Swift shows a very concise error yeah that's definitely a huge plus what's left mmhmm um oh here we go we have a question that you might be able to answer Galena what are your favorite apps oh that's a really good one um that's from sunny who also helped write this course really that's from sunny okay my favorite app and I'm not biased is the code Khadem yeah that's a great answer you guys didn't know we actually have a Coke ad amigo app where you can practice all the content that you've learned it's free you can download it on the App Store and yeah it allows you to practice everything that you've learned on the course on your computer and yeah let's check it out and then one more question and then we'll get back to it what was your first programming language Oh my first programming language I think was C++ in college what am i you know mine was Python um so it's it's near and dear to my heart hmm what's your favorite programming language I'm gonna stick with Python yeah with Python but I also have to say like Swift is out there yeah it's same yeah so perfect yeah I agree with you Michael I love JavaScript I'm JavaScript okay is everybody back yes all right cool so let's get started so now now that we've taken a lesson we are going to give you guys a quiz okay you guys ready okay wait hold on don't look at the answers okay all right can everybody see this Alex sir is this is it showing yep I'm able to see it cool okay well wait no don't write the answers yet so the question is what would the ALPA be for a program like this so what would this print statement output choose your choice and you can just write it down on a piece of paper keep a note of it or something and then we're gonna go over those solutions together so yeah just give a few more seconds everybody see a lot of twos some threes okay all right let's go to the next one yeah somebody recommended muting the chat and writing it on a piece of paper so you can challenge yourself yes so don't look at the chat you can write it on a piece of paper and just look at the screen when I'm going to show you the question so let's move on to the second one which one is a single comment in Swift um you guys can also just minimize the chat if you want or just not clear close it somebody wrote I just came back to we finish variables no we didn't start variables we're actually just taking a quiz I'm gonna pop back into the first question to make sure everybody saw that one for a second okay I'll go to the first one when we're done with these two it's not letting me go back 400 okay here we are this was question one for anybody that missed it and gonna go back to question two okay and if everybody's down with question to the final question question three you okay are we ready to see the answers yes okay let's go so the question the answer for question one was this second choice so it wouldn't be the first one because we don't have a world in there it wouldn't be the third one because the quotes wouldn't go in there and it wouldn't be the last one because then it would be missing the last part of the string which I can't pronounce okay all right next one the answer for question two is the second choice so it's not the first one because that would run that's real code it's not the last one because it doesn't have any forward slashes in it and I'm sorry it's not the third one because it doesn't have any first I'm just in it and it's not the last one because that's actually a comment written in Python yes and you got it anybody know one more language that this comment is written in starts with an R yes Ruby very good cool got some rubyists here and then the last one question three swift code is read from top to bottom and that is true very good perfect john gerdes how many of you guys got everything right awesome job good job guys perfect okay let's move on okay so um something we've noticed earlier just a little blip if you click up next it might not yeah so we're going to skip this block letters project and we are gonna do a project today but we're not going to do this particular one so when you click up next just don't go to block letters we're actually going to navigate back to the course page and manually choose another lesson to go through I'm also gonna post that link to the next lesson in the chat yeah so if you're at this page and you're a little bit stuck just click the back button and should take you back to our last exercise no just refresh refresh fixes everything this is true you guys should try to get into the introduction of variables yeah so I click to learn from home conference at the very top and then if you scroll down and you can see that we've completed the hello world you guys should have a check Oh somebody said they don't have block letters next up is variables that's awesome great it may just be showing that for us but just in case that you do see block letters you can also navigate back and click variables here or you can also click up next if you have variables next okay awesome I'm gonna hand it over to Alex to go through variables with you guys great so I'm going to share my screen one second as we get this all set up sounds good I'm gonna stop sharing I'm gonna pop into the chat and the awesome so do you guys see this introduction to variables peace yes good Hey so let's see I'm gonna move some stuff and fantastic okay so let's just get right into this so before we learned with Galena of how to use a print statement and how a program runs and Swift from the first line to the last line but one thing you should know is that with the programs you know what we wrote before with hello world it didn't read anything or calculate anything or allow for user input and the fun part about programming is we can do things that are a lot more fun than that and in order to create programs that produce results based on input of the user instead of just outputting the same thing we need data and the thing about data is that we need to store it somewhere somewhere in our computer we need to take that our computer's memory and start storing data and to do that we need variables and a variable it's just a name that represents a particular piece of our computer's memory that has been set aside for us to store retrieve and use data and so we're gonna be talking about different types of variables as well as constants but one thing we should also talk about are the basic data types and data types are simply just saying what kind of data were holding and if you look at this screen in the middle we have this really nice chart and it has the type the usage in some examples we'll actually go over some of these data types and the first one we'll talk about is an int or integer and integers are basically whole numbers so you can see some examples we have zero we have 420 it could be negative five thousand so those are just whole numbers the next one we'll talk about is a double which is similar to the integer where we're using numbers but it's a floatingpoint number so we have decimals in it so some of the examples we have our 3.14 pi and negative 200 point zero okay next we have strings and those are just sequences of characters so for example that could be a whole sentence like hello world or it could be one word like code Academy you'll know you're using a string when you're using double quotes and someone asked this before is there difference if we use single quotes and double quotes as galina mentioned yes we're using double quotes for Strings and then the final type we're gonna talk about our bowls and those are truth values and there's only two types that you can have there's only two data that piece of the data that you can have in your truth value and that's true or false okay so we're just gonna continue right along and we're gonna move on to declaring a variable so whenever we want to use a variable we need to create it in our programs and so to do that we're going to use some code so if you look at this example over here we can see at the top I have this little code snippets that says var score equals zero and this code snippet is actually us declaring a variable but let's break this down a little more so the first thing we see is the bar keyword and so bar is a keyword that lets the compiler know that let's our program now hey we're creating a variable that we're gonna use next we have score and scores the name of the variable and this is just one specific variable we can name our variables almost anything so that's important to know next we see that equal sign and that's the assignment operator we use that to a sign of value to our variable and in this case the value of our variable is zero so again we just have that one piece right there bar score equals zero and so something to know is we could print out our variables now if we just use a print statement and typed in the name of our variable like we see over here print score it's going to print the value of our variable so you see how the output says zero it's not printing the word score it's printing zero because that is the value that the variable score holds and then over here we see a note and says variable name should be in camel case format what does that mean when you name a variable it has to be one word if you try to use multiple words or admin spaceless you're gonna get an error so in order to keep your code readable when you have a complicated variable name we use camel case and I'll show you an example suppose we were creating a variable called yearly bird population what we would do as you can see in my coded editor editor we start off with the VAR keyword and then the first bird was yearly and all of that's gonna be the lower case now the B though in bird we're gonna capitalize that and keep the rest lowercase and the P and population will also be capitalized so let's say we just have 10 so the point is that's camel case and that's just something you want to keep in mind will you get an error if you don't use camel case no but this is a really good way to kind of keep things readable so let's move on to those instructions and the first instruction we have is declare a variable named gear but the value of the current year so let's work on that so the first thing I'm going to you do is use that var keyword and then I'm going to type the name of our variable which is a year and then I'm going to assign it the value of the current year so I'm gonna assign up using that assignment operator the equal sign and then put in that year so 2020 and if you're in the chat key tell us what kind of data type we have going so far and there's no quotes or periods in it great so I'm gonna try and run this code and glean it what the answers are we seen yeah we're seeing int we actually have a really great question for type safety can I declare var test call an int and assign it later yes yes you can and we'll actually be talking about this in a little bit you'll learn the exercises that covers this so that's a great question but yeah because it's type safe and just with Swift we can just declare a variable without giving it data yet and I promise we'll go over that and it's an awesome question so I'm gonna run this code where we declare variable and it works and the next thing it's asking us to do is you're using print so I'm gonna start printing so I'm gonna write down print we're gonna have our open parenthesis and then I'm just gonna write year down so I'm gonna run this but we're gonna hit an error and it says it's an unresolved identifier year now the reason we hit that error is because I used a capital y in gear capitalization matters with your variable names if you use a capitalization and in one variable but not the other but you're trying to reference them as the same thing you're gonna get an error so that's just something important to know capitalization matters and there will be a point where you run into an error and that's gonna be the cause of it all right so you see I changed it back to the lowercase Y I've ran it and now our code outputs to the terminal and you can see in our output it says 20/20 which once again is the value behind our variable here okay well moving right along with this arithmetic operators in case you didn't know computers are incredible at doing calculations and since we've learned how to create variables now we can use variables with arithmetic operators to calculate things and the arithmetic operators that we can use in Swift are just like the ones we can use in our everyday life we have addition we have subtraction multiplication division and modulo and all modulo is is when you divide something and get a remainder it returns the remainder of that value let's take a look at this example we have over here this nice little code snippet so just like in the last exercise we declare a variable called score and we set it to zero then we have something that says score equals 4 plus 2 one thing you might notice is when we reference score after we create it we no longer need to use var in the beginning the only use bar when we create the variable after that when we want to call it or reference it we don't need to use var we can see that in that first line score equals four plus two for now score is going to have a value of 6 and now that next line we see score equals score minus 2 now I might trip you up because we're referencing a variable in the variable but all that means is we're gonna take that value of score which is 6 I'm gonna subtract it by 2 and that's gonna be the new back a new value so 6 minus 2 is 4 square now equals 4 moving right along the next one score equals 4 times 2 so now score equals 8 score equals 4 divided by 2 so score is now 2 and then score equals 5 modulo 2 so when we divide 5 by 2 it goes in twice but it leaves 1 as a remainder which is why the value of score is now 1 and something just to know with the order of operations just like math in real life it does respect parentheses when we use parentheses that's gonna be calculated first before anything else so we see this example score equals 4 times parentheses 2 plus 1 its first going to do the math of 2 plus 1 so that's 3 and then it's gonna say 4 times 3 so that equals 12 okay so let's take a look at these instructions in the code editor we already declared and initialized a variable called amount now we're going to declare a new variable named tip and give it the value of amount multiplied by point 2 all right and if in the chat let me know do you think this is going to be a double or an INT when I write this out I'll use that bar keyword all right the name of the variable which is tip we're gonna set it equal to amount times 0.2 unless I run this code let's see so oh honey we got that check because it works and now we're being asked to print out tip so let's see what that amount is gonna be so once again I'm just gonna write print and inside those parentheses tip and all its gonna do is give us that value which is 3.7 so we got a double right I just wanted to jump in for just a second we Highbury Rana who wrote in the chat for the learning important to remember that if you put any of these numbers in quotes it will be read as a string not int huge plus one two that Johanna plus one yeah you're right yeah so just like she's saying so we see this VAR apples equals sixteen in the code editor if I change this by adding those quotes we don't have an int anymore now we're working with a string if you have quotes you're working with a string okay so now we're going to talk about compound assignment operators so before we learned a little bit about math and how we can use it to you heat up our variable the values of our variables but now we have compound assignment operators and we use those when we want to adjust the values of our variables it's kind of a shorthand method of using arithmetic operators in a lot of ways so for example in the last lesson this is how we learned how to change a value using arithmetic operators so we see more age equals 99 and then the next line we say age equals age plus one so if the value is 99 and we add one to it when we print age in that next line it's going to have a value of 100 but we can use a compound assignment operator to kind of shorten this so I'm just gonna scroll down and let's take a look at this new code snippet and it's just like before we initialize a variable called age with a value of 99 but in the next line we say age plus equals 1 that's the compound assignment operator we're adding the value of 1 and then we're assigning that new value to our variable so when we print out age we're going to have a value of 100 and kind of similar to go forward here we had adding subtracting multiplying that's the same thing with compound assignment operators we can use those all here but with compound assignment operators so let's actually take a look at this in action so we initialize a variable called dollars and we give it a value of 5 in the next line we say dollars plus equals 4 so what we're doing is adding 5 & 4 and now the value of dollars is 9 in the next one we see dollars equals three so we have to think of it as dollars equals 9 minus 3 which is 6 then we have dollars x equals 5 so think of that as $1 equals 6 times 5 which is 30 we continue on dollars dividing equals 6 so that's 30 divided by 6 douwe is now equals 5 and then dollars modulo equal to so 5 modulo 2 and we get a final dollars value of 1 all right so let's actually practice this a little bit more with our instructions imagine we are the owners of a small fruit stem to start the day we have 16 apples and let's say customer comes in and they buy 4 apples let's use a compound assignment operator to adjust this value so all I'm gonna do is first I'm going to reference that variable so I'm gonna write in apples and then we're subtracting 4 so I'm gonna use that minus equals compound assignment operator and then we're subtracting 4 so I'm just gonna write that down and now I'm gonna run it so you can see in our output terminal or value is now 12 that's what Apple's is fantastic so continuing on another customer comes in and they purchase half of the available apples so we're going to use a compound assignment operator to reflect this change so similar to before I'm gonna reference apples and then since we're dividing by 2 I'm just gonna use divide equal 2 and when I run this we see now apples has a value of 6 okay so how are we doing so far right now galino do we have any big questions going on sorry I'm eating myself no yeah we're doing great I'm getting trying to get to everybody's question in the Q&A panel also peeking into the chats it seems like everybody's following along so yeah okay cool so we're just gonna keep going great job everyone whoo so now we're gonna talk about type annotation someone asked the question about this before so I'm happy we're getting to this so we can talk about it so we can provide type annotation when we declare a variable so we can be clear about what kind of value like what the type is but that variable will store so we talked about some of the data types before where we have the aunts the doubles the strings the bulls and when we want to declare a type all we have to do is we write out our variables when we're declaring it after we say the name of the variable we're going to add a colon and then the type so we can see over here in this first example bar artist colon string so someone asked hey can you declare a variable and its type without giving it its data yet this shows that the answer is yes we could just run this if we ran this code it would work and so again but what we're saying is when we do is sign it a variable when we do assign this variable of value it has to be a string and if we try to use something like an integer or a double we're gonna get an error so we can see over in that next line what we do is we have our artists and we assign a string value the next thing we're gonna say artist equals Daniel Johnston and Johnston Daniel Johnston is in quotes so we're giving it a string value now you could assign it you could do this with two lines like we see in that first example but when we look at that third code snippet we can see that we can assign the name the type and the value all in one line of code with VAR artist string equals Daniel Johnson and um as we said string as a type safe language one of the benefits of it is if you try to change the data type of the variable you're gonna get an error and that's just preventing other errors from happening down the line so let's take a look at these instructions declare a string variable named book with a value of just kids so what I'm going to do is I'll first start off with my bar keyword and then we're gonna say the name of the variable and that's book and it says we're gonna declare it as a string so what I want to do that I'm just gonna hide that colon and then I'm going to type in string and then we're gonna give it a value of just kids so I'm going to use equal and then just kids that capitalization was off great and one thing I do want to know before I run this we're gonna we're gonna get an error in the first one that's okay what happens if I don't use quotes around my string error so just something that you know if you're using a string you need those double quotes so I'm just gonna add those back in and you can see that as soon as I had those quotes the color of the text changes so that's a good way to keep you on your toes of knowing whether or not you're using the right syntax happen if you I'm just gonna pop in for a quick question somebody asked so what happened we don't declare it a string whoo so if I just wrote our book equals just kids yeah so this is gonna so when I run this it's not gonna give us an error in our code editor because of type annotation I not type annotation sorry type inference and that is that switch is automatically able to figure out the data type of the variable just by looking at when you give it so when it sees those quotes and something excited they're like oh okay this is a string so by all means this isn't a necessary part you don't have to use type annotation but this is a good way that if you want to you could add it it's just kind of a syntax preference umm you think that sums it up kalenna yeah that's great great um so just up to you but it's really important to know that you can do both so you can see that without using it I'll get a little error at the bottom over here that says did you forget to use type in answers yes so let's fix that so I'm gonna add in that string we're gonna run this code and let's see we had a green checkmark so we are good to go and one more quick note for everybody so you can declare the variable in both the way that Alex just did it or you can just do bar book equals just kids it would be correct in both situations but we want you to specifically practice with type a notation here and that's why we're asking you to use it absolutely thank you so much Galena okay so continuing on without let's declare an int variable names page count and give it a value of 278 so once again we're gonna use var the name which is going to be page count and note that page count is using camelcase because we capitalized that seeing count and then going to use a colon we're going to declare it as an int then we're gonna assign it a value of 278 so let's run this code and see what happens we get a check and we are good awesome okay I'm excited about this one string interpolation so sometimes we want to insert the values from our variables into a print statement and so what if we want to do that we're going to use some string interpolation so let's take a look at this value that this example that we have in our narrative so it says lauren albums equals 17 and underneath that we have a print statement that says Daniel Johnson has made backslash parenthesis albums studio albums when we run this code it's going to output Daniel Johnston made 17 studio albums I think this is super cool because when you look at this at first you're thinking oh it's going to print out back slash albums of course but not really because we're using um we're using string interpolation and what that does is it takes the value of that variable and it inserts that into our print statements and so we can see that the syntax to do that is just that backslash parenthesis and inside those parentheses we put the name of the variable and you'll notice that the color changes so when we use that excess parentheses and we reference the variable albums is in like an orangish color whereas the rest of the string is yellow so that's a good way to know if you're doing the right thing um just like this says this magic okay so let's take a look our first instruction is declare variable called age and we're gonna set it equal to our age so we're gonna start with bar I'm gonna name my variable age and I'm going to set it to my age which is 25 so we're gonna run this code and things are good to go and then the second question is with age setup print and use string interpolation to output I am eight years old but when we print it to the terminal we wanted to say I am 25 years old so let's get that going I'm gonna start with my print statement get those double quotes and I am so this is where we're going to add in our variable so I'm gonna use backslash open parenthesis and then I'm gonna just type in age and that's all we have to do and then let's continue on with the rest of our string so I am age years old and let's run this that period in cool so let me see the output of this it just says I am 25 years old and what's fun about this is we can change this let's say I'm actually 150 years old and let's see if we print when we run this it's gonna print that I'm 150 years old so again this is where it kind of gets a little bit more fun because we could add our own input into our variables and what it outputs okay okay so now we're gonna talk about constants in a few of the past exercises we were able to manipulate the value of our variables and that was great when we needed to change something but sometimes there's data that we don't want to change because it doesn't change so for example think of pi pi doesn't change so why would you let someone change the value of pi in your program so what we can use is something called a constant and a constant just makes a value and suitable which means the value stored inside it cannot be changed and when we want to declare a constant we're going to use a lit keyword so the variables we use var when we use var that means we can change our variables but if we use let that means it's a constant and we can't change those values you can see over here let pi equals 3.14 and as it says here why use constants it's used as a safety measure when we use it we're making her program safer by guaranteeing that we only change the values we expect to and then it helps us to prevent some potential bugs so let's do this now declare a constant named months and assign it the number of months at end with y okay so let's start this we're going to use the let keyword and then months and that's going to equal for January February May and July yep yeah that's it so oh for if I'm wrong it'll give us an error let's see oh it's right okay cool so again if we try to change it will get an error and I'll even show you this so let's say we're changing this and I want to say month equal seven when I run this code it's gonna give us an error error cannot assign two value months is it constant so again if you're assigning it a as a constant can't change it so that's just an important thing to know okay moving on you have a fun challenge to do and it's a temperature challenge um so let's write a program that is able to convert temperature from Fahrenheit to Celsius using this following formula okay so let's get started and we'll go straight to these instructions first search for the current temperature of New York City in Fahrenheit we're going to declare a double variable named temp F and initialize it with the temperature then we're going to declare another double variable thing temp C so let's see I'm going to first declare that temp F and we're gonna copy a double so I'm gonna use that and I'm gonna sign a double and I'm going to set it to you I think I checked it was 50 but I'm gonna just keep that for today okay so now we're going to declare another double variable name temp C so here we go barn temp c double you can see I'm not assigning temp C of value right now all I'm saying is this variable exists and when we give it a value it's going to be a double so let's run this code see how it goes and this worked awesome and it says convert the temperature to Celsius using the formula provided and we're going to store that result in temp C so I'm gonna have to go up so I can look at that formula so let's reference tap C so I'm just gonna write in temper C and we're gonna sign it to the value let's see Fahrenheit minus 32 so I'm gonna stick with those parentheses because that's important so I'm gonna write in temp F 32 and outside of those parentheses I'm gonna divide it by 1.8 and I like having spaces so I'm gonna just great cool so let's run this code see what happens and we got the green check so we are good to go guys and finally display the result using string interpolation and the output needs to say the temp is temperature C degrees in Celsius so let's get this going I'm gonna write out that print statement double quotes okay you temp is and I'm going to use string interpolation so let's see we're gonna cut that in and I'm going to write temp C ok degrees there we go okay let's see let's run this let's see what happens and it says the temp is 10 degrees Celsius so that's awesome guys we went through variables and by the end of it we were able to create a conversion program that changes things from Fahrenheit to Celsius which is one of my favorite things because I never know what the answer so now I can have my program do it for me job Alex um you guys want to take a little bit of break to let some people catch up just maybe one or two minutes a eyestalk a couple messages about people falling behind Oh perfect sounds good yep and I'll open up that chat so I can try to help in any way also um actually some of these we can probably answer together for from the QA degree do we need to specify the type of data also any constant oh good question I think the fun way then format is let's write some code yeah so let's see what happens let's say I say nope we're gonna use the lip so I'm going to say I'm just gonna keep it as name I'm not planning on changing my first name so let's see what name string equals Alex okay and actually what I'm going to do is I'm going to say name one so this is me I'm using type inference to kind of say hey this is my name there we go yep I'm gonna give it a tight so I'm saying it's type string but let's say we have a second constant and that's gonna be name too and I'm just gonna set that equal to Galena you can see that I'm not going to declare this as a string I'm just gonna let it be and when I run this code you can see that we didn't get an error so just like with variables you can give it a type in the beginning when you'd occurred but you don't have to because with type inference the compiler will automatically be able to figure out the type of it whoa what else are we seeing um yes Michael I you see me you're saying you have an issue with accessing the course are you logged into York Academy account I'll send up another link to it and let me know if that one works um a quick question for everyone including glia and Alex do we want to work in five minutes before the next session at 130 we want to take questions up to the last minute up to you guys still learners we just have one more thing to get through so we can use the rest of the time just to what the next four minutes just to finish this up and then answer questions how do you guys feel about that anyone else need a coffee break need to grab their charger you don't want anyone at eight percent this is like it's like really really mixed yeah it sounds like finish up and then what we'll do is we'll let one of the next sessions know that some people will be coming over a little later Oh awesome I'm glad you guys are having fun with this okay so what let's actually just go over to this last exercise and it's just a review congratulations guys you made it to the end so let's go over everything we learned throughout this lesson a variable represents a particular piece of your computer's memory that has been set aside for you to use by storing it retrieving it and manipulating it with data variables are declared using the VAR keyword um if you're in the chat can you change the value of variable yes or no um everyone I'm just pop in for one second so I'm seeing some people are having issues with their code so maybe let's do this send your code into the QA that way I can answer one by one and we can try to figure out what's wrong and why it's not able to pass but yeah just submit your code into the QA post the entire code and let me know what the issue is and with the error messages now I'll try to help out well thank you Galena okay well continuing on constants are declared using the let keyword so to those of you who tried answer that last question you can change the value of the variable constants you cannot once you declare the value of a constant that is it cannot change it or you'll get an error like we saw so now let's go over some of those swift basic data types which include the int which is just integers or whole numbers doubles which are floatingpoint numbers so think of numbers with decimals in them strings which is art which is sequence of characters that are held within double quotes remember that's important you need to use those double quotes to contain your string or you'll get an error and finally the bull which is just true or false values when you want to assign a value to a variable definitely use that assignment operator which is just the equal symbol you have arithmetic operators like plus minus times divide and modulo and the same thing with compound assignment operators plus equals minus equals x equals and so on and so if you really enjoyed learning about Swift make sure you check out our learn Swift course it is on the platform so if you wanted to keep going with it I'll just post that into the chat if you're interested let's see when to go into the chat yeah if you are ready to go to our next session I'll post those next session links in there too so right now I just posted that learn Swift course if you feel like going through this or seeing some of the other modules that we have available there okay and then our next sessions I will also post this into the chat you're very welcome Agata okay let's say it's post this in you so once again here is the links to the next chat I just posted that in and then again I'm gonna post in that learn Swift course if you want to take it at a later time cool and also sunny posted I believe it was a cheat sheet link I think Elena went over this in the beginning it's an awesome way to just go over what you learned you can print it out you can save it as a PDF and you can always go back to it in case you just need a refresher in what we learned um we are so so happy you guys could join us today this was awesome and like Sonny said bookmark those cheat sheets and definitely it's gonna be exciting enjoy the next two courses they're going to be awesome whichever one you choose thank you guys umm yeah X did we share the Swift Docs with them yes but I will post those again okay cool I thought that if you guys are interested in reading more about Swift and reading the documentation we are also gonna provide you guys with those links and yeah this is great thank you so much for for joining us so much okay so I just posted in some Swift resources with apples and Swift Docs org they're awesome anything else so yes so if you want that learn from home day syllabus if you're looking for those next courses I'm also going to post that in thank you so much that was a lot of fun I'm so glad you guys joined us today I'm gonna try my best to answer these lingering Q&A questions I'll get to them as soon as I can there's quite a number of them so please be patient but yeah thank you again for your time quick question for you Selena and Alex actually this is definitely like a PostScript to the presentation dude are you either of you in discord pick in the discourse from her I'm not but I can join in so let me get you all the discord server Joseph I don't know if you're still on a lion or Steve Copeland if you're still here hey do you have I like don't have it right now do you have the discord server link Joseph yeah I think you do he's gonna pull it there okay thank you I think that what it seems to have been working there you go Joseph just painted right there so yeah what seems to be working oh I do I was just over in discord and people who are chatting with each other in these presentations are just like taking it over there so I don't know is it just an idea maybe your si devs can show up over there too okay I'm going I'm going to are I'm gonna go hang out and are okay have fun yeah great so and to those of you who are still there I'm gonna post the links to those the two next courses just in case you still need them and then we'll also get in that discord link again someone posted it before how many of you guys are going to finish this Swift course now a nurse will get that letter back oh one other very very important thing so this learned from home conference module is going to be up and available up until the end of today so you can still progress through the course and keep on working on it but note that it's going to be deprecated by the end of today well at the end of today I think maybe tomorrow morning I'll confirm on that but yeah you can still have access to the learn Swift course on the cook Adam II platform yeah so be sure to take it let us know what you think yeah definitely and again thank you so much for joining us and trying to get the discord link for you guys again in case you missed it in the chat and I sorry one more thing I keep on remembering things I want to mention so if you went through the projects and you are not in the pro cook Adam eversion by any chance you might lose that project code so go ahead and copy all of your project code that you want to say whether it was like a challenge actually not the chocolate Emperor oh wait we didn't get to a project so that they should be fine yeah and then to answer John sees questions so this particular one from the learn from home day conference yes we're gonna tape that down later however or learn from Swift course so you're gonna see those same modules we went over those are still on the platform and you could take that send a link to learn Swift for you guys perfect I believe we're like eight or nine modules for learn Swift yes okay so everyone I just sent the link to the learn step of course and we're at time so yeah that's great to see a great talking with you guys and thanks for joining yep thank you enjoy the next one guys bye