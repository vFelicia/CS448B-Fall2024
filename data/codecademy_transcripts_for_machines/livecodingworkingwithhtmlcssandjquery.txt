hi everyone welcome to live coding with codecademy I'm Dan an engineer at code academy and today we're going to work through a project in HTML CSS and jQuery the project we're doing today is from our code academy Pro offering you can find out more about codecademy Pro if you look at the description below and we're going to get started pretty quick so I'm going to just go ahead and show you the project we're going to be working on so here's kind of the end result that we're going to be working towards it's just a simple threaded comment form you come to the page you type in your thoughts we'll say hey and when we click post the comments will go below down in the list and so we're going to be working through creating the HTML the CSS and the JavaScript for this page from scratch so I'm going to begin by in my text editor creating a new file and I'm going to call it index.html and I'm going to start my HTML document with a doctype of HTML and then I'm going to create an HTML tag and a head tag and this is how you start pretty much all HTML documents after the head tag we're going to put in a body tag and we're going to close our HTML tag so the first thing we're going to want to do is look at our example project and kind of break up what we want our site to be so we see at the top we have a big header then we know we're going to have to have a form for the share your thoughts and the post button on the right and lastly we have this list of elements that the individual chat posts themselves and so the structure we're going to use for that I'm going to show you on the next page so we're going to have a header and inside the header we're going to have we're going to use a container it's going to be row based and we're going to use bootstrap in this project so we're going to use columns to lay things out and so we can get started by creating that header element first and so I'm going to do that inside of the body but before I do that it's important to we're going to include the bootstrap CSS and the way you do that is you can search on Google for bootstrap and you can go to the bootstrap getting started page and from there you see there's these links to the bootstrap CDN page um we're going to copy these links and we're going to paste them right into our head of our HTML document and I have that already copied so I'm going to go ahead and paste it into my head and now once it's pasted in my head I now have use of bootstraps CSS and for those of you who don't know bootstrap is a CSS framework it provides a lot of CSS for writing buttons drop down menus and a bunch of other CSS components that you can find out more about on the bootstrap website for this project we're going to be using the bootstrap grid system specifically and if you go down to the CSS part of their documentation you can read a little more about the grid system but what it allows you to do is create a 12 column grid system and style your page based on that and it makes a lot of things like responsive design really easy to do so I'm going to go ahead and make that header that we were talking about and I'm going to use a header element to do that and I'm going to give it a class of header as well and this will allow me to style that um element really easily and I think I'm going to increase my font too so you guys can see it a little better so once I create that header I'm going to go ahead and create the container to um put all my elements in and what this container allows me to do is it bootstrap will apply styles to this element that tell it to fit within the page in a certain way and it's a good thing to usually put your elements in containers because then you can make full use of bootstraps functionality and inside my container I'm going to put a row and I do that by creating a div and giving it a class of row and this is I'm going to apply those bootstrap styles to that element and So within that row I now have 12 columns to work with if we look at our sample we see that this first header kind of takes up the full width of the page so in our example HTML in our HTML we can do the same thing and we can do this by giving it a call class of 12 and so we do this by creating another div and so this will be our column and the classes were going to give it was we're going to give it two classes we're going to give it a class of call xs12 and a class of call md12 so what this does is um is how you do responsive layouts with bootstrap so the first class this call access 12. this makes it so that any device that is smaller than 768 pixels this div will take up the full 12 columns and in the case of the device being bigger than that it'll take up the full columns as well and so we can do this because we want our top element the threadly to always take up the full width and we'll see how we um do this a little differently when we do a the share your thoughts on the post button where we want it to be a variable size columns so inside of my Cal div I'm going to create my header and I'm using H1 for this and just type in threadly now that I have some actual text that I'm using I'm going to be able to refresh the page and so now we have our version of project so far and it's not really styled and it looks a lot different than what we have over here so we're going to go ahead and create a CSS file and apply some custom styles to it so to do that I'm going to create a new file and I'm going to just call it style.css and once I create that style.css file I can go into my HTML document and I have to link to that CSS document just like I did for the bootstrap Styles and so I do that by doing link Rel equal to style sheet and before when we had this full URL to the bootstrap CDN we can actually do a little bit of a shorter one because the file we're referencing is in the same folder as the file we're currently editing so I can just type in style.css for my href and you can do that because the style.css is in the same folder as the index.html file so now that we have that we can go ahead and apply our styles to our H1 and the ones we're going to apply we can look at our example and we see that we have a left border that's green and we have our Texas moved over a little bit to the right from that border and the font looks a little bit different so let's see if we can get that to be close so I'm going to select that element by selecting the H1 and I'm going to start off by making a border and I'm going to do border left and I'm going to do a 2 pixel border I'm going to do a solid border and I'm going to do a green that I kind of have in my head already so I'm going to do 0 0 f 2 8 F and this way of defining colors is called using hex values for them this is a pretty standard way of defining colors I'm going to change the font size to be 48 pixels I'm going to I want them to be a little bold so I'm going to set the font weight to be 400 pixels or just 400 sorry and I want there to be some padding in between the border on the left and the actual text so to do that I'm going to add padding on the left and we'll set that to 20 pixels so we can come and refresh our page we see that it looks a lot closer to what we had before but you might notice that the font's a little different and that's because the example project is using a custom font that we got from Google so to in order for us to use that we can look on Google fonts and the font that we want to use for this is called Montserrat and you can search for that on Google fonts to find it and here's the one that we want to use and when you to include it it's really simple you just add a line of CSS to the top of your page and I'll go ahead and four months Rod I have it kind of ready to go and so in my index.html file I do again another link and the row will be style sheet again and the href will be the link to the Google style sheet and so that's going to be I'm going to copy and paste it because it's a little long and I'll read it off and it's just https colon slash fonts.googleapis.com CSS and then the question mark family equals Montserrat and we want to use include both the 400 weight and the 700 weight and that by including the 400 and 700 weight that's what allows us to style things with the font weight at 400. so now once we have that on our page um we need to add some style rules to make it so that we use that font and I'm going to apply them to the whole page because I want everything to use this font so to do that I'll do HTML and also select the body and I'll set my font family to be um Montserrat and I'm lots of times when you include fonts or maybe an issue with loading that font so it's a good thing to also include a fallback font so for our fallback we're going to just use any Sans serif font and it's on serif font is a font without the little Nubs on the end of the letters so now when I refresh the page we see that we have the same font as we had before and it looks like what we were going for so now that we have our header element taken care we can move on to the form itself and the form has two elements it has a input field and then it has a post button so we're going to start the same way we did for the previous element for the r header this time we're going to create a div and we're going to give it a class of Main and this will let us style it later and inside there we're again going to use a container div and so we do that with div class equals container and just like before we're going to do a row and do div class equal to row and so we know we have to have a form so we can go ahead and create a form element and so to do that we just do a form tag and I'm going to give it a class of form so we can style it and I just noticed I didn't close my link tab for my Google font URL it's important to always remember to close your tags or else you'll get errors that you're not expecting later and once we have that form we can now start to use bootstraps grid system a little more um interesting than what we did for when we just had a 12 column layout for our H1 so the First Column we're going to make is going to be it's going to be for our input field and we're going to give it two classes again we're going to give it one of call xs8 and so this will say when the device is smaller than 700 pixels to use eight columns but we're also this time going to say that when it's a bigger device to use 10 columns and to make our input field we're going to use an input element we're going to give it an ID of comment the type of the input is a text input and we also wanted to have some placeholder text the placeholder text was share your thoughts and our mockup so to do that we just add the placeholder attribute and we set it equal to share your thoughts now when I refresh the page we have our input element here and um we're gonna we can go ahead and style we'll style put the whole form together we'll wait until we have our input submit button to so for the submit button we're going to create another column div and this time we're going to say the call XS is four and the Cal MD is going to be 2. and so one thing you'll notice is you always want to have inside of a row right you always want to have the columns sum up to 12. so before we had just one column and we used 12 so that was making use of all 12 columns and in this case we're using um eight and four and that sums up to 12 and then for the bigger device we're using 10 and 2. oh and I um close my form tag a little early there too so we're going to use a button for our submit element and to do that we're going to create a button tag and the type of it is going to be submit and we're going to give it a class of button too and inside of there we're going to set the text to post and we can just go ahead and close the button so now when I refresh the page you'll see that we have our post button here and our input here and we can kind of resize the page to show how bootstraps grid system behaves a little bit so as I move to a smaller device you'll see the button shifts over to the left and that's because it's now taking up a fewer to share your thoughts is taking up fewer columns it went down from 10 columns to eight columns and so that's why that jump happens and we'll be able to see that more once we style the form a little better so the style it will go over to our style sheet and the first thing we're going to style is our input so to select that we're going to select a form and then we're going to additionally select that input so this way of using CSS says for a form element select an input element inside of a form element we're going to give it a background color that's Gray and we're going to do what a gray that's typed in by F 0 f 0 f 0. and we want to have a border on the left of two pixels and it'll be a solid border and we're actually going to make a white border and this may seem a little strange right now but if you look at the mock that we have when you click you see there's this fade that goes from having no border to a border and by setting the Border here it'll allow us to make that transition nice when we add a CSS transition to things and we're going to set the Border To None because we don't want we don't want to border around the whole thing we just want a border around the left side the next thing we're going to do is increase the font size and we're going to use 36 pixels for it we're going to give it some padding on the left so that our input text isn't right up against that border that we have and we'll do that with just putting padding of 20 pixels and we're going to put it around the whole thing not just on the left side this time and we want our form to take up the entire column that it's contained in so we can set width equal to 100 percent we can refresh and see what we have and so now that looks pretty close to what we had in our mockup the we still need to work on the post and we probably should add some padding in between threadly and share your thoughts so to do that we're going to actually add a style to that main element that we have and so we'll do that by selecting the class that we use for Main and if we look back at our HTML we use div class equal main so to select that we'll use the period notation mean and so that says select an element with the class of Main and we're going to set the margin on the top equal to 80 pixels now when I go ahead and refresh the page we'll see we have a much better spacing in between there so the next thing we're going to work on is styling our button and the way we're going to do that is by selecting a button element with the class of BTN and so that's what this syntax is where we have the button and then immediately without a space dot BTN says select a button that also has the class BTN so looking at the button we see it's just a it's a green text for post and there's no background and no border and there's a little bit of padding so we can go ahead and do that in our CSS by we'll say background is transparent we'll say the border is none we're going to use that same green that we use for the H1 for the border on the left and so to change the text color we use the color and we're going to set the color to 0 0 f to a f we want to when we hover over the button we want it to switch to a pointer so we can say cursor is pointer and we want to have the font size be the same as we had for our input so we'll say font size is 36 pixels and we said we wanted to add some padding to the button so we'll do padding 20 pixels and 24 pixels so with this shorthand notation means is the first when you have padding or margin and you have two numbers the first number applies to the top and bottom and the second number applies to the left and the right so we're giving 20 padding on the top 20 on the bottom 24 on the left and 24 on the right so I can save my CSS and refresh the HTML document and so now we have something that looks pretty close to what we have there and now when I resize you can see really what setting those call MD and Kyle XS classes do so when I shrink the page it gets this number of columns that share your thoughts takes up is smaller so that those page can fit as we get to smaller resolutions and so this is really good if you want to make a site that's good for mobile so the next if we looked at our mock we see there's these two transitions when you click on the share your thoughts the background Fades to White and we see the border on the left and for the Post button when we hover it we see that the background turns the green and the text turns the white so we can do this by making a CSS transition and the way we do CSS transitions is with a CSS property that we can apply to a different state of the input so for our form input we want that transition to happen when the input is focused so we'll select form input again but we're going to use a CSS modifier on it called focus and that's just colon focus at the end so this says this element the CSS rules that I'm going to write here need will only apply to the form input when it's focused so we're going to do a white background that's FFF we want to give it a border left that's two pixels that's solid and is black and we'll use the hex for that which is just zero zero zero we're going to remove the Box shadow and one thing when you typically hover over forms you see that there's this blue border along the outside we're going to remove that Outline by saying outline is none now if we refresh the page and we click you'll see that it kind of it does our transition but it's really jumpy so what we need to do is Define what the transition actually is so to do that we're going to go into our form input and we're going to add a transition property and we're going to tell it what properties we want to transition and over how long we want them to transition for so we want the background to transition over a period of two seconds and we want the Border left to transition over a period of two seconds so now if I refresh the page and click on the share your thoughts button you see the transition is smooth and it takes it goes over those two seconds that we had for the that we wrote in our background transition property and so we're going to do the same exact thing for our button and I'm going to create a new class at the bottom and I'm going to select my button again and this time instead of focus we're going to use hover because we want this transition to apply when the element is hovered not focused and we're going to for this all we're going to do is swap the background and the color so the background now is going to be green and so that's that zero zero f28f and the color is going to switch to White which we can do with FFF now when I go and refresh my page and I hover over the post we get that jumpy Behavior again and so that means we need to apply the transition property to our button.vtn so we're going to do Transition again and this time we're going to say the background transitions over two seconds and the color transitions over two seconds now when I refresh the page and I hover over post we get that clean transition there and the clean transition back to the nonselected state so now that we have our form in place it's we're going to go ahead and make our list element that will contain our comments and we're going to do this using an unordered list element and the way you make an unordered list element is by doing UL we're going to give it a class equal to comments and we'll also give it an ID equal to comments and so this will allow us when we write the jQuery part of the page to select the element by its ID and I'm going to write two just kind of example comments so we'll be able to kind of have some data to work with in the beginning and the ones that we had on the page were have you felt it and there has been an Awakening so I'll go ahead and write them in and the LI is just a standard list element I can refresh my page and I have my two elements but they're not styled anywhere near what I want them to be so I have to add some custom styles again I'll go into my style sheet and I'm going to select the comments element and I'm going to give it some padding above so it's not so close to the share your thoughts form I'll say um we'll do that with margin and we'll do margin top 20 pixels and um one thing you can see here is we have these little dots on the left side um the way we get rid of that is by setting the list style to none and we're also going to set padding left equal to zero pixels we do this because browsers automatically apply some padding for UL elements and so we have to override but the defaults are in order to get it how we want it to be I can refresh the page and we no longer have our dots the comments are up on the left but we still don't have quite what they are here so we can go ahead and add some styles to our individual Li elements themselves so do that we'll select the LI elements on the page and we're going to give them padding left of 20 pixels and this will allow us to set our border off of the comments themselves we're going to add a border left of two pixels that's solid and this time we're going to use black for the Border we're going to increase the font size again and set it to 36 pixels now if I refresh we're pretty good but the only thing is there's a little bit of space in between them so we're going to give them um some margin and so this gives them bottom margin of 36 pixels so if I refresh now they're spaced much better and they look pretty close to what our mockup has here now that we have our page styled we can go on to adding the JavaScript functionality so we can type into the form now if we try to type into the form we'll see that we don't really get anything that happens we click post and it just kind of refreshes the page so to add the JavaScript functionality we're going to make use of jQuery and to include jQuery we can include it from a CDN just like we did for the bootstrap CDN and I have that link already copied into my clipboard so I can go ahead and I'm going to put this script at the bottom of the page and I we're going to put all our scripts at the bottom of the page so that they load after all the HTML is loaded so I'm going to type script and the source is going to be equal to a CDN URL for jQuery and you can find this URL and if you search on Google for jQuery CDN and you'll see you go to the jQuery site and you can just copy the link to the minified jQuery or the compress uncompressed and we're using jQuery 2 for this and if you're using ie9 or below you should use jQuery one so now that we have our jQuery code included we need to have our own script so we're going to create a new file and we're going to call it script.js and once now that we've created our script we need to also include it on our page so right below the jQuery script we're going to say script source and just like with our style sheet how we were able to use a relative URL we can do the same thing for our script and then we're going to close it with a script tag and the ordering here is very important because our script is going to use jQuery we need to include it after jQuery has been loaded and so by using include by writing the script tag after the jQuery tag it'll ensure that our script runs after the jQuery script so in our script file we're going to do we're going to create a main function and we do that by saying VAR Main equals function and we want this main function because we want it to be run when the page loads and so the way we have this function run when the page loads is by using jQuery and we're going to do the way we access jqueries with the dollar sign variable so we're going to type dollar sign we're going to use the parentheses and we're going to select document and we're going to say when the document is ready we want our main function to be called and so this is um the standard Syntax for doing that so this says jQuery when select the document and then attach a listener to the document that is called when the document is ready and then when the document is ready we're going to call our main function so now that we have this in place we can write out of our code to handle the interactions on our page inside of our main function so the one interaction that we have to work on is the interaction that happens when you submit the form so to do that we can use jQuery to select that form element so we can use dollar sign again and this time we're going to use form and so this tells jQuery to select all the form elements on the page and since we only have one form on the page that's why we're able to just select form and we want to attach a event listener to the submit action and so we do that by after we've selected our form by calling the submit function and we want to pass that submit function another function and this is called our event listener and so now we have a function that will get called whenever the form is submitted and so this is where we're going to put our interactions for when the form is submitted and the first thing we want to do is when the form is submitted we want to take we want to get the text that's in our input box and we want to store it inside of a variable so to do that we're going to first we want to select that form input itself so we can do that and put it into a variable we'll call the variable dollar sign input and um we're going to use jQuery again and we want to select the target of the event and so that'll be equal to the form itself and so we can do that by saying event.target and um anytime you're working with jQuery and you attach an event listener to something the first argument that gets passed to your listener is an event and that event has different properties and one of the properties is the element that triggered that action and so in this case that element will be the form that we had here so now that we've selected our form element we want to select our input element within that form so to do that we're going to use the find function and so now we type find and we specify the element inside of our form that we want to find and in this case it's going to be the input element so now that we have our inputs stored in a variable we can get the value of the input and the way we do that is by using the Val function so I'm going to create a new variable called comment and I'm going to sign the value of it to input.val so now that we have the comment we can actually go about inserting the comment into the list below and so I'm going to use an if statement because I don't want to insert empty comments so I can check to see that the comment actually has some text by saying if comment is not equal to an empty string so if the comment is actually real common we can then go ahead and create an HTML element for the Li and I do that by saying we can say VAR HTML is equal to dollar sign and we're going to actually write HTML in here in this time and so anytime you write HTML inside of the jQuery function it'll create instead of selecting an element on the page it'll create a new element and so by doing this we've created a new Li element and we want to set the text inside of that Li to be equal to our comment and we can do that by using the text function so we do dot text and we pass in our comment so now we've created a li element that has the text of our comment inside of it so we now want to take that text and we want to insert it down below into our comments list so we can do that by using the prepen 2 function and we'd use that by we take our element which is our Li HTML and we're going to prepend it to another element and we can pass it a CSS selector so we can pass it the comments that we did before so if we look back in our HTML document we gave this an ID of common so we can use that to um select that element and set the HTML to that so we'll do pound sign pound sign is the way you reference ID of an element so we're going to prepend it to comments so now we can see what happens if we refresh the page so if I go ahead and type I'll just do some gibberish and hit post it may I'm not sure if it'll show up but you'll you see a little flash down below and then the page seems to refresh and what's happening there is all browsers have default behaviors that they execute when a submit on a form is called and we don't really want the browser to do the default thing we because we're overriding with our custom code so the way we tell the browser to not do what it normally would do is by returning false at the end of our function and this will say don't do anything more with this event that the submit event that happened it kind of ends the execution so now if I refresh the page and I can post hey in my form and click post we see our comment goes down below and um one thing that's a little weird is our comment is still left over so you could accidentally hit enter a few times so we can get rid of that text by selecting our using our getting our input that we saved in a variable before and we can use the valve function again but this time by passing an empty string to the vowel we and go ahead and clear the input so I'm going to save the page and refresh and now when I type hey we can see that the elm the new Li element goes down below the form clears and it works how we set out to make it work and so that's it for this project we have some time so I'm going to try to do my best and see if I can answer a few questions that may have come across during the time on the chat has been pretty fast so it may not do so well I mean I saw a couple questions about is it possible to watch this later yeah this video we're not going to take it down so if you just come back you can watch it later um and then can I get a download of this code um yeah we can um post it online and we'll include the link to the code in the comments after the video is been released so you can um get it there I think that'll probably be the easiest way um so one question is for bootstrap and jQuery what happens if the CDN goes down and does this happen if the CDN were to go down you wouldn't be able to use the jQuery and bootstrap CSS um but it's very unlikely that this will happen there's tons of websites that rely on the jQuery and bootstrap cdns and so it's you can be pretty um confident that they're not going to go down uh and then what's the relationship between JavaScript and jQuery jQuery is a JavaScript library that allows it's really useful to handle things like browser compatibility it's just kind of an additional tool set on top of JavaScript that helps a lot of helps you write code a little bit quicker uh when another question is when should one use padding and when should you use margin so the difference between padding and margin is kind of a tricky one the way you can think about it is margin is what um it goes between elements out that are next to each other so if we were to look back at our HTML document and we see that we have this header element and we have our div here so if we were to apply margin top to this div it'll say it'll add space between the header and the div because that margin applies outside of an element but in some cases you want to apply spacing when you're actually inside of an element so a common reason you would do this is if the text inside of your element isn't an element so like we did this for our button so if you want to add spacing between the where the post is and where the border is for instance you could add padding because the padding will apply inside of the element and we can actually look at how that happens if I I'll add a border to the post button here if I go back to my button and if I say we'll do border is the two pixels solid and we'll set it to Black so now when I refresh my page you can see that there's space in between the post text and the border and that's because we use the padding here instead of margin so here's that padding that's 20 pixels and 24 pixels so the way to think about it is padding is four things on the inside and margin is for things on the outside uh where can I go to learn more about the bootstrap and the grid system um go to the bootstrap website you can it's just getbootstrap.com and to you can on the top of the page if you click on CSS and scroll a little down one of the first things they talk about is the grid system and I would just go ahead and read through that a little bit and if you need a little more help you can go to our make a website course on codeacademy so if you go to codeacademy.com and you go to our on the bottom make a website course you can go through this course and we do a lot of stuff with bootstrap on here so it'll teach you a bit too and for those that you don't know about what why you would use bootstrap and why group responsive design is important or responsive design allows you to do is change the layout of your page for different size screens this is really useful if you want to have a website that works both on mobile and on desktop and I can demonstrate this again if you look on this our page if I right now we have this element taking up the full width so now if I were to shrink this a little bit we see that this gets a little smaller and it takes up less space and that's because we now are on a smaller device so I go back to my HTML and if I were to change this to say remove these excess and so that we only are ever styling for big devices so now if I save that and refresh so now this the share your thoughts will always take 12 columns and the post will always take up two columns so I can refresh my page and now if I resize you see that the layout gets a little bit uh screwy and that's because the post element the post button has a fixed size and it needs to be contained in that two column so if it can't be contained on the two columns it pushes down below and so that's why it's really useful to use responsive design because it ensures that your web page will look good on both mobile devices and on desktop devices uh what would we have to do to make the comments we're posting stay even after we refresh the page so to do this you'd have to use some kind of server side language you could use Ruby on Rails you could use node.js you could even use something like Firebase I would recommend checking out our course on Ruby on Rails it'll teach you how to save data and retrieve it back on the server and that's all the time we have for questions um thanks everyone for joining today I hope you learned a lot um and again I if you're interested in learning doing more projects like this you should check out code academy Pro I think there's links in the description there's a ton of projects like this and I hope everyone has a fantastic day and we're gonna put um just so if you're not we'll put links to all the files that we've been using in the description below or in the comments afterwards so thanks everyone and have a good one