hello my name is Farish and i'm a californiabased developer and in this video we're gonna talk about what is whiteboarding which is part of the technical interview process and it could be a Tim Daly part two but with this video and other content from code Academy hopefully we could ease your concerns and help you along the way let's get started to start things off I'm gonna cover what is whiteboarding and lightly touch on why it is important then I want to go into the process of a white boarding interview lastly I'm gonna give you a couple tips noncoding related on how to practice for your white boarding interview so let's get started so what is white boarding well white boarding is a form of torture used during job interviews the candidate is forced to code algorithms that they were never used on the job on a white board in front of other people causing the candidate to experience a sensation of inadequacy now I'm joking here so what really is a white board interview well it is the portion of your tech job interview meant to test your communication and problemsolving skills you'll be given a situation or a task and of course a white board and you're gonna use this white board to work out your code and explain your solution so why white boarding well it's used by a lot of large and established tech companies the most famous one in this interview space being Google it's part of the hiring process and they have you do this to show your ability to reason explain and solve a problem when working in teams these skills are crucial to successful code implementation if you're asked to add new features to an existing code base where or how would you start white boarding is a way to demonstrate these skills so what exactly happens during the white boarding portion of the interview process let's talk about that so let's talk about what to expect and what's gonna happen is you're gonna be around and of course there'll be a white board and there'll be an interviewer or interviewers and they're gonna give you a problem to solve and as I mentioned earlier being most likely an algorithm but sometimes the Capiz system does 9 or a realworld problem every company's different and the goal is to not only solve the problem but to show to the interviewers that you can visualize and verbalize out the situation and we accomplished this by going through the process the first step in the process is to clarify the problem and to start this the first thing you need to do is to say the interviewers question out loud in your own words then based on their response ask a clarifying question and during this backandforth communication create assumptions and then ask questions built upon those assumptions and your questions should continue unto your assumptions lead to a mutual agreement on the scope of the problem and at this point you should be ready to move on to the next step so now that you have clarified the problem the next step in the process should be to create inputs that will lead you to a solution then once those inputs are created you should also create the help but you expect the function to produce so for example you have this problem you need to merge two sorted arrays of numbers to a new sorted output array so the first thing you need to do is to create a happy path which is what you expect to be the most common scenario based on your earlier clarifying questions and in this case it is two sorted arrays of unique numbers and while doing this you have to be aware of the edge cases which are the uncommon and unexpected inputs that could potentially break your function in this scenario the edge case is duplicate numbers in the two input arrays when encountering an edge case go back to asking clarifying questions and maybe making new assumptions for example in this scenario you should ask should I expect duplicate numbers from the two sorted arrays and if the answer is yes you should then ask how should they be handled in the output and if the answer's no take some time to consider other potential edge cases here and if you feel you have all your bases covered it's time to move on to the next step now that you have clarified the problem and have your inputs it is time to start outlining the solution so going back to the problem I mentioned earlier this is a partial outline of the solution using pseudocode and while you're writing this you should still keep indicate your thought process this gives the interviewer an opportunity to interact and maybe give you some hints and suggestions if you're showing that you're a little bit stuck also if you feel unsure or confused there is nothing wrong to ask a clarifying question especially if they hint given from the interviewer might change your outline dramatically now that you have your outline done you come to the portion of the interview where you need to write some code and during this time what you want to do is make this into a collaborative process face the interviewer while writing out and explaining your code and allow them to interact with you now the code is done you feel like you accomplished the task at hand and you're ready to stop your whiteboarding interview know now what you need to do is take your input usually starting with your happy path and run it through your code implementation and how you want to approach this is that at each step of execution sail out what is happening and explain what is happening to your input at the current step and at the end of each step update the variable values as necessary and once you finish through the execution of your solution and you're satisfied with this current implementation it is time to discuss the time/space complexity of your solution also known as the Big O notation but as a reminder both pseudocode to code and the Big O notation is going to be discussed more in depth in future code academy videos so that completes process and now I'd like to talk to you about how to practice white boarding but not with regards to the code or the algorithms and that sort of stuff but how to effectively communicate especially when you're not used to communicating so the idea here and this is a more of a personal belief of mine is to take every day items that you might take for granted or you don't think about and wait board the process and what do I mean by that well on the screen you see the pseudocode for cooking chicken and you might have never thought about all the steps that are done when you cook chicken from prepping it turning on the oven setting the temperature waiting for it to roll arm up placing your chicken on the cooking pan inserting it in the oven and so on and so on if you take the time to practice talking out loud these steps this will make you a better communicator also while talking out loud about it it will make you think about the steps you might have missed another practice technique I like to mention is that if you are the type to get nervous talking to other people in these sort of situations practice in front of a mirror while practicing whiteboarding use your reflection to represent your potential interviewers imagine potential statements or responses that the interviewer may have and figure out how to handle them of course pick what works for you but the goal here is for you to ace your interview thanks for watching now if you get a chance head on over to code Academy and take a look at our technical interview practice and if you want to get involved leave a comment below and be sure to like the video and subscribe for future videos happy coding