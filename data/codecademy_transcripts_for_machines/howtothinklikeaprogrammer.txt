hi my name is Stephanie I'm a software developer based in Baltimore and in this video we're going to tackle what it means to think like a programmer one of the common misconceptions that people have about programmers is that they know everything and while I'd be flattered if anyone thought that of me it's not really quite the case what we do have though is a mindset that each person has uniquely developed over time and we use this approach to solve problems in this video we're going to take a look at what the programmer mentality is like as well as some tips you can use to help you get there I like to equate programming to speaking when you speak your goal is to communicate with the people around you now with programming the goal is to communicate with your machine and both of these scenarios your goal isn't to memorize the entire dictionary but to learn how to convey ideas in a way that is meaningful to your listener this is where the fundamentals come into play because these are the ideas that your machine can understand programming is less about regurgitating code snippets and more about building a solution by using the fundamentals to break a problem down this approach is the core of quote thinking like a programmer and quote let's run through our sample problem where I can illustrate the programming mentality say my goal is to tell someone how to open a jar now if I were to write this in a program I can't just say open the jar because the machine wouldn't know where to begin but I can break the problem down into pieces and write the instructions for each of those actions this ability to break a problem down is something that every programmer needs in order to communicate with their machine that was just one way of breaking the problem down and not everyone has the same approach to solving problems as me everyone's quote programmer perspective and quote is different but over time and with practice you start to shape your own perspective so in the meantime what can we do to build this mentality remember when I said we're writing code to communicate with machines one tip is to do just that try talking through the problem out loud I mean you can talk to anyone a friend a rubber duck a wall anything works programmers also work together when they're solving really difficult problems you can try that for yourself with some pair of programming it'll help give you more exposure to different perspectives and help you build out more innovative solutions big challenges are really intimidating but they become so much more manageable if you take a step back and think about the problem from a high level from there break it down into chunks and use your foundations to address each chunk one at a time it may be difficult to jump into the deep end right away so if you're stuck one way to get unstuck is to think about how you'd solve a similar simpler problem then build your solution from there to make it a little more complex and more closely resemble the problem at hand now don't bother memorizing everything that comes with practice instead focus on learning the foundations and applying them actually I have a small confession to make even some of the best programmers I know still refer to the docs to find the right syntax it's their unique and innovative ideas that set them apart one of the cofounders of react wrote a humbling blog post about this I recommend checking it out if you get the chance I'll provide a link in the description below also shortcuts tend to hurt the learning process more than help think of practicing solving problems like running test drills you could probably take steroids as a shortcut but that's not gonna get you the foundational skills you need to be better at tennis when you get stuck on something it can be really tempting just to run a quick search on the coke atom II forums or a Stack Overflow but immediately looking for answers will only make you reliant on solutions that other people have come up with it won't get you the practice you need to solve problems and it also won't help you shape your programmer perspective maybe just try getting help after you've exhausted all your options so you don't Rob yourself of a learning opportunity and documentation is to programming as recipes are to cooking it's the source of truth that will tell you all about the nuances of how a language will behave debugging is also a great opportunity for introspection I used to have a really bad habit of blaming the Machine every time something went wrong and I would spend hours trapped in my own hubris but over time I analyzed how I was approaching the problem and made adjustments so that I'd be able to pinpoint where I was going wrong more quickly test cases also ensure you have a clear idea of what needs to be accomplished from the users perspective believe it or not they can also help you break a problem down depending on how they're written you could go through each case one by one and write the code needed to make each one pass then move on to the next so get acquainted to reading documentation and applying it to your code this will help steer you from looking for the answer right away it'll also help you gain more experience with the language I've talked a lot about getting practice but Coke ad amis optional problems and projects are a good place to start they're more openended and give you a chance to explore and tinker around without a direct solution we also have some resources that can help point you in the right direction for more practice I'll link them below and if you're itching to program beyond the coke atom e environment you can always tackle a personal project on your own local machine we also have some resources you can use to help you set up your own environment they can help you install your language of choice figure out what editor works best for you and walk you through some terminal basics and finally get used to venturing outside of your comfort zone and just try something to see what will happen rather than approach your solutions thinking is this correct you should aim to answer how does it solve the problem I really hope you enjoy this video and thank you so much for watching please join the conversation by dropping a comment below or subscribing to this channel and if you're ready to take your skills to the next level you can start learning on coke atom II today