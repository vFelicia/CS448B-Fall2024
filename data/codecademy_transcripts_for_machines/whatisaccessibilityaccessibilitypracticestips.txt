Hello, my name is Stephanie, I'm a software developer based in Baltimore, and today we're gonna go over Accessibility. Accessibility is designing your products so that they can be used by everyone in every situation. This means making sure your product is available on all devices from desktops to tablets to Android to iOS. When building applications on desktop devices, designers have a lot more freedom since they have more real estate to work with. Desktops could look something like 1440 pixels by 900 or 1024 by 768, on the other hand, mobile devices are generally much smaller so they could be as small as 360 by 640 or as large as 1366 by 1024. Because of the wide range in sizes, it's important to ensure that an application will be able to accommodate each of the different sizes and one way to do that is through responsiveness or the application's ability to adjust the respond to the user's environment, like screen size, platform, orientation etc. If you're viewing a website on a desktop, you may get this view but on a phone, you wouldn't want to get the same view as you would on a desktop, like here. Instead, you'll want to get this tailored view. There's also a fundamental difference between a desktop and mobile device, and that's how the user interacts with the device. On a desktop, a user will often use a mouse, and on a mobile device, it's a user's finger. So as a result, the types of actions are a little bit different. A click on desktop would be a tap on a mobile device, and you can use a mouse to hover on a desktop but you can't quite do the same with a mobile device. When building out responsive designs, it's important for designers and developers to take these differences into consideration and have equivalent actions available. This way, users have some kind of consistency when going between desktop and mobile devices. For example, if a tool tip appears when the user hovers over an icon on a desktop, the mobile version could have the icon be tapable and then the tool tip would appear. But Stephanie, how am I supposed to know if I'm on a mobile device or a desktop device? Well, don't you worry, most languages have some kind of support that can determine if your user's accessing your application on a mobile or desktop device. Accessibility also means providing support for users with disabilities. The most common ones are visual, hearing, mobility, and cognitive impairments. Accommodation for visual impairments can mean adjusting your colors for people who are colorblind or ensuring the HTML on your website is parsable by screen readers. Screen readers allow your users to identify things like where your buttons are, what's in your content, and so on. For hearing impairments, you can make sure that there are captions available for any video content. To address mobility impairments, you can create your buttons for the larger click radius to accommodate people that need a little bit of help with their fine motor skills. You can also make your application keyboard accessible for users that can't use a mouse, like allowing users to navigate through the page with the tab key. Cognitive impairments are pretty broad but generally, sticking to good design practices can make the site more accessible. This can mean keeping user flow simple or maintaining consistency where your navigation is located and how your content is organized. I highly recommend checking out the WCAG for more guidelines and practices you can use to increase your application's accessibility. They also give you some great examples on how to employ the suggestions. I'll add a link to the guidelines in the description below. The 1998 Americans with Disabilities Act was created to allow people with disabilities, like sensory and cognitive impairments, physical limitations, and so on to get access to public and private spaces. This extends to digital spaces, as well. So developers need to make sure that when they're developing their applications, they're also adding additional support for users with disabilities. And, plus, going the extra mile ends up being helpful for everyone. For example, adding alt tags on images help screen readers communicate to users with visual impairments what the image is supposed to be. But the alt tags can also help users who have slow internet connection or who experience issues loading the image. It's also, the right thing to do. I mean, it's not like you would build a door that only lets some people in, right? You would want a door that everyone can get through. So now you know that accessibility benefits everyone. I hope you found this video helpful and make your designs inclusive for everyone to use. Thanks so much for watching. Please join the conversation by subscribing to this channel and dropping a comment below. And if you're ready to take your skills to the next level, you can even start learning on Codecademy, today.