the chat um we're gonna get started in just a minute um once we once we know we're fully live um but happy tuesday yeah i guess i'll use this time really quickly to plug uh our thursday office half hour um so just a reminder that on thursdays at the same time we are running a little office half hour where you can come and ask any questions that you might have uh we had one person last time so we really got to chat uh you know they got some personal twohour or personal half hour to just like ask us whatever questions they had about uh about the data science path and data science curriculum on codecademy so if you have questions even if they're unrelated to this live stream you should definitely pop on and we'll be happy to answer them especially if it's a small group so cool yeah we're also looking into the codecademy as a pretty active discord and so uh we're looking into making a channel there talking with people over there um so if you are on the codecademy discord um yeah we we might be over there we'll prob probably we're gonna do a couple more of these um office hours on zoom and then uh in a few weeks probably try the the discord it'll be fun yeah i'm learning learning about discord now so this is good um all right i think we can get started um i see some people saying hello in the chat always always fun to know where you guys are signing in from so let us know say hello if you haven't already and we'll get started cool well let's see sophie has a uh has a new tool that we'll be using today too which is which is fun we um we have an ipad that we can do some drawings on yes um all right i'm gonna actually delete all this because i was playing around with this this morning but we'll come back to this in a second so um as a quick recap what we did last week was we took a look at a linear a simple linear regression model where we had um an outcome variable and then we had a predictor and that predictor was quantitative um i can actually even pull up exactly what that looked like um right so we had height and weight as this kind of dummy example we were trying to predict weight based off of height as our predictor and so we fit this line we talked about what are the components that we need to calculate in order to define what this line looks like um and then we looked a little bit at the assumptions of linear regression and that was as far as we got in week one so in week two we're now going to kind of transition to thinking about how we could build more complex models than just this simple line but in order to get there we need to talk about how to handle categorical predictors so you notice right now right we can think of the idea of drawing a line makes a lot of sense when our predictor is height our outcome variable is weight they're both quantitative and so we have points that are kind of along along an axis and then we can draw a line through them but what do we do if the predictor variable so imagine like the variable down here is not a number it's something like um something a binary thing binary or something that even is not binary that has multiple categories um trying to think like if you know we're actually trying to predict the weight of um of dogs and we have different breeds of dogs and we've got some poodles and we've got some uh some pugs chihuahuas and so we want to include something about the breed of dog um in our in our model but that's not a quantitative predictor so we can't really like organize those categories in any particular order along this axis it doesn't really make sense necessarily to think of it as a line event yeah well and interesting because we talked about this in our last uh stats series where there's almost like two scenarios here right where one is unordered where it's chihuahua and poodle and your other dog breed there's no order associated with those but then you can also have categorical variables where it is ordered where i know i know we said last time like um you know a rating of one to ten isn't necessarily the best thing to use but there's right is that true that there's kind of like two different ways of thinking about this where ordered versus unordered really makes a difference yeah so if you have an ordered categorical variable and you think that the order matters for predicting your outcome then yeah it actually people do it all the time where we they use a an ordered categorical variable as a numerical variable as a numerical predictor um so just like if you have a rating on a scale from one to ten you can put that into your model right you can just have the numbers one through ten and treat it like a regular number um and people do that all the time if it's your outcome variable you need some different methods but depending on the circumstance but um but yeah for a for a predictor variable you can definitely just put that in normally like you would height um but if it's a fine line right so it's like what about uh like seasons of the year like that's kind of order but there's not really a smallest and the largest do you think that you know starting from if you're looking at the character right that it just goes up with the seasons numerically like no you think it's probably i don't know so depending on how you what you count as number one and what you count as number four uh yeah that also loops where like four should also be close to one uh yeah so it's it's kind of it's a fine line and you have to definitely think about how you're gonna code categorical variables um cool i see lots of people joining sao paulo new york city nice london columbia super awesome it's always fun to see people from all over the world here um cool so i'm gonna jump in so for today we're gonna be using this kind of madeup data set um we'll start with a madeup data set then we'll use a nonnative data set um but so this is something that i simulated we're imagining that we work for a company and we're trying to understand we want to model the time that people spend on the websites we want to kind of predict how long is somebody going to spend on our website and so we collect some data about how many seconds people are sending on the website we also collect some data about their age and what browser they were using and in this case we're going to just stick pretend like only people with safari or chrome are visiting our website so that's that's a caveat here okay so eventually what we're going to build up to is a model where we could include both age and browser as predictors but for right now in order to understand what's going on in that model we're going to first think about the model where we just include browser so what i'm going to do is i'm just going to go ahead and demonstrate that i can fit this model and then we're gonna go back and we're gonna talk about what's going on so um let's see we've got statsmodels.api um as sm so to fit this model we've got sm dot i think hold on actually i need to pull the code ols formula spray cap um well us from formula and then this time our formula is just going to be time in seconds predicted by browser and our data is called yeah and again just stressing that we're using some of these builtin packages which it takes a little bit of like looking at the documentation like sophie i imagine you didn't have you know you didn't know this from formula um function uh memorized or anything and so again kind of just stressing that the exact code to make this happen isn't uh really the highlight here yes um exactly and i saw you answered this question quickly but yes i was talking about dogs as an example of a categorical variable um that you could use to predict weight in this example we're going to use a different categorical brow a different categorical variable specifically browser to predict time in seconds but just in general today we're talking about the idea of categorical predictors in a linear regression model okay so i ran this linear regression press run again so this goes away and you'll notice that i get some output so it was able to run um so we we can do this but now we see that instead of getting an intercept and a slope on browser we're getting the slope on browser t dot safari and so what what's going on there why are we getting this new variable here that's what we're going to try to figure out so to start i'm going to also demonstrate if i just plot this and i plot website dot browser against website time seconds actually i actually get a plot as well and the plot looks like this it has um safari on one side with a bunch of dots and chrome on the other side with a bunch of dots and what i see here right so i should have put um i should have i think if i do sns.scatter plot then it automatically puts the axes yeah so this axis is time in seconds and then this access is our browser so we've got safari and chrome even though this isn't a number it's still putting safari over here in chrome over here for some reason and then i can see that these dots are each uh so like all the dots in this line are people who were accessing the website using safari and this is the and each dot represents the amount of time and seconds that they spend on the website so like this dot is someone who came on the website using safari and spent about 580 seconds on the website and this dot is someone who spent over 700 seconds on the website and accessed it using chrome cool so looking at this do you think there's a relationship alex between what browser someone is using and how long they're spending on the website i mean it certainly doesn't seem as strong as our last one right comparing it to what we did in the last session where we um had you know points that looked like they could kind of fall along a line but obviously not perfect um you know that looked like a pretty strong relationship here i can kind of imagine drawing a line that maybe is sloping upward a little bit um but you know the the uh the points are gonna be pretty far off of that line yeah so well in this case right we don't really have first of all these aren't numbers but second of all right we don't have any points in here so there's gonna be lots of and then there's a lot of variation even among these these points so by just drawing a line it's not like we're explaining that much of this variation um but i would say looking at this right these dots tend to be higher than these dots like if you had to pick the middle of the safari dots it might be somewhere around 400 and then if you had to find the middle of the chrome dots it might be somewhere around 500 and maybe a little bit easier to see in a sidebyside box plot but here we've got safari the median is a little before below 400. the median for chrome is a little below 500 and so the middle of these two distributions is is kind of different like there is some relationship between which browser someone is using and how long they're spending on the website even though it's not prescriptive you know if you are accessing from chrome you might spend as few as 250 seconds and as many as over 700 if you're accessing from safari you might be sending anywhere in this range as well but overall these numbers are smaller than these numbers yeah cool so this is kind of modeling some of that so let's look at those or are you are we about to talk about those two numbers in in particular well we will talk about those numbers in just a second yeah cool i think one thing that's helpful to know and this is this is something that i think will help you if you're thinking about trying to learn other packages as well is what's happening under the hood when you when we ran this code um a bunch of things right like our computer is doing some calculations and there are some steps that happen in the midst of those calculations that we're not seeing so one thing that's a little bit helpful is to actually break that down a little bit and see one of the the middle steps so i'm gonna do that by using this um this package called patsy so actually patsy is a is a dependency of stats models and it uses this package in order to fit this model and so i'm going to just use patsy directly to show you what that middle step looks like so using patsy.d matrices i'm going to actually grab this exact same code that i used with stats models um and i'm going to do return type equals data frame so that we can see this and actually here let me run this to see what the output is so there's actually two different pieces of output there's a y vector and an x vector um don't worry too much about that right now but i'm just going to save them as y and x and then i'm just going to print out x so that we can take a look at it okay so this is what x looks like um in two weeks from now we're going to talk about this column of ones um and why that's there that has to do with some of the matrix algebra that we're using to calculate the ordinary least squares solution to this regression problem but i want to point out that we get this same variable that we saw before and you'll see that it's a bunch of ones and zeros and the first five rows are one zero one zero one if we look back at our original data we've got safari chrome safari chrome safari what's happening here is we're taking this data and we're recoding it as ones and zeros because it's just a binary variable there are two possible outcomes and so we're just replacing one of them with a one and one of them with a zero and specifically we're replacing safari with a one and chrome with a zero and if we had if we weren't binary if we had multiple variables would we get one zero one two so um no we won't we're gonna do that in a second but actually no we won't because once remember once we have um once we have more numbers like zero one two then we're really assuming that there's an order that zero comes before one comes before two and we don't want that so um in this case safari was coded as a1 and um and chrome was coded as a zero and that's what this this means here so when it says browser t.safari it's saying that t means it stands for true so it's saying true that is equal to safari and it's a one if that's true and it's a zero otherwise if you've programmed in other languages you might know that usually true is coerced to a one and then false a zero so this kind of makes sense with this like true false construct um cool so i don't see any questions so i'm gonna jump over to this picture so coming back to this picture i'm realizing now that it's a it's a little bit misleading because in this picture safari is is overall on the right so in reality these would these are switched uh when we're thinking about this um i see where that negative might be coming from now because i was saying oh this is probably if i were to draw a line in this picture it would probably be going up right it would have a positive slope but if chrome is actually on the left and safari is on the right then i would say oh that has a negative slope and so i'm guessing that's why this negative number is showing up yeah i think that this is so here's what i'm going to do to make this a little bit nicer i wish i had done this ahead of time but let's see if i can do it quickly here so if i do website dot browser dot replace and then i'm gonna replace safari with um one dash safari and i'm gonna replace chrome with zero dash chrome and i'll do in place equals true so that i i make this replacement in the actual data let's see if this works cool and then i bet you ah still where you think it's like alphabetical i was assuming yeah yeah what if i do um like a crow i want you want chrome on the left so a chrome and b safari we'll try one more time it doesn't work it doesn't work yeah why is that oh well um maybe it's just whichever is first in the list is on the right um i mean there's obviously ways that we could dig into the scatter plot function to like force the axis to be in a a certain order yeah i wonder if we can just like well okay i'm gonna let it go um okay so instead i guess maybe i'll draw a picture this will be fun okay so i'm gonna stop share for a second and let me this is my new technology of the day okay um we're gonna get an iphone ipad via cable share and now can you guys see that yes that looks good yeah some someone in chat is saying that probably because safari is coming first it plots at first so the yeah the the order of that data was probably determining it not the name i i agree with that okay i have to redraw this picture now because i was drawing this before as uh but we've got this sort of picture where we've got um we got some points for safari right and then we've got some points for chrome i'm not going to do a good job right and what's happening is we're getting we're calculating a regression line just as we did before but that regression line is just connecting the middle of these two points so if we have a point here and we have a point here sorry the middle of these two sets of points our regression line is connecting them like this now okay we had i wish i could give you guys the side by side of the numbers but i'll write them i guess i'll write them over here so in our model we had that the intercept let's think uh we had that the intercept was equal to uh like 490 and then we had that the that like browser browser t dot uh what was it safari or chrome i forget which one was one which one was zero t dot safari equals negative 99 about let's like think about what this corresponds to on our graph so when it says intercept equals 490 that means that the intercept the yintercept is 490. and remember that the yintercept is just the same as the the point at which our line crosses the yaxis in this case the yaxis right is the same as where all these points are um because i don't understand the joke just some anime uh um so here right remember this zero was corresponding to chrome so the yintercept is this red point here and that's our 490 right that's hitting the yaxis at 490. so that's where well so is that the that's the point on uh on chrome which is zero that is 490 or is it like if i extended the so that's different than what i expected what i expected was oh let me extend this line um so you know so the line hits the um the yaxis and then that's my intercept but i guess that doesn't really make sense because it's already zero right yeah so it's all like kind of semantics of how i plot this so i'm plotting it with space between this axis and this this spot right but remember the yintercept is where the line crosses the yaxis and the yaxis is where the xvariable is equal to zero so the yaxis is actually this dotted line right so really it's all on top of each other but just for ease of drawing this so we can see the blue dots and stuff you've shifted it over a little bit yeah so if i want to make this like a little bit nicer so that we can all see it um we could i've erased this and we could think of this as our yaxis and our points are just kind of along it right like these these points that we drew for chrome are all along what's technically our yaxis because chrome we're we're making chrome equal to zero and our yaxis is where well that should be a straight line but you know right yeah and so that makes sense for our intercept there where it's um yeah 490 the line doesn't really continue to extend i guess it does extend in to the left but uh it's hitting the axis right where since chrome is encoded as zero right okay so our line our line technically continues on in both directions but the thing that we care about is that the yintercept is actually the middle of these blue look these blue points that correspond to chrome and then we've also got some points over here that correspond to safari right so these are our safari points and we we need to understand what this number is coming from or the where this number comes into play and remember that a line has to have a yintercept and it has to have a slope and so the slope remember is rise over run so the slope of a line over run in this case this line has a positive run so the run to get from one point to the next we move over one unit that's a run of one unit and then we have to go down to get to the next point by some distance this is our rise and it turns out we know that's like three so i bet if we looked in our data and found the middle of the safari data it would be what 391 right yeah so we'll do that in just one second but i'm gonna just write in here right so the rise is equal in this case equal to negative 99 and so our slope is rise over run it's negative 99 over 1 or negative 99. we have a really good question from harsh deep of last time we had weight and height and so it was a little bit like more intuitive to understand what uh what these um coefficients are meaning so uh his question is what does this represent in terms of the data what is 490 with respect to time and browser yeah so that's that's a really great question um so in this picture and we'll show it in the data in just a second you'll notice that the 490 right is the middle of all of these blue points and the blue points are amount of time spent by chrome users on the website so the middle is going to end up being the mean time spent on the website by chrome users and as we see right we can think of this as this negative 99 as a slope but because the run between these two points is one right like the difference between zero and one is just one then it's really just the rise or the difference in the vertical uh height of these two red dots and this red dot represents the mean time spent on the website by safari users so in other words this minus 99 represents the fact that on average safari users are spending about 99 seconds less on the website compared to chrome users yaxis is seconds yes good um good call so the yaxis of the seconds the xaxis is browser and we've got our yintercept which is mean time for chrome users of 490 and then we've got our slope rise over run run is one so our slope is the rise and that is this distance and this is the vertical distance between this point and this point these two points each represent the middle of their respective sets of points the middle being the mean time spent on the website we got another good question from the chat of like why is the rise negative oh that's a great a great question so this comes back to um a little bit of like graphing algebra right so um rise so coming back to just like equation of a line and slope slope is rise over run and when we when we think about slope um we think about to get from one point on a line to the next point on the line how far over do we have to go and how far vertically do we have to go when we talk about over when we talk about horizontal and vertical distance we always think of going to the right as positive and going to the left as negative and we think of going up as positive and down as negative so this is a positive sloping line this top one for this positive sloping line to get from one point to another point we go our rise is up and our run is over so our rise is positive and our run is positive so a positive over a positive is a positive for this one to get from one point to the next our rise is down right and then our run is positive or we could also think of it as like run is positive or sorry rise is positive run is negative in either case we've got either a negative over a positive or a positive over negative a negative over a positive or a positive over a negative is negative so the slope is negative because we have to go right this point when we go over one unit positive one unit we have to go down to get to the average safari time and so the rise is negative 99 which really just tells us that the average for safari is less than the average for from cool okay exactly yes um okay now this is nice and pretty i'm going to stop this share and i'm going to go back to back to my code okay so now let's go ahead and i'm going to copy this over so you can print it out down here run and then i'm going to also do website dot group by browser dot mean i think and then we really just want ten seconds so this gives us the mean time in seconds that people spent on each um on each browser go back to our regular okay um so we've got 489.7 seconds on chrome and 390.65 seconds about on safari on average and you'll see right that this number matches up with our intercept so that's what we were talking about before the intercept gives us the average time spent on chrome and then this number we said gives us the difference in mean time spent on chrome versus safari and it tells us that people are spending less time on safari so if we take this number and we subtract this number basically add these two together we get 390.64 this 64717 which is exactly the same as we calculated them as the mean time spent on safari i guess so my question after seeing all this is like all of this follows together we dr we have those two like yellow points uh so that corresponds to the intercept and then we can find the slope between those two points um but i i guess my question that kind of like relates back to the very beginning is like why do we choose the mean right we have these um we have these two columns of points and we could choose the median or we could choose you know some other metric to find the middle um all of this is coming from we chose the mean of these two points so why why the mean and not something else it's a great question so it it turns out and you can prove this to yourself mathematically remember that when we fit this model we're using the ordinary least squares method which is to say that we're trying to minimize the distance between each point and the line um and so if we draw this line on top we can think if i remember properly yeah you can here i'm gonna just grab this but uh i can explain what i'm doing so if i replot this and then on top of it i just plot the points 0 comma 390 and 1 comma 489 it'll plot this line it's kind of backwards for this example but we'll just run with it right if this is our line we're fitting this line to minimize the squared distance between all of the points in the line so to minimize the square distance between each point and this middle and it turns out that mathematically the point that minimize the the point that minimizes the distance between all of these points and this middle is the same as the mean mean people yeah and and then again uh this line looks different this is a positive slope and again that's because we're actually chrome is our is zero safari is one and so if we could flip those two if we could put chrome on the left and safari on the right um but still connect the two means then it would look identical into that graph we were just drawing before exactly um okay in the interest of time i'm going to switch over to another example where we use a categorical variable with some more categories so i'm going to grab this data set from here this is back to our rentals data set if you've uh if you've come to any of these live streams before or done any of the uh regression or other machine learning stuff on our website you may have seen this data set before we're just going to look at a subset of it where we have some information about rental prices in manhattan and we have some information about what burrow each of those apartments was in um in manhattan and you'll notice that burrow has in this case there's more than three burgers but uh in this in this data set we have a column burrow that has three possible values brooklyn manhattan and queens and so now we've got one more uh category and so all of a sudden this initial setup no longer works okay uh so i see there's a question so this mean time the mean time people spend on the website or the meantime the web browser loads the website in um for this example i was using the like it's it's not real data but i was just making up that it was the amount of time people were spending on the website um but it could be either but it could be either you know you could have a different a different data set um yes and yes i see someone commented formula for mean is the same as for average um it's just the same thing yeah use different names for different things sometimes um okay so similar problem but now we've got three categories instead of two how are we gonna handle this number of categories is the question so i'm gonna actually do the same thing that i did before with patsy.d matrices i'm going to print out the the x matrix for this problem um where we're we're predicting rent based off of borough and this time the data is rentals and if you like the web browser example again this could this would be the exact same thing if we added a third browser if you know yeah we could do predicting time based on chrome safari or firefox or whatever you want exactly um i probably should have done that but just make a new data set um okay so you'll notice that now we actually get multiple columns that didn't exist before now we get two columns of the format borrow t something but now we've got furo t manhattan and burrow t queens and then we don't have boro t brooklyn even though we know that that's represented in the data set so let's look through this we've got our first five rows remember are brooklyn manhattan manhattan queens queens so for the t manhattan column we've got zero one one zero zero and we see that that matches up with the two rows where the apartment was in manhattan so this column is going to be zero everywhere that the apartment was not in manhattan and it's going to be one when the apartment is in manhattan um it doesn't matter if it's not in manhattan and in brooklyn or not in manhattan and in queens either way it's going to be a zero if it's not manhattan and a one if it is manhattan we call this like a dummy variable for manhattan and then for this column we have the same thing but for queens so it's a one if the apartment is in queens that's why we have two ones here and it's a zero everywhere else so brooklyn or manhattan is not queens so we're gonna get zeros everywhere else um alex do you have an idea why we don't need to have brooklyn here yeah i guess we can figure that out from kind of process of elimination of if we know there's only three categories and i guess taking that row zero for example it's not manhattan it's not queens and because we know we only have one more category we can kind of um deduce the brooklyn column based on um based on these other two columns exactly so having a separate burrow t brooklyn column doesn't give us any more information when we get into multiple linear regressions so we have multiple predictors we'll talk about this issue of colinearity which means if you have an extra column of your data that provides no new information compared to the other columns that you have then that actually causes issues with fitting the model um so we've got just the two dummy variable columns that we would need in order to fully recreate this borough column but we have the minimum amount of extra information okay so now let's go ahead and actually run the regression um and we'll see what this looks like so we've got model equals and this time we're doing rent predicted by burrow we're printing the model parameters and we'll see that we get an intercept again and then as expected based on this output we get a slope for t manhattan and we get a slope for t queens two different slopes what do we do with that so i i have no clue how to how to interpret the two different slopes but if i were to do it independently of each other so the intercept is where it's hit is going to be the mean of the um whatever is is category categorized as a zero which i guess in this case is uh well i guess it's it could be either of them right like it's not the same thing where we have like it's not zero one two um so i don't i actually don't know i was i was gonna say i was gonna guess that that uh 3000 was the mean of brooklyn um i don't know if that's the case or not so let's actually let's draw it out um i'll switch to this is so fun um i'll switch to my drawing board again okay um see that and um i'm gonna just write out these numbers again um so we've got intercept our intercept was equal to three three two seven our borough t manhattan was equal to one one eight one roughly and then our burrow t queens was equal to negative eight one one it turns out we have two lines that we've now determined based off of this this regression output so this time in our first graph we've got a comparison between brooklyn and manhattan so in our brooklyn versus manhattan graph we've got some points for the rental price in brooklyn and then we've got some points for the rental price in manhattan again this is this yaxis rental price and then the middle of those points is going to be that's our mean rental price in brooklyn here i'll label these axes so this axis here is brooklyn and then this axis here is manhattan workout we're treating brooklyn as zero we're treating manhattan as one and then we've got the mean here the mean in brooklyn is equal to the intercept so the mean in brooklyn mean in brooklyn is 3327 and then this is our line our regression line and remember again since manhattan is one brooklyn is zero our run is one so the slope is really just the rise so the slope is the vertical distance between these two that's our slope and that's equal to this value so alex what is the slope for t manhattan what does that represent um so that represents yeah the uh so i mean i can figure out the at the mean of manhattan based on based on that where it's we're gonna be going over one unit um and then up uh 1100 units and so i can say okay the average of the manhattan data set is 4 400 4 500 something um so let me write that in so the right the vertical distance between these two points is equal to 1 1 8 1 and so if the average price in brooklyn is three three two seven and the difference between brooklyn and manhattan is one one eight one then this point is equal to or this height is equal to 3 3 2 7 plus 1 1 8 1 whatever that is equal to we'll calculate that in a second then we also have this second line that's determined by that's determined by this slope and i'll draw that on a separate axis so we still have all these points for brooklyn and the mean of those points is still three three two seven so the mean is still three three two seven for brooklyn right this is still zero and it's still brooklyn is zero but now we've got one over here which corresponds to queens sorry i'm still learning how to use this ipad um right our one corresponds to queens and then it looks like the slope is negative so i'm going to draw these points so that we can visualize it a little bit lower and then the average is about 8 11 units lower than this average so our regression line is like this and the vertical distance between the points is minus 8 11 which means to get to this average the average in queens average rent in queens we've got to take the intercept which is the average rent in brooklyn or 3327 and we need to subtract 8 11. so basically all we've done and i'll go back now to our do our code basically all we've done here is we've recovered the average prices in each of the boroughs so what i'll do is i'll now do rentals dot um group by burrow and then calculate mean rent sophie we can't see you typing that for some reason oh what am i sharing um or at least i can't see it let me try yeah great question in the chat which uh we should definitely get to of um why did we not get between manhattan and queens why was base everything based on brooklyn but um okay cool we can see that now yeah that is a great question so if we print this out we see that the average rental price in brooklyn is 3327.4 so that's this number then we see that the average rental price in manhattan was 5138 and if we take this if we take this number and we add this number we should get that number nice and then if we take this number and we add this number so by adding a negative number we're just subtracting but plus sign in there we get the average rental price in queens so by giving us the intercept and the two slopes we can recover the rental price in every borough because this is the average in brooklyn and then this is the difference in brooklyn and manhattan so by adding these two numbers we get rental prices in manhattan and then this is between the difference between brooklyn and queens so by adding the intercept and this slope we get the rental price average rental price includes okay um so if we wanted to make a different comparison so remember when we printed this out brooklyn was the missing column right we had manhattan and we had queens um we call in this case and this is just by default brooklyn is the uh is the reference variable for this regression that we're doing and anytime we have a categorical variable with more than two categories we need to choose a reference variable that's going to be omitted from the regression or omitted as from sorry omitted from um this like design matrix and then in every case then the intercept is going to give us the at least for simple regression the intercept will give us the average for that group and then all of the slopes will be in reference to that group so that's why we call it the reference variable um if we want to change the reference variable then we can use some other notation so i'm going to just quickly show because i already have this written out and here i think um so this code um this like notation tells us tells uh this function that i want manhattan to be the reference variable instead of brooklyn if i want manhattan to be the reference or if i say manhattan is the reference variable then the intercept now represents the average in manhattan and then all of these are in reference to that so now this is brooklyn compared to manhattan and this is queens compared to manhattan and i could choose any reference variable i wanted um if you're using um if you're using sklearn which i know many people do you have to do this manually so you can do pd.getdummies and then if you don't do drop first so if you like here i can report this over so if i do if i use this get dummies function it gives me all three dummy variables and then in sklearn i can actually just choose which ones i want so if i want um queens the reference variable i can put in brooklyn and manhattan to this model and then print out the coefficients and it'll give me everything in reference to queens this is the way that this prints out this is the intercept and these are the two slopes the this learn output is a little bit harder to read yeah sophia i know that we're like basically out of time but i uh my question is like how does this all come together right where we like we now have these two graphs we have these two lines um but i like i don't even know how to visualize plotting these the three columns of lines of brooklyn manhattan queens like i don't i don't know how to get all of this onto one uh one graph now yeah so it's pretty it would be pretty hard to graph it in one graph and that's going to be part of the difficulty as we move towards more complicated models with more predictors because basically what this is is we we basically started talking about multiple linear regression without realizing it because when we fit this model we actually fit a model with multiple predictors it kind of happened on unintentionally because we had one column in our original data set but in order to fit the model we actually had to create two an extra variable in order to model this using linear regression and actually the same thing is true for most machine learning models that you might use you're going to have to dummy code um categorical variables because most models use like numerical distance metrics and if you don't have things written as numbers then you can't fit the model um so as we move into more complicated models where we want to have let's say we want to predict rental prices but based on burrow number of floors area number of bathrooms number of bedrooms like we want a lot of things we're going to end up with this really complex model that we can't really visualize anymore um if we have multiple uh quantitative predictors like if we have two quantitative predictors we end up fitting like a plane so we can kind of visualize it in 3d space um but then once we get past 3d like two predictors we're we're stuck we can't visualize things anymore so at this point we're trying to still visualize by drawing two different graphs and then in the coming weeks we're gonna kind of get out of out of the realm where we can visualize everything at once we can only visualize maybe a piece of it at once got it so multiple linear regression would normally be like hey i want to predict my dog's weight based on its height and it's um you know some other variable about the dog and yeah yeah breed is like a categorical thing so i want to say that but like i mean um no but you can have categorical variables in there yeah and so in this case even though we still only have two variables of cost and burrow we've now split that into we've built this model based on cost and uh i guess in the example that we're looking at that's brooklyn compared to manhattan and brooklyn compared to queens so we've like split this one variable out into two different variables and now we're doing like a a multiple linear regression thing um just like we would do again if we were trying to do like dog's weight based on height and breed yeah this time our predictors are is it in manhattan yes or no and is it in queens yes or no those are our two predictors for this model cool cool all right we ran a little late i always think like am i gonna have enough to get through an hour and then um i get we get good questions so that's awesome um so we will be available on thursday if you have any questions that you want to ask also there's a really great article and lesson has a lesson on this in the linear regression course so you can check those out on codecademy and feel free to also post any questions as comments in the youtube um video anything i'm missing no that sounds good uh yeah and then we'll be back next week for uh for another live stream yeah all right