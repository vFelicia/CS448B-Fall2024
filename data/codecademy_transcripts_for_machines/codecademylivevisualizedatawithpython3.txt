hello everyone and welcome to another session of code CAD me live but we are hopefully streaming on YouTube and twitch right now my name is Alex Koontz I'm a curriculum developer here at Koch Adam II and I've got Kenny with me Kenny you want to introduce yourself everyone like Alex also a curriculum developer and guide code CAD me super excited to be learning a bit about pipe on today with Alex well alex is gonna be teaching I'm gonna be learning alongside you guys yeah so we Kenny and I are both in the YouTube chat right now we're also streaming on Twitch although I don't think many folks are over there right now yeah if you're watching this video in the in our historical YouTube page I want to show you very briefly what these events are and how you can follow it so I'm gonna do that very briefly and in the meantime if you're alive on YouTube right now go ahead and start chatting us with us in chat where people coming to us from and all of that sort of stuff so today's focus is gonna be mostly Python functions but if there's anything that you guys have questions about Python related or cook aadmi related just write it in the chat we're hearing a few we're here we're happy to answer questions / thing cool all right so again very briefly I want to want to show kind of these events that we are working on it on code Khadem ii if you go to code Academy comm slash events or even if you go to just coke atom ecomm you scroll down to the very bottom you will see that you have this events page and this kind of shows you our scheduling for upcoming events so this stream that we're doing right now we are going to be streaming every day or sorry every week on Tuesdays at 100 p.m. Eastern Time don't just be streamed on YouTube and our other various social social media platforms so you can catch us there and yeah if you look at this event page you'll see that we have some events about our community a team is putting together an event where it's just a study session we have a Q&A event for pro members that you can come in and ask more like direct questions to the members of the curriculum team so we've got a lot of events coming so for anyone that doesn't know what we're doing or you know our kind of plans for the sort of stuff this event page is really the place to go for all of this all right Kenny what let's jump right into this lesson so what sounds great this year the series that we've been doing is we've been going through the visualize data with Python skill path the way that you can find this page by the way is clicking on the catalog I wanted to briefly show this page because we are super excited to announce that we just launched three new skill paths we just launched to analyze data with our past the technical interview with JavaScript and one more might not be appearing on this page so we just added a couple of new skill paths so if you're a big coke atomy fan haven't seen those yet that was been released but in this stream we are going to be going through visualized data with Python right off the bat we have a question from chubbs where where they're asking what's the difference between learning Python and visualizing data with Python oh yeah good question so I think I think we'll see a little bit of both both of those things throughout this series so right now we're going through this scope ask which is visualize data with Python and you'll see if you look at the path towards the end we get into how to make graphs in Python and specifically with matplotlib and Seabourn but in order to kind of do that more advanced stuff in order to make visualizations with Python you kind of need to learn the basics and so that's what the path starts you with are kind of some fundamental Python concepts that you uh that you might be interested in so this is our third session that we've done it so if you look in our YouTube history you can watch the first couple of sessions where we've gone over introduction to data visualization gone through Python syntax and in this session that we're going to be going through our lesson on introduction to functions um but before we do that we thought that we would do a quick review of Python syntax and we are going to do the syntax quiz that we didn't get the chance to do before so yeah it's been a while since we live stream so exactly this get a refresher and then we could jump straight into functions alright so Kenny what's the difference between a float and an integer you see this has a ton of different programming languages okay geez I know from I'm not versed in Python but I know the floats allow for decimals or like floatingpoint numbers just where the name comes from and an integer is like a whole number what's answers yeah so it looks like it's the first one away or a float these are two different datatypes floats let you have decimal points where you integers are just a whole number at one I was a lot of pressure Alex oh yeah all right which one of these would produce a syntax error so for this one this is a question that's talking about defining a string and so let's see is there any difference between these two oh yeah it's very subtle very minute oh yeah so what what difference do you see here coming I'm seeing some mismatched quotes which is never a good sign ah so in the second one we open with double quotes but we close with the single quotes and so that is actually going to cause an error it's possible that this one would cause an error too if the thing on the right side is not a defined variable yes but this mismatch of quotes is definitely gonna be an error that's that last point Alex is it's like different from a syntax error like you would lead to an error but it was it like interesting yeah I mean yeah I guess it's not a syntax error it's almost a kind of logical error judge alright what is the value of total costs that gets printed that's so total cost starts at five we use this plus equal sign along with ten and that maybe does something to total cost and then we print total cost so this question is basically testing your understanding of what plus equals does chemi you've seen plus equals before what does plus equals do it saves over it increments it and also saves over that to the new baby so the existing better ah interesting so this is saying that I'm gonna take total costs I'm gonna take whatever used to be stored in total cost I'm gonna I'm gonna add on to it and override or and like save that value in total cost so this is gonna say total costs used to be five we're gonna add 10 to it and then save that edition so what's going to end up being 15 all right what function output outputs text to the terminal so we have a couple of different functions here they all do different things but is it this one is kind of your typical function that is just going to show messages the terminal it's a function that you use all the time really busy or really useful for debugging and that is the print function hi everyone in chat I see all of your questions and comments I can definitely touch on some of those questions after we go through this quiz yes I only elaborate I'm providing some surface level school yeah and I'm kind of trying to go through this quiz quickly just so we can get to new material but um I take questions along the way as well so a multiline string in Python or multiline yes string in Python so if you want to create a string but you know if your string is so long that it looks kind of terrible in the in your text editor and you want to break it into multiple lines you can do so using this guy would be three quotation marks and you're on fire Alex how do you concatenate two strings ooh so this is definitely different in different programming languages first Kenny I guess what does what do you we may invite combine two strings or concatenate two strings it sounds like taking two strings and putting them into one singular string right yeah exactly so we oftentimes see this word concatenate where we just kind of want to smush two strings together and you do there are different ways to do this in different programming languages I think Python is just the addition sign dot concatenate that looks a little bit JavaScript e to me but think in Python it's trippy + design I want to cost me alright what is the value of the modulo variable in the following expression any what the heck is modulo it's this one often takes a little longer to explain it's like take the roommate find the remainder of after division right so I'm gonna divide 14 by 4 which so 4 goes into 14 3 times so we get 4 8 12 right it goes in three times and then we have 2 left over to get up to 14 so the remainder is 2 so that's what modulo does ok right answer exponents here so this question is basically asking how do you do exponents in Python and it's with the double star notation and so 2 to the 4th you have to the first is 2 2 squared is 4 to the third is 8 and 2 to the fourth is 16 what character begins a comments in Python this is the hash tag I don't know if you guys so Kenny and I were both were both classroom teachers and I don't know if kind of you reached a point where I so I started teaching in like 2013 and I was still using the terminology pound sign and then pound has just been completely eradicated from the face of the earth nobody says pound sign anymore everyone is saying hash tag yeah it's it's like a nice little fun fact to bring up and it's like hey this hash tag is actually known by so many different names the acos throat have you heard of that one oh I've heard of the octo through oh yeah I remember I remember my students just being like mr. Koontz what are you talking about that's a hash tag what does a pound sign there's so many old moments with the students all right what what is Python syntax for creating a variable and assigning the number 10 to it so there are a couple of there are a couple of different things that are going on here so it's not def def is how you create a function name which but we're actually gonna be talking about in today's lesson equals equals Kenny what is this what is equals equal ones doing here that's like an equality operator right where you check to see if two values of the same yeah exactly so this isn't assigning the variable to ten it's checking to see if the value already stored in variable name if that's equal to ten so this one return like a true or false it doesn't do anything with assigning the variable this is the correct answer just a variable name equals ten and then new is kind of like a special keyword similar to def where we see that in kind of objectoriented programming and classes and objects and things that you can learn about way down the line all right what happens when running the following code hahaha this one is a little bit of a trick question this is going to throw a syntax error because it's not surrounded by quotes so if we wanted to actually print out what a cool message we'd have to put quotes around that so this question is just kind of testing to make sure that you know how to properly define a string so yeah message wouldn't be printed message is just the variable name if this if message we're actually storing a string right if we did this correctly it wouldn't print message it would print the contents of message for the what the variable message is is storing all right what is the output of the following code Kenny in prep this one got me oh boy oh because it's not reassigning cool number right yeah so cool number starts at 42 and then it looks like we are multiplying 42 by five which I assume will give us 210 but what Kenny just said is exactly right we're not reassigning cool number if we wanted to reassign it we could say cool number equals cool number times five but we're not so it's a little bit of a trick question could we use the equals star five kind of thing yeah so earlier we have that question about like basically what does plus equals do plus equals not only does the addition but it also sets it also like resets the value to that new value yes so we could do cool number x equals five and I would say take the value currently stored in cool cool number multiply it by five and a reset the value a cool number I'm just trying to make you say cool number multiple times it's works alright last question which of the following defined variables is a string it's one it's one it's fairly easy we've got float you've got an integer we have a string which is something that's surrounded by quotation works and then this will also be an integer where this is we're doing some exponent works work it's four to the 14 to the third when the string is cool variable three yeah a hundred Alex thank goodness if anyone in chat has liked any questions about that feel free to feel free to post questions I'm gonna pull up the lesson that we're gonna work on next I don't think this is gonna take us to what we actually want we're gonna skip the project from that yeah back to visualize data Python all right 15 minutes in and cool the thing that we are going to be covering is the third main lesson in this course which is introduction of functions it's super important concept glad we're covering this definitely functions are in almost every programming language I don't think I've ever worked in about programming language it doesn't have functions I suppose there are some very strange ones that that might not have functions but the things that you learn in Python can totally be applied elsewhere so cool uh Kenny do you see any comments that you think are worth worth talking about before we dive into the lesson um I think Chris G mentioned something that was worth while we should talk about like would you recommend we learn Python 3 module before tackling other Python subjects and I had mentioned that like yes I think especially if you're just trying to learn a language to do so thing I imagine other modules we're talking about like skill Pat's and very specific things that you might want to do so learning the tools to do something and then figuring out what you want to do could be worthwhile other people take a different approach but yeah thoughts Alex yeah I would agree this skill path that we're going through we teach the little bit of the Python fundamentals that you'll need in order to get to the data visualization stuff but we also leave out a lot of Python fundamentals that are not necessarily necessary for data visualization but are like probably good to know in the long run it's kind of like if you were just interested in learning data visualization take this skill path otherwise I might look into either the computer science career path or the Python 3 course that one kind of give you a more rounded or a more complete understanding of what a a Python as opposed to this I'm very specialized go path alright let's let's get going so this introduction to function functions I love this I love this animation that we have that kind of shows this office so the idea behind the function is that we want to write code that is both are reusable and can have input and output so in this in this image that we have showing here the input is some shape and you could imagine like okay that's it's a little bit hard to think about in Python terms because it's like how do we even define what a shape is perhaps that's just a number of this shape has three sides or four sides so we know how to create integers in Python and then we are taking this function which we have named add one side and we are applying that function to all these different inputs and the function then gives us output so when we apply it to a triangle it produces a square when we apply it to a square it produces a Pentagon a Pentagon makes a hexagon all that sort of stuff so this is this is kind of like the one of the main ideas the kind of function is that we want to write code that's both reusable and can deal with the inputs and outputs any any thoughts about that Kenny any yeah reusable and it's always ask you think it also looks like very consistent right like it's consistent behavior that we observed throughout and if something were to change in that behavior I guess we can look into that one place that ad one side function and deal with it there yeah functions are kind of nice because you know you don't you don't necessarily need to know all of the code that's going on inside this hammer right like somebody wrote this ad one side function that does the thing that turns a triangle into a square but if the person that wrote that function did it correctly and did it well you can just assume that this function is going to work it's going to do what you want it to do it's gonna add one side to the shape and you don't really have to worry about the implementation inside that function if you're just using function so you see this like all the time and in a real development where you're calling functions all the time where you don't really know every line of code that's happening inside that function point Alex all right let's dive into how do define functions in Python hopefully you load here I have to refresh ya oh one other thing I guess Alex it's like I know that gif displayed input and outputs inputs and outputs but like do the two functions always need inputs and outputs definitely not so even in this first example that we're doing here there's no there's no input or output from this function this function is just going to do some things sometimes we call these like sideeffects of the function because usually a function has input and output but this function in particular doesn't have any input and output it will just do the exact same thing every single time that you call it it's not dependent on on any input or output gotcha very cool cool though all right what is a function so as we were talking about a function is kind of a bundle of code that can be caught that can be used all at once and it can be we used and so in this example we are defining a function named singsong and sit and if we were to call the function these four lines of code would be wrong we're gonna get like into all of the very specific Python syntax of like okay what's this DEF keyword what's the colon doing here there's like seems to be some sort of indentation going on but basically the idea is that we've written the blueprint print for what does it mean what do I mean if I say call a sing song we've written the blueprint here and now we can execute that code we can we can run that blueprint so the instructions here say we've made a function for you called sing song call that function wants to see what it prints out so though I can call the function by just writing it like that there we go we see that our four lines of code are printed out singsong a second time and what do you expect the output in here to be Kenny we should see eight lines where it's the next four lines on the repeat of the first four lines exactly so the exact same thing is printed out twice so you can kind of see that this is the first really useful things about fun functions with air instead of you know I could also print these oops I could also print these four things out twice by writing this code twice by copying and pasting right that'll do the same exact thing if I didn't call the function twice but that's a lot of repeated code that's a lot of like effort and copy and pasting and it makes my file look worse so in this example I think the main purpose of this function is to condense that code to put those four lines of code into a single line of code all right let's see here's a good question that we had from our community forums in general when should function be created in the code what do you think about my Kenny I think like the name of functions it lends itself to her to knowing that as well just like if there is something that I know I need to be doing in this case singing a song many times over I would write a function so that I can reference those four lines of code so I could do it over and over and over again yeah I think going back to that point of reusability and maintainability or keep it go dry neat and then yeah you can can always go back and reference it that's what would make life easier and that would be my guiding point keep life easy nice I think that I think that's a that's a good good kind of reference point to keep track of just like would my life be easier if if this was in a function and I didn't have to keep repeating the same code over and over again all right cool so in this exercise we're going to actually write this function and so this this goes into some of these keywords that we were talking about so in order to define the function we have to use the Python keyword def so functions are in many different programming languages and in Python we say hey I'm writing a function by using this keyword def Kenny what it what is it in like JavaScript on F Q and see yeah so other other programming languages have stuff like this where it's like okay here's a here's a special keyword that is telling me I'm about to define a function Python we're using yes and then let's see this task is asking me to write a function called a loading screen so that's the name of the function alright next we have these parentheses which for now I'm just going to leave as open close parentheses these parentheses as we'll see in a second are involved in the input of the function and since this function doesn't have any input we're just going to not worry about these parentheses right now and we won't come back to it later and then finally we have a colon we says that's the name of my function it right now it has no input and then the colon says okay you've defined the name of the function that what is the function actually do and so this function we are asking you to print this page is loading so I just ran my code Kenny why did this paper is loading not print because I so in the previous exercise in order for our code in our function to run we have to call the function right yeah exactly and so what we've done here is we defined the function we've we've like written the blueprint we've said this is what I expect to have or this is what I want to have happen when somebody calls loading screen but I haven't called it yet so now I can come down here and say okay what's called loading screen and there we go now we actually see our output I skipped one little detail of writing this function which was that this line of code is indented so let's put a pin in that and I think we are going to talk about that maybe even in the very next exercise okay let's see if there are good community form questions who is it okay to place function calls inside of another function what do you think about that Kenny from other programming language it's possible I imagine Python allows it as well but I have not tried it definitely what's up let's actually give that a try so we can do something like F my second function and I'm not gonna print this is another function okay cool so I can call this function now I can call my second function and what do you expect the print the printout to be here so let's see going down load screen is called first so it would print out this page is loading and then when we call my second function then this is another function we print yep so one thing to note is that the order in which these functions were defined doesn't really matter when I'm down here calling the function so even though I define my second function first I'm calling it second which will make the order be this page is loading this is another function but now if I do something like inside this function I called my second function what do you think happens here okay so we call loading screen first which prints this page is loading and then we call my function there so that should print this is another function and then we call my second function again so then another line of this is another function print yeah exactly so I'm writing a little comment here so this so loading screen and now prints this page is loading and then does whatever my second function does so that just like you said that will print this page is loading and my second function will print this is another function and then we have another call to my second function down here which will then print off this is another function again so I'm expecting this page is loading this is another function and then this is another function that's exactly what we've got hey Alex if I know for JavaScript there's like a concept of hoisting so like you can declare variable as our variables and functions willynilly that's an overgrowth of oversimplification but if you were to put my second function the Declaration of it after loading screen is area like an error or something it's a good question I think that this will technically error but I'm actually not sure so for people watching along like this is really the best way to understand what's happening where it's like you really can't break anything while programming right like this might throw an error but now I understand like okay the order in which these functions is declared matters maybe my second function isn't declared yet because it's declared now afterwards let's see what happens no but still worked well so yeah so the order of declaring these functions seems like it didn't matter for for people in chat have you heard of the concept of recursion before and as you answer that I'm going to gonna clean this up a little bit I want you to think about what would happen if we did this oh so can you what do you think I think I'm very nervous right now and they have a nicer web page potentially I but it seems like if you're calling a function within itself it'll keep coming back so recursion being like a loop in it of itself right yeah and when does it end though right so this is an example of recursion which is the concept of one function calling itself and so right now if I ran this this would be an infinite loop I might even like try to do that in the spirit of like you can't you can't screw up too badly right like nothing that bad can happen so if I call loading spring here loading screen says okay I'm gonna print this page is loading and then I'm gonna do whatever loading screen does well whatever loading screen does is print this page is loading and then do whatever loading screen does well whatever loading screen does is print this page is loading and the right so it's an infinite loop would never ever ever get out of there so right now this wouldn't be an issues I'm just defining it so that function is defined now if I call gloating screen this will be an Internet so I'm gonna run it and this might crash my web browser which shouldn't kill the stream if I have to cut if I have to kill my entire web browser right ah look at that that's cool oh so you can see we printed out a ton of stuff and then we got this error maximum recursion depth exceeded while calling Python object it's basically what this is saying is like Python kind of realized that we were in an infinite loop it realized like he's got eyes have called this function again and again and again we get and so many times that we've I can't do it anymore and we're just gonna bail that's good to know how I was worried about you crashing your browser and say yeah that's a good that's a good different different program languages will handle this differently I think JavaScript might just keep trying to run and depends on environment believe but yeah different languages different processes don't really all right cool okay so that was kind of answering it's an OK to place function calls inside another function this other question after completing my function how can I return to an uninvented line that's a that's a good question so it's like if I'm writing my function here we get rid of the recursion so if I'm writing my function here in order to call the function I want to be on an unintended climb right because I didn't indent again I would be back into this recursion universe where now this is part of the function and again indenting is coming up very soon but to get to a nun indented line you just have to delete some of the we like we like automatically add the tabs or the spaces here so to get to a non indented line you can just delete those tabs and now start writing no yeah and that goes into a concept of like scope right now except on later oh yeah there's a whole lot of stuff about variable scope which is like where do variables exists are they inside only inside the function or can you interact with them how and the function all that sort of stuff I see in the twitch chat we have someone named Darth Vader asking what we're doing welcome twitch chat I imagine that you're one of a few people that are hanging out over there this is we're going through a Kenny and I are both coke Adam II curriculum developers we're going through a scope atha yeah which is one of our one of our courses that we have specifically about kind of intro to Python functions alright white space cool so this is what I was talking about with indentation where as you will have been seeing with these past function declarations everything that we want to be part of the blueprint part of defining the function is indented two spaces and so let's do these instructions run it script py and look what what is printed out so it prints this computer is running on version everest puma i think this is like a joke back when all the e iOS systems were named after big cats and mountains right well i so i think that they were and they were big cats for a long time it was like the snow is snow leopard and lion and then they started doing like national parks where we have like Yosemite and exactly so we print out that line and then we also print out this is your desktop so both of these print lines are a part of the function however if I remove the two indentations for the indentation here now this is your desktop is no longer a part of the function at all and so really what we're doing is first we are printing this is your desktop and then we're calling the function so these will actually be flipped right now the first thing that we're doing is just printing this outside of any function stuff and then we're calling the function yes so if I put something inside the function hello just demo that again this is outside the functions it will be print first and then these two lines will print how about if I do I call the function twice here what do you expect output to be now Kenny so you so they well this is your laptop will be sandwiched between those two lines of this computer is running version everest puma and hello yep exactly so i called the function once which efforts out these two guys then I call this entirely separately from the function and then I call the function again yes oh and check let us know if the font is big enough for you that's too small we can can also increase yeah also chat if you're uh if you have questions feel free to feel free to ask us whenever yeah we make this as interactive as possible I forgot to kind of ask before likes um about like naming conventions hmm is there certain rules that we have to follow when naming a function yeah let me see if we go I don't think that we specifically talked about this or maybe we did in the earlier section I just kind of went through it very quickly generally you want your function name to be descriptive of what it's doing so this functions name is about this computer and it was that because we were printing out information about this computer we might have a function that adds the numbers together and so you might want to call your function like add numbers or something like that the other thing I guess is that typical Python style is to write your function name this is called a snake case where everything is lowercase and you put underscores between the words some other programming languages use camel case which would be like about this computer that's called camel case because it's like the start of every word is capitalized so it's kind of like you get like humps like a camel so so that's just it right like it's convention if I did if I wrote a function in camel tees with that break the programming anyway so as long as your function definition matches whatever you're calling it it wouldn't break so I could change this to about this computer and then as long as I call actually this will be a good example so I'm calling the function twice one correctly and one incorrectly so we should see the correct one work and we'll see the print out and then our program should crash when I try to call this function that doesn't exist Oh what happened my Run button oh that's I guess the part of like making it too big potentially oh let me refresh the page might also have to scale your own oh I said there we go the function ran once and then it crashed because the error message name about this computer is not defined and specifically the snake case is not to find right the underscore version of this function isn't defined Christian the chat says I've heard something about something called pep eight does that have anything to do with naming okay this might be a good one for you this is e or do you know what pep f8 is that is other is a I thought that was a JavaScript thing maybe that's the name of the Python documentation I said it's a style guide for Python code okay I thought it was this it was the style guide for JavaScript yeah so Chris pep eight is the style guide for Python code which is basically like recommendations or you know this is how most people are running our Python code and so in pep eight which is the style guide you'll see things like typically functions are written using the not camel case here using sniffing this great question ug yeah good question right we got 20 minutes left so I want to make sure we get to input and output but very briefly what's the deal with indentation two spaces versus four spaces versus tabs these are all different options that you could do with indentation the only thing that matters is that it has to be consistent so I'm actually gonna rename this to the correct style just to be good Python programmers I'll run this to make sure that this is good good cool ones I'm gonna add another print line of glow so right now this is good because the indentation is the same it's two spaces of indentation if I make it four spaces of indentation this is going to crash my program you'll see that the error is unexpected indent but if I make everything four spaces it should work so there's probably a style guide recommendation for whether to use two spaces or four spaces here at Koch atom II we use two spaces generally but realistically the program will work as long as you're consistent all right parameters all right so the idea behind the parameter is that sometimes we want our functions to take input value again going back to that starting image of the shapes the input value was you know the number of sides on the shape so imagine we want to have a function that has some input value and what we are going to do is we want to take that value multiply it by two and add three right now we've written a function that already does that so we say the function most to add three prints the number prints the number multiplied by two and adds three as it's written now the number that it operates on is always five call the function and see what prints out so if I just call mult two and three we're gonna do five times 2+3 and Kenny I'm seeing some questions in the chat which might be good for I don't know if your your answering those are not type in a way buddy you so cool we just we just wrote this function it's similar to what we've done before where you have no input we're just taking five we're multiplying it by two and we're adding three however what we can do is let's say I didn't want to always do with five well I could change this to six but now this function is locked into always using six so we want to write a function that lets us do this add to or x to add three for any number and so in order to do that we need to give it an input an input value or a parameter so what we are asking you to do here is get rid of this line of code and say that's the number at a parameter called number so I'm gonna add a parameter between these parentheses this is our input print we're saying I expect you to give me a number and with that number I'm going to multiply by two and add three now when I actually call the function I can't just leave these parenthesis empty because as the definition of the function has said I expect you to give me a number so I put four in here I guess that I guess the exercise asked me to put one in here so if I put one in here one is now going to be substituted in number so I'm gonna do one times two plus three I should get you get five yes because 1 times 2 is 2 so 1 times 2 is 2 plus 3 gives me 5 I can now call this function again like we asked you to do with the value of 5 there we go the function has done something different now right it hasn't done the same thing again and again because I'm able to give it different inputs let's do it with a negative one and let's do it with zero cool so before when we weren't working with inputs our function could basically only do one thing it was deterministic it always did the exact same thing because we couldn't add inputs that would change that will change what it does by adding an input now the function can do the same thing right it's still always multiplying by two and adding three but it can now do that with any number that we give it cool can you please tell me what a realworld application would be I've heard that JavaScript is good because with no no js' you can work on the front of the backend and truly be a full full stack developer that's a question in chat yes so javascript deals with web development python more deals with we use it a lot for data science or in the past I have used it a lot for data science but for an example of like a realworld application of this is let's say you were writing a program that I just wrote a project for coke Adam Edelen with like coronavirus data right and one of the things that we had to do was we had a big list of data points and so we had to sum up all of the all of the data or we wanted like sum up all the numbers in this data set to find you know how many people have that have recovered from coronavirus over the course of the past couple of months and so I wrote a function to do that right rather than rather than just writing all my code out outside of a function I wrote it inside of a function so I could plot that could apply it to how many people have recovered in the u.s. how many people have recovered in Italy right I could give a different input and the function would know what to do with that input and give me a result cool all right an example it looks like that yeah let's see I'm looking at the community forum questions in Python do parameters still hold some value when the function call completes I think the easy answer for that is like know when the function call completes this one is kind of forgotten about right where we were subbing in what we were using one in place of number and after this function is done number doesn't really remember that it used to be one right we call it again and now the number is five we call it again and now number is negative one so after the function call completes it's like the blueprint has been used and it doesn't remember that it has been used it's just ready to go again it's like it's serving its its job as a blueprint and it's ready to go again with whatever number you give it next all right multiple parameters so in the previous exercise we just had one parameter right we said we're interested this function wants one number and it's gonna do some stuff with that number you can imagine that you would want a function that takes multiple numbers so a real world example of that is maybe I want to write a function that adds up all of my bills so I need to give it my electricity bill and my you know my heat bill all that sort of stuff so this is a function that you need multiple sources of input so let's see we're saying first change the name of the function tumult X add y ou X Y so right now that function is still only taking one parameter named number but what we want to do is we want to add two new parameters so let me briefly call this function so I can calm won't X & Y right now I can give it a number let's give it five that's gonna do the same thing as last time right we're gonna multiply 5 by 2 and then add 3 so that you know I didn't pass this it's test because I didn't do what we asked but you can see that we printed 13 so I can now add multiple parameters by just adding them with a comma here in between the parentheses so I can add in the parameters X and y when I want run this code right now I'm gonna get an error because I'm trying to call this function with just one parameter but I've given the the blueprint right I've told the function hey you expect three numbers so if I run this function right now you'll see that the error is missing two required positional arguments missing x and y well that's saying is all that with just five and if I wanted this function to run correctly I would have to give it two more so let me run that right now and we'll see that the code ran successfully right now I'm not doing anything with these these parameters right in the function I'm using number in this print statement and I've defined X and y I'm not really doing anything with it yet so we say inside the function replace two in the print statement with X and three in the print statement why so now when I run this code what's going to happen is that five is gonna be the value for a number one is gonna be the value for x and two is gonna be the value for y and in fact I'm going to change one into two and three just so it matches with what we're asking you here there we go so now we have a function that expects multiple parameters and then we're doing different things with those parameters so again now I can kind of change up how I use this function the blueprint is written and now I can use the blueprint in multiple different ways so you can see the first time I did five times two plus three the second time I did one times three plus one two different values all right this is a great question will a function still work if there are multiple parameters but some of them are never used within the function itself kind of demoed that earlier right if I just change that Y to a five we're asking for a Y right we're demanding that when someone uses this function that we give it three values but then Y is never actually used in here this will totally work I can still run my code doesn't crash but it's a bit silly for me to be asking for this third parameter and then we're using it she might function use print or return it's a good question we haven't gotten a return to return yet so hopefully we will answer that coming up yeah this this question that is asking how can i rename a function because we asked you to change the name of the function to motes x @ y if you like reset the code here you'll see that the function was originally named mol to add three and we asked you to make rename it to mult x and why it's a renaming a function is really just changing the name as it's defined right up there my thought was just like I don't think you can that makes sense yeah I think it's just that that's a that's something where this instruction is a little bit confusing where we asked you to like change the name of the function that's already defined we don't realistically when you're writing Python code you're probably not doing it that much probably maybe like you have an idea of what you want your function to be doing you name it something appropriate and then you never like after we change the name not you make sense all right we got you've got five minutes left let's get through one more and then I'll plug our next sessions keyword arguments so this is getting into like kind of the nittygritty of of our parameters the idea here is that sometimes I can use I can set up default values for these parameters so because we just have a couple of minutes I'm not even going to go through the instructions here I'm just going to show an example where right now we are calling this function and what this function does is it accepts a name I guess this is new so far we haven't we've only seen putting numbers or integers in as our parameter here we're putting in a string and we are contaminating that string with create a spreadsheet columns so if I run this code you'll see that it prints out create a spreadsheet called it downloads so the idea behind keyword arguments is that I can give this argument a default value by doing something like my my spreadsheets actually before I even do this let me let me do this I removed downloads there my program is gonna crash and again we saw this in the last exercise of we have the blueprint expects us to give it a title and we don't give it anything that's own crashes we can change this by giving this this parameter a default value of something let's say my spreadsheet find out we run this code even though I don't give it a value here Python knows to pull the one that that is defined by default so this no longer crashes it just says okay you didn't give me a value for title and so I'm gonna use the one that you gave me when you when you wrote the blueprint when you define the function I can override that by saying by giving it a value great I can say forget about my spreadsheet I want the the thing that you use for this title variable to be download there's a lot of subtlety that goes into this this this exercise goes into like what if I have a second parameter called whatever age can I give this a default value of 20 all right there's like a lot of subtleties now that were starting to add more complexity to our parameters some things work some things won't work fortunately we have three minutes left so I don't think that we are getting to it today but if you're curious about this sort of stuff we recommend you taking the course you know I feel like we kind of flew through this stuff very quickly and so if you're confused about any of that we would recommend taking the course again I'll show you how to navigate it specifically what we were doing today if you go to the home page of code Academy go to the catalog we were going through visualize data with Python so and so this is a big one long track it has a lot of exercises in it there's cool cheat sheets there's all that sort of stuff there's lots of you know there's lots of great content in here the thing that we specifically did today was Python functions we got about half if you got lesson there's a quiz that can help review it there are projects which are kind of further practice getting you to use those concepts in different ways yeah so if you want to keep working on that or finish that lesson that we didn't get a chance to finish this is the yeah this is specifically where we were working on it cool all right let me plug what is coming up unless you guys have something to say Kenny no I was gonna ask exactly that and just read my mind Alex let's go cool so coming up we have a couple of different events and we go to our events page just just to show them off you go to the events page we have a couple of events we have the thing that we are in right now which is visualize dated with Python number three tomorrow we have a Greek focus session this is not run by me or Kenny I think this is our community team oh yeah will Lisa like all those all those awesome people if you'd like kind of a place to work on work on code with people you can register for this session and then on Thursday we have a session that is for pro members only so I think if you're not a programmer you won't even see this you won't even see this block but basically this session is a private zoom call with some curriculum developers where you can ask us more questions we can give you a more detailed answer like Kenny has been trying to keep up answering all the questions in chat but you know those are sentence long answers and so really I view these sessions as the as the time it's like your time it's time to like answer your specific questions that you have in the past we've like brought people on the call we talked to someone in Ireland who is wondering about like how to set up a data collection hardware stuff that was super fun like I basically I want to turn it into like a radio show right having people calling with their questions so if that sounds like something that you're interested in we're going to be running those every Thursday at noon and if you're a pro member you can follow the instructions in here to sign up for that finally next week we will be running another free stream like this one going over the next unit so that won't be me I believe that's other curriculum developers so yeah Carolyn Carolyn so yeah so they'll be covering the next the next event in the pass which is also want to make a plug for that search option which has helped me like yes we have a search option so I imagine sunny and Carolyn will be doing Python lists maybe they'll want to do the projects but I think we won't try to get them to do Python they'll Python lists yeah so that's the plan we're gonna try to do these until we get through all of visualize data with Python um if you're watching this now we would love your feedback whether it's just in like the chat that exists right now or I'll have to off to find ways to get good feedback but if you're watching this right now thank you very much we appreciate getting through this lesson I really love doing these live live coding sessions Kenny I appreciate you being here the feelings my questions to answer stuffing chat to be a good person to bounce bounce conversation off of it's always fun Alex don't have to thank you then oh cool let me stop screen sharing definitely follow us along we're gonna try to make this a weekly thing like Alex was saying so any feedback you guys have in chat is super welcome and once again thank you love to see you again and Alex anytime you want me on just let me know all right cool thanks Kenny and