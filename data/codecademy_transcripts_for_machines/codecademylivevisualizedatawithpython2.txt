Plus hey hey everyone hi everyone welcome to code Academy live my name is Ian I'm a cracking developer here at Khan Academy and I'm Alex de Stassi I am also a curriculum developer at code CAD me and we're super excited for today's live stream yeah this is gonna be a great one we hope you are able to catch us last week as we started going through the visualize data with Python skill path with some of our colleagues and we are going to be spending some time today to continue to go through that path look at the content together with you and hopefully answer a lot of your questions all right so I'm gonna share my screen and hello to everyone saying hi in the chat from all over we're so glad to have you here so just to get started we're gonna navigate to the page that we'll be working with today so right now I'm on the code Kadim e dashboard and what I'm gonna do is I'm gonna go over to the catalog that's in the top left hand corner and then we're gonna choose one of these subjects over here and for our course we're gonna go into data visualization and we'll see that the first thing that comes up and the only thing is visualize data with Python so you're just gonna want to go that way we can see we have our path progress so if you joined us last time you went through introduction to data visualization and today we're actually gonna move on from that and we're gonna work with some Python syntax so you guys covered a lot of information I know you guys went over some graphs and just general information about data visualization with this one we're actually going to take a few steps back and we're going to learn about Python syntax so we can say we have three options here the lesson the quiz and the project all you want to do is click into the lesson learn Python syntax and if you weren't able to join us last week just to you know take a moment and pause and just talk a little bit about data visualization before we we jump in data visualization is this whole really interesting area and field where we think about how can we graphically represent data that is given to us story with the data and present it in a way that might bring out some new insights and some new understanding and to get started with that we we got to go back to the beginning and syntax and a language is a great place to do that so if you have no background or experience in you know programming or data visualization that's no worries at all you're in the right place to get started with your learning journey right here if you do have a little bit of background and experience you might be familiar with some of these concepts but always good to get a refresher on you know the foundations of things and all these things that we talk about today will be helpful throughout the entire data visualization journey definitely so again we're just gonna go back to the basics into the very beginning and that's with Python and actually Python was my first programming language so I was excited to go back through it so what is Python it's the programming languages it's a programming language and a programming language gives us the ability to communicate ideas in a technical setting so again it's giving commands so in one way we give commands all the time I say my hand I can do that and just series of commands that we give and we do this through a programming language so we do this by conveying our commands to the computer by writing them in a text file using a programming language so if you take a look at the screen in front of us we see here we have our code editor and that's where we see a little bit of code right here and if you look at the top you can see the name of the file and it's script dot PI the dot PI extension actually just tells us that this file is filled with Python code and when we run the program it just means we're telling the computer to read our file r dot PI file translate it into the set of operations that it understands and perform those actions so the first thing we're going to do is we're going to take a look at these instructions we're gonna change Codecademy so you can see right here on line one code Academy here and we're gonna have it say our name in the script to the right okay so all I'm gonna do is I'm gonna go into the editor and take back code Academy and I'm going to add in my name and you can see this line under here it says hello and welcome plus my name so now what we're gonna do now that we've completely written our file is we're gonna run our code so you can see at the bottom of the code editor we have that blue button that says run now when I click it we see that it processed and our output comes to the right of the screen so right over here we have our output terminal and it says hello and welcome Alex so again this was our first program and with that we'll just move right along into the next exercise ironically the first thing we're going to do is show how to tell our computer to ignore part of a program and what we're gonna do is we're gonna create something called a comment so a comment begins as we can see over here in the narrative it begins with a hashtag and what this does is any text that comes after the hashtag will not be run so it's just going to be ignored and they several uses for comments and I would say that's the difference between like good code and great code great code has comments so a few things you can do with comments is provide context for why something is written the way it is so again when you write code there's a very good chance that someone else might need to read it one day by writing comments you can document what's happening inside of your program that way it's readable to other people and that they can understand your code and actually if you offer yourself to them so a few things you can do is come so for example one thing to note is you may be writing a program and today you understand what it does but you might not remember what it does in about a week so it's important to have your comments ready and that way you know what you've done in the past and it'll just help you as you go through and continue write in your code so we went through the first two you talked about why something is written the way it is helping other people read the code and understand your own code quickly and finally you can ignore a line of code and see how a program will run without it so if you're going through code and you're like I'm not sure why this works the way it does or I think there's a better way to write this but I don't want to delete any of my other code you can use a comment so if you write code inside of a comment remember that code will be ignored okay so looking at our instructions one second great documentation is an important step in programming write a comment describing the first program you want to write so all I'm gonna do is in my code editor you're gonna write that hashtag and that's going to begin our comment so you can see that any code that I write after it is going to be in that gray out text so that'll let you know that you're working with a comment so let's in the first program I want to write is just as prints hello world to the output terminal okay so right there we have our first comment and if you're ever confused about one of the instructions that you see in a lesson be sure to check out this hint here so where it says stop get a hint with the yellow background if you just click that you'll get a hint to help you along with your code so you can see start your comment with the the hashtag symbol and write the rest of your comment afterwards now Alex let's say I am writing some code and I have a lot of feelings about it because I'm really excited about this piece of code that I'm writing and I start putting in some comments to explain what I'm doing and I have like a big paragraph a chunk of information about about my code is that something that I'd maybe what I do in this case or do you think maybe I should change that filter down a little bit make it a little more kind of precise to what's going on with the code that's a good question umm I think you definitely want to be as specific as possible when writing out your comment but what do you think with that what would you answer for your own question yeah so sometimes I think I will write a lot of information okay what's gonna be most clear for for either myself when I'm looking at this later on or for someone else down the line who's taking a look at this code so I don't want to over like inundate them with with too much information so I kind of just don't think okay what context do they need to understand what is going on here there I'm not by their side to 222 them so I don't try and go too overboard but just keep it informative and to the point no I completely agree and actually one of the things I like to do when I write code I like to use comments just to create a little header for it so with me if I'm writing out a program so let's say I'll start off and just say like the file name so in this case we have script PI then I'll say who the author is just in case you need to get in contact with them so I'll just put my own name and then um usually I'll add a date and this is the date that I started but if I edit my code later on in the future I'll change the date around so that it says maybe last edited or just something along those lines so today's the May 26 2010 finally I'll just write out the purpose of the program and I'll just take this code this is comment right here and put it back and that this just gives an overview of what I want the entire program to do so it doesn't have to go into too much detail just a general idea so if someone looks at your program they think okay this is what the program does and then as I go through the code I'll try to write it above the code array just to give a simple explanation but just like Ian said you want to be very concise and specific and try to just get to the point great so I'm going to run this and we can see that this worked because we got that little green mark over there so now we can continue on with our code one actual question I want to field quickly from from the chat that was seeing both on on Facebook point out Alex is how we can write multiline comments in Python and this is a really helpful tool if you don't necessarily want to be using that pound or hashtag symbol on every single so I don't know Alex if you have experience writing multiline comments and Python before I actually don't think I do what is the right syntax for that yeah and you know this is one of those things that can often change in between language and language and sometimes when I'm switching you know maybe from Python to our JavaScript I'm like hey what's the what's the right syntax so in Python if you go and put a set of triple quotes right at the beginning so you do one two three quotes in a row and then that will kind of begin your multiline comment and then if you do another set of them on the bottom that will n your multiline comment so you can start putting in any text you want in between Oh interesting yeah so let's say maybe you had a function and that's something that we'll be discussing in a future lesson a piece of code that you encapsulated with a name so that you can kind of repeat the same code whenever you need it but if you wanted to explain what maybe that function is doing you can add a multiline comment right beforehand that says hey I given this information and then I output this information and so yeah it might be useful to have more than one line there yeah that see I did not realize that we're all learning something new super helpful was a rebel in there and again you can see when I run this we don't get an error so you can see that it's just ignoring all of the text that we're writing all of our comments it will not have an effect on the program that you're writing okay no that was great thanks Ian cool so moving right along now we'll talk about print and print statements so basically what we're going to be learning in this particular exercise is how to get our program to communicate and so this is often what so basically what we see in our output terminal that's what our comes what our computer program is actually communicating to us so what we're going to talk about is how we can do that and in Python it's because we use something called a print statement which is used by the syntax print so the print function is used to tell a computer to say something to talk and when we write messages in our print statements they should be held inside double quotes so let's take a look at this example right over here so we have a quote from Mary Shelley's Frankenstein and all it says is print we have an open parenthesis then we have a chunk of text that's held together in double quotes and then we have a closing parenthesis so that's basically all we need to know about our print statements and what it looks like so in the in the above example we direct our program to print an excerpt excerpt from a notable book the printed words that appears the result of the print statement are referred to as output and so the output of that specific program will be that exact text that we saw there's something I work in my soul which I do not understand um and that's basically it with the print statement and our first instruction is to print the distinguished greeting hello world um often if you if you're not too familiar with programming often the first thing you do when you're working with a new programming language is trying to just print out hello world so to write this out all I'm going to do is first print and we can see that the text changed as soon as I finished writing print and that's because print is a keyword it's known as it's known to Python as a keyword that does something so we have our print and then I'm going to open up those parentheses so we have a pair of parentheses and now we're going to write something in there so again so I'm going to do is I'm actually going to give ourselves some errors for a bit so just stay with me so if I just wrote print hello world no parentheses if I run this we'll get an error and we'll talk about errors a little bit more in this session and it says syntax error missing parentheses in call to print did you mean print hello world so you can see it's telling us that if we want this to work we need those parentheses so I'm gonna fix that all right and then the other thing I'll do we're gonna get one more error guys is I'm gonna take these quotes out and we're just gonna leave hello world here oh so now we have a different syntax error invalid syntax and that's just because it the software has no idea what this hello world text is and that's because we need to have it in a string which we'll what about but basically if we're gonna print text you're going to want to put it in double quotes and that's important so now I'm gonna run this program again and we can see that one we did it right because we got that green check over under the instructions and two we see hello world in our output no Alex let's say I've been coding elsewhere on my own before I've seen it out in the world and I was able to go ahead and make a print statement without those parentheses what what might be going on in that case thank you for bringing that up so that's actually one of the big differences between Python 2 and Python 3 um basically when we say python 2 and python 3 those are just the versions of Python so I noticed that when I first started programming I didn't need those parentheses I could just write print hello world with the without the parentheses just the quotes and we were good to go after the release of Python 3 that changed and you started to have to include that those parentheses as part of the syntax awesome thanks right does that sum it up in basically we have a new new syntax in in Python 3 they just use those parentheses I'm super frustrating after the initial change lovely changes always always hard right changing from one version language to another or chain languages but it's always also fun to overcome those obstacles figure out what's going on and learn something along the way yeah and to me now now that I've used this syntax are so long would be weird for me not to include all right just like when one the apps on your phone gets updated to a new interface you know the first day you're like Oh two days later exactly you just gotta go with the change I just want to jump to the chat really quick I'm gonna say thanks to Adam for pointing out that actually when we are doing those multiline comments what we were calling was on comments in in Python those aren't actually docstrings which are a little bit different but they essentially enable us to create something like a multiline comment thanks for calling that out Adam I know we also have some people in the Chad who are saying you know I'm really interesting data visualization are are we going to get there and this is just like we were mentioning the first step in a series where we're gonna be building up to creating visualizations and you know we're starting out here with syntax which is really a core foundation of programming and this is gonna be really helpful for us when we move down the line in order for us to create those visualizations that I know you're so yeah we'll get there in time yes definitely um and it'll be great when we get there and just like I'm saying this is just building the foundation so we can get to data visualization and everything will be understandable we hope ok so moving right along strings so you may have heard me call something the text that we were working with before a string in the last exercise and so computer programmers refer to blocks of text as strings in our last exercise we created the string hello world and a string is either surrounded by double quotes or single quotes it doesn't matter which ones we use as long as we are consistent let me just refresh this there we go okay um and we'll also talk about this a little bit more but strings are also considered a datatype and you'll you'll know what that means in a bit this is just a hint so what we're gonna do is we're going to print our name using the print command okay so just like before we're going to get out that keyword print type that into our script pi open up those parentheses and then I'm just going to write in my name and right now I'm using double quotes so here we go I'm gonna run this and we can see that this was correct and we did it correctly okay so if your print statement uses double quotes change them to single quotes or vice versa okay so let's change this so one I'm actually we're gonna get an error I'm doing this on purpose what if I just leave it what if we say forget consistency and run our code well we'll get an error so that's why you need to stay consistent if you change it up you will just get an error so we'll fix this just by making sure we have the consistent single quotes on both sides of our text and when I run this you can see that it works now and Alec's prints out to the output terminal and then one thing just to know um if you're going through this and you're like there's no way I will remember all of this information you're throwing at me don't worry about it it takes a while for it to really get ingrained in your head but one great way to keep reviewing this material is taking a look at our cheat sheets so you can see right under the instructions where it says concept review if you want to quickly review some of the concepts you've been learning take a look at this materials cheat sheet so we can see this is all about Python syntax and it just goes over all the different things will go over through this lesson it's just a quick way for a quick review and it's a really hopeful resource so again if after this course you're like wow I don't want to forget all this stuff that I learned this cheat sheet might be perfect for you geez our really really great one of the things I love about the Khan Academy platform some people printer man some people leave them up in another tab lots of cool things you can do it them but always a great resource to have mmhmm okay so we'll just keep moving right along variables programming languages over a method of storing data for reuse so if there's a piece of data that we want to reuse in our program whether it's a greeting or a date or a user ID or just a very important number that we're going to be revisiting again and again throughout our program we can use a variable and when we have a variable we're basically able to name a piece of data that we can store and call whenever we want in our program so they're super useful and a very important part of programming so um if we want to do this we can create a variable which can store a value and in Python we assign variables by using that equal sign or the assignment operator so you can see right over here we have an example and it just says message string equals hello there so the name of our variable in this example is message underscore string and then the value that this variable is holding is the text hello there and now we can see right over here we can print out our variable and when we print out the variable the output will be the value that the variable holds okay so in that above example we stored the message hello there in a variable called message string variables can't have spaces or symbols in their name under the other than an underscore so that's important to know we can't have a variable called seven eight nine message that won't work we can't have one called message seven eight nine so just make sure we understand that difference let's see so oh other things with variables is when you name a variable try to have it be related to the data that is holding um having a variable called random and it stores your birthday probably not the best name for it but if you want to store your birthday maybe names the variable birthday so always try to keep that in mind because something important with coding is the readability of your program before we discussed how comments are important and how they can help us document our code so that it's more readable but proper variable namings that's another top one least fun things that sometimes happens in programming is I maybe worked on a file and maybe a few weeks later I come back and I see these variable names and there's something like num1 num2 val one gal two and I'm like wait what what were these values representing more the numbers so those descriptive names can be helpful for yourself absolutely cuz again you might regard a program and the date you wrote it you're like yes all of this makes sense and then you revisit it like the next day or like a week or two later you're like oh my goodness what on earth is this so readability it's good for others and it's good for you great so it's no coincidence that we call these creatures variables if the context of your program changes we can update a variable but perform the same logical process on it so let's take a look at this code example we have over here so first we have a greeting and we know that it's a greeting because there's a comment telling us that and we have a variable message string that has the value of hello there and we print it and it prints hello there to the outlet terminal underneath we have convinces farewell so what we have is the same exact variable message string but we changed the value so once this goes through the value of message string is no longer hello there it's been updated too hasta LaVista and when we print it hasta LaVista will be the one will be the text that is outputted so that's just something you want to know we can change the value of our variables okay so let's take a look at our instructions update the variable meal to reflect each meal of the day before we print it so if you look at script dot PI we have this little program um and what you notice is meal comes out several times so first we have our breakfast which is an English muffin and when we print it it'll say breakfast English muffin but now let's see let's update our meal to be lunch so I had a peanut butter jelly sandwich for lunch I always love a good PB&J sandwich thank you it was great and no dinner um so let's see so it doesn't say that we're gonna have to update the meal to be dinner so what I'm gonna do is I'm going to write meal I'm going to use that equal sign that assignment operator we're gonna change the value of meal and for dinner I'm going to have pizza today okay so this is our program and now I'm gonna run it and let's see what comes at net output terminal so you can see right over here breakfast and English muffin lunch peanut butter jelly sandwich and dinner pizza so we were able to output all these different values however it was the same variable that we used we just changed the value associated to the variable great okay so we move right along with this errands or we jump into the errors exercise which i think is actually one of my favorite exercises in this lesson in the comments I see Adam saying that he thinks it's good to think about concepts instead of maybe syntax or there's more importance of concepts that just syntax and maybe why are we a team of syntax here and I would say I agree with you that concepts are the most important thing in programming they kind of go through everything that you are learning and you know if you understand the concepts it can often make the syntax easier sometimes but I also think it is key to have a good foundation in the syntax of language and that also ends up helping you when it comes to understanding concepts of maybe more difficult things or different aspects of the language and you are also able to you know get a better feel for four concepts when that base syntax is kind of in your tool belt and you're not spending all your time thinking about okay you know it's just the right way for me to do something of course you can always also go and look up syntax online and you know the chichi for example is a really great place to go and check the Python syntax um if you know you want to go look at it um but I do agree with you that concepts are are just as important if not more but it's always good to get that foundation syntax great great points Thanks okay so moving on to errors so humans are prone to making mistakes and we're also typically in charge of creating Peter programming computer programs to compensate programming language attempt to understand and explain the errors made in their programs so Python refers to these mistakes as errors and they'll point to the location where the error occurred with the whole uptick character when programs throw errors that we didn't expect to encounter we call those bugs programmers called the process of updating the program so that it no longer produces unexpected errors as debugging so there are two common errors that we can encounter while writing python while writing code in Python and that's a syntax error and a name error so a syntax error means there's something wrong with the way your programming is written maybe the punctuation there doesn't belong there maybe the commands not where it's expected to be or even a missing parentheses can all trigger something of a syntax error now a name error occurs when the Python interpreter sees a word that it doesn't recognize so this could be code that contains something that looks like a very blue but was never defined on that would throw a name error so let's see our instructions so first off the code that we see in script pine they're gonna throw us some errors so you might encounter a syntax error if you open a string with double quotes and end it with a single quote which we saw earlier on in this exercise Oh in this live stream so we're gonna update the string so that it starts and ends with the same punctuation so we can see on line one this string has mismatched quotation marks so instead of the single quotes let's have them both be double quotes so we're gonna change this okay so this will fix the error in our first line and then in the next one this is a name error if we try to print a single word string but fail put any quotes around it so python expects the word of your string to be defined elsewhere but can't find where it's defined so we can add quotes to either side of the string to squash this bug and so I'm just gonna run this as is and we're gonna take a look at that error really quick so once again we can see the first one prints out this message has mismatched quote marks but then that second line that print abracadabra that's going to throw us an error so you can see file script up pie line too and that's where it is script up on line two we can see even the very line of code that it's having an issue with we have a name error and the name abracadabra is not defined so to fix this we're just gonna add some quotes so I'll do single quotes for this one okay so if i run this there we go so now we have no more errors and we can continue on with our program um I also often find that when you get an error it's very frustrating and you may feel like you have to give up or perhaps coding isn't for you errors are such a common part of programming so it's just about being able to read them and get getting through them and problem solving so if you feel frustrated valid but definitely don't give up and keep trying to fix your code okay I was like I think America's as a sign that I am exploring something new with my code that I haven't tried before um just because if if you're writing code and you're you aren't seeing areas coming up maybe you're you know writing code that's very similar to what you did before on the same topic which is also a great but but when I'm looking for that challenge or to try something new or as will will surely be coming my way too so I always try and think that it's like a good sign hmm I often learned the most when I'm debugging my code that's when I figure out what it does like that's when I have the best idea of what micro my program is doing okay so now we're gonna talk a little bit about numbers so computers can understand much more than just strings of text so python has a few numeric data types um and it has multiple ways of storing numbers which one you use depends on your intended purpose for the number you are saving so the first one we'll talk about our integers in Python they are sometimes known as int and that's when you're using whole numbers so no decimal points and it contains all accounting numbers and as well as their negative counterparts so we can see with some of these examples one two three integers negative one negative two negative three also integers um so some examples of when you would use an integer is if you were counting the number of people in the room number of jellybeans in a jar the number of keys on a keyboard um again those are the examples of when you would want to use an integer now the other data type that we could use is something called a floatingpoint number or float and the values hold held by these data types are ones with decimal points and so this is good for if you're trying to save a data point that has fractions in it so for example if you were measuring the length of your bedroom wall calculating the average test score of a seventh grade class or storing a baseball players batting average for the 1998 that was a very specific example but those are good times of when you would use a float so numbers can be assigned to variables just like they we code with strings and we can use them literally in a program so let's take a look at these two examples here we have our variable called an int and it holds the value two and you can see that it's a whole number no decimal point so it's an integer and then we have the second one that's called a flow and that has the value of 2.1 and because it has a decimal we know it's a floatingpoint number and right over here we can see that we can just print and we can use these values in our program it's right over here we have print and in plus three so it takes that value over here to plus three and then it prints out that final value of five okay so one thing to know is floating point numbers can behave in some unexpected ways due to how computers store them and that if you want more information about this definitely review pythons documentation on floating point limitations so that link is there for you if you're already in the sexercise and you recommend that you check it out okay so let's take a look at these instructions a recent movie going experience has you excited to publish a review you rush out of the cinema and hastily begin programming to create your movie review website the big screens greatest scenes decided by a machine create the following variables and the sine integer numbers to them so release year and runtime so we're gonna do that so release year and we'll have that be 20/20 you can see no decimal so it's an integer all right and the other one is at runtime and that's going to be this say it's 120 minutes so we'll leave that value at 120 so let's run this code and you can see that all is good so we can continue on now create the variable rating out of 10 and assign it a float number between 1 and 10 ok so let's do that was it a good movie or was it okay oh I'm gonna say it was not great movie it's a not great movie um it got a 3.7 mmhmm it's not great the critics have decided so I run this and so let's see it gave us an error so let's see what the problem of that is oh so my issue was I need my variable wrong instead of writing out ten I actually wrote out ten tn okay that's on me so who we just fixed this little error we run this and now we are good to go okay so I'm actually gonna stop sharing for a moment and I'm gonna let Ian take over for the next section awesome thanks so much Alex and so just what I could lead jump to the chat I see someone asking about why why are we talking about maybe Python three if there is Python 3.8 out and kind of just questions about different types of versions of Python and so um when typically people will say Python 2 or Python 3 there's a bunch of different versions of those two releases um but when people won't necessarily say like Python 3.8 or 3.7 3.6 so just say oh yeah we're working in Python 3 there are minimal differences or there are differences between those different pieces but generally they're similar enough that you can just refer to them as you know Python 3 or if you're working and the older version of Python you would say Python I'm so we are working here today in Python 3 great question all right I'm going to go ahead and share my screen and we will keep running through um yeah blessed awesome and so we were now moving over to exercise eight where we are talking about calculations and so now that we've discussed variables and you know different types of numbers instant floats um we can do different things with variables that are storing those integers and floats to do the same kinds of calculations that we would maybe do on our calculator if we were in math class or I'm on a sheet of paper um you know if we're you know just trying to maybe do the tip at a restaurant or in other places in life and we are able to use in Python the same kind of operations that you would do anywhere else um so the ones we will talk about here are addition subtraction multiplication and division so we can see here in the code block that we can just go ahead and take integers or floats and directly use these different operation symbols to make certain calculations so we wanted to do 500 7374 plus one well can just go ahead and use the minus symbol and the plus symbol in order to subtract 573 and some before and then add one and if we put that inside of a print statement we will get 500 now similarly if we go ahead and sorry just refreshing my page there um if we wanted to do a multiplication we'll use the star symbol to represent that um and if we print 25 times 2 it's going to give us the multiplication listing numbers which is 50 similarly we can do division and we see here that when we are doing this division getting an answer of two and you'll see also specifically that we're getting an answer not just two which would maybe be an integer but we're getting 2.0 which represents a float and so when we are doing division in Python we will automatically convert that answer to a float so if we put in two integers as inputs to our division so we do ten divided by five it's going to spit out to the float version of 2 which is 2.0 instead of just the integer which is to this differed from previous versions of Python so if you were working in Python 2 you would see a different answer their division can have its own error which if you are a math person you might have encountered before which is division by zero so that is something that we do not want to do and bold cause and so I'm just gonna restore my workspace here um and we'll go and do this checkpoint so here it says let's print out the result of the equation 25 times 68 plus 13 divided by 28 so I'm gonna go and create my print statement and inside of here I will just do 25 use the star symbol from application 2 times 68 I will then add 13 with the plus symbol and then I will use the forward slash to do division and divided by 28 and when I run this code we get out mmm let me do this just to make sure night we're working and there we get a check great we get 1700 point four six four to eight I'm so we're getting out this float here so we're getting all of the decimal places I so very similar to how you would work on a calculator now we also are able to take advantage of variables which we talked about earlier in order to do calculations and so we don't necessarily need to just use the actual integers and floats to do calculations we can assign those values to variables and then use those more meaningful variables that we were talking about giving good names to to do calculations that might make more sense in a certain context so we can see here that we're creating a variable coffee price and we're setting it equal to one point five zero so we're saying here we went to the store maybe the price of a coffee is a dollar fifty if we're in the u.s. or 1.5 euros or five pesos whatever your denomination is so and then let's say we wanted to get four coffees at the cafe so we're picking up some coffee for our friends so gonna do some work we're gonna create a variable number of coffees and set it equal to four and we're using this equal sign or the assignment operator to assign a value of four to that variable number of coffees we are able to do some calculations now on those variables I'm using those operators that we were talking about in the previous exercise so if we wanted to see what was the total cost of making this purchase we would do the coffee price times the number of coffees and we can put that side of print statement and we would get six one point five times four when five mean the coffee price and for being the number of coffee is to get six we are also able to go ahead and update the price or update the value of whatever variables so let's say the coffee shop besides to raise the price of coffee two to two dollars to euros whatever denomination we're working in now they're they're trying to copy that Starbucks um raising the price strategy and we can now go ahead and make the same calculation as before do coffee price x number of coffees and we will now get eight since our coffee price is now but the number of coffees is still four and two times 4 is equal to 8 so let's jump over to the checkpoint and we see here we decide to get into cruelty um trying to get a little creative maybe we're in quarantine and this is a new school that we picked up so calculate the number of squares you'll need for your first quilt let's create two variables but with and quickly let's make this first quote eight squares wide and 12 squares walk so I will do quilt which is equal to eight using that assignment operator and then I will do quilt liens is equal to twelve can run my code here and now we are asked to print out the number of squares you'll need to create the quote so since the width is eight and the length is 12 I'm going to go ahead and multiply those two numbers together to get the total number of squares would you print statement because we went for that inside that print and then how would you well with times quilt and now what I could have done in the side this Prince Amon is just wrote print 8 times 12 but let's say it's you know a few weeks from now or I pass this file over to someone else that I'm working with a sign you know this close business and they're looking at this code and while I know that eight and twelve represent the pool within the pool Lane they might not know that they might not have that contact so by creating these variables with descriptive names and then using those in the calculations and make sense to other people besides myself what is going on here in the code now we see it turns out that the code required a little more material than we have on hand let's only make the quilt eight squares long how many squares what you need for this quilt instead so it seems like we're changing that lane from 12 to 8 so I can just go ahead and update the value of my claim variable and now if I rerun my code we just redid that calculation now with our new code name value and now we can see that it's 64 squares so we did a reduction from when the potlatch was 12 and then actually we do have a question so chancellor was asking if we'll be covering for loops and while loops today and actually the answer to that is no because we only have about nine minutes left of today's stream however the content is out there and we'll possibly get that to that in the next one of the next few live streams or if you want to on your own just go through the course or learn Python course this could be super helpful no that's that's a great question so whoa today cover um one more exercise right here um and then we will part for today just so that we um you aren't going over time all right um you know continuing on from here we will be having other sessions that will pick up on this content and help you get further through the visualized data with pythons copass I'm sure we'll talk about that in just just a second but great question ah awesome so for for maybe the last thing that we'll cover today our exponents and so if you've you know done done math class outside of programming um you might have run into exponents beforehand but they are a really useful tool in in math that allows us to multiply numbers together repeatedly really easily and so in Python the way that we can you do exponents is by using the asterisk or the star symbol about writing it twice so we'll use the asterisk once for multiplication and then twice for exponents so for example if we wanted to raise two to the tenth power and so just to go over that really quickly what 2 to the tenth power is saying is let's multiply 2 by itself ten times so there'd be 2 times 2 times 2 times 2 10 times so to do that we would do two and then two asterisks and dine and if you wanted to do let's say 8 squared which is and for any squared value it's supposed to find that one number by itself we would do eight double asterisk and then two and then if we want to do nine cubed which is the same thing as saying nine to the third power we would do nine double asterisk and then 3 we're also able to do fractional exponents which you know some of you might know or think of square roots or different roots and so for example the square root is same as an exponent that is 0.5 and we could do four double asterisk than 0.5 and we'll quickly do a checkpoint and then we will wrap up for today so we really like how the square of protein less exercise came out and decided that all cults um we make for now on will be square use the exponent operator print out how many square eyes we'll need for a six by six seven by seven and eight by eight quilt um so what we do here is four squares we will take the the the length of one side so let's say in this case at six we will use our double asterisk and that's if you want to square it we are going to use the second power I could do the same even here for seven I'll do seven double asterisk two for seven squaring and I will do eight double a service squared if you print that we will see we get 36 49 and 64 um we would love to continue more for today diving into Python syntax um but we are running short on time so there are some things that we want to leave you with before before we go um so first just wanna say thank you so much for joining us here today to chat about Python syntax I'm I know a lot of you are really excited about data visualization um and this is a foundation and in order for us to get to create our own visualizations um so we will be getting there in time we really recommend that you continue to go through the Python syntax course there's a few more exercises here that are really great for setting that foundation um a few other things that we would like to mention um there will be another stream on Thursday featuring both myself and Alex a firmer cook adding me pro subscribers where we will get some time to talk and more oneonone way we can go through some content related to Python syntax and data visualization but we're also open to chatting with all of you about different questions that you have maybe related to Python syntax tree database or just having some time to to chat in in a smaller environment um so we really hope that you'll join us for that um and we just want to quickly show you how you can go ahead and find that stream so you go to Khan Academy calm and we'll let it load um and if we scroll down from the home page of code Academy we can see do to do to do if we scroll down towards the bottom we have our community academy section which is great for in general finding out information about events that are happening places that you can communicate with other code Academy learners um and really find an online community to help you in your journey of learning to code and so if you go to this event section right here you can click this register button and that will bring you to a page with all of our events so you can see that we have event on Thursday May 28th for our pro members to come join a Q&A I'm visualizing it with Python myself Alex and you know if you aren't a pro member you know there are other events that will be continuing to happen for you as well next week we will have the famous Kenny and the famous Alex different nominee are actually really amazing and great but you will be getting a different Alex Alex Coons and Kenny who will be joining everyone for the next phase and going through content of visualized data with Python skill path and so they will be working on the functions module and kind of picking up where we left off um so we really recommend tuning in for that and they will also have another Q&A session there for them as well next week so go to this page register for these events we are looking forward to seeing you there and to continuing to interact with you all while maybe you're at home I'm just trying to help everyone out with learning more about va's with you all also if you're interested in learning more about our live streams and being notified be sure subscribe to our YouTube page or follow us on Twitch and that way you can get notifications about more upcoming live streams definitely yeah well I can subscribe button to follow we were excited to interact with you and so we hope to see you in those future sessions um thank you all so much for joining us today again my name is Ian and I'm Alex thank you so much no conscience it's time to do with you hope you all learned something and we hope to see you soon