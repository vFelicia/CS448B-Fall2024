okay and we are live again thank you everybody for attending we are Co Academy and I'm joined today I'm fed for the community team and I'm joined today by two of our content contributors from the curriculum team Kara and Christine we are going to be walking you through hober Fest Co Academy dogs and contributing to co Academy docs with Git and GitHub um this is part two of or two sessions this week trying to help users discover cademy docs and how to contribute to it thank you for stopping by if you saw the presentation on Monday this is basically the same information but if you didn't attend Monday this is going to be all new information for you so thank you for stopping by hello Cara hi FR how you doing how's everyone doing today um nice we're GNA be basically doing what we did on Monday is going to be an overview on how to contribute to codemy docs we're talk about a little bit about what Cod Academy docs is and then also what hober festes and then we're going to follow with a workshop with a live example of how to contribute to docks so first um what is kemi docs so docs is an online reference for coding Concepts in terms we rely on the community to contribute to this documentation so So today we're going to show you how you yourself can contribute and have entries live from you so first we could talk about um hober Fest first so um October Fest is an annual monthlong celebration hosted by digital ocean during the month of October it encourages contributors and contribute to open source projects and as award reward contributors can get digital rewards from completing poll requests so to participate in hober Fest individuals need to First register on the official hober Fest website which we're showing right now and then afterwards you can contribute to public repositories on GitHub so the first 50,000 to get their first PR merg during October Fest we get a tree planted in their name and then there's also other digital rewards available a you can go to hober fest.com to learn more about what rewards are available and further about hober Fest so why is this a great time to contribute to Coy docs um it's always a great time to contribute but since it's October you can reap the benefits of October Fest at the same time so um at Co cam doc we have the good first issues label which are we're going to show you later but they're issues geared towards firsttime contributors so these issues are typically meant to be relatively simple or well defined making them a good entry point for individuals who are new to the project or open Source development in general um so we're going to actually show that to you now because we're GNA start going into how to contribute so this process that we're going to show you is based off the contribution guide which is on the cemy do website on the side um it's also linked in the description of this live stream so before contributing we always recommend you go through the guide first um we also recommend having some basic understanding of get and GitHub markdown in the command line and resources for all those are in the description too so just make sure you can go through everything make sure you understand and then you can get started on making your own contributions so um let's get started on finding an issue to work on so if you go to the K dox repo you can go to the issues tab which is located at the top you press on issues and then you're going to find a list of issues under docs so your task would be to find an issue that you're both comfortable with and also that is not assigned to anyone um issues marked with the good first issue label which is in the purple and hober Fest have been deemed good issues for firsttime contributors to work on so you can filter the search to actually find unassigned issues too and good first issue so if you go to label you can just type in good first issue and then it will come up all the good first issues once you click on it so it's filtered by good first issue and then you can also filter by a signing to make sure it's not assigned to anybody so these are all the issues not assigned yet and then those are the ones that you will be looking for in general so once you find an issue that you like and that you want to work on you press on issue redo the description make sure you understand everything in the description what's the issue asking you to do um if there's anything that is unclear or that you think that um could be more clarified more then you can just write a comment asking um the thread like hey I need some clarification on this can you please clarify if there isn't any clarification needed then you can go ahead and write a comment asking to be assigned to the issue um once you make the comment asking to be assigned just please um wait patiently for a maintainer to assign you um we ask you to do this so that to ensure no one else is working on the same issue as you um there's been times where two people were working at an issue at the same time so to clarify this we just ask you to please wait to be assigned first before working on it so once you do get the okay that you're assigned um we'll send you a comment say you're assigned to the issue and then you can start beginning work so um the first thing that we recommend you doing is to have your computer set up um so to do this you're going to have to have a fork of the doc repo so to do that you go to the main repo you press on Fork at the top of the page once it's forked you can go to your profile page and then press on your repos so once you get to your repositories you're going to see a fork of the cam doc repo you press on that and then there's um the URL you're going to have to get from this this is what you're going to have to use to clone the repository on your logal machine so you press on the code button you copy the URL in from the box and then you're going to have to switch over to to your terminal or command line depending on your operating system and then first you're going to change directories into the file path that you want your repository to live in we're going to do desktop in this case and then we're going to do get clone followed by the URL we just copied and this is going to clone the repository on your machine so after that is done then we're going to change directory series into the repository um we changed into the doc repository now and then now we're ready to start a new Branch so that we can make changes so we're going to change the branch over to Hob Fest then we're going to check out into the branch and then now we're ready to have our um our entry put in once we switched over to our Branch so for all entries are going to be in markdown files so um we ask that you also follow like all the documentation that is in the issue that you're assigned to you're going to see a list of documentation with standards and we ask that your markdown file f follows these standards this helps a lot with the review process um if everything is up to par you can please do the review process a little bit faster um so just please make sure you review those documentations as well and our so our markdown file right now for this example we have made up already so we have everything we have our metadata at the top we have um our information with title and also we have subheadings so um now we can since we already have our file we can take this file and place it in the file path that was mentioned in the issue which is the we highlight right here yeah so in our local repository we're going to create that file path in this case we're going to be using visual studio to show the file path more clearly So within our repo we're going to go down to Content we're going to go to General then Concepts and then we're going to make a new folder called hober Fest and then within that folder we're going to put our markdown file into that okay great so now our markdown file is in the correct location so now we can go back to our terminal and start pushing up these changes so first we're going to do get status to ensure that we have changes we do so now we're going to get add the file so we can stage it for commit copy the file path and get add then get status again we see that is ready to be committed so then we're going to use the get commit command followed by a message we could say October Fest entry as the message and then now we see get status we see we committed it and then now we can um push our changes setting it to Upstream which is where we're going to push to our local fork and then we're going to name the branch and then now we have pushed up our file so now we can start with making our poll request so we're going to go back to our profile um and then wait for it to refresh s you give us one minute we're trying to wait for branch sorry Christine can you um maybe copy and paste the the link that was given in the terminal see okay so in this case um usually there's like at the top of the screen it will say you can make a poll request but in this case since it didn't work for some reason we just copied and paste the link from the terminal that was given to us and then paste it into the browser and then it comes up the screen for our entry so this is the same entry that we pushed up um this is our description right here that you see in the little box um we suggest that you go through it carefully make sure you write a description in the description area so we're going to just write add October Fest entry um delete anything that's not relevant to your PR so in this case we're just adding a new entry and then we also recommend you check off all the boxes that pertain to your entry so just making sure that you reviewed it make sure there was no grammar mistakes no warnings were given Etc so after that's all done and you're feel good with your description then you can look scroll down look at your file make sure everything looks good in this case everything does look fine then we can go ahead and create our polyquest so the pull request is now created and um we have everything right we got good so the one thing about um if you're new and you just started out there's going to be a a CLA which we can probably show you real quick it's going to be a CLA um message asking you to sign the CLA um we ask that you sign this just so that we can get started on a review process quicker we ask that you sign this first um it's going to look like this so all you're going to do is you can read through it Go step by step it will let you know everything that you need to do and then once you're done signing then it was going to approve on screen it's going to have a little check mark as you can see there and then you're good to go so then after that is done all you have to do is um wait now for a maintainer that can review your um file so after the first view you're going to make the changes that is requested and then uh the maintainer is going to come back make sure everything is um everything is good with the changes and then you're going to wait for a second review after that so we typically do two sets of reviews in rare cases there's three sets of reviews but that's for long longer entries so don't worry about that but usually it's two and um after the second one is approved then we can go through with the merging process and this is the example right now of one that had two reviews and then it was merged afterwards and then you're going to get a little message at the bottom um after it's merged to links to your live entries yeah and then so um if you're know if you click on your live entry and you notice that you're anonymous on the screen so in this case the author is um displayed but you might come up as Anonymous if you haven't um linked your GitHub to your Co Academy profile so we just ask that you um in the same merge message that the link for the entry is in there will also be a link um showing you how to add your GitHub profile to your Cod Academy so that link right here there and then this is just step by step showing you how to add your um GitHub username to your Co Academy profile and then after you do all this just wait a little bit of time and then you should be visible so you can check back on it later so yeah um I think that's pretty much it um also one thing just um so that they can see like um if you go to files changed at the top um you can always view your file this way so that is always there and then you can also make changes and you will see the review comments from maintainers too on the screen and then you can also view the yeah this is a maintainer right here that made a review comment so you can always see that there and you could always message back to a maintainer if need be um so yeah so I think that has covered um everything if anyone has questions they can put it um in the chat Kyra while we wait for questions from the chat could you you share some of the typical tips or advice that you would give people that are contributing to code academy dogs for the first time yeah so um some tips is if you're stuck on anything just for your entry in particular you can just reach out to us in the thread so you can comment under your poll requests if you made one already or if you're assigned to an issue then you can comment there instead um for general questions I would say go to the discussions tab um which is we're pressing on it now the discussion's thread is open for anyone to share ideas and you can also get um our questions answered by maintainers so like in this particular case this um user wanted to know about um adding sorting algorithms so they asked about like what's the good way of going about that um so then we went along and answered those you can you can hop on to a discussion that's already made or you can make your new discussion using the um under whichever tab that is for if it's for ideas you can go on that um also if you want to contribute outside of Camy Docs then I would also recommend using good first issue um in the search if you search good first issue um without the coam DX repo it will come up other repos that are using good first issue too and then you can also look up by hober Fest because um there are other repos using the hober Fest label so just whichever repo comes up you'll go onto that rep and then press on their issues and then you can scroll through to see if there's anything that you want to work on from there nice I feel like you already answered this question in the chat about how to find other repos to contribute to um there was a question here about how long does it the code review take asking for newbies yeah it's it's a um it's dependent on the time frame so right now during the month of October Fest we're expecting like a a huge volume of intake right now so we just ask that you be patient um we're going to try to get everything done so that you can get your credits especially for October Fest we want everyone to have um basically the time and we also want everyone to get rewards from October Fest so we're g try to get everything in before it ends and yeah um is it is it possible to get assigned more than one isue when you're a user yes so you can be assigned to up to three at a time we ask for um you to submit pull requests first before um asking to be assigned to another issue um just so that everyone has a chance to get issues and um more than three might just get a little bit too much especially if you're a new time um contributor so yeah three at a time and then we ask that to uh submit poll request before um asking to be assigned to another issue nice um okay so I just wanted to chime in and remind the chat that we have a few minutes left in the event so if you have any questions for Kyra today please drop them in the chat and she'll be more than happy to answer them um what we wait for other questions in the chat to come in maybe another question that people might have is when they contributing to dogs um some people might be worried about the that what they are you know what they submitted might be wrong they might be tyos or something so could you talk a a bit about the review process and the back and forth that happens when you submit a PR yes so um once a contributor starts submit a PR um we go through everything looking for any grammar issues we also look for any technical issues um we will submit to you changes if we've come across any of that um we also ask that um please make sure everything is in your wording we do not um accept any type of plagiarism any type of plagiarism would be flagged immediately so just please stem away from that make sure that everything is in your own writing and also if there's anything that you need help like help with just let us know and we can respond to that if you need like um resources for writing your entry then we suggest um going to you can go to like out resource by like finding documentation on the actual language so um almost every language has documentation online so you can look for that to ensure that your entry is technically right before submitting and also test your code please test if you have examples please test the code fantastic oh I see that we are showing the workspaces test code yeah you can test the um your code in cam. workspace this is on the website on cam and um we have these languages available so whichever language you're in you're just pressing the language and then you can create a new file and then add your your example and then test it out right there to make sure it works first great uh we have one last question in the chat that I think it's a pretty cool question from Maria about is this similar to the style of working on a project uh when you're in teams you a workplace volunteering this sort of thing so how does uh submitting you know um your contributions to cademy docs I guess reflect on the typical work that somebody that is learning at code academy could expect yeah I think it's a great way for you to like collaborate with other contributors um if um we also have like contributors right now that collaborate with other contributors like giving them advice so we ask that you just be as open as possible um we're going to be talking with you constantly trying to get you um to get the changes do so that we can get through the process of reviewing quickly so it's almost like a team effort there in the sense that we want everyone to work together to get these issues out and entries out nice I think it's um it's true that a lot of people especially in hybrid or remote environments um and even when they are in the office I mean GitHub is used as pretty much it's a wild you know worldwide used tool for uh organizing your code and uh what's it called um the word is something about code maintenance or like the the I forget the code there's like this this thing that people call it when you're organizing your code I guess for for submissions of versions like versioning I guess oh versioning yeah so it's um it's this is this is kind of similar in that way that if you if you were part of a team engineering team you might find yourself pushing your code into the repository of do workplace and all the people will review the work that you submitted go back back to you with any issues asking you to fix your PR so in that way it does simulate a little bit what you could expect going into your first job in tag okay well with that we are going to close off the event thank you everybody for stopping by uh this was a fun 30 minutes walking you through cademy docs and walking you through what it's like to use git and GitHub to contribute to co Academy docs has final remarks don't forget to follow Co Academy on our social media and YouTube channel subscribe all that good stuff to see more of these events next month in November we're having somebody walk us through a practical introduction to llms a really hot topic right now so hope to see you all there in November uh thank you Kyra and Christine for hosting the event today thank you for sharing all that you know it's amazing um that you're helping so many people with GitHub and in know Co Academy docks with their PRS and I'll see you all next time in our life events have a great day bye everyone byebye