go live okay and we're live today thank you everybody for joining us today we have amazing guests that is gonna are gonna be talking about code academy dogs and what they are what they do why you should be excited about this why you should be contributing for this you'll be learning all the intricacies behind the scenes so without further ado you want to go introduce yourselves please yeah what's up everybody uh my name is sunny i'm a senior curriculum developer here at code county and i currently manage the curriculum free team i'm calling in from brooklyn new york today and i'm super excited to have two people on my team christine and brandon um here with me so i want to introduce yourself sure um hi everybody my name is brandon and i'm a content contributor here on the free team at code academy and i'm calling in from massachusetts um it's great to be here thanks everybody hi i'm christine and like brandon i'm also part of the content curriculum free team and i'm calling in from philadelphia today cool yeah welcome everybody um and for those of you watching um type in the chat let us know where you're calling from um if you have any east coasters east coast people here um we're super pumped for today's live stream we got a pretty good crew here i think they're going to be a lot of great takeaways for contributors and learners um you know watching right now so we got mariana eugene nice alex lillian let us know where you're where you let us know in the chat and to catch you up on what we're up to so last week fed and i did a live stream together where he interviewed me on some high level aspects of kokami docs our brand new product feature so take a look if you missed it for today we're going to do more of a deep deeper dive where we will first do a demo of kokami docs then we're going to do some walkthroughs so first we're going to walk through github repo where all the content is stored we're going to do a walkthrough of the contribution guide basically the quality standards for creating new entries and then also github issues basically a bulletin board where you will um you can request new entries in the second half of this live stream we'll do a live review of some of the recent pull requests so taking a look at the recent entries created by the community we've never done something like this before so i think it's gonna be pretty fun and at the very end if we do have time we can have some q a session at the very end so feel free to let us know what you think in the chat throughout the live stream if you have some you know burning questions that you want to ask um feel free to ask it at the end cool we got a lot of people from all over the world it looks like philippines canada bermuda eugene oregon nice oh that's mikey one of the photographs we're gonna review pennsylvania colorado cool all right um should we get started i think so you guys are ready i'm ready i'll be watching the back so first things first um codecammy.demo so i'm going to be sharing my screen for the for the rest of the the live stream for those for those of you that are new um cocamy docs is an open contribution coding documentation for popular programming languages and frameworks it's built by the community and maintained by codecademy so similar to wikipedia anyone in the world can add or edit an entry we're hoping to build the perfect companion the perfect coding documentation site for you when you're working on a project when you are stuck when you want to look up a definition a function name a method name a method or whatever concept okay i'm going to drop the link in the youtube chat right now for you to take a look so we have 18 topics here on the left anywhere from c to c plus plus python to javascript okay we also recently launched our v2 uh feature which basically encourages uh we're trying to focus on encouraging contributors um the contribution side of things so here is a community uh leaderboard um to highlight and also celebrate some of our uh most active contributors so if you want to say look up javascript array what you can do is very simple click into the javascript topic and then navigate to the arrays concept for each concept so this is an entry by the way this is a code county docs engine so for every entry usually there is an explanation some code blocks for this one in particular you can find out how to create an array how to access an element of an array using an index and check this out if you know for example you want to learn how to merge two arrays or how to connect to arrays the first thing they can do well actually check this out you have uh you have here we have a um a terms table okay where you can find all the arrays methods methods for javascript and you can also click into these um here's a concatenation string method again an explanation a basic syntax a few examples and here's something pretty neat a codebody example a basically interactive um a code block where you can actually run the code and see the output pretty cool so we currently have about 714 entries 90 of which are created by the community um this morning as of this morning we have 98 661 distinct users which means that we're going to actually hit surpass 100k distinct users probably this weekend or next week and that's pretty much kokami docs any questions before we move on to the github repo so brandon actually have something pretty good so does is anybody familiar with using github um should we do a um a session right now on what is github type in the chat let's know okay we got one eugene all right i think one is one is enough brandon do you want to take it away yeah um hi everybody so for those of you who aren't familiar with github github is a source code service that hosts over 200 million remote repositories for developers to commit and push their changes from their projects it uses git which is which is a distributed version control language for collaborating on projects both individual and uh group both personal and professional and github is where codecademydocs hosts all of its source code and um to talk a little bit more about uh the repository for docs i'll pass things off to christine yeah so this is our main branch for codecademydocs and we can see a few folders here as well as some extra files we don't need to be too knowledgeable about like what's going on in the files to contribute to docs but just know that like these hold our extra configurations um as well as like some tests and dependencies so if we actually scroll down sonny if we could scroll down onto the page and take a look at our readme um yeah the readme just kind of goes over like what exactly docs is what stage of development that we're on as well as people who are contributing right now our content team our amazing engineering team who put docs together and um if we scroll down a little bit more it kind of gives us how we can contribute so we can click on that link that brings us to our contribution guide we'll head over there yep and here is a little closer look at how we can contribute a pull request so this starts with forking from our project repository and you can find that button all the way at the top of our repo it's just like a button click away and then you'll be able to fork our repo onto your own um it also goes over like a little bit more details of after you submit a pull request what you can do from there and if we actually go back to our main repo and take a look at some of the folders there so we'll mainly be working out of the content folder which holds a list of all the topics that we have on docs such as c c plus plus css and other frameworks if you're not too sure of um where you should place your content definitely just take a look at the docs website and see where the information that you may want to add will fit into if we even want to maybe click on one of these topics have a looksee into kind of an example of one of our entries yeah so we'll click on the arrays and click on the arrays markdown so we can see here this is like the structure or the template in a way we could refer to when we're trying to create our entries and if you want to take a closer look into some of the entry templates that we have we can go back into our main repository and if we actually scroll up into one of our folders there into the documentation folder we have the different templates that we can use such as our entry template or if we want to create a term entry we have templates for that as well we also have if you look at the top of our file we have some metadata and for that you can find it inside of the content catalog markdown as well as the subjects and tags markdown so there's a lot of information on here i strongly encourage you to take a look and like parse through to figure out how you can start off with your first entry and maybe we can then dive into the issues tab and the pull requests tab from here sure i'll um i can take the issues one um so at the top of the docs repository you'll see the issues tab uh click on issues and that'll show you all of the current um issues for like new entries that we'd like to add to docs what existing entries we'd like to make changes to to improve the quality and here and there like a bug fix or two but that's extremely rare um this is where you would go if you want to propose an idea for how to make dogs better or grow it more to do that you'll want to click on the green button that says new issue by clicking on that button it'll bring up three options for creating three different kinds of issues using github's new issue templates so the first is bug report again that's a very rare occurrence um then there's entry edit which is a request to edit an existing entry and then there's entry requests which is probably the most common one uh you're going to want to use that if you want to propose a brand new entry for the docs repository so this is where all of the issues are handled the maintainers including myself and christine and sunny normally use these when we want to grow the the collection a little bit more and give opportunities to people to contribute but you're more than welcome to file an issue yourself my only recommendation though is if you're using ios um and you're using the github app it's not going to work unfortunately they don't have configuration for uh for yaml templates yet so if you want to make an issue do it on the web on the desktop site for github cool thank you for seeing brandon that was a great overview of our repo um make sure to start this right so that you can find it easily next time kokami dox repo and also one more thing is that kokami dox repo kokemi docks actually is probably the perfect open source project for open contribution project for new developers for learners who want to dip their feet into the world of open source or github or ugc and things like that so please take a look um you know read through this read through as much as you can and also another thing that i think christine pointed out that's really cool is that um when you first start out doing this you can just literally compare a particular entry for example like the c plus plus entry um in github to uh what it looks like on our site right if you go to c plus arrays so basically this entry right here right like a vector and arrays the data structure using c plus plus like a vector an array boom so basically this turns into renders into this all right let me see if there's any questions in the chat um before we i think let's take let's take a moment here and answer some questions because we're about to do some live reviews of pr's so let's knock out the questions about github a little bit um just right now so um question from alex is there a discord for just the people who are contributing to kogami docs invite please there is a discord um for the community um so feel free to find us there uh and if you make a bunch of entries and we think you know it's really high quality entries we'll invite you to our code cami docs community slack okay the channel in our in our headquarters um fact channel another question um can we make direct prs um yes so from for example if you want if you see a typo or an error feel free to click on on every single entry you can click on this link right here edit this page on github um it's a very easy way to you know get you directly to github fix the typo let's say a raise is misspelled you know boom and then commit the changes here if you have some description very low effort low lift way of editing entry and that's the cool thing about code camera docs too is that not only there are so many ways to contribute to it like christine was saying you can find typos bugs formatting issues inaccuracies missing info and existing entries you can create an entry make a pr and create a new entry you could submit a submit a entry request in github issues for things that you think are missing on github uh on cocamy docs like a new language a new library a new particular function another thing too you can give us product feedback um using the google form and the home page or actually at the very bottom of every single entry right here right a product feedback and lastly can also help us promote it on social cool all right let's get to the second part portion of this live stream which is we're going to do some live reviews so i'm going to navigate to the poll request sections so here are some of the pull requests from the oh check this out there's one from 30 minutes ago nice um but here are all the pull requests in the last nine days and we're gonna take a look at a few of these live together as a team okay so the first pr that we're gonna take a look at is pr number 455. this is a very small one and this one is from mikey from eugene oregon or mickey mckiff the the username on github so i'm going to send out this github link in the chat so this one in particular is an edit of an entry i think it's a css animation one okay so anytime um anytime we see something like this which is a edit of an existing entry the first thing that we like to do is actually just take a look at what this entry looks like already right so it's a css animations so i'm going to navigate to css animations cool and it made a very small change right if you can take a look it's actually just um adding um a few lines to an explanation on line 23. brandon christine you want to take a look and let me know what do you think yeah yeah i think um it's a pretty straightforward change it's only technically one line on the file um with added text on that line um what i would what i would change about this though is i would surround animation dash duration with backticks and um i would actually they didn't make this change in the original file but i'm noticing in the paragraph above it it's using a u pronoun we want our docs entries to be more manual like in tone and voice so um that's something that i caught looking at this just now was on line 21 the second sentence when you specify styles that needs to be reredone cool so first thing first let's go in here and add single ticks around animation duration okay to get animation to work the animation must be bound to an element that's original piece and it's basically this line is basically describing the code block right here and mickey uh mikey actually add another line here which is to get animation to work the animation must be bound to element and the animation duration field must be defined in this example code the h1 element will load as yellow and gradually change to orange of the course of five seconds and because i have grammarly extension on i'm going to add a comma right here right and also there's a slight type typo h1 element the start review very nice finish my review with um one comment saying uh one little so they review and then we're done for this one and then later down the road if we want to we can go in and make a change to um the from the u to um to be less uh do something else what brandon was saying earlier with right here live 21. cool i think that's pretty good for this piece right um and after we're done with that what we like to do is go back to conversation uh we add a label so this is um css css uh enhancement right enhancement and also waiting for author so three different labels so now when we go back to the pull request we'll see that for this particular pr there are three labels css enhancement meaning it's not a new entry it's edit of the existing entry and it's also we're waiting for the author to make the changes and once the author makes a change we can merge cool and then before we dive into the next pull request i do want to share something i think is pretty pretty nice um what do we look for when we uh review a pull request okay um when it's in when it's the existing entry existing entry like what we just reviewed i think it's pretty simple right we take a look it's not a huge change but once a new entry this is sort of the things that we actually do take a look at we take a look at plagiarism we take a look at the content and structure right file names uh the files the the file system we look at the style editorial right the formatting of the piece the technical accuracy and also some of the guidelines that we that we suggest in our contribution guide cool let's dive into the next vr so the next pr that we have is pr number 456 okay this one is created by um keenan aka revert and it's actually a new entry okay i had an explanation of the tag in the folder content html tag under the folder embed and check this out this entry right here is at actually king came about from an issue so somebody actually requested an issue here actually oh wow christine uh requested an entry uh requested a github issue um and this uh revert kenan um basically made the made the entry so let's take a look okay so this is a pretty short piece it's 24 lines long as you can see there's a metadata at the very top and also the content at the very bottom christine you want to walk us through this one yeah so typically i don't know if we mentioned that like we do two rounds of reviews for entries that have like a have have like a decent amount of information in there unless like it's a typo in which case we just do a single review and usually merge that um for this one it was like it was a really decent review it's um pretty bitesized i would say there were some certain things like if we have the syntax down here on line 23 that maybe there could be like an explanation on the attributes that we included so i probably just put a comment onto that line and say like if we can include some explanation as to the syntax that's listed here um in addition on like line 16 if we can add a suggestion there and also it's really helpful to have the grammarly extension installed on your computer like how you do sunny so that you can catch things that maybe your eyes wouldn't be able to catch all the time all right um okay and another thing yeah like uh this one's missing like a period right here right yeah um another thing is just i like to add like little notes inside of certain entries if there's like some things that maybe a reader could take extra note of so like embed for example is a deprecated tag so it's good that they mention there that there's like other tags that you can use but we just included it here for like legacy purposes yeah that's definitely a node that we want to add like maybe right here yeah that's definitely here's some other ones that you can use also i just noticed line 18 i think this is a common that's not necessary right yeah that's not necessary there but that's all structural and we're like happy to help guide the entry to the state that it needs to get into cool um christine are you going to make the the comments yes so i'm just going to add like a quick period there um remove that extra comment and then include a quick comment here that maybe maybe we can explain the attributes in further detail here let me know when you're done and i can refresh the page okay hit the refresh button cool um very nice added a comma here um that appear right there deleted the line 18 that's not necessary and then a feedback back there okay um let me take it so i would also add another note though for line three under the description um i don't know if it makes sense to have embed in quotes to define embed it seems a bit recursive um i wouldn't just say like allows you to allows one to insert content like videos and images so you don't want to be what's it called um a recursive definition or whatever it's called yeah like gnu or something yeah like it it doesn't really unpack it any further and also i would going back to my earlier point about the last pr lines three and um i think it was 21 uh have you in your respectively so i would switch those out with the manual tone invoice wait where is this line three lines three and twenty one three and twenty one cool um or no the 16 sorry cool so this is something to swap out uh okay one more thing that i just noticed so this is kind of um so i'm gonna go to cogami docs um so this one in particular is actually not a regular entry right it's a term entry you can tell because there's a terms table and so if we navigate to it css tags wait html yeah html works html and let's go into the tags concept so this particular terms entry embedded will actually go in here but check this out one thing that we try to do for all of our terms entries is for the description we don't start we start with the verb okay so let's make the changes here as you can see creates the link represents a section of the document so here let's do what brand is saying inserts a video image page that oscar comma right here and usually for these sort of things i kind of want to explain it um for all the term entries term centuries the description in the metadata should start with the verb also added password done at a single comment are we good um one more thing i usually like to check for oh by the way this person did a great job on the catalog content metadata right perfect we got a free course and then we have a frontend engineer career path one thing i also like to check for is these tags okay so i actually have this bookmarked um this is a system that we're going to use down the road hopefully to sort our filter for specific entries so we want to double check images video and html i can already see a prompt so images boom video boom i'll check this out html oh wait h5 is in here okay i need to actually take this out whoops um oh yeah python's not here so um because hm this is already under the html folder we actually don't need to um we actually don't need the language name here so i'll say take out my text oh all right um one more thing similar to what christine was saying i think it's a great that there's an example of this what the syntax of the embed element looks like and yes there should definitely be an explanation but one more thing that we can do to expand this further is to add um a use case for this or an example of this within a whole html file so potentially right here i'm going to add optional addin whole html file that uses okay so it's basically explanation syntax and then example hopefully more than one example but um get something cool all right let's take it let's refresh and take a look uh all the changes that we made perfect perfect oh wait is is revert in here pull requests oh nice um they're already making their changes right now as we're doing this cool i was like i don't remember committing that cool perfect um and that's it i think this one after this one round of review i mean actually what we just did was almost like three rounds of reviews but um but after this i think um we're gonna take a look again if it's good we're gonna merge it in that's basically the whole process cool should we move on to our third pr since we still have a lot of time um something that our contributors allowed to make comments and reviews of prs or does only the team do that yeah absolutely uh there's a great question we actually had a history of a lot of um community members uh making comments and reviews of prs throughout um this is the whole inception of uh of docs right so for docs we have about i mean now we're talking about 458 eighth pull request um we have tons of volunteers who've been helping us including eugene who i saw in the chat um just plenty of people plenty of people who have helped with review so yes feel free to jump in with a review we still want somebody within the team to we every single entry that's been created requires two rounds of reviews at least one round of review needs to come somebody within cook county right just to ensure somebody was saying in the last live stream the first 100 the first 1000 the quality of the first 1000 entries sets the tone for the next 10 000 right so we really want to make sure these are super solid but yes alex feel free to jump in um if you see something that needs help cool let's get started on our very last actually let's should we check out this one somebody made a entry so this is this is something we haven't seen before this came in an hour ago added insulin apis let's just take a look that's kind of cool yeah um so hot 82 let us know how it's it's if you're in the if you're actually watching this live stream that's why you made the entry um cool let's see what this person did so this is the edit of an existing entry oh ashley before we do that totally forgot let's go back into the bed and add in the labels html let's go back to this this one's done all right now let's come back to this pawn 82 oh very nice so this person um add a whole new section to an existing entry so for these existing entries remember we'd like to take a look at what it currently looks like so api right here that stands for boom categories groups public apis private apis partner apis cool this person added benefits and risk of using apis the main benefits of easy apis are one two three okay so for this let's do q5 so this is the section this person created the main benefits of using apis are three bullet points cost saving through the elevation elimination of the need to build and maintain local physical infrastructure and services cost effective and you know using an external resource instead of building it inhouse i like that opportunity to leverage expertise of different vendors instead of having to reinvent from scratch things like authentication payment processing and maps so this one i think and this one are kind of similar if i'm i'm reading it correctly oh actually never mind this is slightly different okay possibility to build new businesses based on the exchange of data between users and various online services through api access to independent developers i kind of get that yeah saying it makes me think of like uh kaplan they use a lot of um like public web apis for their video editing softwares and stuff totally um okay i think this is pretty solid right uh it's cost effective because you don't have to build it inhouse you can leverage different vendors it's the spotify api the google maps api so instead of right or or stripe payment processing right stripe map or or gumroad or whatever authentication you know google login facebook login google right magic link maps google maps i think the what's it called the forgot the name of the map grid or whatever api um okay um i would say some of these do overlap slightly so i'll play around with this a little bit um what do you think should we is it say yes it looks good to me i mean the ideas expressed in each of the points i think they do overlap but they're also kind of like free free falling in a way or like they stand on their own in a way i would just put a dash in between cost and saving on the first point i think that that's the uh the idea that like cost saving right here okay yeah the main risks associated with using apis are having no control over vendors infrastructure or how the vendor allows developers to access it through the api true it's basically saying you can't really it's not really flexible right you don't really have the the power to sort of update the spotify api or you know similar to what the chat is saying uh alex on the shopify um api right i think that's pretty that's a very that's a i like that unpredictability of the vendors internal decision making they have a very adverse effect on business businesses relying on the apa so this is a great one i think this happened recently when facebook took away some of the um this is on techcrunch i think i read it it was like facebook updated one of their apis and it had a huge impact on some of the smaller business smaller startups using it having little or no control over exactly what data the api collects and how it ends up being used by the api's provider true apis are get weight gateways and are often subject to hacker attacks once the api is compromised other system becomes vulnerable it is commonly predicted that api abuses will become the most frequent vendor of attacks in the coming years um christine or brandon can you can you copy and paste this um yeah we actually you know what let's we can check check for uh so one of the first things what we usually try to do is the first thing actually we usually check for plagiarism and things like that and i feel like um we probably should have done this early on but it's fine we'll take a look after this live stream offline api providers run the risk of legitimate business business partners abusing apaches to their own needs okay um i think this is pretty solid i want to see yeah i feel like some points do overlap and can be placed into like the first and second and third yeah those bullet points and then maybe we could just like have one overarching theme which is just like little control or unpredictability and then list the reasons for that i agree um yeah combine these three into even into one okay alex actually have some thoughts api allows you to keep the structure of your database hidden and secure does the user interfaces with the app instead of with the database directly you don't need to expose the url of your database i like that is the apis that's a great um benefit it's basically saying um instead of storing everything so i actually did this recently with here can i build a whole json file of all the songs instead of using spotify api but because now this json file is available in discovery but in the public repo anybody can sort of know what it looks like and want to it can't be compromised right cool um all right i think that's a great i think we can go through this and make some changes offline thank you let us know if you're in the chat pawn 28 or pawn 82. nice sounds like this all right um so we have 15 minutes left i think that was a great session we we we walked we did a demo we walked through the gap repo and the different aspects of the different aspects of the repo and also live review three different pr's um we do have some time left so let us know in the chat if you have any questions about kokami docs about our team um about creating entries please let us know oh nice hon is right here cool very nice great job han that was that was a great um addition to the to the um to the entry i think that's the the beautiful part about cocamy docks is that it's forever evolving and if it is missing something anybody can go in and make the change so hopefully after this you know right after this live stream we'll we'll make some suggestions and after you make the changes we're going to merge it screen yeah well that was pretty informative thank you everybody for uh all that i actually had a few final remarks since we have some time left uh maybe give you some time people to ask questions in the chat um do you maybe i'm curious brandon christine and sonny you come across any common mistakes or things that are like easily fixable avoidable when you're seeing these pr's is there anything that you would like to share with everybody watching this little tweaks of things that you know can save everybody time um i guess like structural issues is a big thing but like we can always assist you with that if we don't want that to be like a daunting factor as to why you may not want to approach making those entries but um i think as long as like you have a strong technical content in there like will pretty much accept most of your entries nice um i would say some of the common mistakes have already been addressed in recent weeks um formatting and spacing is already kind of getting addressed and um uh like like to the point sunny made earlier about the content catalog metadata point uh that was a common um pain point for a lot of our contributors uh myself included figuring out which links which slugs to use and so christine graciously made us a um a guide for all the different kinds of subjects and languages and frameworks of of the different like free and paid course pairs to use cool have you seen anything sunny that you want to share maybe uh any pro tips one two three yeah i'll say definitely take a look at the existing entries um something that will be great is just literally copy and pasting an existing entry over and then editing editing the file from there just so you already have the you already have the um the structure now saves you a lot of time ready may i make one more point actually um something just came to mind uh for contr for new contributors uh the first time you make a contribution to docs make sure to sign the contributors license agreement or the cla because otherwise our um our ci cd tooling won't work right our checks won't pass and we won't be able to proceed with merging your work into docs so um very important to make sure you sign that document awesome yeah i guess it's something that is very easy to you know you just get so excited and caught up uh contributing they're just gonna like totally forget about that well um unless you have any final thoughts on this or anything uh maybe some wish list i don't know if um when you're reading through content so much is there any specific kind of content that you hope that you're gonna see people contributing in the future maybe there's some areas that you're like oh you know it's really nice if we have this or that do you have a wishlist yeah i think everybody here got plenty of things that would love to see in docs um for me especially i think the the breath and the depth is um both something we you know we're looking for um whether it's um just whether it's machine learning content different libraries and frameworks for different web web dev tools um and even um really um polishing up the existing entries right like for example we just saw one from pawnee to two that just made the whole entry a lot more uh full um and more very informative right by adding the risk and the benefits of using api so now the person who's reading it now will know okay why am i using the api why should i use why should i not use it to make the to make the tradeoffs but other languages like r um i think we have one and go um yeah i know i was just kind of these awkward live streaming moments waiting to see if anybody else might say it's too on mute to jump in um i would say probably like what sunny said breath and death is super super important i'd like to make sure that as we're growing the the collection that the collection maintains quality the quality keeps up with the with the growth um what i'd like to see more of is probably graphql or gatsby other like jam stacky kind of tools um because they're like front end tooling is only becoming more popular every year and more and more people are gonna be interested in and gatsby especially like comes out with like a new version every two weeks that has some kind of a breaking change it seems that that seems like a nightmare to my day okay what do you want to see um i think the other day friend and i were talking about react and on the routing topic um we'd like to see more terms on there cool especially because there's a newer version out with many breaking changes all right yeah i was just wondering if uh you know how sometimes you have these obscure languages or very specific uh parts of coding that uh it's really hard to get help for uh you start googling it and there's like a blog post from 2005 that is that is like answering sort of answering your question and you're hoping you know that they that they have the same problem that you did so um i think uh sometimes even if people are contributing knowledge that they might think that it's not very popular it's not very useful i can guarantee that there's someone out there that is going to be super useful for so like sonny said you know any content you wanna contribute like you know don't make it stop you thinking that you don't know enough or that you know that's not popular enough or it's not interesting enough because there's always somebody out there on the internet that is looking for the help and he's looking for that information so uh off it would be awesome to see code academy docs having all the one stock for everything called implementation related well thank you everybody for stopping by today it was pretty informative it was pretty awesome and useful and i think uh hopefully we can have you online in a few weeks or maybe you know we can make this on our cards keep going with photo family docs keep it updated thank you for stopping by thank you everybody for joining thank you everyone thank you and stopped