great hey guys can everyone hear us you type something in the chat and let us know if you can hear us or not hello hello hello test test test Mic Check thanks Alexander alright so we're gonna give it just a second before we really get started in the meantime you're welcome to type in the chat where you are joining us from and just to get it started we're based in New York City so Atlanta Courtney hello hello Denver Denver Windsor Colorado Romania New Jersey Huntington Beach no worries you are welcome to just listen C++ nice we're hoping some of you guys have some C++ experience and of course we welcome new learners at any time hey Dom Luis that's a lease that's really good question you can watch on youtube if you want to chat and you're welcome to pull up the learning environment if you want to code along with us there's a link in YouTube in the description to code along with us if you'd like to all right so should we get started yeah hello everybody my name is sunny I'm a curriculum developer here at code Academy and I'm Marielle I'm also a curtain developer here at code Academy and we have built out the C++ course right so today we have two big announcements so we launched where I C++ and December and over a hundred and fifty five thousand people have started in the courts which is mindboggling to me yeah and today the second batch of the sequence most courses are out so we have a new module on vectors modules five and also module six on functions yeah so we're super super excited about this release and then we have another big announcement pretty crazy there's a first time we're ever gonna do first time we have ever done this we're doing this C++ community challenge and this is for pro users so if you are a pro user you're welcome to join if you're not a pro user you can learn a little bit about this and decide if you want to join pro and then join there's something super cool so you when you're on code Academy this is a time you actually don't get to collaborate with other learners so this is a great opportunity for you to find a code buddy to collaborate decide on a project build this project and show this case show off this project to the world and there's also prizes involved yep so you can win a code Academy hoodie and you can also win and Arduino Uno right which are pretty sweet prizes you can see the hoodie on sunny right now I have my own at my desk and you can actually build the project on anything that you want to so it's a little openended in that sense but there are specific criteria that we're gonna be judging on right so this will and this this will last till end of March and there are just three easy steps if you're purloiner so join this code Cammy lifelong learner slack channel it's a basically a workspace where you can interact with other learners so let's just show case so this is the slack Channel and you can see talk about anything Co related not Co related with your fellow learners only just gotten announced but we already have some partnering getting set up so pretty exciting okay so first first step is join that slack channel join the cpp channel inside of that and then SEP to find a CO buddy to sign on a project build this project together and then step three used to submit a link to your github repository by March 31st and if you're in this lock channel you'll end up getting a place to submit to so don't worry about that right now um and we have a bunch of rules in place we want to make sure that you're using vectors and functions those are pretty important steps to take especially considering we just released some new course material on vectors and functions and we really really want to see collaboration this is so important to us and this is the first time that we're actually getting a chance to bring collaboration to the code Academy experience oh yeah oh yeah and the originality readability that's something we really care about and the winners will be announced the first week of April there are a couple of additional resources on the bottom that you can check out yeah we're very excited about this C++ community challenge so again if you're just joining us if you're on YouTube and you want to code along with us you can in the code ketamine learning environment you can click on the link in the description and if you're in the learning environment and you want to open up YouTube to fullscreen you can just click through on the YouTube video in the learning environment so Sonny and I actually had this idea for a project that we want to build as a demonstration of C++ Community Challenge project right so this is basically the kickoff project we're basically showing you demonstrating exactly what we would do if we were what we are aware right yeah absolutely and we are still winners we're always learning sucess all right so we're gonna hopefully create a New York City MetroCard calculator so there was of you not familiar when it's New York you may not know about our public transit system but for us it's an everyday thing right it's something that we're very much aware of we commute to work using it and our systems name is the MTA sunny you can tell yeah so even I'm actually out of from out of state so when I first came to New York there are a couple different price points for MetroCard Metro and there's the single card a single fare card paper right there's also the unlimited card okay and one problem that had is which one is the best with me which one had cheapest for me so we want to build a program for a user to decide which of these are the best yeah absolutely um so to do that we're gonna take a look at a few different MTA MetroCard fare options so I'm just gonna bring these up so MTA it's just my way jiae fares and go so we'll go into MetroCard and fares at a glance whoa so there's a lot of information it's a little overwhelming we're not gonna delve into all of this and this really speaks to our projects scope we don't want to we don't want to deal with reduced fare right now we don't want to deal with bus fare right now really only gonna focus on a few options right we don't want to over complicate things especially for the first version of our program exactly we can always add new features later cool so let's actually write these down just in case okay so which ones do you think we should cover in this program um so I think that we should cover the subway local bus and select bus fare um for a single ride is 275 G five cool all right um also known as paper ride paper right then yeah and then we also have two unlimited options so there's the unlimited 30 day and the unlimited 7 day cool unlimited mmhmm Tuesday so 32 dollars for the 7 day and wanted 21 dollars for the 30 day yep so these are really the basic options that you're gonna be using if you're using the MTA more than once over a period of 30 days yes cool awesome um so I think before we get into our program okay how about let's take a quick break and check out questions and the chat cool be sure that any questions about the C++ can be a challenge about anything relate to this live stream Academy please let us know so by it says will it be a GUI application so in this particular iteration we're not getting into GUI I know that sunny really really wants us I'm covering that I think for this one terminal would work perfectly fine yeah we're just gonna use a terminal program um any other questions before we move into actually building this app dr. Nanjo I miss NYC transit Oh how far can this smell that's a great question so we just so we did it first for modulus of learn C++ in December and now we're leasing module 5 and module 6 vectors and functions we actually have more in store for you in the next two to three months where we'll be covering loopy so objectoriented programming which includes building C++ classes and then also pointers which is a fundamental topic in C or C++ so after that Ashley think you have the power to build almost anything you want of course you know you need to learn more frameworks and things like that however we are thinking about what we can do pointers are confusing right yeah what we can do there are a lot of little things that we're considering including hardware including creative coding including gaming maybe yeah so Tammy has a question I'm new to C++ and I don't know anything yet about the programming language how can you help so we actually that's a really great question we have learn C++ content up for free on code Khadem e so I would definitely recommend that you check out the beginning of that course starting with hello world in order to get some sense of the way that C++ works um which doesn't isn't to say that you're not ready to watch this live stream I definitely encourage complete newbies to go through this process with us because I think that it helps gain a fundamental understanding of just programming in general and what the process is like especially when you're a pair programming right and I think the goal of this course when we're building this is to build the best entry point into programming using C++ so Alexander is asking would you need to know more about C++ than what is in your course to get started coding with professionally I would say it depends in what capacity I mean you know you can always get started in some professional capacity at almost any level but to be really great at it and to really bring something to the table the more knowledge you have the better right and suppose this is almost one of the biggest languages that we have today right it's just so vast but I still feel like the Liceo this place is a great starting point and after you finished the course you should be very confident and very have a very solid foundation into what's next yeah and definitely have the capacity to pick up things on the fly following that do you offer real classroom learning or just online I just online right now it's just all right great questions guys cool all right fantastic we're gonna jump into our setup all right should I take this one or should we do you want to start no that's alright so we're because we're pair programming we're gonna be switching off who's actually typing and who's speaking and we're gonna speak back and forth quite a bit yeah okay so let's get started before we start building this program of course we need to do some setting up so as you remember from the hollow or a lesson from like the previous strings we always have to include my break collar iostream input output stream okay that allows us to input an output to the terminal mmhmm it also includes a few other C++ libraries which are pretty important and I'm going to start off with a main function mmhmm which is in every single C++ program okay comfortable with it and we have a opening curly bracket and a closing quarterback and this is where our code will live right here okay so to start this off I feel like we're when we're writing programs were almost playing two roles here and we're playing the roles of the user and we're also playing the role of the programmer right so that's like how usually how I think when I start building my program so yeah what do we need to start this program off um I'd really like to see a greeting to start off I think it's really nice when you get some kind of greeting a little bit of information about what the program is about so that you're not just inputting something without understanding what you're inputting exactly so let's stand your C out console output on to the terminal and let's print out welcome to what may be the MTA best fare calculator best there okay let's do a new line all right awesome and then I mean let's take a step back and think what do we want this program to write you write what is this difference three price points but what should we ask the user yeah exactly so what kind of information so something I think about a lot as I'm trying to figure out which metric hard to get is how long I'm gonna need it for you know like I'm not gonna buy a 30 day if I'm only here for three days right so a number of days yeah so the number of days is kind of important and then what do you think also so we have a number of days which also get a number of rides yes so often you're using the card that makes a lot of sense okay so let's actually so we need two variables here for to store these two from so let's do int right because those two are probably gonna be integers so int do just call it days and days and right it's yes let's do that okay so we're declaring two variables two integer variables one called days and what call rights mmmhmm okay so now we need to ask the user for these two values yeah first we gotta give them a problem right see out so I how many days would you be using your MetroCard how many days what's the question do you will you be using your MetroCard cool so another new line mmhmm semicolon to close a statement and then we can see in right so redo the input from the users keep yeah exactly and we're gonna store it in two days and let's do this one more time to get the ride so standard this is a little shrine how many times how many times do you expect to use you expect to use the subway cool the same way let's do rides cool let's save it and let's compile and execute it just in case so do compile g + + as a command and then flower name the file name here is challenge dot cpp enter CP successfully so now let's execute it dot slash is executing come in and remember after you compile it creates a new executable file call it dot at so now dot slash dot out enter welcome to the MTA best fare calculate how many days will you be using your MetroCard let's do tag hit enter we're pretending to be the user right now huh how many times do you expect to use the subway let's do 20 yeah all right it worked as we expected so I think before we move on we should take a quick break and check out the chat because it looks like when you have some questions piling in here make this alright yes created to save you money on the subway what is the STD do B for C hours that's a request so it's a standard library stands for standard library and because we're not using something called the namespace STD we just have to include the library before the C out keyword okay so it's a CD so yeah it's biggest thing see how as a function of standard library why the in tat the beginning of the coding was so good question yeah are you Timmy I don't know if you're talking about the inch in front of main or the int in front of days the engine in front of main has to do with what the function is returning it's gonna return zero um the int in front of days arrives is indicating that days and rides are variables that will be storing integers it's a data type mmhmm why not define new space under iostream right I mean that's a tough question for I mean it's a very controversial we just didn't want to over complicate things well also it's it's a convention right so you know if if you're going to be scaling your programs ever it's generally good to not be using namespace right so Tammy just asked the Hinton from Daiso just like Mary L said so we're declaring two variables here so you could also do this we did this in what a single line but you can also do it this way yeah in today's declare variable plug days and enterprise declare another variable called rides awesome and here on line 11 in line 14 we're actually storing the user's input right here into these two variables so now at the end of the program days will actually have a value of 10 and rights will actually have a value of 20 so this is a great question so what's different between left angle bracket angle brackets into writing arrests this is just like the convention the stander was used so after C out is towards the left after C it is towards the right so as you notice right here my 8 to the left after C in good 911 goes right and one last question I see you know how how can you tell me how long I should study to be actually good at the computer um that's that's a matter of you know it's a great question actually yeah yeah so won't the reason why I actually got into Tech study computer science back is nice just kind of fell in love with it's almost because it's one of those fields that doesn't matter how far you go and how deep how much you study there's almost always another dimension world of things to learn that's like why I really enjoy this field even we did an interview with Microsoft a very wellknown figure in the c+ community named assignment Brandon and just do that and we did this interview with him yeah a week ago and just talking to them just made me realize how much I still don't know about C++ very inspiring but yeah I think to be comfortable to be confident and oh sorry and to be confident in programming I will say a couple to two to three years will be I have a really strong foundation yeah generally speaking it's not about a speed I feel like that's when some people a lot of people who started like focus a lot like how many like what's the month I can get this master see yeah XML CSS or JavaScript it's more you know take the time you know retake courses it's a comfortable way right it's about doing similar to playing guitar or learning a new language like French or Chinese the more you use it the more comfortable you get with it right all right so do you want to jump back into our take this program sure cool all right I'm gonna switch to pair programming all right so I would say at this point we want to build out some sort of calculator right it's some sort of almost like a little machine that takes in the number of days and the number of rides and then tells us some information right right I think a function would be a pretty great thing right here yeah I think so too it's a great showcase of our new yeah and functions are really great for this because they allow us to write dry code which is don't repeat yourself code modular code that you can use in different situations and flexible codes so it allows for very abuse cases right um so it's it's definitely a really helpful tool to have in your tool belt and again if you don't know what functions are after this you can take a look at our functions module which is up and live now so what kind of what web functions what would she call this function get best there get best there case yes all right and we're going to take in the number of days and the number of rides as arguments right okay all right so let's do these rides and sorry I just started defining it huh okay so this is a function call but we actually need to define this function right because we're still on a single file if we define it below main main doesn't have access to the declaration yet unless we declare it up above main and then define Apollonian but we could just define and declare above in rights to it all right what kind of function is this what is the what is that output oh I guess just sort of I think we should just do void the way is in case so why void void does not return anything and it's a good starting point because right now we actually don't know what returned all right so if we actually do want to turn something later we can always go back in and change the void keyword to the data type of the return value all right so we're creating a void function which you know you put the do return type first then you put the name of the function and this is part of the function declaration and inside these parentheses we're gonna put the parameters right yes and we need to declare also the types of these parameters so because we're passing in days and riots these are whole numbers right these are integers right so we can say int days and int right spray it alright excellent now we need to actually define it all right so inside what are we gonna do well so now we have two different values mmhmm right the days and the rise I think this is where we should actually calculate out what is the cheapest yeah there right so before we get started shall we Ashley because we went to the MTA website and we got these three different price what should we start store that in here yeah that sounds like a really good way to get going um so I'm thinking if we have three different values and they're all related to each other right and they're all the same type of objects right right because they're all these decimal numbers right right so all three of them could be stored together in a single unit right that'll be the cool that would be the cool thing to do instead of storing these three different price points into individual double variables what we can do is store them into something call it a vector yep so if you program in other languages before you've probably seen arrays or lists or you maybe plug programming suppose before you might have c square bracket arrays but here vectors is basically a level up a little upgrade on this right and the cool thing about vectors is that you can store different elements of the same type into a vector but also it is dynamically size which means it can grow in size you're gonna add more elements to it or you can shrink a size taking elements out of it mmhmm right so yeah creative vectors so this is an STD vector right right so this is part of the standard library it's actually as STL but we do need to include something we do include the library itself so let's do hashtag include mmhmm and the library which is called vector just factor just like that yes all right excellent all right oh right so here's a cool little little syntax thing we've never really used a vector before right and the vector you actually need is the syntax might be a little bit different yes you need a square bracket a square bracket up here angle bracket I'm sorry angle around right inside the angle bracket is the type of the vector all right so what is the type of vector it's not just typed about type vector no so the type of the vector is actually the type of the elements in the vector right so we actually want the different price points so those are Ashley money so like decimal numbers so we should actually use double we want to create a vector of double elements and after you give it a type list a space and then the name of the vector which we call it let's call it fares let's do it all right let's call it ferris right and we also want to plug in these numbers into it right we want to store these price point into us so let's start with a squiggly bracket okay and let's just store these three different price point into it and separated by commas so the first one we have actually roll this down I'm Mary always looking on Google so 275 for single fair pay per ride for the 30 days 120 1.00 121 should we do the sevenday one so thirty two point zero zero for the sevenday I'm limiting all right comma and the $121 for the 30day limit which is a lot of money all right it is a lot of money there's a lot of like I don't know is it worth it I don't know guess we're gonna find out right all right so what's up next um should we actually calculate it I love them what do you think yeah I think maybe maybe what makes sense is to find out how much each one of these options is per ride given the number of days in the number of rides for okay so just watch that I use their inputs which one do you think we should start with uh let's start with the easy one paper ride all right let's do it cuz paper ride so it's let's call it double PPR race and that is we already know it is DPR Oh paper ride paper the ride seventy five 275 and boom we already know how much it is perfect there we go that one's really easy what's up next so we do sevenday let's do seven day cool the week one the $32 one this is the tricky one is it yeah okay yeah I think this is the tricky one alright so it's also a double okay and I know why it's tricky I'm thinking in my head now yeah all right yeah all right so that's a variable name yes so let's think about what this is and maybe we need a little bit of a comment here so what are we getting we're going to be getting the number of days divided by 7 which will get us in the number of weeks right oh I see you're winning so you're almost trying to find its number we still need a 7 day so let's say they do 10 days they need not just one week they actually need two weeks yeah right and yeah because we're not gonna we're not gonna deal with combos here this is just we're only gonna deal with okay single I like that all right cool so we need the days divided by 7 plus oh sorry x so that that's the number of weeks x 32 which is the cost rate so number weeks times number the cost per week cool so we're gonna take that value and then we need to also add the number of Oh so if ya because the thing is if there's a remainder so like let's say that we have a 10 we have 10 days right ok we're gonna have to add an entire extra week right yeah that makes sense right so this is this is the let's do that alright so well let's let's start here so let's just start with we're gonna iterate over this a little bit make it a little bit better so I got the DS divided by 7 times 32 right so that's gonna give us the number of full weeks times 32 okay which it gives us you know in the case of like 10 days will give us 1 right right so this is actually so Mario's actually using a little trick and C++ to to our advantage here almost so days it's actually an integer but when you do find an integer by an integer so let's say you divide 3 by 2 and they're both integers and you're storing it into integer instead of being 1.5 we actually it's actually the result is actually one and the result is actually not rounded down like it's not 1.5 we're running it down to one it's actually just cutting off the things after the flow people after the decimal right yeah I just ignores the remainder so 3d5 back to you store into an inter it's actually one instead of 1.5 and we're using that to our advantage here to just get what's that call like the floor yeah right yeah the number of full weeks same times third eating okay so then what we need to do okay is we need to say if there's a remainder right okay so if there's a remainder and the way that we can get a remainder is this nifty trick called modulo which looks like a % mmhmm so we're gonna say if there's a remainder when you divide days by seven so if that number is greater than zero okay then we're going to add an extra $32 right to the sevenday unlimited price right yes okay so we're gonna do um oh sorry yeah seven phrase plus equals 3200 right yeah so this is a little neat operator so what this does on line 14 it's actually saying unlimited seven underscore price equal to unlimited seven underscore price plus 32 we're adding a 32 on top of the verb about the value that's already story the variable the plus equal sign yeah cool yeah so then we're gonna have to take that full number and we're gonna divide by the number of rides right to get the right to get to get the price because the average is risk yes nice to read okay so what we can do then is we can actually just say seven price and just like we did before with plus equals we can actually go divided people rights and what that means is you get the answer or get the the quotient right we're unlimited price / rights can we show some what this looks like if we don't use operator yeah absolutely so this would look like / equals seven brace / right right so those two lines are actually exactly the same yeah but we like to do a little / equals here cool all right uh should we just run this code and then we'll check my first questions things good to come I asked you right now just so that we know or you know we're debugging along the way all right got to remember to the save that code g+ + challenge this just keeps going like that okay you go you're gonna go ten we're gonna use 20 times oh right oh we've got a standard see how we forgot all right let's sddc out STD c out unlimited seven so 20 and 3.2 Wow so that's actually the way terrorism if you pay yeah 2.75 interstate yeah so can we Ashley before we move on that's you mean before we move on to the questions yeah yeah let's uh I wish it yeah that's actually the answer some questions right now great so do we got here Alexander can you use the operator asterisk equal sign let's seek recite and subtract people assign yes you can those are little fancy really a good question yep you can use all of the operators that way cool um and there there are a few other languages that let you do that too right oh yeah in modulo right yeah so let's uh let's add an e line so this is a little bit confusing right here so let's add a new line after that yeah yes cool and then we actually don't use code right so we can actually comments out for now this part and we have a quick question from Tony I'm just starting on my journey with low code mendax what's your opinion on a language to start focusing on or does it vary depending on what are you doing I would say it definitely depends on what you're doing right also the more languages that you know the easier it is to pick up other languages just like human languages right I think it's a good starting point to ask yourself what do you want to build so we want to build a website you know HTML CSS JavaScript Li the best sequence of steps that you should take if you want to just you know start programming and build you know if you want to do like data science you're probably gonna go into Python or more or our yep if you were just wanna you know studies see us or get into solve engineering or actually no that's that's too broad so if you want to just like sit under ski I have a really solid foundation I would pick either C++ Python or JavaScript sorry or Java yeah yeah and we're also about to release Java by the way that's upcoming in our catalog a new release for Java right um alright and you just do it oh yeah make sure keeps getting your um any other questions before we move on you guys excited to dig into this and figure out how to make this work cool all right should we continue yeah let's just do it I do you want to switch off again sure sure I have no idea what I'm doing but let's do it okay we can move this what are we going next that's a great question you we don't have to we don't have to do the webcam you have to go back okay so our audio is back oh can you guys hear us let's bring that down are you sure yeah I know we don't need the okay internal if you want to turn off the video alright guys sorry about that all right back into your program should we just take them this is like a little bit easier here we go okay here we go um sorry just getting that back up okay cool let's do it alright what's next what's next yeah alright so next up we want to get our 30day unlimited let's do it price per ride so unlimited oh right this is gonna be a double also double unlimited 30 price equals and how are we gonna calculate this yeah it shouldn't be right so it's $121 right no $21 divided by the number of rides Internet okay divided by the number of rides awesome alright cool so guys we have our price per ride for all of these I kind of feel like since we still have a little ways to go in this program does it make sense to just make this into a function we could extend it flush is that wha okay yeah like this can be its own function okay just returns a little bit nice nice pride okay let's do it alright and what we're gonna do then is we're actually gonna create a vector to store all of those right right okay interesting so we have a vector for the price points now we want to put in the result right into a vector exactly all right so that'll end up being the return value for that function that's going to get returned into the other function hope this isn't too confusing guys all right so we're gonna call this so back it's an STD you actor it's going to be type double because we're storing those three in it and what do you want to call it just call it prices sure you see ride prices just to be a little bit more specific right right price is equal to and it's equal to and it's gonna be all three of those values that we just created right and let's do the same order as how we that's a really good point so you're so GPR and it's low price price unlimited seven underscore price for the sevenday and then let's do unlimited seven unlimited 30 on this world price grace cool cool so now restore all the result in a single vector awesome cool and you can always do this later but let's do this above so that we can reference it so what should we call this possible right sure um let's do vector because that's already turning look great and we want to her ride wait do we need to say what type yes you did okay she did so so this is a double um no cost and what input are we taking again we are taking in the days and rides the days I'm reading today's into rides oh and before I forget I'm gonna taste all that work we just did in there so that we don't lose it and let's add those parameters in so let's just go through this code real quick cuz it seemed like we did a lot but we actually didn't okay and let's we're gonna have to return that right usually yeah okay ride prices and the reason that we're we're segmenting this out is first of all that helps make our code a little bit more modular so if we wanted to use this functionality in some other way and it also helps us kind of organize our code a little bit so that our code feels a little bit cleaner so let's just we just showcase that with exactly what we're what we did right so here we have a function called cost per ride taking days taking rides and a return a standard vector with doubles in it with doubles in it and it starts right here and ends on 128 so this is the whole function right here mmhm actually I'm realizing we should probably put fares into the mean yeah almost you probably want fares and global a little bit cleaner all right so now we have all this here yes so we now we're ready a different function the original function that get best fare function okay mmhmm I'm actually gonna copy that because we probably want to name it the same right and and we're going to set it equal to the return value of that function cost per ride getting called on the days and rides that are passed in to get bus fare so this is cost ride and we're passing in these that's right yes all right cool so now we have our cost per ride for all of these so now we really need some kind of way of ranking them right to see like which is actually the best right so basically at this point we have three different results the average price for each price points we want to find the lowest one for the user so what do you do with what's a good way to kind of look through each value inside of a vector and compare it to all of the other values right so the cool thing about vector is that you can actually iterate through in a vector nice using a for loop okay so let's set up a starting point for so we're gonna start with four and we're going to start probably with int I which we normally do right or deploy or counter so that's a counter variable that's only gonna exist within this for loop and then we use a semicolon and then we're gonna say I is listen less than just a function that's part of vector that's dot size you know it returns a size and wonder so let's write let's make the upper faster right prices dot size yes and we need that those parentheses there so that we're calling the function and I plus plus I plus class cool and let's actually make it equal to zero right 31 so if you haven't learned for us before let's do a quick runthrough real quick so here's initialization of the counter right here there are three different separate parts inside this basically condition we have the initialization of the counter the what's this call it again the the upper bound right is the point at which you stop is writing condition right it's the stopping condition then we have the increment with a decrement so here is increment so basically doing this over over again and each time this plus plus mean it's the same thing as plus equals remember how we were doing plus equals so it's plus equals one so I plus plus because you have to constantly count up by one that's a really really common operation you use plus plus yes cool so we want to iterate through this vector and find the cheapest one mhm so I guess the way we can do this is store the first value as like the initial lowest value and we compare each one afterwards do I do I set it in here okay so we need to do this ahead of time yeah all right so what are we going to call it double initialize it to the first value of the vector um and how do we get the first back raspberry this is actually very good you can actually access each of the element using the index some vectors actually zero base index service starts the first element in the vector is zero index zero this second value in the vector is index 1 and X 2 and X 3 and so on so we can access by using a square bracket and index inside alright so the first value would be at index 0 so ride prices square brackets brackets with zero inside so what we're doing at line 31 is basically saying we're create a variable called minimum and we're saving the value of P PR price in sight all right cool type is like this is this is going to get us the minimum right price right right but we don't know coming out of this for loop right now like if we do let's let's try setting up the s statement first so that we can do I guess one thing at a time okay okay so if compare alright so we're gonna compare whatever that particular eye is or am i comparing the vector element what what am i comparing I think you should compare so we're iterating through Specter right we're comparing each element in the vector with the value of the minimum okay so how do we do that so if the vector is called Fred price right prices right on this world prices and we're going to use the counter of the for loop as the index as iterates let's do i mmhmm okay and listen mmhmm minimum then we're actually gonna replace inside this Thursday will replace the value of minimum with that lower price hmm so we're gonna say minimum equals right okay so we're resetting the value of minimum to a new minimum ride prices high right just okay cool done awesome so here's me my question coming out of this we have a new minimum right or maybe it's the original minimum right how do we know which minimum it is like which how do I know if it was the paper ride BM limited 7 or the unlimited 30 yeah right I think we need something else okay so you also want to sort that index where it's at this place is saying if we got it from index 0 the single rides the cheapest if we got a index one the weekly on limit is the cheapest if we got it from index 2 some month unlimited is achievers right yeah I'm wondering okay so there's a couple ways you can do this we could either go back and completely tweak our code and do a nested factor of some kind mmhmm although I don't know that that's gonna work with vectors so vectors have a set type so that's not gonna work okay um but what we could do is create another vector that has the same first second and third tracking to our current ride prices first second and third do you know what I'm saying so if if we say something like a paper ride as the first element sevenday I'm limited right as a second element and 30day I'm right and those could be strings so that we can keep track of that information see I was actually thinking it a more easier way well I actually don't even store that job after we're literally store that index itself mmhmm we see what you're saying interesting okay yeah yeah yeah let's actually do this list I should do this that should make a lot more sense just in case eventually we do you want to add more price points to this cool me yeah I see where you say so basically we're storing all right so many rings all the names yeah yeah let's do that so maybe just in case we needed elsewhere let's add an integral scope so SPD vector and this one's gonna be yes and we can call it fair options and we can set it equal to hey pride sevenday unlimited and cool alright awesome and also we want to stand or see out these two things right the lowest point lowest price and also that's right okay so should we so as we're iterating through do we want to keep track of this or do we want to keep track of let's just keep track of the index the index okay so we're gonna we're gonna have to pay attention to the index so we're gonna start index this is in test index works best index or min index I don't know it's something like that right okay equal to equal to zero right starting out and if we found them minimum yeah let's store that so index equal to 5x equals I cool great I think this should work so let's actually just output to the turbo okay but we're not outputting anything yet so we need to output something to check if this is working yeah no we should yes so let's so what are we gonna output the output the cheapest one is the cheapest option the best option is let's use chaining mmhmm let's chain it with first is what we call the vector what did we talk about I think we're using minimum right or is oh great recalled for repair options cool nope no I it's called mins risk or min and that's right okay and then we probably want to say what the actual price is right yes let's let's actually do a new line okay so we need to chain in you a new line in right and then let's do another line where we say and cheapest or what happens action is the cost per ride is the cost of rent is dollar side I like the dollar sign to stir it a string oh yeah absolutely and it's minimum right you know there we go all right whoo let's see if it works you gotta save our code and then we're gonna see if this works all right gee plus plus challenge always gets to me okay so here's an error yeah line 17 oh there's a typo it says proces instead of 339 whoops line 39 that's our problem see all right hey let's try it again whoo all right how many days let's say 20 sure paper ride the cost per ride is 275 all right and trying to see let's give us a different out different input yeah does anyone want to try this on some other number of days or times yeah let's try this oh thank you Phil by the way I'm glad you caught that typo Oh [Laughter] is the background even weirder no it's just a little bit weird the the mic is also uh because the mic is builtin we're getting some some static stuff so keep talking in chat guys I'm gonna die everybody yeah what any other questions any questions you're welcome to try this out on some different values and see whether this works for you if you happen to come by in New York City you might even have this exact conundrum hey that's a little bit better kind of a call okay alright somebody just Tony I'm glad I'm right into the stream thank you thank you for doing this and helping out I subscribed and sign up for a free trial before I even found this I'm gonna try it and we'll be back for more amazing Wow okay and also Tony don't forget there is a C++ can be challenged that's happening from now to end of March 31st so if you complete it learn C++ please please go jump into the if you're become a pro learner Pro subscriber go jump into the code Academy lifelong learner slack and join the CPP challenge and do the challenge and for a chance to wait till got me hoodie and a LD no email which is really cool Audrey knows actually kind of C C++ so this specially yeah so this eventually help out with that and we had a question on how do we integrate the Center an application that's a great question John are you a pro subscriber if you are let's chat in lifelong learner if not should I give at least do you know it's a sunny at code Academy calm so email me and I'll give you an exact four or five resources where you can jump in from here take this into a gooey Apple kitchen awesome any other questions for us before I think you you wanted to go through github right as kind of oh yeah I think we're running out of time but we have a link in the description part part of the C++ Community Challenge article mmhmm I think that's a probably the easiest let's suppose a link to the hold on I need the other one one second sorry about that so there will be a link to the C photos from each other in the link I'm not sure I subscribe you can subscribe okay Angela rivers do you think you'll be more beneficial to learn see boxes or Python or both if you're interested in a big program oh so so Bitcoin is actually written in C++ but we actually do have so we actually do have a blocking course that you could take it's free course on coding at me so obviously I should start off there first and super puzzles teamfights are very differently there some that very syntax differences and sometimes philosophy almost how I should say learn both why not I feel like learning I want to understand the strengths and weaknesses of the other language definitely also well if you know both and you can pick out which one that you joy a little bit more to program it there sure I mean to be fair Andrew uh it's gonna be a little bit faster getting up and running if you don't know C++ or Python it's gonna be a little quicker getting used to Python if you're trying to get something done like that but no but I always recommend knowing more than one language I think it really really helps yes any other questions before we any other questions especially questions about the challenge we're really really excited to do this challenge with everyone [Laughter] Java episode in the future to mentor Eric I must bet it's happening next oh yeah we're gonna make that happen yeah Tony Tony you can look forward to it though yay cool and please release everybody take the lair suppose this course and yeah please be bored buds please let us know if it can be improved in any way design pedagogy whether it's the build out the flow I mean there's actually a give repo now throw the least learn C+ scores that's open source so if you know github please make a pull request and have your project showcase to the world yeah Oh Alexander that's an amazing question any tips for naming variables um so I think I think it's important to be descriptive with your variable naming so if you are unsure what to name something I would go with the shortest possible option yes that is descriptive enough that when you're reading your code later you're not like wait what was that what what is that referring to you want to make sure that it's clear enough to yourself in the future or other programmers who look at your code right and C++ variable names are you can only consist of characters letters basically underscore and numbers but you cannot start off with underscores or numbers therefore the different Commission I feel like to Google Microsoft yarny all have to bury different senders mode the ones we use our snake case and then it's gonna be a little bit different we're gonna be I think be using Pascal case for right for classes but that's a that's a whole other thing don't worry about the banner of it alright well thank you so much everyone thank you everybody hope to see your projects yeah really looking super sweet challenge some amazing projects great thank you