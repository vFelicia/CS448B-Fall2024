hi this is Pat with coke Adam II I am a web developer based in Washington DC if you're new to web development you've probably heard the term pull request but you're not sure what it means some developers even jump into their first jobs and still don't even know what it means how was me that's okay it's not exactly it's selfexplanatory so in this video we'll discuss what a pull request is why you want to use it what makes it important and I promise by the end you'll be opening up your first pull request with confidence so what is a pull request well to understand a pull request we have to understand yet if you're not familiar with what git is or you kind of know it but have a little bit of a shaky foundation don't worry I will link a video below that will help explain what all that is so that you put that into context now put yourself in the shoes of a team of developers and you have a single source code base that you're all working off of but each of you has different tasks that you're working on you know somebody might be updating the front end somebody might be updating the back end but each of those changes kind of affects the other what happens when multiple people need to work off of the same source code if it's the same files and even the very same lines imagine sending somebody an email and then waiting for them to put their changes in and then the email back to you and then you update your changes it's not efficient you have to work on the same code at the same time and this is why we need version control because without a way to control the versions each person will be overwriting each other's work you don't know what the other person is working on you don't know if you're deleting or overriding what they've done yet allows developers to make contributions without interfering with each other's work or getting in their way but there does come a time when you have to reconcile the changes when it comes time to fold your changes into somebody else's the process is known as a pull request so at its core a pull request really seeks to answer the question what did you change there's a couple of reasons that we want to formalize this process we could just fold it in but we want to give a little bit of time and space for allowing to ask for feedback on the changes that you made this is usually a pretty straightforward process but we're also soliciting advice on how to improve our code and also to ask if there is anything that's wrong with our code that we might not be aware of we will have our specialties and our experience with the code base but there may be things that we haven't taken into account that we absolutely need so moving forward pull requests also allow you to contribute code to a code base that you don't own or don't have permissions to post to and this is especially helpful for opensource when we think about projects where we have a ton of developers from a bunch of different backgrounds and places that are all contributing to the same source code the only way to figure out whose code needs to come in and what those changes are being proposed to is through a pull request and so it consolidates your changes into a succinct presentation of what you changed added or deleted there are places where you can comment and request changes on specific files and even specific lines and this creates an environment for your peers and coworkers and even your friends to discuss the changes in context so this is a pull request it is a formal process of saying this is what I changed and asking if it's okay for us to merge this into the final source code so how does a pull request work well imagine that we have this block of code here this is our source code and when we create a pull request the first thing we have to do before we even get to that stage is we have to create a branch a branch is just a copy of the original source code as it is it's literally as if you had done ctrl C and then done ctrl V the branch though represents a copy of this master source code but one that you can change completely without affecting the master branch and once you have your your source code copy what you can do then is you can and make your changes there you can you know complete your ticket your task and we're not worrying about affecting the final source code and this could be big or small and meanwhile the master hasn't changed it could have changed from other developers that have merged into it with their pull requests but so far as you know the source code hasn't changed and that's important because we don't want the website to break and that's why we have to make absolutely sure that the final master source code is functioning and working properly anytime we make changes to that source code we'd have to go through a formal process of reviewing it before we submit it for that final merge once you have all of your changes in you create a pull request and you're going to ask for reviewers will who will then look at the changes and either request them or approve them this can be a rather arduous process depending on how large the task is how many files you changed and were affected and the the depth and width of what those changes were but what the pull request allows us to do is to look at the source code side by side from what it was to what it's proposed to be so that we understand the implications of what we're trying to change if all goes well and everything checks out the branch is then merged into master and your changes then become part of the new source code so that as we move forward we can then create new branches to make changes off of but now we're going off of a new updated version of the master source code so the last part here is why pull requests and we touched on a couple of these topics a little bit but when we think about the health of us of a code base we always think about the health of a team of developers because developers work in teams and they benefit from the feedback of their peers all developers can absolutely get better at what they do but some of them are coming in with more experience than others and the only way you can really gain that experience and gain that feedback is with a formal process like the poll requests but it's kind of like learning on the job it's it's a chance for you to understand a little bit better what you were trying to do and maybe do it better next time you could also take this time to nip any bad practices or better solutions perhaps your solution works and there's nothing wrong with it but there might be a better way to do it and this is a chance for you to get that feedback it also creates an opportunity to make sure that the code that is being merged into the final source code won't cause any problems and this is really important is because once we send the source code out to production out into the wild everyone is going to be assuming from the CEO of the company right down to yourself that the final source code works to make sure that what we've done isn't going to affect the final production branch lastly you might not know on the entire code base by heart and it's very possible that while you're working on your task or your tickets that somebody else will have come in and done their own work and then merge it into master and so now what you want to commit to is different than what you inherited it from so it is a last chance to make sure that there aren't any conflicts meaning that what was written on source code has changed from the original time that you had copied it hi this is Pat with code Academy thanks so much for watching I hope you found this video helpful but did I answer your questions do you have other questions about pull requests leave a comment below or subscribe to this channel I like responding to learners questions we'll leave some links in the show description that can help you give you a little bit more information about pull requests but if you're ready to take the next step come on over to code Academy we'll help you get started with your new programming career