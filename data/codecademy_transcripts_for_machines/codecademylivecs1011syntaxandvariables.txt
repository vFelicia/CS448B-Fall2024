hello i think we are live yeah i think so let's wait and see just always want to get confirmation that we're actually live hello in the youtube chat if you can hear us yes say hello we're we're looking through the chat and youtube right now cool all right yeah my great my youtube is up um people are saying no in chat hi you're live hi mitch mitchell cool um hi everyone nice to see you here um let me since this is gonna be like posted on youtube after the fact i'll do like a clean start but hello everyone uh good to see you here um oh i see some familiar faces uh lisa i recognize you hi everyone um okay cool so let's go ahead and start it now hi everyone uh i'm alex koontz i'm a curriculum developer here at codecademy and i'm here with sophie hey everyone i'm sophie i'm also a curriculum developer here at codecademy and we are super excited to kind of kick off this new live stream series that we're calling cs101 we are live right now on youtube this will also be posted after the fact on youtube so if you can't make these live um they'll always be posted after the fact on youtube um right now i think we're streaming on a couple of different uh platforms we're on twitter and youtube and facebook and i think twitch although our twitch channel is pretty small um but sophie and i are looking at the youtube chat primarily so if you're watching this live and want to chat with us um feel free to jump over to the youtube chat um yeah i see a bunch of people are in the chat already we have them from all over the world which is super exciting um yeah if you are in the chat why don't you go ahead and tell us kind of how much coding experience you have uh what you're what you're looking for from this series kind of just start uh start chatting in that in that chat and meanwhile i can introduce what what the heck we're doing here yeah yeah we're we're this is our first live stream for this series so we want to get a sense of where everybody's at and what everyone is coming to this to learn so so that would be great cool yeah so let's uh let's describe what we are doing here and i see in the chat yeah somebody says this seems like this is based off of cs50 at harvard i would say that that is pretty accurate where this live stream series that we're doing is kind of a uh it's going to be a little bit of a preview of what you would normally expect in your introductory computer science class at a university or even an ap computer science class in high school and one of the reasons why we're doing this right now is that this is a part of our big back to school campaign where we just launched a student pricing uh plan where there's a discount for students um we're running this series we you know uh there's a pr uh student hub page where we give a lot of kind of resources for students that are starting the school year we obviously realized that this school year is pretty different and so yeah we hope that this can be a valuable resource for folks that are you know just starting to learn programming yeah and for a little bit of context so i see a lot of people responding in the chat about how much experience they have a lot of people with no experience a lot of people with a little experience here and there looking for a little more background or a refresher um so in the spirit of sharing our experiences i will also share that um so i come from a data science and statistics background so i'm actually a curriculum developer specifically for data science content but um in the context of learning more about statistics and data science i had to learn a lot of programming skills and so i'm coming at programming from kind of a alternative background where i learned r first then learned python and then and even just now still on codecademy learning a little bit of javascript javascript um and so part of this is a learning opportunity for me as well and hopefully that will help me answer some questions that you all have because i'm also coming at it from that perspective of this is a little bit of a refresher for me you know alex on the other hand yeah it's what sophie and i were just talking i think we kind of have not opposite but very different experiences with programming where sophie learned it kind of um later on in her uh college and grad school um and i and kind of like from a applied sense where you focused on statistics you needed to learn how to program to run experiments and run tests and that's how you learn programming i have the kind of more traditional american uh computer science college experience where i took the ap courses in high school i got a traditional like computer science degree from college i've taught computer science in high schools for a couple of years and so i'm kind of like locked into what a normal you know kind of introductory computer science curriculum looks like and i think that let me go ahead and share my screen real quick and i can show the the syllabus that we're gonna be working through in this stream um like somebody said in the chat this is gonna be pretty similar to what you'd see in cs50 from harvard or really any of your kind of introductory computer science courses and really kind of the thing that i want to stress is that you can teach computer science in two ways one it can be like really applied like what sophie did where you're gonna be like i wanna build a website or i wanna you know like run this you know experiment for my stats class or something can be in that really applied way uh or it can be in this way which is kind of teaching computational thinking and this is a little bit harder to describe because like in the in the first way when you're building a website you're like oh i made a website i did it i learned this skill and computational thinking kind of sounds like nonsense right it's like kind of this like ambiguous thing that you don't really know what it means um but the skills that we're trying to teach are basically the content of this course we want to teach you to start like recognizing patterns and seeing themes within programming and computer science and the really cool thing is that these fundamentals and themes and patterns can basically be applied to any programming language so the way that this course is organized is that each one of these modules we're going to have uh um kind of a couple of introductory lessons where the big ideas are taught kind of separate from the code itself and then we'll look at that code in python and then we'll we have some code challenges at the end as well um let me resize my screen here to so i can see the chat um cool i love how active the the chat is so if anything pops up in the chat that you think is worth calling out or talking about always feel free to interrupt me or say something that i miss will do okay cool so let's go ahead and get started again this is a this is a course on codecademy called cs101 livestream you can find it in our catalog it's linked all over the place if you found this um if you found this from like the blog post that we that we link to there should be a link to this course in the youtube description there's a link to this course hopefully it's easier for you to get here um in terms of how you want you should interact with this content there's a couple of things that you could do you could either take the content beforehand right so right now we are doing this module all this stuff about variables next week we'll be doing functions so there's a couple of ways to interact you can take the content beforehand and like come prepared with questions and uh another good way to do this is you can like follow along with us um as we're as we're coding live and then finally if you're watching this you know a recorded version or you want to come back to this later you can always you know bring up the youtube video and then code along with us later yeah i see a couple of quick questions one is why python and not javascript um and then the other is can i take this if i want to learn basic data science yes so if you want to take the data science question sure i what i'll say is i think anybody who wants to do data science needs some programming skills at this point um data science has kind of become this intersection between uh between computer science and statistics and so to be a data scientist you need to be able to work with code so this is definitely a good starting point for that i think our data science career path has a ton of python curriculum at the beginning of it anyway so this will be a great way to prep for that um and you want to take the python versus javascript one yeah so python versus javascript really you could do any of these kind of introductory languages right python javascript java c plus c sharp swift like any of these languages are going to have these fundamental ideas the reason why i choose python is that it's a little bit easier to just like get up and running so for example for javascript which is very kind of intertwined with html and css uh to get kind of basic things happening in javascript it requires a little bit of understanding of like how it's interacting with html and so in that in this particular example python doesn't have to deal with any of that um you'll be able to see as we get into this python lesson it's pretty easy to just kind of like immediately start up hit the run button and run some python code yeah um cool uh yes i see i see some comments in the chat about is this course for free this this particular course is paid um it's for pro only but we have free python content out there um and there's a lot more con there's a lot more of this content in our paths as well so this is like a good little taste of what um pro content looks like i think you're gonna need to go back to the first exercise yes good call all right cool so let's let's dive into this this and hopefully this exercise loads go to refresh um really quickly so i saw a question in the chat about pandas and numpy and those are python libraries that are not going to be covered in this course those are data science specific libraries which if you're going to do data science you would also need to learn a little bit about but those are not covered here yeah and again kind of like comparing this to a traditional computer science course that sort of thing would maybe be a second year course or an elective of like i'm in college and i want to learn data science i'm gonna take a course about pandas numpy map thought lab all that sort of stuff the stuff that we're gonna focus on here is you know my first computer science course ever basically yes um okay cool uh let's start by talking about variables in general and so we have a couple of cool little applets here i'm not gonna you know read through the exact text of this but we can start to get the idea of what a variable is and a variable is a concept that's going to exist in any language that any programming language for the most part that you're interested in so whether you're interested in web development or data science or straight up computer science you're going to be interacting with all of these kind of fundamentals and so the idea behind a variable is that a variable is a place where you can store data of some sort and so we have a little applet here where we can start storing data so you can see i already have um you know some forest rocks uh grass um let's throw on rocks i think we will later see like i think there's a lake maybe not what else was there snow no we'll see well we'll get later into this this exercise and we'll see all the different types that we can build um it actually so on the side there what you're supposed to fill them yeah so on the side here it says okay let's fill fill each row with these different things um sophie so for this particular exercise what are our variables here so in this particular exercise we're not really defining variables um or or we're redefining some variables so every time we have a block that is showing us grass then the the pattern for that block is set to grass um and so in this example we're rewriting the word grass every time we want that to happen yeah i would say that we have uh like nine variables here right each one of these is a bucket that can hold some value and we kind of have a limited number of things of what that value can be right right now it seems like it only it can only be grass rocks forest um there might be some other types here but that's kind of the starting point for variables is that i can have a word that is associated with some value and so you know eight right now is going to be associated with grass all right so that's kind of the basics of variables i can put i can have one thing and i can put uh i can put something in that variable cool next we have okay now that i've stored that variable i can use it in multiple places so again this is the same idea of let me define terrain one as one of my variables here [Laughter] and now i'm using it in three different places right so this is the idea of like you'll see in coding a lot of variables that we have have a lot of times are numbers so you know uh when you're when you're checking out an order from amazon like your your total right that might be a variable that's stored somewhere in amazon's system where it's storing a number a lot of times uh words are are stored in variables those are usually called strings where maybe the the title of the item is stored in a store in a variable um on an amazon page and then that title can be used all over the page so here we have three different variables actually and this kind of this kind of is an interesting point of uh right now if i like typo it like i just did like let me try to switch terrain three to rocks well that was a terrible example let me just switch it back to forest by mistyping forest with two r's so nothing happened uh this is like maybe our first bug in programming right like so if we did can you see like an equivalent of like in programming in python or any other language how might this be a bug where i have this variable and i'm trying to assign it as something and it's it doesn't take it right like when does that happen elsewhere in programming i mean it can happen in a lot of different circumstances i think in this case basically we're re we're trying to reference some some patterns that exist or that have been defined elsewhere so somewhere in the back end of this code we've defined that the word forest is going to have this particular pattern associated with it but we haven't defined anything for this double r forest um and so the computer doesn't know what to put there so so that so it's not doing anything when we press run and i think i think that this is like a really good example of what programming feels like a lot of the times where there's these rules in the background right somewhere there's a rule that says force with one r is going to produce this particular image and and if i do two r's it's going to totally break it's not going to do anything and so somewhere that rule has been defined and what it means to learn programming is to essentially like understand what those rules are for a particular language where with python you know there's going to be rules like oh i need to put single quotes around something or i need to you know i'm defining this thing as a double which means that it has to have a decimal point so kind of what programming is for the most part is that somebody else has written a bunch of rules and we have to like understand what those rules are and then we can make new things and eventually you can get to the point where like you're the one defining what the rules are where which is like kind of what we've done here where here at codecademy we built this little applet we defined the rules for this for this thing that you're interacting with um that other people can use yeah cool i think before you move on the one thing that i want to point out here um is that so in the in the first exercise we saw and this exercise we're really doing the same things if you're if you're following the instructions with in exercise one about what goes in what row you're generating exactly the same patterns but in the first exercise you're having to write down nine different words um so every time you want grass you're having to write down the word grass and in the second exercise what we did is we defined some variables uh so graph one for grass one for rocks and one for forest and then we're reusing those variables in different places so we've reduced down writing out nine different things with some repetition we've reduced it down in the second exercise to writing only three things down and there's now no reputa repetition in the things that we're writing down um and so i think that's another big there's lots of ways that we can do that kind of thing in programming where we're taking out some repetition that if you were trying to do this manually like color this in you'd have to you know pick out which which block goes in which place and by writing a program to do this and using variables in a in a sort of smart way we're now reducing down a lot of the work that we need to do we have to write less things out yeah that's a great point that's like one of the core things that's great about variables is that you can reuse the same information everywhere um a couple of other little like subtle things that are happening here is that right now these variables like kind of exist right but they don't point to anything they're they're blank right they're showing a blank screen this is something that will come up in a lot of programming languages of like you can define a variable without giving it value and then another thing that i was doing here kind of without even thinking about it right was reassigning things so this variable right now is holding grass but i can reassign it to holmes forest ah and if i can smell the forest i also do see some questions about is this javascript or is this python and it actually is javascript uh that's being used to generate this uh this web page so right now we're um we're in the kind of part of this live stream where we're going to talk about the big ideas and then hopefully a little bit later we'll get into the python code but right now we're actually not writing any code directly uh although this this page is javascript yeah and i i think like you might you might be familiar with scratch which is a program built by mit which is really kind of like gooey slash visual based and that's kind of what we're doing here right i would actually argue that this is still programming right we're still telling the computer to do something and that and it's doing something it just has like different syntax than traditional javascript or python and for for those of you i think if i heard the word syntax in my first computer science class i'd be like never use the word syntax again i don't know what that means right it's just like a scary word to encounter people like never programmed before syntax are just like the again the rules of the language meaning um the syntax of this language is i have to put stuff in these boxes and it seems like there's a reserved set of words that do anything um syntax is like the rules of the language cool um yeah and we can actually show off the like behind the scenes stuff um of this this program we can take a look at the javascript if people are interested in um cool uh let's see changing the value of a variable we kind of talked about this already um we've now replaced these variables with different options just so i don't have to type them in and we can overwrite the old value with a new value um and you know there's some implications about that it seems like it completely forgets about the old value right if i if i'm on lake i have no memory that i was just on town or whatever i was just on um so basically that's an important part of variables is that not only can they store value and be used in many different places but you can also overwrite their value but when you do that you kind of lose memory of what it was before the town one did you ever have had that like play mat that was the like the town grid no okay i don't know yeah i i wonder if anyone out there knows what i'm talking about but there's like an iconic like play mat that uh that i had when i was you know five years old that looked just like this yeah all right cool so let's get to the last so for people asking what language is this written in you can see here now we've moved to kind of a more traditional programming view of of this instead of having text boxes to enter in text and you know variables associated with those text boxes i can now write this this happens to be javascript personally i think it doesn't really matter that it's javascript like the takeaway message of this is not we're writing javascript takeaway message here is what variables are different ways that you can interact with variables and this happens to be one of the ways that javascript or this is how you write variables in javascript and you can even see that we're like um let's see what were some of my options there i mean i'll do forest again but i think there was lake beach might have been one yeah and for people out there that know javascript you can even tell that i'm like kind of being lazy here javascript normally you would end with semicolons you could define variables with like var or what so technically i'm writing javascript here but again the point is not that this is javascript the point is let's internalize what it means to be a variable um and so that way we can use it in any language because we're about to use it in python rather than javascript yeah definitely there's something here that we haven't really done in the other exercises sophie do you have an idea of like what's different here than other exercises and if you don't because i'm just springing this on you like in in us creating these variables what are we doing that we haven't done elsewhere i don't know so we are defining the variable name right up to this point the variable name has been defined for us oh oh i see yeah so here the variable name was like terrain one terrain two terrain three here we have to define the variable name ourself right i can't just put like forest because this program is associating these blocks with a particular variable name gotcha yeah we've taken away i guess the um the nice format where it allows us to just type in the word and automatically assign the variable now we are doing that explicitly in code yeah another slight but important detail is that we are putting these words in quotes which i saw somebody in the chat um uh brought what brought us to that attention yeah so that's again like very specific javascript syntax of before the syntax of our created programming language right the syntax of this one is like a drop down menu with no quotes the syntax of this one when we were entering in text we didn't have any quotes around it the syntax of javascript is if i want to put in a word or a string i have to put it around quotes and for javascript either single or double quotes will work yeah um you've got a quick question uh whether you can give a quick look at the folders in the top um and i think it's worth showing briefly um i think one of the things about learning programming skills is that like there's a there's so much to learn and i've seen this a little bit in the chat already that people get overwhelmed and so one of the things that happens on the codecademy platform is that we usually only have one uh one file open at a time so that you're not overwhelmed and kind of digging into all the nittygritty you're kind of focusing on the one skill that is being taught in that exercise but it is i think useful to at least see that if you wanted to look a little further at what's going on behind the scenes um there's some more files in here that are actually being used to generate this screen on the right and so yeah i think i think these might actually be hidden from uh from folks by default i have my special authoring mode turned on so we can kind of have a behindthescenes look at some of this stuff but yeah let's look at the the rest of the javascript code right because we were writing our code in main.js but then we also have this javascript file that's like doing the rest of the work and so you can see right there's a lot of stuff going on here and it might immediately be overwhelming but one of the things that we can look for are things that we currently understand which are variables and so you can see that we are creating variables associated with each picture basically this is a this is a link to the picture that we're using for grass and so we're storing it in a variable named grass and so later on in our program if we ever need to like talk about this picture again we can just use this variable i think one thing that might be interesting is so we've asked you to specifically declare a variable named one two or three see if we can find um yeah ctrl f isn't gonna really work but let's see here we go um so here's where we are using the variable from the other file we're taking your variable to and storing it in a another variable named input value two and then we're doing stuff with that with that variable right so you can kind of get the sense of how how variables are used in this larger system yeah all right i say we close it so that we're not going to be full and i think we should try to like get through these other big picture ones kind of quickly so we can get into a little bit of the coding i think we should even jump to python right now and do like declaring variables in python um changing variables in python all that sort of stuff and i might even jump around in this exercise a little bit to to cover the stuff that we've talked about um so let's see so let's jump right to variables we can talk about printing and strings and all this stuff in more detail in the future but let's jump right to variables and all right so cool this is python it looks pretty similar to what we just saw in javascript some of the stuff that we just skipped over was let's talk about it two two important things i suppose um the print function so right now if i run this code and this code might even be the starting code let me hear that the solution code let me reset this i went through all this stuff before the stream so um yeah the code might uh might have been complete there so we're asking you to update the variable me a meal to reflect each meal of the day before we print it so meal starts with an english muffin and then we print breakfast followed by whatever is stored in my meal variable for lunch sophie would you have for lunch today i haven't eaten lunch yet okay none because because we are streaming i'm going to eat a sandwich i think nice okay yeah and dinner um let's see so cool we updated meal to be a lunch meal and then we printed lunch followed by whatever is in meal now let's update meal to be dinner so i can do meal equals um let's see for dinner i'll have indian food i love indian food me too right okay cool so right a couple of things that we're doing here one is that concept of we can declare a variable so we declare the variable meal at the very top of our file here um and start it as an at an english muffin but then we can continue to change it as we go right we we then say okay meal is no longer an english muffin we've overwritten it it's now none because we are streaming we use it we print it out and then we change it again when i say like we use meal three times what like what do i mean by that in this case it's pretty simple so in this case we're just printing it out as um a string in some bigger context so like before each each time we print it out we're saying what the meal is and so um and so we're using it in three different contexts right we're using it as a printout of what our breakfast was our lunch was and what our dinner was and this is kind of similar to what we saw before with the patterns in those blocks because before it's kind of like we were defining what those patterns should be and then every time we printed them they looked different depending on what was stored in that variable and here now every time we're printing the text that's contained in meal we're printing it in a different context um but we're still printing the context or the contents of that variable meal yeah i think that that's kind of another thing that we skimmed over almost because it's almost like second nature when you're interacting with those applets like in those applets not only were we defining the variable but we were using them in some way and we kind of use them in the same way every time right the way that we used those variables was show an image on on the screen in the same way and we did that for every variable right in the same way that the way that we're using the variables here is printing them out and again the idea behind like learning to program is understanding what you can do with different things and so it seems like a thing that we can do with this variable is we can print it but we can also do other things with it right and this is stuff that we'll get to in later exercises whoops um yeah like so we'll get into other things that we can do with variables later on but let me give a little brief preview here where i can say um lunch is um this is my lunch so a thing another thing that i can do with variables other than printing them out is combining them so i can say um breakfast and lunch equals meal plus lunch and then i can so that's using these two variables in one way i'm combining them together again you kind of have to have a little bit of knowledge to know that plus is going to combine them together in some way but that's what learning to program is it's learning to understand like what does plus mean in this context and then i can combine those into a new variable and now i can use that variable in uh in any way that i want um in this case printing it out so let me get rid of kind of everything else that i have down here so there we go i'm kind of using variables in two ways now i'm concatenating them i'm adding them together and then i'm also printing them very cool i think one of the things that always surprised or that surprised me about uh python when i first learned some basic syntax was that you could add strings together and it would concatenate them and i think some of the other exercises in here which maybe we'll go back to now are about how are about different variable types and so um what we were just looking at were strings um which are basically just like text that we've contained in um in quotes and so we are using this operator like a plus sign that normally we use with numbers but all of a sudden um when we're using it with strings it has this behavior that i mean it makes sense that it puts the two strings together but it's not necessarily obvious unless um you understand the rules of python and how python is interpreting uh your command so um i think it i think it's interesting one that python does that not all programming languages do um and also two it's kind of interesting to see uh if you had defined your meals or defined your variables as numbers the way that that plus sign works is going to be different so it's dependent that operator is dependent on your variable types which is like an interesting yeah let's look at let's look at in numbers and then maybe we can jump back to the second uh kind of conceptual lesson which shows this idea of like variables have types associated with them and the things that you can do with different types is different depending on the type so let's jump to numbers real quick just to see how numbers work in python um it's pretty similar to what you might expect so there's differences between numbers with a decimal point and numbers without a decimal point and this is something that happens in most programming languages and most programming languages handle them slightly differently um and when i when i describe this stuff it's like again i for this particular lesson and this particular series the things that we're looking at are like really big picture where there's a lot of small details that we're doing that we're like kind of breezing over here and i think one of the small details that i would like to breeze over here is like the distinction between an integer and a float um really kind of like the big picture thing that i want to highlight in this lesson is that idea behind data types where if i have numbers whether they're integers or floats and like don't worry about the difference between them the plus sign is going to act differently than a string which is uh you know those words in quotes so let's let's see what they're asking us to do here um so they're asking us to create two variables one columned release year let's say this movie was released in not 2020 2020 is a bit of a bummer let's do 2018. and then run time let's say it is uh you know 250. let's hit run and see if that works let me i have annoying things because i'm in author mode uh cool so that went ahead and worked you'll notice that nothing happened this would kind of be a this is because we're not using these variables in any context right this would kind of be equivalent if we just had those input boxes back in our applet and we didn't have any you know uh images being shown right the variables are created they're given value but it's kind of useless at this point because we're not doing anything with it so in python the way to like show the variable kind of similar to how we showed the variable through images in the applets is with the print statement so i can now print release here and should hopefully see 2018. yeah i got an error down here because i didn't follow whatever stuff this is but you can see there we go 2018. um let's play let's let's finish this exercise just so it stops giving us error messages um cool now create a variable define called rating out of 10 and give it a float number between 1 and 10. so again a float number in the very simplified version of python is just going to be a number with a decimal point so i can say that movie was an 8.5 or a 5.6 out of 10. and cool i just created the float sophie what sort of stuff should we do with these numbers to like demonstrate the data type stuff well i guess first might be to add some of them like uh you could say maybe uh start you could have like a start time or something and add the run time to it sure how about we do uh current year is 2020 and then years to a remake or something well i was going to do subtraction i was gonna do how how long has it been since it was released right so i can do um years since release is um current year minus release here and then i would print that yes good call so print that um we're getting i i think there's a couple of questions in the chat about um like ides and text editors and things like that um and so i just want to quickly just say uh everything that we're demoing right now i think the the benefit of codecademy is that you get this kind of workspace and so in this particular lesson the workspace is in python which means um you your code is going to be interpreted as python and you can kind of write code in the script.pi file and you can run it and you can see the output um but then on your own computer you're going to need to have you know some way to interpret python code if you want to replicate this on your own um and we're not going to cover this today but there are a lot of resources on codecademy um to to learn how to set that up on your computer so um yeah it's funny when i when i teach in a normal classroom not online like a lot of the first couple of classes are all about setting up your own machine in order to like be able to run this stuff and it's kind of a bummer right because it's like that's all a nes that's a necessary skill to know how to do but it's not the main skills that are like fundamental to computer science where right the ideas of like computational thinking starting to see the world as variables that can interact with each other and be used in a certain way like all of that stuff is really kind of like the meat of an intro computer science class and it's kind it's kind of a bummer that you know it's a little bit complicated to set up on your own machine and so i think that that really is one of the strengths of codecademy is that you can learn how to do all of this stuff kind of in our safe little environment and then once you feel comfortable with those fundamentals you can you well one you're probably like more confident with coding a little bit because you've interacted with it a little bit so the setup process will be a little bit less scary but then two um you've already like seen the the fundamental thinking and so you can like immediately transfer that to your own computer once uh once you learn how to set it up on your own computer yep and i think kenny has also sent some links in the chat so yeah let me um so to really demo this difference between different data types of strings versus ins or doubles let me change back to that being a plus so this is now not going to be years since release so i'm gonna just say this is an added uh or whatever i'm gonna call it my number this doesn't really represent anything anymore right it's not years since released i'm just adding together the current year plus the really release here and this should be right four thousand 4038. so that's an example of me using the plus sign in the context of two uh well this is even an integer and a float so i'm combining an integer and a float with a plus sign in the last exercise i combined hello and i combined two strings with a plus sign and it smushed them together right and so this is a good example of like python knows that when i have two numbers and i'm using the plus sign i don't want to smush those numbers together because that would be kind of you know silly um but when i have strings the defined method of plus is uh smush it together some other kind of cool things that we can experiment with is like what if we do hello plus a number cool um so if we do a hello plus a number we get kind of our first error message here and you can see that okay i have a type error i must be a string and not an integer so it's saying that i don't know what to do if you tell me to add a string and an integer um let's experiment with some other things because i know that there are some cool kind of you know not hidden features but maybe unexpected features if i do hello times three that will actually work where that will multiply the um that will multiply the string three times and smash the three results together so you can kind of see that you know depending on your data type and depending on the operator the thing that you're doing to it um there can be different results and again that's kind of what it means to learn a language is to understand what these different results are one thing that i again went through kind of quickly or without even noting is that previously i've been using variables everywhere and this time i'm not right i'm using a string and a number i'm not using it in a variable and so you know there are pluses and minuses to this right i can do this kind of quickly where um hello times three i don't need to store it in a variable but then i also lost the result right i can't really i would have to do it again right i would have to then say you know hello times three again if i wanted that and it and if i stored in a variable ahead of time i i couldn't use it again okay cool let me to kind of underscore this topic of different variable types and i know we only have 15 minutes left so we can kind of fly through this i want to go back to the syllabus and i know that we have this kind of conceptual lesson on data types or again the thing that i really want to stress is that we are learning python but the thing that we are really learning is these fundamental topics so this fundamental topic is different data types do different things and so we have a couple of you know fun little applets here to play around with that so i can say okay if my if my input is a kangaroo and i tell it to capitalize my output will be kangaroo but if my variable type is a number and i tell it to capitalize i get an error message so that's exactly what we just saw in um in python right where i was trying to do i was trying to use a function or an operator i was trying to use something in python that uh it where the data type didn't align with it it didn't know how to do an integer plus a string just like here it doesn't know how to capitalize a number um cool so yeah in this in this example we kind of go through common data types uh this one's fun sophie did you ever have the book zoom as a child a book zoom yeah no it was a book like this where you just zoomed out and out and out and actually uh it's kind of a shame because my browser window is so small we didn't make this super reactive i guess um where it's a little bit hard to see but you can zoom out right so here's a here's a representation of numbers um where a computer can very easily store very small numbers or huge numbers um another common data type is strings we were just interacting with strings in python a string is a series of characters so i love cs101 and let me make that's slightly wider i might break everything we reload i love the artwork on these i know they're super fun i i really i really love this course that uh this was made by zoe and nick um who are two great curriculum developers um i like this this exercise in particular because it kind of draws attention to the fact that spaces are characters um something that you might have noticed when we were concatenating or smooshing our strings together is that there was no space in between and that's because we would have to tell the computer that we wanted the space there if we actually wanted a space there so there's again like little details that are like almost second to second nature that you have to really think about when you are programming and making variables and strings um boolean all right sophie what's the deal with booleans oh booleans are the best i thought i read through this earlier and i didn't know that uh they were named after someone named george boole so that's yeah but so so booleans there was even a question in the chat about this earlier and some very kind people already answered it um but basically a boolean uh value can be either true or false um and so it's kind of it's another data type that you can use to kind of check conditions so a lot of times you might want to do something if some condition is met and in order to check that condition um you need to be able to check whether a value is true or false um and so that's what they're useful for yeah and just like with numbers or strings they're also variables so in this example we can turn the lights on or off and so if you were to think about this in a more traditional syntax again i'll contend that this is programming we are writing syntax here it's just that the way that we change a variable is through this toggle rather than through text is so we can use this toggle to change the variable from true to false or you know it's not even explicitly called true and i guess it is here um you know here it's not explicitly called true or false and then now that we have this variable we can do something with it and the thing that we do with it is you know either show the sun graphic or show the moon graphic um again i think it's like important to underscore like we can create these variables but then in order for these variables to mean anything you have to do something with them and that like doing something with them is almost second nature where you don't even really realize that something is actively happening here um just like you know we didn't even talk about it in the very first example with the squares we didn't even really realize that oh we're creating variables and using them um but yeah important to realize like we can both create variables and then have to use them in some way um cool and then yeah for folks that want to see the behind the scenes let me uh um sure let me turn on my oh maybe i don't know i didn't turn it on um yeah so for folks that want to see the behind the scenes of these little applets again this is these are written in javascript and uh we can take a peek at the javascript where there's a lot going on here right but the important things to note are that somewhere we have variables that let's see if we can find here let's first say capitalize and make this wider um i don't even know where the let me reload this looking for the input button here this might be an issue because my screen is all uh small because i'm streaming um well anyways there should be an input like an input button um somewhere here so we could like choose a word to capitalize oh no it's over here of course um right so i can define the input over here so i can say sophie and then i can tell it to capitalize i can run it um and then tell it to capitalize that input and it's a little bit screwed up again because i changed the size here definitely does say sophie and cap all capital letters though yes um there we go there's sophie even though it should be down there cool so we can like kind of peek into the javascript here to see what it looks like um let's see if i can find where i'm using my variable called my string so let's see should be able to find like a capitalized function that's being used somewhere in here left my string yeah i don't think control f works in these unfortunately hmm there's got to be a way where we grab my string somewhere like in a different um in a different file yeah we might we might like throw it through html or something yeah either way you can see that like uh we're defining variables here in this file that are then going to be used somewhere in our javascript to make this applet kind of kind of work you know perhaps a confusing behind the scenes look at how cool academy works i think it's great um okay let me we have seven minutes left let me jump to some of these coding challenges i think that we have done enough of these lessons to be able to do these so i'm going to put some of these coding challenges on the screen for folks in chat um you can either write the code to uh solve these code challenges or you can just kind of like describe what you would do and i'll sit like for 20 seconds on each of these and let people take a look and then we can we can solve them i'll also use this as an opportunity to look through the chat a little bit so go ahead and think of how to solve this code challenge i think it's nice so i'm just looking at this really quickly and i'm noticing that uh in each of the messages we've left uh a space at the end so that everything will look nice when we made it yeah exactly we have a space at the end of hello there and we alternatively could have put a space there um cool so let's go ahead and do this one sophie how would we do this we want to create a message or a variable called full message and how do we concatenate three strings together so one way is to write each of the variable names so message one plus message two plus message and one thing i'll say is i said that this is one way you could do it because actually there are multiple ways that you could concatenate those strings um so i think i'm not sure if that was covered in this this lesson but it's an interesting thing to point out is that like a lot of things that you might want to do there are actually multiple ways to do it yeah exactly and i think like again that something that's subtle that could potentially be important is this is something that we actually haven't done so far in this in this class of using two operators right so far we've only ever done message one plus message two now we're doing two together right we're kind of doing two steps and so something that you might wanna think about is well what order does this happen in because like math right with math if i do um 2 plus 3 times 5 there's an order of operations and so somewhere written into python there's going to be an order of operations and so even like let's see so if you don't know if you saw this when i was doing this but i can you can combine strings with numbers if you multiply them right yep and so the question here is that message one plus message two is hello there friend hope you're having uh so is the thing that's going to be multiplied is that going to be the concatenation together or is it only going to be message two and so this thing so it seems like it's only message two right the order of operations is consistent with normal math where the multiplication happens first and then uh you know message one gets tacked onto the front so that's something to be aware of even in something as simple as this two things are happening and they're happening in a particular order and it's important to kind of like think about that and realize that even though in this example it's like kind of inconsequential because they happen one right after another we got a few people in the chat giving us another way of doing this by putting the three messages within a print statement separated by commas do you want to do that below the cringe just yeah let me actually get rid of that print statement so i don't print it out twice so i can do message one message two um yeah there we go interesting consequences with that is again because i'm just doing this in a print statement uh i kind of am not remembering my results i'm not saving the results anywhere right if i deleted that variable i can still print that out but now i don't have that i haven't stored that anywhere i can't really use it again i would have to do something with the original messages again that's true okay errors there are three errors in the following program find them all this one's fun yeah the i think the first one we very briefly covered but the other two hopefully oh and we didn't even really cover the second one so i would will you press run really quickly so we can just see the error message yeah yeah cool um air syntax error eol while scanning string literal eol stands for end of line and you can see that something weird is happening on line one and you can see that little arrow pointing actually exactly to where the problem is yeah so this error message is saying basically i expected um i reached the end of the the end of the line when i still expected something and the thing that they expected was us closing this string this string hasn't been closed yet it started with double quotes and it ends with single quotes so it hasn't been closed so we could do something like replace that single quote but keep the single quote and put a uh put a double quote but now this you know this is green apostrophe um so yeah so that that's that first error message is that uh it was it reached the end of the line while still expecting the end of the uh the string all right the next one yeah this one's pretty this is a pretty good error message from python of missing parentheses uh in call to print did you mean this and yes we did yeah lots of people in chat are giving us all these errors too nice thank you for all the people that are are participating in chat that's awesome yeah uh final error name fave color is not defined what does that one mean oh it's because the f and the c are not capitalized in the definition yep exactly so we were asking for a variable that doesn't exist and the reason why it doesn't exist is because python is case sensitive most languages for variables are going to be case sensitive i can't think of one that's not so there we go we only have one minute left i know uh in fact i won't do this one because this is using plus equals which is something that uh we didn't teach so let's go ahead and leave it there um we have one minute left um okay so i want to plug what's happening next so we're going to be doing these sessions every week um you can find them on the codecademy's events page if kenny is still in chat that'd be great if kenny could drop it in chat or sophie if if you could find the events page and drop drop in the chat so you can um register for these events to basically get a reminder about these events every week um they're always also going to be on youtube so you can just um you know subscribe to our youtube channel or whatever and find them here uh i would love feedback on this so on the events page themselves there are there's a feedback form uh let us know what was helpful and what is not um i know that like this is a ton of content that we're trying to jam into an hour long and so if you would prefer us to just like go through a lesson step by step because we jumped around to uh today a lot i don't know if that's if that was a frustrating experience or not so um you know if you have feedback for us uh you can go to those event pages and there should be a link to a feedback form in the event pages um yeah anything anything else that i'm forgetting sophie no i think uh i know that this was a lot of basics and we weren't quite sure where everybody was coming in uh to start but hopefully this is a really good way to kind of start from the beginning and and move through this together um i am going to be personally logging on to all of these we have different curriculum developers running these events um and i think it's a really cool way especially in this weird time that we're living in to kind of all come together and like learn a new skill together so um so i hope you'll come back and um and keep participating and asking questions and uh yeah yeah uh i guess last thing is that right we're specifically doing this like cs101 very introductory this is your first high school our first college uh session we're specifically doing that now because we launched the back to school campaign there's a uh discount on pro membership for students um so uh you know i think we've like linked all over the place to information about that if you go to codecademy it's like a big banner um so if you are interested in this kind of stuff this content is all available if you're a pro member and then obviously all of this stuff that we're