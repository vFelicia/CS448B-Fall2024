all right hello everyone welcome to another edition of a codecademy live stream my name is Alex I'm a curriculum developer here at code Kadim II in chat go ahead and let me know if you can see everything if you can hear everything as we get started here today's lesson whoo and my audio is playing today's lesson and we're gonna be doing a little bit of objectoriented programming which is a really common style of programming and a really great way to organize your code and kind of think about programming as a whole I kind of shapes you know it kind of shapes your entire perspective or it's kind it's a little bit hard to not think about coding in terms of object oriented programming once you get used to it at least I find that I I think a lot about it audio is broken other people are saying they can hear me hello Oscar okay great so if you are watching on YouTube the kind of goal of these live streams are to be able to code align code along actively with me so if you're on a YouTube this first a link in the description will send you to this page on code Academy you'll have to be logged in if you're not logged in go ahead and log in and you might have to refresh the page or click on that link again and you will get to a page that looks a lot like this right now I have the final version of what we're going to be making today these are all separate objects in JavaScript so we'll talk about what that means for these to be objects and how we make them but this is kind of our final goal at the end of this livestream yeah another thing that I want to mention is I want this to be super interactive so we've got a bunch of people in chat let me know if you have questions let me know if you're able to follow along I've someone I've Sara sitting in the room with me right now she'll also be in chat and so if there's a question that I missed or a question that she can answer she might call it out to me or answer it herself in chat other than that let's go ahead and get started so I won't reset my project okay so what you should see is just this blank blue screen and we're gonna be coding in JavaScript so there we have a JavaScript file here and an index dot HTML file here so this is just this is like kind of like web development right where I could write any sort of HTML in this HTML file that I wanted and then this sketch jas file is linked to the HTML file so really what we are doing is is making an interactive website but it's not gonna be a website like you are used to because all we're gonna have is this canvas that we're going to be working on this prep this part of JavaScript that we're using is a library called p5 which is really great for visualizations and so one of the first things that we can do is we can draw shapes so we can draw on lips at on onto our canvas at a certain point and so I'm gonna draw an ellipse at one hundred two hundred and I'm gonna make it 20 by 20 so let's go ahead and just make sure that we can draw our first image onto this canvas cool so ellipse takes a couple of parameters there are four of them you can play around with what these do the first one is the xcoordinate of the ellipse and in fact it's the center of the ellipse and so if I move if I change the X going to 400 my lips is gonna scoot way over to the right the second parameter is the ycoordinate and so if I change this to 50 the ellipse is gonna move up so one thing to notice right away is that zero zero on this coordinate system is the topleft corner so as my xcoordinate gets bigger the ellipse moves to the right and as my ycoordinate gets bigger my ellipse moves down so if I change that to two hundred mile Epps moves down if I change it to two hundred and twenty it's gonna move down a little bit more so that's kind of like the basics of of p5 is we can draw shapes on the screen we're gonna get into a ton of stuff with colors and moving and all of those different stuff but that's kind of like the basics I see our sky car in chat says can you explain to how how to organize these projects using classes yeah that's we're gonna get a lot into why we make classes how we organize projects using classes so that will be what what a lot of this is about the we're doing this in JavaScript just because it's kind of like nice and fun to have this nice JavaScript visualization but the real purpose of this lesson is to wrap our minds around classes and objects and why we might use them so we'll focus a lot on that okay if you're curious about these other two parameters in the ellipse function those determine the size of the circle so this first one will make the circle longer if it gets bigger and the other parameter will make it taller so you can make it kind of any shape that you want okay cool so one of the cool things about p5 is that this draw function happens again and again and again and by default it happens 60 times a second and so you can kind of animate your your objects really easily or your your shapes really easily so the first thing that I'm gonna do is I'm gonna create a variable for my objects Y position let's start it at 50 as a side note I I am probably more most comfortable in Python and again I'm really kind of focused on the conceptual understanding of the class so I am NOT a super expert in JavaScript so I might do things like forget a semicolon as I've already done that a couple of times I might forget I might use var instead of what because that is kind of new so bear with me as I make some you know JavaScript JavaScript syntax errors here and there okay cool so we have this variable called Y position and let me plug in Y position into my own lips and so this should scoot that circle up a little bit yeah global variables exactly so it's a good point right so this project is gonna be a little bit hacky in some areas like I just defined this global variable but the point of all of this is to kind of explain why classes are necessary or why we might want to use classes so they'll definitely be some stuff that is a little bit thrown together great point Sam if the video is blurry that you can go ahead and change settings down here in YouTube to 720p okay so great I have plugged in my variable for my Y position and now we can really see this draw loop in action again the draw loop happens 60 times per second so if I change my Y position by 1 every time the draw loop happens this is going to be this is going to make it look like this ellipse is moving so there it goes so every single time the draw loop happens I draw an ellipse at a certain position and then I change the Y position that it's gonna draw at and then the loop happens again and now that ellipse is drawn at the new position and then we update where the next one is going to be drawn and that happens 60 times a second you can see that the old ellipses are still there in the background we can make it look like like there's only one ellipse by repainting the background every time the draw loop starts so I'm gonna grab it this code that is painting the background a certain color and there we go we have this one ellipse that is moving down the screen and really what's happening is I'm painting the background so I'm painting over everything that we've done before I'm drawing the ellipse I'm telling her I'm updating my Y position variable to say the next ellipse that I want to draw should be a little bit lower and that I'm repainting the background drawing the ellipse updating the position and doing that again and again and again okay cool any questions about kind of basic p5 shapes or how this draw loop works again this doesn't really have anything to do with objectoriented programming yet but we're gonna need it in order to make a really cool visualization using objects ok I think we are good so we can move on ok again I'm gonna show the final results again really quickly so I'm gonna copy my code that I have already I'm gonna show you guys my final results in case you tuned in late so this is what we're gonna be aiming for and so these are a bunch of objects that are falling down the screen and one thing that you might notice is that when an object hits the bottom of the screen it pops back up to the top so that big green one just popped up there right this purple one keep an eye on it there it is back at the top so let me go back to what we had before so how do you move the ellipse yeah that's a good question in in chat again the ellipse is really kind of moving because we are updating this y position variable every time through the draw loop to increase by one every time if we made it increased by it five every time it would make like it would make it look like the ellipse is moving faster so this number here is kind of the speed of our of our ball that is falling okay cool so we just saw that when one of these raindrops hit the bottom of the screen it reappeared at the top so let's write in that logic and again this isn't really objectoriented programming yet but it's kind of a a piece of functionality that we're going to want to build into our objects so this is going to be to do this we're gonna use an if statement or a conditional statement so I'm gonna go ahead and say if my Y position is greater than or equal to 500 and 500 is the bottom of my canvas I defined the size of my canvas here if my Y position is greater than or equal to 500 what do you think should happen well we want what we want the ellipse to move back up to the top so I could reset Y position to be equal to zero so as soon as the ellipse gets to the bottom of the screen I'm gonna say nope email at the bottom anymore you're all the way at the top so let's see if that works it's moving slowly I probably could have increased the speed nice it does work let's increase the speed a little bit cool okay so we kind of have one object that you saw in the final final result and we haven't put this into a class or made this an objectoriented program yet before we do that let's make a hundred ellipses and let's create them with random X positions let's have have them all move at random speeds and so in order to do this we're gonna use an array and again if you're if you're not super familiar with arrays that's okay the point of this lesson isn't to really teach you how to use arrays or you know what arrays are so this might be so don't worry too much if you haven't seen this syntax before yeah nice Jarrell can you said set it to one so I'm going to create three lists and okay so what so if we want a hundred of these balls that are falling we want a hundred expositions a hundred Y positions and a hundred different speeds right one of the one of these one per per ball all right so what I'm gonna do is I'm going to give them a I'm gonna make all of those variables random to begin with so I'm gonna write a for loop again don't worry too much if you aren't really familiar with for loops so I'm gonna write a for loop that happens 100 times I hope I've done that right and what am I gonna do 100 times I'm gonna add a random value into each of these lists so let's put something into you by position list let's push so I'm going to take my Y position list I'm going to push something into it meaning adding it into this list and the thing that I'm gonna add to it is a random number so I will explain this line of code in a second and actually I will also do this for the X list and a while list while I do this think about what this value that I'm pushing into these lists what this what this is try to try to take a guess at what math dot random times 500 what that could possibly be doing any thoughts on what these three lines of code are doing so math dot random gives you a random number between zero and one do we have a audio issue ooh an error interesting can you try to refresh do you guys don't see me here okay cool so Matt thought random gives you a random number between 0 & 1 a decimal right so it might be point 2 it might be point 5 we're then going to take that random number and multiply by 500 so that kind of says that kind of increases the range which these numbers could be it starts where it's some number between 0 & 1 and we multiply by 500 so now we have a number between 0 and 500 please show the HTML yeah I can show the HTML it's really basic all that's going on in the HTML is I am including the p5 library and p5 is the thing that lets us draw ellipses and change the color and p5 is the thing that lets us basically interact with the canvas in the way that we're doing so all that's going on in the HTML is I'm including the source code for p5 and then I am also including this sketch jas file that I'm writing and like I said before this is like a normal HTML file so I could add whatever I wanted here I could do this is my objectoriented visualization I could put that in a div and then look at that it's very on my HTML so this is like any kind of HTML that you might already be familiar with but we're just really focusing on the JavaScript portion of it and specifically the stuff that we can do in p5 shouldn't we use a round method here yeah that's a good point so Matt thought random gives you a random decimal and then we multiply it by 500 and so that is also a random decimal and eventually what we're gonna be using these numbers in these lists for our to draw ellipses in certain locations and so we might want to round those to a whole number like 400 but this works fine I could have said ellipse at 400 point 5 and that would have you know put it on the screen just the same so yeah we might want to round random numbers but it's not a huge huge deal if we don't good question though okay cool so we have our three lists why don't I use semicolon that is a great question i don't use semicolon because I don't usually program in JavaScript and I am a forgetful person but you should use semicolons because that is proper style in JavaScript so good call yeah Oscar this this video will be posted right away right as it ends so if youif you jumped in late or if you can't catch the end of it stick around and or check our YouTube channel afterwards and this video should be up there okay so what do we do with these random members actually before I even use them let me make sure that these random numbers are working correctly so I'm gonna open up the JavaScript console I usually do that by I use Chrome and so I can come in here and save you developer JavaScript console ooh and that really kind of screwed up my window here fix this so I pull up the JavaScript console if you've never pulled up the JavaScript console before it's a really good way to kind of get a sense of what what variable is your program thinks it's working with the value of those variables it's where you can log things to the constant to see what they look like so I'm going to I'm going to log one of these one of these values only log Y paws list and so let me do that when I run this now you can see in the console this big list of numbers was logged and it has a hundred things in it which is great that's what I wanted and then like we said yeah they're all decimals and it sure looks like it's between zero and five hundred so it looks like we've done that correctly I'm gonna keep the console up here just so we can kind of come back and look at it look at it later if we need to but that's good to know that this is currently working okay cool so now that we have these lists of numbers let's use them to draw a bunch of ellipses so this is going to look really similar to what we have already except for instead of drawing one ellipse we're gonna use another for loop to draw 100 of them so we're going to write another for loop that happens 100 times and I'm gonna put all of this code that's already in here inside that for loop because this is the code that that drew an ellipse that fell and when it reached the bottom it it uh it jumped back to the top couldn't you use modulo so why pause modulo 500 instead of the if stuff yeah that's a that's a great point that's another really good way to do that where if you use modulo so we could do why pause equals why pause modulo 500 that would make sure that why pause is always a value between 0 & 1 100 that's another great way to do that yeah great way to refactor your code okay cool so we have this for loop and now what we want to do is we want to use these lists that we created already so I want to draw an ellipse at X pause list index I and it's its Y position there should be Y paws list at index I again don't worry too much if this indexing isn't really if you haven't seen this before all we're doing is we're looping through the list and for every item in the list we're grabbing that item and drawing and setting that drawing an ellipse at the at that place in the list so for example the first thing in expose list might be this 327 so the first time we go through the for loop its gonna use 327 the next time we go through the for loop it's going to use 357 as as the exposition and so on and so on cool so let's say everywhere that this happens so we're gonna update why pause list by not 5 but by speed list of I we're gonna update we're gonna say if why pause list of I is greater than 500 we are gonna really set why pause list of I and I want that to be why possible list so if we run this right now ooh yeah those are going super fast which Sara pointed out is because we are allowing this speed to be a really huge number so I'm not gonna allow it to be between 0 and 500 I'm gonna allow it to be between 0 and 10 cool any questions so far I didn't I'm very happy to take questions about this i indexing or what's going on in these four loops if you want to talk about it so if you've got any questions go ahead and post them in chat I'm gonna have another list up here I'm gonna add I've been saying lists a lot are they called arrays in JavaScript what are they say are they arrays they are indeed are raised again I'm more of a Python person and Python that they are called lists can you make it go slow and fast at the same time interesting what do you mean by that uh slow and fast at the same time you can definitely make so some of these are moving slower than others and that's because we were using different speeds we were updating the Y position by a different speech time what is push great question push is the thing that it's the function that will add something to an array so I start with these arrays being empty and I do something 100 times right that's what this for loop is doing and the thing that I do 100 times is I push a number into the array and so at the end of this for loop I now have arrays that have 100 things in them slow on one side fast on the opposite end ah interesting yes so you could potentially edit so this this line of code this is this changes the bones position all right this line 25 changes the balls position and right now we are doing that just based on the speed list we could do that based on anything that we want right so we could do it based on expose list of I and this is gonna make it so this is gonna make it to the ones on the far right which have an exposition of 500 at speed five hundred so they're gonna be going really really really fast yeah so they're going so fast that it looks basically like gibberish but the ones further to the left are are a little bit better but you do expose lists divided by twenty that's kind of cool I will keep it like that Matt says I'm seeing one that does not move at all why that's a good question Matt the things that we're putting in this speed list our numbers between zero and ten and so some of those will have a speed of zero and so those won't move at all if we wanted everything to move at least a little bit we could add plus one to all of these and so now our numbers go from one to eleven rather than zero to ten I really like this this edition of slow on the left and fast on the right that's very cool okay so we've reached the point where basically this looks really similar to that final version of my project that I had before which again I will pull that up in case you have not seen it so I just copied the all the code that we've done we make sure that I don't lose it okay great let me pull up the final save point so this is the this is the final version of the code that we want and so we basically have this already I mean we haven't done the size thing really we haven't done the colors but we have a hundred balls that are falling and reappearing when they reach the top and so this is where we can really start to learn about objectoriented programming and so let me bring back the code that we just had okay so the idea behind objectoriented programming is that it'll be really nice if I could kind of define what one of these balls or one of these raindrops is and right now we've done that in three separate locations right we've said the first ball that is dropping is the is the first number the the information about ball is contained in the first number in this Y position list the first number in the x position list and the first number in the speed list the second ball is the second number in each one of these lists right so we kind of have all of these information about each one of these bones separated into three different variables and the idea behind objectoriented programming is that we want to create our own structure that will keep all of this stuff together so rather than having these three lists I can just have a list of raindrops or balls and each one of those balls will know this is my X position this is my Y position this is my speed another quick the the other curriculum developer in the room Sara had this really good metaphor of in life you think about objects as the properties that they contain about themselves right so I've a I have a closet full of shirts and in fact I don't because I live in a small Brooklyn apartment I don't have a closet however ensure the bottom of the code however when I think about the shirts that are in my closet I don't think about three lists of these are their colors and these are whether they're buttoned or not and these are you know whether they're short sleeves or not I think about I've I've one shirt that is plaid and buttondown and you know is blue and white I have one shirt that is red and you know all of these other properties about it when I think about objects in the real world I think about the objects and the properties associated with them I don't think about lists of properties on their own like what we have here maybe that's a maybe that's a bizarre metaphor but I think that I think that it was a good one so what we want to do is we want to write some code that will where all of the data about a single ball will be will be contained and so we do this by writing a class and so the class is kind of the template of if I were to make a raindrop what are the things about the about a raindrop I want it to know about so I'm gonna write this class rain drop if you have any questions about like the overall idea of this please please ask in chat because again this is like more of a conceptual lesson than anything else the syntax doesn't really you know I I want you to be able to program this and code this but I'm more interested in like developing this understanding of what is a class what is an object how can we think about the world in a way that we can write code that makes sense Alice can you post this code somewhere I can read slowly I have an error somewhere in mind which I can't find absolutely in fact let me this was something I was playing around with earlier let me go ahead and save this and use some of my special code Academy access Alice if you want this exact code that I have I think if you press this reset project button right now I think you might be able to get my exact code right now I hope that works it might not I didn't test that before but I think that it should work so you can try it you can try that if not I can make sure to post this code afterwards okay cool so let me write this class raindrop okay and so the first thing that we want to do when making a class is saying when I create a raindrop what things do up what nouns or adjectives about this raindrop do I want it to know about and these are usually called instance variables and those are set in the constructor and so for us a raindrop has an x position it has a Y position and it has a speed and eventually we won't you like color and size and do other things so these are the instance variables right I used I usually think about these as these are the nouns and adjectives about the last that you're making cool and the way that you declare instance variables in JavaScript is you use this this dot syntax I'll talk a little bit about what that why we use this dot but for now we can just say okay these are the three variables that a raindrop knows about and when I create a raindrop when I make a new raindrop refreshing made everything go away oh you are correct that makes a lot of sense let me see is there an easy way to fix that I reset the initial workspace the initial safe point but that doesn't do anything no right because it didn't end until we reset it to the initial save point okay let me I will reset the initial save point yeah let me do that yeah okay Beedie Beedie Beedie i think now if you press that yeah that's actually it's actually a good solution as well Sarah I'm gonna send you this code you put it somewhere yeah cool you have it now great okay so hopefully hopefully that works I'm also getting Sarah to paste this code somewhere accessible okay will the string be saved on the channel yep the streams always go up right go up on the channel as soon as they're done so if you missed the start of it or if you can't stay for the whole thing you can check it out later okay cool so we were making this constructor so we have our three variables that a raindrop and it was about and when we construct a new raindrop we want them to have random values so let me grab it these three things and right we eventually want to do color and size I'm actually going to now get rid of this thing that we were using when we had our three separate lists because we don't want that anymore okay cool so now because I have this class and again the idea behind of class is that it is the template for how do I make a raindrop now that I have this class I can actually make a raindrop I can say I can make this variable named my first raindrop equals I think in JavaScript you use new syntax yeah so I'm saying my first raindrop is a new raindrop great and now let me call some adult log my first raindrop I'm gonna run that again who internal error great I totally botched this by resetting the workspace okay no I didn't might have to refresh if if you get that internal error I don't see the code in TPS I don't I'm not sure if I know what you're talking about if you could be a little bit more Airy if you could explain the error that you're seeing or what's happening okay but for now what I'm doing is I'm making a raindrop and I'm logging it and over here I can see hey look I logged this raindrop and this raindrop has a speed has an x position and it has a Y position and and those things were set when I created the raindrop right when I say new raindrop the constructor gets called and so it sets the position and speed to random values if I wanted the speed to all be the same I could do something like this and now this raindrop that just got created has speed three I don't see the code on the site yeah go ahead and refresh the page or you can click on that link that Sara posted and get some get some of the code from a little bit ago okay cool so we just made our first raindrop let's let's make 100 raindrops so let's now say raindrop list raindrop list is an empty list oh yeah Jim Jonsin that might be a problem your editor might look like this you can click on that middle panel to see it if it looks like that okay cool so right we are making a list of raindrops so again I'm gonna use a forloop to do this so far I equals zero I'm gonna create a hundred of them and now what I'm gonna do in the for loop is I am going to take my raindrop list and I'm going to push into it a new raindrop and now let me log my raindrop list cool there's my list of 100 raindrops and I can open this up and I can look at each one and they all have a random X position in a Y position and a random and not a random speed the speed is three right now let me change that back to somewhere between one and eleven okay awesome so now we've kind of done this idea of before we had these separate lists that each contained a different aspect of a raindrop right a different element a different adjective or noun about that raindrop they used to be separate and now what we've done is we've combined them into this one object called a raindrop which is really great like our code is a lot more organized now and as we start develop develop bigger projects it'll be a lot easier to keep track of this is a raindrop and it has a x position okay cool so now what we want to do is we want to be able to display them so the other thing that classes have is classes can have specific methods associated associated with them and I always describe these as like new verbs of your object right so right now we have a rain drop and the rain drop has adjectives and nouns and those are our instance variables those are its position its speed its color you know all of the adjectives and nouns descriptive things about this rain drop and now we want to do thing now we want to write code that is about what can this rain drop and do right it's a verb and one thing that a rain drop can do is display itself right we want a rain drop to show up over here in our on our canvas so I'm gonna write this display function and what the display function does is really similar to what we had before is display draws on ellipse at this dot X position so the raindrops exposition it draws it's what at its Y position and for now let's draw it at ten by ten so I just added some functionality to our class right and these are these are called methods and again think of it as a verb that this thing could use and so now I can use that right I have my list of 100 raindrops and now down here instead of calling ellipse and instead of changing all instead of adding all the functionality down here I can say raindrop list of I so every single raindrop I want them to display so before I want before I run this do you think that the raindrops will be moving and why or why not we have someone new welcome yeah so if you're if you're brand new to this this is a lesson that we're going there's a lot of different programming topics in here like for loops and arrays and a lot of kind of syntax that might look really scary and I want to assure you that the idea behind this is not of this specific live stream it's not to really teach those for loops and arrays and stuff it's about this concept of objectoriented programming and organizing your code in this way where we're making a raindrop that has things about itself and that that can do things I repeat the question do you think that the raindrops will a show up on the screen and be move and see I guess if they move do you think that they will jump it back up to the top of the screen when they reach the bottom how do you get rid of the internal error that I got earlier i refresh my page which I hope will not completely destroy your code and what won't move because you haven't added movement to class that's exactly right right the only thing that the class knows how to do is this display function and the only thing that happens in the display function is drawing an ellipse so if I run this code I got an error let's see what it is I think I got an error let me clear my console run the code again let's see I've not made the call to do that yet yeah Madame's and that is correct where is okay I have a syntax error or somewhere have an unexpected token so I've missed a missed a curly brace or something and some line 36 I'm guessing I screwed up my brackets here yeah I did nice ellipse is this a JavaScript function or a p5 function that's a p5 function all right and actually if you want to look at more p5 functions first of all there are a ton of really awesome resources to learn about p5 I think it's the best tool for beginning programming because it's super fun it's very visual you should look up dan shiffman's youtube series he does he has this youtube series called the code the coding train it is really really awesome Sarah also just posted all of the p5 there are some p5 resources in the chat ok cool so I ran my code after fixing that little bug about having an extra curly bracket and there are all of my dots so they're not moving so let's write another function of a raindrop class called move or we could call it fall right again it's a verb that a raindrop can do a raindrop can move or can fall or it can do whatever and at this time I think I will use it was I forget who suggested the the other implementation of making it jump back up to the top I think maybe Beedie Beedie Beedie but I won't say a raindrop moves by increasing its Y position by its speed and again we're in this class so don't forget to use this dot this dot means I want this raindrops Y position to move by this raindrop speed not some other raindrop that exists in the world I want my raindrop its Y position due to move by my speed mi shiffman's younger brother I am NOT but we wear similar clothing okay cool so let's let's call this B let's let's run this before doing the thing where it gets set back up to the top so every raindrop is going to display itself and then every raindrop is also then going to move and they are all gonna zoom off the screen and never up here again um I found this page really helpful to JavaScript audience oh I don't know what that is I hope it's not spam okay cool so all of our all of our raindrops are falling let's write the little bit of logic that will get them to reappear at the top the nice little suggestion is that we could use modulo to do this so we can say this dot y pause modulo equals actually equals this dot y pause modulo 500 nice and so there they all are they're all following they're all reappearing back at the top let's add some color and also size and again let me if you have questions about these functions go ahead and go ahead and ask them now and let's also get back to that point where the ones on the right were following faster than the ones on the left that was we did that by saying don't increase it by its speed increase it by its exposition which will make the ones on the right go really really fast so exposition divided by let's say 50 that's cool I like that quite a bit should probably be mod 500 plus a lip size yeah so there's like a little bit of weirdness with how big the ellipse is right now everything is happening from the center of the ellipse which I think that that is that's fine sorting list by speed could also work that would also be a great idea that would so sorting the list by speed would yeah that would make more sense right this is kind of a weird line of code where we're modifying the Y position based on its x position but you know it's kind of a demonstration if you can use these for anything yeah now you made snowflakes yeah that's a that's a good point we can also say you can also change how these things are drawn right right now they're just ellipses we can like throw a rectangle on top of them right you can do a ton of stuff to it make these appear differently please repeat the purpose of the raindrop class yeah that's an awesome question that's really kind of like the whole point of this exercise is that we've made this class where all of our information about a single raindrop is contained in one place and so there are really two big big things that a class or a big piece of pieces of information that a class has it has all of the nouns and adjectives associated with that thing and those are our instance variables and so right now that's that's a raindrops x position its Y position and its and we're about to do this dot size we're about to do size right that's an adjective associated with a raindrop and so those are all in the same kind of data structure in the same place the other thing that a class can do is you can add functionality to it so these are the verbs what can a raindrop do it can show itself on the screen that's display and it can move right or it can fall or you know we could have named this whatever we wanted you can think about other things that raindrops do maybe you want like a splatter function and when it gets to the bottom it like you know turns into something else once we're done with this exercise we'll talk a little bit about conceptually other classes that we could make so let me quickly add size so I'm gonna make the size a random number between let's say 1 and 30 and so weird why you sighs I use size in the verb to display right in the function display so instead of being 10 by 10 I'm gonna use this dot size so now if you should all have different sizes that's that's pretty cool and then finally let's add some color I haven't really talked about how to do color yet in p5 so this will I'll go through this kind of quickly Alice I see your question I will answer in a second let me do color and there's actually going to be three different instance variables or adjectives about this it's gonna be how much red does this raindrop have it's gonna be how much green does this raindrop have and how much blue does this raindrop have and these are going to be numbers between 1 & 2 or 0 and 255 and if you know anything about like RGB values or hex codes or anything this might look a little bit familiar to you if not don't worry about this too much this is basically how you do color in p5 which is a really cool topic and you could go you know you could you could learn a lot about this but for now all we're gonna do is we're gonna say before we draw the ellipse we're going to fill it with its red value it's green value and it's blue value and there we go each ellipse has its own red green and blue values and those three values are used together to color in the ellipse and you can imagine if this wasn't object oriented we would have needed these big lists for like red lists right we would have needed something like this green list right we would have needed all of these giant lists and instead what we do because we are you're making this a class we're saying one single raindrop has a red value it has a green value it has a blue value and then those are used within the raindrops and then we happen to make 100 raindrops can you change attributes from where you call the class ie new raindrop x yeah so that's that's a great question we can say if we want to always make the raindrops appear at the exposition 250 we could say the constructor takes some input x value and rather than the exposition being this random number we're gonna make it B input X value and now these raindrops should all be right in the middle of the screen so that's a that's a really good question Jim about adding parameters to this constructor and you can certainly do that we just happened because we want this to be like random and fun and them all over the place we're just making everything random which me that we don't really need to pass any Constructors in here the parameters appear in order then yes exactly so so they appear however you however you define them in here so if I if I pass in a 250 250 and then a 100 and then I have two parameters up here of per am one and per am two parameter one will be 250 parameter two will be 100 and then I can use them however I want in the constructor so I could set the speed equal to per m2 or I could set the blue equal to per am one so these will all now be moving at the same speed and they'll all have the same blue value okay cool if you have any other questions about this specific project go ahead and ask them to finish this up I wanted to kind of like talk about this idea behind objectoriented programming in general and I think a good way to do that is to think about pieces of software that you've seen before or that you've used before that have objects and thinking about what the nouns and verbs associate nouns and adjectives associated those objects are so what would those those instance variables speed and then what can those objects do meaning what functions do they have and the one that I it that I've used in the past is is let's pull up an image of a Mario game alright so I think like a useful exercise now now that we kind of have this idea of objects and classes are used to store data all in the same place is let's think about what are some what would the instance variables of Mario be and go ahead and think about that in the chat right what are the nouns and adjectives associated with Mario and there'll be some similar ones the ones that we coded today for these raindrops and they'll probably be some different ones so go ahead and in chat give me some instance variables for Mario or really for any of these things or if there is a different object that you're thinking of let's try to think about how we would create some of these objects if we were to if we were going to try to start writing Mario any ideas what are nouns and adjectives associated with Mario or if you want to do the second part of a class what are these functions or methods that Mario can do like what what are the verbs that he has access to wait a little bit to see if anyone in chat has any any ideas about if we were to write a Mario class what would what would our instance variables be and what would our functions be her methods be I've never played Mario what does he do Mario walks around he can jump he you know yeah we also don't have to do Mario right we can think about actually another good idea is I mean it practically like we can think about objects in the real world as classes and objects and so maybe think about it you know a deck of cards or some dice what what could those what properties are associated with a single die or several dice cats yeah Mario that's it that's a good one right cats there are lots of variables associated with there are lots of like nouns and adjectives associate with cats so those are the instance variables and lots of verbs things that cats can do whom yeah a fireball variable right so going back to the Mario example and we can make this brief because some people have not played Mario right Mario has an x position he has a Y position he has am I am I in fireball mode right can I throw fireballs he has am i dead or not he has have I jumped already right because he can only jump once before touching the ground again all of these variables are things about Mario and then he has things that he can do he can jump and so when he jumps maybe that variable associated with have I jumped already before touching the ground maybe that flips to false you'd have to again right movement right more functions that more methods that mario has he can walk right he can run right he can walk left he can run left he can crouch he can do all sorts of things right so those would be if we were to make a Mario class those would be the functions and all of the nouns and adjectives the things about Mario would be the instance variables and then in theory you can make 100 Mario's right and each one will have this one this one's position is this this one has fire flower mode this one is running left this one is running right right you can make a hundred different copies of this one object that all have their own information about them the dice example which I will do very briefly a die has a certain number of sides so I could if I were to write a die class or dice class I might have a constructor that has this dot sides right most uh most dice arse excited but some are not dice have this dot face up right that's an important thing what's the current top side of the die maybe it starts at one by default and then I think that thing dice can do is I can roll my own dice right and that would probably change the this dot face up variable if I'm doing something in like p5 I would probably want the dice to be able to display itself right which would this would like draw a rectangle and a certain number of circles based on this dot face up meaning if the current thing that's face up is a six I would want to draw a rectangle with six dots on it if it's a three yard line draw a rectangle with three dots on it yeah Jim great question of out what does this dot mean is it like var or what and actually Sarah here's a question for you should these instance variables should I do wet this thought exposition or is that not proper syntax so I don't think you need to do when you're when you're making these instance variables and again this is specific to JavaScript the the syntax is going to be different depending on the language that you're using you might have to say it let but this idea of this dot is present in pretty much any language that is using objectoriented programming and what this dot means is that you are defining the the variable for every raindrop right so each one of these raindrops has an exposition and a y position and a speed and when I call when I use these instance variables in functions like display or move the instance variable that I want to use is this raindrops position or this raindrop speed I don't want to use any of the other raindrops that might exist in the world I want to use this single one yeah that's that's a really great question Jim and I hope I explained it well let's see what's my favorite IDE I use my text editor is Adam I think it's okay I don't have strong feelings about it anyway because I don't exit it it's very true okay cool I think that we have reached the end of this live stream whenever why would you want to create your own library for classes instead of using an existing one that's a complicated question and really depends on what that existing library does Yeah right it's entirely possible that you are trying to do something that has never been made that's like what is super empowering about coding is that if it doesn't exist then you can just kind of make it yourself and and it can be a thing that exists in the world and other people can use it and it's a great collaborative process instead of p5 for example interesting so like when would you want to make your own yeah I think I think one answer is if you're not satisfied with the functionality of p5 right if you find p5 really frustrating in certain ways and you're like hey I think I have a better way of drawing shapes to the screen or a more intuitive way then you can you can start to get your hands dirty writing your own library yeah more control maybe yeah and I mean just depends on what you want to do with it right there are lots of different it's kind of the same thing with programming languages in general right where I like Python because the things that I do with Python are usually like data science e related and python has a bunch of libraries that I know well and that I find less cumbersome or less burdensome to use and so I could do all of this data science stuff in JavaScript and there are lots of cool libraries that would let you do that but for the stuff that I am working with I like the Python things okay so this is what I want you to do if you made it to the end of this video thank you very much I am shoot I did not make a feedback form okay I will post a feedback form in the description of this YouTube video in like 10 minutes I understand that that is probably an impossible task for someone to come back to a YouTube page ten minutes after a live stream has ended but if you watch this I would have very much appreciate you to fill out a feedback form yeah Sarah if you could put the code on repla train yeah let me why don't you just do the final the final save point yeah yeah so one I will post a feedback form on the YouTube description it would be great if you could fill that out too I would love to see you take this idea of falling raindrops and experiment with it on your own like this idea of having the ones on the Left moving slowly and the ones on the right movement quickly is awesome and it makes a really cool result I would love to see you guys or you all experiment with this on your own and if you do something send it to us I tweet at code Kadim a comment in the youtube section and in fact what I will do is if you send some stuff in and they're really cool I will put screenshots of your projects and give you credit in the objective over here and that goes for people who are watching this well after the fact too so people who are not watching this live if you make it all the way to the end I'd love to see what you what you do okay post the feedback form in chat instead yes I can you know what I will because I'm about to shut down the live stream and make this feedback for them anyways I might as well just do that in a separate window and keep the chat open so you guys can ask questions so I could be making a feedback form over here feedback form in slack maybe yes I will post the feedback form but the issue is that the feedback form is not it currently exists when can I start applying to jobs so we actually had a live stream about about job interviews and whiteboarding and things like that you can find that on our youtube page there's so ways to find it on coke atom e itself I don't know if I would be able to quickly again I'm just gonna make this form right now so if you want to if you want to leave there is gonna be pretty much no more no more coding that is happening but I'm happy to answer questions as I make this thing how can I know that I'm ready for applying that is a really great question how can I know that I'm ready for applying for jobs I think it helps to kind of practice these interview questions yeah it really depends I can't scroll to the bottom of my code yeah I think having a little bit of a portfolio might help like if you have two or three projects that you can show off that might really help okay cool I have this form ready let me let me get post it in the chat um is too expensive that is very true okay so there's the feedback form I will also post it in the description of the YouTube video if you want to if you want to fill it out later cool okay I think I'm going to stop this dream we're gonna continue streaming every Thursday at 130 so if you don't get an email or if you don't see a notification on code Khadem e or if you don't see a tweet or any of these ways that you might have found the stream hopefully you can just find it through youtube this has been super fun I hope you liked this project I hope you have a better understanding of what objectoriented programming is and why you might want to use it and we'll see you next time thanks everyone