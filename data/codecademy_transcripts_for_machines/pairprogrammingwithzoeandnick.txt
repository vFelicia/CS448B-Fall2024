alright hey everyone I'm Zoey I'm Nick and we are the cocreators of the learn how to code course that's new on coach Adam II this week so for this livestream we're doing something that's a little bit different we are going to be pair programming one of the interactions that we built in the course so rather than go through a project that's associated with it we're giving you more of a behindthescenes look into how we made something for the course Nick you want to talk a little bit about the project yes so first of all looks like let me know if you can't hear us okay you can't see us okay and we can work on that anytime but back to what we're talking about right okay in the variables module and lesson have an echo audios affected okay yeah okay we're gonna keep going we're gonna have a lie so itself we have the variables lesson which essentially teaches the concept of variables which are used throughout program the whole learn how to code track the whole course is about these fundamental programming concepts and variables is one of them but we're not teaching this with any programming language we're doing it agnostic of any programming language which is why we're building these cool interactive applets which was super fun to make exactly and we're gonna build one of those right now we're gonna show you how we've built one of those so this particular one was built with HTML CSS and a JavaScript library called jQuery some of the other ones were built with another library called p5 but we do have a jquery course here on code cad amis so we thought would be good to show you this one do you want to demo how the project works first yeah okay so I'm gonna go over here and go full screen so terrain one I'm just gonna I'm just gonna show you alright never yeah I'm gonna type rocks in here alright then we type grass here and then finally forests awesome so essentially we're teaching the idea of variables through constructing kind of like a game board if you've ever played sub layers of Catan that was kind of the inspiration for this and so the idea is that after we've made learners in the previous exercise write out each name for each kind of terrain they want on each square they realize it's pretty tedious there's a lot of repetition so in the next exercise we show them okay you could save it to a variable and then it will put up that pattern to whichever one you've designated as train one train two and you have a couple of different options there so after that let me show it with some other patterns and then you actually get to code some variables yourself cool that's a pretty good explanation yeah so we're going to jump into the a little bit of explanation of the code that's already there in the project itself after that Nick is going to walk through programming the JavaScript file and I'm gonna be here on hand to help out of course at any point you can ask questions in the chat we're gonna take some breaks throughout but if you have like a really important question we'll be keeping our eyes on that we also have Alex the man behind the screen to help us out in case we miss anything as we go along and I think like Alex said in if you're looking on the YouTube channel you can get to the link in the description if you're on code Academy you can get to the link it's just the video right there you can that's what you see on screen over there yeah we do suggest though if you are coding it in this project space right here you can see that there's a link to the video however if you played the video while you're in the project space it's gonna be a little delayed so you recommend actually opening up the link in YouTube and listening to it there and coding along in this you're also welcome to code this along in your own text editor if you have one we're going to be doing it here in the project space so that will all be on the same page as everyone using it you know what what I think we should introduce a little bit more okay sure Zoey what else have you done code Khadem II uh I've done a lot of different things of code cadmium so I've been a curriculum developer here for about a year and a half I came here after finishing graduate school at NYU's ITP program and so since coming here I've worked on a CSS grid course I've worked on some data science content including our data visualization with Python courses I started the code foundations track and have basically been leading that for eight months now so yeah I have a real investment in making learning how to program really accessible to new people and so getting to do a lot of code foundation's content that's more about why is programming important how to get started with programming especially our learn or new learn how to code stuff is really in line with kind of my mission of being here at code Academy I've been here for I guess like a year and a half you start a little bit before me I have worked on I also audited to see a CSS grid thing I did a little bit of learn Alexa and didn't learn secret from scratch I worked on that with sunny if you've seen him before on live streams yeah he's a sequel King and what else we done I've done some JavaScript stuff I've been kind of all over the place until this past few months where we've been working together doing coding fetish and stuff working on this yep yeah awesome and it's another quick plug for this course even if you are familiar with programming and concepts like variables and functions or like you know something that you're pretty familiar with the way that we teach them is pretty new to how we teach on code Academy which is a really fun experience for myself and Nick for me personally getting to pull into some my experience with interaction design getting to try out new ways of you know working with the Ellie so give them a try give us some feedback so we know if you like them and what we can do to improve our teaching in the future mmhmm Tim you write TDD was very important okay all right okay so let's walk through like what we're gonna start with so you know where we're at and if you're just beginning that's okay if you have a basic understanding of HTML CSS and JavaScript even better that's kind of what we assume starting this but we're gonna walk you through each step so let's do it let's do it all right so first we're gonna start off by explaining the files that are already there in the project itself so we have a alright we're gonna wait we're going to show you the none JavaScript version first but what we do have is we have this index.html file and we have a couple of different things going on but for those who are new to coding or want a little bit of refresher the index.html file is where we have our HTML code which is how we structure the layout of our page so that's where we're deciding what kind of content is going to go in there and then we have another file which is our style CSS file mine opening that really quickly and that is how we are going to style everything that's where we get our nice layout our colors our fonts so they're really kind of like two important things that I want to draw your attention to that are going to be important for our JavaScript file later and just also kind of give you a little more context on how this was built so as we mentioned this is a game board and you can see that there is this grid structure right back here this grid of squares and that they change every time we use our inputs a certain name so the way that we achieve that is through using CSS grid so what as actually happening here is that we have two grids with two nested grids one is just two columns and then the game board itself is three rows and three columns I'm not going to get into the specifics of CSS great but if you are interested we do have a CSS course as you mentioned we both kind of work it so that's why we're using it right here so now they're familiar with what we're starting with let's see what that looks like so I showed we showed you the final product and now I reset the project and I can show you what happens when I do this okay delete the workspace yeah do that again reload that and then so one important thing to mention is that so as you saw when you have the correct version running if Nick were to type in rocks and train one all the terrain one squares would change trucks now it doesn't work like that so how are we going to achieve that well one thing we want to look at is how we're creating these rectangles in the game board so if we scroll into our HTML awesome thanks for making that big we can see that we have a giant Dave called game board and then within that we have nine other divs and in here we're saying that okay all of them are going to be called rectangle and that is a class so that's important because we are going to have to use that class once we get to the JavaScript part itself so remember that rectangle class I'm trying to think of anything else let's actually look at how we're currently staying styling the rectangle class in style dot CSS I think the one thing the other thing is that the name do we want to talk about that oh yeah thanks remind me about that cool so another thing to pay attention to is the name attribute in this input tag right over here so the input tag relates to those squares we're actually getting the user input so what's important about this is that we're distinguishing those inputs from each other by giving them this name and setting it to one value to value and three value um cool anything else before we ready for stuff yeah okay click on stuff alright so we've got a bunch of stuff we're gonna kind of ignore it again it's mostly like making things look pretty but a couple things I do want to point out mention the grid layout you can see that we're setting that grid display here in the certain column widths there so again if you're interested in CSS grade pay attention to that later but what I really want to get down to is this part here so we have this selector dot rectangle so in CSS if it you're calling a class you want to put a period before it and then the class name and then in this declaration block right here we're gonna ignore this stuff here it's just to make again everything look nice but we do have this background image property and then everything that follows it is just what's the value of that so right now it's just a really pretty black gradient that's it but that's gonna change again as soon as we put in our JavaScript correct cool okay so let's do that let's put in the JavaScript let's put in the JavaScript all right right now the index.html file and the Styles the CSS you can see that on the screen on the right here but it has no JavaScript so it's not interactive which is why when I click rocks what I type rocks nothing happens so we need to tell the browser that we need some more files we need two things we need the JavaScript the what we're gonna type and then also a library called jQuery so jQuery is a library in JavaScript that just gives us a bunch of helper functions that makes it a lot easier to do what we're about to do yeah you could do this with regular JavaScript we're not going to show that here but it is possible we're gonna use jQuery because it's just less sin taxes less code you have to write and there is a downside of using the like a separate library mmhmm but it doesn't take that long to load and it's a lot easier to get up and running yeah which is why we like it yeah and one of the reasons that we ended up using it in this example is that jQuery is really easy to prototype in so what Nick said before you could do this entire thing in vanilla JavaScript it ends up being a lot of code and if you want to spin up something really quickly just to see how a user is going to interact jQuery is a really great option for it again another plug we've got a great series of jquery courses on code academy so if you want to dive into this more we recommend you look at that okay so first thing jQuery I'm gonna go back over here so you all have this link in the project on code Academy you can find a link to jQuery right yeah code jquery.com this is where we find the jQuery library and just to demystify this if I want to look at what like what is jQuery I can open up the file that is jQuery and then see a bunch of JavaScript code it's just a bunch of functions that make it easier to do what we ought to do we're not going to use that one because we don't need to well we're not gonna use that we're gonna use the minified version and why do we want to use the minified version the minified version has no line breaks no spaces so it works the same it's just less web takes up less in memory uhhuh which makes performance better and you can see that that's really ugly but it works in we don't need to read it we're just gonna use it so that's fine there we go okay which means I click this and this is the tag the element they were gonna want to use so I'm just gonna copy this from here go back to the project and right where it says load jQuery within the head element I'm gonna paste that okay so now jQuery is in our application so I'm gonna save this and reload this so now I haven't added any new like features to this website but I can now use jQuery and let's show you how that works so what I just did is I clicked on the website the little website on the right side and go to inspect I think it's different for different browsers but it should be a pretty similar to rightclick on that space okay and I go to the console and I can type in any JavaScript here jQuery you can access with the dollar sign and then I can put in whatever selector I want yeah so again one of the reasons that you'd use jQuery is that it enables you to quickly access and modify different elements in HTML that's why we're using it here so in this case we want to grab whatever value the user inputs into that little input box and then use that to modify the CSS in our squares yes so I'll give you example of like accessing something we can get input mmhmm and that gives us three things I can let me make this bigger okay so I just did dollar sign parentheses input and input refers to these these forms on the side here where we type code so you can see that's what we're selecting input 1 input 2 input 3 okay and then I can also set the value so now we've accessed it we can modify it now and I can put Zoey's name in here and there it is all of them have Zoe yeah okay everything says curriculum developers have you go okay so we have the jQuery now we need to write our own code it's gonna be in a separate file called script is then why do we want it in a separate file that makes it easier to maintain mmhmm and personally I like it because it's just how I think of the code is separate items and if I know there's an issue with the elements on the screen I know it's HTML if I know there's an issue with the JavaScript with the interactions that I know it's the JavaScript so it's just kind of separation of concerns cool okay I'm gonna go to the bottom in an X in index.html go to the bottom and load the script here I'll tell you why in a second all we do all we do is use this script tag and the source which is the name of the file sweep Tijs okay and then i close that okay so now whenever this reloads I'll talk to you right now mmhmm I'll save and reload now we can write code and script that J s and the browser knows about it we stop there for four questions yeah yeah anything we should be paying attention to looks good people were able to find the jQuery CDN okay okay let's keep going yeah yeah do you ever is that the way of importing libraries nsj just check a URL in the ATM HTML you make it sound like super ear like like we have no diss no regards throwing them in there um there are other ways to import it you can actually download the file itself and include it with the rest of your files so if you were to upload it you know onto your server where you're hosting your website you could bring the library with you yeah so like to back up a little bit mmhmm imagine that we're developers making these files on our own server and when anyone visits our website which in this case you can see is localhost 8001 ever that means you the browser gets those files and we could just download the whole jQuery library put it in our server and it would work as well but jQuery is available online through things called CDN which we don't need to get into now but basically it's a network that makes jQuery available for any web page to use and that's why we're doing this up here source HTTP code jquery.com and why we're naming this one down here script is because that's local that's just on our server yeah it's another question and someone kind of answered it in there about why we're not using es6 so yeah just to reiterate you can do all of this in vanilla JavaScript especially with es6 but for the purposes of this again rapid prototyping quickly typing jQuery is really helpful and we think it's like a nice way of like for beginners to start making interactive things so the other thing that Jake where is nice border is browser compatibility yes thank you first yeah so like browsers do a little bit different things with JavaScript like Safari versus opera versus Internet Explorer versus Chrome but jQuery takes care of all that so when you use a function like Val it takes care of all that those all of those issues for you whereas in JavaScript you'd have to do like separate things for each browser type yep okay versus Firefox fine okay so let's build a file let's do it the first thing that we need to do is check for a user typing something like essentially when I type rocks in here we need to know when that happens and then capture that word rocks and browsers have a nice thing called events so whenever a user does anything interesting on the screen mmhmm in a browser there's an event fire the browser basically announces hey you just clicked the user just clicked or the user just typed it's for example if I click here click then I'd event is fire that's called the mouse click event whatever that is and for this one there's also with like text there's also key press key up key down we're gonna use key yeah key press would work I think in this case but it's not it just done it yes so interestingly I tried this out to distinguish between key down key press and Kia and it will register the wolf or key down it will get the press first without getting the character itself same thing with key press right so you will not we get that string that we will eventually need right so we can rest you know explore that Li yeah we want to so to break that down what we're talking about is imagine that like this is the key like I am a keyboard this is the key when I press down ice the browser says key down event and when I let go the browser says key up event so we care about that key up event because that's when we know that something's been typed yeah okay so let's get started all right um do we want to talk about setting up a file on jQuery yes okay let's talk about that let's talk about that every time this loads this this page we want to access some of the elements on the page but we want to make sure that all of those are loaded before we start like accessing them changing them so jQuery conveniently gives us this thing called document dot ready I know let me type this out whoa you okay document dot ready is just a function but it says whatever you pass in to the ready whatever arguments you pass into ready jQuery will execute when the documents ready to be saved to make sure that all the HTML is loaded we're gonna put all of our code in here yep so we're gonna be like doubly safe because if you remember when Nick added the JavaScript file to the HTML we put it at the end right before the closing body tag so both of these techniques equally ensure that everything will be loaded in the HTML before we go into the JavaScript mmhmm okay so document out ready expects a function mmhmm so to find a function this is just an anonymous function here and whatever we need to do will do in there all right so let me just show you just to clarify even more what we're doing let me see here yeah I'm gonna select the input boxes and then log that so you can just see exactly what's happening so I define a very define a variable called in input boxes and it's gonna be a selection of anything that is an input element with the class box so Nick why did you put that dollar sign before input boxes I haven't seen that in a variable before I could have done just the input boxes but I want to remember make sure that I remember later on that that variable refers to a jQuery selection rather than just some other variable in my JavaScript so that allows me to differentiate it cool and what does that dollar sign mean in jQuery specifically that is how do I describe it jQuery essentially you can access it with the word jQuery or the dollar sign it's just a shorthand which means that the dollar sign gives you access to all the functions all the methods in jQuery okay so let's console log in clip boxes because I just want to make sure that I'm doing everything right save this that reloads and let's inspect console okay we can ignore the number five thing up here the point is we logged something to the console which is this which again is the input one two and three and you can see right there that's what we were looking for okay because that's where our event is gonna happen yep all right so we've selected that now I want to define an event handler like I want to write a function that does something when the KeyUp event happens and we have access to that again with jQuery input boxes dot Kea okay so input boxes is a jQuery selection I remember that because I put the dollar sign and a jQuery selection has access to all of the jQuery methods yep which is why I can use key up here and kia expects just a function that says what are you gonna do when the key event happens on any of these input boxes okay function event okay so now I'm gonna find a function with the parameter event this is just normal it's normally how you write it because that function is always gonna receive an event what I mean you what I mean you'll see you later okay now let's capture whatever is in that event mmhmm so you know what just to show you um the event I'm gonna show only thing all right that's pretty cool this and I'm gonna delete this and okay so now I'm back in my console nothing happened nothing console.log because the key event didn't happen going here press K an event is logged and there's all kinds of information in there all we really care about is two things target so like the event this thing has a property called target which is this input box so we know whenever we get this event we know where this is happening is there anything else yeah we want to know where I typed K so where's Kay I go down here to you know what I know wearing it yeah let me make sure there we go okay that's the other property okay event target event dot value cool which means I can start storing this stuff mmhmm my target my event is some element let's let me check one thing here mmhmm I'm gonna call this the input name this just refers to what we're clicking or typing what we're tight what we're typing so whatever input the user is giving us okay wait so that means actually I only named this value okay so in bed here right is whatever they typed example and the previous sample that was okay I also want to know where this happens so input name equals a bed target okay so now input value and I press example should be K input name should be the input box okay so now I've captured that let me take a break there to check if everyone's following along here okay all right I think Kenny's got that one all right get confident Alex did you see anything we should address yeah so like Nick mentioned before the dollar sign is a I guess like a similar representation of jQuery which kind of sounds a little abstract but basically when you're writing a JavaScript document you need to let it know that you're using the jQuery library and so we do that partially by including the library in the HTML and then it's expecting us to talk to it in a certain way and so it recognizes the dollar sign is a symbol like oh hey like you know you're talking to me this jQuery library right now and specifically it's expecting a certain syntax that has the dollar sign than a parenthesis with an object inside of it whether it's the document or it's an object that we're selecting through syntax like with our input box there it's looking for the input element in HTML with a class box I'm gonna make some comments so we don't forget just like as we answer questions they don't just be writing here so I'm gonna say select input boxes mmhmm and use dollar sign to remind me that it is jQuery selection so again like any case with naming variables you can name variables however you want it's just good to follow certain conventions conventions and good practices so specifically if you're writing jQuery code we put a dollar sign before our variable name again to remind us that it's a specifically jQuery selector all right so so far we have document already we've collected we've selected the input boxes and we have done something with the key of event whenever key up happens something happens now we're gonna do something with that input all right essentially what we want to do is see if it's rocks forests or grass yeah that's like a whole nother thing and it's gonna be a lot more organized if it's a whole another issue just to put it in a separate function yeah that sounds good to me okay let's call it check the input check the input and give it these two piece of information look value excuse me and what I'm hoping that this check the input does is checks if it's grass if input value this grass rocks or forests if it is then put the the tile there like the tile in the matching terrain exactly which is why we need that input name argue mmhmm and just to quickly clarify we're gonna actually write out the function in just a moment but Nick is putting he's calling his function first in this current function that we have right here just so we know how the stuff that we're grabbing within this function is going to relate to that logic that Nick just explained yes okay so here is the function check the input all right and this is gonna be a terrain string uhhuh and let's just do it all out okay terrain string and then the name is gonna be the name that we're gonna pass in right so this is the like touring name and again I just like to make sure that we're doing everything that everything still is working fine you ever broken anything okay so based on what we have here on the key up event we call check input which is to find out here what what is gonna happen when I reload this page in terms of the console let me refine that I'm gonna run I'm gonna save this and I'm going to go here and I do something like press R in the console that we've been checking what should we see see if anybody yeah and you're welcome to respond in the chat oh yeah I'm checking this we're looking at the check yeah I want you to just yell at me and I hope I can hear there might be a little bit of delay so we'll give people a second to think about it are so John Moore says we get an R in the console key up event from tertiary adjunct an input value equals R all right another answer from John Moore okay changing your answer thread out all the answers so Nick is also putting another good practice into play which is checking your code as you go along oftentimes we you know have this idea about like what our logic is gonna be so we just start coding coding coding and I get to the end and then we realize oh there's a bug so what's you know good about what NICs doing right now is that he's you know created one function you started creating another function he's taking a pause and being like okay let me make sure before I write out the rest of this function I have everything in place before I implement the rest of my logic mmhmm so as we getting some more answers in just want to clarify when I'm at what I'm asking is I press R was a key event and something happens in the code and something is going to be logged to the console and I'm asking what that is so far we've gotten like R maybe it's key up event maybe its input value equals R fancy okay so then what we're gonna I'm gonna show you all right I've done a lot of times so let's reload okay I'm gonna go over here I'm gonna do it again press R let go missus logged we get this input class input element which is here okay and we also get this undefined which I was not expecting someone in the chat may have also come across the same so let's let's see what we're doing here close this in the event we select the event R value and the event target and we send those we call check the input with that yes okay check the input we call terrain string terrain name and we're logging that so for some reason terrain string is undefined and terrain name is like the hole that hold the hole target the hole right input let's start with the easy one and so vente target is is right it's the input its where the event happened for what our purpose is we actually just want the name attribute of that we'll get to why what that is in a little bit but I'm gonna do that right now so instead of just doing the target I'm just gonna say name and just as a quick refresher you can find the name attribute in the HTML file attached to that specific input each input has it name attribute okay so I save this let's try one more time go over here are yeah one value which is the name awesome as expected but undefined it's still weird and I could go through and show you where all this is but I happen just happened to know that its target dot value instead of value and it looks like Michael Montgomery also figured this out as well only works with event target dot value that was my that was yes I wasn't gonna say that there's gonna teach us the rest of the okay Thank You gurgly let's see it works yeah there we go keep doing this cool um so in addition to typing Google D Guk like Nick was just doing could also type one of those special keywords that we are looking for like rocks and so now that we know that we can grab rocks which is one of the strings we are looking for and we can grab the name of that specific input box we can start putting together some logic for attaching our user input to our rectangle backgrounds okay so now I need to I can get rid of this well I'm only though okay so first thing I want to do is check if what I typed mmhmm is grass or is rocks yeah let's do a class guys and eventually we're gonna be checking in grass or rocks or forests mmhmm which sounds like a conditional statement yeah if this string is grass or else if it's rocks sounds like additional to me so I'm gonna I'm gonna use that with ifstatement JavaScript what's the condition I want here mmhmm if what I type is grass then I expect that terrain string because that's what they're typing should be grass all right and again for those newbies when Nick just typed out is an expression where he's checking if the terrain string again what we're grabbing is that input value from the user is equal to grass and so you know you may have seen an equals sign before this is a triple equal sign so we are checking if it has the same string as grass but we're also making sure it's a grass it's a Christ it's a Chris it's grass if it's a string datatype strictly equals okay so terrain string equals grass I know that a equals grass in this hypothetical situation that means that I want to put in terrain one in all these terrain ones the grass the grass image like we saw in the beginning or any of them just any time a user inputs grass it could be in terrain wandering to terrain three it will know that in the corresponding blocks over there that it should fill it with grass so I need to select the since I'm gonna be modifying the terrain one I need to select those as you as you may recall I'm gonna go back to the index.html we define things with these classes for the gameboard like one value to value one value but we also use that as the name for those inputs which is how we can like check this so whoever wrote this code was thinking ahead which means that we can use the name to find the class okay so what that means is I want to check I want to grab so I'm going to use jQuery whatever the input whatever terrain rectangle right it's like some kind of dot rectangle I'm gonna go back here cuz I'm getting lost okay so I'm gonna select everything with a class rectangle mmhmm that also has this one value yeah or whatever the name is I was gonna say because we want to make we don't want it to be just one value because then we could only attach grass to the ones with one value right so how do we make it more general we could use terrain name mm right we have that terrain name very right that's associated with the specific input like last time it was one value when I typed in the first box yep so I'm just gonna add it I'm gonna add it okay I'm just gonna select that okay let's see let's see if that works I wanna console.log this we ask again what do we expect to be console.log here what I'm gonna do is I'm going to go to the web page type our in the first input box and then I'm going to check the console what do we all think it's going to show up in the console look if I did all right what would happen nothing hmm like that response well response so we we won't reach the statement chip long says okay thank you for a fuller explanation of how we're getting to nothing can someone get into that a little bit more we won't get into that statement you won't reach that statement does not match the condition nice clarifying a bit more yeah come on go from there that teamwork right there nice that is pair programming in action as well that's quadruple quadruple programming right okay so as folks are mentioning nothing is going to happen because we can ignore that other console.log but basically we have a conditional statement right now that's checking a specific condition in that condition is terrain string is equal to grass we're checking if it's equal to grass since we've only typed an R in there our would get saved as terrain string it would check is R equal to grass and say no nothing would happen including that console log that's in there let's check and Tammy Reese you are correct because we do still have that other console log up there mmhmm sorry forgot about okay so right so we see our one value which is this first statement that's always executed but we don't see anything from this statement I can even make it more clear if I comment this out mmhmm you'll see what tertiary and chip we're talking about so I saved this I go again I want to put them up together here nothing happens gobbledygook all right now type grass okay fine it works okay so I typed grass and this showed up in the console log okay so what the heck is this this is a jQuery selection okay mmhmm we can check more about it let's see if I can show you exactly where it is I'm gonna do let's I think we can how might best describe this okay what we expected was a jQuery object to be logged which is exactly what happened this WF n dot init this previous object okay all right and just so you know okay so we'll save do this again grass okay cool now that means that we're getting our jQuery object awesome now what we want to do is change the background yeah exactly so we know our condition is working and all that we're having executes right now is this console dot log statement but what we really want it to do is to change the background of those squares up there to a nice grassy pattern so how do we do that and as you recall the background image is set here with this CSS property background image and the value is linear granite you don't have to worry about that the point is that's the black that you see now we want to change that and we specifically want to change it to a image that we have hosted on AWS so just to know we've actually already given you all of the URLs for these in the project page so if you go back to the narrative you can scroll down and towards the bottom you'll see a couple of the different links that we use for the graphs rocks and four so make sure that you have these on hand for the next portion we're gonna grab our graphs URL make sure that we have it on hand and then go back to our JavaScript okay and what I want to do is I want to change the CSS property background image to the value whatever that URL is yes okay so let's instead of console logging this I'm just gonna grab this const terrain okay I want to say this terrain CSS mmhmm which is again another function that jQuery gives us just making it easy that will change the styling of whatever this terrain is mmhmm it takes two arguments the first is the property wrap got image this is property I want to change and to make this clear this I want to change that URL okay so a couple things you may notice as Nick mentioned dot CSS is a easy jQuery method to change any CSS styling what you have to do again is to give it two values you have to give it the property name and the property value what you may notice though is that the syntax is different from how we do things in CSS right so we don't have a colon separating the property from the property value and we don't have it ending in a semicolon so just be aware of that it's separated with a comma instead another what is a funny a CSS styling syntax thing is that we have to state that something is a URL so we put URL beforehand and then we have our URL in parentheses so make sure you have that URL beforehand I just remember one quick thing I'm going to end this space in here it's just a bug that I think will save herself some time later okay you're adding a bargain no no I'm fixing a boat okay oh because it's two classes I'll explain that a minute okay okay I'll just explain it what I was doing is I was putting those two strings together the rectangle and whatever the input name is which would make a giant word rectangle input name but that's really not how we select that rectangle you need a space just like you see here rectangle three value so that's how you select it correctly mmhm anyways let's see if this works all right oh good okay hold on just want to make sure I can reload this okay so doesn't work okay let me double check what we've done here yeah I thought you guys thought okay let's check our console could we console.log that Tareen calm about a variable there just yeah yeah let's do that cool yeah cuz I was messing around with that let's see what I did yeah cool that's right save open this again one more time grass so the string isn't showing up here let's try this yes let's try it with the other ones oh okay let's compare take a quick look at what I've wrote notes to myself here and we know our conditional was working before mmhmm so if anyone sees the bug yell out see what I've done here mmm can we console ugh something else could have you have extra parentheses oh so what we what we figured what we know so far is that one IRA type grass that we're not reaching this console.log so we know that terrain string doesn't equal grass on that yeah mmhmm you see that Oh see that right thanks Tammy Rees good eyes okay agree yeah all right cool and what I just log the terrain here terrain yeah okay okay yeah I think it's another issue with the selectors here mmhmm I think it needs to be done let me make sure that this works before I explain it that was gonna be Garros did it man debugging I'll explain what I did so I thought that I needed a space basically what I had previously was dot rectangle space plus the geranium apparently jQuery doesn't like that I thought that it just needs to match the CSS selector but it really is expecting another dot here because there's two classes we're talking about here doc rectangle and dot terrain name yeah this is so if I go into here again this is what we're talking about dot rectangle dot one value so again as we've kind of seen a couple times now the way that syntax works across the files sometimes there's overlap sometimes there's not great place to double check that stuff is documentation all right so let's see here to try grass again let's try another one yeah turn the other ones great yes amazing yeah um so we can earn everything new grass mhm but we've got two other background images that we want to use we have the rocks one and the forests one right but lucky for us we've kind of figured out the majority of our code so far right so Nick what would be the next step that you would take to finish this off so we could add our rocks and forests so I want to add something to check the input mmhmm and I want to check for different terrains drinks right I want to check for grass I want to check for rocks and check for forest so I'm gonna extend my conditional statement to have check for grass if that's grass mmhmm make it grass if it's rocks make it rocks yep all right let's do it okay so in here and get rid of this mmhm and all right all right so that's my first ifelse it's not some grass and we want to check if the terrain string is something else okay and I'm gonna do essentially the same thing just with a different URL that's what I'm gonna copy this code and congratulations Michael bowling and getting your grass to grow we have all fallen yeah to the extra syntax elements as you see as we've seen as it happens all the time to do different so instead of grass here and I want this to be grass anymore it's forests so I want divorced yeah let's see if it works yeah you can always grab you also have the separate URL for forest just some keys okay scratch still work grasp it works this is never felt so good yeah okay and then I'm gonna knock this last one out really quickly and then I'll answer questions I'm gonna write one more else if mmhmm for our last rain yep wraps again I'm gonna go here copy that it's that doing that I just saw a question in here Dominic said question about kiap function when you type r that was one key up action but grass is five cubes you are correct if you were actually just to console log the user value and have the console open as you typed your input you could see that the console would log it each time it changed it would go from G to G R to GRA to G RA SS etc I mean well you know missed a few in the middle there but point being that it's actually calling that each time and so it's still checking it each time luckily for us computers are really fast so that really isn't a super like big burden on them but it will be checking it each time until reaches a string that meets the conditional so now we have finished the basic product yeah I did it I just want to clarify a few things yeah if you did get stuck at any point you can follow along up there in the project on kill Academy this kind of explains like what we just did mmhmm with little hints and stuff it's example like these are where the URLs are and there's additional steps that we won't get to today but you can build this out even more following along yeah exactly so you may refactor things in a certain way to add more variables in for example you can change it so you know if say user error is sometimes an issue or really like more about your expectations if for a user so we're anticipating a user to type grass rocks and forests as all lowercase but what would happen Nick if I type uppercase G and then the rest of it lowercase or the entire thing upper case s so grass doesn't work so grass doesn't work but lowercase grass does and can you do it with type the title capitalization yes so that also doesn't work and that's again because we are checking exactly a string that is lowercase typed grass but we could do you want to quickly show them yeah yeah I can jump into really quick okay so there's a quick fix for that one just to anticipate a couple of edge cases so I'm gonna let Nick explain that yeah so there is an intermediate step here that I'm gonna talk about real quick to check for just the title case grass I could say if terrain equals grass or I'm just using the horse just using the or symbols here can I take this yes grass or equals grass which would work so then I can do lowercase grass or title case grass if I did anything else like all kit caps grass it wouldn't work yeah and then there's all kinds of different variations capital R capital a whatever so the way that we could cover all those cases is just make everything uppercase and then only check for upper yes or we can make everything lowercase and make everything true so the upper case because then it's like you're yelling you know that's funny hmm so I'm gonna do it in the key up of it when we capture the key up information we're gonna immediately make everything uppercase so target value to upper case which is just a regular method in JavaScript for any string that makes it uppercase mmhmm okay so I saved this and now instead of checking for grass I really want to check grass mmhmm okay we'll see if that works grass still works grass ooh and grass grass yeah and I know that works so I'm gonna add that for rocks forest as well and so folks are talking about whitespace and the things yeah you could you know write out lots of different ways to check for lots of different user inputs actually fun fact another behind the scenes story that's how we check your code I could Kathy a lot of things like this but really okay how do we balance what we think the user will input and what we're checking for so someone mentioned regular expressions we write a lot of regular expressions we also use a bunch of different testing Suites to do some trying valuate functions built some of those two for a couple of these interactions as well to give user feedback mmhmm were there any other questions that we missed good project okay and then we're also gonna I think we can provide this code if we need to the final cut if you a lot of people get stuck we can also provide that yep absolutely anything else couple other like extensions do you want to keep going if you want to keep going so um one thing you may have noticed is that I'm just gonna drive for a second so you may notice that in this input box the text color is black and in this input box the text color it was was gray until I clicked on it and it's great here so how it actually functions on the site is we've added another little helper function just to allow when the user has input their text after you click away like I clicked away from here that checked the text changed back to gray Ford to stay black afterwards so that could be a little extension for you to try another extension is to add more images so we actually have a whole slew of images that are used as part of this project in a future extra exercise and Nick has added them here so you can try it with a different one and you may think about if you are using all these images you could rather than use a conditional statement to check for different inputs you could use a switch case instead and add that to your code so that's that's how you build one of the applets that's in a code can be course one that we built that's like basically what we did for work yes more than that pretty sweet word yeah and we did a little bit better yes thanks all your help we we did it yeah exactly so again you can check out this live stream after we're finished and watch the entire process again in case you missed any steps if the code is still not working for you don't worry happens all the time that happened for us during the middle of this livestream as well breaking your code is just a part of doing it so just make sure to look through it closely see if you have any extra parentheses or you haven't closed bracket any small thing like that just maybe just maybe the thing that you need to if you do have other feedback you want to leave there is a forum in the chat that you link to a forum you can chat and then if you do want to see this in action or like are interested in what else we're teaching in this lesson there is a link in the YouTube description later on for I can just go to it okay but learn how to code this is where it actually on the website so check it out alright alright thank you guys so much have a wonderful rest of your Thursday