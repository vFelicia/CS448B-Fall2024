In our previous video on variables and lists, we learned variables and lists hold information you can use in your program. Now, let's see some examples of using a custom variable, as well as creating and using a list. Let's create a variable that stores the brightness of the sprite. You'll see there’s no reporter block for brightness available in the block palette. I'm going to check the box next to my custom “brightness” variable in the block palette, so it will be shown on the stage. Now, I can rightclick on its stage monitor and I'll see I have a few options “normal readout,” “large readout,” and “slider.” Let's make this a slider so the user can control the sprite’s brightness. To test this, I'm going to create a quick script that says when the green flag is clicked, the “brightness” variable should be set to zero. Then, forever, the program should set the brightness effect to the number in the variable “brightness.” Let's test this. Pretty cool. And what if we want to have the background’s brightness be the opposite of my sprite’s? I'm going to make a black box as my background and then create a script that says the background should forever set the brightness effect to 100 minus what is in the “brightness” variable. Let's test this again. The brightness of the background and the sprite should be opposite. Sliders can be handy for other things, too, like speed or volume. And if you want to set limits on the range of numbers available in the slider, you can rightclick on the variable’s stage monitor to set a minimum and maximum. For instance, here's a project where the slider controls the speed of the spin by setting the “spin” variable as the number of degrees to turn. When it spins too fast, I get dizzy, so I may want to set a lower maximum number for the slider. You could play with code to show or hide the variables on the stage, via a stage monitor, based on something like mouse placement or reaching a certain point in a program. In this project, for example, by using the “show variable” and “hide variable” blocks, the volume slider is only shown when the mouse is in a certain position on the stage, so it doesn't clutter the screen until the user wants to change it. You can pass information to a variable or list by clicking or moving a sprite, adjusting a slider, via code blocks, and more. You can also pass information from one reporter block, variable, or list to another. This could be helpful because variables and reporter blocks can only hold one piece of information at a time. To store multiple pieces of information, you’ll need to create multiple variables to store different pieces of data in. And then, use the “set variable to” block to pass information from one to another. Or, you may want to consider storing the data in a list. To create a list, select the Variables category from the block palette and click the “Make a List” box. This project, for example, is collecting the user's answers to questions about their superhero name, power, and weakness. Each answer could be passed and stored in individual variables by setting those variables to “answer” after each related question is asked. Or, each answer could be added to a list by using the “add thing to list” block where “thing” is “answer.” With a list, new information is simply added to the list, rather than previous data being overwritten. And then, the list gets longer and longer until you tell it to delete some, or all, of the information. A list, also known as an “array” in other programing languages, consists of numbers paired with items. Information from lists can be requested based on their placement within the list using the “item of list” reporter block. If you look at the “say” block in this example program, you can see how the information is being added to a sentence to make a customized message for each user based on their answers. There are a variety of simple and complex uses for lists, such as using a predefined list to determine animation, like in a melody project. Performing calculations, like determining the sum of numbers in a list. Storing inventories and games, so you can check what items have been collected or what can be collected. Encoding and decoding messages/strings, like an alphabet to binary code converter. Recording multiple values like the movement of a mouse or sprite around the stage, like in a fruit slicer game or in a position recorder project. Creating a system for users to type letters or display words/ close captions on the stage, like in a Mad Libs project. [Program reading] “One day, a dog by the name of Catty Kittendom was running along the polka dot bird in Denver.” Or programing a randomized prompt idea generator that utilizes multiple lists full of adjectives or categories, for when you need ideas about what kinds of projects to create. These are just a few of the possibilities. The state of your project is preserved when you save it, meaning if there's information in your list, you do not need to tell the program to add those same items to your list each time the program is run, unless you have deleted them from the list and they need to be readded. Look through all the blocks available for lists. What do you think each does? How might you use some of the blocks in a program to add, edit or reset the data in a list? Experiment! How will you use variables and lists to create your own customized program?