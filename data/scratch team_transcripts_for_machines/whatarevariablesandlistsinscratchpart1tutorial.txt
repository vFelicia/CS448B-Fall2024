Have you used variable or list blocks in a Scratch project? They can be a powerful tool when you're creating customized programs. Perhaps you’ve used a variable to store a game score, but did you know a variable can hold numbers or text, known as a “string”? And if you are storing a lot of custom information, using a list may be more efficient than creating multiple variables. Let's explore what variables and lists are and see a number of ways they can be used. You can think of a variable like a container that stores an assigned value, data, or information. Variables can only contain one piece of information at a time. So as new information is placed inside the variable, the old information is replaced. A list, on the other hand, can store multiple pieces of information, all ordered as separate items. A list is also called an “array” in other programing languages. The benefit of storing information in either a variable or a list is it can be recalled later in your program. For example, you can ask the program to check the current score of the game and use that to determine if a player has won or lost. You can record a series of answers provided to questions and restate the information gathered later in the form of a sentence to customize a story. You could let the user control the speed of a character’s spin, or whether music is on or off as they engage with your program. These are just a few examples. The information stored can change the direction of a game or story, turn on and off actions, signal special messages, and more. Variables and lists hold information you can use in your program. But Scratch comes with some reporter blocks built in that also store information. Let's first explore some reporter blocks. Say you use the “ask” block to pose a question to your user. When the user types an answer into the dialog box, it's stored in a reporter block called “answer.” In this program, a user is responding to a math question. The value stored in “answer” has been placed in an equals operator block inside a conditional “if then” statement. So if their answer is correct, they are shown one response. If the answer is incorrect, they're shown another response. Another reporter block is “volume.” It stores the number representing the current volume of the sprite, clone, or stage. Here, the program is checking the volume when the user clicks a sprite. Then, it is setting the volume to 0 or 100, depending on what that current number is. Look through the various block categories in the block palette and see if you can find other reporter blocks that store pieces of information you can use. Unlike a stack block, which can be placed directly above or below another block, reporter blocks go inside another block to serve as an input, hence their oval shape. You can click on a reporter block in the block palette or in the script area to see the piece of data it currently holds. You can also check a box next to many of these reporter blocks to display them on the stage via a stage monitor. But what if there isn't a built in reporter block to store the information you need? In that case, you can create your own variable. Select the Variables category from the block palette. A generic variable is already provided. You could rename it or delete it by rightclicking on it, or click the “Make a Variable” box to create a new one. When the new variable textbox appears, type the name of the information you want to store in the textbox for the name. You can then choose if all sprites will have access to the variable or only the current one you've selected. Many times, you'll probably choose to leave it as the default “for all sprites” so any sprite in your program can change the variable, reset the variable, or check the data the variable currently holds. For instance, an overall game score. However, there may be times when the variable only applies to one sprite. For example, different sprites might have their own health meters in a game. For now, we won't get into cloud variables, but they are stored in the cloud or on Scratch’s servers, so the values are preserved when projects are reloaded. Notice the different types of blocks available in the Variables category. There are blocks to set or change the variable, for instance. And even a variable reporter block (that oval block) that can be used inside another block. In our next video, we'll explore some examples of creating and using custom variables and lists.