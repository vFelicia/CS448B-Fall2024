In a previous video, we explored the concept of procedures and created our own custom “My Block.” Now, let's explore the difference between creating a “My Block” custom block and using a “Broadcast” block. Both can store sequences of code as separate procedures. But one may be better to use in a certain context than another. We'll also explore some additional tips and tricks for using “My Blocks” successfully. And we'll discuss that option to “run without screen refresh.” If you have a long, complex sequence that performs a particular action, you may want to define it as a custom block, so you can more easily identify all the steps involved and edit it later. If you've used a broadcast block before, you've already practiced writing a procedure outside the main program. When the sprite or backdrop receives a broadcast, it can run a series of code that you've defined under the “when I receive” hat block. So what's the difference between using a broadcast and writing your own custom block? Well, there are a few differences, but a main one is how the program handles the code. When you use a custom block in your program, the program pauses and runs through all the steps under the custom block before proceeding. Let's use this simple example to see what I mean. Notice the program played the entire sound before moving on to the spin. Since the program pauses to perform all the code defined under a custom block before moving on, if you put a forever block under a custom block, it will never get to the next code blocks in the main program. As you can see, it never got to the next step. When you use broadcasts in your program, the program sends the message and then proceeds with the next steps in the program. So code sequences may run simultaneously. Let's see the difference when I use broadcast. Notice the spin is happening while the code to play the sound is running. Because the program sent the message and moved on. When choosing whether to use a custom “My Blocks” block or a broadcast, think about if you want to run through each step in the procedure before moving on or if you want the code to run simultaneously as your program moves ahead. It's also important to note that custom blocks are specific to the sprite where it was defined. When I move to a second sprite, you'll see my custom block isn't there in the blocks palette. If I want to use the same code for additional sprites, I'll have to copy my definition to each sprite. Unlike a broadcast block, that can send messages globally between all sprites and backdrops, a custom “My Blocks” block is local, usable only by the sprite it's defined on. The call for the custom block isn't received by any other sprites, even if their custom block has the same name. You may be wondering what is “Run without screen refresh”? When you are viewing a Scratch program run on the stage, you may not realize that the screen is constantly refreshing, redrawing the scene at a certain frame rate. If the refresh is happening at the right speed, your eyes should perceive continuous motion and you can see all the intermediate steps as the program progresses. But if the sequence runs quickly between refreshes, your eyes will not be able to perceive the action and you'll only see the finished product. Sometimes we may want to see the action, and sometimes we may just want to see the result. Take this code that draws a wall of bricks on the stage. If I set up this custom block and do not check off “Run without screen refresh” when I run the procedure, I see each brick being put in place. Now let's edit this custom block by rightclicking on it and choosing “edit.” This time I'll check off “Run without screen refresh.” This means it will attempt to run the script as fast as possible in one frame and will not refresh the screen until it has finished executing all the steps in the procedure. When I run the custom block now, all the bricks appear together at once. If you've used turbo mode before in Scratch, it's a similar concept. But turbo mode applies to the entire program, while this “Run without screen refresh” only applies to the procedure in your custom block. One important note is that if any of the blocks in your custom block involve time, you should not use “Run without screen refresh.” Because the program needs to honor the time, trying to run the code without refreshing could cause a lag, screen freezes, or even program crashes. In another video, we’ll explore creating more complex custom blocks using inputs.