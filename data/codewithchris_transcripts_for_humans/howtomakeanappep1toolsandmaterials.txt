With timestamps:

00:01 - [Music]
00:05 - hey guys welcome to how to make iPhone
00:07 - apps with no programming experience this
00:10 - is lesson one tools and materials and
00:13 - this video is going to serve as a
00:15 - checklist of what you'll need to uh
00:18 - proceed on this journey of learning iOS
00:20 - development and a little bit of an
00:22 - orientation on all the things that
00:24 - you'll be seeing and using now the only
00:26 - thing you really need in order to learn
00:28 - iOS development is a Mac and That's
00:31 - essential because that's the only way
00:33 - you're going to be able to follow along
00:35 - and practice now the reason you need a
00:37 - Mac is because the program that we use
00:40 - to build apps on and to write our code
00:42 - only runs on OSX which is the operating
00:45 - system for a Mac now you may have heard
00:48 - of some solutions that run on PCS or
00:50 - Windows but those are thirdparty
00:52 - solutions not endorsed by or supported
00:55 - by Apple so in the lessons that proceed
00:58 - we're going to be using official Apple
01:00 - tools and materials and we're going to
01:02 - do it the way that it was meant to be
01:04 - done and a Mac doesn't have to be
01:06 - expensive for example I'm still using
01:09 - the MacBook Pro that I bought in 2011
01:13 - and it's still running all of the latest
01:14 - software fine without any performance
01:16 - issues so if you're on a budget I would
01:19 - recommend to buy a used Macbook or a
01:22 - used Mac so now that you have your Mac
01:24 - we can download that program which I
01:26 - mentioned where we'll be writing our
01:28 - code and creating our app in and that
01:31 - program is called xcode it's available
01:33 - in the Mac App Store for free the only
01:36 - requirement is that you need at least
01:38 - OSX 10.9.5 to run it and that translates
01:43 - to OSX Mavericks which is also free it's
01:46 - a free upgrade if you're running an
01:48 - operating system that's lower than that
01:50 - and as I mentioned my 2011 MacBook is
01:53 - still running OSX Mavericks fine so what
01:57 - does this xcode program allow you to do
02:00 - well if you think about an app for a
02:02 - second at the very basic level it
02:04 - consists of two things the first thing
02:06 - being the user interface that's what the
02:09 - user sees on the phone and what the user
02:11 - interacts with and the second thing is
02:15 - all of the logic and response that
02:17 - happens uh in response to the user
02:20 - interacting with the app so xcode allows
02:24 - you to create this user interface
02:27 - visually in fact if you'd like uh just
02:30 - by dragging and dropping elements onto
02:32 - the screen and second of all it allows
02:36 - you to write that logic and express that
02:39 - logic in terms of code so you're able to
02:42 - code what happens when a user Taps that
02:45 - button or what happens when the user
02:47 - swipes and you're able to use that code
02:50 - to perform calculations or go fetch data
02:53 - or respond to the user or update the
02:55 - view furthermore xcode also allows us to
02:59 - test our app so in addition to creating
03:02 - the user interface and wiring up that
03:05 - logic with code we can run the app in
03:08 - xcode and xcode has a great simulator
03:12 - which will appear on your screen to
03:14 - mimic the iPhone and it'll run your app
03:17 - inside of that so you can see what your
03:20 - app looks like and you can use and test
03:22 - your app without actually having a an
03:26 - iPhone so it's not even a requirement to
03:28 - have a device if you want to build an
03:30 - iPhone app I mentioned that we use code
03:34 - to express the logic and what happens
03:37 - when the user interacts with your app's
03:39 - user interface well that code follows a
03:44 - set of rules and follows a certain
03:47 - framework just like a language that's
03:49 - why it's called a programming language
03:52 - you may have heard that Apple released
03:53 - the second programming language for
03:55 - building iPhone apps called Swift and
03:58 - this is what the lessons and the course
04:00 - is going to teach you how to use the
04:02 - reason Swift is better for beginners to
04:05 - learn how to build apps with is because
04:08 - the syntax and the structure of the
04:09 - language is a lot more natural and
04:12 - intuitive so it's a lot easier to read
04:15 - and to understand for beginners in the
04:17 - past when I taught the course with
04:19 - objective c a lot of beginners struggled
04:23 - with the syntax and all of the different
04:26 - symbols and characters that would be
04:28 - used to write the code beginners would
04:31 - struggle with remembering what keywords
04:33 - to use and how to declare certain things
04:37 - with swift the syntax is more of like
04:40 - plain English so it feels less like
04:42 - you'll have to learn a separate language
04:44 - so I'm really excited to show you guys
04:46 - how to use Swift so that's all there
04:49 - really is to it at the very core you're
04:52 - going to be learning how to use xcode to
04:54 - build your user interface and you're
04:56 - going to learn the Swift programming
04:58 - language to to respond to user events
05:02 - and user gestures and to express
05:05 - logic so after you finished building
05:07 - your app and X code and testing it in
05:09 - the simulator how are you going to get
05:11 - it on your device or how are you going
05:13 - to get it into the App Store well this
05:15 - part actually requires you to have an
05:18 - apple developer membership and this is a
05:21 - yearly fee that Apple charges it's $99
05:24 - as of the recording it has been actually
05:28 - ever since the Inception of the program
05:30 - it's been $99 a year and that allows you
05:33 - to publish as many apps as you want into
05:35 - the App Store and it allows you to
05:39 - install your app on a device
05:42 - unfortunately there's no other way to
05:44 - put your app on an actual device unless
05:47 - you are a member of this program so when
05:50 - you sign up for the Apple developer
05:52 - program it gives you access into two
05:55 - things one is called the provisioning
05:57 - portal which is the place where you
06:00 - upload your certificates and create your
06:02 - profiles that dictate which devices your
06:05 - app can be installed on uh and the
06:08 - second thing gives you access to is
06:10 - iTunes connect and that's the place
06:13 - where you're going to create the catalog
06:14 - listing for your app you're going to
06:16 - upload your screenshots it's basically
06:18 - when you browse the App Store and you
06:20 - see all of those app listings with the
06:22 - description and the screenshots and the
06:24 - price and everything you create those
06:27 - things in iTunes connect so you're going
06:29 - to create the app listing for your app
06:32 - in iTunes connect and then you're going
06:34 - to upload what you've created an xcode
06:38 - and then that's where you publish it
06:39 - into the store in iTunes connect you can
06:42 - also check the stats for your app in
06:44 - terms of downloads and rankings and if
06:47 - you have ads or if you have I add in
06:49 - your app you can check your earnings and
06:52 - you can get those types of reports and
06:55 - if you have inapp purchases iTunes
06:56 - connect is where you would configure
06:58 - that sort of stuff as well
07:00 - so there you have it the only thing you
07:02 - really require is a Mac which will allow
07:05 - you to install xcode which is free uh to
07:09 - build your apps and to test your apps
07:11 - and then if you want to deploy your apps
07:14 - on the phone and deploy is just a fancy
07:16 - word for install if you want to deploy
07:18 - your apps into the app store or on an
07:21 - actual device you can sign up for the
07:23 - Apple developer program which gives you
07:25 - access to two websites to allow you to
07:27 - do that sort of stuff so I hope hope
07:29 - that was useful to help you understand
07:31 - the ecosystem and all of the tools and
07:33 - materials that we'll be using in the
07:35 - next lesson we'll get started with
07:37 - dabbling and some Swift Code
07:41 - [Music]

Cleaned transcript:

hey guys welcome to how to make iPhone apps with no programming experience this is lesson one tools and materials and this video is going to serve as a checklist of what you'll need to uh proceed on this journey of learning iOS development and a little bit of an orientation on all the things that you'll be seeing and using now the only thing you really need in order to learn iOS development is a Mac and That's essential because that's the only way you're going to be able to follow along and practice now the reason you need a Mac is because the program that we use to build apps on and to write our code only runs on OSX which is the operating system for a Mac now you may have heard of some solutions that run on PCS or Windows but those are thirdparty solutions not endorsed by or supported by Apple so in the lessons that proceed we're going to be using official Apple tools and materials and we're going to do it the way that it was meant to be done and a Mac doesn't have to be expensive for example I'm still using the MacBook Pro that I bought in 2011 and it's still running all of the latest software fine without any performance issues so if you're on a budget I would recommend to buy a used Macbook or a used Mac so now that you have your Mac we can download that program which I mentioned where we'll be writing our code and creating our app in and that program is called xcode it's available in the Mac App Store for free the only requirement is that you need at least OSX 10.9.5 to run it and that translates to OSX Mavericks which is also free it's a free upgrade if you're running an operating system that's lower than that and as I mentioned my 2011 MacBook is still running OSX Mavericks fine so what does this xcode program allow you to do well if you think about an app for a second at the very basic level it consists of two things the first thing being the user interface that's what the user sees on the phone and what the user interacts with and the second thing is all of the logic and response that happens uh in response to the user interacting with the app so xcode allows you to create this user interface visually in fact if you'd like uh just by dragging and dropping elements onto the screen and second of all it allows you to write that logic and express that logic in terms of code so you're able to code what happens when a user Taps that button or what happens when the user swipes and you're able to use that code to perform calculations or go fetch data or respond to the user or update the view furthermore xcode also allows us to test our app so in addition to creating the user interface and wiring up that logic with code we can run the app in xcode and xcode has a great simulator which will appear on your screen to mimic the iPhone and it'll run your app inside of that so you can see what your app looks like and you can use and test your app without actually having a an iPhone so it's not even a requirement to have a device if you want to build an iPhone app I mentioned that we use code to express the logic and what happens when the user interacts with your app's user interface well that code follows a set of rules and follows a certain framework just like a language that's why it's called a programming language you may have heard that Apple released the second programming language for building iPhone apps called Swift and this is what the lessons and the course is going to teach you how to use the reason Swift is better for beginners to learn how to build apps with is because the syntax and the structure of the language is a lot more natural and intuitive so it's a lot easier to read and to understand for beginners in the past when I taught the course with objective c a lot of beginners struggled with the syntax and all of the different symbols and characters that would be used to write the code beginners would struggle with remembering what keywords to use and how to declare certain things with swift the syntax is more of like plain English so it feels less like you'll have to learn a separate language so I'm really excited to show you guys how to use Swift so that's all there really is to it at the very core you're going to be learning how to use xcode to build your user interface and you're going to learn the Swift programming language to to respond to user events and user gestures and to express logic so after you finished building your app and X code and testing it in the simulator how are you going to get it on your device or how are you going to get it into the App Store well this part actually requires you to have an apple developer membership and this is a yearly fee that Apple charges it's $99 as of the recording it has been actually ever since the Inception of the program it's been $99 a year and that allows you to publish as many apps as you want into the App Store and it allows you to install your app on a device unfortunately there's no other way to put your app on an actual device unless you are a member of this program so when you sign up for the Apple developer program it gives you access into two things one is called the provisioning portal which is the place where you upload your certificates and create your profiles that dictate which devices your app can be installed on uh and the second thing gives you access to is iTunes connect and that's the place where you're going to create the catalog listing for your app you're going to upload your screenshots it's basically when you browse the App Store and you see all of those app listings with the description and the screenshots and the price and everything you create those things in iTunes connect so you're going to create the app listing for your app in iTunes connect and then you're going to upload what you've created an xcode and then that's where you publish it into the store in iTunes connect you can also check the stats for your app in terms of downloads and rankings and if you have ads or if you have I add in your app you can check your earnings and you can get those types of reports and if you have inapp purchases iTunes connect is where you would configure that sort of stuff as well so there you have it the only thing you really require is a Mac which will allow you to install xcode which is free uh to build your apps and to test your apps and then if you want to deploy your apps on the phone and deploy is just a fancy word for install if you want to deploy your apps into the app store or on an actual device you can sign up for the Apple developer program which gives you access to two websites to allow you to do that sort of stuff so I hope hope that was useful to help you understand the ecosystem and all of the tools and materials that we'll be using in the next lesson we'll get started with dabbling and some Swift Code
