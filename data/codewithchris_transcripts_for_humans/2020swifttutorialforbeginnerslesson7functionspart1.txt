With timestamps:

00:00 - hello and welcome to my Swift tutorial
00:01 - for beginners in this lesson you're
00:03 - going to learn all about functions what
00:05 - they are and how to use them now
00:07 - functions are a critical part of the
00:09 - Swift programming language especially if
00:11 - you're going to be building apps with
00:12 - Swift so let's get started
00:19 - all right so I've got a brand new
00:21 - playground here but before we dive into
00:23 - write our first function let's define
00:25 - what they are at the most basic level a
00:27 - function lets you take a block of code
00:29 - and give it a function name and whenever
00:32 - you want to execute that block of code
00:34 - or basically run that code you call that
00:37 - function name so that might seem really
00:39 - simple but the powerful aspect of it is
00:42 - that it lets you organize your code into
00:45 - smaller chunks of code for specific
00:48 - tasks so that way if you want it to
00:50 - perform a specific task you can run that
00:52 - specific function now they can get
00:55 - pretty powerful with the ability to give
00:58 - the function data to have the code take
01:00 - that data work with it and return the
01:02 - result back to you but in this lesson we
01:04 - are just going to take a look at the
01:05 - basic function so let's take a look at
01:08 - how to define a function first so it all
01:11 - starts with the func keyword or F UNC
01:14 - followed by a space and then your
01:16 - function name so you can give your
01:18 - function any sort of name you'd like but
01:21 - you should be descriptive about what
01:23 - that code inside the function does so
01:26 - that when you want to perform that task
01:28 - you know which function to call
01:30 - following the function name you have a
01:33 - pair of parentheses now in the basic
01:36 - function we're not going to have
01:38 - anything in between these parentheses
01:40 - but in the next lesson we're going to
01:42 - learn how to add input parameters and in
01:44 - between those parentheses is where you
01:46 - would specify those parameters for now
01:48 - we're just going to leave it as two
01:50 - parentheses with nothing in between them
01:52 - all right and then next up we have a
01:54 - pair of curly braces and then in between
01:57 - the curly braces is where you would
01:59 - define your code for that function now
02:01 - any code you write in between those
02:03 - curly braces that's going to get
02:05 - executed when you call the function by
02:07 - its name now let's go back to the
02:09 - playground and write a basic function
02:12 - so I'm gonna start on the next line here
02:14 - and I'm going to use the keyword fu NC
02:16 - space followed by my function name now
02:19 - for this one I'm going to call it add
02:21 - two numbers because that's what we're
02:25 - going to do inside that function and I'm
02:27 - gonna put two parentheses like that and
02:29 - next up I would put two curly brackets
02:32 - this is where I would specify the code
02:35 - that I want to run whenever I call add
02:38 - two numbers so why don't we define some
02:40 - constants here let a equals one let B
02:45 - equals two and I'll say let C equals a
02:49 - plus B so C equals three and lastly I'm
02:55 - going to print C now I'm going to run my
02:58 - code right here and let's come on
03:03 - playground
03:04 - alright so now it's run but as you can
03:07 - see there is no console output and the
03:10 - reason why is because this code inside
03:13 - this function doesn't get executed until
03:15 - you call the function by its name so the
03:18 - way you call it is you simply write the
03:21 - function name and sometimes you can even
03:24 - use autocomplete like that followed by
03:26 - the parentheses and if we did define
03:30 - some sort of input parameter here that
03:32 - the function will require when you call
03:35 - that a function you would also have to
03:37 - specify that input data in this lesson
03:40 - for this basic function we don't have to
03:43 - do that all right so let's run this line
03:46 - of code and as you can see in the
03:47 - console it outputs three as expected now
03:51 - let's try another one
03:52 - so I am going to just get rid of that
03:55 - line there so we're not calling the
03:57 - function and I'll call this subtract two
04:00 - numbers I'll say let D equals five let e
04:09 - equals one and let F equals D minus e
04:16 - alright and here I'm going to print F
04:20 - and again nothing is going to happen
04:24 - until I actually call the function right
04:28 - so let's run the project now and as you
04:32 - can see there is four now this might not
04:35 - be immediately obvious to you but using
04:37 - functions is actually a huge time
04:39 - savings because oftentimes when you
04:42 - write your code for your app there are
04:44 - instances where you're going to have to
04:46 - repeat a chunk of code in different
04:48 - places having duplicate code in your
04:51 - project is generally a bad practice and
04:53 - something that you'll want to avoid and
04:55 - so whenever you see yourself having to
04:57 - repeat code writing the same thing that
04:59 - you've written before in another place
05:01 - then think about putting that chunk of
05:04 - code into a function so that you can
05:06 - call it from multiple places now there's
05:08 - one more tricky thing about functions
05:10 - that I want to mention to you and that
05:11 - is the concept of variable scope the
05:13 - idea is that any variables and constants
05:16 - that you define inside of your function
05:19 - they only exist and can be used within
05:22 - the curly brackets of that function so
05:25 - for example here in the add two numbers
05:27 - function we have declared a B and C well
05:31 - outside of my function that would be
05:33 - right here I can't let's say print a
05:40 - write that's gonna trigger in an error
05:44 - use of unresolved identifier and that's
05:47 - just another way of saying that it can't
05:49 - find what a is it doesn't know the same
05:54 - thing for B or C and the reason for this
05:58 - is because we've declared a b and c
06:00 - inside that scope of that function
06:03 - that's where it exists and likewise
06:08 - inside the subtract two numbers function
06:12 - we have de and F I won't be able to
06:15 - access a B or C here either I try and
06:19 - print date it still doesn't know what a
06:21 - is so we're going to get a crash if for
06:25 - some reason you needed your variables to
06:28 - be able to be accessed outside of the
06:31 - functions then you would have to declare
06:32 - these guys outside
06:34 - function now that's just something to
06:35 - keep in mind as you're starting to work
06:37 - with functions for a lot of beginners
06:39 - they run into issues where they're
06:41 - frustrated with not being able to access
06:43 - these variables and constants that
06:46 - they've declared inside their function
06:48 - and now you know why
06:49 - so just to recap you learn about what
06:51 - functions are and how important they are
06:54 - because they allow us to organize our
06:56 - code into executable blocks which we can
06:58 - then call upon to perform specific tasks
07:01 - you've learned how to define a simple
07:03 - function you learn how to call that
07:05 - function so that you can execute the
07:06 - code inside of it and furthermore you
07:08 - learned about the variable scope inside
07:10 - of a function and just to remind you
07:12 - about that if you declare variables or
07:13 - constants inside the curly brackets of
07:16 - your function they are only going to be
07:18 - available inside that function now in
07:20 - the next lesson we're going to build
07:21 - upon what you've learned here and make
07:23 - functions even more powerful if you like
07:25 - this video please give it a thumbs up
07:27 - and hit subscribe it really helps the
07:29 - channel out now click on over to the
07:31 - next lesson and I'll talk to you over
07:32 - there

Cleaned transcript:

hello and welcome to my Swift tutorial for beginners in this lesson you're going to learn all about functions what they are and how to use them now functions are a critical part of the Swift programming language especially if you're going to be building apps with Swift so let's get started all right so I've got a brand new playground here but before we dive into write our first function let's define what they are at the most basic level a function lets you take a block of code and give it a function name and whenever you want to execute that block of code or basically run that code you call that function name so that might seem really simple but the powerful aspect of it is that it lets you organize your code into smaller chunks of code for specific tasks so that way if you want it to perform a specific task you can run that specific function now they can get pretty powerful with the ability to give the function data to have the code take that data work with it and return the result back to you but in this lesson we are just going to take a look at the basic function so let's take a look at how to define a function first so it all starts with the func keyword or F UNC followed by a space and then your function name so you can give your function any sort of name you'd like but you should be descriptive about what that code inside the function does so that when you want to perform that task you know which function to call following the function name you have a pair of parentheses now in the basic function we're not going to have anything in between these parentheses but in the next lesson we're going to learn how to add input parameters and in between those parentheses is where you would specify those parameters for now we're just going to leave it as two parentheses with nothing in between them all right and then next up we have a pair of curly braces and then in between the curly braces is where you would define your code for that function now any code you write in between those curly braces that's going to get executed when you call the function by its name now let's go back to the playground and write a basic function so I'm gonna start on the next line here and I'm going to use the keyword fu NC space followed by my function name now for this one I'm going to call it add two numbers because that's what we're going to do inside that function and I'm gonna put two parentheses like that and next up I would put two curly brackets this is where I would specify the code that I want to run whenever I call add two numbers so why don't we define some constants here let a equals one let B equals two and I'll say let C equals a plus B so C equals three and lastly I'm going to print C now I'm going to run my code right here and let's come on playground alright so now it's run but as you can see there is no console output and the reason why is because this code inside this function doesn't get executed until you call the function by its name so the way you call it is you simply write the function name and sometimes you can even use autocomplete like that followed by the parentheses and if we did define some sort of input parameter here that the function will require when you call that a function you would also have to specify that input data in this lesson for this basic function we don't have to do that all right so let's run this line of code and as you can see in the console it outputs three as expected now let's try another one so I am going to just get rid of that line there so we're not calling the function and I'll call this subtract two numbers I'll say let D equals five let e equals one and let F equals D minus e alright and here I'm going to print F and again nothing is going to happen until I actually call the function right so let's run the project now and as you can see there is four now this might not be immediately obvious to you but using functions is actually a huge time savings because oftentimes when you write your code for your app there are instances where you're going to have to repeat a chunk of code in different places having duplicate code in your project is generally a bad practice and something that you'll want to avoid and so whenever you see yourself having to repeat code writing the same thing that you've written before in another place then think about putting that chunk of code into a function so that you can call it from multiple places now there's one more tricky thing about functions that I want to mention to you and that is the concept of variable scope the idea is that any variables and constants that you define inside of your function they only exist and can be used within the curly brackets of that function so for example here in the add two numbers function we have declared a B and C well outside of my function that would be right here I can't let's say print a write that's gonna trigger in an error use of unresolved identifier and that's just another way of saying that it can't find what a is it doesn't know the same thing for B or C and the reason for this is because we've declared a b and c inside that scope of that function that's where it exists and likewise inside the subtract two numbers function we have de and F I won't be able to access a B or C here either I try and print date it still doesn't know what a is so we're going to get a crash if for some reason you needed your variables to be able to be accessed outside of the functions then you would have to declare these guys outside function now that's just something to keep in mind as you're starting to work with functions for a lot of beginners they run into issues where they're frustrated with not being able to access these variables and constants that they've declared inside their function and now you know why so just to recap you learn about what functions are and how important they are because they allow us to organize our code into executable blocks which we can then call upon to perform specific tasks you've learned how to define a simple function you learn how to call that function so that you can execute the code inside of it and furthermore you learned about the variable scope inside of a function and just to remind you about that if you declare variables or constants inside the curly brackets of your function they are only going to be available inside that function now in the next lesson we're going to build upon what you've learned here and make functions even more powerful if you like this video please give it a thumbs up and hit subscribe it really helps the channel out now click on over to the next lesson and I'll talk to you over there
