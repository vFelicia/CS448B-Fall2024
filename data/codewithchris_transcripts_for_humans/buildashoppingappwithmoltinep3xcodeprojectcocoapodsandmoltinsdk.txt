With timestamps:

00:03 - hey coders what's up Chris here with
00:06 - episode 3 of how to make a shopping app
00:08 - in the previous lesson we had registered
00:11 - for a brand new Moulton account we had
00:13 - created and configured our Moulton store
00:16 - and then we had added some test products
00:18 - so that we can retrieve them through the
00:20 - API in our Xcode project in this lesson
00:23 - we're going to create our Xcode project
00:25 - and we're also going to add the Moulton
00:27 - SDK into the project and then connected
00:30 - to our Moulton account that we created
00:32 - in the previous lesson so here I am on
00:34 - the Moulton website and under more you
00:37 - can select getting started which is
00:39 - where I am here if you scroll down
00:41 - you'll see there instructions for iOS
00:44 - let's select Swift and here are some
00:47 - instructions to install the iOS SDK so
00:51 - if you're new to programming SDK just
00:54 - stands for software development kit and
00:56 - essentially it's just a bunch of files
00:58 - or classes that we can include into our
01:00 - Xcode project that is going to help us
01:02 - connect to and work with our Moulton
01:05 - store so there's two ways to include the
01:08 - SDK into your Xcode project one is using
01:11 - a manager called cocoa pods and another
01:14 - one is just downloading the SDK manually
01:17 - and adding it to your Xcode project so
01:20 - I'm going to show you how to setup cocoa
01:22 - pods and then install the Moulton pod
01:24 - but before I do that I just want to let
01:27 - you know what this option entails as
01:29 - well so if you click download the iOS
01:32 - SDK you're going to come to this github
01:34 - repo and if you're not familiar with
01:37 - this website github it's where people
01:39 - can put their code and projects so that
01:41 - other people can download it and use it
01:43 - and also to contribute to it so in this
01:46 - case this github page is showing the
01:48 - moulton iOS SDK and if you've never used
01:52 - to get hub before the easiest thing for
01:54 - you to do is probably just to hit
01:55 - download zip right here and you're going
01:57 - to download the whole SDK as a zip file
02:00 - and then when you finish downloading it
02:03 - just unzip it and then you can drag it
02:05 - into your Xcode project but the better
02:07 - way to do it and the recommended way if
02:09 - we go back here is to use something
02:11 - called cocoa pods the REE
02:12 - is if you do it the manual way where you
02:15 - download the files from github
02:17 - in the future when Moulton updates the
02:19 - SDK you're going to have to manually
02:22 - redownload it again and update your
02:24 - project with it now imagine if you're
02:27 - using multiple github libraries in your
02:28 - Xcode project now maintaining them
02:31 - becomes quite a headache now using
02:32 - something like cocoa pods helps with
02:34 - this what it allows you to do is to have
02:36 - a pod file associated with your project
02:39 - and in that file you specify all of the
02:42 - frameworks and libraries that your
02:44 - project depends on and what version of
02:45 - those libraries and with a simple update
02:48 - command it's gonna go and fetch all of
02:50 - those libraries and make sure it's got
02:52 - the right versions so that you don't
02:53 - have to do that manually now installing
02:55 - cocoa pods is a one-time thing and then
02:57 - for each Xcode project you just have to
02:59 - create a pod file in that projects
03:01 - folder so we'll go through that as well
03:03 - but first of all let's install cocoa
03:04 - pods you're in luck because I just got a
03:06 - brand-new shiny iMac and I don't have
03:09 - cocoa pods installed so we're going to
03:11 - be able to go through that together now
03:13 - alternatively a couple of great guides
03:15 - to install cocoa pods can be found on
03:18 - the official cocoa pod site under guides
03:20 - getting started and then under
03:22 - installation and another great one is on
03:25 - ray Wonderlic site how to use cocoa pods
03:28 - with swift so I'll add these two links
03:30 - in the description below okay so what
03:33 - you're going to do first is open up
03:35 - terminal so you can either press command
03:38 - spacebar and search for terminal and
03:40 - open it up that way or if you go to your
03:42 - launch pad it is I believe in utilities
03:46 - or other sorry and it's this one right
03:48 - here terminal so when you click that it
03:51 - shows a little window like this and all
03:52 - you have to do is type sudo gem install
03:57 - cocoa pods now hit enter and it's going
04:01 - to ask you for your password after you
04:04 - enter in your password it might take a
04:05 - little while to get started as it did
04:07 - for me I had to wait about maybe 40
04:10 - seconds before I started to see anything
04:11 - on the screen but I just cut out that
04:13 - waiting time in the editing so you
04:14 - didn't see any of it but when it's
04:16 - finished installing you should see
04:17 - something like this the next thing you
04:20 - want to do is type pod setup - - verbose
04:26 - and that's going to let you see the
04:29 - progress as it's setting things up so
04:32 - with those two commands we are done
04:34 - setting up cocoa pods and if you're not
04:36 - familiar with working in terminal or
04:38 - this kind of looks complicated don't
04:40 - worry because you only need to set up
04:42 - cocoa pods once and then after that as
04:44 - you're going to see soon it's very
04:46 - simple to set up for each new Xcode
04:48 - project that you do now we're going to
04:50 - switch gears and set up our new Xcode
04:53 - project so I'm gonna open up Xcode and
04:56 - we're going to create a new Xcode
04:58 - project here if you don't get this
05:00 - Welcome dialogue just go up to file new
05:03 - project and then we're actually going to
05:07 - create a master detail application so
05:10 - the master side of things is going to
05:12 - show our table view listing all the
05:14 - products and the detail is going to be
05:16 - the product detail so we're gonna start
05:18 - with this and if you don't see any of
05:20 - these options make sure that you're
05:21 - looking under iOS application and you
05:24 - should see the master detail application
05:26 - so I'm gonna call the product name
05:28 - shopping app and make sure that the
05:31 - language is Swift devices is iPhone and
05:33 - you have these unchecked let's click
05:36 - Next and I'm just gonna save it on my
05:38 - desktop okay so now that we have the
05:45 - Xcode project created we're gonna go
05:47 - ahead and close the Xcode project
05:49 - because we're going to go back into
05:51 - terminal and we're going to set up the
05:53 - pod file for it so let's close Xcode
05:55 - there or close the project and this is
05:58 - where you might get a little lost
05:59 - because it might be different for you
06:01 - depending on where you saved your
06:03 - project so I saved my project on the
06:05 - desktop as you can see here so in
06:08 - terminal we need to navigate to that
06:10 - folder and so you're going to need to
06:13 - know a couple of commands but I'm going
06:15 - to run them by you so first of all you
06:18 - can type in LS enter to see which
06:21 - directory you're in right now so here I
06:23 - can see that I have applications
06:26 - creative cloud files desktop documents
06:28 - desktop is the folder I want the these
06:30 - this is listing out all of the folders
06:32 - in this current directory if I open up
06:36 - my finder and I go into
06:40 - Desktop and I press command up I look at
06:43 - my file structure you know I can see all
06:45 - of these folders that are mirrored here
06:48 - and so this folder that I'm in right now
06:50 - is basically my cris folder now if I
06:53 - want to go into the desktop folder you
06:57 - can press CD space and then the folder
07:00 - name like that so now if I hit LS that's
07:06 - listing out all of the files and
07:08 - directories on my desktop and if I go
07:11 - into here you can see that that listing
07:16 - mirrors what I have here now take a look
07:18 - at this folder that's the folder of my
07:21 - Xcode project so I'm gonna go CD
07:23 - shopping app and now I'm inside that
07:27 - folder and here I'm gonna run my pod
07:29 - init command so if I click that this is
07:32 - inside my Xcode project so I'm gonna run
07:34 - by a couple of commands with you so that
07:36 - you can navigate to your own project
07:38 - folder so you learn that LS was to list
07:41 - out the current contents of the
07:42 - directory you learned that CD and then
07:45 - the directory name lets you go into that
07:48 - directory now CD dot dot lets you
07:51 - navigate out of the directory of CD
07:54 - space dot dot rather so now I'm back on
07:57 - my desktop if I hit LS if I go CD dot
08:00 - dot again now I'm back out a level again
08:03 - so now I'm in the cris directory my home
08:06 - folder so depending on what you're
08:09 - seeing in terminal and which directory
08:11 - you're currently and you can use those
08:13 - three commands to navigate to your Xcode
08:16 - project folder depending on where you
08:18 - saved it okay so for me let me go back
08:20 - to my Xcode project folder so CD space
08:24 - desktop and you can even if you know
08:26 - what folder it is you can even specify
08:28 - it like that and start jump directly
08:33 - into desktop slash shopping app so if I
08:36 - hit LS now I'm inside that Xcode project
08:39 - folder
08:40 - okay so inside the project folder I'm
08:43 - going to type in pod init to set up
08:46 - cocoa pods for my project and you can
08:48 - immediately see that pod file here in my
08:51 - project directory
08:53 - so now we open up the pot file with our
08:55 - text editor
08:56 - I wouldn't recommend using TextEdit
08:59 - because it's a rich text editor and it
09:01 - may screw things up if it adds fancy
09:03 - quotes into your pod file so I use
09:05 - something like sublime text so our pod
09:10 - file looks like this what we're going to
09:12 - do is uncomment this line right here
09:15 - we'll change that to nine and also
09:21 - because we're using Swift we're going to
09:22 - uncomment this guy as well just removing
09:25 - the hash sign in front of that line and
09:27 - then in the middle here between the
09:29 - target in the end tags we're gonna type
09:31 - in pod space open up a set of single
09:34 - quotes
09:35 - moulten like that I'm gonna save it I'm
09:38 - gonna close this file and then we're
09:40 - gonna go back to terminal and now I'm
09:43 - gonna type in pod install and what it's
09:47 - going to do is read that pod file and
09:49 - install the dependencies and the
09:52 - libraries that we need okay so now it's
09:54 - done if we go back into our project
09:56 - folder and finder we'll see that now
09:58 - it's got a shopping app dot XC workspace
10:02 - so from this point onwards we want to be
10:05 - opening this file instead of the Xcode
10:07 - project so let's double click the XC
10:10 - workspace file and it's gonna open up
10:12 - Xcode so now we're ready for the next
10:15 - step because the moulton libraries are
10:18 - written in objective-c and this is a
10:19 - Swift project we're going to have to add
10:21 - a bridging header to our project we're
10:24 - going to go to under this folder
10:27 - shopping app I'm gonna right-click or
10:29 - ctrl left click and let's choose new
10:32 - file and we're gonna select header file
10:35 - under iOS source select the header file
10:41 - you can name it bridging header like I'm
10:43 - doing here let's make sure to include it
10:45 - in this target here
10:47 - let's hit create so in our bridging
10:50 - header we need to specify inside here
10:53 - hash import start an angle bracket and
10:57 - type in molten slash molten dot H and
11:01 - then the closing angle bracket save it
11:05 - and now we have to
11:06 - figure our Xcode project to point to
11:08 - this file as the objective-c bridging
11:11 - header so we're gonna click this node
11:13 - right here go under build settings and
11:16 - let's search for here objective okay I'm
11:21 - not seeing anything
11:22 - but there is a toggle here that says
11:25 - basic and also let's choose all so I
11:28 - think that basic is hiding some of the
11:30 - options so if we type in objective if we
11:33 - scroll down and we look for a swift
11:36 - compiler we're going to see it all the
11:38 - way down here and under objective-c
11:40 - bridging header let's open that up
11:45 - actually we're just going to double
11:46 - click here and let's specify the file
11:50 - bridging header dot H so whether it's a
11:54 - debug or release build we're still going
11:55 - to use bridging header dot H okay and
11:58 - finally we're ready for the last step
12:00 - which is to connect to our Moulton store
12:04 - so here you can see step two is to
12:07 - initialize the Moulton SDK with this
12:09 - line here and here is our store public
12:12 - ID now it's pretty handy they've
12:14 - specified my store ID in here so if
12:17 - you've already set up a store and you're
12:19 - viewing this you should probably have
12:20 - your ID in here as well oh and if you
12:23 - don't know where to get this public ID
12:25 - you can just go to you scroll all the
12:29 - way up to my account
12:30 - and you go to account overview for the
12:33 - store that you set up and you go to API
12:35 - keys it's this one right here named
12:38 - client ID so you can just take that one
12:40 - as well and let's go back to the quick
12:43 - start and then you can put it into this
12:46 - method here I'm gonna copy that we're
12:50 - going to go into the master view
12:52 - controller swift and under the
12:54 - viewdidload we're going to make some
12:57 - space right under the viewdidload and
12:59 - we're gonna add that at this point our
13:02 - class doesn't recognize the molten class
13:05 - so up here we have to import molten so
13:10 - let's hit command b to build the project
13:16 - okay so I'm getting an error here it
13:19 - says that the bridging header does not
13:21 - exist so it can't find the bridging
13:23 - header so let's take a look at our
13:25 - project folder here's my shopping app
13:28 - project folder and I do see the bridging
13:31 - header in there but upon closer
13:33 - inspection it's looking for that
13:35 - bridging header in the root directory
13:38 - here of my project sees desktop slash
13:41 - shopping app slash bridging header dot h
13:44 - but for me I've got at one level deeper
13:46 - in shopping app and that's my mistake
13:49 - because I added it inside this group
13:51 - right here so there's my bridging header
13:54 - but we can easily fix that if we go back
13:57 - into the build settings and instead of
13:59 - just putting bridging header there
14:01 - let's put shopping app slash bridging
14:07 - header like that now let's press command
14:09 - B and now let's go up to product let's
14:13 - clean it and let's press command B to
14:16 - build it again okay I've got another
14:20 - error so let's see what this is use of
14:22 - unresolved identifier so that was my
14:25 - client key so actually we need to
14:28 - enclose this in quotes because set
14:32 - public ID this method I'm guessing it
14:34 - probably asepsis string right set public
14:38 - ID yeah so it's EPS of string and
14:42 - basically we just have to wrap that key
14:44 - in quotes so now finally let's command B
14:47 - it to build it again
14:48 - and build succeeded so now we're ready
14:52 - to work with the Moulton API in the next
14:55 - lesson when we retrieve all the products
14:57 - and we listed in our table view okay
14:59 - I'll see you in the next lesson and bye
15:00 - for now

Cleaned transcript:

hey coders what's up Chris here with episode 3 of how to make a shopping app in the previous lesson we had registered for a brand new Moulton account we had created and configured our Moulton store and then we had added some test products so that we can retrieve them through the API in our Xcode project in this lesson we're going to create our Xcode project and we're also going to add the Moulton SDK into the project and then connected to our Moulton account that we created in the previous lesson so here I am on the Moulton website and under more you can select getting started which is where I am here if you scroll down you'll see there instructions for iOS let's select Swift and here are some instructions to install the iOS SDK so if you're new to programming SDK just stands for software development kit and essentially it's just a bunch of files or classes that we can include into our Xcode project that is going to help us connect to and work with our Moulton store so there's two ways to include the SDK into your Xcode project one is using a manager called cocoa pods and another one is just downloading the SDK manually and adding it to your Xcode project so I'm going to show you how to setup cocoa pods and then install the Moulton pod but before I do that I just want to let you know what this option entails as well so if you click download the iOS SDK you're going to come to this github repo and if you're not familiar with this website github it's where people can put their code and projects so that other people can download it and use it and also to contribute to it so in this case this github page is showing the moulton iOS SDK and if you've never used to get hub before the easiest thing for you to do is probably just to hit download zip right here and you're going to download the whole SDK as a zip file and then when you finish downloading it just unzip it and then you can drag it into your Xcode project but the better way to do it and the recommended way if we go back here is to use something called cocoa pods the REE is if you do it the manual way where you download the files from github in the future when Moulton updates the SDK you're going to have to manually redownload it again and update your project with it now imagine if you're using multiple github libraries in your Xcode project now maintaining them becomes quite a headache now using something like cocoa pods helps with this what it allows you to do is to have a pod file associated with your project and in that file you specify all of the frameworks and libraries that your project depends on and what version of those libraries and with a simple update command it's gonna go and fetch all of those libraries and make sure it's got the right versions so that you don't have to do that manually now installing cocoa pods is a onetime thing and then for each Xcode project you just have to create a pod file in that projects folder so we'll go through that as well but first of all let's install cocoa pods you're in luck because I just got a brandnew shiny iMac and I don't have cocoa pods installed so we're going to be able to go through that together now alternatively a couple of great guides to install cocoa pods can be found on the official cocoa pod site under guides getting started and then under installation and another great one is on ray Wonderlic site how to use cocoa pods with swift so I'll add these two links in the description below okay so what you're going to do first is open up terminal so you can either press command spacebar and search for terminal and open it up that way or if you go to your launch pad it is I believe in utilities or other sorry and it's this one right here terminal so when you click that it shows a little window like this and all you have to do is type sudo gem install cocoa pods now hit enter and it's going to ask you for your password after you enter in your password it might take a little while to get started as it did for me I had to wait about maybe 40 seconds before I started to see anything on the screen but I just cut out that waiting time in the editing so you didn't see any of it but when it's finished installing you should see something like this the next thing you want to do is type pod setup verbose and that's going to let you see the progress as it's setting things up so with those two commands we are done setting up cocoa pods and if you're not familiar with working in terminal or this kind of looks complicated don't worry because you only need to set up cocoa pods once and then after that as you're going to see soon it's very simple to set up for each new Xcode project that you do now we're going to switch gears and set up our new Xcode project so I'm gonna open up Xcode and we're going to create a new Xcode project here if you don't get this Welcome dialogue just go up to file new project and then we're actually going to create a master detail application so the master side of things is going to show our table view listing all the products and the detail is going to be the product detail so we're gonna start with this and if you don't see any of these options make sure that you're looking under iOS application and you should see the master detail application so I'm gonna call the product name shopping app and make sure that the language is Swift devices is iPhone and you have these unchecked let's click Next and I'm just gonna save it on my desktop okay so now that we have the Xcode project created we're gonna go ahead and close the Xcode project because we're going to go back into terminal and we're going to set up the pod file for it so let's close Xcode there or close the project and this is where you might get a little lost because it might be different for you depending on where you saved your project so I saved my project on the desktop as you can see here so in terminal we need to navigate to that folder and so you're going to need to know a couple of commands but I'm going to run them by you so first of all you can type in LS enter to see which directory you're in right now so here I can see that I have applications creative cloud files desktop documents desktop is the folder I want the these this is listing out all of the folders in this current directory if I open up my finder and I go into Desktop and I press command up I look at my file structure you know I can see all of these folders that are mirrored here and so this folder that I'm in right now is basically my cris folder now if I want to go into the desktop folder you can press CD space and then the folder name like that so now if I hit LS that's listing out all of the files and directories on my desktop and if I go into here you can see that that listing mirrors what I have here now take a look at this folder that's the folder of my Xcode project so I'm gonna go CD shopping app and now I'm inside that folder and here I'm gonna run my pod init command so if I click that this is inside my Xcode project so I'm gonna run by a couple of commands with you so that you can navigate to your own project folder so you learn that LS was to list out the current contents of the directory you learned that CD and then the directory name lets you go into that directory now CD dot dot lets you navigate out of the directory of CD space dot dot rather so now I'm back on my desktop if I hit LS if I go CD dot dot again now I'm back out a level again so now I'm in the cris directory my home folder so depending on what you're seeing in terminal and which directory you're currently and you can use those three commands to navigate to your Xcode project folder depending on where you saved it okay so for me let me go back to my Xcode project folder so CD space desktop and you can even if you know what folder it is you can even specify it like that and start jump directly into desktop slash shopping app so if I hit LS now I'm inside that Xcode project folder okay so inside the project folder I'm going to type in pod init to set up cocoa pods for my project and you can immediately see that pod file here in my project directory so now we open up the pot file with our text editor I wouldn't recommend using TextEdit because it's a rich text editor and it may screw things up if it adds fancy quotes into your pod file so I use something like sublime text so our pod file looks like this what we're going to do is uncomment this line right here we'll change that to nine and also because we're using Swift we're going to uncomment this guy as well just removing the hash sign in front of that line and then in the middle here between the target in the end tags we're gonna type in pod space open up a set of single quotes moulten like that I'm gonna save it I'm gonna close this file and then we're gonna go back to terminal and now I'm gonna type in pod install and what it's going to do is read that pod file and install the dependencies and the libraries that we need okay so now it's done if we go back into our project folder and finder we'll see that now it's got a shopping app dot XC workspace so from this point onwards we want to be opening this file instead of the Xcode project so let's double click the XC workspace file and it's gonna open up Xcode so now we're ready for the next step because the moulton libraries are written in objectivec and this is a Swift project we're going to have to add a bridging header to our project we're going to go to under this folder shopping app I'm gonna rightclick or ctrl left click and let's choose new file and we're gonna select header file under iOS source select the header file you can name it bridging header like I'm doing here let's make sure to include it in this target here let's hit create so in our bridging header we need to specify inside here hash import start an angle bracket and type in molten slash molten dot H and then the closing angle bracket save it and now we have to figure our Xcode project to point to this file as the objectivec bridging header so we're gonna click this node right here go under build settings and let's search for here objective okay I'm not seeing anything but there is a toggle here that says basic and also let's choose all so I think that basic is hiding some of the options so if we type in objective if we scroll down and we look for a swift compiler we're going to see it all the way down here and under objectivec bridging header let's open that up actually we're just going to double click here and let's specify the file bridging header dot H so whether it's a debug or release build we're still going to use bridging header dot H okay and finally we're ready for the last step which is to connect to our Moulton store so here you can see step two is to initialize the Moulton SDK with this line here and here is our store public ID now it's pretty handy they've specified my store ID in here so if you've already set up a store and you're viewing this you should probably have your ID in here as well oh and if you don't know where to get this public ID you can just go to you scroll all the way up to my account and you go to account overview for the store that you set up and you go to API keys it's this one right here named client ID so you can just take that one as well and let's go back to the quick start and then you can put it into this method here I'm gonna copy that we're going to go into the master view controller swift and under the viewdidload we're going to make some space right under the viewdidload and we're gonna add that at this point our class doesn't recognize the molten class so up here we have to import molten so let's hit command b to build the project okay so I'm getting an error here it says that the bridging header does not exist so it can't find the bridging header so let's take a look at our project folder here's my shopping app project folder and I do see the bridging header in there but upon closer inspection it's looking for that bridging header in the root directory here of my project sees desktop slash shopping app slash bridging header dot h but for me I've got at one level deeper in shopping app and that's my mistake because I added it inside this group right here so there's my bridging header but we can easily fix that if we go back into the build settings and instead of just putting bridging header there let's put shopping app slash bridging header like that now let's press command B and now let's go up to product let's clean it and let's press command B to build it again okay I've got another error so let's see what this is use of unresolved identifier so that was my client key so actually we need to enclose this in quotes because set public ID this method I'm guessing it probably asepsis string right set public ID yeah so it's EPS of string and basically we just have to wrap that key in quotes so now finally let's command B it to build it again and build succeeded so now we're ready to work with the Moulton API in the next lesson when we retrieve all the products and we listed in our table view okay I'll see you in the next lesson and bye for now
