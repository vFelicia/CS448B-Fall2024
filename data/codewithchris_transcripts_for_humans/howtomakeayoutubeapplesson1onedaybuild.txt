With timestamps:

00:00 - hey code crew in this one day build app
00:02 - series you're going to learn how to
00:03 - build a YouTube app that lets users
00:05 - watch videos from a YouTube playlist by
00:08 - the end of building this app you'll gain
00:09 - a lot of new skills such as how to work
00:12 - with the YouTube API using iOS
00:13 - networking classes using professional
00:16 - tools such as github and bit rise and a
00:18 - whole lot more about UI construction and
00:20 - Swift programming here's a quick glance
00:22 - at more concepts you'll learn now
00:29 - there's one important thing I have to
00:30 - mention this one day build app series is
00:33 - part of a learning progression and it's
00:35 - meant to be done after the beginner
00:37 - series so if you haven't done that yet
00:39 - scroll down click on code with Chris to
00:42 - visit my channel page and there you'll
00:44 - see the learning path start with the
00:46 - beginner series first and finish that
00:48 - before attempting this one day build
00:50 - otherwise you might be confused okay
00:52 - with that said let's dive right in now
00:55 - here's a high-level overview of the
00:57 - YouTube app that we're going to be
00:58 - building now don't get me wrong this is
01:00 - not a professional architecture diagram
01:02 - but it really does the job and
01:04 - simplifies things so that we can clearly
01:06 - see what components are at play how the
01:08 - data flows from one component to the
01:10 - next and also we can see how the user is
01:13 - going to navigate from screen to screen
01:14 - if it is like a much more complex app
01:17 - then we probably have to get a little
01:19 - more detailed than this so let me just
01:22 - break this down it's pretty
01:23 - straightforward actually we have the
01:25 - YouTube API on this API block up here
01:29 - and we're going to have a model class
01:31 - that is going to request from the API
01:34 - and get back JSON containing all of the
01:37 - videos and all of that data that we need
01:39 - we're gonna parse that data into an
01:41 - array of video objects which we're going
01:44 - to pass back to the view controller to
01:45 - display in a table view now we are going
01:48 - to create a custom table view cell so
01:52 - that we can download the thumbnail we
01:55 - can you know modify and prettify the
01:57 - dates and make sure that it looks the
01:59 - way we want so that's what we're going
02:01 - to do with a custom uitableviewcell
02:04 - when the user taps on one of those cells
02:06 - we're going to pass that selected video
02:07 - over to a detailed view controller where
02:10 - we're going to show the description of
02:12 - the video a thumbnail
02:13 - the video and the user can tap on that
02:14 - thumbnail to then play the video in that
02:17 - detailviewcontroller so that's pretty
02:21 - much it in a nutshell don't be fooled by
02:24 - how simple it is because a lot of the
02:27 - things that you're going to learn from
02:28 - this app is applicable to apps of larger
02:32 - magnitudes just it happens at a larger
02:35 - scale you're gonna learn how to work
02:38 - with api's how to work with json how to
02:41 - do segues from one view controller to
02:44 - the next and pass data from one view
02:46 - controller to the next and there's this
02:49 - is just a really good simple app to
02:51 - learn a lot of very common techniques
02:54 - that you will be using in much more
02:55 - complex apps to come okay so that's the
02:58 - general architecture of the app in the
03:01 - last part of this short introduction I
03:03 - want to go through what to expect in the
03:05 - upcoming lessons lesson one that's this
03:08 - introduction video in lesson two we're
03:10 - going to introduce and set up our tools
03:12 - such as github bit rise and Swift lint
03:14 - in lesson three we're going to set up
03:16 - our Xcode project we're gonna take a
03:18 - look at the YouTube API we're gonna stub
03:20 - out the classes and the structures that
03:22 - we need and we're going to look into
03:24 - downloading the data and setting up a
03:26 - constants file that lesson is going to
03:28 - be packed in Lesson four we're gonna set
03:30 - up the UI and we're going to hook up all
03:32 - of our UI elements establish
03:34 - communication from the model to the view
03:36 - controller through delegation and we're
03:38 - going to display lists of videos as just
03:40 - basic text labels in lesson 5 we're
03:43 - gonna work on the video sell to download
03:45 - and display the thumbnail and then we're
03:47 - gonna have to do some formatting of the
03:49 - date that comes back from the YouTube
03:50 - API so that we can display it in a
03:53 - friendly and pretty format in lesson 6
03:55 - we're going to work on the detailed view
03:57 - controllers so the user can choose a
03:59 - video and they can actually watch it
04:00 - from within the app at this point you
04:02 - have a working YouTube app that displays
04:05 - videos and plays videos from a playlist
04:07 - however there are a couple of additional
04:09 - features that will be available to CWC
04:12 - Plus subscription members we're going to
04:14 - be able to add a tab bar so that we can
04:17 - have a couple of different screens maybe
04:19 - talking about the YouTube or profile
04:21 - having a subscribe button which requires
04:23 - authentic
04:24 - and a deeper YouTube API integration
04:27 - we're also going to allow customization
04:30 - of the channel and the playlists via a
04:33 - configuration file now just a little bit
04:35 - about CWC plus this is our paid
04:37 - membership program where you can access
04:39 - all of our premium training for one low
04:41 - monthly fee you can find out more
04:43 - information about it in the description
04:44 - below or visit code with Chris comm
04:47 - slash courses I hope you're as excited
04:49 - about this as I am the features I listed
04:52 - are just the start if there's a certain
04:54 - feature that you would like to see look
04:55 - at the description below the video for
04:57 - instructions on how to submit feature
04:59 - and tutorial requests now I want to turn
05:01 - it over to you out of all the skills
05:04 - that I mentioned that you'll be learning
05:05 - which one do you anticipate the most let
05:08 - me know by leaving a quick comment below
05:10 - and lastly if you're excited about app
05:12 - development like I am please make sure
05:14 - to give this video a thumbs up and don't
05:17 - forget to subscribe hit that Bell
05:18 - notification icon so you don't miss the
05:21 - next video I appreciate you watching all
05:23 - the way to the end thank you so much and
05:25 - I'll see you in the next lesson

Cleaned transcript:

hey code crew in this one day build app series you're going to learn how to build a YouTube app that lets users watch videos from a YouTube playlist by the end of building this app you'll gain a lot of new skills such as how to work with the YouTube API using iOS networking classes using professional tools such as github and bit rise and a whole lot more about UI construction and Swift programming here's a quick glance at more concepts you'll learn now there's one important thing I have to mention this one day build app series is part of a learning progression and it's meant to be done after the beginner series so if you haven't done that yet scroll down click on code with Chris to visit my channel page and there you'll see the learning path start with the beginner series first and finish that before attempting this one day build otherwise you might be confused okay with that said let's dive right in now here's a highlevel overview of the YouTube app that we're going to be building now don't get me wrong this is not a professional architecture diagram but it really does the job and simplifies things so that we can clearly see what components are at play how the data flows from one component to the next and also we can see how the user is going to navigate from screen to screen if it is like a much more complex app then we probably have to get a little more detailed than this so let me just break this down it's pretty straightforward actually we have the YouTube API on this API block up here and we're going to have a model class that is going to request from the API and get back JSON containing all of the videos and all of that data that we need we're gonna parse that data into an array of video objects which we're going to pass back to the view controller to display in a table view now we are going to create a custom table view cell so that we can download the thumbnail we can you know modify and prettify the dates and make sure that it looks the way we want so that's what we're going to do with a custom uitableviewcell when the user taps on one of those cells we're going to pass that selected video over to a detailed view controller where we're going to show the description of the video a thumbnail the video and the user can tap on that thumbnail to then play the video in that detailviewcontroller so that's pretty much it in a nutshell don't be fooled by how simple it is because a lot of the things that you're going to learn from this app is applicable to apps of larger magnitudes just it happens at a larger scale you're gonna learn how to work with api's how to work with json how to do segues from one view controller to the next and pass data from one view controller to the next and there's this is just a really good simple app to learn a lot of very common techniques that you will be using in much more complex apps to come okay so that's the general architecture of the app in the last part of this short introduction I want to go through what to expect in the upcoming lessons lesson one that's this introduction video in lesson two we're going to introduce and set up our tools such as github bit rise and Swift lint in lesson three we're going to set up our Xcode project we're gonna take a look at the YouTube API we're gonna stub out the classes and the structures that we need and we're going to look into downloading the data and setting up a constants file that lesson is going to be packed in Lesson four we're gonna set up the UI and we're going to hook up all of our UI elements establish communication from the model to the view controller through delegation and we're going to display lists of videos as just basic text labels in lesson 5 we're gonna work on the video sell to download and display the thumbnail and then we're gonna have to do some formatting of the date that comes back from the YouTube API so that we can display it in a friendly and pretty format in lesson 6 we're going to work on the detailed view controllers so the user can choose a video and they can actually watch it from within the app at this point you have a working YouTube app that displays videos and plays videos from a playlist however there are a couple of additional features that will be available to CWC Plus subscription members we're going to be able to add a tab bar so that we can have a couple of different screens maybe talking about the YouTube or profile having a subscribe button which requires authentic and a deeper YouTube API integration we're also going to allow customization of the channel and the playlists via a configuration file now just a little bit about CWC plus this is our paid membership program where you can access all of our premium training for one low monthly fee you can find out more information about it in the description below or visit code with Chris comm slash courses I hope you're as excited about this as I am the features I listed are just the start if there's a certain feature that you would like to see look at the description below the video for instructions on how to submit feature and tutorial requests now I want to turn it over to you out of all the skills that I mentioned that you'll be learning which one do you anticipate the most let me know by leaving a quick comment below and lastly if you're excited about app development like I am please make sure to give this video a thumbs up and don't forget to subscribe hit that Bell notification icon so you don't miss the next video I appreciate you watching all the way to the end thank you so much and I'll see you in the next lesson
