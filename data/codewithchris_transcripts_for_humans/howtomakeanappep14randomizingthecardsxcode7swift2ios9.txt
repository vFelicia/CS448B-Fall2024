With timestamps:

00:04 - hello welcome to lesson 14 of how to
00:07 - make iphone apps with no programming
00:08 - experience in this lesson we are going
00:11 - to hook up our button taps to randomize
00:13 - the card images in our card game before
00:17 - we jump into our Xcode project to do
00:20 - that I've got a playground open and I'm
00:22 - going to show you some of the tools that
00:23 - we're going to use here first so if you
00:27 - forget how to start a playground watch
00:29 - lesson 2 again and once you've got your
00:31 - playground open try to follow along okay
00:33 - so the first thing is how to randomize a
00:36 - number so it's actually really easy to
00:39 - generate a random number you simply use
00:42 - the function arc for random and there's
00:45 - a couple of them but we want to use this
00:47 - one arc for a random underscore uniform
00:50 - and this function accepts an integer so
00:55 - let's say we pass in a hundred so you
00:59 - can see there as soon as I complete it
01:01 - it shows 42 right there let's press
01:05 - ENTER again it refreshes and I've got 52
01:08 - this time I can keep doing it and I'm
01:10 - gonna get a random number each time so
01:14 - you might be wondering where does arc
01:17 - for random come from and how can I just
01:18 - call this random function out of nowhere
01:21 - because it's not associated with any
01:23 - object so it's not an instance method
01:25 - and it's not associated with any class
01:28 - so it's not a type method so what is it
01:31 - well it's part of the standard libraries
01:34 - that are imported as part of UIKit so
01:36 - you'll see that if I comment out uikit
01:40 - there it no longer recognizes this
01:43 - function so in the same way that I can
01:46 - use print line you know to output a
01:50 - string arc for random is just like that
01:55 - and we're going to use this function to
01:58 - generate a random number between 1 which
02:01 - is our ace all the way up to 13 which is
02:05 - our King the thing is though if you put
02:09 - in 13 in here it generates a random
02:12 - number from
02:12 - zero to 12 so actually what we want to
02:16 - do is add one to it and this is actually
02:21 - going to get us random numbers from 1 to
02:24 - 13 so that's the first piece of the
02:31 - puzzle the second thing I want to show
02:34 - you guys is how to create a string that
02:38 - is based on variable so so far when we
02:43 - create strings we've been just opening
02:45 - up two quotes and typing in some text in
02:48 - the middle like this and that works fine
02:51 - but what happens if we want to combine a
02:55 - variable in the string well we can
02:58 - create a new string object by typing
03:01 - string and these two brackets right well
03:05 - that creates an empty string the cool
03:07 - thing about the string class is it also
03:10 - has a custom initializer just like the
03:13 - UI image class which we used in the last
03:16 - lesson and this custom initializer
03:19 - method will allow us to put in part of a
03:21 - string as well as dynamically specify
03:24 - some variables so let's take a look at
03:26 - how that works I'm going to erase these
03:29 - two brackets I'm gonna type in the
03:31 - opening bracket iona type in F because I
03:35 - know the first parameter is format and
03:37 - we're going to use this one right here
03:41 - it's going to pre-fill the parameters
03:44 - for me remember in a method call the
03:48 - first parameter needs to have the label
03:49 - and the following parameters don't so if
03:52 - the first parameter is a string and I'm
03:55 - gonna type in test ok and for the second
04:01 - argument it's basically the variable or
04:04 - a piece of text or whatever data that
04:06 - you want to substitute into the string
04:09 - so for my piece of data
04:12 - let's sub in hello okay well how does it
04:17 - know where to put in hello so my format
04:20 - string needs to have a wildcard
04:21 - character and Hello is going to be it's
04:25 - going to
04:26 - replace the wildcard character so the
04:29 - wildcard character looks like this it's
04:32 - percentage at and now you can see that
04:36 - this string object is test hello now if
04:40 - I put this wildcard character in the
04:43 - middle like that you can see the result
04:47 - is that Hello is substituted into the
04:51 - middle now let's expand on this I can go
04:55 - far some text equals balloon and then
05:05 - instead of this hard-coded string hello
05:08 - I can put some text like that and now
05:12 - you can see that the string object in
05:16 - this variable is inserted into the
05:19 - middle of my format string like that so
05:24 - maybe now you can begin to see where
05:26 - we're getting with this because we named
05:29 - all of the image assets in our Xcode
05:31 - project according to card one car to car
05:34 - three and so on and so forth right so we
05:37 - can actually do something like this card
05:41 - and then put percentage at and then this
05:46 - would dynamically give us card plus some
05:49 - number if we take this randomizing
05:53 - function and we put it in here we change
05:59 - some text to random number and then we
06:05 - replace that so it's gonna substitute
06:08 - random number to the end of this format
06:11 - string it's complaining right now
06:13 - because percentage ad is actually the
06:16 - wild card character for four strings so
06:20 - because random number is actually an int
06:23 - what we need is percentage I we're
06:28 - probably going to be using this string
06:30 - initializer method a lot to create
06:33 - dynamic strings so you can see here that
06:37 - the result of the
06:39 - two lines of code is this card six if I
06:44 - press ENTER now two card thirteen so
06:51 - this is the combination that we're going
06:55 - to use to randomize a number and then
06:58 - create a string for it that will
07:01 - represent one of the assets in our
07:04 - projects asset library so now let's go
07:08 - into our Xcode project and implement
07:10 - these two pieces of code okay so here
07:14 - I've got our Xcode project open where we
07:17 - left off last time and let's go into the
07:21 - view controller got swift into the play
07:23 - round attempt now right here we've got
07:26 - two lines of code changing the
07:29 - uiimageview image property to different
07:34 - images so we know card one is our ace
07:36 - and card eleven is our Jack so instead
07:39 - of hard-coding this I basically want to
07:42 - do what we did in the playground
07:44 - randomize a number create a string off
07:48 - of that number and substitute that into
07:50 - here and here and so each time we tap
07:55 - the play button it's going to run this
07:57 - method and it's going to randomize it's
08:00 - basically gonna change the image views
08:02 - to two random cards okay so let's do
08:06 - that so we can go VAR first random
08:14 - number equals arc for random uniform 13
08:23 - plus 1 and this will give us a random
08:27 - number from 1 to 13 next we want to
08:31 - create a string off of that so I'm gonna
08:34 - save our first card string
08:41 - I'm just gonna label it string equals
08:46 - new string object using the format
08:49 - initializer that we just learned so I'm
08:52 - gonna write card percentage I I'm gonna
08:57 - press tab and here I'm just gonna pass
08:59 - in first random number which is the
09:06 - variable here so what I end up with is a
09:09 - piece of is a string a piece of text
09:12 - that's going to be card plus my random
09:15 - number and then all I need to do is
09:19 - instead of putting card one here I'm
09:23 - gonna erase that hard-coded string and
09:25 - put in first card string right so just
09:31 - like that it's going to give me a random
09:34 - card so I'm gonna run it to demonstrate
09:46 - okay so I'm gonna tap play now and our
09:49 - code is gonna get executed now each time
09:52 - we tap it it's going to randomize to a
09:57 - different number now we just got to do
10:01 - that same thing for the second card okay
10:05 - so now that we're beginning to write
10:07 - more code I want to introduce you to the
10:09 - practice of writing comments and
10:11 - documenting your code and comments are
10:13 - basically just these green statements
10:15 - right here they're not really code and
10:17 - they don't get executed but they're
10:19 - there to serve as documentation for your
10:22 - code both for yourself and for other
10:24 - people who read your code it's gonna
10:27 - make it a lot easier for them to
10:28 - understand what you're trying to do and
10:30 - when you revisit this code in the future
10:33 - believe me you won't remember right now
10:35 - when you're writing it you know exactly
10:37 - what's going on and what what you're
10:39 - trying to do but in the future when you
10:41 - read your code again after several
10:43 - months you'll have to relearn everything
10:45 - and reread everything and re understand
10:48 - everything unless you have some
10:50 - documentation or comments it makes it
10:52 - that much more easy so in order to start
10:56 - a comment all you have to do is do two
10:59 - slashes like that and when you do that
11:02 - anything you type after those two
11:04 - slashes is considered a comment and
11:06 - won't get executed so here I'm going to
11:08 - say randomize a number for the first
11:16 - image view right here
11:24 - construct a string with the random
11:29 - number in here I'm going to write set
11:33 - the first card image view to the asset
11:41 - corresponding to the randomized number
11:48 - another thing that commenting is good
11:51 - for is just temporarily commenting out a
11:54 - piece of code so for example if I didn't
11:57 - want to change my second card view in
11:59 - this method I could simply put two
12:02 - slashes like that in front of it and
12:04 - that would prevent this line of code
12:06 - from executing without having to delete
12:08 - the entire line because I could bring it
12:10 - back just by going like that and erasing
12:12 - the two slashes so it's a good way to
12:15 - temporarily disable a line of code when
12:18 - we get to debugging this can be a good
12:21 - thing to try if you're suspecting that
12:23 - this line of code is causing problems
12:25 - you can temporarily comment it out and
12:28 - then run your app see if the problem
12:30 - occurs and stuff like that so if you've
12:33 - got a big block of code there's another
12:34 - way to write a comment because doing
12:37 - these two slashes will just comment out
12:38 - that line but if you want to comment out
12:40 - a big block of code what you can do is
12:44 - do a slash star and then star slash like
12:51 - that and anything in between these two
12:54 - characters will be considered comments
12:58 - and won't get executed so just I'm just
13:01 - gonna undo that and you can see here
13:05 - that I'm putting a white space in
13:06 - between each line you know you you could
13:10 - do it like this there's no problem with
13:11 - that but it's just less readable it
13:15 - increases readability when you add some
13:18 - white space in your code okay so now I
13:22 - want to basically randomize another
13:24 - number for my second card image view so
13:29 - I'm going to create another variable
13:32 - second random number
13:36 - basically do the same thing randomize a
13:46 - number for the second image view
13:53 - construct a string with the random
13:57 - number VAR second card string and the
14:06 - first time you do this you probably
14:09 - won't be typing as fast as I am but you
14:13 - know by the end of the course if you
14:15 - keep practicing alongside using these
14:17 - methods and typing this code will seem
14:20 - like second nature to you so now I want
14:23 - to pass in the second random number and
14:28 - then here instead of this hard coded
14:30 - card 11 I want to pass in the second
14:36 - card string set the second card image
14:42 - view to the set corresponding to the
14:48 - randomized number okay gonna run it now
14:54 - if everything goes well I should be able
14:58 - to get two random cards each time I
15:00 - press the play button
15:10 - okay this is really great so we're on
15:13 - our way one last thing I want to mention
15:16 - before we go are these Xcode warnings
15:18 - telling us that this variable was never
15:21 - mutated consider changing to a let
15:24 - constant so we've been using var and a
15:28 - variable name to declare a variable and
15:30 - we're setting a value into that variable
15:32 - well with a variable we can always
15:36 - assign a different value into that
15:38 - variable and overwrite what was
15:40 - previously there if we change this var
15:43 - to a let keyword instead it's still a
15:47 - variable so first random number will
15:49 - still reference whatever value you put
15:52 - in there but let is a constant meaning
15:55 - that you won't be able to assign another
15:58 - value into that variable or that
16:01 - constant after you set the first value
16:03 - into it so let is good for when you want
16:07 - your constant to hold a value that isn't
16:11 - going to change which is why the name is
16:14 - constant but if you're gonna have a
16:16 - variable which you're going to
16:18 - constantly be changing its values then
16:21 - you would want to use var and this is
16:23 - something we're going to go through in
16:25 - more detail in the future and this Xcode
16:28 - warning right here is just an
16:30 - optimization that's telling you that hey
16:32 - I've detected that you'd never change
16:35 - the value in first card string other
16:37 - than the first time you assigned it so
16:39 - why not use let and that's valid when
16:43 - you're coding it might be a little hard
16:45 - to have that foresight to think whether
16:47 - you should use let or you use var so
16:49 - there's no harm in starting with var and
16:51 - once you finish coding up your method
16:54 - and you realize that you never have to
16:57 - change the value in that variable
16:58 - anymore
16:59 - then Xcode is gonna let you know that
17:01 - maybe you should use let so you can just
17:03 - change all of these to let like that and
17:07 - it's going to get rid of the Xcode
17:09 - warning so that's a little bonus tip now
17:12 - you know the difference between a
17:13 - variable and a constant
17:16 - you

Cleaned transcript:

hello welcome to lesson 14 of how to make iphone apps with no programming experience in this lesson we are going to hook up our button taps to randomize the card images in our card game before we jump into our Xcode project to do that I've got a playground open and I'm going to show you some of the tools that we're going to use here first so if you forget how to start a playground watch lesson 2 again and once you've got your playground open try to follow along okay so the first thing is how to randomize a number so it's actually really easy to generate a random number you simply use the function arc for random and there's a couple of them but we want to use this one arc for a random underscore uniform and this function accepts an integer so let's say we pass in a hundred so you can see there as soon as I complete it it shows 42 right there let's press ENTER again it refreshes and I've got 52 this time I can keep doing it and I'm gonna get a random number each time so you might be wondering where does arc for random come from and how can I just call this random function out of nowhere because it's not associated with any object so it's not an instance method and it's not associated with any class so it's not a type method so what is it well it's part of the standard libraries that are imported as part of UIKit so you'll see that if I comment out uikit there it no longer recognizes this function so in the same way that I can use print line you know to output a string arc for random is just like that and we're going to use this function to generate a random number between 1 which is our ace all the way up to 13 which is our King the thing is though if you put in 13 in here it generates a random number from zero to 12 so actually what we want to do is add one to it and this is actually going to get us random numbers from 1 to 13 so that's the first piece of the puzzle the second thing I want to show you guys is how to create a string that is based on variable so so far when we create strings we've been just opening up two quotes and typing in some text in the middle like this and that works fine but what happens if we want to combine a variable in the string well we can create a new string object by typing string and these two brackets right well that creates an empty string the cool thing about the string class is it also has a custom initializer just like the UI image class which we used in the last lesson and this custom initializer method will allow us to put in part of a string as well as dynamically specify some variables so let's take a look at how that works I'm going to erase these two brackets I'm gonna type in the opening bracket iona type in F because I know the first parameter is format and we're going to use this one right here it's going to prefill the parameters for me remember in a method call the first parameter needs to have the label and the following parameters don't so if the first parameter is a string and I'm gonna type in test ok and for the second argument it's basically the variable or a piece of text or whatever data that you want to substitute into the string so for my piece of data let's sub in hello okay well how does it know where to put in hello so my format string needs to have a wildcard character and Hello is going to be it's going to replace the wildcard character so the wildcard character looks like this it's percentage at and now you can see that this string object is test hello now if I put this wildcard character in the middle like that you can see the result is that Hello is substituted into the middle now let's expand on this I can go far some text equals balloon and then instead of this hardcoded string hello I can put some text like that and now you can see that the string object in this variable is inserted into the middle of my format string like that so maybe now you can begin to see where we're getting with this because we named all of the image assets in our Xcode project according to card one car to car three and so on and so forth right so we can actually do something like this card and then put percentage at and then this would dynamically give us card plus some number if we take this randomizing function and we put it in here we change some text to random number and then we replace that so it's gonna substitute random number to the end of this format string it's complaining right now because percentage ad is actually the wild card character for four strings so because random number is actually an int what we need is percentage I we're probably going to be using this string initializer method a lot to create dynamic strings so you can see here that the result of the two lines of code is this card six if I press ENTER now two card thirteen so this is the combination that we're going to use to randomize a number and then create a string for it that will represent one of the assets in our projects asset library so now let's go into our Xcode project and implement these two pieces of code okay so here I've got our Xcode project open where we left off last time and let's go into the view controller got swift into the play round attempt now right here we've got two lines of code changing the uiimageview image property to different images so we know card one is our ace and card eleven is our Jack so instead of hardcoding this I basically want to do what we did in the playground randomize a number create a string off of that number and substitute that into here and here and so each time we tap the play button it's going to run this method and it's going to randomize it's basically gonna change the image views to two random cards okay so let's do that so we can go VAR first random number equals arc for random uniform 13 plus 1 and this will give us a random number from 1 to 13 next we want to create a string off of that so I'm gonna save our first card string I'm just gonna label it string equals new string object using the format initializer that we just learned so I'm gonna write card percentage I I'm gonna press tab and here I'm just gonna pass in first random number which is the variable here so what I end up with is a piece of is a string a piece of text that's going to be card plus my random number and then all I need to do is instead of putting card one here I'm gonna erase that hardcoded string and put in first card string right so just like that it's going to give me a random card so I'm gonna run it to demonstrate okay so I'm gonna tap play now and our code is gonna get executed now each time we tap it it's going to randomize to a different number now we just got to do that same thing for the second card okay so now that we're beginning to write more code I want to introduce you to the practice of writing comments and documenting your code and comments are basically just these green statements right here they're not really code and they don't get executed but they're there to serve as documentation for your code both for yourself and for other people who read your code it's gonna make it a lot easier for them to understand what you're trying to do and when you revisit this code in the future believe me you won't remember right now when you're writing it you know exactly what's going on and what what you're trying to do but in the future when you read your code again after several months you'll have to relearn everything and reread everything and re understand everything unless you have some documentation or comments it makes it that much more easy so in order to start a comment all you have to do is do two slashes like that and when you do that anything you type after those two slashes is considered a comment and won't get executed so here I'm going to say randomize a number for the first image view right here construct a string with the random number in here I'm going to write set the first card image view to the asset corresponding to the randomized number another thing that commenting is good for is just temporarily commenting out a piece of code so for example if I didn't want to change my second card view in this method I could simply put two slashes like that in front of it and that would prevent this line of code from executing without having to delete the entire line because I could bring it back just by going like that and erasing the two slashes so it's a good way to temporarily disable a line of code when we get to debugging this can be a good thing to try if you're suspecting that this line of code is causing problems you can temporarily comment it out and then run your app see if the problem occurs and stuff like that so if you've got a big block of code there's another way to write a comment because doing these two slashes will just comment out that line but if you want to comment out a big block of code what you can do is do a slash star and then star slash like that and anything in between these two characters will be considered comments and won't get executed so just I'm just gonna undo that and you can see here that I'm putting a white space in between each line you know you you could do it like this there's no problem with that but it's just less readable it increases readability when you add some white space in your code okay so now I want to basically randomize another number for my second card image view so I'm going to create another variable second random number basically do the same thing randomize a number for the second image view construct a string with the random number VAR second card string and the first time you do this you probably won't be typing as fast as I am but you know by the end of the course if you keep practicing alongside using these methods and typing this code will seem like second nature to you so now I want to pass in the second random number and then here instead of this hard coded card 11 I want to pass in the second card string set the second card image view to the set corresponding to the randomized number okay gonna run it now if everything goes well I should be able to get two random cards each time I press the play button okay this is really great so we're on our way one last thing I want to mention before we go are these Xcode warnings telling us that this variable was never mutated consider changing to a let constant so we've been using var and a variable name to declare a variable and we're setting a value into that variable well with a variable we can always assign a different value into that variable and overwrite what was previously there if we change this var to a let keyword instead it's still a variable so first random number will still reference whatever value you put in there but let is a constant meaning that you won't be able to assign another value into that variable or that constant after you set the first value into it so let is good for when you want your constant to hold a value that isn't going to change which is why the name is constant but if you're gonna have a variable which you're going to constantly be changing its values then you would want to use var and this is something we're going to go through in more detail in the future and this Xcode warning right here is just an optimization that's telling you that hey I've detected that you'd never change the value in first card string other than the first time you assigned it so why not use let and that's valid when you're coding it might be a little hard to have that foresight to think whether you should use let or you use var so there's no harm in starting with var and once you finish coding up your method and you realize that you never have to change the value in that variable anymore then Xcode is gonna let you know that maybe you should use let so you can just change all of these to let like that and it's going to get rid of the Xcode warning so that's a little bonus tip now you know the difference between a variable and a constant you
