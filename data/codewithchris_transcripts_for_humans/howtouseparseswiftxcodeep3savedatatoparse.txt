With timestamps:

00:01 - hey coders how's it going it's Chris
00:04 - here and today we're going to look at
00:06 - saving and retrieving some data from our
00:09 - parse back end from the Xcode project so
00:12 - just to give you a quick recap in the
00:14 - last lesson we had created a parse demo
00:18 - sample application so just ignore all of
00:20 - these other things down here this is the
00:22 - one that we created parse demo if you
00:25 - click into it we don't have any data in
00:27 - here but we're going to be able to see
00:29 - some really soon so let's go ahead and
00:32 - open up the Xcode project which we
00:34 - created in the last lesson we had also
00:36 - integrated the parse library so let me
00:39 - open up that XC workspace file and here
00:43 - we go we added this code to set the
00:45 - application ID in the client key now in
00:47 - the view controller I'm gonna show you
00:49 - how to save an object first and before
00:53 - we do anything let's import parse up
00:55 - here and then in the viewdidload I'm
00:57 - just going to write save an object with
01:02 - some properties and parse everything
01:06 - revolves around something called a PF
01:08 - object so say for example this was an
01:11 - address book application and I wanted to
01:13 - save some information on a friend well I
01:16 - would create a PF object like this so
01:18 - let friend equals PF object and there's
01:24 - an initializer called class name and I'm
01:28 - going to give it a class this is going
01:30 - to be stored in the parse back end with
01:33 - this class name and all objects with
01:35 - this class name are going to be stored
01:36 - together so let me give you an example
01:38 - so let's say friend the the class name
01:41 - is let's say contact okay and I'm going
01:45 - to say friend and I'm going to give it a
01:49 - property name how first name actually
01:51 - like that equals John and another one
01:57 - last name equals Smith
02:01 - and let's say email is John Smith at
02:11 - parse example.com now what I've done
02:16 - here is create a brand new PF object
02:19 - with the class name contact and then
02:22 - I've set a couple of properties just
02:24 - like a dictionary so I gave it a key
02:26 - first name assign the value to it give
02:28 - it another key last name assign the
02:30 - value to it and all this stuff here so
02:33 - I've got this PF object with these
02:34 - things set now if I want it to save it
02:37 - into the back end all I would do is I
02:39 - would call friend and it has a method
02:42 - save right it can either call save and
02:46 - this will synchronously save and throw
02:48 - an error if I can't perform the save and
02:51 - synchronously means that it's gonna
02:53 - pause the execution of everything while
02:55 - it's trying to save but what we probably
02:57 - want to do is save in the background
02:59 - instead so you can see here it saves it
03:02 - as synchronously so we can either just
03:04 - call save and background and not worry
03:06 - about it or we can call save in
03:07 - background with block and this is gonna
03:09 - allow us to handle the result of the
03:11 - save whether it's successful or it
03:13 - failed there's another one called save
03:15 - eventually and as you can read here
03:18 - it saves the object to the server at
03:20 - some unspecified time in the future so
03:23 - even if parse is currently inaccessible
03:24 - so save eventually is okay if you don't
03:28 - need that data saved right away and the
03:31 - benefit is that if the user doesn't have
03:33 - an internet connection at the moment
03:35 - when the user does and they're running
03:37 - the app then it will save it at that
03:39 - point so right now I'm gonna do save and
03:42 - background with block I'm going to
03:44 - double click this block to open it up
03:46 - there are two parameters one is a
03:48 - boolean and one is an error so this one
03:50 - is just this boolean determines if it's
03:55 - successful or not and this error if it
03:59 - isn't successful will contain an error
04:01 - message so inside this block this block
04:04 - of code after it saves we can say if
04:07 - successful
04:10 - the save worked else it failed to save
04:18 - so we can execute some code in either
04:20 - case like this so take a note that this
04:22 - code is running in the viewdidload
04:24 - of the view controller so as soon as I
04:26 - run the app like I'm going to do right
04:28 - now it's gonna perform this code you
04:31 - know create this contact it's going to
04:34 - save it in the background so let me just
04:36 - run the project and then we'll take a
04:37 - look at our parse back-end to see if the
04:40 - data saved so we're not gonna see
04:42 - anything visually on the view because we
04:45 - we didn't say anything like that we
04:47 - probably should have put a print
04:49 - statement in here to know if it worked
04:51 - or not so right now we can't tell but
04:53 - let's check the backend and we should be
04:55 - able to see something so I'm on the
04:57 - parse back-end for the demo app that I
05:00 - created says we have no classes let me
05:03 - refresh it and we should see that one
05:06 - here right if you take a look at the
05:07 - left first you can see contact is this
05:11 - new kind of datastore that we have and
05:13 - this name for this store corresponds to
05:16 - the class name that we gave in here all
05:21 - right so so it's not like a traditional
05:23 - database where we have to create our
05:24 - database tables first in a traditional
05:27 - let's say MySQL database we would
05:30 - probably have had to create a contact
05:32 - table and then we would have to create
05:34 - columns like email first name last name
05:36 - stuff like that but with parse if you
05:39 - try to save something under contact and
05:41 - you know you have these properties and
05:43 - it doesn't detect that you have that in
05:46 - your back-end it's just going to create
05:47 - it for you
05:48 - so that could be handy and it also could
05:50 - be messy if you don't know what you're
05:51 - doing or you know you make a typo or
05:53 - something like that so you have to be
05:55 - careful so right here we seek in the
05:57 - email that we saved we see the first
05:59 - name and the last name now if I went
06:00 - back into my Xcode project and I change
06:03 - this class name to lets say friendly
06:07 - contact or something like that if I ran
06:09 - this code again it would detect that hey
06:12 - we don't have a store for this class
06:14 - friendly contact so it's gonna create
06:16 - another one it's gonna create another
06:18 - store called friendly contact and then
06:20 - it'll have a single row there but
06:23 - if I you know keep the class name
06:26 - contact but this time just change it to
06:27 - something like Tommy Smith and then I
06:31 - run this again then instead it's going
06:34 - to add this row of data into the same
06:39 - table or same store like that see so now
06:44 - I have two rows of data
06:45 - now each parse object has an ID and this
06:48 - is automatically generated when you save
06:50 - the object before we end this lesson
06:52 - there's one more thing I want to point
06:53 - out and it's if you click these three
06:55 - dots and you go to Doc's and under iOS
06:59 - go to guide there's some good
07:01 - information on what we just talked about
07:03 - so scroll down you can read this stuff
07:06 - on your own time and it would be really
07:08 - great to know if you're working with
07:10 - parse but what we covered today in this
07:12 - lesson is basically this section here
07:14 - the PF object it tells you about the
07:16 - parse object and we also went through
07:19 - this saving objects note that the code
07:22 - by default is in objective-c but there
07:24 - is a toggle to toggle all the code to
07:26 - Swift so you can just click this little
07:28 - button here and you can see the Swift
07:30 - equivalent so in the following lesson
07:31 - we're going to talk about retrieving the
07:33 - objects from our data store so thanks
07:36 - for watching and please like the video
07:37 - subscribe if you haven't and please
07:39 - share it with your friends if you found
07:40 - it useful
07:41 - thank you so much and I'll see you guys
07:42 - tomorrow bye
07:49 - you

Cleaned transcript:

hey coders how's it going it's Chris here and today we're going to look at saving and retrieving some data from our parse back end from the Xcode project so just to give you a quick recap in the last lesson we had created a parse demo sample application so just ignore all of these other things down here this is the one that we created parse demo if you click into it we don't have any data in here but we're going to be able to see some really soon so let's go ahead and open up the Xcode project which we created in the last lesson we had also integrated the parse library so let me open up that XC workspace file and here we go we added this code to set the application ID in the client key now in the view controller I'm gonna show you how to save an object first and before we do anything let's import parse up here and then in the viewdidload I'm just going to write save an object with some properties and parse everything revolves around something called a PF object so say for example this was an address book application and I wanted to save some information on a friend well I would create a PF object like this so let friend equals PF object and there's an initializer called class name and I'm going to give it a class this is going to be stored in the parse back end with this class name and all objects with this class name are going to be stored together so let me give you an example so let's say friend the the class name is let's say contact okay and I'm going to say friend and I'm going to give it a property name how first name actually like that equals John and another one last name equals Smith and let's say email is John Smith at parse example.com now what I've done here is create a brand new PF object with the class name contact and then I've set a couple of properties just like a dictionary so I gave it a key first name assign the value to it give it another key last name assign the value to it and all this stuff here so I've got this PF object with these things set now if I want it to save it into the back end all I would do is I would call friend and it has a method save right it can either call save and this will synchronously save and throw an error if I can't perform the save and synchronously means that it's gonna pause the execution of everything while it's trying to save but what we probably want to do is save in the background instead so you can see here it saves it as synchronously so we can either just call save and background and not worry about it or we can call save in background with block and this is gonna allow us to handle the result of the save whether it's successful or it failed there's another one called save eventually and as you can read here it saves the object to the server at some unspecified time in the future so even if parse is currently inaccessible so save eventually is okay if you don't need that data saved right away and the benefit is that if the user doesn't have an internet connection at the moment when the user does and they're running the app then it will save it at that point so right now I'm gonna do save and background with block I'm going to double click this block to open it up there are two parameters one is a boolean and one is an error so this one is just this boolean determines if it's successful or not and this error if it isn't successful will contain an error message so inside this block this block of code after it saves we can say if successful the save worked else it failed to save so we can execute some code in either case like this so take a note that this code is running in the viewdidload of the view controller so as soon as I run the app like I'm going to do right now it's gonna perform this code you know create this contact it's going to save it in the background so let me just run the project and then we'll take a look at our parse backend to see if the data saved so we're not gonna see anything visually on the view because we we didn't say anything like that we probably should have put a print statement in here to know if it worked or not so right now we can't tell but let's check the backend and we should be able to see something so I'm on the parse backend for the demo app that I created says we have no classes let me refresh it and we should see that one here right if you take a look at the left first you can see contact is this new kind of datastore that we have and this name for this store corresponds to the class name that we gave in here all right so so it's not like a traditional database where we have to create our database tables first in a traditional let's say MySQL database we would probably have had to create a contact table and then we would have to create columns like email first name last name stuff like that but with parse if you try to save something under contact and you know you have these properties and it doesn't detect that you have that in your backend it's just going to create it for you so that could be handy and it also could be messy if you don't know what you're doing or you know you make a typo or something like that so you have to be careful so right here we seek in the email that we saved we see the first name and the last name now if I went back into my Xcode project and I change this class name to lets say friendly contact or something like that if I ran this code again it would detect that hey we don't have a store for this class friendly contact so it's gonna create another one it's gonna create another store called friendly contact and then it'll have a single row there but if I you know keep the class name contact but this time just change it to something like Tommy Smith and then I run this again then instead it's going to add this row of data into the same table or same store like that see so now I have two rows of data now each parse object has an ID and this is automatically generated when you save the object before we end this lesson there's one more thing I want to point out and it's if you click these three dots and you go to Doc's and under iOS go to guide there's some good information on what we just talked about so scroll down you can read this stuff on your own time and it would be really great to know if you're working with parse but what we covered today in this lesson is basically this section here the PF object it tells you about the parse object and we also went through this saving objects note that the code by default is in objectivec but there is a toggle to toggle all the code to Swift so you can just click this little button here and you can see the Swift equivalent so in the following lesson we're going to talk about retrieving the objects from our data store so thanks for watching and please like the video subscribe if you haven't and please share it with your friends if you found it useful thank you so much and I'll see you guys tomorrow bye you
