With timestamps:

00:00 - firestore is a free remote database solution 
for your mobile app with a database for your  
00:05 - app you can do cool things like user account 
creation saving user generated content  
00:11 - and even having data sync across apps this video 
is part one in a series to teach you how to use  
00:17 - firestore database with your ios app in this 
video you'll learn how to set up your firestore  
00:22 - database instance you'll also learn how to 
add the firebase sdk to your xcode project  
00:27 - and if you're a m1 mac user we have some special 
tips for you as well by the end of this tutorial  
00:33 - you'll be ready to harness the power of Firestore 
database hey code crew if you're new here my name  
00:39 - is chris and welcome to code with chris the 
place to be if you want to learn how to code  
00:44 - and how to build apps if you're just starting 
out on your app journey check out the 14 day  
00:48 - beginner challenge right there there's a whole 
community of people in our code crew forum going  
00:52 - through that app journey right now all right 
with that said let's dive into today's topic  
00:59 - first let's take a look at the bigger picture 
here's how your app is going to interact with  
01:03 - the firestore database first of all firebase is a 
platform that you can go and create a project on  
01:09 - when you do that you'll get your own firebase 
project which also has a firestore database  
01:14 - your firestore database is in the cloud so that 
your data is accessible from anywhere as long as  
01:19 - you have the address to the database those details 
are stored in a configuration file called the  
01:24 - google service service-info.plist file and yes in 
case you didn't know firebase is owned by google  
01:31 - next you have your xcode project which you're 
planning to use with your firestore database  
01:35 - so in order for your xcode project to know where 
to read data from and to write data to it needs to  
01:42 - know the address of your database and that's where 
that configuration file comes in you drag and drop  
01:47 - that configuration file into your xcode project 
and now it has the details to connect to your  
01:52 - firestore database all right so now your xcode 
project knows where your database is but how do  
01:58 - you actually write the swift code to interact with 
it such as reading data from it writing data to it  
02:05 - well firebase has made that easy for us by writing 
all the code already for us and giving us a bunch  
02:12 - of classes that we can use we just have to supply 
the data that we want to put into the database  
02:17 - or maybe the query if we're trying to retrieve 
data from it oh and we also have to handle any  
02:24 - potential errors as well in part two of 
this series you'll learn to do all of that  
02:29 - for now we're interested in adding these firebase 
classes to our xcode project so we can use them to  
02:35 - interact with our firestore database these classes 
are collectively known as the firebase sdk now  
02:42 - there are a couple of ways to add the firebase sdk 
to your xcode project but in this tutorial we'll  
02:48 - be using cocoapods which is a sort of manager 
that helps us add and manage third-party libraries  
02:54 - with our xcode project this is by far the most 
popular choice if you already have cocoapods  
02:59 - installed on your system great if not we'll walk 
through how to set that up on your system as well  
03:06 - so that's at a high level how firebase 
works firebase is known as a backend as  
03:11 - a service and that means that a lot of the 
infrastructure and nitty gritty details of  
03:15 - database management and setup are handled for 
you things like load balancing and database  
03:21 - replication are all invisible to you and all 
you need to care about is your data and your app  
03:26 - now the other nice thing about firebase 
is that it's got a bunch of other services  
03:30 - that you can use in addition to firestore things 
like analytics messaging authentication and more  
03:36 - so if one of these features catches your eye 
and you are interested in learning more about  
03:42 - it and you'd like me to create a tutorial for 
it drop me a comment below the last thing i want  
03:46 - to mention is that we can use all of these 
things for free until we hit bigger numbers  
03:50 - all right let's dive into how to set 
up firestore database for our ios app  
03:56 - now we're going to start off by creating 
a brand new xcode project so here i've  
04:00 - got xcode open under ios i'm going to choose 
app and i'm going to call this firestore demo
04:10 - that's fine firestore demo interfaces 
swift ui lifecycle is swift ui app  
04:15 - language is swift and you can leave 
core data and include tests unchecked  
04:20 - so we're going to save this on my desktop right 
here and what's important to note what you're  
04:26 - going to need in order to set up your firebase 
project is going to be this bundle identifier here  
04:33 - next we're going to go to firebase.google.com 
and set up our firebase project  
04:38 - so here i'm at firebase.google.com and you need to 
sign in with a google account so if you don't have  
04:45 - one you can go ahead and create one it's free 
if you're already signed in you'll probably see  
04:49 - your face up here next you can either click this 
get started button or go to console so i'll just  
04:54 - click on that and that's going to bring you to 
your dashboard where you see all of your previous  
04:59 - projects for me i've got a bunch so what we're 
going to do is create a brand new project for  
05:04 - this demo so go ahead add project and we're just 
going to say i'm going to call it test project and  
05:14 - let's continue now here you have the option of 
adding google analytics for your firebase project  
05:19 - which is handy if you are planning to 
actually submit this into the app store  
05:24 - however for this demo i am not going to enable 
that so we'll just create project and it'll take  
05:32 - less than a minute to create your project alright 
so we use some editing magic to speed that up on  
05:38 - our end let's go ahead and click continue now 
the next thing you want to do is to click on  
05:44 - this ios button because you can use firebase 
for other platforms as well such as web and  
05:49 - android and even unity and on the left hand side 
you'll see all of these different services that  
05:56 - firebase provides like we mentioned before it 
provides a lot more than just firestore database  
06:03 - but first before we get too far ahead of 
ourselves let's click on ios this is where  
06:10 - we're going to put in our bundle id 
that you saw from the xcode project so  
06:14 - go ahead and grab it from your project 
that you just created so i'm going to  
06:19 - copy that i'll paste it in here you don't 
have to fill these in let's register our app
06:29 - and next we get to download our configuration 
file remember from our overview that  
06:34 - this file contains the address and the details 
for our app to make a connection to this database  
06:41 - so as it tells you right here after 
we download this file we drag and  
06:45 - drop it into our xcode project so let's go 
ahead and do that let's click this button
06:52 - we're going to i actually already have one on my 
desktop so i am going to maybe i'll just save it  
07:01 - in my apps folder so i can differentiate between 
the two and then we're going to open up our xcode  
07:09 - project and we're going to find that file that we 
just downloaded so for me i saved it in my apps  
07:15 - folder i'm going to drag it and drop it right 
below my info.plist doesn't really matter where  
07:21 - you drag and drop it into i just like putting it 
there do make sure that copy items if needed is  
07:28 - checked though because what that's going to do 
is create a copy of the google service info plist  
07:35 - into your project folder as well and 
make sure add to targets is also checked  
07:40 - which is going to make sure that that p list 
gets included in your app bundle so click finish  
07:46 - so by doing that i can delete it from wherever 
i saved it because it's made a copy of it in my  
07:52 - project folder already if by deleting that this 
turns red meaning it can't find it anymore that  
07:59 - means that you probably didn't have the copy 
items of checked enabled in that case just uh  
08:05 - just delete that red entry and then restore it 
from your trash bin and just re-drag it in there  
08:12 - all right so we are going to save the project and 
then we are actually going to go ahead and close  
08:17 - this xcode project because we won't be needing 
it for now and we're going to continue with  
08:23 - our configuration and setup let's go ahead and 
click on next we're going to add the firebase sdk  
08:30 - now these are the instructions for cocoapods 
there are a couple of other options like i said  
08:36 - but by far the most popular is going to be 
cocoapods right now at the time of this recording  
08:42 - and if you don't have it installed on your system 
we are going to walk through the steps to install  
08:48 - it right now and there are some additional steps 
for m1 mac users if you already have cocoa pods  
08:54 - installed then you can go ahead and skip this 
section and go on to the next where we actually  
09:00 - uh use cocoapods to install the firebase sdk there 
are going to be timestamps in the description  
09:05 - below so if you already have cocoapods installed 
on your system you can skip right ahead to the  
09:10 - section titled add the firebase sdk to xcode now 
if you're not sure if you have cocoapods installed  
09:17 - or not there's an easy way to check so go ahead 
and open spotlight search type in terminal  
09:24 - if you've never done that before it's command 
spacebar to open up this little dialog  
09:28 - and just type in terminal and you can open up 
this little app right here where you can key in  
09:34 - commands for your mac so you type in pod space 
dash dash version and it's going to tell you if  
09:43 - it's installed or not if it's not installed you 
probably won't see a version number right there  
09:48 - so what i'm going to do right now is go ahead and 
uninstall my version of cocoapods so that we can
09:55 - uninstall
09:57 - cocoapods right so we can try pod dash dash 
version again and it says command not found  
10:10 - so it's not installed okay so for those of us 
who don't have it installed let's go ahead and  
10:15 - click on this cocoapods link which is 
i'm going to open this in a new window  
10:20 - or you can just visit cocoapods.org and you'll see 
how to install it so it's very easy it's just sudo  
10:26 - gem install cocoapods and again you run this in 
this terminal window so again to launch terminal  
10:35 - you can either find it you can actually find it 
in your applications if you go into utilities  
10:41 - you'll find terminal right there okay 
so let's go ahead sudo gem install  
10:49 - cocoapods like that and even if you already have 
cocoapods installed and you run this command  
10:55 - it's not going to blow up your system or 
anything like that in fact it will update  
11:00 - your cocoapods all right and that's how easy it is 
to install cocoapods next let's see how we use it  
11:08 - alright let's go back to our firebase setup 
instructions right here and we still need  
11:14 - to use terminal right here to write these 
commands here we're going to navigate to our  
11:20 - project directory through terminal so once again 
let's open up terminal and i'm going to show you  
11:26 - some commands here so that you can navigate around 
uh first type in pwd and that's going to tell you  
11:33 - what directory is you're currently in imagine 
that this terminal window is just like a finder  
11:41 - window so you're looking at a specific folder and 
typing pwd shows you what folder you're looking at  
11:51 - the command ls tells you what is in 
that folder right so if i navigate  
11:58 - this is the same folder the chris i'm in users 
chris ls lists the same thing here it's just  
12:06 - um this is a graphical interface and this is 
a command line interface so it really depends  
12:11 - where you saved your project for me i saved it on 
my desktop right so i would want to click into my  
12:17 - desktop and to simulate that in the terminal 
i type cd space the folder name uh and that  
12:26 - will actually go into the directory so make sure 
it's case sensitive so i if i say cd.desktop then
12:37 - okay i stand corrected it's not 
case sensitive but um if you want to  
12:46 - i guess i was talking about this tab button that 
i'm used to doing so if you want auto complete  
12:51 - let's say you don't want to type in the whole 
word you can type in the first couple of letters  
12:56 - and press tab and it will automatically try 
to detect which folder you're referring to in  
13:02 - this case that wasn't a very good demonstration 
because i have actually if i go back so going  
13:10 - back a directory is cd space dot dot and if 
i type in pwd again i'm back in users chris
13:19 - all right so if i type cd space 
d e just d is fine if i press tab  
13:26 - that's going to complete it for 
me so i don't have to type it out  
13:30 - and now i am in my desktop folder pwd shows 
me that i'm at user's chris desktop okay next  
13:37 - let's see what's in here so i see my project 
folder right there firebase demo so i'm gonna  
13:43 - do cd space fire and press tab and that's going to 
auto-complete or you can just type it all out and  
13:50 - remember a cd is to sort of go into the directory 
press enter and now i am in that directory  
13:57 - so that's equivalent of seeing this if i hit 
ls those are exactly the two files that i  
14:03 - see right here okay so it's inside your project 
directory that you type in this command pod init  
14:12 - pod space init and that what that's going to do 
is create this new file so inside this pod file  
14:21 - is where we specify the firebase sdk and any other 
third-party libraries that we want to add to xcode  
14:29 - and then we save our edits to this 
file we just open it up in a text pad  
14:35 - right a text edit and then we we add whatever 
library names we want there we save this file  
14:42 - and then we run pod install and cocoapods 
is going to go and fetch and download those  
14:48 - sdks and third-party libraries and include it with 
our xcode project so let's close this pod file  
14:55 - for now and take a look at what pods are available 
like what libraries are available for firebase sdk  
15:03 - because the firebase sdk comprises of all of 
the classes to interact with all of the services  
15:10 - that firebase provides like the analytics the the 
messaging uh the the a b testing all that stuff  
15:19 - we don't need all of the classes so let's go ahead 
and open up this url in a separate browser window  
15:27 - and we get a list of available classes for us to 
use so what we are actually interested in and is  
15:35 - this one right here so where you're going to use 
firestore right take a look at all of the other  
15:41 - libraries that you can add we don't we don't need 
any of this stuff we don't want to add all of it  
15:46 - so go ahead and copy this pod firebase firestore 
you you need these single quotes as well so make  
15:52 - sure you got the single quote at the end and now 
we go back to this pod file right click it just  
15:58 - open it in a text edit and let's put it right 
there make sure you save the file close it and  
16:06 - then we can go ahead and come back here in your 
terminal window type in pod install and that's it
16:18 - now you should be seeing what i'm seeing and it 
actually might take your system a while longer if  
16:23 - it's never done this before because then it it 
doesn't have any cached versions and if you're  
16:29 - running on an m1 mac you might experience some 
errors as well and that's completely normal will  
16:36 - tell you how to get through those errors right now 
if you're not running on an m1 mac you can go on  
16:42 - and skip to the next section for creating a 
firestore database again there's timestamps below  
16:48 - so you can go ahead and click on that timestamp 
or create a firestore database or you can probably  
16:53 - just skip ahead a couple of minutes however if 
you did encounter errors here and you're you are  
16:58 - on an m1 mac then you'll want to listen to these 
tips if you're using cocoapods on an m1 mac and  
17:06 - on that step you're trying to install cocoapods 
doing a pod install and you get errors like this  
17:13 - saying missing compatible architecture then you're 
going to want to run through these quick tips here  
17:20 - now first of all googling m1 mac with cocoapods 
gives you a lot of different stack over flow  
17:27 - threads and github issue threads where people 
are trying different things and having different  
17:34 - solutions that work for them but perhaps the 
simplest read that i found is this blog article  
17:41 - which i'll link to in the description below and 
so we're going to run through these simple steps  
17:46 - and this worked for me as well so first of all 
we're going to find a terminal in finder and i  
17:52 - mentioned before that if you go into applications 
and you go into utilities you're going to find  
17:58 - terminal so the next step number two right click 
and get info and it says open using rosetta  
18:05 - and this is going to allow you to acts like 
a bridge allowing you to use older apps  
18:12 - that are meant for intel based processors on apple 
m1 silicon so we are going to close that and then  
18:21 - we're going to go on to step three which is then 
to open up terminal so i'm going to make sure i  
18:26 - have terminal closed first so go ahead and quit 
terminal and then reopen it now that you have that  
18:35 - that open rosetta checked all right so make sure 
you quit terminal and get out of it first okay so  
18:41 - here we're going to type sudo gem install ffi all 
right so that took about maybe 30 seconds but we  
18:48 - used movie magic and skipped it after you get here 
we're on step four again we're gonna reinstall  
18:57 - cocoapods all right then after that it says 
we can uncheck open using rosetta so i'm  
19:06 - completely gonna quit out of terminal again so 
command q quit out of that right click get info  
19:14 - and then uncheck that and then open this again  
19:19 - so then we should be able to well i didn't have 
the error before so i don't know if this is a real
19:29 - a real good test but if you were having the error 
before hopefully following these steps now typing  
19:36 - in pod install you're going to be able to complete 
it successfully okay so now that we're all on the  
19:44 - same page whether you are using an m1 mac or 
not we have to finish off the installation or  
19:50 - the setup process here so we've ran pod install 
successfully the next thing this is a tiny line i  
19:58 - i feel like they should highlight this a lot 
more but whenever you use cocoapods what happens  
20:04 - if we just navigate quickly back to our directory 
after you run pod install it's downloaded all  
20:11 - of those third-party libraries that you 
need in here now i know we only specified  
20:17 - the firebase firestore library you might be 
wondering why you have all these other things here  
20:24 - and that's because this library depends on 
those things so it also grabbed those libraries  
20:32 - now the reason why i asked you to quit xcode 
earlier on is because now from this point forward  
20:39 - we do not open this as our xcode project we open 
this workspace that was newly generated because  
20:48 - if you open up this one and i'll show you what 
happens you don't get the pods included or you're  
20:54 - not going to see those libraries which you are 
looking for so if you open this one xc workspace  
21:02 - you're going to see that this workspace actually 
contains two xcode targets you could say so  
21:10 - this one was your original app and this one 
contains all of the libraries that you just  
21:16 - downloaded so you want to make sure that you're 
looking at and you have open the xc workspace  
21:23 - file instead and that's what it mentions down here 
okay so let's go ahead and click next and we have  
21:30 - two lines of code that we need to add into our 
xcode project to connect to our database and set  
21:37 - up you know just do those initial configuration 
steps so that we can get ready to use it  
21:44 - one is import firebase which means that 
you are going to be using the firebase  
21:49 - framework so you can actually access all 
of those classes in firebase the second one  
21:54 - is just calling firebase app configure if you do 
not have this import firebase statement it's not  
22:01 - going to recognize this class name right here 
so let's go into our xcode project and do this  
22:08 - if we go and the place we do this is here in 
firestore underscore demo app so first thing  
22:15 - you're going to do is import firebase 
now if it doesn't recognize firebase or  
22:23 - it's telling you that this doesn't exist double 
check that you are using your xc workspace file  
22:30 - that you have you know this pods target down here 
and the other thing is that sometimes xcode just  
22:37 - needs some time to catch up right so you can just 
ignore this for now it's when you try to build  
22:43 - your project and it doesn't build complaining 
that it can't find the firebase classes that's  
22:49 - when you've got a real problem so we can just 
leave that import firebase there the second thing  
22:55 - here is this isn't a swift ui project so you might 
not see this app delegate and did finish launching  
23:02 - and you're going to wonder where you put this 
line of code right so in swift ui what you can do  
23:10 - inside here make sure it's inside the actual 
struct right here you're going to write an init  
23:19 - method like that and that's where you're gonna 
put your line of code so let's go back here  
23:25 - and copy that and then we're gonna paste it in 
there okay and now we're gonna try to build it  
23:32 - so press command b now this may take a while um 
because it's compiling all of those libraries  
23:39 - for the first time that we downloaded so it could 
take up to a few minutes so just be patient here  
23:47 - again we're going to use movie magic 
and we're going to speed this up  
23:51 - all right so my build succeeded i hope yours did 
as well so at this point in time we have finished  
23:57 - with the setup there's no more steps here and we 
are going to continue to our console now if again  
24:05 - if you had some build errors i would just double 
check that you are opening your xc workspace file  
24:12 - and that you have the proper pod installed 
which was you know this one right here and  
24:18 - that your cocoapod installation didn't fail 
all right so coming back to our project here  
24:24 - now we can set up our firestore database 
so on the left hand side right here  
24:29 - go ahead and click that now we're going to click 
on the create database button and we're going to  
24:34 - start in we're going to start in test mode which 
means that anybody is going to be allowed to read  
24:41 - and write data to and from your database 
as long as they have the address to it and  
24:46 - before you launch you'll definitely want 
to flip into production mode which is going  
24:51 - you're going to have to write some rules as to 
who is able to write data to your database and  
24:57 - you'll probably pair this with an account creation 
system and only have your authenticated users be  
25:02 - able to write data but however in test mode we're 
going to leave it at this so that it's open so  
25:09 - it's easier for us to demo and do our tests with 
however do note that this only lasts for 30 days  
25:17 - and at that time they're going to 
they're going to revoke this open access  
25:25 - so we're going to click next and we're 
going to choose a region so i would just  
25:29 - choose the region that's closest to you i'm 
just going to leave it there and hit enable  
25:34 - all right so here is our brand new 
firestore database that is empty  
25:39 - now in part 2 of this series we'll i'll 
explain to you how the data is organized  
25:43 - and how we write to it and how we read to 
it but at this point our setup is complete
25:49 - all right well you've set up a firestore database 
for your swift ui app in part two of this series  
25:55 - we'll show you how to read and write data to your 
new database that video is coming out on september  
26:00 - 15th if by the time you're watching this it's past 
that date well keep watching and i'll link to it  
26:05 - in the end screen of this video i want to do a 
quick shout out to my cwc plus program because in  
26:11 - there we have a swift ui databases course where we 
build full-fledged apps using firestore database  
26:17 - as well as core data so definitely check that 
out if you're interested lastly if you enjoy this  
26:22 - video you want to see more please don't hesitate 
to give this video a thumbs up and subscribe  
26:26 - to the channel as always thank you so much for 
watching this video i'll see you in the next one

Cleaned transcript:

firestore is a free remote database solution for your mobile app with a database for your app you can do cool things like user account creation saving user generated content and even having data sync across apps this video is part one in a series to teach you how to use firestore database with your ios app in this video you'll learn how to set up your firestore database instance you'll also learn how to add the firebase sdk to your xcode project and if you're a m1 mac user we have some special tips for you as well by the end of this tutorial you'll be ready to harness the power of Firestore database hey code crew if you're new here my name is chris and welcome to code with chris the place to be if you want to learn how to code and how to build apps if you're just starting out on your app journey check out the 14 day beginner challenge right there there's a whole community of people in our code crew forum going through that app journey right now all right with that said let's dive into today's topic first let's take a look at the bigger picture here's how your app is going to interact with the firestore database first of all firebase is a platform that you can go and create a project on when you do that you'll get your own firebase project which also has a firestore database your firestore database is in the cloud so that your data is accessible from anywhere as long as you have the address to the database those details are stored in a configuration file called the google service serviceinfo.plist file and yes in case you didn't know firebase is owned by google next you have your xcode project which you're planning to use with your firestore database so in order for your xcode project to know where to read data from and to write data to it needs to know the address of your database and that's where that configuration file comes in you drag and drop that configuration file into your xcode project and now it has the details to connect to your firestore database all right so now your xcode project knows where your database is but how do you actually write the swift code to interact with it such as reading data from it writing data to it well firebase has made that easy for us by writing all the code already for us and giving us a bunch of classes that we can use we just have to supply the data that we want to put into the database or maybe the query if we're trying to retrieve data from it oh and we also have to handle any potential errors as well in part two of this series you'll learn to do all of that for now we're interested in adding these firebase classes to our xcode project so we can use them to interact with our firestore database these classes are collectively known as the firebase sdk now there are a couple of ways to add the firebase sdk to your xcode project but in this tutorial we'll be using cocoapods which is a sort of manager that helps us add and manage thirdparty libraries with our xcode project this is by far the most popular choice if you already have cocoapods installed on your system great if not we'll walk through how to set that up on your system as well so that's at a high level how firebase works firebase is known as a backend as a service and that means that a lot of the infrastructure and nitty gritty details of database management and setup are handled for you things like load balancing and database replication are all invisible to you and all you need to care about is your data and your app now the other nice thing about firebase is that it's got a bunch of other services that you can use in addition to firestore things like analytics messaging authentication and more so if one of these features catches your eye and you are interested in learning more about it and you'd like me to create a tutorial for it drop me a comment below the last thing i want to mention is that we can use all of these things for free until we hit bigger numbers all right let's dive into how to set up firestore database for our ios app now we're going to start off by creating a brand new xcode project so here i've got xcode open under ios i'm going to choose app and i'm going to call this firestore demo that's fine firestore demo interfaces swift ui lifecycle is swift ui app language is swift and you can leave core data and include tests unchecked so we're going to save this on my desktop right here and what's important to note what you're going to need in order to set up your firebase project is going to be this bundle identifier here next we're going to go to firebase.google.com and set up our firebase project so here i'm at firebase.google.com and you need to sign in with a google account so if you don't have one you can go ahead and create one it's free if you're already signed in you'll probably see your face up here next you can either click this get started button or go to console so i'll just click on that and that's going to bring you to your dashboard where you see all of your previous projects for me i've got a bunch so what we're going to do is create a brand new project for this demo so go ahead add project and we're just going to say i'm going to call it test project and let's continue now here you have the option of adding google analytics for your firebase project which is handy if you are planning to actually submit this into the app store however for this demo i am not going to enable that so we'll just create project and it'll take less than a minute to create your project alright so we use some editing magic to speed that up on our end let's go ahead and click continue now the next thing you want to do is to click on this ios button because you can use firebase for other platforms as well such as web and android and even unity and on the left hand side you'll see all of these different services that firebase provides like we mentioned before it provides a lot more than just firestore database but first before we get too far ahead of ourselves let's click on ios this is where we're going to put in our bundle id that you saw from the xcode project so go ahead and grab it from your project that you just created so i'm going to copy that i'll paste it in here you don't have to fill these in let's register our app and next we get to download our configuration file remember from our overview that this file contains the address and the details for our app to make a connection to this database so as it tells you right here after we download this file we drag and drop it into our xcode project so let's go ahead and do that let's click this button we're going to i actually already have one on my desktop so i am going to maybe i'll just save it in my apps folder so i can differentiate between the two and then we're going to open up our xcode project and we're going to find that file that we just downloaded so for me i saved it in my apps folder i'm going to drag it and drop it right below my info.plist doesn't really matter where you drag and drop it into i just like putting it there do make sure that copy items if needed is checked though because what that's going to do is create a copy of the google service info plist into your project folder as well and make sure add to targets is also checked which is going to make sure that that p list gets included in your app bundle so click finish so by doing that i can delete it from wherever i saved it because it's made a copy of it in my project folder already if by deleting that this turns red meaning it can't find it anymore that means that you probably didn't have the copy items of checked enabled in that case just uh just delete that red entry and then restore it from your trash bin and just redrag it in there all right so we are going to save the project and then we are actually going to go ahead and close this xcode project because we won't be needing it for now and we're going to continue with our configuration and setup let's go ahead and click on next we're going to add the firebase sdk now these are the instructions for cocoapods there are a couple of other options like i said but by far the most popular is going to be cocoapods right now at the time of this recording and if you don't have it installed on your system we are going to walk through the steps to install it right now and there are some additional steps for m1 mac users if you already have cocoa pods installed then you can go ahead and skip this section and go on to the next where we actually uh use cocoapods to install the firebase sdk there are going to be timestamps in the description below so if you already have cocoapods installed on your system you can skip right ahead to the section titled add the firebase sdk to xcode now if you're not sure if you have cocoapods installed or not there's an easy way to check so go ahead and open spotlight search type in terminal if you've never done that before it's command spacebar to open up this little dialog and just type in terminal and you can open up this little app right here where you can key in commands for your mac so you type in pod space dash dash version and it's going to tell you if it's installed or not if it's not installed you probably won't see a version number right there so what i'm going to do right now is go ahead and uninstall my version of cocoapods so that we can uninstall cocoapods right so we can try pod dash dash version again and it says command not found so it's not installed okay so for those of us who don't have it installed let's go ahead and click on this cocoapods link which is i'm going to open this in a new window or you can just visit cocoapods.org and you'll see how to install it so it's very easy it's just sudo gem install cocoapods and again you run this in this terminal window so again to launch terminal you can either find it you can actually find it in your applications if you go into utilities you'll find terminal right there okay so let's go ahead sudo gem install cocoapods like that and even if you already have cocoapods installed and you run this command it's not going to blow up your system or anything like that in fact it will update your cocoapods all right and that's how easy it is to install cocoapods next let's see how we use it alright let's go back to our firebase setup instructions right here and we still need to use terminal right here to write these commands here we're going to navigate to our project directory through terminal so once again let's open up terminal and i'm going to show you some commands here so that you can navigate around uh first type in pwd and that's going to tell you what directory is you're currently in imagine that this terminal window is just like a finder window so you're looking at a specific folder and typing pwd shows you what folder you're looking at the command ls tells you what is in that folder right so if i navigate this is the same folder the chris i'm in users chris ls lists the same thing here it's just um this is a graphical interface and this is a command line interface so it really depends where you saved your project for me i saved it on my desktop right so i would want to click into my desktop and to simulate that in the terminal i type cd space the folder name uh and that will actually go into the directory so make sure it's case sensitive so i if i say cd.desktop then okay i stand corrected it's not case sensitive but um if you want to i guess i was talking about this tab button that i'm used to doing so if you want auto complete let's say you don't want to type in the whole word you can type in the first couple of letters and press tab and it will automatically try to detect which folder you're referring to in this case that wasn't a very good demonstration because i have actually if i go back so going back a directory is cd space dot dot and if i type in pwd again i'm back in users chris all right so if i type cd space d e just d is fine if i press tab that's going to complete it for me so i don't have to type it out and now i am in my desktop folder pwd shows me that i'm at user's chris desktop okay next let's see what's in here so i see my project folder right there firebase demo so i'm gonna do cd space fire and press tab and that's going to autocomplete or you can just type it all out and remember a cd is to sort of go into the directory press enter and now i am in that directory so that's equivalent of seeing this if i hit ls those are exactly the two files that i see right here okay so it's inside your project directory that you type in this command pod init pod space init and that what that's going to do is create this new file so inside this pod file is where we specify the firebase sdk and any other thirdparty libraries that we want to add to xcode and then we save our edits to this file we just open it up in a text pad right a text edit and then we we add whatever library names we want there we save this file and then we run pod install and cocoapods is going to go and fetch and download those sdks and thirdparty libraries and include it with our xcode project so let's close this pod file for now and take a look at what pods are available like what libraries are available for firebase sdk because the firebase sdk comprises of all of the classes to interact with all of the services that firebase provides like the analytics the the messaging uh the the a b testing all that stuff we don't need all of the classes so let's go ahead and open up this url in a separate browser window and we get a list of available classes for us to use so what we are actually interested in and is this one right here so where you're going to use firestore right take a look at all of the other libraries that you can add we don't we don't need any of this stuff we don't want to add all of it so go ahead and copy this pod firebase firestore you you need these single quotes as well so make sure you got the single quote at the end and now we go back to this pod file right click it just open it in a text edit and let's put it right there make sure you save the file close it and then we can go ahead and come back here in your terminal window type in pod install and that's it now you should be seeing what i'm seeing and it actually might take your system a while longer if it's never done this before because then it it doesn't have any cached versions and if you're running on an m1 mac you might experience some errors as well and that's completely normal will tell you how to get through those errors right now if you're not running on an m1 mac you can go on and skip to the next section for creating a firestore database again there's timestamps below so you can go ahead and click on that timestamp or create a firestore database or you can probably just skip ahead a couple of minutes however if you did encounter errors here and you're you are on an m1 mac then you'll want to listen to these tips if you're using cocoapods on an m1 mac and on that step you're trying to install cocoapods doing a pod install and you get errors like this saying missing compatible architecture then you're going to want to run through these quick tips here now first of all googling m1 mac with cocoapods gives you a lot of different stack over flow threads and github issue threads where people are trying different things and having different solutions that work for them but perhaps the simplest read that i found is this blog article which i'll link to in the description below and so we're going to run through these simple steps and this worked for me as well so first of all we're going to find a terminal in finder and i mentioned before that if you go into applications and you go into utilities you're going to find terminal so the next step number two right click and get info and it says open using rosetta and this is going to allow you to acts like a bridge allowing you to use older apps that are meant for intel based processors on apple m1 silicon so we are going to close that and then we're going to go on to step three which is then to open up terminal so i'm going to make sure i have terminal closed first so go ahead and quit terminal and then reopen it now that you have that that open rosetta checked all right so make sure you quit terminal and get out of it first okay so here we're going to type sudo gem install ffi all right so that took about maybe 30 seconds but we used movie magic and skipped it after you get here we're on step four again we're gonna reinstall cocoapods all right then after that it says we can uncheck open using rosetta so i'm completely gonna quit out of terminal again so command q quit out of that right click get info and then uncheck that and then open this again so then we should be able to well i didn't have the error before so i don't know if this is a real a real good test but if you were having the error before hopefully following these steps now typing in pod install you're going to be able to complete it successfully okay so now that we're all on the same page whether you are using an m1 mac or not we have to finish off the installation or the setup process here so we've ran pod install successfully the next thing this is a tiny line i i feel like they should highlight this a lot more but whenever you use cocoapods what happens if we just navigate quickly back to our directory after you run pod install it's downloaded all of those thirdparty libraries that you need in here now i know we only specified the firebase firestore library you might be wondering why you have all these other things here and that's because this library depends on those things so it also grabbed those libraries now the reason why i asked you to quit xcode earlier on is because now from this point forward we do not open this as our xcode project we open this workspace that was newly generated because if you open up this one and i'll show you what happens you don't get the pods included or you're not going to see those libraries which you are looking for so if you open this one xc workspace you're going to see that this workspace actually contains two xcode targets you could say so this one was your original app and this one contains all of the libraries that you just downloaded so you want to make sure that you're looking at and you have open the xc workspace file instead and that's what it mentions down here okay so let's go ahead and click next and we have two lines of code that we need to add into our xcode project to connect to our database and set up you know just do those initial configuration steps so that we can get ready to use it one is import firebase which means that you are going to be using the firebase framework so you can actually access all of those classes in firebase the second one is just calling firebase app configure if you do not have this import firebase statement it's not going to recognize this class name right here so let's go into our xcode project and do this if we go and the place we do this is here in firestore underscore demo app so first thing you're going to do is import firebase now if it doesn't recognize firebase or it's telling you that this doesn't exist double check that you are using your xc workspace file that you have you know this pods target down here and the other thing is that sometimes xcode just needs some time to catch up right so you can just ignore this for now it's when you try to build your project and it doesn't build complaining that it can't find the firebase classes that's when you've got a real problem so we can just leave that import firebase there the second thing here is this isn't a swift ui project so you might not see this app delegate and did finish launching and you're going to wonder where you put this line of code right so in swift ui what you can do inside here make sure it's inside the actual struct right here you're going to write an init method like that and that's where you're gonna put your line of code so let's go back here and copy that and then we're gonna paste it in there okay and now we're gonna try to build it so press command b now this may take a while um because it's compiling all of those libraries for the first time that we downloaded so it could take up to a few minutes so just be patient here again we're going to use movie magic and we're going to speed this up all right so my build succeeded i hope yours did as well so at this point in time we have finished with the setup there's no more steps here and we are going to continue to our console now if again if you had some build errors i would just double check that you are opening your xc workspace file and that you have the proper pod installed which was you know this one right here and that your cocoapod installation didn't fail all right so coming back to our project here now we can set up our firestore database so on the left hand side right here go ahead and click that now we're going to click on the create database button and we're going to start in we're going to start in test mode which means that anybody is going to be allowed to read and write data to and from your database as long as they have the address to it and before you launch you'll definitely want to flip into production mode which is going you're going to have to write some rules as to who is able to write data to your database and you'll probably pair this with an account creation system and only have your authenticated users be able to write data but however in test mode we're going to leave it at this so that it's open so it's easier for us to demo and do our tests with however do note that this only lasts for 30 days and at that time they're going to they're going to revoke this open access so we're going to click next and we're going to choose a region so i would just choose the region that's closest to you i'm just going to leave it there and hit enable all right so here is our brand new firestore database that is empty now in part 2 of this series we'll i'll explain to you how the data is organized and how we write to it and how we read to it but at this point our setup is complete all right well you've set up a firestore database for your swift ui app in part two of this series we'll show you how to read and write data to your new database that video is coming out on september 15th if by the time you're watching this it's past that date well keep watching and i'll link to it in the end screen of this video i want to do a quick shout out to my cwc plus program because in there we have a swift ui databases course where we build fullfledged apps using firestore database as well as core data so definitely check that out if you're interested lastly if you enjoy this video you want to see more please don't hesitate to give this video a thumbs up and subscribe to the channel as always thank you so much for watching this video i'll see you in the next one
