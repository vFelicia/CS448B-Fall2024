With timestamps:

00:04 - hello welcome to lesson 12 of how to
00:07 - make iphone apps with no programming
00:08 - experience in this lesson we are going
00:11 - to hook up our button taps to randomize
00:13 - the card images in our card game before
00:17 - we jump into our Xcode project to do
00:20 - that I've got a playground open and I'm
00:22 - going to show you some of the tools that
00:23 - we're going to use here first so if you
00:27 - forget how to start a playground watch
00:29 - lesson 2 again and once you've got your
00:31 - playground open try to follow along okay
00:33 - so the first thing is how to randomize a
00:36 - number so it's actually really easy to
00:39 - generate a random number you simply use
00:42 - the function arc for random and there's
00:45 - a couple of them but we want to use this
00:47 - one arc for random underscore uniform
00:50 - and this function accepts an integer so
00:55 - let's say we pass in 100 so you can see
01:00 - there as soon as I complete it
01:01 - it shows 40 right there let me just make
01:06 - this one a little more narrow just press
01:09 - ENTER again it refreshes and I've got 11
01:12 - this time I can keep doing it and I'm
01:15 - gonna get a random number each time so
01:18 - you might be wondering where does arc
01:21 - four random come from and how can I just
01:23 - call this random function out of nowhere
01:25 - because it's not associated with any
01:27 - object so it's not an instance method
01:30 - and it's not associated with any class
01:32 - so it's not a type method so what is it
01:36 - well it's part of the standard libraries
01:38 - that are imported as part of UIKit so
01:41 - you'll see that if I comment out uikit
01:44 - there it no longer recognizes this
01:47 - function so in the same way that I can
01:50 - use print line you know to output a
01:54 - string arc for random is just like that
02:00 - and we're going to use this function to
02:02 - generate a random number between 1 which
02:05 - is our ace all the way up to 13 which is
02:09 - our King the thing is though
02:13 - if you put in 13 in here it generates a
02:15 - random number from zero to 12 so
02:19 - actually what we want to do is add one
02:22 - to it and this is actually going to get
02:26 - us random numbers from 1 to 13 so that's
02:34 - the first piece of the puzzle the second
02:38 - thing I want to show you guys is how to
02:41 - create a string that is based on a
02:43 - variable so so far when we create
02:48 - strings we've been just opening up two
02:50 - quotes and typing in some text in the
02:53 - middle like this and that works fine but
02:56 - what happens if we want to combine a
02:59 - variable in the string well we can
03:03 - create a new string object by typing
03:05 - string and these two brackets right well
03:09 - that creates an empty string the cool
03:12 - thing about the string class is it also
03:14 - has a custom initializer just like the
03:17 - UI image class which we used in the last
03:20 - lesson and this custom initializer
03:23 - method will allow us to put in part of a
03:25 - string as well as dynamically specify
03:28 - some variables so let's take a look at
03:30 - how that works I'm going to erase these
03:33 - two brackets I'm going to type in the
03:36 - opening bracket Ayana type in F because
03:39 - I know the first parameter is format and
03:41 - we're going to use this one right here
03:45 - it's going to pre-fill the parameters
03:48 - for me remember in a method call the
03:52 - first parameter needs to have the label
03:54 - and the following parameters don't so if
03:56 - the first parameter is a string and I'm
03:59 - going to type in test okay and for the
04:05 - second argument it's basically the
04:07 - variable or a piece of text or whatever
04:10 - data that you want to substitute into
04:12 - the string so for my piece of data
04:16 - let's sub in hello okay well how does it
04:21 - know where to put in hello so my format
04:24 - string needs to have a wild-card care
04:26 - and hello is going to be it's going to
04:30 - replace the wild-card character so the
04:33 - wild-card character looks like this it's
04:36 - percentage at and now you can see that
04:40 - this string object is test hello now if
04:45 - I put this wildcard character in the
04:48 - middle like that you can see the result
04:52 - is that Hello is substituted into the
04:55 - middle now let's expand on this I can go
04:59 - VAR some text equals balloon and then
05:09 - instead of this hard-coded string hello
05:12 - I can put some text like that and now
05:16 - you can see that the string object in
05:20 - this variable is inserted into the
05:23 - middle of my format string like that so
05:29 - maybe now you can begin to see where
05:31 - we're getting with this because we named
05:33 - all of the image assets in our Xcode
05:35 - project according to card one car to car
05:38 - three and so on and so forth right so we
05:42 - can actually do something like this
05:44 - card and then put percentage at and then
05:50 - this will dynamically give us card plus
05:53 - some number if we take this randomizing
05:58 - function and we put it in here we change
06:03 - some text to random number and then we
06:09 - replace that so it's going to substitute
06:12 - random number to the end of this format
06:16 - string it's complaining right now
06:18 - because percentage ad is actually the
06:20 - wild card character for four strings so
06:24 - because random number is actually an int
06:27 - what we need is percentage I we're
06:32 - probably going to be using this string
06:35 - initializer method a lot to create
06:38 - dynamic strings
06:39 - you can see here that the result of
06:43 - these two lines of code is this card 3
06:47 - if I press ENTER now it's card 12 so
06:56 - this is the combination that we're going
06:59 - to use to randomize a number and then
07:02 - create a string for it that will
07:05 - represent one of the assets in our
07:08 - projects asset library so now let's go
07:12 - into our Xcode project and implement
07:15 - these two pieces of code ok so here I've
07:19 - got our Xcode project open where we left
07:22 - off last time and let's go into the view
07:25 - controller dot Swift into the play round
07:28 - attempt now right here we've got two
07:31 - lines of code changing the uiimageview
07:35 - image property to different images so we
07:39 - know card one is our ace and card 11 is
07:42 - our Jack so instead of hard-coding this
07:45 - I basically want to do what we did in
07:48 - the playground randomize the number
07:50 - create a string off of that number and
07:53 - substitute that into here and here and
07:56 - so each time we tap the play button it's
08:00 - going to run this method and it's going
08:03 - to randomize it's basically going to
08:05 - change the image views to two random
08:07 - cards ok so let's do that so we can go
08:12 - VAR first random number equals arc for
08:23 - random uniform 13 plus 1 and this will
08:30 - give us a random number from 1 to 13
08:34 - next we want to create a string off of
08:37 - that so I'm going to save our first card
08:41 - string
08:45 - I'm just going to label it string equals
08:50 - new string object using the format
08:53 - initializer that we just learned so I'm
08:57 - going to write card percentage I I'm
09:01 - going to press tab and here I'm just
09:03 - going to pass in first random number
09:07 - which is the variable here so what I end
09:12 - up with is a piece of is a string a
09:15 - piece of text that's going to be card
09:18 - plus my random number and then all I
09:21 - need to do is instead of putting card 1
09:26 - here I'm going to erase that hard-coded
09:28 - string and put in first card string
09:34 - right so just like that it's going to
09:37 - give me a random card so I'm going to
09:39 - run it to demonstrate
09:50 - okay so I'm going to tap play now and
09:53 - our code is going to get executed so it
09:58 - happens that this card randomized to an
10:02 - ace it looks like you know I had to
10:05 - double check because we had hard-coded
10:07 - it to an ace but maybe it was just it
10:09 - randomly picked an ace let's press it
10:11 - again to randomize another card okay and
10:13 - there we go
10:14 - it was just a coincidence that it was an
10:16 - ace now each time we tap it it's going
10:20 - to randomize to a different number now
10:25 - we just got to do that same thing for
10:28 - the second card okay so now that we're
10:32 - beginning to write more code I want to
10:33 - introduce you to the practice of writing
10:35 - comments and documenting your code and
10:38 - comments are basically just these green
10:40 - statements right here they're not really
10:42 - code and they don't get executed but
10:45 - they're there to serve as documentation
10:47 - for your code both for yourself and for
10:50 - other people who read your code it's
10:52 - going to make it a lot easier for them
10:54 - to understand what you're trying to do
10:55 - and when you revisit this code in the
10:58 - future believe me you won't remember
11:00 - right now when you're writing it you
11:02 - know exactly what's going on and what
11:04 - what you're trying to do but in the
11:06 - future when you read your code again
11:07 - after several months you'll have to
11:10 - relearn everything and reread everything
11:12 - and re understand everything unless you
11:15 - have some documentation or comments it
11:17 - makes it that much more easy so in order
11:20 - to start a comment all you have to do is
11:23 - do two slashes like that and when you do
11:27 - that anything you type after those two
11:30 - slashes is considered a comment and
11:32 - won't get executed so here I'm going to
11:34 - say a mise a number for the first image
11:43 - view
11:46 - right here construct a string with the
11:54 - random number in here I'm going to write
11:58 - set the first card image view to the
12:04 - asset corresponding to the randomized
12:10 - number
12:13 - another thing that commenting is good
12:16 - for is just temporarily commenting out a
12:20 - piece of code so for example if I didn't
12:23 - want to change my second card view in
12:25 - this method I could simply put two
12:28 - slashes like that in front of it and
12:30 - that would prevent this line of code
12:32 - from executing without having to delete
12:34 - the entire line because I could bring it
12:36 - back just by going like that and erasing
12:38 - the two slashes so it's a good way to
12:40 - temporarily disable a line of code when
12:44 - we get to debugging this can be a good
12:47 - thing to try if you're suspecting that
12:49 - this line of code is causing problems
12:51 - you could temporarily comment it out and
12:53 - then run your app see if the problem
12:55 - occurs and stuff like that so if you've
12:58 - got a big block of code there's another
13:00 - way to write a comment because doing
13:02 - these two slashes will just comment out
13:04 - that line but if you want to comment out
13:06 - a big block of code what you can do is
13:09 - do slash star and then star slash like
13:16 - that and anything in between these two
13:20 - characters will be considered comments
13:23 - and won't get executed so just I'm just
13:27 - going to undo that and you can see here
13:31 - that I'm putting a white space in
13:32 - between each line you know you you could
13:35 - do it like this there's no problem with
13:37 - that but it's just less readable it
13:40 - increases readability when you add some
13:43 - white space in your code okay so now I
13:47 - want to basically randomize another
13:50 - number for my second card image view so
13:54 - I'm going to create another variable
13:57 - second random number
14:02 - basically do the same thing randomize a
14:12 - number for the second image view
14:19 - construct a string with the random
14:22 - number bar second card string and the
14:32 - first time you do this you probably
14:35 - won't be typing as fast as I am but you
14:39 - know by the end of the course
14:40 - if you keep practicing alongside using
14:43 - these methods and typing this code will
14:45 - seem like second nature to you so now I
14:48 - want to pass in the second random number
14:51 - and then here instead of this hard coded
14:56 - card 11 I want to pass in the second
15:02 - card string set the second card image
15:08 - view to the asset corresponding to the
15:14 - randomized number okay run it now if
15:20 - everything goes well I should be able to
15:23 - get two random cards each time I press
15:26 - the play button
15:36 - okay this is really great so we're on
15:39 - our way in the next lesson I want to
15:41 - introduce you guys to arrays and show
15:43 - you guys a different way of specifying
15:45 - the random cards in a way that we're not
15:49 - constructing the card name here and it
15:53 - doesn't depend on what we name these
15:55 - cards

Cleaned transcript:

hello welcome to lesson 12 of how to make iphone apps with no programming experience in this lesson we are going to hook up our button taps to randomize the card images in our card game before we jump into our Xcode project to do that I've got a playground open and I'm going to show you some of the tools that we're going to use here first so if you forget how to start a playground watch lesson 2 again and once you've got your playground open try to follow along okay so the first thing is how to randomize a number so it's actually really easy to generate a random number you simply use the function arc for random and there's a couple of them but we want to use this one arc for random underscore uniform and this function accepts an integer so let's say we pass in 100 so you can see there as soon as I complete it it shows 40 right there let me just make this one a little more narrow just press ENTER again it refreshes and I've got 11 this time I can keep doing it and I'm gonna get a random number each time so you might be wondering where does arc four random come from and how can I just call this random function out of nowhere because it's not associated with any object so it's not an instance method and it's not associated with any class so it's not a type method so what is it well it's part of the standard libraries that are imported as part of UIKit so you'll see that if I comment out uikit there it no longer recognizes this function so in the same way that I can use print line you know to output a string arc for random is just like that and we're going to use this function to generate a random number between 1 which is our ace all the way up to 13 which is our King the thing is though if you put in 13 in here it generates a random number from zero to 12 so actually what we want to do is add one to it and this is actually going to get us random numbers from 1 to 13 so that's the first piece of the puzzle the second thing I want to show you guys is how to create a string that is based on a variable so so far when we create strings we've been just opening up two quotes and typing in some text in the middle like this and that works fine but what happens if we want to combine a variable in the string well we can create a new string object by typing string and these two brackets right well that creates an empty string the cool thing about the string class is it also has a custom initializer just like the UI image class which we used in the last lesson and this custom initializer method will allow us to put in part of a string as well as dynamically specify some variables so let's take a look at how that works I'm going to erase these two brackets I'm going to type in the opening bracket Ayana type in F because I know the first parameter is format and we're going to use this one right here it's going to prefill the parameters for me remember in a method call the first parameter needs to have the label and the following parameters don't so if the first parameter is a string and I'm going to type in test okay and for the second argument it's basically the variable or a piece of text or whatever data that you want to substitute into the string so for my piece of data let's sub in hello okay well how does it know where to put in hello so my format string needs to have a wildcard care and hello is going to be it's going to replace the wildcard character so the wildcard character looks like this it's percentage at and now you can see that this string object is test hello now if I put this wildcard character in the middle like that you can see the result is that Hello is substituted into the middle now let's expand on this I can go VAR some text equals balloon and then instead of this hardcoded string hello I can put some text like that and now you can see that the string object in this variable is inserted into the middle of my format string like that so maybe now you can begin to see where we're getting with this because we named all of the image assets in our Xcode project according to card one car to car three and so on and so forth right so we can actually do something like this card and then put percentage at and then this will dynamically give us card plus some number if we take this randomizing function and we put it in here we change some text to random number and then we replace that so it's going to substitute random number to the end of this format string it's complaining right now because percentage ad is actually the wild card character for four strings so because random number is actually an int what we need is percentage I we're probably going to be using this string initializer method a lot to create dynamic strings you can see here that the result of these two lines of code is this card 3 if I press ENTER now it's card 12 so this is the combination that we're going to use to randomize a number and then create a string for it that will represent one of the assets in our projects asset library so now let's go into our Xcode project and implement these two pieces of code ok so here I've got our Xcode project open where we left off last time and let's go into the view controller dot Swift into the play round attempt now right here we've got two lines of code changing the uiimageview image property to different images so we know card one is our ace and card 11 is our Jack so instead of hardcoding this I basically want to do what we did in the playground randomize the number create a string off of that number and substitute that into here and here and so each time we tap the play button it's going to run this method and it's going to randomize it's basically going to change the image views to two random cards ok so let's do that so we can go VAR first random number equals arc for random uniform 13 plus 1 and this will give us a random number from 1 to 13 next we want to create a string off of that so I'm going to save our first card string I'm just going to label it string equals new string object using the format initializer that we just learned so I'm going to write card percentage I I'm going to press tab and here I'm just going to pass in first random number which is the variable here so what I end up with is a piece of is a string a piece of text that's going to be card plus my random number and then all I need to do is instead of putting card 1 here I'm going to erase that hardcoded string and put in first card string right so just like that it's going to give me a random card so I'm going to run it to demonstrate okay so I'm going to tap play now and our code is going to get executed so it happens that this card randomized to an ace it looks like you know I had to double check because we had hardcoded it to an ace but maybe it was just it randomly picked an ace let's press it again to randomize another card okay and there we go it was just a coincidence that it was an ace now each time we tap it it's going to randomize to a different number now we just got to do that same thing for the second card okay so now that we're beginning to write more code I want to introduce you to the practice of writing comments and documenting your code and comments are basically just these green statements right here they're not really code and they don't get executed but they're there to serve as documentation for your code both for yourself and for other people who read your code it's going to make it a lot easier for them to understand what you're trying to do and when you revisit this code in the future believe me you won't remember right now when you're writing it you know exactly what's going on and what what you're trying to do but in the future when you read your code again after several months you'll have to relearn everything and reread everything and re understand everything unless you have some documentation or comments it makes it that much more easy so in order to start a comment all you have to do is do two slashes like that and when you do that anything you type after those two slashes is considered a comment and won't get executed so here I'm going to say a mise a number for the first image view right here construct a string with the random number in here I'm going to write set the first card image view to the asset corresponding to the randomized number another thing that commenting is good for is just temporarily commenting out a piece of code so for example if I didn't want to change my second card view in this method I could simply put two slashes like that in front of it and that would prevent this line of code from executing without having to delete the entire line because I could bring it back just by going like that and erasing the two slashes so it's a good way to temporarily disable a line of code when we get to debugging this can be a good thing to try if you're suspecting that this line of code is causing problems you could temporarily comment it out and then run your app see if the problem occurs and stuff like that so if you've got a big block of code there's another way to write a comment because doing these two slashes will just comment out that line but if you want to comment out a big block of code what you can do is do slash star and then star slash like that and anything in between these two characters will be considered comments and won't get executed so just I'm just going to undo that and you can see here that I'm putting a white space in between each line you know you you could do it like this there's no problem with that but it's just less readable it increases readability when you add some white space in your code okay so now I want to basically randomize another number for my second card image view so I'm going to create another variable second random number basically do the same thing randomize a number for the second image view construct a string with the random number bar second card string and the first time you do this you probably won't be typing as fast as I am but you know by the end of the course if you keep practicing alongside using these methods and typing this code will seem like second nature to you so now I want to pass in the second random number and then here instead of this hard coded card 11 I want to pass in the second card string set the second card image view to the asset corresponding to the randomized number okay run it now if everything goes well I should be able to get two random cards each time I press the play button okay this is really great so we're on our way in the next lesson I want to introduce you guys to arrays and show you guys a different way of specifying the random cards in a way that we're not constructing the card name here and it doesn't depend on what we name these cards
