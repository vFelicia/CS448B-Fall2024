With timestamps:

00:00 - Hello and welcome back. We've defined the 
requirements for the initial version of our  
00:04 - app and we've completed the app design in figma 
progress. Now, in case you're just joining the  
00:09 - series here, this is an unscripted and raw 
video format where I share the journey of  
00:14 - our team building apps for profit. This 
one is dated October 12, which is about  
00:19 - two weeks since our last Vlog entry. Okay, 
with that said, I hope you enjoy this one.
00:24 - Let me update you on what's happened. So 
we still continue using this single word,  
00:29 - doc. You can see this is from the 13th, but since 
last time, what we've done is we've gone through  
00:35 - a whole bunch of other apps. So you can see here 
we took notes on all these different things and  
00:43 - basically trying to figure out on the Mood Tracker 
apps that rank in the top charts these days,  
00:51 - what features do they have in common, which 
would tell me what features people consider  
00:58 - as an absolute must? Because I figure that if 
they are on the top charts for my keyword, then  
01:05 - those are the features I should also have. And so 
that's what we've done here. And that allowed me  
01:13 - to think about what sorts of app requirements 
I would want for the MVP. And ultimately,  
01:19 - I want my app to have a lot of features, but 
for the MVP, I want to launch it quick. So if  
01:24 - you're unaware, MVP stands for Minimum Viable 
Product. To me, that just means a slimmed down,  
01:32 - bare bones functionality version of your app 
that does the basic thing. And for mood tracking,  
01:38 - the basic thing is to track moods, 
being able to review past moods.
01:44 - And right now, initially, all data is just going 
to be offline because I noticed that all the other  
01:50 - app that I reviewed worked offline. So I think 
that is a must. Onboarding screen, logging a  
01:59 - Mood screen. And not just logging a Mood, but also 
adding enough metadata, such as the date and the  
02:09 - time, the weather, the location, what you are 
doing, who you are with, and any notes that you  
02:13 - want to add. The reason I want the ability to add 
all these pieces of metadata is to give us enough  
02:21 - data to analyze so that we can observe patterns 
and say things like when the weather is sunny,  
02:29 - you are usually feeling really joyful. Or at 
this certain location, it seems like you get  
02:37 - really sad. Or when you're usually with this 
person, you get mad a lot. Or maybe when you're  
02:43 - doing this activity, you feel this way and that's 
just analyzing the data that you log over time.  
02:49 - If you are logging this metadata as well, the 
challenge is how do we figure out a standardized  
02:56 - way of entering these things? Because I have no 
way of knowing who are the people in your life.
03:02 - So I can't exactly provide a drop down. I don't 
know what locations you would consider using  
03:09 - the app. These are not locations like you're at 
this Lat long or that Latlong. Or in this city,  
03:16 - or that city. It's more of I'm at home, I'm at 
work, I'm at the park, I'm at the swimming pool,  
03:23 - things like that that are more relatable to you in 
your daily life. The same thing with activities.  
03:30 - There's so many activities, right? I can't provide 
a list of 1000 activities and even that might not  
03:35 - be enough to cover all the activities that people 
can do. So we have to figure out a way to enter  
03:42 - it in a standardized way. Because if we just 
provide a text box that you can type anything  
03:46 - as your activity, it's hard for the computer to 
understand that two different strings, let's say  
03:54 - walking and out for a walk, that they actually 
mean the same thing. API could probably do that,  
04:00 - but I haven't even thought about how we would do 
that analysis in the background. I just think that  
04:08 - if we could do that, it'd be cool. And I think 
we can. I just don't exactly know how just yet.
04:13 - That's fine. I'm sure we can figure it out. And 
then in terms of insights, your profile, your  
04:20 - photo this is basic stuff, but some stats, what's 
your longest streak that you've been logging,  
04:25 - the strongest emotion you felt in the last 30 
days. And also some of those insights that we  
04:30 - just talked about, relating your metadata to 
your moods, but that would require more data  
04:35 - to be logged first and then setting screen 
and some ideas for future versions. I ended  
04:46 - up having to move a lot of the stuff from up 
here, like features I wanted to build right now  
04:52 - to down here features for future versions simply 
because I wanted to launch this thing as fast as  
05:00 - possible so that we don't lose momentum and the 
project doesn't die. I think different people  
05:06 - will approach it different ways. Some people 
will want to go like a really polished route,  
05:12 - beta test the hell out of it and then have 
this big launch party and roll out the red  
05:17 - carpet type of thing. Whereas the way I'm 
going is doing a very bare bones launch.  
05:25 - Not trying to raise the roof or roll out the 
red carpet, but slowly improve it over time,  
05:32 - try to get a few users, get their ideas, 
improve it, keep releasing features and updates.
05:36 - And I think that way personally, feels more 
rewarding. As for which Way is better in  
05:45 - terms of getting users and making money, I'm 
not sure. But I know personally that I have a  
05:51 - tendency to drop projects if I lose interest or 
I lose momentum. Things, they won't even happen.  
06:00 - So I need to make this cycle short enough that I 
can get this out the door and get some feedback,  
06:08 - get some results, see some return. Not in monetary 
sense, but just in terms of satisfaction. Sense of  
06:17 - satisfaction. That is what we've done. And then 
from identifying this core list of requirements.  
06:25 - What I did next was just do some sketches in my 
sketchbook, start doing some ideas of how I might  
06:31 - incorporate these features into some sort of UI. 
So this is what I came up with. And this is like  
06:40 - a V one, but that thing I talked about in the last 
video about focusing on narrow functionality but  
06:49 - making it feel rewarding or maybe UX wise feel 
a little different from the other apps that  
06:57 - are out there. So the idea that I went with for 
this mood tracker app is the concept of cards.
07:04 - So I wanted each time you logged to be a card and 
the ability to decorate or customize in terms of  
07:13 - look how the card looks. So to be able to add 
stickers and to be able to add patterns and  
07:19 - colors and borders and things like that, I thought 
that would set it apart from other mood tracker  
07:25 - apps. The problem is I don't really know if this 
is a good idea. I don't really know if this is  
07:31 - going to be something that people who download 
this app if they would want. So as a result,  
07:38 - I have not included that in the MVP, the 
first version of the app, and instead we  
07:45 - will roll it out in the future perhaps. But 
for now you would record your mood like this.  
07:52 - You would have a calendar view where it would 
circle different dates that you've logged and  
07:57 - you can tap on those dates to then open up that 
entry. You can scroll up and down to go through  
08:03 - entries and inside the screen so it looks like 
this. So what I did next after coming up with  
08:09 - this is to create a set of wireframes from this 
because this is just rough ideas on a sketchbook.
08:16 - We have a team here. And so I was able to just 
pass the set of requirements along with my rough  
08:24 - sketches to the designer JC, and he came up with 
a V one version of screens. Now if you were doing  
08:31 - this yourself, you would have to do this part 
yourself as well through figma. But trust me,  
08:37 - figma isn't hard to learn. I think that you'd be 
able to spend a couple of hours and get the hang  
08:44 - of it and start building this out. Now these 
pieces right here, like a lot of these pieces  
08:50 - that you see don't have to be individually 
designed. Like these pieces right here,  
08:57 - let me zoom in a little bit. A lot of these 
are standard iOS UI, things like this date  
09:05 - picker or this keyboard. And I don't think it's 
in this file, but there's another file. There's a  
09:13 - template that you can download for figma, for iOS 
components. And you can literally grab pieces from  
09:19 - there and drag it and drop it into your design. So 
like this for know this picker right here, that's  
09:28 - a standardized thing. You don't have to build that 
in figma. You just drag and drop it into here.
09:33 - So a lot of these things are drag and drop. You 
just have to decide the layout and the components  
09:39 - to use. So I'm not going to walk through every bit 
of this. But I do want to say that just seeing it  
09:48 - laid out in this form actually raised a couple of 
problems. And they were not things that I could  
09:56 - identify by looking at this list of requirements 
or through the sketches that I did. So by seeing  
10:04 - it like this, I was able to see, oh man, entering 
this metadata is going to be a problem. Like,  
10:12 - how are we going to do this in a standardized 
way? It also brings up communication gaps  
10:19 - between yourself as the app owner, perhaps, 
or business owner to the designer or to any  
10:27 - developers you might have anything lost in 
translation because I identified that, oh,  
10:33 - my designer thought location meant like 
a city, but that's not what I thought of  
10:38 - location. I thought of location as like workplace 
or home or park like we talked about. So this is  
10:45 - a good exercise to identify things like that 
as well. So here, for example, searching for  
10:51 - a location. He was thinking about, I don't 
know, something on a Google map, for example,  
10:57 - to be able to search actual establishments 
and locations, art galleries or whatever.
11:03 - That wasn't what I was looking for microphone 
to definitely I didn't talk about any sort of  
11:09 - microphone sort of input. So this 
is a good way to identify this,  
11:14 - but this is not the finalized thing. Also, JC 
jumped ahead a few steps because usually we  
11:25 - would take the sketches and turn it into like 
really low fidelity wireframes that are just  
11:29 - like boxes. So you can see where things are 
laid out. But he just skipped that and went  
11:34 - straight to the design. So this is like design 
in addition, in combination with wireframes,  
11:42 - which is fine. After JC came up with this, 
we actually had a meeting with our developers  
11:49 - and with JC, where he walked us through this 
and we discussed different aspects of this,  
11:54 - and we talked about what we liked, what we didn't 
like, what we thought would be hard to do or not.  
12:00 - And then came out a set of changes for him to 
do. A revision for a V two. In the meantime,  
12:08 - we also identified some of the technical 
challenges that we might face. For example,  
12:17 - one thing was the color picker. I don't think we 
have popped up a color picker like this before.
12:23 - And even though this is supposed to be a 
standard iOS control, we haven't really  
12:28 - worked with this before. The other thing is the 
calendar component. I was wondering if there was  
12:33 - an iOS calendar component that we could use. Our 
team wasn't sure and things like that. We just  
12:39 - logged those things as question marks. And so out 
of that meeting came revisions for the designer  
12:45 - as well as questions for the technical team to 
figure out. So are there components that we can  
12:51 - use? Third party components or first party iOS 
components? If not, do we have to build our own?  
12:58 - Let's prove out some of the functionality. We were 
talking about using Swift Data to do right here.  
13:04 - Swift Data to do offline logging. So let's create 
a POC or a proof of concept of using Swift Data  
13:11 - and just logging a bunch of things and letting 
the user modify certain things. Another developer  
13:16 - has gone off to build that in a test Xcode app, 
just a test project to use Swift Data to do some  
13:25 - of this logging of these different data types. So 
we're just proving out different technical things  
13:32 - so that when it comes time to actually build the 
project, we have these question marks figured out.
13:38 - So that's where we are right now. The other 
thing is that we identified that in iOS 17,  
13:44 - there is a built in Mood Tracker app called State 
of Mind, and it looks something like this. Choose  
13:50 - how you're feeling right now. This is timing, 
but we went through it. We identified some  
13:55 - of the things that it doesn't do so well. And it 
looks nice, though, and it's integrated. So that's  
14:00 - awesome. And it's also integrated with Health 
Kit. That means that if someone is using this app,  
14:04 - that mental well being data is being tracked 
in Health Kit right here. That also means  
14:09 - that we can pull that Health Kit data into 
our app. So that if you were using iOS 17,  
14:16 - State of Mind, apple's Mental Well Being 
tracking app, we'd be able to grab that  
14:22 - data and then pre populate in our app so it 
doesn't cannibalize all Mood Tracker apps,  
14:29 - I would say. I don't think that was the point. 
That what Apple was trying to do. They weren't  
14:34 - trying to make all Mood Tracker apps irrelevant 
in the App Store because it is very limited  
14:40 - in what it can do. So there is opportunities 
still for Mood Tracker apps in the App Store.
14:47 - If anything, this exposes more people to 
using something like this. And perhaps  
14:51 - when they want more functionality 
or better analytics for their moods,  
14:56 - they might search the App Store. If anything, 
this might increase awareness of this sort  
15:01 - of thing. So I'm trying to see that as a 
good thing rather than a negative thing.  
15:09 - So that's where we're at right now. All right, 
that's the update. Thanks for following along,  
15:14 - and I will update you when we make more progress 
in the project. All right, see you later. Bye.

Cleaned transcript:

Hello and welcome back. We've defined the requirements for the initial version of our app and we've completed the app design in figma progress. Now, in case you're just joining the series here, this is an unscripted and raw video format where I share the journey of our team building apps for profit. This one is dated October 12, which is about two weeks since our last Vlog entry. Okay, with that said, I hope you enjoy this one. Let me update you on what's happened. So we still continue using this single word, doc. You can see this is from the 13th, but since last time, what we've done is we've gone through a whole bunch of other apps. So you can see here we took notes on all these different things and basically trying to figure out on the Mood Tracker apps that rank in the top charts these days, what features do they have in common, which would tell me what features people consider as an absolute must? Because I figure that if they are on the top charts for my keyword, then those are the features I should also have. And so that's what we've done here. And that allowed me to think about what sorts of app requirements I would want for the MVP. And ultimately, I want my app to have a lot of features, but for the MVP, I want to launch it quick. So if you're unaware, MVP stands for Minimum Viable Product. To me, that just means a slimmed down, bare bones functionality version of your app that does the basic thing. And for mood tracking, the basic thing is to track moods, being able to review past moods. And right now, initially, all data is just going to be offline because I noticed that all the other app that I reviewed worked offline. So I think that is a must. Onboarding screen, logging a Mood screen. And not just logging a Mood, but also adding enough metadata, such as the date and the time, the weather, the location, what you are doing, who you are with, and any notes that you want to add. The reason I want the ability to add all these pieces of metadata is to give us enough data to analyze so that we can observe patterns and say things like when the weather is sunny, you are usually feeling really joyful. Or at this certain location, it seems like you get really sad. Or when you're usually with this person, you get mad a lot. Or maybe when you're doing this activity, you feel this way and that's just analyzing the data that you log over time. If you are logging this metadata as well, the challenge is how do we figure out a standardized way of entering these things? Because I have no way of knowing who are the people in your life. So I can't exactly provide a drop down. I don't know what locations you would consider using the app. These are not locations like you're at this Lat long or that Latlong. Or in this city, or that city. It's more of I'm at home, I'm at work, I'm at the park, I'm at the swimming pool, things like that that are more relatable to you in your daily life. The same thing with activities. There's so many activities, right? I can't provide a list of 1000 activities and even that might not be enough to cover all the activities that people can do. So we have to figure out a way to enter it in a standardized way. Because if we just provide a text box that you can type anything as your activity, it's hard for the computer to understand that two different strings, let's say walking and out for a walk, that they actually mean the same thing. API could probably do that, but I haven't even thought about how we would do that analysis in the background. I just think that if we could do that, it'd be cool. And I think we can. I just don't exactly know how just yet. That's fine. I'm sure we can figure it out. And then in terms of insights, your profile, your photo this is basic stuff, but some stats, what's your longest streak that you've been logging, the strongest emotion you felt in the last 30 days. And also some of those insights that we just talked about, relating your metadata to your moods, but that would require more data to be logged first and then setting screen and some ideas for future versions. I ended up having to move a lot of the stuff from up here, like features I wanted to build right now to down here features for future versions simply because I wanted to launch this thing as fast as possible so that we don't lose momentum and the project doesn't die. I think different people will approach it different ways. Some people will want to go like a really polished route, beta test the hell out of it and then have this big launch party and roll out the red carpet type of thing. Whereas the way I'm going is doing a very bare bones launch. Not trying to raise the roof or roll out the red carpet, but slowly improve it over time, try to get a few users, get their ideas, improve it, keep releasing features and updates. And I think that way personally, feels more rewarding. As for which Way is better in terms of getting users and making money, I'm not sure. But I know personally that I have a tendency to drop projects if I lose interest or I lose momentum. Things, they won't even happen. So I need to make this cycle short enough that I can get this out the door and get some feedback, get some results, see some return. Not in monetary sense, but just in terms of satisfaction. Sense of satisfaction. That is what we've done. And then from identifying this core list of requirements. What I did next was just do some sketches in my sketchbook, start doing some ideas of how I might incorporate these features into some sort of UI. So this is what I came up with. And this is like a V one, but that thing I talked about in the last video about focusing on narrow functionality but making it feel rewarding or maybe UX wise feel a little different from the other apps that are out there. So the idea that I went with for this mood tracker app is the concept of cards. So I wanted each time you logged to be a card and the ability to decorate or customize in terms of look how the card looks. So to be able to add stickers and to be able to add patterns and colors and borders and things like that, I thought that would set it apart from other mood tracker apps. The problem is I don't really know if this is a good idea. I don't really know if this is going to be something that people who download this app if they would want. So as a result, I have not included that in the MVP, the first version of the app, and instead we will roll it out in the future perhaps. But for now you would record your mood like this. You would have a calendar view where it would circle different dates that you've logged and you can tap on those dates to then open up that entry. You can scroll up and down to go through entries and inside the screen so it looks like this. So what I did next after coming up with this is to create a set of wireframes from this because this is just rough ideas on a sketchbook. We have a team here. And so I was able to just pass the set of requirements along with my rough sketches to the designer JC, and he came up with a V one version of screens. Now if you were doing this yourself, you would have to do this part yourself as well through figma. But trust me, figma isn't hard to learn. I think that you'd be able to spend a couple of hours and get the hang of it and start building this out. Now these pieces right here, like a lot of these pieces that you see don't have to be individually designed. Like these pieces right here, let me zoom in a little bit. A lot of these are standard iOS UI, things like this date picker or this keyboard. And I don't think it's in this file, but there's another file. There's a template that you can download for figma, for iOS components. And you can literally grab pieces from there and drag it and drop it into your design. So like this for know this picker right here, that's a standardized thing. You don't have to build that in figma. You just drag and drop it into here. So a lot of these things are drag and drop. You just have to decide the layout and the components to use. So I'm not going to walk through every bit of this. But I do want to say that just seeing it laid out in this form actually raised a couple of problems. And they were not things that I could identify by looking at this list of requirements or through the sketches that I did. So by seeing it like this, I was able to see, oh man, entering this metadata is going to be a problem. Like, how are we going to do this in a standardized way? It also brings up communication gaps between yourself as the app owner, perhaps, or business owner to the designer or to any developers you might have anything lost in translation because I identified that, oh, my designer thought location meant like a city, but that's not what I thought of location. I thought of location as like workplace or home or park like we talked about. So this is a good exercise to identify things like that as well. So here, for example, searching for a location. He was thinking about, I don't know, something on a Google map, for example, to be able to search actual establishments and locations, art galleries or whatever. That wasn't what I was looking for microphone to definitely I didn't talk about any sort of microphone sort of input. So this is a good way to identify this, but this is not the finalized thing. Also, JC jumped ahead a few steps because usually we would take the sketches and turn it into like really low fidelity wireframes that are just like boxes. So you can see where things are laid out. But he just skipped that and went straight to the design. So this is like design in addition, in combination with wireframes, which is fine. After JC came up with this, we actually had a meeting with our developers and with JC, where he walked us through this and we discussed different aspects of this, and we talked about what we liked, what we didn't like, what we thought would be hard to do or not. And then came out a set of changes for him to do. A revision for a V two. In the meantime, we also identified some of the technical challenges that we might face. For example, one thing was the color picker. I don't think we have popped up a color picker like this before. And even though this is supposed to be a standard iOS control, we haven't really worked with this before. The other thing is the calendar component. I was wondering if there was an iOS calendar component that we could use. Our team wasn't sure and things like that. We just logged those things as question marks. And so out of that meeting came revisions for the designer as well as questions for the technical team to figure out. So are there components that we can use? Third party components or first party iOS components? If not, do we have to build our own? Let's prove out some of the functionality. We were talking about using Swift Data to do right here. Swift Data to do offline logging. So let's create a POC or a proof of concept of using Swift Data and just logging a bunch of things and letting the user modify certain things. Another developer has gone off to build that in a test Xcode app, just a test project to use Swift Data to do some of this logging of these different data types. So we're just proving out different technical things so that when it comes time to actually build the project, we have these question marks figured out. So that's where we are right now. The other thing is that we identified that in iOS 17, there is a built in Mood Tracker app called State of Mind, and it looks something like this. Choose how you're feeling right now. This is timing, but we went through it. We identified some of the things that it doesn't do so well. And it looks nice, though, and it's integrated. So that's awesome. And it's also integrated with Health Kit. That means that if someone is using this app, that mental well being data is being tracked in Health Kit right here. That also means that we can pull that Health Kit data into our app. So that if you were using iOS 17, State of Mind, apple's Mental Well Being tracking app, we'd be able to grab that data and then pre populate in our app so it doesn't cannibalize all Mood Tracker apps, I would say. I don't think that was the point. That what Apple was trying to do. They weren't trying to make all Mood Tracker apps irrelevant in the App Store because it is very limited in what it can do. So there is opportunities still for Mood Tracker apps in the App Store. If anything, this exposes more people to using something like this. And perhaps when they want more functionality or better analytics for their moods, they might search the App Store. If anything, this might increase awareness of this sort of thing. So I'm trying to see that as a good thing rather than a negative thing. So that's where we're at right now. All right, that's the update. Thanks for following along, and I will update you when we make more progress in the project. All right, see you later. Bye.
