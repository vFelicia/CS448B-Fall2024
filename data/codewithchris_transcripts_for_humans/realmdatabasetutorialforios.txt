With timestamps:

00:00 - hey code crew what's up have you heard
00:02 - about core data before it allows your
00:04 - app to store and retrieve data locally
00:06 - on your device handy stuff for sure
00:08 - right in today's lesson I'm going to
00:10 - show you very quickly how to use
00:12 - something called realm database it also
00:14 - allows you to work with local data sets
00:16 - on your device and it's very easy to set
00:19 - up and use best of all it's free because
00:21 - it's open source in the next few minutes
00:23 - you're gonna see just how easy it is to
00:25 - get up and running with realm database
00:27 - alright let's get to it alright so the
00:31 - first thing we're going to do is visit
00:32 - realm io go up to the top under products
00:36 - open it up and click on database now the
00:39 - platform is a paid offering from realm
00:42 - that offers data synchronization and
00:44 - other stuff like that if you need it you
00:46 - can check it out but we're going to be
00:48 - working with the free open source realm
00:50 - database so go ahead and click that this
00:53 - is click start it brings you to some
00:56 - documentation so go ahead and choose
00:58 - Swift and we can use cocoapods to
01:02 - install the realm libraries which is
01:03 - great for us it's so easy to do if
01:06 - cocoapods is something that's new to you
01:08 - make sure you check out the video that
01:11 - i'm going to display on the screen right
01:12 - now or in the description below where i
01:14 - show you how to setup cocoa pods on your
01:16 - machine
01:17 - it's basically helps you manage
01:19 - third-party libraries and to install and
01:22 - update and remove them very easily
01:23 - alright so we're going to set up our
01:26 - Xcode project now and use cocoa pods to
01:28 - install the realm libraries let's go
01:32 - ahead and create a new Xcode project a
01:34 - single view app I'm gonna call this
01:36 - realm demo 3 because I've done this a
01:39 - couple of times now and we're gonna save
01:41 - it on the desktop and then we're going
01:44 - to go ahead and close this and then we
01:47 - are going to open up terminal we're
01:51 - going to navigate to that project
01:52 - directory realm demo 3 now that I'm in
01:59 - my project directory I'm going to use
02:01 - the pod init command to initialize my
02:08 - project to use cocoa pods now I have a
02:10 - pod file which I am going to open up in
02:12 - a text
02:13 - and specify that I want to use the realm
02:17 - libraries so if you can remember from
02:21 - the documentation here the pot is called
02:23 - realm swift alright so let's go ahead
02:26 - and add this to our pod file save it and
02:29 - we're gonna go back to terminal and then
02:32 - type in pod install and this may take a
02:35 - while for you if this is the first time
02:38 - you're doing this but because I've done
02:40 - it a few times this part is really quick
02:44 - now we are going to go back to our
02:47 - project directory and open up the XC
02:50 - workspace file now you can see under
02:54 - this pods project we have the realm
02:58 - libraries at this point what I usually
03:00 - like to do is build the project just
03:03 - press command B just to make sure that
03:05 - everything is compiling and that we're
03:07 - starting off with a code base that
03:10 - compiles and builds now this could also
03:14 - take a while so while this is going on
03:17 - let me explain to you kind of how Realm
03:19 - works now we talked about realm being a
03:22 - local database so that means all of the
03:24 - data that you create store retrieve it's
03:26 - all locally on the device I'm how it's
03:30 - all stored and managed is in this one
03:32 - file called the realm file so when
03:35 - you're creating data and you're saving
03:37 - it to your local database what you're
03:39 - actually doing is you're opening up that
03:41 - realm file and then you are putting data
03:43 - in there and when you retrieve data
03:46 - you're also opening up this realm file
03:48 - and you're grabbing data from there now
03:51 - realm has this app called realm studio
03:54 - which is essentially like a you can
03:58 - think of it as a realm file browser
04:00 - which lets you open up any realm file
04:03 - you need and you can browse the data and
04:05 - you can also edit it and you can add
04:07 - data but there are some limitations to
04:11 - it you can't like change data types of
04:12 - the columns and stuff like that but it's
04:14 - still better than not having it at all
04:17 - now you can download realm studio if you
04:20 - scroll down a little more you can see
04:23 - here you can get a image what it looks
04:26 - like here
04:27 - and you can download it for a couple of
04:30 - different platforms so go ahead and do
04:33 - that I already have it installed on my
04:35 - machine in fact maybe I'll launch it now
04:38 - just to show you guys what it looks like
04:41 - now there is one tricky thing with using
04:44 - a roam studio to open up your realm file
04:46 - and that is that you need to know the
04:49 - path or the directory path to your run
04:53 - file in order to open it up okay so if
04:56 - you click this open round file it's
04:57 - gonna open up a Finder window for you to
05:01 - navigate to your run file and open it up
05:04 - I have a demo one that I can just open
05:07 - up and show you what it looks like so
05:11 - you can see the classes on the left-hand
05:14 - side here and so in our demo that I'm
05:19 - going to show you today we're gonna
05:20 - create a new custom class and then
05:22 - that's going to show up on the left-hand
05:24 - side and on the right-hand side where
05:26 - you see like these columns of data each
05:29 - row represents I guess a record or an
05:32 - object of that class you can think of it
05:35 - each of these columns is a property of
05:39 - that class so don't worry if this sounds
05:42 - confusing right now we're gonna go into
05:44 - Xcode and we're gonna try this out oh
05:46 - yeah the tricky thing is that you need
05:49 - to find a directory path to your run
05:51 - file right I'll show you how to do that
05:53 - very easily alright so let's go back to
05:57 - our Xcode project it's compiled
06:00 - succeeded you're gonna go into the view
06:04 - controller and here in the viewdidload
06:07 - I'm just gonna write some code here
06:11 - let's import realm swift at the top so
06:15 - we can basically specify that we're
06:19 - using these rome libraries so the next
06:21 - thing we're going to do is to open up
06:23 - the realm file for this app and you can
06:25 - do that just by creating a new realm
06:28 - object now if no realm file exists for
06:32 - this app when it executes this line of
06:34 - code it's going to create one but
06:35 - otherwise it's going to open up the
06:37 - realm file
06:38 - and the reason we need a reference to
06:40 - the Rome file as I mentioned before
06:41 - whenever we save data or retrieve data
06:44 - we are working with that realm file
06:47 - right so we need a reference to it so
06:50 - this is going to give us that now doing
06:52 - this can throw an error for instance if
06:55 - it doesn't have enough space on your
06:57 - device to create a new Rome file or
06:59 - maybe I can't find the Rome file or
07:00 - something like that it could throw an
07:03 - error so you can either perform error
07:05 - handling or you can just do this and you
07:09 - can ignore the error handling which is
07:11 - oddly enough what they show in the realm
07:13 - documentation but just understand that I
07:17 - think it's rare but this could throw an
07:20 - error and if you wanted to be extra safe
07:22 - about it you can wrap it around in a do
07:25 - catch block and do some error handling
07:28 - for this part all right so this is going
07:31 - to return our reference to the realm
07:33 - object we are going to assign it to a
07:36 - constant called realm and now for the
07:39 - part about finding out the path of the
07:43 - realm file so we can open up in Rome
07:45 - studio we can just output it to the
07:48 - console so we can find out what the path
07:53 - is to the Rome file by going around our
07:56 - configuration the default configuration
07:58 - and printing out the file URL so let's
08:03 - give this a try I'm going to run the app
08:05 - right now and there's not going to be
08:07 - anything in our database because we
08:09 - haven't saved anything yet but we're
08:12 - going to try to open it up anyways so
08:16 - you can see what it looks like
08:18 - so now inside the console you can see
08:21 - this part you see our run file is called
08:25 - default realm and there's this path to
08:29 - that file in the simulator well what
08:33 - we're gonna do is just copy that and the
08:38 - easiest way to open this guy up if
08:40 - you've already got realm studio
08:42 - installed is just type open space and
08:45 - then paste that URL or file path sorry
08:48 - and it's going to open up that realm
08:51 - file
08:52 - using rum studio as you can see here
08:54 - there's just a bunch of like system
08:56 - classes here because we haven't created
08:57 - that custom class we haven't saved any
08:59 - data to our loan file yet all right so
09:02 - we can go ahead close that we're going
09:04 - to now create a custom class and try to
09:08 - save some data to the rum file I'll show
09:10 - you how to do that
09:11 - let's choose new file choose a swift
09:14 - file we're going to create like a cat
09:16 - class something fun and we're going to
09:21 - import realm with the Swift so class cat
09:25 - now the way that we indicate we want to
09:31 - save this class or instances of this
09:35 - class into the realm file all we have to
09:38 - do is make sure that that class is a
09:40 - subclass of object now object is
09:43 - actually a realm class and it contains
09:45 - all of the code under the hood to save
09:50 - instances of this class into the run
09:52 - file and retrieve it and you don't have
09:55 - to worry about any of that all you have
09:56 - to do is make sure that any data or
09:58 - classes that you want to save into the
10:01 - realm file that you subclass object now
10:05 - in terms of properties of our cat class
10:08 - we can have something like name we can
10:12 - have like a color we have a gender and
10:16 - if we want to save these properties into
10:20 - the realm file as well they're going to
10:23 - show up as columns in the database all
10:26 - we have to do is make sure we have
10:29 - objective-c dynamic these keywords here
10:32 - in front of those properties so I'm
10:34 - going to go ahead and save this class
10:36 - and then in view controller let me
10:39 - create a new cat object and let's use a
10:46 - far because name is equal to let's call
10:52 - this cat moe let's
10:56 - it was a male cat and it's going to be
11:02 - color is going to be orange alright so
11:07 - we already have a reference to our realm
11:09 - file from up here it's so in order to
11:13 - add this object essentially saving it to
11:16 - the round file we have to wrap this in a
11:22 - write statement now every time you need
11:25 - to do something with the run file such
11:29 - as you know you're changing it adding
11:33 - something to it
11:34 - updating something in it deleting it
11:36 - something from the realm file you need
11:38 - to wrap it in this realm dot right
11:40 - statement or method in here we are going
11:45 - to realm dot add and we're gonna add my
11:49 - cat like that again this method call can
11:54 - throw an error so we need to either do
11:58 - some error handling with a do catch
12:00 - statement or just put or just do try
12:04 - exclamation mark to ignore all of that
12:08 - ignore any potential errors that might
12:10 - be thrown so let me run this now and we
12:14 - can take a look at the data inside of
12:17 - our run file alright so here is that
12:27 - file path again then change out the
12:34 - change
12:37 - okay so here we have our cat class on
12:41 - the left now right and we have this
12:45 - object and we've successfully saved this
12:48 - to our our Rome file now if I run this
12:56 - again this time let me change my cat to
13:03 - Joe it's gonna save it another it's
13:09 - gonna save another row into the room
13:11 - studio so you can see it there
13:12 - so from realm studio like I mentioned
13:15 - you can actually edit the data so if you
13:18 - just double click and then you type in
13:21 - black so you see that changes and we can
13:24 - do it again Tom gray so it's running the
13:34 - project now and you can see it appear in
13:36 - Rome studio now I want to show you how
13:39 - you can retrieve some data so for
13:45 - instance if I wanted to get all of the
13:47 - cat objects back from my realm file I
13:50 - could do realm dot objects and you can
13:55 - see here you pass in the type of the
13:58 - object that you want to retrieve and it
14:02 - gives you back a results object which
14:05 - lets you you can browse through your
14:07 - objects that way it kind of works like a
14:09 - know rate so objects we're gonna pass in
14:12 - the cat datatype so the way we do that
14:16 - is by using cat dot itself here and
14:20 - let's assign this to let's say let
14:23 - results equals and then what we can do
14:27 - is let's say we're going to print out
14:29 - results the first element let's print
14:34 - out the name of that guy
14:46 - okay so you can see there in the console
14:49 - it says mode now you can also do some
14:52 - filtering so for instance if you want to
14:54 - look for cats with the name mo or you
14:57 - want to look for gray cats or something
14:59 - like that there is a method you can use
15:02 - called filter and so it works like this
15:06 - we can say name equals and you have to
15:10 - wrap it in quotes like this let's say
15:16 - I'm say Jo and we can print out the
15:21 - number of results that we get back
15:23 - instead
15:32 - so you can see here we get one result if
15:37 - we change the color let's say two of the
15:40 - cats were orange instead you know and
15:43 - you search color is equal to orange then
15:48 - we would expect to get back to results
15:50 - right so you can see here that there's
15:57 - two in the console now furthermore you
16:01 - can also sort so you can sort by certain
16:05 - key and there's different things you can
16:06 - sort by I would recommend if that's
16:09 - something that you need to do take a
16:11 - look at the documentation there's a lot
16:15 - of good information here so that's a
16:18 - simple example of how easy it is to read
16:20 - and write data and realm database now
16:24 - there's obviously a lot more that you
16:25 - can do with realm database but I hope
16:27 - this video gave you a taste of just how
16:30 - easy it is to write and read data using
16:33 - room database now if you liked this
16:35 - video please make sure you subscribe to
16:37 - my channel just click on that subscribe
16:38 - button below and if you want more
16:40 - tutorials like this one make sure you
16:41 - visit my website coded with Chris calm
16:43 - and signed up for the newsletter because
16:45 - I release videos to the newsletter
16:46 - before they get published anywhere else
16:49 - now I want to turn it over to you does
16:51 - roam database seem like something you
16:52 - could use for your app let me know by
16:54 - leaving a quick comment below alright so
16:57 - thanks for watching and I'll see you
16:58 - guys next time
16:59 - bye for now hey did you join my free
17:01 - Facebook community yet that's where I
17:03 - hang out along with a ton of other
17:05 - people learning iOS just like yourself I
17:07 - also post early access to all my videos
17:10 - inside that group before I put them on
17:13 - YouTube you can also get help with any
17:15 - questions you're having visit the link
17:17 - below click on the join group button and
17:19 - I'll approve your request right away
17:21 - alright so I'll see you in there talk
17:23 - soon

Cleaned transcript:

hey code crew what's up have you heard about core data before it allows your app to store and retrieve data locally on your device handy stuff for sure right in today's lesson I'm going to show you very quickly how to use something called realm database it also allows you to work with local data sets on your device and it's very easy to set up and use best of all it's free because it's open source in the next few minutes you're gonna see just how easy it is to get up and running with realm database alright let's get to it alright so the first thing we're going to do is visit realm io go up to the top under products open it up and click on database now the platform is a paid offering from realm that offers data synchronization and other stuff like that if you need it you can check it out but we're going to be working with the free open source realm database so go ahead and click that this is click start it brings you to some documentation so go ahead and choose Swift and we can use cocoapods to install the realm libraries which is great for us it's so easy to do if cocoapods is something that's new to you make sure you check out the video that i'm going to display on the screen right now or in the description below where i show you how to setup cocoa pods on your machine it's basically helps you manage thirdparty libraries and to install and update and remove them very easily alright so we're going to set up our Xcode project now and use cocoa pods to install the realm libraries let's go ahead and create a new Xcode project a single view app I'm gonna call this realm demo 3 because I've done this a couple of times now and we're gonna save it on the desktop and then we're going to go ahead and close this and then we are going to open up terminal we're going to navigate to that project directory realm demo 3 now that I'm in my project directory I'm going to use the pod init command to initialize my project to use cocoa pods now I have a pod file which I am going to open up in a text and specify that I want to use the realm libraries so if you can remember from the documentation here the pot is called realm swift alright so let's go ahead and add this to our pod file save it and we're gonna go back to terminal and then type in pod install and this may take a while for you if this is the first time you're doing this but because I've done it a few times this part is really quick now we are going to go back to our project directory and open up the XC workspace file now you can see under this pods project we have the realm libraries at this point what I usually like to do is build the project just press command B just to make sure that everything is compiling and that we're starting off with a code base that compiles and builds now this could also take a while so while this is going on let me explain to you kind of how Realm works now we talked about realm being a local database so that means all of the data that you create store retrieve it's all locally on the device I'm how it's all stored and managed is in this one file called the realm file so when you're creating data and you're saving it to your local database what you're actually doing is you're opening up that realm file and then you are putting data in there and when you retrieve data you're also opening up this realm file and you're grabbing data from there now realm has this app called realm studio which is essentially like a you can think of it as a realm file browser which lets you open up any realm file you need and you can browse the data and you can also edit it and you can add data but there are some limitations to it you can't like change data types of the columns and stuff like that but it's still better than not having it at all now you can download realm studio if you scroll down a little more you can see here you can get a image what it looks like here and you can download it for a couple of different platforms so go ahead and do that I already have it installed on my machine in fact maybe I'll launch it now just to show you guys what it looks like now there is one tricky thing with using a roam studio to open up your realm file and that is that you need to know the path or the directory path to your run file in order to open it up okay so if you click this open round file it's gonna open up a Finder window for you to navigate to your run file and open it up I have a demo one that I can just open up and show you what it looks like so you can see the classes on the lefthand side here and so in our demo that I'm going to show you today we're gonna create a new custom class and then that's going to show up on the lefthand side and on the righthand side where you see like these columns of data each row represents I guess a record or an object of that class you can think of it each of these columns is a property of that class so don't worry if this sounds confusing right now we're gonna go into Xcode and we're gonna try this out oh yeah the tricky thing is that you need to find a directory path to your run file right I'll show you how to do that very easily alright so let's go back to our Xcode project it's compiled succeeded you're gonna go into the view controller and here in the viewdidload I'm just gonna write some code here let's import realm swift at the top so we can basically specify that we're using these rome libraries so the next thing we're going to do is to open up the realm file for this app and you can do that just by creating a new realm object now if no realm file exists for this app when it executes this line of code it's going to create one but otherwise it's going to open up the realm file and the reason we need a reference to the Rome file as I mentioned before whenever we save data or retrieve data we are working with that realm file right so we need a reference to it so this is going to give us that now doing this can throw an error for instance if it doesn't have enough space on your device to create a new Rome file or maybe I can't find the Rome file or something like that it could throw an error so you can either perform error handling or you can just do this and you can ignore the error handling which is oddly enough what they show in the realm documentation but just understand that I think it's rare but this could throw an error and if you wanted to be extra safe about it you can wrap it around in a do catch block and do some error handling for this part all right so this is going to return our reference to the realm object we are going to assign it to a constant called realm and now for the part about finding out the path of the realm file so we can open up in Rome studio we can just output it to the console so we can find out what the path is to the Rome file by going around our configuration the default configuration and printing out the file URL so let's give this a try I'm going to run the app right now and there's not going to be anything in our database because we haven't saved anything yet but we're going to try to open it up anyways so you can see what it looks like so now inside the console you can see this part you see our run file is called default realm and there's this path to that file in the simulator well what we're gonna do is just copy that and the easiest way to open this guy up if you've already got realm studio installed is just type open space and then paste that URL or file path sorry and it's going to open up that realm file using rum studio as you can see here there's just a bunch of like system classes here because we haven't created that custom class we haven't saved any data to our loan file yet all right so we can go ahead close that we're going to now create a custom class and try to save some data to the rum file I'll show you how to do that let's choose new file choose a swift file we're going to create like a cat class something fun and we're going to import realm with the Swift so class cat now the way that we indicate we want to save this class or instances of this class into the realm file all we have to do is make sure that that class is a subclass of object now object is actually a realm class and it contains all of the code under the hood to save instances of this class into the run file and retrieve it and you don't have to worry about any of that all you have to do is make sure that any data or classes that you want to save into the realm file that you subclass object now in terms of properties of our cat class we can have something like name we can have like a color we have a gender and if we want to save these properties into the realm file as well they're going to show up as columns in the database all we have to do is make sure we have objectivec dynamic these keywords here in front of those properties so I'm going to go ahead and save this class and then in view controller let me create a new cat object and let's use a far because name is equal to let's call this cat moe let's it was a male cat and it's going to be color is going to be orange alright so we already have a reference to our realm file from up here it's so in order to add this object essentially saving it to the round file we have to wrap this in a write statement now every time you need to do something with the run file such as you know you're changing it adding something to it updating something in it deleting it something from the realm file you need to wrap it in this realm dot right statement or method in here we are going to realm dot add and we're gonna add my cat like that again this method call can throw an error so we need to either do some error handling with a do catch statement or just put or just do try exclamation mark to ignore all of that ignore any potential errors that might be thrown so let me run this now and we can take a look at the data inside of our run file alright so here is that file path again then change out the change okay so here we have our cat class on the left now right and we have this object and we've successfully saved this to our our Rome file now if I run this again this time let me change my cat to Joe it's gonna save it another it's gonna save another row into the room studio so you can see it there so from realm studio like I mentioned you can actually edit the data so if you just double click and then you type in black so you see that changes and we can do it again Tom gray so it's running the project now and you can see it appear in Rome studio now I want to show you how you can retrieve some data so for instance if I wanted to get all of the cat objects back from my realm file I could do realm dot objects and you can see here you pass in the type of the object that you want to retrieve and it gives you back a results object which lets you you can browse through your objects that way it kind of works like a know rate so objects we're gonna pass in the cat datatype so the way we do that is by using cat dot itself here and let's assign this to let's say let results equals and then what we can do is let's say we're going to print out results the first element let's print out the name of that guy okay so you can see there in the console it says mode now you can also do some filtering so for instance if you want to look for cats with the name mo or you want to look for gray cats or something like that there is a method you can use called filter and so it works like this we can say name equals and you have to wrap it in quotes like this let's say I'm say Jo and we can print out the number of results that we get back instead so you can see here we get one result if we change the color let's say two of the cats were orange instead you know and you search color is equal to orange then we would expect to get back to results right so you can see here that there's two in the console now furthermore you can also sort so you can sort by certain key and there's different things you can sort by I would recommend if that's something that you need to do take a look at the documentation there's a lot of good information here so that's a simple example of how easy it is to read and write data and realm database now there's obviously a lot more that you can do with realm database but I hope this video gave you a taste of just how easy it is to write and read data using room database now if you liked this video please make sure you subscribe to my channel just click on that subscribe button below and if you want more tutorials like this one make sure you visit my website coded with Chris calm and signed up for the newsletter because I release videos to the newsletter before they get published anywhere else now I want to turn it over to you does roam database seem like something you could use for your app let me know by leaving a quick comment below alright so thanks for watching and I'll see you guys next time bye for now hey did you join my free Facebook community yet that's where I hang out along with a ton of other people learning iOS just like yourself I also post early access to all my videos inside that group before I put them on YouTube you can also get help with any questions you're having visit the link below click on the join group button and I'll approve your request right away alright so I'll see you in there talk soon
