With timestamps:

00:00 - hello welcome to lesson 11 of the learn
00:03 - Swift for beginners series in this
00:05 - lesson I want to introduce to you UIKit
00:08 - it's an apple framework that contains
00:11 - many of the classes we're going to need
00:12 - in order to construct iOS apps all right
00:15 - so let's dive in and see what's
00:17 - available and you are kit so like I
00:22 - mentioned in the intro for this video
00:24 - the uikit framework is essentially a
00:27 - library of classes that Apple gives us
00:30 - to build apps with when you think about
00:32 - it there are a lot of common elements to
00:34 - any sort of app for example apps may
00:37 - have views they may have buttons you
00:40 - know all apps are going to have things
00:42 - that you need to present to the user
00:43 - apps are going to need to handle user
00:47 - interaction from the person using the
00:49 - app and so on and so forth so to build
00:52 - that functionality out every single time
00:54 - you're going to build an app is
00:55 - extremely tedious and not to mention
00:58 - complex and complicated so Apple has
01:01 - provided UI kit for us to use and it
01:04 - contains a ton of pre-built classes for
01:06 - us to handle all of these common things
01:08 - so here I'm looking at the UI kit
01:11 - reference guide which contains a list of
01:15 - all of the UI kid classes that are
01:17 - available for us to use I'll link to it
01:19 - in the description below the video but
01:21 - if you want to look for it yourself just
01:23 - go into Google and type in Apple space
01:26 - UI kit don't just type in UI kit because
01:28 - the first few results for that query
01:32 - isn't the Apple UI kit so just type an
01:34 - apple space UI kit to find the correct
01:38 - one in the first result it was also
01:41 - essential to learn about inheritance
01:43 - before I told you about UI kit because
01:46 - many of these classes inherit from each
01:49 - other they build off of each other so
01:51 - they don't redefine things and this
01:54 - reference guide used to be kind of
01:57 - organized in a hierarchy so you could
01:59 - see which classes inherited from other
02:02 - classes but since they've changed it and
02:05 - they've made it kind of a listing so you
02:06 - don't get that but I did a google search
02:09 - and I found an image that I'm sure this
02:12 - is not
02:13 - to complete UIKit because this image was
02:17 - from 2012 I think yeah you can see here
02:21 - in the URL it's from 2012 but it does
02:23 - give you an idea of how the classes are
02:26 - organized so you can see at the very top
02:30 - of this tree if you can imagine this
02:34 - left side being kind of at the top of
02:36 - the tree and this right side being the
02:39 - bottom of it
02:40 - if you take for instance this uibutton
02:43 - class which represents a button that the
02:45 - user can tap on the screen UI button
02:48 - inherits from UI control which inherits
02:51 - from uiviewcontroller thing you can
03:18 - think of it as the big grandfather or
03:20 - granddaddy and what this nsobject class
03:23 - does is it provides that basic
03:25 - functionality that allows you to create
03:27 - an object from a class definition so
03:30 - that's something we went through in part
03:32 - one of the classes lesson so this NS
03:35 - object class and it gives you that
03:37 - functionality and if we take a look at
03:40 - what was the next one down the chain so
03:42 - the UI responder class
03:44 - so this UI responder class inherits from
03:47 - nsobject means that it contains that
03:50 - foundation that's going to be needed by
03:52 - you know all of these UI elements or
03:55 - user interface elements okay so the next
03:58 - one down is a UI view so UI view
04:01 - inherits from UI responder which
04:03 - inherits from nsobject so UI do get all
04:06 - of that functionality and on top of that
04:08 - the UI view class provides functionality
04:11 - for displaying something onto a view so
04:15 - a UI view is something that you can show
04:18 - to the user so it contains all of that
04:20 - functionality and code and then next in
04:23 - that hierarchy down to the UI button we
04:25 - have UI control
04:26 - now you are control contains all of that
04:29 - functionality before it following this
04:31 - line here and on top of that contains
04:35 - basic code and functionality for a user
04:38 - element control so stuff that is
04:41 - specific for displaying on to a view
04:45 - handling user interaction and events and
04:49 - responding so then we have a specific
04:52 - type of UI control and that is the UI
04:55 - button which is pretty self-explanatory
04:57 - it looks and behaves like a button with
05:00 - a certain button events so that's just
05:03 - one example of you know the path you can
05:06 - see that there's a whole ton of classes
05:09 - and there's even more now so whenever
05:11 - you go and you know before you go and do
05:14 - something with your app chances are you
05:17 - can probably leverage something from UI
05:19 - kit to build off of rather than building
05:21 - something from scratch so in this video
05:24 - I just wanted to give you guys an
05:26 - introduction to UI kit because we're
05:28 - going to be using a lot of classes from
05:30 - here and every time I do I will try and
05:33 - remember to reference this guide or at
05:36 - least link to it so you can take a look
05:38 - at these classes it's very useful and
05:41 - handy to have at your fingertips because
05:44 - you can click into these classes and
05:46 - then you can find out for this UI button
05:49 - class what sorts of functions it has and
05:52 - properties it has that you can use and
05:54 - leverage and how you can perform
05:56 - specific things with the button or with
05:58 - that class and furthermore I might do
06:01 - another video series where we go over
06:04 - specifically different UI elements
06:09 - because I think that would be useful for
06:11 - beginners to understand how to use for
06:13 - example like a date picker or text field
06:16 - or a slider or switch or something like
06:17 - that so that might be a separate series
06:20 - on just UI elements okay so thanks for
06:23 - watching and if you'd like me to
06:25 - continue producing these videos for you
06:26 - guys please give this video a thumbs up
06:28 - and subscribe to my channel to help
06:30 - channel grow and I'll see you in the
06:32 - next lesson bye for now
06:36 - you
06:39 - [Music]

Cleaned transcript:

hello welcome to lesson 11 of the learn Swift for beginners series in this lesson I want to introduce to you UIKit it's an apple framework that contains many of the classes we're going to need in order to construct iOS apps all right so let's dive in and see what's available and you are kit so like I mentioned in the intro for this video the uikit framework is essentially a library of classes that Apple gives us to build apps with when you think about it there are a lot of common elements to any sort of app for example apps may have views they may have buttons you know all apps are going to have things that you need to present to the user apps are going to need to handle user interaction from the person using the app and so on and so forth so to build that functionality out every single time you're going to build an app is extremely tedious and not to mention complex and complicated so Apple has provided UI kit for us to use and it contains a ton of prebuilt classes for us to handle all of these common things so here I'm looking at the UI kit reference guide which contains a list of all of the UI kid classes that are available for us to use I'll link to it in the description below the video but if you want to look for it yourself just go into Google and type in Apple space UI kit don't just type in UI kit because the first few results for that query isn't the Apple UI kit so just type an apple space UI kit to find the correct one in the first result it was also essential to learn about inheritance before I told you about UI kit because many of these classes inherit from each other they build off of each other so they don't redefine things and this reference guide used to be kind of organized in a hierarchy so you could see which classes inherited from other classes but since they've changed it and they've made it kind of a listing so you don't get that but I did a google search and I found an image that I'm sure this is not to complete UIKit because this image was from 2012 I think yeah you can see here in the URL it's from 2012 but it does give you an idea of how the classes are organized so you can see at the very top of this tree if you can imagine this left side being kind of at the top of the tree and this right side being the bottom of it if you take for instance this uibutton class which represents a button that the user can tap on the screen UI button inherits from UI control which inherits from uiviewcontroller thing you can think of it as the big grandfather or granddaddy and what this nsobject class does is it provides that basic functionality that allows you to create an object from a class definition so that's something we went through in part one of the classes lesson so this NS object class and it gives you that functionality and if we take a look at what was the next one down the chain so the UI responder class so this UI responder class inherits from nsobject means that it contains that foundation that's going to be needed by you know all of these UI elements or user interface elements okay so the next one down is a UI view so UI view inherits from UI responder which inherits from nsobject so UI do get all of that functionality and on top of that the UI view class provides functionality for displaying something onto a view so a UI view is something that you can show to the user so it contains all of that functionality and code and then next in that hierarchy down to the UI button we have UI control now you are control contains all of that functionality before it following this line here and on top of that contains basic code and functionality for a user element control so stuff that is specific for displaying on to a view handling user interaction and events and responding so then we have a specific type of UI control and that is the UI button which is pretty selfexplanatory it looks and behaves like a button with a certain button events so that's just one example of you know the path you can see that there's a whole ton of classes and there's even more now so whenever you go and you know before you go and do something with your app chances are you can probably leverage something from UI kit to build off of rather than building something from scratch so in this video I just wanted to give you guys an introduction to UI kit because we're going to be using a lot of classes from here and every time I do I will try and remember to reference this guide or at least link to it so you can take a look at these classes it's very useful and handy to have at your fingertips because you can click into these classes and then you can find out for this UI button class what sorts of functions it has and properties it has that you can use and leverage and how you can perform specific things with the button or with that class and furthermore I might do another video series where we go over specifically different UI elements because I think that would be useful for beginners to understand how to use for example like a date picker or text field or a slider or switch or something like that so that might be a separate series on just UI elements okay so thanks for watching and if you'd like me to continue producing these videos for you guys please give this video a thumbs up and subscribe to my channel to help channel grow and I'll see you in the next lesson bye for now you
