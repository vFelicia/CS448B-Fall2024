With timestamps:

00:02 - hey coders how's it going it's Chris
00:04 - here and today we're going to talk about
00:06 - updating data and deleting data from
00:08 - parse it's going to be a quick one
00:10 - because it's actually pretty easy to do
00:12 - so I'm going to open up our project here
00:14 - remember to open up the XC workspace
00:17 - file and while that's going let's go to
00:20 - parse.com and go to our apps
00:25 - dashboard parse demo was the one we were
00:27 - working on and just to remind you guys
00:30 - we have two rows of data in our contact
00:32 - store and we're going to try updating
00:34 - the email field of these two rows of
00:37 - data so let's say I want to grab this
00:39 - row of data for Tommy right here and I
00:41 - want to update his email let's go back
00:44 - to our pars demo in the previous lesson
00:47 - we looked at how to retrieve data we
00:50 - showed two examples one was retrieving a
00:52 - content with a specific ID like right
00:55 - there and the second example was
00:57 - retrieving all of the contacts in the
01:00 - contact store well I'm going to go back
01:02 - to using this example where we want to
01:05 - retrieve a contact with a specific ID
01:09 - and let's paste in Tommy's which happens
01:11 - to be the one that we need and let's
01:15 - comment out this bottom example which is
01:19 - retrieving all of the rows of data in
01:21 - the contact store okay so here inside
01:24 - the block of code that executes after
01:26 - it's retrieved we are checking if the
01:30 - object is not nil and we're checking if
01:33 - there is no error uh and if so we print
01:37 - out the first name so let's do something
01:39 - else let's update the email for this
01:45 - object so let's say object remember we
01:49 - have to unwrap it because it's an
01:51 - optional type when it comes back because
01:54 - it may be nil so that's what we're doing
01:55 - here we're checking that it's not nil so
01:57 - inside this if statement we know that
01:59 - it's not nil
02:00 - so let's say that the
02:03 - email is equal
02:06 - to Tommy at tommy.com and literally
02:10 - that's how easy it is to update a field
02:12 - of a row of data you simply just assign
02:15 - it the new piece of data but don't
02:17 - forget that you also have to save it
02:19 - back so let's type object dove in
02:23 - background so I'm just going to use the
02:25 - save in background method and it's going
02:26 - to save it asynchronously so I'm going
02:28 - to run this right now and it's going to
02:30 - execute that code if all goes well we
02:33 - should see this row of data under Tommy
02:36 - have an updated email so it's running
02:38 - now and let's check our console
02:42 - window okay so our console window
02:45 - printed out the first name which implies
02:47 - that it went into this section of code
02:49 - and it should have updated the email and
02:51 - then saved it back up to parse so let's
02:55 - refresh the page here and sure enough we
02:58 - can see that for Tommy's row of data
03:00 - we've updated the email now deleting
03:02 - this row of data is very simple as well
03:05 - if we wanted to delete it we would
03:07 - simply let's
03:09 - say delete the object we would simply
03:13 - say object dot delete now this one
03:18 - happens synchronously meaning that it's
03:21 - going to pause the execution until it
03:23 - successfully deletes it we probably want
03:25 - to use this one instead delete and
03:27 - background so it's going to spawn a
03:29 - background thread to perform this
03:30 - operation and if you wanted to execute
03:32 - some code after it's successfully
03:34 - deleted you can even do delete in
03:37 - background with block and then you can
03:39 - provide a block of code to execute once
03:41 - that request to delete it comes back uh
03:44 - but we're just going to do delete and
03:45 - background and I don't actually want to
03:47 - delete my row of data so I'm going to
03:49 - comment that out but at least now you
03:51 - guys know how to delete that so there
03:53 - you have it that's how easy it is to
03:55 - update data save it back to the cloud
03:57 - and how easy it is to delete data as as
03:59 - well next week we're going to look at
04:01 - some more complicated PF queries where
04:03 - you can specify more constraints uh so
04:06 - you can query your parse backend so
04:08 - thanks for watching and don't forget to
04:10 - like And subscribe share the video I'll
04:13 - see you guys next week I hope you guys
04:14 - all have a great weekend talk to you
04:16 - guys later
04:19 - [Music]
04:26 - bye

Cleaned transcript:

hey coders how's it going it's Chris here and today we're going to talk about updating data and deleting data from parse it's going to be a quick one because it's actually pretty easy to do so I'm going to open up our project here remember to open up the XC workspace file and while that's going let's go to parse.com and go to our apps dashboard parse demo was the one we were working on and just to remind you guys we have two rows of data in our contact store and we're going to try updating the email field of these two rows of data so let's say I want to grab this row of data for Tommy right here and I want to update his email let's go back to our pars demo in the previous lesson we looked at how to retrieve data we showed two examples one was retrieving a content with a specific ID like right there and the second example was retrieving all of the contacts in the contact store well I'm going to go back to using this example where we want to retrieve a contact with a specific ID and let's paste in Tommy's which happens to be the one that we need and let's comment out this bottom example which is retrieving all of the rows of data in the contact store okay so here inside the block of code that executes after it's retrieved we are checking if the object is not nil and we're checking if there is no error uh and if so we print out the first name so let's do something else let's update the email for this object so let's say object remember we have to unwrap it because it's an optional type when it comes back because it may be nil so that's what we're doing here we're checking that it's not nil so inside this if statement we know that it's not nil so let's say that the email is equal to Tommy at tommy.com and literally that's how easy it is to update a field of a row of data you simply just assign it the new piece of data but don't forget that you also have to save it back so let's type object dove in background so I'm just going to use the save in background method and it's going to save it asynchronously so I'm going to run this right now and it's going to execute that code if all goes well we should see this row of data under Tommy have an updated email so it's running now and let's check our console window okay so our console window printed out the first name which implies that it went into this section of code and it should have updated the email and then saved it back up to parse so let's refresh the page here and sure enough we can see that for Tommy's row of data we've updated the email now deleting this row of data is very simple as well if we wanted to delete it we would simply let's say delete the object we would simply say object dot delete now this one happens synchronously meaning that it's going to pause the execution until it successfully deletes it we probably want to use this one instead delete and background so it's going to spawn a background thread to perform this operation and if you wanted to execute some code after it's successfully deleted you can even do delete in background with block and then you can provide a block of code to execute once that request to delete it comes back uh but we're just going to do delete and background and I don't actually want to delete my row of data so I'm going to comment that out but at least now you guys know how to delete that so there you have it that's how easy it is to update data save it back to the cloud and how easy it is to delete data as as well next week we're going to look at some more complicated PF queries where you can specify more constraints uh so you can query your parse backend so thanks for watching and don't forget to like And subscribe share the video I'll see you guys next week I hope you guys all have a great weekend talk to you guys later bye
