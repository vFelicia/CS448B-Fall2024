With timestamps:

00:05 - hey guys welcome to lesson 14 of how to
00:08 - build iPhone apps with no programming
00:09 - experience and in this lesson we are
00:13 - going to look at if statements first
00:15 - we're going to start a playground to try
00:17 - out the code before we go into the Xcode
00:20 - project I'm just gonna save this
00:24 - playground on our desktop okay so this
00:33 - is the first time we're going to be able
00:34 - to express some sort of logic or
00:37 - decision-making in our code so for
00:40 - example let's say I have a variable a
00:43 - which is equal to 20 and let's say I
00:47 - want to print out a statement but
00:49 - depending on what the value of a is so
00:52 - this is a perfect time to use an if
00:54 - statement now an if statement follows
00:56 - this sort of syntax you type if followed
01:00 - by the condition which you want to check
01:03 - so in my case let's say I want to print
01:05 - a statement if a is less than 10 then I
01:13 - want to do something now what I do is I
01:17 - use the curly brackets to specify some
01:22 - code to run if this condition is true so
01:26 - I'm just going to print line hello and
01:33 - you can see that this code doesn't do
01:36 - anything because it's going to check
01:38 - this condition right now it's false so
01:40 - it's not going to execute that code but
01:43 - let's say if I were to change a to 9
01:46 - which is less than 10 now you can see
01:48 - that the code in there executes there's
01:51 - a couple more things that you can do
01:53 - with an if statement you can say if this
01:57 - condition is true then do this code else
02:02 - do something else
02:09 - so what happens here now is ill check
02:13 - this condition if it's true it's going
02:15 - to run this code if it's false it's
02:17 - gonna run this code but it's not going
02:19 - to do both it's gonna do one or the
02:21 - other depending if this condition is
02:23 - true or not so right now it's nine so
02:26 - it's gonna print hello but if I change
02:27 - this to something like 19 then it's
02:30 - gonna run this code and print goodbye
02:33 - instead now I can take this even further
02:35 - and I can say I can add another
02:39 - condition in the middle here else if a
02:46 - is greater than 10 and a is less than 5
02:54 - sorry 15 then do this code so in the
02:59 - middle here I can put something like
03:02 - print line in between and this operator
03:12 - acts as an end both of these conditions
03:15 - have to be true so what happens here is
03:18 - that first it's gonna check this
03:20 - statement if it's false it's going to
03:22 - check this statement else if and then
03:26 - finally if that isn't true as well it's
03:28 - going to execute this one so it reads
03:31 - kind of like English if this is true
03:34 - then do this if it's not true then is
03:37 - this true if it's not then finally do
03:41 - else and you can have as many else ifs
03:45 - as you want but it's gonna check from
03:48 - top to bottom and the first true
03:50 - condition that it meets its gonna
03:53 - execute that code in there now also I
03:57 - used this operator and this is an and
04:00 - operator think of it as end basically if
04:03 - a is greater than 10 and a is greater is
04:07 - less than 15 then this condition is true
04:10 - and execute this code in here but this
04:14 - end is just expressed as that
04:18 - I can also do or if I do or then it
04:26 - checks if this is true or if this is
04:30 - true then the whole condition is
04:33 - satisfied and it's going to execute this
04:35 - code so with an or you'll only need one
04:39 - of these two conditions to be true for
04:42 - this whole branch to be executed and you
04:47 - can chain the ORS and the ends together
04:49 - to express some interesting logic
04:52 - furthermore you can do equals so I can
04:57 - do something like if a equals 15 then do
05:01 - this now keep in mind that I'm not using
05:05 - that because a single equal sign is used
05:08 - for assignment like up here I'm
05:10 - assigning 19 into the variable a so if
05:13 - you're gonna do comparisons you want to
05:15 - do that and lastly if I don't want to
05:20 - have an else statement I don't need it I
05:22 - can go like that so if a is less than 10
05:26 - then print hello if it's not check is a
05:30 - equal to 15 if it's not then nothing
05:34 - happens and then finally there's also
05:39 - less than or equal to you know or
05:42 - greater than or equal to and there's
05:45 - also not equal to so that's expressed by
05:49 - an exclamation mark and an equal sign
05:51 - and you can see here that a is 19 which
05:54 - is not equal to 10 so this condition is
05:57 - true and it executes this code so if
06:01 - statements are pretty powerful and we're
06:02 - going to be using them a lot in our code
06:04 - let's go into our Xcode project and
06:07 - implement an if statement to check which
06:09 - card is higher so right here I have our
06:14 - Xcode project opened and we're going to
06:17 - implement the if statement inside the
06:21 - view controller dot Swift in the play
06:23 - round tapped method so right now when we
06:26 - execute this code it's going to randomly
06:29 - generate a number
06:31 - and assign the corresponding card to the
06:35 - uiimageview and then it's gonna
06:37 - randomize a second number and do the
06:40 - same for the second imageview so down
06:43 - here below that we want to determine the
06:51 - higher card so all we have to do is
06:55 - basically write if first random number
06:58 - is greater than second random number
07:02 - open a set of curly braces and inside
07:06 - here let's write a statement to do first
07:13 - card is larger okay and we write an else
07:22 - because if the first number is not
07:25 - greater then it must be less than so in
07:29 - the else branch of code we write second
07:33 - card is larger now we haven't considered
07:37 - the case what if they're tied what if
07:41 - they're the same number right now this
07:43 - code if it's a tie it's going to go into
07:47 - the else statement because all it checks
07:49 - is if the first number is greater than
07:51 - the second number anything else goes
07:54 - into this else branch of code right here
07:57 - what we want to do here is add another
08:00 - condition else if first random number is
08:06 - equal to second random number and that
08:10 - would indicate a tie
08:22 - so with this if statement here were able
08:25 - to determine a winner based on the
08:27 - random numbers that have been rolled in
08:29 - the next lesson we're going to add some
08:31 - labels to the story board and then we're
08:33 - going to fill in the code in these if
08:35 - branches to update the score label

Cleaned transcript:

hey guys welcome to lesson 14 of how to build iPhone apps with no programming experience and in this lesson we are going to look at if statements first we're going to start a playground to try out the code before we go into the Xcode project I'm just gonna save this playground on our desktop okay so this is the first time we're going to be able to express some sort of logic or decisionmaking in our code so for example let's say I have a variable a which is equal to 20 and let's say I want to print out a statement but depending on what the value of a is so this is a perfect time to use an if statement now an if statement follows this sort of syntax you type if followed by the condition which you want to check so in my case let's say I want to print a statement if a is less than 10 then I want to do something now what I do is I use the curly brackets to specify some code to run if this condition is true so I'm just going to print line hello and you can see that this code doesn't do anything because it's going to check this condition right now it's false so it's not going to execute that code but let's say if I were to change a to 9 which is less than 10 now you can see that the code in there executes there's a couple more things that you can do with an if statement you can say if this condition is true then do this code else do something else so what happens here now is ill check this condition if it's true it's going to run this code if it's false it's gonna run this code but it's not going to do both it's gonna do one or the other depending if this condition is true or not so right now it's nine so it's gonna print hello but if I change this to something like 19 then it's gonna run this code and print goodbye instead now I can take this even further and I can say I can add another condition in the middle here else if a is greater than 10 and a is less than 5 sorry 15 then do this code so in the middle here I can put something like print line in between and this operator acts as an end both of these conditions have to be true so what happens here is that first it's gonna check this statement if it's false it's going to check this statement else if and then finally if that isn't true as well it's going to execute this one so it reads kind of like English if this is true then do this if it's not true then is this true if it's not then finally do else and you can have as many else ifs as you want but it's gonna check from top to bottom and the first true condition that it meets its gonna execute that code in there now also I used this operator and this is an and operator think of it as end basically if a is greater than 10 and a is greater is less than 15 then this condition is true and execute this code in here but this end is just expressed as that I can also do or if I do or then it checks if this is true or if this is true then the whole condition is satisfied and it's going to execute this code so with an or you'll only need one of these two conditions to be true for this whole branch to be executed and you can chain the ORS and the ends together to express some interesting logic furthermore you can do equals so I can do something like if a equals 15 then do this now keep in mind that I'm not using that because a single equal sign is used for assignment like up here I'm assigning 19 into the variable a so if you're gonna do comparisons you want to do that and lastly if I don't want to have an else statement I don't need it I can go like that so if a is less than 10 then print hello if it's not check is a equal to 15 if it's not then nothing happens and then finally there's also less than or equal to you know or greater than or equal to and there's also not equal to so that's expressed by an exclamation mark and an equal sign and you can see here that a is 19 which is not equal to 10 so this condition is true and it executes this code so if statements are pretty powerful and we're going to be using them a lot in our code let's go into our Xcode project and implement an if statement to check which card is higher so right here I have our Xcode project opened and we're going to implement the if statement inside the view controller dot Swift in the play round tapped method so right now when we execute this code it's going to randomly generate a number and assign the corresponding card to the uiimageview and then it's gonna randomize a second number and do the same for the second imageview so down here below that we want to determine the higher card so all we have to do is basically write if first random number is greater than second random number open a set of curly braces and inside here let's write a statement to do first card is larger okay and we write an else because if the first number is not greater then it must be less than so in the else branch of code we write second card is larger now we haven't considered the case what if they're tied what if they're the same number right now this code if it's a tie it's going to go into the else statement because all it checks is if the first number is greater than the second number anything else goes into this else branch of code right here what we want to do here is add another condition else if first random number is equal to second random number and that would indicate a tie so with this if statement here were able to determine a winner based on the random numbers that have been rolled in the next lesson we're going to add some labels to the story board and then we're going to fill in the code in these if branches to update the score label
