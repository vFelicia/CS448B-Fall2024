With timestamps:

00:00 - Haeckel crew in this firebase tutorial
00:02 - I'm going to show you how to perform
00:03 - crud operations on a fire store database
00:06 - crud you say yes create read update and
00:10 - delete I know I know
00:11 - it's an incredibly unfortunate acronym
00:13 - but so great for jokes right hey what's
00:21 - up my name is Chris Ching and welcome to
00:23 - code with Chris where everyday people
00:25 - like you and I can learn how to crud and
00:27 - to build apps but before we start let's
00:29 - help each other out I'll stop making bad
00:31 - puns and you visit our sponsor hosting
00:34 - er hosting our offers fast and secure
00:37 - web site hosting with an easy-to-use
00:38 - website builder that I haven't seen
00:40 - anywhere else so you can host and create
00:43 - websites to market your apps even if you
00:45 - don't know anything about web
00:46 - development and if you're planning to
00:48 - use a CMS like WordPress which by the
00:50 - way code with Chris comm uses then
00:53 - you'll be happy to hear that hosting er
00:55 - is optimized for WordPress speed with
00:58 - affordable pricing starting at $0.99 a
01:01 - month with an additional 15% off
01:03 - discount when you use the coupon code
01:05 - code with Chris what is there not to
01:07 - like check out the link below or click
01:10 - on the link in the description to sign
01:11 - up for your account today alright now
01:14 - let's get started with our firebase
01:16 - tutorial alright so this video is going
01:19 - to be a continuation of lessons 1 & 2 in
01:22 - our firebase firestore tutorial series
01:25 - just in case you haven't watched those
01:27 - yet let me do a quick recap in the first
01:29 - video I showed you how to sign up for a
01:32 - firebase account how to create your
01:35 - firebase app and then how to create the
01:37 - Xcode project finally how to integrate
01:40 - those firebase libraries into your Xcode
01:42 - project so that it can communicate with
01:45 - the firebase servers and we got that
01:48 - working in Lesson one so if you haven't
01:50 - done that yet go ahead and watch lesson
01:52 - one you can click on the upper left hand
01:54 - corner for that video I'll list it out
01:56 - there also in lesson two I explained a
01:59 - little bit about how the firestore data
02:01 - model works we talked about collections
02:03 - and documents inside collections if that
02:07 - doesn't ring a bell I would recommend to
02:09 - go and review lesson two now I'll also
02:13 - link to it
02:13 - there so now in lesson three I am going
02:16 - to continue from that point on we've got
02:18 - our Xcode project set up here we're
02:21 - going to start our first store database
02:23 - and I'm gonna show you those crud
02:24 - operations and I'm going to just run
02:28 - through all of the different things you
02:29 - can do with it so we're going to learn
02:31 - how to create documents and collections
02:33 - we're gonna learn how to get the
02:36 - document ID that's auto-generated I'm
02:38 - gonna show you how to update a specific
02:42 - document I'm gonna show you how to
02:43 - delete a document delete a specific
02:45 - field in a document and you're also
02:48 - going to learn how to read the data back
02:50 - alright so if all that sounds good let's
02:53 - get started so here I'm looking at my
02:55 - firebase dashboard what you're gonna
02:58 - want to do is click on database now you
03:00 - probably don't have yours set up yet but
03:02 - I do what you're gonna see is an option
03:05 - to choose either the firebase real time
03:07 - database or the firestore database I
03:10 - think they're pushing firestore it's
03:12 - their newer product it's the
03:13 - second-generation one so it's gonna be
03:16 - at the top so create a fire stored at
03:19 - abase there's gonna be a big button
03:20 - prompting you to create one when you
03:23 - create one it's gonna ask you where you
03:25 - want to host that database or where you
03:27 - want it to be located now I would just
03:30 - choose the location that's closest to
03:32 - you
03:32 - the second thing it's going to ask you
03:34 - is what sort of security rules you want
03:36 - to put on it you can put it in test mode
03:38 - which is what I've done here the rules
03:40 - that are defined our public so that
03:42 - anybody can steal modify or delete your
03:45 - data as it's saying right here it's very
03:47 - alarming because it is very important
03:49 - but in the development phase and as
03:52 - we're doing a demo here we don't have
03:54 - any authentication built into our app
03:55 - yet so test mode is going to be the
03:57 - easiest for us once we have implemented
04:00 - some sort of authentication into our app
04:01 - then we can go ahead and switch those
04:04 - database rules so that only
04:05 - authenticated users can read and write
04:08 - and so on and so forth so right now I
04:11 - would recommend to put it into test mode
04:12 - or public mode or whatever they call it
04:14 - you're gonna get a prompt like this
04:17 - which is looks concerning but it's okay
04:19 - for now
04:20 - and then finally you're going to be
04:22 - presented with your brand new empty
04:24 - firestore database now true to what I
04:27 - said there
04:27 - our collections in this column right
04:29 - here and when you click on a collection
04:31 - you're gonna see all the documents in
04:33 - that collection now I don't have any
04:35 - collections right here but we're gonna
04:36 - jump into Xcode right now and I'm gonna
04:38 - show you what sort of statements you can
04:40 - run to start adding some data into your
04:42 - database all right so let's jump into
04:44 - Xcode so here don't worry about this
04:46 - right now let's just do a quick recap of
04:48 - where we left off in Lesson one so in
04:51 - Lesson one we had added the Google
04:55 - service info.plist into our Xcode
04:58 - project we had also added the firebase
05:01 - libraries as pods and then in the app
05:05 - delegate we had imported firebase up
05:08 - here and then we had ran this command or
05:11 - have this command here in the did finish
05:13 - launching so that as soon as the app
05:16 - launches it's going to run this
05:17 - statement which is going to set up our
05:19 - database and make it ready to use for us
05:21 - now if you haven't done any of that yet
05:24 - this was all part of lesson one again go
05:26 - back and watch that alright so we're
05:29 - gonna go into the view controller here
05:30 - i've got some sample code that i've set
05:33 - up and i'm gonna run through it with you
05:34 - and I'm gonna type out new code so this
05:37 - is just going to be samples all right so
05:40 - let's start at the top the first thing
05:42 - you're going to need to do is to import
05:44 - firebase if you're going to want Xcode
05:46 - to recognize those classes you need to
05:48 - do that and then the next thing you need
05:51 - to do is to get a reference to your
05:53 - firestore database and to do that you
05:56 - call the fire store type method of the
05:59 - fire store class and that is going to
06:02 - give you a reference to your database
06:04 - store it in a constant or variable in
06:06 - this case I've declared a constant
06:09 - called DB and I've started there so
06:11 - that's going to be how we run methods
06:15 - and commands against our database all
06:17 - right let's start with this
06:19 - adding a document this is very very
06:21 - simple use your database reference and
06:25 - then you're going to specify a
06:26 - collection now this could be an existing
06:29 - collection it could be a collection that
06:31 - doesn't exist if it doesn't exist then
06:34 - it's going to automatically create it in
06:37 - our case we have no data all right so
06:39 - I'm going to type in
06:41 - collection I'm just gonna make one up
06:43 - and I call it wine because I just went
06:46 - to Niagara Falls in Toronto and I did a
06:49 - bunch of wine tour so that's what's on
06:51 - my mind all right so we're specifying
06:53 - the wine collection and we're gonna add
06:55 - a document now adding a document it's
06:58 - going to automatically generate a
07:00 - document ID for you what we're going to
07:02 - specify next is actually the data for
07:04 - that document so the data is going to be
07:08 - a dictionary where the keys are strings
07:10 - and the data is a variety of different
07:13 - formats that you could put in there we
07:15 - discussed all of those different data
07:17 - formats you can use in lesson two back
07:20 - then so you can go back and watch that
07:22 - video if you need to jog your memory and
07:25 - if you're completely brand-new to app
07:28 - development I forgot to mention that
07:29 - this video series is not meant for the
07:33 - complete beginner I have another video
07:34 - series to get you up to speed make sure
07:36 - you check out my beginner lessons you
07:39 - can click in the upper left-hand corner
07:40 - that's going to go through the different
07:42 - data types dictionaries that we're going
07:45 - to use here and all of that stuff so
07:47 - that this video is going to make a lot
07:49 - more sense if you have that sort of
07:50 - knowledge first again this video series
07:53 - is not for complete beginners all right
07:55 - so we're going to specify a dictionary
07:57 - here with key value pairs according to
08:00 - the data that we want to store it in
08:02 - this document so for example all right
08:07 - I'm gonna have a key called year and
08:10 - it's going to be a number 2017 and I'm
08:14 - gonna have a type and the value for that
08:17 - is maybe gonna be a Pinot Noir now this
08:21 - can be whatever format you want
08:23 - obviously and the label maybe I'm gonna
08:26 - put it as color Estates that's one of
08:31 - the wineries I went to as simple as that
08:34 - let's run our app right now and let's
08:37 - see what happens what it's going to do
08:40 - is create the wine collection because
08:42 - that is it doesn't exist and then it's
08:45 - going to add a document to that
08:46 - collection so let's check out our
08:48 - database them just a refresher right
08:50 - here
08:53 - and sure enough there it is our wine
08:56 - collection and this is the
08:58 - auto-generated document ID and here is
09:02 - the data for that document label as
09:04 - Peller States type as Pinot Noir and
09:06 - year is 2017 exactly like I've specified
09:09 - in here so that's how you basically add
09:12 - data to your database now in some cases
09:15 - you might want the document ID alright
09:19 - that is generated for your document so
09:21 - there is a way to do that let me oh so
09:24 - let's go back to the controller let me
09:25 - show you how to do that the way you do
09:28 - that is you use DB again actually let me
09:35 - just type it out for you so it's gonna
09:37 - make a little more sense instead of only
09:38 - call my thing decoded so you use your
09:41 - reference to the database and then you
09:43 - go ahead and call your collection again
09:45 - we were going to use wine again and this
09:48 - time you just call the document method
09:50 - that's going to create a brand new
09:52 - document in that collection now what
09:55 - you're gonna do is assign that document
09:58 - reference to a variable or a constant so
10:02 - in this case I'm gonna put it into a
10:05 - constant called new document and the
10:08 - thing is now you have a reference to
10:10 - that newly generated document so that
10:13 - you can access the ID property of it and
10:15 - you can get access to that document ID
10:18 - so here let's go new document this is
10:24 - the one that's just created and we're
10:26 - going to call a different method here
10:28 - called set data now set data is
10:31 - basically going to as it suggests
10:33 - replace that data in that document with
10:37 - whatever dictionary that you pass in now
10:39 - there is an optional merge property or
10:42 - parameter sorry that instead of
10:45 - replacing you're going to be merging the
10:48 - data with the existing record but I'm
10:50 - getting ahead of myself let's first do
10:52 - this let's set data and I'll show you
10:54 - this example so here we are setting the
10:57 - data for our document so here I'm gonna
11:00 - say year 2017 again let's
11:04 - if the type is let's do a different type
11:11 - of wine and label is and yes I wanted to
11:21 - do an additional key value pair here
11:26 - where I specify the document ID so here
11:30 - I just want to demonstrate that you have
11:32 - access to that document and you can
11:36 - access the document ID property which is
11:38 - a string ID so let's run this code and
11:41 - see what happens
11:42 - oh yes we don't see anything so you can
11:47 - see that it's updated now check this out
11:50 - this is our new document that we just
11:52 - added it's the second type of wine that
11:54 - I whoops that I added but check this out
11:58 - I had a reference to that auto-generated
12:01 - document ID and I was able to put it in
12:03 - here so that's useful to know in case
12:05 - you need the auto-generated ID now let's
12:08 - take a look at some other ways of
12:10 - setting data now what happens if you
12:14 - want to add a document to your
12:15 - collection with a specific ID you don't
12:18 - always have to use the auto-generated
12:20 - one so you can do that it's very simple
12:24 - let's take a look here adding a document
12:28 - with a specific ID so it's just like
12:32 - adding a new document up here the
12:35 - difference is that this time you're
12:37 - going to manually specify the document
12:39 - ID that you want so the collection for
12:42 - us is white and then you're going to go
12:44 - dot document and you're going to choose
12:46 - this one and you're going to be able to
12:48 - specify a document path or in this case
12:52 - it would be the document ID so let us
12:56 - let us specify one
13:03 - like that and then we would call the set
13:07 - data off of that so up here we did
13:11 - collection and then add document that's
13:13 - just going to auto generate the ID for
13:16 - that document this time we are saying
13:18 - that collection we're specifying the
13:20 - document that we want and then we are
13:22 - going to set the data for that document
13:25 - now if that document doesn't exist
13:27 - right if this document ID doesn't exist
13:29 - it's going to create a brand new
13:31 - document with that ID for you and it's
13:35 - so I'm just gonna put some dummy data
13:39 - here we don't need to go through it
13:41 - again let me do that all right and run
13:45 - it and then in here you're gonna see
13:48 - that appear so that is the specific
13:51 - document ID that I wanted now what
13:54 - happens if the document ID already
13:56 - exists so here my data was test and test
14:00 - so if this document ID already exists
14:04 - and you're calling set data well it's
14:06 - essentially going to replace whatever
14:08 - data is already in that document with
14:12 - the data that you're passing in here
14:14 - so here I'm gonna go you know test -
14:18 - let's just do something else that so you
14:21 - can tell the difference so I'm going to
14:24 - do hello and hello right and if we take
14:29 - a look now you can see that it got it
14:31 - basically replaced whatever was in that
14:34 - document all right so this is
14:36 - essentially also a way to update an
14:40 - existing document right it's a way to
14:43 - specify a new document with your own
14:45 - custom document ID but it's also a way
14:48 - to update an existing document if you
14:51 - know the document ID already and that is
14:54 - going to replace the data but what if
14:56 - you don't want to replace the data what
14:58 - if you want to add to it or you want to
15:00 - just update a specific field well check
15:04 - this out if I wanted to update the hello
15:07 - field or hello data I would just put I
15:10 - would just specify that same key and
15:13 - then specify a different value
15:16 - and what that's going to do is it's
15:19 - going to replace the existing value with
15:21 - my new data so that's how you would
15:23 - update an existing field if you wanted
15:25 - to add a new field like a new key value
15:29 - pair you could do that
15:31 - you could say a new key and new value
15:37 - however this is where you need to use
15:40 - that second parameter that I showed you
15:42 - it was called merge and here you would
15:46 - put true and what happens when you
15:48 - specify the merge parameter with passing
15:52 - in true it is going to essentially add
15:57 - whatever field that doesn't exist it'll
16:00 - just tack it on to the document so here
16:02 - you can see that it hasn't replaced it
16:04 - it's actually just added that to there
16:08 - all right so that I actually skipped
16:11 - ahead a little bit so that was what I
16:13 - was trying to show here in this example
16:14 - updating a specific document ID all
16:18 - right so there's that and you probably
16:23 - have noticed that you're a little more
16:24 - experienced that there is a completion
16:26 - handler when you're adding documents and
16:28 - stuff like that so you can check for
16:30 - errors and this is how that would work
16:31 - so let's say that I'm gonna add a new
16:35 - document so to my wine collection you
16:39 - can see here that I can pass in the data
16:42 - but I can also specify a completion
16:46 - closure where I would basically get the
16:50 - results back any errors that might have
16:52 - happened so let's let's take a look at
16:55 - that some of the error is the test and
16:57 - test and this completion handler let's
17:02 - open that up there's a parameter in
17:04 - there called error I'm going to give
17:07 - that a parameter name and all you have
17:10 - to do is just check if that error
17:11 - parameter is nil or not
17:13 - so if error equals error then there was
17:18 - an error this is just in case you're not
17:21 - familiar with it a way to check if if
17:25 - this is nil or not
17:26 - so if error is not nil it's going to be
17:29 - signed to error and I'm going to be able
17:32 - to access it in here now otherwise there
17:38 - is nil so operation completed
17:43 - successfully so that is how you would
17:46 - detect for errors in your write
17:49 - operations all right now let's take a
17:51 - look at deleting so I realize I'm
17:56 - commenting out a lot of the code but if
17:58 - you download the sample code in the link
18:01 - below the description I'll clean it up
18:03 - for you guys so you only have like one
18:05 - set of sample code or not like two sets
18:08 - like this because that looks kind of
18:09 - messy and confusing
18:11 - alright so deleting a document it's
18:14 - pretty simple I don't think I need to
18:17 - type this out so I'm just gonna
18:18 - uncomment my example here you specify
18:21 - the collection you specify the specific
18:24 - document that you want to delete and
18:25 - then you just call the delete method on
18:27 - it you can also just delete a single
18:30 - field and this is how you would do that
18:33 - again you'd specify the collection and
18:35 - then the document and then you call an
18:38 - update data method not a set data like
18:41 - we did up there this is update data and
18:43 - then you just pass in the field that you
18:46 - want to get rid of and the value instead
18:49 - you it would be this and that would
18:52 - essentially remove that key value pair
18:54 - from that document and all of this guys
18:58 - is in the documentation so always have
19:02 - this handy right here like always in the
19:05 - upper right hand corner you'll see a
19:06 - link that says go to Docs and when you
19:09 - go there it's just in case you don't
19:11 - know how to navigate that or where to go
19:13 - you can go to get started for iOS and
19:16 - then down here look for a cloud fire
19:19 - store open that up go to add and manage
19:22 - data and this is the stuff in this
19:24 - section this is stuff that I'm showing
19:26 - you guys right here alright alright
19:29 - detecting for errors is exactly the same
19:32 - way there's an example here but
19:35 - essentially it is the same thing that we
19:39 - did up here where you pass in a closure
19:42 - to that completion
19:43 - handler and there's an air parameter and
19:47 - you just check if that error is nil or
19:50 - not just to see if your delete you're
19:53 - deleting was successful or not actually
19:58 - here I'm going to just show you an
20:00 - example here since there wasn't a sample
20:03 - I just realized so let's do wine
20:06 - let's do document and one of the ones
20:10 - that one of the document IDs I just
20:15 - added was this and then you're going to
20:17 - call delete so you can just call regular
20:19 - delete or you can call delete with
20:21 - completion parameter right and then
20:24 - you'd open that up and there would be an
20:26 - error
20:27 - parameter in there and you'd just you
20:30 - know use optional binding again or an
20:34 - easier way if you don't really
20:35 - understand this syntax is just you know
20:37 - if error is not equal to nil then we
20:44 - have an error else delete was successful
20:50 - so that's using a simple if statement
20:53 - and that might be easier to understand
20:56 - if you're unfamiliar with the Swift
20:57 - syntax all right now we're gonna get
20:59 - into the reading so let's go ahead and
21:01 - comment out this deletion code and let's
21:07 - check out reading a specific document
21:09 - first let's take a look at the simplest
21:11 - example which would be if you knew the
21:14 - collection that you wanted to access and
21:16 - you knew the specific document that you
21:20 - wanted as well so let's say Pino or 2017
21:25 - then you would be able to call get
21:29 - document just like that and that's it
21:31 - There is obviously a completion Handler
21:35 - so that you can get the data that's
21:37 - double click that to open it up there is
21:39 - a document snapshot and there is an
21:41 - error so let's go ahead and put some
21:45 - parameter names for that and so you'd
21:49 - check if there is no errors first you
21:51 - would let's say if error is nil meaning
21:56 - that there
21:56 - is no error then it first check for an
22:00 - error and then you would check that this
22:05 - document exists because tell you what
22:08 - this document that we specify here might
22:11 - not exist in that collection right and
22:13 - if it does not exist there that's not
22:17 - necessarily an error per se but what
22:20 - would happen is that the document has a
22:23 - in exists property that would tell you
22:27 - if that document exists or not very
22:30 - simply and you kind of have to check if
22:33 - the you have to check two things if the
22:36 - document is not nil and document exists
22:40 - is true that means that there is a
22:42 - document right and here's the document
22:46 - data inside this document variable so
22:49 - you can either use simple if statements
22:52 - right to do that or you can use optional
22:56 - binding again but just in case I will
23:00 - use the simpler syntax so you can go
23:04 - ahead and force unwrap that because
23:06 - you've already checked that it's not nil
23:08 - here so you can safely force and wrap
23:11 - and check the exist property because
23:14 - it's going to stop here if it's nil all
23:18 - right so you're gonna say you know let
23:20 - actual or let document data equals
23:26 - document dot data and there you see that
23:31 - that return value of this data method is
23:34 - your dictionary containing all of the
23:36 - key value pairs for that document so
23:39 - that is how you would get the data for
23:41 - and then obviously you'd have to parse
23:43 - it into whatever object you'd want or
23:46 - maybe you want to keep it as a
23:48 - dictionary you know that's up to you but
23:49 - that's how you would get that dictionary
23:51 - data out of firestore database so that's
23:55 - a very simple example of getting a
23:57 - single document now what if you wanted
23:59 - to get all the documents in a certain
24:01 - collection well you could do that
24:05 - documents getting all documents from a
24:08 - collection you would go DB dot
24:12 - collection and then it will specify our
24:15 - wine collection and instead of get
24:17 - document this time it's pluralized and
24:20 - we say get documents that's this one
24:24 - right here with the completion parameter
24:26 - and again opening this up will give us
24:29 - the two parameters of this closure which
24:32 - is the well this would be actually you
24:39 - would call it the snapshot and this
24:41 - would be error the reason is because the
24:44 - the actual documents are in a property
24:46 - of the snapshot so let me demonstrate
24:49 - so if error is nil so that means there
24:52 - was no error then if you take a look at
24:56 - snapshot in here documents right this is
25:02 - where each document will live so you
25:05 - would do something like you know if
25:08 - error is not equal nil and then you
25:11 - could you could combine up here you
25:14 - could say and snapshot is not equal to
25:17 - nil as well then maybe you will say for
25:22 - document in snapshot documents right and
25:27 - then in here you would say let document
25:30 - data equal document dot data so here
25:36 - you're just looping through each
25:38 - document that was returned inside a for
25:41 - loop and then here you're accessing that
25:44 - particular documents dictionary data so
25:48 - that's how you're going to get the data
25:49 - out of every single document of the wine
25:51 - collection you know but this is all fine
25:54 - and good typically you wouldn't want to
25:56 - retrieve all of the documents in the
25:59 - collection you'd want to somehow filter
26:00 - them right or query so there are various
26:03 - ways to do that
26:04 - getting a sub set of documents so here
26:12 - let's specify the wine collection that's
26:15 - what we want to look in and
26:16 - we can specify a where clause where you
26:20 - can indicate a specific field that you
26:24 - want to look at where it's equal to
26:27 - something or less than something maybe
26:29 - or maybe greater than or that specific
26:33 - array contains some sort of value and
26:36 - there's different ones that you can take
26:37 - a look at but that is how you would kind
26:40 - of specify a subset of those documents
26:42 - so why don't we just say something very
26:44 - simple like where where type is equal
26:51 - true well hmm let's say year is equal to
26:59 - 2017 all right so we're gonna grab all
27:02 - the wines that were of this year and
27:04 - then you would say get documents and
27:08 - then you would proceed as you did up
27:13 - here right because you're getting back a
27:15 - collection of documents so you're going
27:17 - to check if the error is nil you're
27:19 - going to check that the snapshot is not
27:21 - nil and then you're gonna grab the
27:23 - documents we're going to loop through
27:25 - the documents of the snapshot and then
27:27 - for each document you're gonna grab its
27:29 - data and that's how you're gonna get
27:31 - that data out now in a future video
27:33 - I will show you more concretely because
27:36 - we're definitely going to be building
27:37 - apps with these skills that we're
27:39 - learning here and so I'm gonna show you
27:41 - concretely how to declare a structures
27:45 - of maybe like a wine structure with has
27:48 - all of our properties and then we can
27:50 - extract this dictionary data and create
27:52 - an array of wine objects or something
27:54 - like that now there is even more that
27:57 - you can do but for this initial video on
28:01 - crud operations this is where I want to
28:03 - stop some of the things that I'm gonna
28:05 - cover in a future video about fire stir
28:08 - or some of these topics you can also
28:10 - feel free to go and check out those URLs
28:12 - but for now this is a great place to
28:14 - stop as an introduction so now you know
28:17 - how to create read update and delete
28:19 - data in your fire store database but
28:22 - fire store is only a fraction of what
28:24 - you can do on the firebase platform if
28:27 - you want to watch more firebase
28:28 - tutorials check out the play
28:29 - list over there and if you don't want to
28:31 - miss the next firebase tutorial make
28:33 - sure you hit that subscribe button below
28:34 - and click on that Bell notification icon
28:37 - as well and finally if you want to
28:39 - download any of the source code you saw
28:40 - today check out the links below and
28:42 - don't forget to check out our sponsor
28:43 - hosting er alright I'll see you in the
28:45 - next lesson

Cleaned transcript:

Haeckel crew in this firebase tutorial I'm going to show you how to perform crud operations on a fire store database crud you say yes create read update and delete I know I know it's an incredibly unfortunate acronym but so great for jokes right hey what's up my name is Chris Ching and welcome to code with Chris where everyday people like you and I can learn how to crud and to build apps but before we start let's help each other out I'll stop making bad puns and you visit our sponsor hosting er hosting our offers fast and secure web site hosting with an easytouse website builder that I haven't seen anywhere else so you can host and create websites to market your apps even if you don't know anything about web development and if you're planning to use a CMS like WordPress which by the way code with Chris comm uses then you'll be happy to hear that hosting er is optimized for WordPress speed with affordable pricing starting at $0.99 a month with an additional 15% off discount when you use the coupon code code with Chris what is there not to like check out the link below or click on the link in the description to sign up for your account today alright now let's get started with our firebase tutorial alright so this video is going to be a continuation of lessons 1 & 2 in our firebase firestore tutorial series just in case you haven't watched those yet let me do a quick recap in the first video I showed you how to sign up for a firebase account how to create your firebase app and then how to create the Xcode project finally how to integrate those firebase libraries into your Xcode project so that it can communicate with the firebase servers and we got that working in Lesson one so if you haven't done that yet go ahead and watch lesson one you can click on the upper left hand corner for that video I'll list it out there also in lesson two I explained a little bit about how the firestore data model works we talked about collections and documents inside collections if that doesn't ring a bell I would recommend to go and review lesson two now I'll also link to it there so now in lesson three I am going to continue from that point on we've got our Xcode project set up here we're going to start our first store database and I'm gonna show you those crud operations and I'm going to just run through all of the different things you can do with it so we're going to learn how to create documents and collections we're gonna learn how to get the document ID that's autogenerated I'm gonna show you how to update a specific document I'm gonna show you how to delete a document delete a specific field in a document and you're also going to learn how to read the data back alright so if all that sounds good let's get started so here I'm looking at my firebase dashboard what you're gonna want to do is click on database now you probably don't have yours set up yet but I do what you're gonna see is an option to choose either the firebase real time database or the firestore database I think they're pushing firestore it's their newer product it's the secondgeneration one so it's gonna be at the top so create a fire stored at abase there's gonna be a big button prompting you to create one when you create one it's gonna ask you where you want to host that database or where you want it to be located now I would just choose the location that's closest to you the second thing it's going to ask you is what sort of security rules you want to put on it you can put it in test mode which is what I've done here the rules that are defined our public so that anybody can steal modify or delete your data as it's saying right here it's very alarming because it is very important but in the development phase and as we're doing a demo here we don't have any authentication built into our app yet so test mode is going to be the easiest for us once we have implemented some sort of authentication into our app then we can go ahead and switch those database rules so that only authenticated users can read and write and so on and so forth so right now I would recommend to put it into test mode or public mode or whatever they call it you're gonna get a prompt like this which is looks concerning but it's okay for now and then finally you're going to be presented with your brand new empty firestore database now true to what I said there our collections in this column right here and when you click on a collection you're gonna see all the documents in that collection now I don't have any collections right here but we're gonna jump into Xcode right now and I'm gonna show you what sort of statements you can run to start adding some data into your database all right so let's jump into Xcode so here don't worry about this right now let's just do a quick recap of where we left off in Lesson one so in Lesson one we had added the Google service info.plist into our Xcode project we had also added the firebase libraries as pods and then in the app delegate we had imported firebase up here and then we had ran this command or have this command here in the did finish launching so that as soon as the app launches it's going to run this statement which is going to set up our database and make it ready to use for us now if you haven't done any of that yet this was all part of lesson one again go back and watch that alright so we're gonna go into the view controller here i've got some sample code that i've set up and i'm gonna run through it with you and I'm gonna type out new code so this is just going to be samples all right so let's start at the top the first thing you're going to need to do is to import firebase if you're going to want Xcode to recognize those classes you need to do that and then the next thing you need to do is to get a reference to your firestore database and to do that you call the fire store type method of the fire store class and that is going to give you a reference to your database store it in a constant or variable in this case I've declared a constant called DB and I've started there so that's going to be how we run methods and commands against our database all right let's start with this adding a document this is very very simple use your database reference and then you're going to specify a collection now this could be an existing collection it could be a collection that doesn't exist if it doesn't exist then it's going to automatically create it in our case we have no data all right so I'm going to type in collection I'm just gonna make one up and I call it wine because I just went to Niagara Falls in Toronto and I did a bunch of wine tour so that's what's on my mind all right so we're specifying the wine collection and we're gonna add a document now adding a document it's going to automatically generate a document ID for you what we're going to specify next is actually the data for that document so the data is going to be a dictionary where the keys are strings and the data is a variety of different formats that you could put in there we discussed all of those different data formats you can use in lesson two back then so you can go back and watch that video if you need to jog your memory and if you're completely brandnew to app development I forgot to mention that this video series is not meant for the complete beginner I have another video series to get you up to speed make sure you check out my beginner lessons you can click in the upper lefthand corner that's going to go through the different data types dictionaries that we're going to use here and all of that stuff so that this video is going to make a lot more sense if you have that sort of knowledge first again this video series is not for complete beginners all right so we're going to specify a dictionary here with key value pairs according to the data that we want to store it in this document so for example all right I'm gonna have a key called year and it's going to be a number 2017 and I'm gonna have a type and the value for that is maybe gonna be a Pinot Noir now this can be whatever format you want obviously and the label maybe I'm gonna put it as color Estates that's one of the wineries I went to as simple as that let's run our app right now and let's see what happens what it's going to do is create the wine collection because that is it doesn't exist and then it's going to add a document to that collection so let's check out our database them just a refresher right here and sure enough there it is our wine collection and this is the autogenerated document ID and here is the data for that document label as Peller States type as Pinot Noir and year is 2017 exactly like I've specified in here so that's how you basically add data to your database now in some cases you might want the document ID alright that is generated for your document so there is a way to do that let me oh so let's go back to the controller let me show you how to do that the way you do that is you use DB again actually let me just type it out for you so it's gonna make a little more sense instead of only call my thing decoded so you use your reference to the database and then you go ahead and call your collection again we were going to use wine again and this time you just call the document method that's going to create a brand new document in that collection now what you're gonna do is assign that document reference to a variable or a constant so in this case I'm gonna put it into a constant called new document and the thing is now you have a reference to that newly generated document so that you can access the ID property of it and you can get access to that document ID so here let's go new document this is the one that's just created and we're going to call a different method here called set data now set data is basically going to as it suggests replace that data in that document with whatever dictionary that you pass in now there is an optional merge property or parameter sorry that instead of replacing you're going to be merging the data with the existing record but I'm getting ahead of myself let's first do this let's set data and I'll show you this example so here we are setting the data for our document so here I'm gonna say year 2017 again let's if the type is let's do a different type of wine and label is and yes I wanted to do an additional key value pair here where I specify the document ID so here I just want to demonstrate that you have access to that document and you can access the document ID property which is a string ID so let's run this code and see what happens oh yes we don't see anything so you can see that it's updated now check this out this is our new document that we just added it's the second type of wine that I whoops that I added but check this out I had a reference to that autogenerated document ID and I was able to put it in here so that's useful to know in case you need the autogenerated ID now let's take a look at some other ways of setting data now what happens if you want to add a document to your collection with a specific ID you don't always have to use the autogenerated one so you can do that it's very simple let's take a look here adding a document with a specific ID so it's just like adding a new document up here the difference is that this time you're going to manually specify the document ID that you want so the collection for us is white and then you're going to go dot document and you're going to choose this one and you're going to be able to specify a document path or in this case it would be the document ID so let us let us specify one like that and then we would call the set data off of that so up here we did collection and then add document that's just going to auto generate the ID for that document this time we are saying that collection we're specifying the document that we want and then we are going to set the data for that document now if that document doesn't exist right if this document ID doesn't exist it's going to create a brand new document with that ID for you and it's so I'm just gonna put some dummy data here we don't need to go through it again let me do that all right and run it and then in here you're gonna see that appear so that is the specific document ID that I wanted now what happens if the document ID already exists so here my data was test and test so if this document ID already exists and you're calling set data well it's essentially going to replace whatever data is already in that document with the data that you're passing in here so here I'm gonna go you know test let's just do something else that so you can tell the difference so I'm going to do hello and hello right and if we take a look now you can see that it got it basically replaced whatever was in that document all right so this is essentially also a way to update an existing document right it's a way to specify a new document with your own custom document ID but it's also a way to update an existing document if you know the document ID already and that is going to replace the data but what if you don't want to replace the data what if you want to add to it or you want to just update a specific field well check this out if I wanted to update the hello field or hello data I would just put I would just specify that same key and then specify a different value and what that's going to do is it's going to replace the existing value with my new data so that's how you would update an existing field if you wanted to add a new field like a new key value pair you could do that you could say a new key and new value however this is where you need to use that second parameter that I showed you it was called merge and here you would put true and what happens when you specify the merge parameter with passing in true it is going to essentially add whatever field that doesn't exist it'll just tack it on to the document so here you can see that it hasn't replaced it it's actually just added that to there all right so that I actually skipped ahead a little bit so that was what I was trying to show here in this example updating a specific document ID all right so there's that and you probably have noticed that you're a little more experienced that there is a completion handler when you're adding documents and stuff like that so you can check for errors and this is how that would work so let's say that I'm gonna add a new document so to my wine collection you can see here that I can pass in the data but I can also specify a completion closure where I would basically get the results back any errors that might have happened so let's let's take a look at that some of the error is the test and test and this completion handler let's open that up there's a parameter in there called error I'm going to give that a parameter name and all you have to do is just check if that error parameter is nil or not so if error equals error then there was an error this is just in case you're not familiar with it a way to check if if this is nil or not so if error is not nil it's going to be signed to error and I'm going to be able to access it in here now otherwise there is nil so operation completed successfully so that is how you would detect for errors in your write operations all right now let's take a look at deleting so I realize I'm commenting out a lot of the code but if you download the sample code in the link below the description I'll clean it up for you guys so you only have like one set of sample code or not like two sets like this because that looks kind of messy and confusing alright so deleting a document it's pretty simple I don't think I need to type this out so I'm just gonna uncomment my example here you specify the collection you specify the specific document that you want to delete and then you just call the delete method on it you can also just delete a single field and this is how you would do that again you'd specify the collection and then the document and then you call an update data method not a set data like we did up there this is update data and then you just pass in the field that you want to get rid of and the value instead you it would be this and that would essentially remove that key value pair from that document and all of this guys is in the documentation so always have this handy right here like always in the upper right hand corner you'll see a link that says go to Docs and when you go there it's just in case you don't know how to navigate that or where to go you can go to get started for iOS and then down here look for a cloud fire store open that up go to add and manage data and this is the stuff in this section this is stuff that I'm showing you guys right here alright alright detecting for errors is exactly the same way there's an example here but essentially it is the same thing that we did up here where you pass in a closure to that completion handler and there's an air parameter and you just check if that error is nil or not just to see if your delete you're deleting was successful or not actually here I'm going to just show you an example here since there wasn't a sample I just realized so let's do wine let's do document and one of the ones that one of the document IDs I just added was this and then you're going to call delete so you can just call regular delete or you can call delete with completion parameter right and then you'd open that up and there would be an error parameter in there and you'd just you know use optional binding again or an easier way if you don't really understand this syntax is just you know if error is not equal to nil then we have an error else delete was successful so that's using a simple if statement and that might be easier to understand if you're unfamiliar with the Swift syntax all right now we're gonna get into the reading so let's go ahead and comment out this deletion code and let's check out reading a specific document first let's take a look at the simplest example which would be if you knew the collection that you wanted to access and you knew the specific document that you wanted as well so let's say Pino or 2017 then you would be able to call get document just like that and that's it There is obviously a completion Handler so that you can get the data that's double click that to open it up there is a document snapshot and there is an error so let's go ahead and put some parameter names for that and so you'd check if there is no errors first you would let's say if error is nil meaning that there is no error then it first check for an error and then you would check that this document exists because tell you what this document that we specify here might not exist in that collection right and if it does not exist there that's not necessarily an error per se but what would happen is that the document has a in exists property that would tell you if that document exists or not very simply and you kind of have to check if the you have to check two things if the document is not nil and document exists is true that means that there is a document right and here's the document data inside this document variable so you can either use simple if statements right to do that or you can use optional binding again but just in case I will use the simpler syntax so you can go ahead and force unwrap that because you've already checked that it's not nil here so you can safely force and wrap and check the exist property because it's going to stop here if it's nil all right so you're gonna say you know let actual or let document data equals document dot data and there you see that that return value of this data method is your dictionary containing all of the key value pairs for that document so that is how you would get the data for and then obviously you'd have to parse it into whatever object you'd want or maybe you want to keep it as a dictionary you know that's up to you but that's how you would get that dictionary data out of firestore database so that's a very simple example of getting a single document now what if you wanted to get all the documents in a certain collection well you could do that documents getting all documents from a collection you would go DB dot collection and then it will specify our wine collection and instead of get document this time it's pluralized and we say get documents that's this one right here with the completion parameter and again opening this up will give us the two parameters of this closure which is the well this would be actually you would call it the snapshot and this would be error the reason is because the the actual documents are in a property of the snapshot so let me demonstrate so if error is nil so that means there was no error then if you take a look at snapshot in here documents right this is where each document will live so you would do something like you know if error is not equal nil and then you could you could combine up here you could say and snapshot is not equal to nil as well then maybe you will say for document in snapshot documents right and then in here you would say let document data equal document dot data so here you're just looping through each document that was returned inside a for loop and then here you're accessing that particular documents dictionary data so that's how you're going to get the data out of every single document of the wine collection you know but this is all fine and good typically you wouldn't want to retrieve all of the documents in the collection you'd want to somehow filter them right or query so there are various ways to do that getting a sub set of documents so here let's specify the wine collection that's what we want to look in and we can specify a where clause where you can indicate a specific field that you want to look at where it's equal to something or less than something maybe or maybe greater than or that specific array contains some sort of value and there's different ones that you can take a look at but that is how you would kind of specify a subset of those documents so why don't we just say something very simple like where where type is equal true well hmm let's say year is equal to 2017 all right so we're gonna grab all the wines that were of this year and then you would say get documents and then you would proceed as you did up here right because you're getting back a collection of documents so you're going to check if the error is nil you're going to check that the snapshot is not nil and then you're gonna grab the documents we're going to loop through the documents of the snapshot and then for each document you're gonna grab its data and that's how you're gonna get that data out now in a future video I will show you more concretely because we're definitely going to be building apps with these skills that we're learning here and so I'm gonna show you concretely how to declare a structures of maybe like a wine structure with has all of our properties and then we can extract this dictionary data and create an array of wine objects or something like that now there is even more that you can do but for this initial video on crud operations this is where I want to stop some of the things that I'm gonna cover in a future video about fire stir or some of these topics you can also feel free to go and check out those URLs but for now this is a great place to stop as an introduction so now you know how to create read update and delete data in your fire store database but fire store is only a fraction of what you can do on the firebase platform if you want to watch more firebase tutorials check out the play list over there and if you don't want to miss the next firebase tutorial make sure you hit that subscribe button below and click on that Bell notification icon as well and finally if you want to download any of the source code you saw today check out the links below and don't forget to check out our sponsor hosting er alright I'll see you in the next lesson
