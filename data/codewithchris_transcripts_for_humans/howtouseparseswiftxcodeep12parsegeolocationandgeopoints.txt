With timestamps:

00:02 - hey coders what's up it's Chris here and
00:05 - today we're going to talk about geop
00:07 - points in parse which allows you to
00:09 - store Geographic data with your objects
00:11 - in the parse back end and what's more
00:14 - it's really simple to do you create a PF
00:16 - geopo object and you initialize it with
00:18 - the latitude and longitude and then you
00:20 - assign that PF geop Point as the value
00:23 - of a key of your class parse also
00:26 - provides a handy method to get a
00:28 - geopoint from the current location of
00:30 - the person using the app and it does
00:32 - this in the background it's nothing
00:34 - special because under the hood it is
00:36 - just using the CL location manager and
00:38 - it's listening for updated location data
00:41 - from the GPS which is what we would do
00:44 - if we didn't use this parse geopoint for
00:46 - a current location and background method
00:48 - but having this handy method to grab the
00:50 - location is just convenience so once you
00:53 - have your data in the parse backend with
00:55 - this location data you can then in your
00:58 - query provide constraint to query based
01:01 - on location so take a look at this one
01:03 - so here they have a constraint on the
01:05 - query where some sort of key where your
01:08 - location data is is near geopoint and
01:11 - then you can use the current user's
01:13 - location say that you're searching for
01:16 - closest restaurants or something and you
01:18 - have a list of restaurants in your parse
01:20 - backend with that location data you can
01:23 - query all of you know the restaurant
01:25 - objects based on the location key or
01:27 - whatever your key name happens to be
01:29 - that has the location data near geop
01:31 - point and then you pass in the user's
01:33 - current location and then what gets
01:36 - returned is a list of restaurant objects
01:39 - that are closest to the user now you can
01:42 - limit it by distance as well so here you
01:46 - can see there are a couple more methods
01:47 - where key near geop point you know
01:49 - within miles within kilometers within
01:51 - radians uh and then you can limit the
01:53 - result set to maybe 10 results or
01:54 - something like that so that's some
01:56 - pretty handy stuff if you're working
01:57 - with location data in your app so let's
02:00 - try some of this out in our xcode
02:02 - project but first I want to show you
02:05 - what we have in our parse sample app so
02:08 - parse demo is the one we've been working
02:10 - with and if we go to contact that's our
02:14 - class which we created it's our custom
02:16 - class and it's got two rows of data
02:18 - Tommy and John these are two contacts
02:21 - and what I want to do is to add some
02:23 - location data for it I'm going to be
02:25 - creating a brand new contact and I'm
02:27 - going to be setting some geopoint data
02:30 - for a brand new column called location
02:32 - and because it detects that it's a new
02:34 - column it's just going to add it in here
02:37 - but Tommy and John won't have that data
02:39 - let's go back to our xcode project and
02:42 - this is just an empty xcode project with
02:44 - the parse libraries integrated already
02:47 - and if you missed that episode just go
02:48 - to episode one or two of the series to
02:51 - see how to integrate the parse Library
02:53 - into your xcode project but other than
02:55 - that it's a blank single View
02:57 - application with no code written in it
02:59 - inside yet other than this up here
03:02 - import parse so you're going to have to
03:03 - write that import parse statement to
03:05 - work with the libraries okay so in the
03:07 - viewed load what I'm going to do is
03:10 - create a new
03:12 - contact get its get the users current
03:19 - location and then when it does we're
03:22 - going to save it to the parse back end
03:24 - so create new contact is very
03:26 - straightforward I'm going to say let
03:27 - contact equals p F
03:30 - object class name is
03:33 - contact which mirrors this right here
03:37 - right so I'm going to set some key value
03:39 - pairs for it we have first name equals
03:44 - let's say Chris
03:47 - contact last
03:49 - name equals
03:51 - ching and let's set the
03:56 - email blah blah blah blah blah. comom
03:59 - and let's try to get the current
04:01 - location let's go back to the parse
04:04 - documentation and up here we write PF
04:08 - geo. geopoint for current location and
04:11 - background so because we're using the
04:13 - simulator we can simulate the current
04:15 - user location I'll show you how to do
04:17 - that PF geopoint do geopoint for current
04:21 - location background so there is a result
04:24 - block which we're going to double click
04:26 - to expand and it's going to pass a
04:28 - geopoint back either a nil or an actual
04:32 - location so let's put GE Point here
04:36 - error there and inside here we can check
04:40 - if let GE Point let's say if let
04:43 - location equals GE Point uh that means
04:46 - we know that it returned an actual
04:48 - location so we can say something like
04:50 - contact
04:53 - location is equal to location okay so
04:56 - let's set a breakpoint here if they
04:58 - successfully geocat the user
05:03 - else something's or couldn't get the
05:07 - location info and then you can print the
05:10 - error or something like that uh okay so
05:12 - let's run it and give it a whirl uh
05:15 - actually we forgot to do one thing we
05:16 - forgot to save the object back to the
05:19 - parse back end but let's see what
05:21 - happens okay so nothing's happening
05:23 - right now because uh the location hasn't
05:25 - been found but we go up to here we go up
05:28 - to debug we go up to location and then
05:31 - we can pick a location let's say apple
05:34 - let's pick a different one because it
05:35 - was at Apple let's say custom
05:37 - location and let's change that
05:42 - okay okay it's not working I have an
05:44 - idea I think I know what's wrong because
05:47 - normally when you run this on a device
05:49 - it's actually going to pop up a little
05:51 - dialogue asking you for permission so I
05:53 - think that in the simulator it doesn't
05:55 - do that so we actually have to give our
05:57 - app uh permission
06:04 - and it's basically location
06:09 - services okay so I figured out why it
06:11 - wasn't working if in the simulator you
06:14 - go up here to debug and you open up the
06:16 - system log you can kind of see what has
06:18 - been going on and if you look closely it
06:22 - says here that my parse demo app is
06:25 - depending on Legacy on demand
06:27 - authorization which is not supported for
06:29 - new apps so apparently the authorization
06:32 - for geoca the user has changed and what
06:35 - it should be doing is showing up a
06:37 - dialogue or something like that asking
06:39 - me for permission to geolocate the user
06:41 - now it might actually work on a device
06:43 - it may just be uh something that's not
06:46 - working on the simulator however even if
06:49 - this method doesn't work geop point for
06:51 - current location background you can
06:52 - always just do it the traditional way of
06:55 - getting the user's location using CL
06:57 - location manager which you can find in
06:59 - other tutorials but the point is is that
07:01 - once you get that geol location you can
07:04 - either convert it to a PF Geo point if
07:07 - you're using CL location manager or if
07:09 - you're using this method which we
07:12 - weren't able to get working in the
07:13 - simulator it already just gives you back
07:15 - a PFG point so in my xcode project what
07:20 - I'm going to do is since this isn't
07:23 - working for us right now I'm just going
07:25 - to erase this right here and just write
07:29 - something like to do get users current
07:33 - location and then what we would do is we
07:36 - would update it with the location uh I'm
07:40 - just going to create a PF Geo point
07:43 - right here for the sake of our
07:45 - demo and I'm going to pass in you
07:49 - know just some latitude and longitude
07:52 - and then we're going to call contact
07:54 - save in background okay I'm going to run
07:58 - the app just so we can have that contact
08:01 - saved into our parse backend here let me
08:06 - just refresh it and here we are we've
08:08 - got the new contact and if I scroll a
08:11 - little to the right we can see that
08:13 - there's now geopoint data for at least
08:15 - one contact right and if we were to
08:18 - perform a query comment this out if we
08:21 - were to perform
08:23 - query contacts based on location we
08:27 - would say let query equals PF
08:31 - query we're looking for contact and we
08:35 - would add a constraint where key near
08:38 - Geo point and then we would pass in the
08:40 - user's current location so the key is
08:43 - location because that's what it's named
08:46 - right here you would fill in whatever
08:48 - that column name was and then for the
08:50 - Geo point you would capture the user's
08:52 - current location and pass this in here
08:54 - and then it's going to fetch all of the
08:56 - contacts which have some sort of
08:59 - geopoint data and compare it with your
09:01 - current location and then return that to
09:03 - you so right now I don't have
09:05 - any so I'm just going to create a brand
09:08 - new
09:09 - geoint and pass it in there just going
09:12 - to put some numbers in here and then you
09:14 - would go and execute the query so find
09:18 - objects in background with block and
09:19 - that's how you add Geographic data to
09:22 - your PF objects and if any of you guys
09:25 - actually try this geopoint for current
09:27 - location and background on your device
09:29 - on your physical device and you get it
09:31 - working please let me know in the
09:33 - comment section below let everyone else
09:34 - know as well thanks for watching guys
09:36 - please give it a thumbs up and please
09:38 - share it with anyone whom you think
09:39 - could use the tutorial thanks for
09:41 - watching again and I'll see you guys
09:42 - tomorrow
09:47 - [Music]
09:52 - bye

Cleaned transcript:

hey coders what's up it's Chris here and today we're going to talk about geop points in parse which allows you to store Geographic data with your objects in the parse back end and what's more it's really simple to do you create a PF geopo object and you initialize it with the latitude and longitude and then you assign that PF geop Point as the value of a key of your class parse also provides a handy method to get a geopoint from the current location of the person using the app and it does this in the background it's nothing special because under the hood it is just using the CL location manager and it's listening for updated location data from the GPS which is what we would do if we didn't use this parse geopoint for a current location and background method but having this handy method to grab the location is just convenience so once you have your data in the parse backend with this location data you can then in your query provide constraint to query based on location so take a look at this one so here they have a constraint on the query where some sort of key where your location data is is near geopoint and then you can use the current user's location say that you're searching for closest restaurants or something and you have a list of restaurants in your parse backend with that location data you can query all of you know the restaurant objects based on the location key or whatever your key name happens to be that has the location data near geop point and then you pass in the user's current location and then what gets returned is a list of restaurant objects that are closest to the user now you can limit it by distance as well so here you can see there are a couple more methods where key near geop point you know within miles within kilometers within radians uh and then you can limit the result set to maybe 10 results or something like that so that's some pretty handy stuff if you're working with location data in your app so let's try some of this out in our xcode project but first I want to show you what we have in our parse sample app so parse demo is the one we've been working with and if we go to contact that's our class which we created it's our custom class and it's got two rows of data Tommy and John these are two contacts and what I want to do is to add some location data for it I'm going to be creating a brand new contact and I'm going to be setting some geopoint data for a brand new column called location and because it detects that it's a new column it's just going to add it in here but Tommy and John won't have that data let's go back to our xcode project and this is just an empty xcode project with the parse libraries integrated already and if you missed that episode just go to episode one or two of the series to see how to integrate the parse Library into your xcode project but other than that it's a blank single View application with no code written in it inside yet other than this up here import parse so you're going to have to write that import parse statement to work with the libraries okay so in the viewed load what I'm going to do is create a new contact get its get the users current location and then when it does we're going to save it to the parse back end so create new contact is very straightforward I'm going to say let contact equals p F object class name is contact which mirrors this right here right so I'm going to set some key value pairs for it we have first name equals let's say Chris contact last name equals ching and let's set the email blah blah blah blah blah. comom and let's try to get the current location let's go back to the parse documentation and up here we write PF geo. geopoint for current location and background so because we're using the simulator we can simulate the current user location I'll show you how to do that PF geopoint do geopoint for current location background so there is a result block which we're going to double click to expand and it's going to pass a geopoint back either a nil or an actual location so let's put GE Point here error there and inside here we can check if let GE Point let's say if let location equals GE Point uh that means we know that it returned an actual location so we can say something like contact location is equal to location okay so let's set a breakpoint here if they successfully geocat the user else something's or couldn't get the location info and then you can print the error or something like that uh okay so let's run it and give it a whirl uh actually we forgot to do one thing we forgot to save the object back to the parse back end but let's see what happens okay so nothing's happening right now because uh the location hasn't been found but we go up to here we go up to debug we go up to location and then we can pick a location let's say apple let's pick a different one because it was at Apple let's say custom location and let's change that okay okay it's not working I have an idea I think I know what's wrong because normally when you run this on a device it's actually going to pop up a little dialogue asking you for permission so I think that in the simulator it doesn't do that so we actually have to give our app uh permission and it's basically location services okay so I figured out why it wasn't working if in the simulator you go up here to debug and you open up the system log you can kind of see what has been going on and if you look closely it says here that my parse demo app is depending on Legacy on demand authorization which is not supported for new apps so apparently the authorization for geoca the user has changed and what it should be doing is showing up a dialogue or something like that asking me for permission to geolocate the user now it might actually work on a device it may just be uh something that's not working on the simulator however even if this method doesn't work geop point for current location background you can always just do it the traditional way of getting the user's location using CL location manager which you can find in other tutorials but the point is is that once you get that geol location you can either convert it to a PF Geo point if you're using CL location manager or if you're using this method which we weren't able to get working in the simulator it already just gives you back a PFG point so in my xcode project what I'm going to do is since this isn't working for us right now I'm just going to erase this right here and just write something like to do get users current location and then what we would do is we would update it with the location uh I'm just going to create a PF Geo point right here for the sake of our demo and I'm going to pass in you know just some latitude and longitude and then we're going to call contact save in background okay I'm going to run the app just so we can have that contact saved into our parse backend here let me just refresh it and here we are we've got the new contact and if I scroll a little to the right we can see that there's now geopoint data for at least one contact right and if we were to perform a query comment this out if we were to perform query contacts based on location we would say let query equals PF query we're looking for contact and we would add a constraint where key near Geo point and then we would pass in the user's current location so the key is location because that's what it's named right here you would fill in whatever that column name was and then for the Geo point you would capture the user's current location and pass this in here and then it's going to fetch all of the contacts which have some sort of geopoint data and compare it with your current location and then return that to you so right now I don't have any so I'm just going to create a brand new geoint and pass it in there just going to put some numbers in here and then you would go and execute the query so find objects in background with block and that's how you add Geographic data to your PF objects and if any of you guys actually try this geopoint for current location and background on your device on your physical device and you get it working please let me know in the comment section below let everyone else know as well thanks for watching guys please give it a thumbs up and please share it with anyone whom you think could use the tutorial thanks for watching again and I'll see you guys tomorrow bye
