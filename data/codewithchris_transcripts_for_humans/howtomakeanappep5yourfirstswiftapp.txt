With timestamps:

00:04 - hey guys welcome to lesson 5 of how to
00:07 - make iphone apps with no programming
00:09 - experience and in this lesson we are
00:13 - going to start our first Xcode project
00:15 - and build our first app so if you've
00:18 - been following along you should have
00:19 - Xcode 6 installed already and when you
00:22 - open up Xcode you're going to see a
00:24 - welcome dialog like this and we're just
00:27 - going to select this option create a new
00:29 - Xcode project if you don't see this
00:31 - dialog you can go up here to file new
00:34 - and project so it'll do the same thing
00:37 - so we're just going to create a new
00:40 - Xcode project so the first dialog that
00:44 - you see will be one for choosing a
00:46 - template for your new project the first
00:49 - thing you want to do if you don't see
00:50 - any of these templates is make sure that
00:52 - you're in the application section under
00:55 - iOS here on the left hand side and you
00:57 - should see these different templates
00:59 - available to you now we're going to
01:00 - start with the most basic one which is
01:03 - just gives you a single blank view for
01:05 - your project depending on what type of
01:07 - project we wanted to build for example
01:09 - if we wanted to build an app with tabs
01:12 - along the bottom we could choose this
01:14 - template as a starting point likewise if
01:18 - we were building a page based one or a
01:19 - master-detail type of app these may be
01:22 - better starting points now that's not to
01:24 - say that we can get to these other
01:27 - templates by choosing this one it's just
01:30 - a better starting point you know we
01:32 - could still add a tab bar for our single
01:34 - View application we could still add page
01:37 - based navigation to our single view it
01:40 - just depends which one is the best
01:41 - starting point for your app so we're
01:43 - going to select single view application
01:45 - and we're going to click Next so we're
01:48 - going to go through these settings
01:49 - together and you want to pay attention
01:50 - to some of these settings because it may
01:53 - alter what you see in the next view so
01:55 - for product name that's just what our
01:58 - app is going to be named and I'm just
02:01 - going to type in hello world here so
02:04 - your organization name is something that
02:06 - you you can put anything in here it
02:09 - could be your personal name it could be
02:10 - your company's name
02:12 - and as for your organization identifier
02:15 - it's going to be used in conjunction
02:16 - with your product name to create a
02:19 - unique bundle or app identifier so
02:22 - normally what people put is com dot and
02:25 - then either their name or company name
02:26 - and then it would follow the system
02:29 - where it would be comm dot their company
02:31 - name dot their app name now the next two
02:35 - are important so for the language we're
02:38 - going to be going through Swift so you
02:40 - want to make sure you're selecting Swift
02:42 - for this language here and for devices
02:45 - we're only talking about iPhone at this
02:47 - point so select the iPhone and you'll
02:50 - want to make sure that use core data is
02:53 - unchecked so we're not going to go
02:55 - through that topic today click Next you
03:00 - can save it anywhere I'm going to save
03:03 - it on my desktop you want to make sure
03:05 - before you click create there that this
03:07 - source control checkbox is unchecked as
03:10 - well and source control is a way of
03:13 - storing and managing your code tracking
03:15 - your changes as you progress in your
03:17 - project but we won't be using it today
03:20 - here in this demo and it may be a topic
03:23 - that we cover in the future so I'm just
03:26 - going to click create ok so let's go
03:31 - through some of files in your new
03:33 - project so at the very very top the root
03:37 - node is your project properties so when
03:40 - you click this on the editor area over
03:42 - here you're going to see all of your
03:45 - project configuration settings and we'll
03:47 - be definitely using this area in the
03:50 - future moving on we have the app
03:54 - delegate so the app delegate provides a
03:56 - chance for you to type in some code or
04:00 - logic where you can handle different
04:02 - situations that arise in the lifetime of
04:05 - your application for example if you read
04:07 - some of these here application did enter
04:10 - enter the background or will come back
04:13 - and enter the foreground or to become
04:15 - active or will terminate so it gives you
04:18 - a chance you can write code here to
04:21 - maybe save that data or restore some
04:24 - data or
04:25 - restore the last place the last view of
04:28 - the user was using it gives you a chance
04:30 - to do something at different points in
04:33 - the applications lifetime the second
04:36 - thing is the view controller so we went
04:38 - over this in the Model View controller
04:40 - or MVC design pattern in the last lesson
04:43 - so this view controller manages the view
04:47 - now we get to the main dot storyboard
04:50 - and when you click this your editor area
04:53 - turns into interface builder so now you
04:56 - see the view for your single view
04:58 - application and this is the view
05:00 - controller that manages this view now
05:03 - what is the storyboard so the storyboard
05:06 - manages the flow of your application in
05:09 - a visual manner you see this arrow right
05:11 - here well this arrow represents the
05:14 - starting point or the entry point of
05:16 - your application and right now it's
05:18 - pointing to this view which is managed
05:20 - by this view controller right here it is
05:23 - possible when we build some more complex
05:26 - apps that we will have multiple views
05:29 - and multiple view controllers and this
05:31 - arrow will indicate you know what the
05:34 - starting point is now here are some tips
05:37 - to navigate the storyboard you can
05:39 - double-click the area to kind of zoom
05:42 - out or you can right click and you can
05:45 - pick a zoom level you could double click
05:48 - and zoom back in okay moving on we have
05:53 - our image asset library and in here this
05:57 - is where we're going to add image assets
05:59 - to our project and you can literally
06:02 - just create a new image set and drag and
06:05 - drop our assets in here and then we can
06:07 - refer to them by their name that we give
06:10 - it here in our code to access the image
06:13 - asset so we're going to do this in our
06:16 - demo projects in module 2 and lastly we
06:20 - have this launch screen zib and this is
06:24 - another interface builder file and this
06:26 - just represents the the startup screen
06:29 - for our app ok so first thing we're
06:32 - going to do is go back to main dot
06:33 - storyboard and we're going to do our
06:36 - hello world demo application
06:38 - now if you've ever done any other
06:41 - programming education before you may
06:43 - recognize that HelloWorld is kind of the
06:46 - customary first app or first program so
06:49 - that's what we're going to do here iOS
06:51 - style now we're looking at main
06:54 - storyboard and in our editor we see our
06:56 - view here so what we're going to do is
07:00 - visually add a label to the view and
07:03 - just change the text of the label to say
07:05 - hello world and then we're going to run
07:07 - our application first thing you will
07:10 - want to do in the lower right hand
07:11 - corner if you remember this is called
07:13 - the library pane and if you don't see
07:16 - these elements that you know I have here
07:19 - make sure that you're on this tab
07:21 - because there are a couple of different
07:23 - tabs you can be on here and don't worry
07:26 - if it doesn't look like a list because
07:28 - there's another button here to change
07:30 - the view yours could look like this just
07:33 - a grid of grid of elements or a listing
07:36 - of elements so in this search box you
07:40 - can kind of filter through the library
07:42 - and I'm going to type in label and I'm
07:47 - just going to click this and drag it in
07:50 - the center now at this point we can
07:53 - change the text of the label so I'm just
07:55 - going to double click it and I'm going
07:58 - to type in hello world
08:02 - next we're actually going to just run
08:05 - our app and watch it in the simulator so
08:08 - up here in the upper left hand corner
08:10 - make sure that you've selected a
08:13 - simulator
08:14 - so I'm mines on iPhone 6 and I'm just
08:17 - going to hit run I'm going to compile
08:19 - your application and then it's going to
08:21 - launch the iOS simulator okay so it's
08:27 - launching it's loading our app so you'll
08:31 - notice that we see the label in our view
08:33 - but it's kind of not in the center it's
08:36 - off to the side well what happened
08:38 - because we actually had our label in the
08:40 - center here so I'm going to stop the
08:43 - running of our application
08:48 - now if you had trouble running your
08:51 - application or you had some error pop up
08:54 - one thing that I would try is hit the
08:56 - simulator here and then there's an
09:00 - option to reset it it's just to reset
09:02 - all of the content and settings so if
09:04 - you go up to the menu here it's going to
09:06 - ask you are you really sure you want to
09:08 - reset it and you hit reset it's going to
09:10 - reset it to its original default blank
09:14 - slate state and then you can try running
09:19 - it again okay but now let's look at the
09:22 - issue of the label positioning so the
09:25 - reason that the label is off-centered is
09:27 - because iOS uses a system called auto
09:30 - layout to determine where the element
09:32 - should sit and auto layout describes the
09:35 - position of the element based on
09:37 - something called constraints and we're
09:39 - going to take a look at that now so
09:42 - click your label and then down here in
09:45 - the lower right hand corner you're going
09:47 - to see this icon which says align so I'm
09:52 - going to hit that and we're going to add
09:56 - to alignment constraints so I'm going to
09:59 - check that horizontal Center in the
10:01 - container and vertical Center in the
10:03 - container I'm going to click this button
10:05 - add these two constraints okay so once I
10:09 - did that you'll notice that this trigger
10:11 - or this line shows you the constraints
10:14 - for our element which is in the center
10:16 - and you'll notice here in this pane on
10:20 - the left you can open this and you can
10:23 - see that there are two constraints for
10:25 - this label and if you don't see this
10:27 - pane it's this button right here that
10:30 - will open and close that now if I run it
10:34 - again you'll see that the label is
10:37 - actually in the center because it's
10:39 - going to when it displays that label
10:42 - it's going to read those constraints and
10:44 - it's going to based on those constraints
10:48 - vertically and horizontally Center that
10:51 - element and the reason that this is good
10:55 - rather than positioning exactly where we
10:58 - put it the reason why auto layout is
11:00 - good is because it work
11:02 - the same way on any screen right so I
11:05 - can rotate it and it would still be in
11:07 - the center I could have a bigger screen
11:09 - or a smaller screen and based on those
11:12 - constraints or those rules it would
11:14 - still be in the center now that Apple is
11:16 - creating multiple screen sizes it's even
11:20 - more important to use auto layout so in
11:22 - order to rotate your simulator you can
11:25 - actually go here up hardware and you can
11:28 - select rotate left or right or you can
11:30 - just hold down command and press left or
11:32 - right so there you have it
11:35 - congratulations you've created your
11:37 - first simple app in the next lesson
11:40 - we're going to start module 2 and we're
11:42 - going to start looking at creating more
11:43 - complex apps where you'll have to write
11:45 - Swift code

Cleaned transcript:

hey guys welcome to lesson 5 of how to make iphone apps with no programming experience and in this lesson we are going to start our first Xcode project and build our first app so if you've been following along you should have Xcode 6 installed already and when you open up Xcode you're going to see a welcome dialog like this and we're just going to select this option create a new Xcode project if you don't see this dialog you can go up here to file new and project so it'll do the same thing so we're just going to create a new Xcode project so the first dialog that you see will be one for choosing a template for your new project the first thing you want to do if you don't see any of these templates is make sure that you're in the application section under iOS here on the left hand side and you should see these different templates available to you now we're going to start with the most basic one which is just gives you a single blank view for your project depending on what type of project we wanted to build for example if we wanted to build an app with tabs along the bottom we could choose this template as a starting point likewise if we were building a page based one or a masterdetail type of app these may be better starting points now that's not to say that we can get to these other templates by choosing this one it's just a better starting point you know we could still add a tab bar for our single View application we could still add page based navigation to our single view it just depends which one is the best starting point for your app so we're going to select single view application and we're going to click Next so we're going to go through these settings together and you want to pay attention to some of these settings because it may alter what you see in the next view so for product name that's just what our app is going to be named and I'm just going to type in hello world here so your organization name is something that you you can put anything in here it could be your personal name it could be your company's name and as for your organization identifier it's going to be used in conjunction with your product name to create a unique bundle or app identifier so normally what people put is com dot and then either their name or company name and then it would follow the system where it would be comm dot their company name dot their app name now the next two are important so for the language we're going to be going through Swift so you want to make sure you're selecting Swift for this language here and for devices we're only talking about iPhone at this point so select the iPhone and you'll want to make sure that use core data is unchecked so we're not going to go through that topic today click Next you can save it anywhere I'm going to save it on my desktop you want to make sure before you click create there that this source control checkbox is unchecked as well and source control is a way of storing and managing your code tracking your changes as you progress in your project but we won't be using it today here in this demo and it may be a topic that we cover in the future so I'm just going to click create ok so let's go through some of files in your new project so at the very very top the root node is your project properties so when you click this on the editor area over here you're going to see all of your project configuration settings and we'll be definitely using this area in the future moving on we have the app delegate so the app delegate provides a chance for you to type in some code or logic where you can handle different situations that arise in the lifetime of your application for example if you read some of these here application did enter enter the background or will come back and enter the foreground or to become active or will terminate so it gives you a chance you can write code here to maybe save that data or restore some data or restore the last place the last view of the user was using it gives you a chance to do something at different points in the applications lifetime the second thing is the view controller so we went over this in the Model View controller or MVC design pattern in the last lesson so this view controller manages the view now we get to the main dot storyboard and when you click this your editor area turns into interface builder so now you see the view for your single view application and this is the view controller that manages this view now what is the storyboard so the storyboard manages the flow of your application in a visual manner you see this arrow right here well this arrow represents the starting point or the entry point of your application and right now it's pointing to this view which is managed by this view controller right here it is possible when we build some more complex apps that we will have multiple views and multiple view controllers and this arrow will indicate you know what the starting point is now here are some tips to navigate the storyboard you can doubleclick the area to kind of zoom out or you can right click and you can pick a zoom level you could double click and zoom back in okay moving on we have our image asset library and in here this is where we're going to add image assets to our project and you can literally just create a new image set and drag and drop our assets in here and then we can refer to them by their name that we give it here in our code to access the image asset so we're going to do this in our demo projects in module 2 and lastly we have this launch screen zib and this is another interface builder file and this just represents the the startup screen for our app ok so first thing we're going to do is go back to main dot storyboard and we're going to do our hello world demo application now if you've ever done any other programming education before you may recognize that HelloWorld is kind of the customary first app or first program so that's what we're going to do here iOS style now we're looking at main storyboard and in our editor we see our view here so what we're going to do is visually add a label to the view and just change the text of the label to say hello world and then we're going to run our application first thing you will want to do in the lower right hand corner if you remember this is called the library pane and if you don't see these elements that you know I have here make sure that you're on this tab because there are a couple of different tabs you can be on here and don't worry if it doesn't look like a list because there's another button here to change the view yours could look like this just a grid of grid of elements or a listing of elements so in this search box you can kind of filter through the library and I'm going to type in label and I'm just going to click this and drag it in the center now at this point we can change the text of the label so I'm just going to double click it and I'm going to type in hello world next we're actually going to just run our app and watch it in the simulator so up here in the upper left hand corner make sure that you've selected a simulator so I'm mines on iPhone 6 and I'm just going to hit run I'm going to compile your application and then it's going to launch the iOS simulator okay so it's launching it's loading our app so you'll notice that we see the label in our view but it's kind of not in the center it's off to the side well what happened because we actually had our label in the center here so I'm going to stop the running of our application now if you had trouble running your application or you had some error pop up one thing that I would try is hit the simulator here and then there's an option to reset it it's just to reset all of the content and settings so if you go up to the menu here it's going to ask you are you really sure you want to reset it and you hit reset it's going to reset it to its original default blank slate state and then you can try running it again okay but now let's look at the issue of the label positioning so the reason that the label is offcentered is because iOS uses a system called auto layout to determine where the element should sit and auto layout describes the position of the element based on something called constraints and we're going to take a look at that now so click your label and then down here in the lower right hand corner you're going to see this icon which says align so I'm going to hit that and we're going to add to alignment constraints so I'm going to check that horizontal Center in the container and vertical Center in the container I'm going to click this button add these two constraints okay so once I did that you'll notice that this trigger or this line shows you the constraints for our element which is in the center and you'll notice here in this pane on the left you can open this and you can see that there are two constraints for this label and if you don't see this pane it's this button right here that will open and close that now if I run it again you'll see that the label is actually in the center because it's going to when it displays that label it's going to read those constraints and it's going to based on those constraints vertically and horizontally Center that element and the reason that this is good rather than positioning exactly where we put it the reason why auto layout is good is because it work the same way on any screen right so I can rotate it and it would still be in the center I could have a bigger screen or a smaller screen and based on those constraints or those rules it would still be in the center now that Apple is creating multiple screen sizes it's even more important to use auto layout so in order to rotate your simulator you can actually go here up hardware and you can select rotate left or right or you can just hold down command and press left or right so there you have it congratulations you've created your first simple app in the next lesson we're going to start module 2 and we're going to start looking at creating more complex apps where you'll have to write Swift code
