With timestamps:

00:00 - hey code crew firestore is not like your
00:02 - traditional database
00:03 - it doesn't use tables and rows and it
00:05 - doesn't use sequel in fact this second
00:07 - generation firebase product isn't even
00:09 - like its first generation counterpart
00:11 - the firebase real time database in this
00:14 - video I'm gonna show you how your data
00:15 - is going to be structured and organized
00:17 - in a fire-- store database and what
00:20 - sorts of data that you can store in it
00:21 - alright stay tuned hi I'm Chris Chang
00:29 - and welcome to code with Chris where we
00:30 - teach normal people like you and I how
00:32 - to build apps and how to code now if
00:34 - you're coming from lesson one of the
00:36 - firestore tutorial series you'll know
00:37 - that I'm going to show you how to use
00:39 - firestore database in the context of an
00:41 - app however I've decided to move that
00:43 - into its own separate series and
00:45 - playlist so that this firestore tutorial
00:48 - series will be purely focused on how to
00:50 - use firestore and in that series I will
00:52 - show you how to build an app that
00:54 - leverages the firestore database if you
00:57 - want to follow along as these tutorials
00:59 - get released two to three times a week
01:00 - then I highly urge you to hit that
01:02 - subscribe button below and don't forget
01:04 - to show your support by hitting the
01:06 - thumbs up button that is really gonna
01:08 - help spread the word all right
01:09 - let's dive in we're going to start with
01:12 - some diagrams so I can illustrate the
01:13 - concepts for you and then we're going to
01:15 - go do a screencast and dive into the
01:17 - firestore back-end and I'll put the
01:19 - concepts into practice
01:20 - so that you can see it with your own
01:21 - eyes now in the firestore database there
01:24 - are two main record types collections
01:26 - and documents your database is
01:29 - structured as a whole bunch of
01:30 - collections and each collection holds a
01:33 - bunch of documents so essentially your
01:35 - database could be described as multiple
01:37 - collections of documents now each
01:40 - collection has a unique name and each
01:43 - document also has a name the documents
01:45 - within each collection must have unique
01:47 - names but the documents and different
01:49 - collections can have the same name
01:51 - now collections and documents are just a
01:53 - way to organize your data but where does
01:55 - your data actually live the answer is
01:57 - inside your documents each document
01:59 - holds your actual data the data in each
02:02 - document is represented in pairs of
02:04 - information each pair contains a field
02:08 - and a value think of the field as a
02:10 - label and the value would be the data
02:13 - that you want to store it so what sorts
02:15 - of data can you store well here's a list
02:17 - in the firestore database documentation
02:20 - it provides more details about each data
02:22 - type and I'll leave the link to that
02:24 - below the video in a minute I'll
02:26 - demonstrate each data type for you in an
02:28 - actual fire store database but right now
02:30 - I want to discuss the map data type a
02:32 - little further no this is not a
02:35 - geographical map instead this data type
02:37 - allows you to nest more pairs of data so
02:40 - to illustrate this is your document the
02:43 - first pair might have a field called
02:44 - nickname and the data type is text the
02:46 - value might be bull's eye the second
02:49 - data pair might have a field called name
02:50 - and the data type as map the value would
02:53 - actually be two nested data pairs
02:55 - representing the first name and the last
02:57 - name this would be useful if you needed
03:00 - the two pieces of information separately
03:02 - and this is just one example of how the
03:04 - map data type can be used if you're
03:07 - thinking that you could have just had
03:08 - three fields with the data type text you
03:11 - wouldn't be wrong the map data type just
03:13 - gives you another option and while we're
03:15 - on the topic of fields and values just
03:18 - in case you're coming from a MySQL
03:20 - background or something like that I just
03:22 - want to make sure that you know you can
03:24 - have different fields for documents in
03:26 - the same collection I know it can be
03:28 - really tough to get out of a my SQL
03:29 - mindset where you have tables columns
03:32 - and rows that was the case for me
03:34 - now having uniformity across your
03:36 - document it definitely helps when it
03:38 - comes time to query them but I just want
03:40 - you to know that it's not a requirement
03:42 - now before we dive into the screencast
03:45 - where I demo this stuff for real I need
03:47 - to explain one more concept
03:48 - sub-collections
03:50 - you see each document can actually have
03:52 - its own collections of documents and
03:55 - then those documents can have their own
03:58 - collections of documents and we can go
04:00 - up to a hundred levels deep now that you
04:03 - know how the data is structured and
04:05 - organized in a fire-- store database
04:07 - let's go and demonstrate these concepts
04:09 - in an actual fire stored database so
04:12 - here we're looking at the firebase
04:14 - back-end for the custom log in firebase
04:17 - authentication demo that I did last week
04:19 - and if you didn't see that I'll link to
04:21 - it above but in addition to having a
04:25 - fent occation store on this
04:27 - and you can also set up a database and
04:29 - this is where we're going to be demoing
04:31 - some of the stuff that I just showed you
04:33 - now the database part when you set this
04:35 - up for the first time you can actually
04:37 - choose from real time database and cloud
04:39 - firestore I'll do a separate video on
04:41 - differences and stuff like that but
04:42 - right now I want to focus on showing you
04:45 - some of the concepts that we just went
04:46 - through so here is a brand new empty
04:51 - firestore database we talked about
04:53 - collections of documents alright so here
04:56 - we're gonna start a brand new collection
04:57 - and I'm gonna name it just something
04:59 - like 8 for example it says that you know
05:02 - you could call it users if each document
05:04 - is going to be information about a
05:07 - particular user but I'm just not gonna
05:09 - use real names here for the sake of this
05:11 - demonstration but what I do want to
05:13 - point out to you is take a look at this
05:15 - path because when it comes time to
05:19 - actually access this data and work with
05:21 - it this path is going to be really
05:24 - important and this is just the sport
05:27 - slash is going to be known as your route
05:29 - ok so that's going to be you know the
05:32 - starting point so this collection here
05:34 - that idea is going to be a and it's
05:36 - going to be basically at the route as we
05:40 - get deeper and deeper you'll see that
05:41 - this path is going to grow and it's
05:44 - basically constructed by these
05:46 - collection and document IDs I'll show
05:48 - you what I mean let's go ahead and click
05:50 - Next
05:50 - we're gonna add a starting document in
05:53 - this collection I'm just gonna call this
05:55 - you know document 8 something like that
05:58 - and we can also add a sample field so
06:01 - let's do that let's say you know name
06:05 - what did we use we use the nickname
06:07 - right so let's do that and string is
06:10 - basically text so we're gonna start with
06:11 - that let's eat bullseye and let's save
06:14 - this and take a look at what we've got
06:16 - so this column on the left hand side
06:19 - lists all of our collections at the root
06:22 - node we've so far we've got one called a
06:25 - and then inside that collection we have
06:27 - one document called doc slash a we can
06:31 - add a separate document I'm just going
06:34 - to do doc slash B and I'll add this time
06:39 - I'm gonna
06:40 - purposely make it different just so I
06:46 - can prove to you that see it doesn't
06:48 - matter the actual fields and data inside
06:52 - of each document doesn't have to be
06:54 - uniform and then on this last hand
06:58 - column you're looking inside the
07:00 - document that we have selected in the
07:01 - middle column so these are all of the
07:05 - data pairs in document a and if I saw a
07:08 - document b here would be all of the data
07:10 - pairs as well a couple of things I want
07:12 - to point out to you the path to access
07:15 - this document right here would be you
07:19 - can see that little house represents
07:21 - kind of the root node it would be /a
07:24 - because that's the collection this
07:26 - document is in write ford slash doc
07:29 - slash eight and that would give you the
07:31 - reference to that specific document now
07:35 - before we dive into the documents and
07:36 - start looking at data types and stuff
07:38 - like that there are a few more things I
07:39 - want to demonstrate just based on what
07:41 - we talked about so let's start a second
07:43 - collection called B and I'm also going
07:46 - to start a new document just do that and
07:54 - I want to demonstrate to you that the
07:57 - collection names here in this root group
08:00 - of collections these have to be unique
08:02 - however if you take a look at the
08:05 - documents in here I have doc slash a and
08:08 - doc slash a both of these documents have
08:11 - the same ID but that's not a problem
08:14 - because the actual reference to that
08:16 - document for this guy is ford slash a /a
08:24 - whereas for this one it would be fort
08:27 - slash beat and then forward slash doc -
08:29 - eight all right now let's dive into a
08:32 - document and take a look at fields and
08:35 - data types so ignoring this start
08:38 - collection part which is for sub
08:41 - collections as we mentioned let's take a
08:43 - look at the different fields and add
08:45 - some sample ones so let's add
08:48 - [Applause]
08:50 - I'm just gonna call it a number and
08:52 - we'll choose number as the data type so
08:55 - I'll add that we we've also got here
08:58 - let's pick a different data type here
09:00 - boolean let's call this
09:03 - I don't know switch be true or false
09:07 - what else have we got
09:09 - I want to do the easy ones first note
09:11 - just means nothing B you know it doesn't
09:18 - really matter okay so that means nothing
09:21 - and we've got timestamp right so you
09:30 - know this interface lets you pretty
09:33 - handily add date and times
09:36 - so that's date we've got geo point now
09:42 - this is some sort of lat and long and
09:49 - we've also got a reference now a
09:53 - reference you can see here is a path to
09:57 - another document and then you specify
10:00 - exactly how we just Illustrated it would
10:03 - be a path like you see up here right
10:05 - slash b / whenever that document ID
10:07 - maybe and you would specify that
10:10 - document path right here and this value
10:14 - becomes a reference to another document
10:17 - now this can be useful for
10:19 - cross-referencing data so here I'm going
10:22 - to specify collection a and maybe doc
10:27 - slash a or something like that
10:28 - oops forgot here give that feel the name
10:32 - okay so there we go
10:34 - now last but not least we also have
10:38 - actually we have an array and let's just
10:42 - call this a list now the interesting
10:44 - thing about a race here and it's kind of
10:48 - different from working with your
10:49 - standard Swift arrays is that you know
10:52 - the data types can be different
10:56 - for each for each item in your array so
11:01 - that's kind of cool right now the last
11:03 - thing I want to show you our sub
11:05 - collections so let's do right here in
11:09 - this document start a sub collection
11:13 - I'll just I call this my sub collection
11:18 - and I'm just gonna call the sub a and we
11:23 - can do something like that
11:31 - so let's this is the path right to that
11:34 - sub 8 document you can see it's
11:37 - collection B and then document 8 in
11:40 - collection B right and then the sub
11:42 - collection name and then the document in
11:45 - that sub collection so that's the total
11:47 - path to reach this document right here
11:50 - but let's move back for a second so
11:54 - we've got collection B we've got dock -
11:57 - a and then you can see here my sub
11:59 - collection now we can have multiple
12:02 - collections in the same document it's
12:04 - not just limited to one so you could
12:05 - start another sub collection in this
12:08 - document if you go into my collection
12:12 - then you can start multiple documents in
12:16 - here right and then this document in
12:23 - this sub collection can have another sub
12:26 - collection we can really go 100 levels
12:28 - deep with this now how you end up
12:30 - structuring your data really depends on
12:33 - what your app does and how you need to
12:35 - query it and how you need to display
12:38 - that data but I hope that this video
12:40 - plants the seeds for how firestore
12:42 - organizes that data now in later videos
12:45 - of this firestore tutorial series we're
12:47 - going to get into things like querying
12:49 - your data and at that point it might be
12:51 - more clear about how you should organize
12:52 - your documents and collections but for
12:55 - now I hope that this was a really good
12:56 - primer to help you understand how far
12:59 - store works now in this video you
13:01 - learned that your data is going to be
13:02 - stored as collections of documents in
13:05 - the firestore database now in the next
13:07 - lesson I'm going to show you how to
13:08 - work with that data in your iOS app so
13:11 - don't miss the next video by hitting the
13:12 - subscribe button below and make sure to
13:14 - check out our firebase authentication
13:16 - series as well if you're interested in
13:18 - creating login pages and having user
13:20 - accounts for your app alright I'll see
13:22 - you guys next time

Cleaned transcript:

hey code crew firestore is not like your traditional database it doesn't use tables and rows and it doesn't use sequel in fact this second generation firebase product isn't even like its first generation counterpart the firebase real time database in this video I'm gonna show you how your data is going to be structured and organized in a fire store database and what sorts of data that you can store in it alright stay tuned hi I'm Chris Chang and welcome to code with Chris where we teach normal people like you and I how to build apps and how to code now if you're coming from lesson one of the firestore tutorial series you'll know that I'm going to show you how to use firestore database in the context of an app however I've decided to move that into its own separate series and playlist so that this firestore tutorial series will be purely focused on how to use firestore and in that series I will show you how to build an app that leverages the firestore database if you want to follow along as these tutorials get released two to three times a week then I highly urge you to hit that subscribe button below and don't forget to show your support by hitting the thumbs up button that is really gonna help spread the word all right let's dive in we're going to start with some diagrams so I can illustrate the concepts for you and then we're going to go do a screencast and dive into the firestore backend and I'll put the concepts into practice so that you can see it with your own eyes now in the firestore database there are two main record types collections and documents your database is structured as a whole bunch of collections and each collection holds a bunch of documents so essentially your database could be described as multiple collections of documents now each collection has a unique name and each document also has a name the documents within each collection must have unique names but the documents and different collections can have the same name now collections and documents are just a way to organize your data but where does your data actually live the answer is inside your documents each document holds your actual data the data in each document is represented in pairs of information each pair contains a field and a value think of the field as a label and the value would be the data that you want to store it so what sorts of data can you store well here's a list in the firestore database documentation it provides more details about each data type and I'll leave the link to that below the video in a minute I'll demonstrate each data type for you in an actual fire store database but right now I want to discuss the map data type a little further no this is not a geographical map instead this data type allows you to nest more pairs of data so to illustrate this is your document the first pair might have a field called nickname and the data type is text the value might be bull's eye the second data pair might have a field called name and the data type as map the value would actually be two nested data pairs representing the first name and the last name this would be useful if you needed the two pieces of information separately and this is just one example of how the map data type can be used if you're thinking that you could have just had three fields with the data type text you wouldn't be wrong the map data type just gives you another option and while we're on the topic of fields and values just in case you're coming from a MySQL background or something like that I just want to make sure that you know you can have different fields for documents in the same collection I know it can be really tough to get out of a my SQL mindset where you have tables columns and rows that was the case for me now having uniformity across your document it definitely helps when it comes time to query them but I just want you to know that it's not a requirement now before we dive into the screencast where I demo this stuff for real I need to explain one more concept subcollections you see each document can actually have its own collections of documents and then those documents can have their own collections of documents and we can go up to a hundred levels deep now that you know how the data is structured and organized in a fire store database let's go and demonstrate these concepts in an actual fire stored database so here we're looking at the firebase backend for the custom log in firebase authentication demo that I did last week and if you didn't see that I'll link to it above but in addition to having a fent occation store on this and you can also set up a database and this is where we're going to be demoing some of the stuff that I just showed you now the database part when you set this up for the first time you can actually choose from real time database and cloud firestore I'll do a separate video on differences and stuff like that but right now I want to focus on showing you some of the concepts that we just went through so here is a brand new empty firestore database we talked about collections of documents alright so here we're gonna start a brand new collection and I'm gonna name it just something like 8 for example it says that you know you could call it users if each document is going to be information about a particular user but I'm just not gonna use real names here for the sake of this demonstration but what I do want to point out to you is take a look at this path because when it comes time to actually access this data and work with it this path is going to be really important and this is just the sport slash is going to be known as your route ok so that's going to be you know the starting point so this collection here that idea is going to be a and it's going to be basically at the route as we get deeper and deeper you'll see that this path is going to grow and it's basically constructed by these collection and document IDs I'll show you what I mean let's go ahead and click Next we're gonna add a starting document in this collection I'm just gonna call this you know document 8 something like that and we can also add a sample field so let's do that let's say you know name what did we use we use the nickname right so let's do that and string is basically text so we're gonna start with that let's eat bullseye and let's save this and take a look at what we've got so this column on the left hand side lists all of our collections at the root node we've so far we've got one called a and then inside that collection we have one document called doc slash a we can add a separate document I'm just going to do doc slash B and I'll add this time I'm gonna purposely make it different just so I can prove to you that see it doesn't matter the actual fields and data inside of each document doesn't have to be uniform and then on this last hand column you're looking inside the document that we have selected in the middle column so these are all of the data pairs in document a and if I saw a document b here would be all of the data pairs as well a couple of things I want to point out to you the path to access this document right here would be you can see that little house represents kind of the root node it would be /a because that's the collection this document is in write ford slash doc slash eight and that would give you the reference to that specific document now before we dive into the documents and start looking at data types and stuff like that there are a few more things I want to demonstrate just based on what we talked about so let's start a second collection called B and I'm also going to start a new document just do that and I want to demonstrate to you that the collection names here in this root group of collections these have to be unique however if you take a look at the documents in here I have doc slash a and doc slash a both of these documents have the same ID but that's not a problem because the actual reference to that document for this guy is ford slash a /a whereas for this one it would be fort slash beat and then forward slash doc eight all right now let's dive into a document and take a look at fields and data types so ignoring this start collection part which is for sub collections as we mentioned let's take a look at the different fields and add some sample ones so let's add I'm just gonna call it a number and we'll choose number as the data type so I'll add that we we've also got here let's pick a different data type here boolean let's call this I don't know switch be true or false what else have we got I want to do the easy ones first note just means nothing B you know it doesn't really matter okay so that means nothing and we've got timestamp right so you know this interface lets you pretty handily add date and times so that's date we've got geo point now this is some sort of lat and long and we've also got a reference now a reference you can see here is a path to another document and then you specify exactly how we just Illustrated it would be a path like you see up here right slash b / whenever that document ID maybe and you would specify that document path right here and this value becomes a reference to another document now this can be useful for crossreferencing data so here I'm going to specify collection a and maybe doc slash a or something like that oops forgot here give that feel the name okay so there we go now last but not least we also have actually we have an array and let's just call this a list now the interesting thing about a race here and it's kind of different from working with your standard Swift arrays is that you know the data types can be different for each for each item in your array so that's kind of cool right now the last thing I want to show you our sub collections so let's do right here in this document start a sub collection I'll just I call this my sub collection and I'm just gonna call the sub a and we can do something like that so let's this is the path right to that sub 8 document you can see it's collection B and then document 8 in collection B right and then the sub collection name and then the document in that sub collection so that's the total path to reach this document right here but let's move back for a second so we've got collection B we've got dock a and then you can see here my sub collection now we can have multiple collections in the same document it's not just limited to one so you could start another sub collection in this document if you go into my collection then you can start multiple documents in here right and then this document in this sub collection can have another sub collection we can really go 100 levels deep with this now how you end up structuring your data really depends on what your app does and how you need to query it and how you need to display that data but I hope that this video plants the seeds for how firestore organizes that data now in later videos of this firestore tutorial series we're going to get into things like querying your data and at that point it might be more clear about how you should organize your documents and collections but for now I hope that this was a really good primer to help you understand how far store works now in this video you learned that your data is going to be stored as collections of documents in the firestore database now in the next lesson I'm going to show you how to work with that data in your iOS app so don't miss the next video by hitting the subscribe button below and make sure to check out our firebase authentication series as well if you're interested in creating login pages and having user accounts for your app alright I'll see you guys next time
