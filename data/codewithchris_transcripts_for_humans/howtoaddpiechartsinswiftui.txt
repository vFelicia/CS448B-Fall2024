With timestamps:

00:00 - adding a pie chart to your Swift UI app
00:02 - takes four easy steps Step One Import
00:04 - the charts framework at the top of your
00:06 - view Step 2 declare a chart component in
00:08 - your view let's use some sample sleep
00:10 - data that I made up each instance
00:12 - represents a day and how many hours of
00:14 - sleep I got step 3 Loop through the data
00:16 - and use a sector Mark to represent each
00:18 - data point now keep in mind that sector
00:20 - Mark only exists in iOS 17 and xcode 15
00:22 - and later now you don't need to
00:24 - calculate any angles simply specify what
00:26 - data you want the pi slice to represent
00:28 - I'm going to choose hours and step 4 add
00:31 - a background style so you can visually
00:32 - separate the data here I'm choosing to
00:34 - color it by day if you want to see how
00:36 - to turn this into a donut chart check
00:38 - out the full tutorial on the channel
00:39 - like And subscribe for more

Cleaned transcript:

adding a pie chart to your Swift UI app takes four easy steps Step One Import the charts framework at the top of your view Step 2 declare a chart component in your view let's use some sample sleep data that I made up each instance represents a day and how many hours of sleep I got step 3 Loop through the data and use a sector Mark to represent each data point now keep in mind that sector Mark only exists in iOS 17 and xcode 15 and later now you don't need to calculate any angles simply specify what data you want the pi slice to represent I'm going to choose hours and step 4 add a background style so you can visually separate the data here I'm choosing to color it by day if you want to see how to turn this into a donut chart check out the full tutorial on the channel like And subscribe for more
