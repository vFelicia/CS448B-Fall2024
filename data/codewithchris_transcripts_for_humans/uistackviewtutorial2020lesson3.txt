With timestamps:

00:00 - hello today I'm going to show you how to
use an element called the stack view
00:03 - which is going to save you a lot of time
when it comes to building your user
00:06 - interface now in the previous lesson I
showed you how to use auto layout
00:10 - constraints to lay out all of the
elements in your user interface however
00:15 - using a stack view is going to
dramatically reduce the number of
00:19 - constraints that you need to specify if
that sounds good
00:22 - then stay tuned welcome to CodeWithChris the place to be if you want to
00:30 - learn how to make an app I'm Chris and
today we're going to go over stack views
00:34 - now just in case you missed lesson 1 you
can go ahead and click right there and
00:39 - watch that first this is lesson 3 and if
you're all caught up let's jump right in
00:44 - alright so we're going to redo that
social login page except this time we're
00:48 - going to use stack views and you'll see
how easy they are to use this time we're
00:52 - going to create a single view app I'll
take you through this process I'm just
00:57 - going to call this the stack view
exercise and these settings are kind of
01:02 - the ones that we've been using
throughout here so I won't go through
01:06 - them again right now but if you're a
little confused about them go ahead and
01:11 - check out lesson one all right so we've
got a brand new single view application
01:15 - we're going to jump right into this
storyboard and I want to show you what
01:21 - this stack view element is all about so
go ahead open up the object library
01:26 - either clicking this button here or
hitting command shift and L and let's
01:31 - take a look at actually first what the
stack views are so we have a horizontal
01:37 - stack view in a vertical stack view and
just as the name implies the stack view
01:43 - is a container element that allows you
to put elements inside of it and it's
01:49 - going to arrange them in a stack either
vertically or horizontally so you don't
01:55 - have to you know if you already you want
to arrange elements let's say vertically
01:59 - one on top of each other you don't need
to specify a whole bunch of auto layout
02:03 - constraints to arrange them nicely and
align them together and all of that
02:06 - stuff you can just use a vertical stack
view throw all of those elements inside
02:11 - configure the stack view a little bit
and
02:13 - Sackville we'll handle everything else
so let's take a look at that I'm gonna
02:17 - drag a vertical stack view right there
and you can't really see it aside from
02:24 - this outline in fact if you click out of
it it's invisible because like I said
02:28 - it's a container element so it by itself
is not really a visible element however
02:33 - you will see it here in the document
outline and this is a very important
02:38 - point because since it's invisible on
the screen as you're adding labels or
02:43 - buttons or things into your stack view
it's kind of hard to drag them into the
02:47 - stack view when you can't see it in the
view right and so usually if I'm adding
02:53 - elements into the stack view I'll drag
it directly into the document outline so
02:57 - let me show you what that looks like I'm
gonna go grab a button and we're gonna
03:02 - just drag it directly into the stack you
and as you can see with a little
03:07 - movement of my mouse that little blue
line either indents into the stack view
03:12 - or if I move it out a little it will
become an element that is at the same
03:18 - level as the stack view and if this is
the case then this button is not inside
03:23 - the stack view it's in fact on top of
the stack view so in order to make sure
03:27 - that this button is inside the stack
view you need to just drag it and make
03:33 - sure that it looks like this so that you
can collapse and expand the stack view
03:39 - and you can see the button element
inside of it let's add another element
03:44 - just so we can see some stacking going
on like that so I've got two buttons I'm
03:50 - just gonna add a third one right here so
now this statute has three buttons and
03:55 - you can see I didn't put any auto layout
constraints on these buttons all I did
03:59 - was add them into our vertical stack
view and it's stacked them one on top of
04:04 - each other very nicely now some of the
properties that you can configure just
04:08 - to go over them quickly with your stack
view is you can change the axis so
04:14 - changing them to horizontal puts them
side-by-side and changing them vertical
04:20 - just puts them one on top of each other
now this means that when you're adding
04:25 - your stack view when you're choosing
from the object library it really
04:29 - doesn't matter whether you choose
horizontal or vertical because they're
04:33 - both configurable to be either one and
so you know this vertical stack view
04:39 - here all you need to do is change the
axis if you wanted horizontal now here
04:43 - are a couple of more fine-grained
controls for how to position your
04:49 - elements inside for example I can just
say spacing of ten points that's going
04:54 - to put ten points in between each
element I can say 20 as you can see it's
04:59 - just going to do that really simple
really easily now if our stack view was
05:05 - a little bit of wider for example if we
stretched out the stack view to the
05:10 - edges of the screen then I can show you
what these are in fact why don't we do
05:15 - that
so we're going to grab our stack view
05:18 - here and we are going to we want to
vertically align it in the container and
05:25 - then we are going to stretch out the
stack view 0, 0 on the left and the right
05:33 - so if I click on the stack view you're
gonna see that well that's the button
05:39 - right there
but the stack view yeah I can't really
05:42 - see the frame here but I've stretched
that out 0, 0 to the side and you can
05:47 - tell because if you click on a button
you see that button with its all the way
05:51 - from the left to the right edges so the
reason why this button is stretched out
05:57 - all the way to the left and right sides
is because of the alignment property
06:01 - that by default in the stack view is set
to fill so let's talk a little bit about
06:06 - alignment and distribution inside stack
views these two properties do take a
06:11 - little bit to wrap your head around
because what they mean changes depending
06:17 - on whether you're looking at a vertical
stack view or a horizontal stack view so
06:22 - let's talk about distribution first in
terms of this vertical stack view we've
06:26 - got this much space you can see the
white segment here and we've got three
06:31 - elements inside stacked one on top of
each other
06:34 - well distribution is basically it
basically means how do you want to
06:39 - distribute the space
to these three elements right in terms
06:44 - of how they are stacked vertically on
one hand we could give each of these
06:49 - elements an equal amount of vertical
space on the other hand you know in the
06:56 - case that each of these buttons is a
different size like let's say they are
07:00 - different height we could use fill which
means that you're gonna give the first
07:07 - element whatever amount of space it
needs and then you're gonna give the
07:12 - second element whatever amount of space
it needs and then the third and fourth
07:15 - and so on and so forth so each element
kind of gets the amount of space that
07:19 - they need in our case all three buttons
are uniform so whether we choose fill or
07:26 - to fill equally it looks the same fill
proportionally equal spacing and equal
07:34 - centering are also other options they're
just different ways of distributing the
07:38 - space and it's kind of hard to explain
so you I recommend that when you do the
07:43 - exercise for this lesson just play
around with these options take a look at
07:46 - what's different about them
but the best way I think to think about
07:50 - distribution is how do you want to
distribute the space for the elements
07:55 - inside your stack view now in terms of
alignment
07:58 - I always think of that like a word
processor so let's say you're you're
08:04 - writing a word and you're writing a
paragraph and you can either left
08:09 - justify it you can Center it or you can
write justify it well alignment is the
08:13 - same so right here by default it's set
to fill which is why it stretches out
08:20 - that button to fill up the entire space
of the stack view so that's what Fill
08:24 - means if you choose leading center or
trailing it wouldn't stretch out the
08:30 - element instead it would either left
justify it Center or or right justify it
08:35 - so I can show you that
let's see leading makes it go there
08:40 - this is centering and this is trailing
so let me set this back to fill now the
08:47 - tricky part of this is when you set the
axis to horizontal
08:53 - and this meaning changes a little bit
right so distribution on a horizontal
08:58 - stack view is still how do you want to
divvy up that space for each of the
09:04 - elements in this case fill looks a
little differently you see it it still
09:09 - means that it's going to give the first
element all of space it needs second
09:13 - element all the space it needs and then
whatever space is remaining for the
09:17 - third element if I chose fill equally
it's gonna give an equal amount of space
09:24 - horizontal space that is to each of
those elements and alignment now becomes
09:30 - do you want to fill up the vertical
space for each of these buttons or do
09:35 - you want to top align it center align it
or bottom align it so when you're using
09:40 - stack views you have alignment and
distribution that you can play around
09:44 - with to basically get it looking the way
that you want so now what I'm going to
09:50 - do is try to recreate that social login
screen and I'll show you how to do it
09:55 - without having to specify so many auto
layout constraints like we did in the
10:01 - previous lesson we're going to use a
stat view to make it a lot easier so let
10:07 - me first remove the constraints that we
added to the stack view so we're going
10:10 - to delete those three constraints and we
still have three buttons inside the
10:14 - stack view and what we're going to do is
we're going to add the image assets and
10:23 - you can download these in the link in
the description so these are the same
10:28 - assets we used in lesson two so let's
use these buttons and let's set the
10:36 - background image for them so this one
was Google and this one was email and
10:46 - this said sign in with
Facebook and text was wiped so in order
11:14 - to align these buttons one on top of
each other I just have to change the
11:19 - spacing to ten which is what we had in
the previous lesson and to align all of
11:23 - them together well all I need to do is
just I can Center this stack view on the
11:30 - screen just like that
so all I've added are two auto layout
11:34 - constraints to this stack view but other
than that the stack view was taking care
11:38 - of all of the arrangement of these
buttons inside and so I think what we
11:43 - also had was a label here and yeah so
this label is going to give this equal
11:53 - space here I might not necessarily want
that choose a sign and hello I forgot
12:00 - the exact wording that we used but
that's okay so if I didn't want to give
12:08 - so much space vertical space to this
label then maybe instead we can try
12:13 - using fill right and instead of fill
equally so you can see clearly the
12:18 - difference in that distribution setting
right there now for us for the logo and
12:25 - because I want the logo to have a lot
more space between the label this label
12:33 - here and the logo above I don't want to
necessarily place the logo into the
12:37 - stack view because in this stack view I
can just choose a blanket spacing and
12:43 - that's going to give a spacing of 10
everywhere so instead what I'm going to
12:47 - choose to do is I'm gonna put the label
above the stack view right there
12:52 - oops let's undo that
12:58 - let me drag this label up here so I want
to put this but I call this social squid
13:10 - change the number of lines to zero all
right and I'll Center like this and just
13:17 - change the I'll change the font to
custom change it to like a bold type of
13:29 - font and this one I will just
horizontally align it and I will make it
13:41 - like maybe 40 from there so it's gonna
look like that because I want there to
13:50 - be a spacing of 40 instead of 10 that's
why I don't want to put this label
13:55 - inside of the stack view because
otherwise you know I wouldn't be able to
13:59 - I wouldn't be able to have this bigger
spacing here and lastly we need to at
14:07 - the image view and you notice that I'm
dragging things into the document
14:11 - outline now and sometimes that's just a
lot easier to do so I'm gonna set the
14:18 - background image view to the background
image asset that we have and I am going
14:24 - to uncheck constraint margins and I'm
going to choose view I explained why we
14:30 - do this in the previous lesson it's
because we want it edge to edge
14:34 - regardless of margins or anything like
that and then let me set all of these to
14:39 - 0 let me add the 4 constraints so we
have this image now and furthermore
14:45 - because it's stretched like this I'm
gonna change the content mode to aspect
14:49 - fiddle and that is going to maintain the
aspect ratio of the image while filling
14:56 - up the entire image view and so we've
got something like this
15:03 - so now that you know how do you stack
views and Auto layout constraints we're
15:07 - ready to build the UI of our next app
the war card game as always I have recap
15:12 - notes and an exercise for you just
download it right there below and now I
15:16 - want to turn it over to you our stack
views a new concept for you let me know
15:19 - by leaving a quick comment below and if
you like this lesson please subscribe
15:23 - hit that red subscribe button and click
on that bell icon too so you don't miss
15:27 - the next lesson and then click on the
thumbnail for lesson 4 and I'll see you
15:31 - right there

Cleaned transcript:

hello today I'm going to show you how to use an element called the stack view which is going to save you a lot of time when it comes to building your user interface now in the previous lesson I showed you how to use auto layout constraints to lay out all of the elements in your user interface however using a stack view is going to dramatically reduce the number of constraints that you need to specify if that sounds good then stay tuned welcome to CodeWithChris the place to be if you want to learn how to make an app I'm Chris and today we're going to go over stack views now just in case you missed lesson 1 you can go ahead and click right there and watch that first this is lesson 3 and if you're all caught up let's jump right in alright so we're going to redo that social login page except this time we're going to use stack views and you'll see how easy they are to use this time we're going to create a single view app I'll take you through this process I'm just going to call this the stack view exercise and these settings are kind of the ones that we've been using throughout here so I won't go through them again right now but if you're a little confused about them go ahead and check out lesson one all right so we've got a brand new single view application we're going to jump right into this storyboard and I want to show you what this stack view element is all about so go ahead open up the object library either clicking this button here or hitting command shift and L and let's take a look at actually first what the stack views are so we have a horizontal stack view in a vertical stack view and just as the name implies the stack view is a container element that allows you to put elements inside of it and it's going to arrange them in a stack either vertically or horizontally so you don't have to you know if you already you want to arrange elements let's say vertically one on top of each other you don't need to specify a whole bunch of auto layout constraints to arrange them nicely and align them together and all of that stuff you can just use a vertical stack view throw all of those elements inside configure the stack view a little bit and Sackville we'll handle everything else so let's take a look at that I'm gonna drag a vertical stack view right there and you can't really see it aside from this outline in fact if you click out of it it's invisible because like I said it's a container element so it by itself is not really a visible element however you will see it here in the document outline and this is a very important point because since it's invisible on the screen as you're adding labels or buttons or things into your stack view it's kind of hard to drag them into the stack view when you can't see it in the view right and so usually if I'm adding elements into the stack view I'll drag it directly into the document outline so let me show you what that looks like I'm gonna go grab a button and we're gonna just drag it directly into the stack you and as you can see with a little movement of my mouse that little blue line either indents into the stack view or if I move it out a little it will become an element that is at the same level as the stack view and if this is the case then this button is not inside the stack view it's in fact on top of the stack view so in order to make sure that this button is inside the stack view you need to just drag it and make sure that it looks like this so that you can collapse and expand the stack view and you can see the button element inside of it let's add another element just so we can see some stacking going on like that so I've got two buttons I'm just gonna add a third one right here so now this statute has three buttons and you can see I didn't put any auto layout constraints on these buttons all I did was add them into our vertical stack view and it's stacked them one on top of each other very nicely now some of the properties that you can configure just to go over them quickly with your stack view is you can change the axis so changing them to horizontal puts them sidebyside and changing them vertical just puts them one on top of each other now this means that when you're adding your stack view when you're choosing from the object library it really doesn't matter whether you choose horizontal or vertical because they're both configurable to be either one and so you know this vertical stack view here all you need to do is change the axis if you wanted horizontal now here are a couple of more finegrained controls for how to position your elements inside for example I can just say spacing of ten points that's going to put ten points in between each element I can say 20 as you can see it's just going to do that really simple really easily now if our stack view was a little bit of wider for example if we stretched out the stack view to the edges of the screen then I can show you what these are in fact why don't we do that so we're going to grab our stack view here and we are going to we want to vertically align it in the container and then we are going to stretch out the stack view 0, 0 on the left and the right so if I click on the stack view you're gonna see that well that's the button right there but the stack view yeah I can't really see the frame here but I've stretched that out 0, 0 to the side and you can tell because if you click on a button you see that button with its all the way from the left to the right edges so the reason why this button is stretched out all the way to the left and right sides is because of the alignment property that by default in the stack view is set to fill so let's talk a little bit about alignment and distribution inside stack views these two properties do take a little bit to wrap your head around because what they mean changes depending on whether you're looking at a vertical stack view or a horizontal stack view so let's talk about distribution first in terms of this vertical stack view we've got this much space you can see the white segment here and we've got three elements inside stacked one on top of each other well distribution is basically it basically means how do you want to distribute the space to these three elements right in terms of how they are stacked vertically on one hand we could give each of these elements an equal amount of vertical space on the other hand you know in the case that each of these buttons is a different size like let's say they are different height we could use fill which means that you're gonna give the first element whatever amount of space it needs and then you're gonna give the second element whatever amount of space it needs and then the third and fourth and so on and so forth so each element kind of gets the amount of space that they need in our case all three buttons are uniform so whether we choose fill or to fill equally it looks the same fill proportionally equal spacing and equal centering are also other options they're just different ways of distributing the space and it's kind of hard to explain so you I recommend that when you do the exercise for this lesson just play around with these options take a look at what's different about them but the best way I think to think about distribution is how do you want to distribute the space for the elements inside your stack view now in terms of alignment I always think of that like a word processor so let's say you're you're writing a word and you're writing a paragraph and you can either left justify it you can Center it or you can write justify it well alignment is the same so right here by default it's set to fill which is why it stretches out that button to fill up the entire space of the stack view so that's what Fill means if you choose leading center or trailing it wouldn't stretch out the element instead it would either left justify it Center or or right justify it so I can show you that let's see leading makes it go there this is centering and this is trailing so let me set this back to fill now the tricky part of this is when you set the axis to horizontal and this meaning changes a little bit right so distribution on a horizontal stack view is still how do you want to divvy up that space for each of the elements in this case fill looks a little differently you see it it still means that it's going to give the first element all of space it needs second element all the space it needs and then whatever space is remaining for the third element if I chose fill equally it's gonna give an equal amount of space horizontal space that is to each of those elements and alignment now becomes do you want to fill up the vertical space for each of these buttons or do you want to top align it center align it or bottom align it so when you're using stack views you have alignment and distribution that you can play around with to basically get it looking the way that you want so now what I'm going to do is try to recreate that social login screen and I'll show you how to do it without having to specify so many auto layout constraints like we did in the previous lesson we're going to use a stat view to make it a lot easier so let me first remove the constraints that we added to the stack view so we're going to delete those three constraints and we still have three buttons inside the stack view and what we're going to do is we're going to add the image assets and you can download these in the link in the description so these are the same assets we used in lesson two so let's use these buttons and let's set the background image for them so this one was Google and this one was email and this said sign in with Facebook and text was wiped so in order to align these buttons one on top of each other I just have to change the spacing to ten which is what we had in the previous lesson and to align all of them together well all I need to do is just I can Center this stack view on the screen just like that so all I've added are two auto layout constraints to this stack view but other than that the stack view was taking care of all of the arrangement of these buttons inside and so I think what we also had was a label here and yeah so this label is going to give this equal space here I might not necessarily want that choose a sign and hello I forgot the exact wording that we used but that's okay so if I didn't want to give so much space vertical space to this label then maybe instead we can try using fill right and instead of fill equally so you can see clearly the difference in that distribution setting right there now for us for the logo and because I want the logo to have a lot more space between the label this label here and the logo above I don't want to necessarily place the logo into the stack view because in this stack view I can just choose a blanket spacing and that's going to give a spacing of 10 everywhere so instead what I'm going to choose to do is I'm gonna put the label above the stack view right there oops let's undo that let me drag this label up here so I want to put this but I call this social squid change the number of lines to zero all right and I'll Center like this and just change the I'll change the font to custom change it to like a bold type of font and this one I will just horizontally align it and I will make it like maybe 40 from there so it's gonna look like that because I want there to be a spacing of 40 instead of 10 that's why I don't want to put this label inside of the stack view because otherwise you know I wouldn't be able to I wouldn't be able to have this bigger spacing here and lastly we need to at the image view and you notice that I'm dragging things into the document outline now and sometimes that's just a lot easier to do so I'm gonna set the background image view to the background image asset that we have and I am going to uncheck constraint margins and I'm going to choose view I explained why we do this in the previous lesson it's because we want it edge to edge regardless of margins or anything like that and then let me set all of these to 0 let me add the 4 constraints so we have this image now and furthermore because it's stretched like this I'm gonna change the content mode to aspect fiddle and that is going to maintain the aspect ratio of the image while filling up the entire image view and so we've got something like this so now that you know how do you stack views and Auto layout constraints we're ready to build the UI of our next app the war card game as always I have recap notes and an exercise for you just download it right there below and now I want to turn it over to you our stack views a new concept for you let me know by leaving a quick comment below and if you like this lesson please subscribe hit that red subscribe button and click on that bell icon too so you don't miss the next lesson and then click on the thumbnail for lesson 4 and I'll see you right there
