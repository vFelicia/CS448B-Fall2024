With timestamps:

00:07 - hey guys welcome to this code with chris
00:09 - lesson
00:10 - and in this video i'm going to show you
00:12 - guys how to add a slider to your app
00:15 - and handle the user interaction with it
00:17 - so that you can get
00:19 - the value from the slider whether it's
00:21 - all the way to left
00:22 - all the way to the right or something in
00:24 - between and you'll find that it's
00:26 - actually pretty easy to do
00:27 - so we're going to start by launching
00:29 - xcode and creating
00:31 - a sample demo project and i usually just
00:34 - go with single view application because
00:36 - that starts us off with storyboard
00:39 - a single view controller in a single
00:41 - view which we can get started to modify
00:45 - now for your project settings it really
00:47 - doesn't matter too much what you put in
00:49 - here since it's just a demo
00:50 - i'm going to call it slider demo
00:56 - i'm just gonna save it on my desktop
01:02 - okay so the first thing you'll want to
01:03 - do is go to your storyboard
01:06 - and this is where you're going to
01:08 - customize the view for your app
01:10 - if you launched it right now this is
01:11 - exactly what you'd see a blank white
01:13 - screen
01:14 - so down here on the right hand side
01:17 - at the lower right hand side this is
01:19 - your
01:20 - object library and if you don't see this
01:24 - go all the way up here in the upper
01:27 - right and there's a button here to slide
01:29 - out this panel if you don't have it okay
01:32 - and then down here you might not see
01:35 - these elements and
01:36 - there's four more tabs here that a lot
01:39 - of
01:40 - beginners can't find sometimes
01:43 - so make sure you're on this one which is
01:45 - the object library
01:47 - and you can just search for slider there
01:50 - and it's going to filter it out and
01:51 - you're going to see the the ui slider
01:54 - the so ui slider is actually the name of
01:56 - the class
01:57 - that this element represents and you'll
02:00 - see in a moment what that means
02:03 - so i'm going to just drag this into the
02:05 - middle of my
02:07 - view here i'm gonna stretch out the
02:10 - width
02:11 - by grabbing these handles and just
02:13 - dragging it like that
02:14 - i'm also going to add a label
02:17 - to the view and i want this label
02:21 - so go ahead and type in label and it'll
02:23 - filter it
02:24 - and i want to add a label because
02:27 - i want to be able to display the value
02:30 - the current value of the slider
02:33 - so i'm just going to put it in the
02:34 - middle there and
02:36 - now in the upper right pane this is the
02:39 - inspector pane
02:40 - again there are six different tabs here
02:43 - one of them this one here is the
02:46 - attributes inspector and here you can
02:48 - actually customize some properties of
02:50 - that element
02:51 - so i've got my label selected i'm gonna
02:54 - click this alignment and just center
02:56 - align that
02:58 - so now we've got two elements on the in
03:00 - the view
03:01 - and the next thing we're gonna do is
03:03 - we're going to have to add code
03:05 - to handle the event when the user
03:08 - interacts with this guy
03:10 - and the way we do that is we need to
03:12 - expose both of these elements
03:14 - to the view controller because the view
03:16 - controller
03:18 - is the the thing that handles all of the
03:21 - interaction
03:22 - with the view and that's where you can
03:24 - express your logic
03:26 - in objective c code so what we're going
03:28 - to do is go
03:29 - into the upper right hand corner here
03:31 - there's this button called the assistant
03:33 - editor
03:34 - so when you click that it actually
03:36 - splits your
03:37 - view into it splits your editor into two
03:40 - panes
03:42 - it's just gonna expand it on the left
03:45 - hand side we want to
03:46 - keep the view here
03:49 - on the right hand side however we want
03:50 - to make sure that we're looking at
03:52 - viewcontroller.h so i'm just going to
03:54 - click here in this breadcrumb
03:57 - and switch it to viewcontroller.h okay
04:00 - and this is where i'm going to expose
04:03 - these elements
04:05 - i'm going to connect them to some ib
04:07 - outlet properties
04:09 - of this class now pay attention this is
04:12 - what i'm going to do
04:13 - i'm going to hold down control on my
04:14 - keyboard and i'm going to
04:16 - click the label and i'm going to drag it
04:18 - you'll see this blue line come out
04:21 - and i'm going to drag it in between the
04:23 - at interface and at end
04:25 - okay i'm going to let go and i can name
04:28 - it now so i'm going to call it
04:30 - let's call it the value label
04:35 - and this gray circle this grey dot here
04:37 - represents that
04:38 - it this property this ib outlet property
04:41 - is
04:42 - connected to this element so you can see
04:44 - here if i highlight it
04:46 - it highlights that label now one thing
04:48 - that beginners
04:49 - one mistake that beginners make a lot is
04:52 - that let's say they
04:54 - they want to change this name um or they
04:57 - did something wrong they'll delete this
05:00 - whole line
05:01 - and then they'll hold down control and
05:03 - they'll do it again
05:06 - and this time they may call it something
05:07 - like slider label
05:10 - and the problem with this is that if you
05:12 - right click the element you'll see that
05:15 - this element is actually connected to
05:18 - value labels still
05:19 - i mean it is connected to slider label
05:22 - but it's
05:22 - also connected to value label property
05:25 - which does not exist anymore so if you
05:27 - run this it's going to crash
05:29 - so you have to click this x here and
05:31 - break this connection because this
05:34 - outlet actually doesn't exist anymore we
05:36 - deleted it
05:38 - okay so i'm gonna do the same thing with
05:39 - the slider hold down control
05:41 - click and drag it right here i'm just
05:43 - gonna call this the slider
05:46 - and once again if i highlight if i move
05:49 - my mouse
05:50 - over this gray circle it's going to
05:52 - highlight
05:53 - that guy to indicate that it's connected
05:56 - now i've got two properties that i can
05:59 - reference
06:00 - slider label and slider and
06:03 - these two properties are going to
06:06 - reference these
06:07 - items because we just connected them
06:10 - so now i'm going to switch back to
06:12 - single view
06:15 - actually i'm going to go back to
06:17 - assistant editor
06:19 - but i'm going to go to viewcontroller.m
06:23 - okay and i'm going to do the same thing
06:26 - with the slider
06:28 - i'm going to hold down control click and
06:29 - drag and
06:31 - just insert it into there and this time
06:35 - i'm going to call this slider
06:38 - changed and now what we're actually
06:41 - doing is
06:42 - adding an action method okay the
06:45 - difference is that before
06:47 - we were doing that control click drag
06:49 - thing
06:50 - in the dot h file and that's the
06:53 - interface that's where you declare
06:54 - things
06:56 - in the dot m file this is where we can
06:58 - add some logic to the events that happen
07:01 - but first we gotta create a method
07:05 - to handle that action
07:09 - so what we've just done here is that
07:11 - we've
07:13 - connected this method called slider
07:15 - changed
07:16 - to the value changed event if i right
07:19 - click this slider again you can see
07:21 - here these are all of the events that
07:24 - can happen for the slider
07:25 - and the value changed event is hooked up
07:28 - to this method slider
07:30 - changed which is right here okay so now
07:33 - i can do something
07:34 - so this green text is a comment so it's
07:38 - not
07:39 - actually code it's just reference for
07:41 - myself or anyone
07:42 - else who is reading the code so when
07:46 - slider value changes
07:50 - this the code below
07:54 - is executed okay so what sort of code do
07:58 - i want to execute
07:59 - well first of all i want to get the
08:02 - value
08:03 - the current value of the slider and i'm
08:05 - going to put it into a string
08:07 - so a string is a piece of text
08:10 - this is a string variable so i'm going
08:12 - to say slider
08:16 - slider value okay so this is a string
08:21 - variable
08:24 - and i'm going to
08:28 - use this method of the nstring class
08:32 - and it's going to allow me to basically
08:36 - create a string from a decimal
08:40 - so stay with me here self dot
08:44 - slider dot value
08:48 - okay so self.slider
08:51 - is referencing let me go back to the dot
08:54 - h file
08:55 - is referencing this guy
08:58 - okay so that's self dot slider and dot
09:01 - value is getting the value is accessing
09:04 - the value
09:05 - out of that element okay so this line
09:08 - self
09:08 - dot slider dot value is actually
09:11 - retrieving the value of the slider
09:13 - element
09:13 - and what i'm doing here with the string
09:15 - with format is
09:16 - that i am passing it
09:21 - basically this percentage f is a wild
09:24 - card
09:25 - it can represent any sort of decimal
09:28 - value
09:29 - and the value happens to be a decimal
09:32 - value so i'm
09:33 - feeding this wild card with
09:36 - my slider value and it's going to create
09:39 - an ns string and it's going to assign it
09:41 - to this variable
09:43 - and the reason it needs to be an ns
09:45 - string i need to you know turn that
09:47 - decimal into another string is because
09:49 - my label
09:50 - so self dot slider label
09:54 - i want to set the text you can see here
09:57 - that the text property accepts
09:59 - an ns string type right so
10:03 - now i can use this assignment
10:06 - and assign it slider value which i've
10:10 - created right here and so what this does
10:13 - is that each time
10:15 - the slider value changes it's going to
10:17 - grab the slider value
10:19 - okay it's going to turn that decimal
10:22 - into a string
10:23 - which is a fancy name for his piece of
10:25 - text it's going to store it into slider
10:27 - value
10:29 - and then i'm going to assign slider
10:30 - value into
10:32 - the text property of the label and
10:34 - effectively that's how we change the
10:35 - text
10:36 - so i'm going to give this a run and
10:38 - you'll see how it works
10:46 - okay so see as i'm moving it
10:49 - with every move that slider changed
10:52 - event is actually firing and this method
10:56 - this code right here is actually being
10:58 - executed
11:04 - okay yeah so it was as easy as that to
11:06 - add a slider to your app and
11:08 - capture that event in a future lesson
11:11 - i'll show you guys how to style the
11:12 - slider
11:13 - as well and a lot of times apps use
11:16 - sliders for let's say volume controls or
11:19 - zoom level controls
11:20 - or something like that so if you learned
11:23 - something new from this video and you
11:25 - enjoyed it please share it with your
11:26 - friends and colleagues with the share
11:28 - buttons below
11:29 - and also check out my paid video course
11:32 - which goes through
11:33 - the fundamentals and the foundations of
11:36 - building ios apps
11:38 - so you can check that out through the
11:39 - annotation on the screen or
11:41 - in the description below just follow the
11:43 - link there
11:44 - thanks for watching and i'll see you
11:45 - guys next time bye
11:58 - you

Cleaned transcript:

hey guys welcome to this code with chris lesson and in this video i'm going to show you guys how to add a slider to your app and handle the user interaction with it so that you can get the value from the slider whether it's all the way to left all the way to the right or something in between and you'll find that it's actually pretty easy to do so we're going to start by launching xcode and creating a sample demo project and i usually just go with single view application because that starts us off with storyboard a single view controller in a single view which we can get started to modify now for your project settings it really doesn't matter too much what you put in here since it's just a demo i'm going to call it slider demo i'm just gonna save it on my desktop okay so the first thing you'll want to do is go to your storyboard and this is where you're going to customize the view for your app if you launched it right now this is exactly what you'd see a blank white screen so down here on the right hand side at the lower right hand side this is your object library and if you don't see this go all the way up here in the upper right and there's a button here to slide out this panel if you don't have it okay and then down here you might not see these elements and there's four more tabs here that a lot of beginners can't find sometimes so make sure you're on this one which is the object library and you can just search for slider there and it's going to filter it out and you're going to see the the ui slider the so ui slider is actually the name of the class that this element represents and you'll see in a moment what that means so i'm going to just drag this into the middle of my view here i'm gonna stretch out the width by grabbing these handles and just dragging it like that i'm also going to add a label to the view and i want this label so go ahead and type in label and it'll filter it and i want to add a label because i want to be able to display the value the current value of the slider so i'm just going to put it in the middle there and now in the upper right pane this is the inspector pane again there are six different tabs here one of them this one here is the attributes inspector and here you can actually customize some properties of that element so i've got my label selected i'm gonna click this alignment and just center align that so now we've got two elements on the in the view and the next thing we're gonna do is we're going to have to add code to handle the event when the user interacts with this guy and the way we do that is we need to expose both of these elements to the view controller because the view controller is the the thing that handles all of the interaction with the view and that's where you can express your logic in objective c code so what we're going to do is go into the upper right hand corner here there's this button called the assistant editor so when you click that it actually splits your view into it splits your editor into two panes it's just gonna expand it on the left hand side we want to keep the view here on the right hand side however we want to make sure that we're looking at viewcontroller.h so i'm just going to click here in this breadcrumb and switch it to viewcontroller.h okay and this is where i'm going to expose these elements i'm going to connect them to some ib outlet properties of this class now pay attention this is what i'm going to do i'm going to hold down control on my keyboard and i'm going to click the label and i'm going to drag it you'll see this blue line come out and i'm going to drag it in between the at interface and at end okay i'm going to let go and i can name it now so i'm going to call it let's call it the value label and this gray circle this grey dot here represents that it this property this ib outlet property is connected to this element so you can see here if i highlight it it highlights that label now one thing that beginners one mistake that beginners make a lot is that let's say they they want to change this name um or they did something wrong they'll delete this whole line and then they'll hold down control and they'll do it again and this time they may call it something like slider label and the problem with this is that if you right click the element you'll see that this element is actually connected to value labels still i mean it is connected to slider label but it's also connected to value label property which does not exist anymore so if you run this it's going to crash so you have to click this x here and break this connection because this outlet actually doesn't exist anymore we deleted it okay so i'm gonna do the same thing with the slider hold down control click and drag it right here i'm just gonna call this the slider and once again if i highlight if i move my mouse over this gray circle it's going to highlight that guy to indicate that it's connected now i've got two properties that i can reference slider label and slider and these two properties are going to reference these items because we just connected them so now i'm going to switch back to single view actually i'm going to go back to assistant editor but i'm going to go to viewcontroller.m okay and i'm going to do the same thing with the slider i'm going to hold down control click and drag and just insert it into there and this time i'm going to call this slider changed and now what we're actually doing is adding an action method okay the difference is that before we were doing that control click drag thing in the dot h file and that's the interface that's where you declare things in the dot m file this is where we can add some logic to the events that happen but first we gotta create a method to handle that action so what we've just done here is that we've connected this method called slider changed to the value changed event if i right click this slider again you can see here these are all of the events that can happen for the slider and the value changed event is hooked up to this method slider changed which is right here okay so now i can do something so this green text is a comment so it's not actually code it's just reference for myself or anyone else who is reading the code so when slider value changes this the code below is executed okay so what sort of code do i want to execute well first of all i want to get the value the current value of the slider and i'm going to put it into a string so a string is a piece of text this is a string variable so i'm going to say slider slider value okay so this is a string variable and i'm going to use this method of the nstring class and it's going to allow me to basically create a string from a decimal so stay with me here self dot slider dot value okay so self.slider is referencing let me go back to the dot h file is referencing this guy okay so that's self dot slider and dot value is getting the value is accessing the value out of that element okay so this line self dot slider dot value is actually retrieving the value of the slider element and what i'm doing here with the string with format is that i am passing it basically this percentage f is a wild card it can represent any sort of decimal value and the value happens to be a decimal value so i'm feeding this wild card with my slider value and it's going to create an ns string and it's going to assign it to this variable and the reason it needs to be an ns string i need to you know turn that decimal into another string is because my label so self dot slider label i want to set the text you can see here that the text property accepts an ns string type right so now i can use this assignment and assign it slider value which i've created right here and so what this does is that each time the slider value changes it's going to grab the slider value okay it's going to turn that decimal into a string which is a fancy name for his piece of text it's going to store it into slider value and then i'm going to assign slider value into the text property of the label and effectively that's how we change the text so i'm going to give this a run and you'll see how it works okay so see as i'm moving it with every move that slider changed event is actually firing and this method this code right here is actually being executed okay yeah so it was as easy as that to add a slider to your app and capture that event in a future lesson i'll show you guys how to style the slider as well and a lot of times apps use sliders for let's say volume controls or zoom level controls or something like that so if you learned something new from this video and you enjoyed it please share it with your friends and colleagues with the share buttons below and also check out my paid video course which goes through the fundamentals and the foundations of building ios apps so you can check that out through the annotation on the screen or in the description below just follow the link there thanks for watching and i'll see you guys next time bye you
