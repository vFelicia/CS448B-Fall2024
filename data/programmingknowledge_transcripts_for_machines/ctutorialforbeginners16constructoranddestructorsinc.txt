hello guys in this video I'm going to teach you about Constructors and destructors in C and I'm also going to show you how you can Define Constructors and destructors and what is the purpose of Constructor and destructors in C so what is a Constructor a Constructor is a special method in the class which we use to instantiate some values or instantiate some method let's see what uh I mean by instantiation or uh initialization okay first of all whenever you declare a Class C will create a Constructor and Destructor for you even if you don't Define a Constructor and Destructor by yourself so for example we have defined this class in the last video this is a box class which has the member variable length bread height LBH and the volume we were it has the member method volume and we were calculating the volume and we were using the instance of this class to calculate the volume right so this class we have uh written last time so this class also has a Constructor and Destructor which is created by C internally for you even if you haven't defined any Constructor and Destructor and the biggest or the important property of Constructor is it has the same name as your class name okay so how you can define a Constructor just give a ex specify for example Public public it should be public and then the name of the class our name of the class is box you see here so Constructor has always the same class same name as your class name and just remember that Constructor don't return anything your method return uh the values and even if they don't return the value they return null or nothing and we will uh add here in returning value as void if they don't return anything but the Constructor never returns anything okay so just remember that but they can take parameters so for taking parameters you can pass those parameters inside these brackets and you can also write some code inside the Constructor in between these two curly Braes okay now I already uh told you that Constructors are initialized automatically whenever you create an instance of a class so to see this let's see an example okay so what I'm going to do is I will say console dot right line and I will say in this double quote The Constructor is initialized okay now even if if I am not using this Constructor in my class here I I have just defin defined uh this object of this class okay so I haven't called this Constructor specifically right but whenever you run your program whenever you create even a object of the class so let's try and comment this code first okay so you will better understand okay so now we only have the object definition box and box one is equal to new box so we have created an instance of a class and when ever you create an instance of a class Constructor is automatically called so just just when I run this program you will see this message the Constructor is initialized right so at the time of making the object this is automatically called okay now let's see the definition of Destructor Destructor is also created if you don't create a Destructor by yourself c will create a Destructor for you and the structors are also having the same name as your class name okay so let's see how we can Define the structure we just need the till they sign just uh search for this till they sign here it's on above your tab button okay and then the same name of the class which is box and then just the parameter brackets and then these semicolons okay so this is your distructor and Destructor is also called whenever your object goes out of scope so you created your object and in the next SL you your object has gone out of scope because you are not using this object anymore anywhere else in the in in your code so the structure is called automatically when your object goes out of scope okay so let's try to see this Behavior also I will just copy this U console. right line and I will say uh the destructor is called and when I run the program you see here it's initialized and it's not showing any message of the destructor why because you have this console. readline code and this is holding this D structor to not to be called and unless and until this is there your object will not uh go out of context so let me just comment this line console. read line read key and we just only have the definition of this object which is box box one is equal to new box right now I will press contr f F5 to run my program so just uh run your program with control F5 okay and now you will see here the Constructor is initialized and when the when your object or instance goes out of the scope that means it as soon as it reaches here the end of the main program your object is out of scope now and it call it calls this Destructor and it shows the message Destructor is called okay so just for the demonstration that the this Constructor and destructors are called automatically whenever you create an instance of a class and whenever you go out of scope of your instance okay now this definition of uh Constructor is not doing much right it's just printing a message and you hardly do this in your coding that you want to print the message whenever you define your Constructor there are more useful ways to use Constructor and the most important use of Constructor is it is used to initialize the variables in your class okay or initialize values in your class so let's see how we can initialize values in the class so in here I have the basic definition of the Constructor public box and these curly braces and what I can do is I can Define or initialize length breadth and height using Constructor so let's see how I'll write double and I will say L A or length then double BR for breadth and double hi for height okay and now I will initialize whenever I create a Constructor I will initialize I want to initialize length breadth and height so how can I do this I will use this this is a special keyword which shows that your whatever you are calling is an instance of this box okay so indirectly it's an instance of your class in which you are in do L is equal to l a so whatever user will give the value of La it will be assigned to your length in the same way I will Define three length breadth height here right this do B this do H so now what we are intending to do is whenever I defined uh a instance of class so see here whenever I change the definition of Constructor and I pass parameters here now your definition or here you will see the till day or error and when you hover over this class it shows that it is expecting the parameters in these brackets okay so now you need to give uh these parameters three parameter which can be double values okay so I will give three parameter MERS here for example 46 for length 60 for breadth and 20 for height okay and I as soon as I have given these three parameters the error is gone right so just remember this you always or most important use of Constructor is to initialize the values or initi ize the variables in the class okay so now because you have defined this Constructor which expect three parameters you need to Define an instance of class like this box box and the box one is equal to new box and pass these three length breadth and height here because you are passing three parameters and now you don't even need to initialize the them length breadth and height from here you already have initialized it in the Constructor so this has reduced your code right and it will work fine when you run the program even you haven't initialized the the length breadth and height explicitly now I will run the program and it doesn't show up because this console. read line is not there so I uncomment it on again I run the program and shows volume of the box is whatever is the volume right so in this way you can use Constructors and destructors in C and once again Constructor and Destructor are called automatically even if you don't Define them by yourself and the most important use of Constructors are to initialize the values okay so I hope you have understood the basic concept of Constructor and Destructor and I hope you have enjoyed this video please write comment and subscribe and bye for now