hey guys what's going on welcome to programming knowledge and into this lecture we're going to talk about how to create user registration for using your PHP and in this course we learn how to create this particular registration so we have the first name last name email address and phone number and of course the last one password so the technologies that we're going to use are the following PHP MySQL we're gonna use the bootstrap for the front end of our user registration form and of course we're gonna use the jQuery so let's go ahead and create our new project let us navigate to our localhost directory and create a new directory that will hold all the files necessary for our project so new folder and let's name it user accounts and then inside this particular folder we're going to define few files for our project so let's define the index dot PHP okay change extension yes and also let's define config dot PHP and also another one for our registration form so registration that PHP so these files will be vital for our project config is for the configuration for our database connection the index dot PHP will be displaying all the users registered and of course again the registration that PHP where in which our form or user registration form will be displayed or located so now that we have the basic structure of our project let's go ahead and edit registration at PHP to create our user registration form okay so now open up the registration net PHP and we have an empty file so all we have to do is define the HTML structure for this one so HTML and if you're using sublime text you can just type in HTML and press tab in your keyboard okay so the title for this one is user registration in PHP so for now let's define our user registration form so we're just gonna define a very basic very basic user registration form and later on we'll improve the frontend by using the bootstrap library so let's start with a div and inside this div let's define the form and of course inside this form we can define a dip for our container and let's not forget to set the action for our form which is action and for now let's use the registration that page and method let's use post method so under the container div let's define h1 and it should say registration okay and a paragraph that says fill up fill up the form with correct values think after that one let's define an input with the input a keyword with the type tax and for the name let's make it or let's name it as first name and of course let's define the label for this one so label label for first name so it should be hold with the keyword first name of course this first name should be required after that we could just copy and paste this line so label for first name and input tax with a type or with the name first name so let's paste one for our last name for our email address for our phone number and for our password okay so let's change this into last name this to last name and of course the name should be last name also this one is for email address so email and email for the name or for the name of the input and phone number phone number and also the label for the phone number lastly is the password so password and password pretty name and label for the password so let's change this input type into of course we're using the password and of course we're using email for this feel for email address so if we're done with that let's check our registration that PHP file in our browser so go on with our browser and type in localhost and user account which is for our project name so user accounts and registration that PHP so we have here a very basic form or user registration form and we can see that we're missing a button for our submit so let's define it in our registration that PHP file so input and then pipe submit and for the name is suffer sample trait okay so the value for this one is sign up so save your file and let's go back to our browser and refresh our registration dot PHP page so as you can see we have now design a button and the next step for this one is to actually implement PHP for this user creation or a user Association form so let's go back to our code and above this div let's create a new div and let's open up our PHP tag inside this particular div and of course the first thing we're gonna need is to check if the users submitted the form all you have to do is type in the keyword Estep and with the keyword post and of course we're gonna need the name of the name of our submit button which is scrape and open curly brace and closed curly brace so for now let's just check if the submit button is working let's ankle let's type in echo user submitted for us to check if the submit button is working so let's go back to our browser and refresh our page let us see if the signup button is working okay we forgot that we defined the first name was required also with this one also with this one and so on so for now let's define values for this first name last name sample values and password and for email address of course we need to set a valid email address and click on the sub consent of button so you can see user submitted is displayed meaning our signup button or signup submit button is working so we have already implemented the form or the basic form of our user Association so as promised in the first video we will continue working on with the implementation of the PHP code behind user registration so before doing that we need to step back and reflect on our design of the user registration page so as you can see we have the very basic looks of our user Association page and we want to improve this so in order for us to improve the looks of this registration page we need the powers of the bootstrap library so all we have to do now is download the components or the CSS files or the J's files included in the bootstrap so let's go ahead and type in Google and bootstrap so we have you the first link to bootstrap site so let's just click on this and click on this download button so we have few options here we could just include the compiled CSS and GS into our files we could download the source files we could actually use the CDN of our bootstrap but with the purpose of this tutorial we'll be using or will be downloading the files directly or this compiled CSS and jes so download and then save force okay so once the file has been downloaded we just need to locate the files in our system and includes or include the necessary files such as the CSS and J's files into our project so I have here the downloaded file which is bootstrap in my case this is version 4.3 point 1 so all we need is to extract the file and copy the CSS and J's file or GS files inside this bootstrap taste folder and paste the CSS and J's files into the project that we have created earlier and make sure it is located side by side with our defined files which is the config index that PHP and registration that PHP okay so once we have that we just need to open up our registration that PHP to actually include the CSS files from bootstrap so open up registration that PHP and inside the head tag of our HTML let's include the CSS coming from the CSS folder here in our project okay so link with a type of start X or CSS and then for the reference we need to type in CSS slash and we're going to use the minified version of the bootstrap CSS so let's just use this bootstrap that mean that CSS so bootstrap that means that CSS okay and let's try the or let's try to reload our page before that make sure that you have saved the registration that PHP and let's go to our browser and refresh our page so as you can see we know that the CSS is working because the layout of our page change which corresponds to the styles that have been set in the CSS file so we just need to add few classes to the markup for this input so the inputs for first name last name and also we want to change the or we want to add some classes to the signup button so it would look like a professional button so all we have to do now is go back to our PHP or registration that PHP code and inside this div with the class container let's define a new div which has a class of row so div then row and make sure that we close this div to this point okay next let's create a new column which also uses the markup div and make sure that we close this div right here so let's indent our code so it would be readable okay so let's add a class to this division which is class call sm3 so this class is specific for bootstrap so if you want to know more about bootstrap you can browse their documentation and study the different columns configuration or degreed configuration of bootstrap so let us continue let's add a class to this input which is form control and let us just copy this one so paste this to add their inputs last name email a phone number and also with the password and save the registration dot PHP and try to preview our page open up the browser and reload the page or registration page so as you can see the layout and the looks of our registration form is much better than what we have previously but we're not done yet with our styling perhaps we need to add a space here between the first name and the Phillip form with the correct values and also with our button in the last input for password and of course we want to add the class for our button so let's go back to our registration that PHP so after the paragraph fill up the form with correct bar values let's add a horizontal rule for this and with a class MB 3 okay and let's just copy this one for this space between password and the button save the file and open up the browser refresh so we have here the spaces between first name and fill up and of course the password and sign up and last but not the least is for the sign up button so go back to our registration that page P again and add class to this button which is class BTN and let's set this BTN into primary save registration that PHP and go back to browser and refresh there you have it it's not a word class form per se but it is much much better than what we have before so I think that's it for our styling and let's go back to our page P code and implement the logic for our user registration okay so previously we have started the logic which is to check if the post create is set and echo that the user has submitted the form so now let's get the values coming from this form which is so for example the first name and using the post variable and supply the first name which is the name of our input field and of course you want to use this to implement other fields which is this one for our last name and email phone number and also the password okay let's make our code readable by indenting it in one line okay so we have all the necessary fields or the fields coming from our form so now let's try to display all the values once the user has submitted the form so echo first name and then the last name let's just copy the the first one email phone number and password so last name or email and then phone number and password okay and of course semicolon at the end of the line save our registration dot PHP and go back to our browser refresh and let's try to put some values here for our email to test at test com phone number doesn't matter for now and password and click on sign up okay so we have here the values and it has successfully displayed the values coming from this form so in the previous tutorial we have styled our user registration form so as you can see we have improved the looks of our form and we also modified our PHP code to capture the values if the user submitted the form so in this lecture we're going to implement the database connection and we will create a new database that will hold all the information of the user accounts so let's go ahead and open up our browser let's try to use the local host PHP myadmin okay click on the new link and for the database name type in user accounts and click on create let's create a new table with the name users and for the number of columns we have I think six one problem for the ID which is auto increment the first name the last name the email the phone number and the last is the password so 6 and click on go so for this one the first column is ID and type in with Auto increment option should be enabled the second one is first name with a type of bar chart and the land let's say 100 and next one is last name type bar char and 100 and I think it's email and let's set it also to for char and the next one is the phone number should be virtual also with the length of 50 and the password for char I think 32 will be enough but let's just put it 250 or set it to 50 and click on save so now we have our database which is the user accounts and read the table users with six fields which is ID first name last name email phone number and password I think it's high time for us to define or create our config dot PHP so let's open up our config that PHP file and connect our database to our PHP code so here inside our config that page p5 we need to open our PHP tag and define three variables which is for our DB user which is root and DB password ready be passed in my case it's empty and DB name equals or C user accounts okay so based on these variables we need to define a new object of the video class open closed parenthesis so inside here we need to type in MySQL and column and then host equals localhost and semicolon after that DB name equals we need to append the DB name variable that we have defined above and append another string which is for a Corrupter set of our database which is utf8 and after that we need to pass in the DB user variable and also the DB password variable or the DB pass variable and let us set an attribute to this DB object below so DB set attribute and open close parenthesis and video attr emmer motor ya air mode and video error mode should be exception so this will give us more information if we encounter problems when we're using the DB object later on so with that we're now ready to use this DB object into our registration dot PHP so open up the registration that PHP file and let's include the config dot PHP into this file so require once the config HB okay and make sure that you save the config that PHP file so inside this if statement we can now use the DB object that we define in config data HP so all we have to do now is type in the SQL of course our first SQL will be insert into users and we just need to list the fields which are first name last name email the phone number and of course the password with values by close and question mark question mark question mark question mark one two three four I think it's five right five and statement for our insert st empty insert it was a debate object that we have defined in config dot PHP and prepare force supply the SQL statement and let's just delete this line so after this is the empty insert let's define result and st empty insert and i'm intoxicated and of course we need to supply the array of the fields are the values coming from the form which is the first name which is the first name last name email and phone number and password so if result is true open closed curly braces echo successfully say hey else let go there were errors while saving the data save your file and open up the browser refresh the page and let's try to input some names here example Jane the last name though and email address will be Jane Doe at gmail.com phone number plus six two three nine eight five six just random numbers okay and password Jane go and click on the sign up button cool now it says successfully save but let's check our database or the PHP myadmin to see if the data has gone through okay so browse let's just click on this browse and you can see we now have the first record which is the Jane the first name Jane last name tho email address Jane Doe at gmail.com phone number and of course the password which is Jane Doe okay so I think our insert method or insert logic is good but there's a lot of room for improvement so for example we want the form not to reload every time we submit the information and also the feedback if successful or not yes I think it's not that good or not that good looking so we will implement the sweet alert library to replace this boring feedback that we have here so the previous tutorial we have learned how to implement or insert values coming from this form into database and in this tutorial we're going to learn how to implement jQuery and the suite alert to replace our traditional feedback so as you can see if you try to implement or if we try to click on or type in different values here to email add task comm phone number password and then click on sign up so we have the traditional feedback here successfully saved which is I think not that intuitive so we're going to implement the suite alert to replace this traditional feedback and instead of inserting the values to the database using PHP we're going to use the power of jQuery to help us insert values to the database without reloading the page okay so first thing we're gonna need is a search for the jQuery library okay so we could click on or either on this links but let's try this the first link jQuery and click on the download okay so here we could actually see all the options that we have for jQuery or for including 2j crystals or project so accordingly we can just use the CDN for our jQuery but there are also option here to just use the CDN or are the CDN is coming from some reputable companies such as Google and Microsoft or they're hosting also be jQuery so for now let's use this Google CDN so open this by clicking on this link okay so we could just copy this snippet for three point X or for jQuery version 3 point something so just copy the script and let's go back to our registration data HP and before the closing of the body tag let's paste the script and below this line let's test our jQuery if it's working or not so dollar sign and then function and close parentheses and open closed curly braces semicolon at the end and first let's just alert something for the team already event so hello say registration that PHP and go back to your browser and let's go to our user accounts in registration than PHP so we have the basic alert or JavaScript alert that says hello so I think the jQuery library is working so the next step will be to include another library which is the sweet alert so sweet alert will replace this JavaScript alert popup so let's search for sweet alert okay so sweet alert actually there are two versions with a sweet memory and then the sweet alert 2 which is a newer version in the D in the first one so sweet alert is a beautiful responsive customizable accessible replacement for JavaScript popup boxes so they have here embarrassin between the normal alert and suite polar it so first let's show the normal alert by clicking on this button this is the native coming from the JavaScript and the second one shallow success message message so this is the suite under so as you can see this is much much more better than the javascript native popup alert so let's go ahead and integrate this suite under to our project so go to insulation and we just have to grab the CDN coming from the J's deliver so all we have to do is copy this script or snippet and we just have to paste it below the jQuery library that we have integrated earlier okay and now instead of this alert we need to all on the sweet alert and then fire and of course we need to view or define a few things here which are the title hey title would be hello world and text will be this is from suite 32 and the time will be success so let's try this go ahead save our file and go back to our browser and refresh our user registration or registration dot PHP okay so as you can see we have here a better and much cleaner popup which is coming from the street alert so hello world this is from street alert to library okay now the next step is to include or to actually work on the jQuery so it would help us to insert values coming from coming from our form and insert it into the database let's go ahead and make some changes to our registration that PHP so in our form we have the submit button which is designer right so instead let's define an ID for this one or let us say register and inside here let us type in lady register if it's click ok this should be function close here and inside this let's try the sweet alert a bit working or not so let's just check T sweet alert or once we click top bottom the submit button the sweetener should appear okay so for now save your file and go back to our browser and refresh our page and let's try to click on this signup button okay so we have here the issue an alert so it means that the script that we're working on is working okay so before that let's set this aside for now because our primary concern is the value is coming from this form okay so let's add some IDs to this film so first name let's just copy this first name last name email phone number and password so this will be last name of course email and phone number and this one is for password so inside here at the function we need to declare a variable for our first name okay and then let's get the value by using the Wow method and specify our IEP for first name so copy and paste last name email address phone number password one two three four five so this will be for nesting and this is for email third one the fourth one is for phone number and of course for the password okay let's indent this so it should be readable okay so at this point we could actually perform a validation to this values right so first name last name email phone number password in so on but as you can remember as you can probably remember that we defined a required attribute or fields so so we can be assured that the values are not empty but we could also check for validity of our values so bar is valid equals this for the check validity pink so we're just going to check if the valid variable is true if it's true let's try to alert true and else false and we need to supply a parameter here and inside the valid is true condition we should prevent the poor from submitting because we want to use the jQuery submit instead of the traditional submit of d4 so in the previous tutorial we have already implemented the jQuery and sweet alert to our project so this time we will continue working on with the jQuery so that it will post our data to the database or to a file and then the file will be processing our information processing the form data and insert it to the database so we have here the prevent default that we have in the previous tutorial so after this line we need to define the age request okay so Ajax requests and curly braces inside and semicolon at the end of this line the next step is to define few things here so the first one is type so the type of this request is post and for the URL we need to define process the page P so we'll be creating this file later on process the page P and then data so the data should be all the information or all the variables that we have defined here so or better yet we could change this or import or place this inside the condition daleon and then the data should be this dead as follows first name then supply the first name and let's just copy and paste this line three four and five plus comma and last name then email email email and phone number phone number and of course the password and let's define another option which is the success so this success is a function that has to eat a parameter okay and let's just copy this one for something if we encounter errors later on create the same thing function in it has the parameter so we need to copy or sweet alert popup to display something here so title should be successful successful and the text here sir register for successfully registered right and we could copy and paste this one or our error function so averse and there were errors while saving saving date and type should be error of course okay so we have the first name last name email phone number password in the password volume okay let's just remove this and this line okay so the next step is to create the process that page we find so let's define a new file process that PHP and inside this process that HP let's just echo something for now hello hello from process so we'll know if the process that page P is working or the the Ajax requests that were working on is working so save your file or process that PHP file go back to our browser and refresh our page and let's try to input something here okay first name last name email address phone number and then sign up successfully registered it says successfully registered okay let's change the text instead of successfully registered it should be the data coming from the process that PHP save your file registration dot PHP and go back to the registration that page create a page registration that PHP page and refresh input random email a phone number password and then sign up hello hello from process as you can see so we can say that the process that PHP and the jQuery AJAX request is working okay so the next step is to fully modify our process that PHP so let's just copy the code that we have here early Earth okay and paste that into this process at PHP and instead of checking if the post create is set what we need is just to check if the post is set I mean the post variable is set so that is set then we could get all the values on from the request so first name of course last name email for email phone number in password okay and of course if there's no request let's just echo no data and then we have here the insert for our database right but we don't have the connection for our database so it's just copy be config require once line and paste it here in our process that PHP file so we now have the country all the configurations defined in config that PHP will be included here in our process at HP v so we have here all the values first name last name email phone number in the password so for the password let's make it a little secure by using the sha1 encryption so to encrypt our password instead of a plain text password the password will be saved us some random characters so it will be less readable if someone got the access to our database so let's save the process that PHP file and of course also this registration dot PHP and go back to your browser and refresh our page okay let's try our let's try first to sign up or click design a button without filling in before okay so as you can see the request will not be processed because there's a validation and if we try to type in values here say for example Chando channel and email is John Doe at gmail.com number any random number or no and password around ambassador I did click on the signup button and it says successfully saved then let's check our PHP myadmin if the information that we have submitted yes save into our database so took at Holmes Indian page we may add me enter your password or username and password go and then user accounts browse seeing user accounts we can see all the informations that we have submitted so first name last name email and of course the password that is hushed by sha1 encryption okay so I think that's all there is to rate on how to create user registration form in PHP I hope you learned something in this tutorial thanks you