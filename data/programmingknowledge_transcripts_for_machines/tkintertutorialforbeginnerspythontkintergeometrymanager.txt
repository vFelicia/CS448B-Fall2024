hey everyone so i've always told you that we're going to talk about geometry managers whenever we use back so that's what we're going to do today in this video we will talk about pac grid and place since you have already used back in some of the last videos let's start with the pack widget so from tinter i'll import star then i'll get my window i'll write well equals tk i'll also given a title so i'll write win.title and let the title be geometry managers okay then i'll get the widgets so for the visits i'll get some frames and i'll pack those frames so i'll have my frame one equals frame for the master i'll give window when let the width be 200 and height p hundred and let's have the background color to be orange okay now i'll park this frame i'll write frame one dot pack so i'll fill this for both the axes i'll write fill equals both and side equals left expand equals true so this fill and expand is for making the frame responsive as you increase the screen size the frame will expand in both the directions and the side is to place it on left cool so let's have another frame right frame two equals frame when let the width be hundred background color let it be purple and i'll pack this and i'll given the same arguments as above i'll write fill equals both side equals left expand true okay then i'll call in the main loop i'll write when dot main loop so let's run this and see how the pack works see how the frame works okay so i have this screen and as i expand it on either side if i expand it along xaxis i can see the frames increasing so you can see the two colors purple and orange so that's the rectangular area a frame makes and the packing starts from the left side because we have specified site to be left okay and you can see as i expand the screen the frame size also increases cool so if i want to talk about the place geometry manager it is used to control the precise location of a widget the location it should take up on the window or the frame okay so we can given the coordinates it takes up two arguments x and y so that's the top left corner coordinate of that widget okay so let me write something for it so that you can understand it better i already have tincture imported on my window i also have a title for my window i'll just get another frame to get my button on it or rather i'll get two buttons so let me have the frame i'll write frame equals frame when and let the width be 150 and height p150 frame dot pack okay and i'll have my button one so button one equals button and i'll get this button on the frame so i'll given the master to be frame let the text be button at 10 comma 20 and let the background color be pink then i will place the button not use back but i'll place it now given the coordinates x equals then y equals 20. so i'll get this button at 10 comma 20 coordinate the top left corner coordinate of this button would be our 10 comma 20 then i'll get another button button 2 equals button frame let the text be button at 40 comma 50 and the background color let it be yellow then i'll place this button again at 40 comma 50. so x equals 40 y equals 50. and then i'll call in the main loop we'll check this if this works fine and we get the buttons at the defined coordinates now when i run this i have these two buttons at the coordinates so this top left corner is at quarter 10 comma 20 and this yellow one is at 40 comma 50. so that's the coordinates and the buttons are at the specified coordinates so the screen should be seen as a coordinate plane and the buttons are at the specified coordinates so that's how place works now let's talk about grid grid has all the parameters of pack plus it is efficient than place as place needs specific coordinates grid just splits or makes parts of the screen according to the metrics given you'll understand this better if i give you an example so i already have tinker imported and i'll just commend this part first of all if you're talking about grid you need to make that grid so we'll make it just like we make a matrix i'll have two for loops and i'm gonna make a grid of three by three so i'll write for i in range 3 for j in range 3 frame equals frame master is finn and let me give in a border type so relief equals sunken that's about my frame so for each block or each matrix element i'll get a frame okay now i'll use grid for the frame i'll write frame dot grid so you can see what all arguments we can give for grid we can give the row which is i then column which is equal to j we're given some extra padding along x and y axis both so let it be five that'll look good then i'll get some buttons on these frames so i'll write button equals button and since i want this button on the frame so i'll given master equals frame for text i'll given the matrix elements index so i and j i hope you know this format this is general python then we'll get to packing this button i'll just use pack for this not grid or place i'll simply pack this button so i'll write pattern dot pack i'll give some padding pad x equals five but y equals five so that there is space between each element of the matrix and also there is space between the text and the button and then i'll call in the main group i'll write when dot main loop as you had expand and fill in back you have column configure and row configuration grid i want the buttons to increase in size just as the screen size increases so i'll write when dot column configure so you can see what all arguments it requires so first is the index so of course index is the row all column number then you have min size which will given the minimum size of the row height and column width in pixels okay and then you have weight okay so weight is the rate with which the size of the button or size of the specified widget would increase with what rate so i'll give it to be one i want all the grid elements to increase with the same rate as i increase the screen size okay and i'll given the min size for column configure to be 75 then i'll also have row configure so i'll given the index i and weight equals one and the minimum size let it be 50. so we're good to go let's run this and let's see how grid works so you can see that the screen size is not little it's there's a proper grid because we have already specified the minimum size using column configure and row configure there is a specific size of the screen because there is a minimum size of the buttons and when i resize the screen they grow in size automatically the button size doesn't grow but they are rearranged on the entire screen properly so that's it for grid that's it for the geometry managers i hope you understood everything the place pack and grid widgets they are going to be of great help in the upcoming videos so you really need to get a grasp of what was going on throughout this video thank you