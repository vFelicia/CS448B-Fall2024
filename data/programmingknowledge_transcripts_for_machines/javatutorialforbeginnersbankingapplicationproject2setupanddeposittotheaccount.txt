hello and welcome back to the another bit of the Java tutorial Series so today we will be starting our first project for project Number One banking application so so in this video I will be discussing about the setup about this project and we will be covering up the first uh a functionality of the project that is the deposit okay so let me just get into into my IDE and I will creating the new class name as banking application oops sorry banking application okay and let me increase the font size yes and I will include my public static wall Main okay and inside main uh this project required input from the user so that's why I have to import the scanner class also and I will be using this new keyword scanner system Dot in so okay basic stuff now I know we have the not covered started oops concept so that's why you will at some point you will not get some concept so bear with me I will be telling you what those concepts are okay uh so this is pretty much about the setup okay and now since we are doing all this uh let me show you all this deposit with induction show menu and execute our code all this functionality in a one place so I guess this is the right time to introduce you with the for oops concept known as method okay so I will oops concept of method and class okay so I will create another class known as the banking bank accounts which is more appropriate I guess AWC bank account okay okay so this is nothing but I have created one another class name as bank account where I will be covering all those functionality in inside this class and we will create one object of this blank bank account class inside this banking application class okay oops I have written this class inside class that is okay now it's okay okay so this is one class our public class and inside which our main method is there and this is another class where we'll be covering all these functionalities which are required in the uh project Okay so inside this uh I will show you how this class and objects stuffs are created so bear with me and for first uh functionality of our project is deposit so we'll be covering that first okay for so you you so you are pretty much aware about this for depositing the value uh something money inside our account we we need one variable which is known as balanced because we are updating that balance after deposit occurs inside our account okay and we will require another variable known as name as previous transaction which will hold the value value and the information about the transaction that happened in inside past recently okay so I will be creating those two variables name as balance and another one as previous transaction okay and now I will create one method uh so this method doesn't return anything so that's why I have written void uh I know you are not getting some concept what is wired what is ain't okay not in in you know what that is data type and void and my method name is deposit okay and my method is going to accept one way one parameter that is amount okay amount so method is nothing but one particular instruction of the lines of codes which will execute uh which will you will require again and again for the X equation and then those setup instruction you are right inside of one method and you will call that method again and again to perform that task okay so we will be covering in depth about the methods what what are their types in the Ops concepts for but for now uh you know you know what is methods okay we will be creating one method known as deposit and inside that method I will be writing now uh if I want to deposit my money I have to check uh whether my amount that is uh given by the user and this is the parameters that this method will be accepting this method will accept amount that uh which is given by the user to deposit inside that bank account okay so I will be checking whether my amount is not equals to zero okay so this uh if the user user inputs a given input as zero so that doesn't make sense because 0 cannot be added inside the bank account okay that doesn't make any sense so we are checking on base basically base condition over here whether my amount amount which is a given input by the user should not be equals to the zero okay if it is not equal to 0 this uh if condition is evaluated as true and inside that uh I will update my balance okay so my I will tell balance is equal to Plus amount okay I will update my balance variable and I will also updated my previous transaction variable as amount okay and so that tells that my previous transaction which done by the user is the amount that means the deposit to the bank account okay so this is pretty much about this and okay also in the upcoming videos we will be covering the withdraw withdraw functionality bitter functionality and the get previous transaction and the show manufactuality okay so thank you for watching this video and I will see you in the next one