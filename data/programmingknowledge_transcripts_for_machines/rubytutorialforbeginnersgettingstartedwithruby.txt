so today we are going to start with a new tutorial uh on ruby so basically ruby is a programming language so like ruby has been used a lot in the programming world and it is one of the most important languages so we are going to start with like some basics of ruby and then we are going to move on uh like a framework on ruby that is rails so basically that is properly known as ruby on rails so initially we'll start with the installation part and then we are going to proceed and enhance ourselves to the ruby on serials framework so basically the to be honest like ruby is a programming programming language and ruby on rails is a framework based on ruby language which is used on web development like basically to use as a backend framework so you can create your own packet framework and then you can extend it to like front end as well using erbs so today first you'll start we're going to start with the basics of ruby and then we are going to continue with it so to install ruby on your machine you can move to this website this website is known as ruby installer for windows so basically you can download click on the download button here and then you will have all the versions so so make sure you install one with the dev kit so it will uh help you so you can install ruby with the dev kit and you can click on like this is like uh you can click on any and depending on your requirement like the 32bit and 64bit you can install it so uh like i had downloaded the one which is at the top so you can also download and when you download you will get an installer which will uh like take some time to install and then uh like it's a very like that's very easy process to install it will keep on installing and when you will install this installer then you can move ahead with the stock so this is another like uh website you can refer this so this is like a ruby.org so you can also refer to this website okay uh then you can like these are the two documentations you can refer and this is how we like uh yeah so let's uh move on to the tutorial so after like moving to the installation and documentation you can start running some blue programs on your machine so we will initially start with them so i'll show you how you can create one and run one so let's move to the programming part so this is my vs code editor so like i have created a folder with the name ruby so ruby basically what you can do first uh you have a command line here so what you can do so you can create a file new file and you can type hello dot rb so basically ruby files are run with this uh extension and then you can uh uh yeah so basically now i'm inside this folder which has a header.rb file to make sure you have installed ruby on your machine you can type ruby minus v okay so ruby minus v would give me the like the version which i have installed and it's perfectly fine okay now now first we are going to create a hello world ruby program okay so what we're going to do we are going to like first clear this so now we are going to do put s hello world okay so this would like put as hello world would create the ruby program now to run the ruby program what you need to do ruby hello dot rb so this would like to run the program on your machine so this gives the output hello world so we will start with some q basics like one is like creating the variables so this is like a is equal to one okay uh b is equal to two and we are going to do uh what okay i'll show you one thing and we are going to put this in a variable a a plus b c c 0 a plus b and we are going to put s c so uh first i'll run here this and i'll show you how this works so it works perfectly fine uh but if you want to do some like string formatting so what you can do you can put like this and you can do the sum of a okay the sum of a plus b is equal to c okay okay first i'll run this program and i'll show you what i'll do i'll run this again i'll clear this and i'll run this so here you see the sum of a plus b is equal to c this doesn't satisfy our condition so again if you apply string formatting for what for that what you can do you can put a hash symbol and put them inside a curly braces so this would get the value of that particular variable okay now it will format inside the string now you can run this now the sum of 1 plus 2 is equal to 3 so this is how we achieve it so it was a good example there is another statement in ruby i'll show you which says print print hello world okay uh and i'll clear this again and i'll run this program yeah so it says hello world okay different between what is the difference between the print and protest statement okay i'll do another statement first okay okay uh first i'll do put s first line put s uh i'll do second line okay uh now i'll make sure that i clear this screen yeah now i'll do first line second line so this is the output perfectly fine okay uh now i'll do another one sorry now i'll do print first line and i'll do another one print second line so the print second line would like what i'll do i clear this now run so it's it here you can see it doesn't give a line break okay to achieve that you can put a slash in here okay now i'll run this now we can see we got the same statement as like put a statement so basically i just wanted to tell you that put s statements always gives a line break so whatever you type it would automatically give give the slash n or a line break to the next line but print statement doesn't give that so this is the only difference between the put statement and printer statement okay so we can do one some uh like more things uh in ruby like the first uh like the before we move to some conditions like first we make a let's make a simple function so let's make a function define add okay and it will take two variables a comma b okay now since this is ruby uh you don't need like uh you might be thinking that this looks like python in a python we have a colon symbol here okay uh but here it is not needed okay so like you can remove this so it's essential and we need to end the function with this okay so the body of function will lie in between okay so it says either you can do return a plus b like simple or you can do protest a plus b so let's do this like for the simplicity let's uh what we can do we can store this in a variable c a plus b and now what we can do we can put s c okay and then we can like call the function add with 2 comma 3 2 comma 7 and it should work fine so here we got the 519 uh we could also do that like uh so this is we could also return the statement a a plus b and we could get the return value here like a result the result is equal to add a comma b result a comma and what we can do we can do put s result here and call the same statement here so it should work fine also and this is how the return statement also works in ruby so this is good so we like learned how to create functions like in ruby and like we made a good together so far uh we can also create a swap function in ruby is in one line like i'll show you a is equal to 5 b is equal to 10 okay now i'll do put s a comma b will this work okay we'll check this so it works perfectly fine put s a comma b okay uh i'll use print okay this would give you better clarity now here you can see print s yeah like print a comma b so okay i'll give space okay so this is fine so right now we have two variables a comma b with the value 5 and 10 now what we're going to do we are going to repeat this statement but before repeat we are going to do a comma b is equal to b comma a okay so this is like we are going to clear this and run it again so okay uh yeah so i need to give a slashing statement here so here you can see 5 comma 10 is being replaced to 10 comma 5 so basically in ruby this is also a valid statement x comma y comma z is equal to 1 comma 2 comma 3 okay and when i do print print x okay print y uh okay i'll do this okay now i can remove this code since this is print x okay print y and print set so this is a valid statement in ruby now i'll run this so here you can see this is also valid so this is good so we can assign values using comma using comma and separating them so thank you everyone for watching this tutorial i'll catch you in the next video thank you