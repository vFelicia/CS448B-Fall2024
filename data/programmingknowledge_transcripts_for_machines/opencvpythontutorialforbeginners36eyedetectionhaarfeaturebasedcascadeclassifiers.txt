hey guys welcome to the next video on open CV tutorial for beginners using Python in the last video we have seen the basics of face detection using hard featurebased cascade classifiers in this video we are going to extend our code to detect eyes using the same Harr cascade classifier so for that first of all you need to download the pre trained cross classifier for the eyes from the same source which I have shown you last time also which is the github repository of open CV again I'm going to give you this link in the description so you can directly come to this page and this time we are going to download this XML file with the name har cascade i underscore tree underscore eyeglass dot xml file so this is the pre trained classifier for detecting eyes so you can just click on draw and then save it as this same filename in your project okay so i have already downloaded this XML file you can see here har cascade i underscore tree underscore eyeglass dot xml file and now we are ready to write our code so this is the code which we have written last time so if you don't know how this code works you can see the last video I'm going to just extend this code to detect eyes so first thing first we need to create the Cascade classifier for the eyes so instead of face cascade we are going to name it as eye cascade and this filename will be the file which we have downloaded which is i underscore tree underscore eyeglass dot xml file so once we have our classifier then in the last video we have already seen how to detect faces so our region of interest will be the face this time because the eyes will not be present outside the phase right so Isis will always be present inside the face so our region of interest will be the face and face we have already detected last time so this face will be now our region of interest so go inside this for loop where we are iterating over this face variable and then we are going to create our ROI so I'm going to create this variable which is called our i underscore gray and this will be the original grayscale image which we have created here but we just want the face out of this image so we can just index the space using y y plus h comma X X plus W which is the width so this line is going to give us the grayscale region of interest but we also want the colored image also so we are going to just say our Y color which will be the colored our Y and here instead of gray we are going to take the direct image which will be before we have converted this BG our image to the grayscale image so we have the colored our Y and the grayscale our Y once we have this we will follow the same concept which we have applied for detecting the faces so so we are going to use this detect multiscale method so I'm going to just write eyes is equal to because we already have or I cascade which is a classifier so we are going to use this variable and then use this method called detect multiscale and then we are going to simply pass our ROI gray which we got using the faces now we are going to iterate over those so inside this follow we are going to create one more for loop to iterate over all the eyes which are found on the face so far and then this will be e X comma E Y comma E W comma E H for XY coordinate and the width and height now we will just say in eyes and then we are going to just draw this rectangle which is also very simple see B 2 dot rectangle and then we are going to pass our image first of all which will be our colored ry image which is this one so here we will pass this ry color and then the first point in the rectangle which will be e ex and ey so I'm going to just say X comma Y Y and the second point will be e X plus e W which is X plus width so we are going to just write this e X plus e W comma E y plus e H which is the ycoordinate and height the next parameter will be the color so let's provide the color let's say this will be 0 comma 255 comma 0 and then the next parameter will be the width so let's say width we want here is 5 so that's it so hopefully this code is going to work out of the box we don't need to do anything else we just need to define our classifier and then we just need to use this detect multiscale method to detect the eyes and then we just need to draw the rectangle on all the eyes which are detected so let's run this code and let's see what happens so we are going to see you can see eyes are detected but there is some problem because something is wrong so I'm going to just quit this script and see what's going wrong here so you can see this should be X X comma Y Y and then our problem will be solved hopefully so I'm going to run this code once again and you can see the eyes are properly detected so this is how you can detect eyes in the face using open CV and heart cascade classifiers I hope you've enjoyed this video and I will see you in the next video you