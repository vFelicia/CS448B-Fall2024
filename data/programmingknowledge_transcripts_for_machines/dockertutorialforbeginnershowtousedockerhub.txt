hey guys welcome back so in this video we are going to talk about docker hub so what is docker hub so docker hub is a service provided by docker for finding and sharing your container images with your teams or with the general public so as you can see i'm on this website which is hub.docker.com and here i can sign in at the time of downloading the docker on your operating system you might have created a docker id for you and the password for you so you can log in with that docker id and password so once you are signed in with your docker id and password you will be able to see this kind of web page here you have this explore option where you can explore all the other repositories you have this repository option and under this repository option you will be able to see and manage your repositories which you have created and which you have pushed into your docker registry here you also have the option for organization which we are not going to cover in this video and also you have all these general uh account related uh stuff here right now let's talk about the pricing a little bit so you can see uh for public repository docker hub is absolutely free and that's what we are going to uh be using but if you are working in an organization or you want to create some private repositories for your docker images then you can choose one of these options which are provided here also it's not necessary that you need to use docker hub as a docker registry you can create a docker registry you have this documentation which you can use to create a docker registry i know uh google cloud provide a docker registry or a github nowadays also provide these kind of docker registries so you can create your own registry if you want you don't need docker hub for just managing your images right so right now you can see i don't have any image on my docker hub account so to start with i have this very simple uh docker file which i want to convert to the docker image and then i want to push that image to my docker hub registry so let me list all the docker images on my operating system right now i don't have any image so let's build one image so i'm going to just write sudo docker build dot hyphen t and the name of the image i'm going to just name my image as hello and then press enter which is going to just create this image i have this hello world image which is created five seconds ago right so now let me just also quickly uh run this image to see everything is working so i'm going to once again write sudo docker run hyphen hyphen rm hyphen it and the name of the image which is hello and then press enter and it prints the content of my main dot cpp that's what it's doing so that's a very basic minimal image the size is very small that's why i have done this and once you have all these images let me just clear the terminal and then let me just move this terminal a little bit up and let's just list all the images once again so now i have this image hello and i want to push this image to my docker hub registry so in order to push this image first of all you need to log in with your docker id into your docker terminal most probably you are already logged in but if you are not you can just give this command which is docker login and if you want to log out then you can just write log out here right so let's give this command which is a pseudo docker login and then give your username here i'm going to provide my username and then you need to provide your password so let me quickly provide my password and then press enter which is going to log me in the docker so you can see login succeeded and now i can just push my images to my docker hub registry so first thing we generally do in order to push the image to the registry is we just tag it so we can give this command which is docker and then tag and then the name of your image my image name is hello you can also take the image id and then give the space and then give some tag to your image so right now because i want to push my uh docker image to this docker hub account and which has the username codebind i will just first of all write code bind here and then forward slash and then you can give the name of your image i will just leave it as hello and then you can give the tag of your image so i'm going to just give the tag 1.0.0 so this tag is useful whenever you want to just let's say keep working on your image and you want to update the image and want to just version your image into multiple versions so you have the track of all these versions right so i'm going to just tag my image i'm going to press enter and then i will once again list all the images and now you can see i have this uh image with the this name and i have the tag 1.0.0 right now once you do that you are ready to push your image to the docker registry the command is very simple sudo docker push and the name of your docker file which is codebind forward slash hello in my case you also need to give the tag here 1.0.0 and then you can just press enter which is going to push your image to your docker hub registry so just wait for some seconds and you can see it's pushed so i'm going to go to my docker hub web page and then refresh this web page and now i can see this image which is available here and also you will be able to see that this image is a public image so it's not private so anybody on docker can see your image right also when you click on this image you will be able to see more information about the image so here you can give the little description for your image and also you can even write the readme for your image uh what it's doing and what's the purpose of this image right so here is the general information about the image you can also see this tags uh section where you will be able to see the tags related to your image i only have one tag here and the size of this image is around 746 kilobyte right and also you can see how you can pull this image so you can just pull this image using docker pull codebind forward slash hello and then you need to use this tag you can just copy this and then pull this image also also you have the build section this is for the automation so if you are using github or bitbucket automation system then you can directly push your image from the github or bitbucket into your docker registry you also have the collaborator tab and then web hooks also and then you have the settings related to your docker image right so you can make it private if you want and also you can delete your image from this section right so let's say i just want to pull this image i will just copy this text and then i will just write sudo and then paste this test text which i have copied which is docker pull and the name of my image with the tag and it's going to pull this image if it's already not there on your operating system so this was the simple demonstration using which you can create your images and then push your images to the docker hub and then manage your images using the docker hub so i hope you've enjoyed this video and i will see you in the next video