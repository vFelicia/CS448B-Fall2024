hello guys welcome to the next video tutorial on C++ programming for beginners and in this video we will see what are vectors in C++ and how we can use vectors in C++ so what is a vector a vector is a sequential container same as an array so array can contain more than one element of same data type at the same time similarly you can can use Vector to uh contain collection of data which is of same data type but there is a difference between the simple array and the vector and the difference is whenever you declare a simple array like this you need to define the size of the array or initialize uh with some size and it's really hard to change the size of uh the array or simple array dynamically but vectors whenever you use vectors you can change the size of these Vector uh dynamically okay so that's the main difference between simple array and vectors but in addition vectors comes with uh their own functionality or functions uh which can be used in much broader way than a simple array so let's see how we can declare a vector so to declare a vector you need to include a vector Library so include vector and then to declare a vector you just need to call STD vector and then in these angular bracket you need need to give the do data type so I if I want to have the collection of integer value I will give the data type int or STD string I need to give the string uh Library add the same string Library here but you uh understood the concept right or float values or something like this so for example I want to have the a vector of integer values then comes the name V and just you can end it with semicolon otherwise you can initialize it with some value so if you initialize this vector by 10 it means that it has the initial size of 10 so you can store 10 values or you can give or you can initialize Vector with no value and we can add these values dynamically so to add values to a vector you just need to uh have the name of the vector dot push back and this is the method which we use to add the element to the vector from the back so from the end of the uh Vector right so now what we are going to two is we are going to add some element to it for example we want to add a a value of 10 here so the the first value of this Vector is 10 and we can add in a similar way different values for example 20 30 and 40 so similar to AR is the index of the vector start from 0 1 2 3 okay now in order to get the size of the vector so I told you their size can be changed dynamically so now the the the vector size becomes uh four right so let's print the size of the vector now int and then we can write Vector size is equal to and then we can use this Vector name dot there is a function called size which we can use to print the size of the vector so now whenever you run the program you see the vector size is equal to 4 and let's see we will place this uh Vector size here and let's see whenever we add two values what is the size of the vector and then whenever you have four values so the vector size whenever we add two values the vector size is two and after adding to other other values the vector size is four so its size is changing dynamically right now to uh iterate or to access the values in the vector you can use Simple for Loop for example 4 in um I is equal to 0 I should be less than the size of the vector which is this one right so size of the vector we can get it from here and i++ right and you can iterate over this vector like this so we will just write vector and then the index I told you index start from zero and then in here we will give some space and then we can access the value using these square brackets and then the index okay similar to arrays and here I forgot this and run the program and and it prints the index so index zero value is 10 index one value is 20 index 2 value is 30 index 3 value is 40 right the same F uh you know result you can get using the function called Vector so the name of the vector dot at and this is also this takes the index of the uh element and then using this also you get the same result so run the program and you get the same result now to erase any value from a vector you can uh use a function or you can use the function called arrays so my vect DOT arrays and this arrays you can see when you hover over this it takes the position of the element you want to delete now there is a trick to uh erase the element so there is something called iterators which I will teach you in uh some other video but whenever you do something like V Dot begin it means that you want to uh give the iterator from the starting so this is the like uh indicating the start position of the vector so for example I want to delete uh this 10 which is at index uh zero which is the first po value of the vector this will indicate the first value of the vector right so let's uh try to erase the first value and then we will iterate over the vector once again right so now let me give uh some space also so that we know that uh this is okay so we have given some space Here and Now now we will run the program and now you can see the initial uh size of vector was 4 and the values were 10 20 30 40 but after erasing the first value using my Vector do erase and um in argument my V do begin it has deleted or erased the first value which was 10 from the vector in a similar way you can use my do end to delete the last value for example we want to delete this 40 which was the last value we have inserted then run the program and now I think it has deleted it will delete the last value but there is some problem here and the problem is you can't use and directly but what you need to do is you just need to write my DOT begin and then give the or add the index which you want to delete so for example I write um begin do2 and now when I run the program you see it has deleted the second index value right so the set the value at second index is 01 2 so the value at index 2 is 30 so if you want to delete the value at index 2 then you just need to write begin + 2 similarly whenever we write begin + three so the value at the start starting plus the uh value you want to delete so index of the uh value you want to delete so if you want to delete the value at index 3 then you just write begin plus three okay run the program and it it deletes the last value like this okay now for example you want to delete the value on the basis of uh the value for example you want to delete the value 30 from the vector how you can do it what you can do is um we will add uh other another library to remove uh which includes this include algorithm which has the method called STD remove and then we are going going to copy this arrays function once again and in here in the arrays we will write some arguments so this argument will be STD remove and so this is a function which we can use to remove some value from a vector right and in here it takes three arguments the first value the last value and the value itself right so inside this STD remove just you just give my V do begin begin comma and then just copy the vector name Dot and and the value you want to delete right so we want to delete the value 30 so next argument will be 30 because we want to delete based on the value of the uh Vector right and then just after the ending of the remove you just need to write comma and then once again my do end and I'm going to comment this and run the program and this has removed the value 30 from our Vector right so we have no value 30 okay so we have seen how to erase value how to erase uh value based on the value so we how to erase on the basis of index how to erase on the basis of value like this now if you want to erase all the values from the vector or if you want to clear the vector so you want to delete all the values from the vector what you can do is I will just I'm going to comment this out and what I'm going to do is to remove all the values from the vector I can just use the vector name dot clear okay and what this basically do is it'll clear all the values from the vector and that means there will be no values whenever you call this method on the vector vector will be empty okay so run the program and for the first time it has the four value but uh after deleting or clearing this Vector we have nothing inside our uh Vector so it hasn't printed anything so for example we all we call this uh size of the vector after clearing this uh uh data after this my v. clear it'll show that the vector size is equal to zero now right so this you can call whenever you want to delete everything from from the ve Vector now there is a function to check if your vector is uh totally empty or not and this method is called uh v.m and it Returns the Boolean value so you can just write my V dot dot Mt my. Mt and this returns of Boolean value true or false so to check whether your vector is empty or not we can just write is Vector empty we are checking if the vector is empty and run the program and it returns zero right so whenever your of it returns zero it means your vector is not empty right now whenever we uncomment this clear uh clear function on the vector now see the result is Vector empty it returns one one means yes and zero means no right one means true and zero means false so now after clearing all all the values from the vector vector becomes empty so it will give one and whenever we commment this so we are not clearing the values all the values and run the program it says is Vector empty it returns zero so it says no Vector is not empty it has some value because we haven't cleared all the values from the vectors so there are many functions in this a vector class which you can use so you can just write your vector name and Dot and you can uh you know see there are so many method to array and empty data you can see add back pop back so there are so many function which you can use from this vector class so just just uh you know uh choose a function and try to use it in your um you know in your program and you will be good to go because practice uh is the thing which will make you perfect so I hope you have enjoyed the video please rate comment and subscribe and bye for now