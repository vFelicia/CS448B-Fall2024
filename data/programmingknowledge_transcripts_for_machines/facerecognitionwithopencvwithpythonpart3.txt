so you guys welcome back to the new video and this is the third part of the series so in this video we're gonna see that like what i what is this function doing and what is the rest of the code doing okay so let me just explain that what actually this function is returning us and what type of coordinates are they okay so just let me open my notepad okay so this function like this function so let me just select a brush here okay okay so just function like space cascade dot detect multiscale which is uh this variable faces just means that this basis is a list and this list is storing the contents of the face so if i draw here like if i draw pieces like like if this is the person here like if this is person one like person one and if this is the person two okay so these both are faces okay so these are the top coordinates like x y are the top coordinates of the faces and this is the width this is the height okay so a box it returns like this detect multi scale returns a block to you like it returns a box in which we have the top left and we have the top left coordinates of x y and the height is h and the width is w okay so this function just returns x this function returns x y w and z so the w and h x y w and h okay so these are the coordinates and by this w and h we can just calculate it what are what can be these coordinates like this can be like x plus h and y plus w right like you can just calculate it by adding w and h in x and y so we can get this these and this coordinate also so this function is just returning as a coordinates so that we can just uh make a box into the field around the face okay that said about this let us move forward okay so now let us see that the further code so this line like faces is sorted faces key lambda x2 into x3 so what is it is doing so it is just arranging your faces like if you have multiple faces in the video field like if i show my face my sister's face my brother's face my parents face my every my friend's face so multiple number of faces will come right and we have to sort that faces in increasing or decreasing order as per our need okay so what we are doing here is we are passing the function name sorted and we are just using using a laptop function okay so in this uh this line mean that we are passing our faces list here like in this faces list we have uh x y h and w coordinates uh numbers okay and we pass this list here and we are just calculating so this means that okay so like faces lists like if we have faces then faces contains a list of x y w and h okay so it is zero index this is one index this is two index is three index okay so the area of image is built area of any image is okay this is width into height and this is basically area and the image which have larger area will obviously come first if we are sorting it in a decreasing order and if the area is less then it will come first in the sorted order if we are sorting it in an ascending order right so this so in this here so lambda x is just representing our faces and we are just using lambda function here if you don't like what is lambda function so let like just get a quick overview by seeing the documents documentations okay so x is representing this spaces and x2 into x3 basically is area of image area of the face for the area of the box which hasn't been okay and reverse is equal to true means which we are just arranging this in a descending order like we are sorting it in a descending order right so and these like if we are having faces like this first faces this second phase is this third phase is like small face then big face and small place and these all faces will be sorted in a descending order like first become big and small and then small this one okay so in this way we sort our faces and every data will be stored in this in this variable okay so i hope that you get a clear understanding of what we are actually doing here and now just forget this line as of now so now we are just we will just hydrate every and you'll just store every face in our data so now we are we are just i'm trending in our faces a so uh let us see that we are starting a for loop here and four log is going to end okay and this x y w h is are the coordinates of the face so face and faces means that it is like this is phase one this is phase two this is phase four like these are the faces and the coordinates of each and every face will come in this x y w and h variables okay as we iterate over every faces then the uh coordinates of every phase will come in x y w and h okay and this offset simply means that we are providing a padding so if you have done html before before you might know that what is padding which is what is margin so padding is basically uh so if we are having our face here this is our face then this gap is basically padding okay so this gap is starting sorry about the handwriting uh actually pen is quite bold here okay so if we are having a face here like and this is covered in a box then this box is having a padding of five okay so this length is basically five or five carry okay so we have just given the padding of five to like uh show a clear user interface okay so as before we are just having this uh this box as outer box which is which we are having the coordinates x y and everything so now here we are just extracting the face section so this line is basically extracting the section of a face so it is subtracting the offset so basically it is subtracting the padding and it is just uh calculating a particular section of a face initially there was padding and now we are discovering the particular section of the face okay and after that like you will see you can understand this easily like we're just subtracting offset from length from top and bottom and subtracting from left and right okay we are just subtracting our padding and just getting the section of face by this line okay just go through it once and by this face selection we are just resizing my face to 100 cross 100 image okay so i hope that you understand it and now this skip so this tip just means that when we start recording our face then after every second i will skip after every second or after every iteration this tip will increment okay like we have recorded one first phase second phase third phase like a particular uh time frame of the face is being recorded by this script by the script okay so after every tense phase like when i started the recording when i started recording my face so i recorded at first second second second third second fourth second i'm recording my face at every second okay so when i read the 10th second of camera i will just do a skip operation okay and after every 10th phase i will be recording this 10th face into my array okay i'll be recording each tenth hydrated phase in my array so that i don't have many faces in my area and i have a good recognize later so as you can see that like after each 10th 10th iteration i am just appending my face into the phase data and sprinting the length of face that's it and after and after that we will do in the next video before that just go through everything which i've checked so let's meet in the next video till