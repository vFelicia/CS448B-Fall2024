hello guys in the last video I've shown you how to create a text file using C++ and how to write into that text file using C++ now in this video I'm going to show you how to read from a text file and show it on your terminal using C++ so this was the code I have shown you in the last video and I have uh shown you these three classes which are used to create or read from a file and I have shown you whenever you want to write into the file you use this class called of stream and whenever you want to read from a file you need to use uh if stream class so in this video we are going to use this class called ifstream which is used to read the data from a text file so let's uh get started I will just comment uh this earlier code and I will write a new code to read from a text file now I'm going to use the text file I have created in the last video to read from it so this was the text file I am now in my project folder and this is the text file in my project folder which is present in my project folder and this contains four lines which are like this and I want to read each line and I want to print each line on my terminal how can I do it so let's see how can we do it so first of all as I have told you you need to use if stream but before that I'm going to declare a string variable to store every line which we are going to read so what I'm going to do I'm going to include one more class which is called string which will help us to use strings okay so just include strings and I'm going to add a string variable string and I will call it line okay and in the next line to read the file I'm going to use if stream class and once again I'm going to name my file as file underscore for example this depends on upon you whatever name you want to give to your file uh you can give it but now the text file name this text file name should be same as present in your project folder wherever your file is okay so my text file name is my text and when I go to the property I can see this is a txt file right so I'm going to just take the same name as my file name and then what I need to do I need to open this file so I will just check if this file is open so this line has opened this text file but I'm want to make sure that file is open and then only I will read the data from this text file so I will check in the next uh last video also I have shown you this method to check whether file is open or not so you just need to take the name of the file and then right dot isore open and this method will return a Boolean value so it will give you true or false if the file is open it will return true or or in any other case it will return false okay and at the last of the file when you are done with reading you need to close the file so in order to avoid any mistakes I will just close my file I will write the uh code to close the file first and then we are going to do perform our code inside this if condition now in order to read the file line by line there is a function in the string class in this string class called get line so I will use a while loop while and there is a function called get line which takes two arguments this is this is the overloaded function and uh what we can do is it we can pass two argument in this first is the file instance we have created which is this one file underscore and the second argument is the line which is a string variable right and what this getline function will do is it'll read this file line by line and then transfer into this string variable line by line okay so what it's going to do it will uh read the first line it will transfer into this variable called line and whatever we want to do with this line it'll we can do and then it'll go on reading line by line until the end is reached okay and what we are going to do in this while loop is we are just going to Output these lines so I will just use STD see out and then I will just print this line which is our string variable and then I'm going to just uh print next line so I can just use this back sln to change the line right if you remember in the last video I have shown you this okay now in any other case if the file is not open I can just so show else and I can just print out the message that file is not open right so I can just print out here file is not open okay now I'm going to run this program and let's see if it gives the same result which is present in the file or not so our file is this one you can see here and I I will close the file to avoid any clashes and I will compile my program first which is compiled f and I'm going to run my program and it reads the same data which is there in your text file which is this one right so this is one method to read line by line from a text file now for example you want to read a custom data from a file for example we have a custom data for example we have a student name whose uh ID is one name is Mark and for example his age is whatever 14 uh ID 2 and name Tom and the age is 15 three uh name is John and the age is 1440 example now this is a custom data which is present in my text file whose first uh word is a integer second word is uh string and third word is uh integer once again this can be double float or anything right and I will just save this data here so this data is now saved and I will just close this file and to confirm this I will reopen this and this data is there I want to read this data one by one how can I read this I will just I can just create I'm going to just delete these two lines and what I can do is I can create three variables int ID which is a integer then STD string and this will be the name of the student and int age this is the age of the student and instead of using this get line function which was the inil function in string class what we can do is we can just use this file and if you remember when we were writing in the file we use this kind of uh angle brackets right now in order to read from a file we will just revert these angle bracket as we do in C input or C so just use file and then just use use these uh angle brackets which we use in C in and to write the data we use uh the angle bracket which we use in C out right so to remember this just remember that whenever you want to write you use the angle bracket similar to C out and whenever you want to read from a text file you use the angle bracket which you use in C in okay so file and then give your ID here ID variable once again give the name variable and once again give the age variable okay and what will this will do is it will also read your uh text file line by line and the first word will be stored in this ID variable the second word will be stored in the name variable and the third word will be stored in the age variable like this and in order to print this just you can just print out this using C out and here you can just print uh ID and you can just give this space here in a similar way just print name give this space here and then print the age and then we will change the line okay now I'm going to compile this program hopefully it will not give any error and when I run this program it gives me the same data which is there in this text file right so in this way this is the second way of reading custom data now this data you it's not necess it's not you know mandatory to use the spaces here you can use either comma for example like this and whenever you compile and run the program it'll give the comma separated values like this or you can give any other values for example pipe or any other value for example hash and hash it'll give this hashes in between them so in this way you can read the custom uh data from the text file and show it on the terminal so I hope you have understood uh this concept of reading the text file using C++ and I hope you have enjoyed this video please wait comment and subscribe and bye for now