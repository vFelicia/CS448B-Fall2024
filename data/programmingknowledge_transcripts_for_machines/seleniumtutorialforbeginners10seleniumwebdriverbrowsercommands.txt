hello everyone this is vasha and welcome to programming knowledge so in the previous tutorial we learnt about the shadow dom objects in this tutorial we're going to understand some of the important selenium commands which is frequently used to write the test scripts now these selenium commands consist of the browser commands the navigation commands and the web element commands today we are going to understand the browser commands like what are browser commands what are the different types of browser commands with their syntax also we will implement some set of test cases and then we will understand the difference between the close method and the quick method so let's get started now first let us understand what are browser commands browser commands are something that are very basic operations of the web driver which includes the closing of the browser performing some few tasks those few tasks is like get title to uh quit to manage to close the browser to get the current url to get the page source so these are some of the uh operations these are some of the few tasks that we perform on the selenium webdriver so and these are some of the list that is given over here this is the list that is given over here now if you write for example if i write driver dot you can see this list so these are the different this uh list which is getting highlighted over here so these are the different browser commands that is present over here okay so these are browser commands now i have just created this basic uh notes this basic sheet which consists of the browser commands the navigational commands the web element commands which consists of the commands the description the syntax and what parameters accepts and what it returns it will be very quick recap for you while going in interviews because they frequently ask these questions like what is the difference between the close the quit method the submit and the click method and what is the difference between find element and find elements so these are some of the differences which we will cover and also we will study these commands so uh this is the sheet that i have prepared i will give the link of the sheet in the description box you can download the pdf format also i have uploaded on my drive so i will give the link of this drive as well so you can get a hang of all those commands whenever you go for interviews now coming to the test cases these are the test cases which we will execute and while executing we will cover these commands these are the commands like the get the get title the get current url the get page source the close and the quit now get window handle and get window handles is a part of the browser command but it is a bit complicated i will cover that in the later tutorial so for now we need to get a hang of get get title get current url get paid source close and quick so by executing these test cases we will create the test scripts of these test cases we will understand these commands also okay first test case that we have is the open the chrome browser okay in which we use the system.cell property and the web driver driver is equal to new chrome driver these are the two commands that we use in opening the chrome browser then navigate to the url to navigate to the url we use the drive driver dot get command right so this is the part of the browser command next we will maximize the window the next we will verify the current url of the page for this we will use the current get current url command okay through if statement okay then we have to verify the title of the page now to verify the title of the page we will use the get title command okay and we will verify it through if statement next we will print the length of the title of the page in this we will use the length command we'll have a look at that okay next we will print the page source of the page in which we will use the get page source command also we will print the length of the page source okay next we have the close browser and quit the browser now uh we will understand the difference also uh practically okay so this is the webpage that i want to automate today now i have created a java class in my package combat selenium in which i have named it as selenium tutorials then i'll be executing my test scripts over here in this uh in this selenium tutorial 10. the first test case was to open the chrome browser for which we use the system.set properties in which we give the key and the value the key is the webdriver.chrome.driver and the value is the executable chrome driver file okay next we have the webdriver driver is equal to new chrome driver why do we write the statement i have explained in the previous tutorial you can have a look at that tutorial okay the next command is that we have to navigate to the url so what i'll do is i'll write driver dot get and i will write my url in this get this is the first method okay to navigate to the url the second method that you can do or you can navigate is i can assign the url to a string variable like i'll write string i will name that variable as url and i will place my url in this variable next i will write driver dot get url so i can navigate to the url through this way as well as this way both the ways it will work for example uh so let's see whether we can navigate or not so by using this method driver.getmethod okay so chrome browser is launched and also just navigated to this page i will comment this and let's see okay so i chrome browser is also known so net is also navigated so these are the two methods to which you can navigate to the url now get method i will just comment this for now we will use this driver dot get method now uh get my turn up this commands open the specified url in the browser it accepts string as a parameter and it returns nothing okay and this is the basic syntax of navigating to the url and it is a part of the browser command so next test case that we have is to maximize the window so i'll write driver dot manage dot window dot maximize okay so the next command is verify the current url of the page url of the page let's first find the url and then we will verify so i'll write driver dot get current url and i will store this in a string variable string url of the page and i will print this okay let's see what is the output so a chrome browser is launched it's navigated it's maximized and here it is the url of the pages this this is the url of the page now let's verify the url to verify the url we will use the if statement so i will write if url of the page dot equals now i will write the url over here now if i was uh executing this statement this navigation uh statement what would i do what did i do over here is that i have written string url right so what would i do over here i will simply write url okay so this means that the url of the page that is the output that we are getting the actual output and the expected output will be matched the expected output is this this which is stored in this url variable and the actual output is stored in the url of the page right so if i would execute this statement i would have written this way but since i'm executing driver.getcommand i'm not writing it this way i'm not storing it in a string variable and then writing driver.get and inside get i'm writing the url the parameter that i'm giving is the url that is a string parameter so i'm not executing it this way i'm executing through driver.getcommand so i'm not writing it this way so i'll just simply write what output do i want this is the expected output that i'm writing over here and the actual output that i'm getting is the url of the page okay now if the actual and the expected matches so what i want is i want the output as the url is verified and then else i want the url is not verified so now let's execute this so my chrome browser is launched it's navigated it's maximized and now let's see the url of the pages this is the url and the url is verified that means the uh actual url that we are getting that is this and the expected view url that is this both is matching okay this is the expected url and this is the actual url both are matching that's the reason why we have called the url is verified for example if i just uh write it this way now let's see if it works so my chrome browser is launched it's navigated it's maximized okay and here you can see the url is not verified why because my actual that is this is my actual and the expected is not matching that's the reason why the output is the url is not verified the next test case is verify the title of the page so first we will find the title of the page so i'll write driver dot get title and i will store this in a string variable i will write string title is equal to driver dot get title next i will print it so let's execute it my chrome browser is launched so here it is see this is the url of the page the url is verified and then here the title of the page is tools qa this is the title of the page now how do you see the title of the pages so i'll just inspect and here in the head tag here you can see you can see title tools qa title this is the title of the page this is the title of the page and the title that we got is the tools que so this is how you can find the title of the page on the web page okay next we have to verify the title right so i'll use the if statement i'll write if title dot equals okay so this is the title let me copy this and the output that i want if the actual and the expected is matching the title is verified in the else statement i will write the title is not verified okay so your uh we are verifying the title of the page so let's see let's see the output of it so my chrome browser is launched it's navigated it's maximized and here you can see the title is verified because the expected output and the actual output is matching okay so now next test case that we have is we need to print the length of the title of the page okay to print the length of the title of the page we're going to use the length comma so what i'm going to do is i'm going to write driver dot get title dot length okay and i will store it in the integer type of variable because the answer that we're going to get is an integer so we i'm going to write int and title length is equal to driver dot get title dot length and let's print it so let's execute this so my chrome browser launched it's navigated it's maximized and let's see the length of the title of the page is 7. now it is 7 because this is 1 2 3 4 5 6 7 so the length of the title of the page is 7. so now the next test case that we have is to print the page source of the page now for that i'm going to write driver dot get page source i will store this in a string type of variable string i will write ps is equal to driver dot page source next let's print it okay so now let's execute this so my chrome browser is launched it's navigated and it's maximized and here you can see the page source this is the entire page so that here you can see is this it prints the entire core of the page okay so it's quite long now we have to print the length of this right so what i'm going to do is i'm going to write driver dot get paid source dot length and i'm going to store it in the integer type of variable so i'll write in it's source length is equal to driver.getpagesource.length okay now let's print it the length of the page sources length so this is the chrome browser now let's see here this is the length of the pesos now we we won't sit and count but since it's too long so this is the length of the page source now the next test case that we have is we have to click on the new tab right so we use the click command over here the click command is not a part of the browser uh command it is a part of a web element command but since we have to know the difference between the close and the quit so we are going to execute this command now this is the new tab command so i'll just inspect this i'll go to selectors hub here i can see the relative x path i'll just copy this relative xpath i will write driver dot find element by dot x path and i will place my relative x path over here and what i want to do is i want to click so i right click and let's see so my chrome browser is launched it's navigated and it's maximized and the new tab is clicked so here you can see there is a new tab okay so first we will see the close command okay now if i write driver dot close just look at it very closely so i'll just write thread dot sleep and i'll write 100 over here so that you just get to know that how close method works okay it adds the exception towards interrupted exception over here and we're going to use a thread.sleep now dot sleep is used in multi threading if you know your javascript concepts really well we you we use stand out sleep it causes the currently executing thread to sleep for some specified time so here i have specified the time of 100 milliseconds so now let's see the output i want you to closely look at the how driver.close works so our chrome browser is launched and the new tab is open and here you can see there was a parent tag over here the before tag okay let me increase the timing over here so my chrome browser is launched it's navigated now this is my parent tab and this is my child tab now let's look at it this tab will be close to close dot driver command if you can see let me show it you again i am executing the command now this is my parent tag that is this browser windows is my parent tag and this is my child tag now through driver.close the parent tag will be closed but my child is still open okay now i'll write now i will commend this and i will write driver now we'll use the quick method so i'll just write driver dot quit and i will write thread dot sleep okay now let's run this command so my chrome browser is launched it's navigated and this is my child tag that's my parent tag and you will see driver dot quit closes both the tabs so this is the parent tag now here when we perform the driver dot close command and the driver dot quit command there are two tabs okay uh this is the parent tab and here when i click on new tab this is the child tab okay so when i write driver.close command it will just close the parent tag it will not close the child tab okay whereas when i write driver.quit command it will close the parent tab as well as the child tab so let's have a recap of what we have done till now now the first test case was to open the chrome browser in which i have written the system dot set property in which i have given the key and the value the key is given that the webdriver.chrome.driver and the value is the chromedriver executable file next we have to navigate to the url we can navigate to the url through two ways the first way we can do driver.getcommand now this java dot get command it this opens a specified url in the browser and this accepts a string as a parameter here you can see this is a string as a parameter and it returns nothing okay so this is the first method where we can write the driver.getcommand the getcommand is a part of the browser command and the second method that we can you is use is the we can assign the url to a string variable now here i have created a string variable like i have create string url and i have assigned the url to the string variable and then i have written driver.get and i have written this variable in my get the parameter that you are using is the string okay so basically it accepts string as a parameter and it returns nothing this is about the get command next we have maximized the window for that we have used the driver.manage.window.maximizemy okay dot maximize next we have to uh find the url of the page what is the url of the page this is the page and this is the url so we have to find the url of this page so for that i have used the get current url method now this method fetches the string representing the current url which is opened in the browser okay and this accepts nothing as a parameter there is no parameter given over here but it returns a string value here you can see in the output here you can see in the output the url of the page so it returns the string value and it accepts nothing as a parameter and what does the get current url method does it does it fetches the string representing the current url which is open in the browser this page was opened right so it was fetching this string this is the current url of the page so for that we have given a string variable that is a string url of the page and i have written driver dot get current url and i've printed the url over here now to verify the url i have used the if command in which i have written the url of the page in which i am getting the actual output and here i am matching the actual and the expected output i'm using the equals method dot equals now i'm writing over here the expected output that i want now if the expected and the actual output matches the output will be the url is verified and if not the url is not verified now here it's matched so it is written the url is verified so the next is that we have to find the title of the page and we have to verify it now to find the title of the page i will be using the get title command now the get title command is used to retrieve the title of the web page that the user is currently working on now this is a page now when i inspect this here in the head tag you can see the title and here it is this is the title of the page that is the tools qa this is the title of the page okay now to get this title i have used the get title command which retrieves the title of the web page now it accepts nothing as a parameter can you see any parameters no right so it accepts nothing as a parameter but it returns a string value here you can see the value the title of the page is this this is the string value that it is returning so to get the title of the page i have written string title i have created a string variable a title i have named as title and i have written driver.gettitle the title is stored in this string variable then i'm printing the string variable over here to verify it i'm using the if statement first i will write the actual output that is the title dot equals the expected output that i want the expected output is our year this is the expected output okay so here the expected output is written when the expected and the actual output is matching the output will be the title is verified and if not the title is not verified like here you can see the title is verified now to print the length of the title i am using the length command okay what i'm going to do is i'm going to create a integer type of variable and i'll name it as integer length and i'll write driver dot get title dot length by writing length i'm actually fetching the total length of the title it returns the length of the string okay now uh to print it i'll write system dot out of println the length of the title is and i'll write the variable that is the title length and here the output is the length of the title is seven okay next is the page source now basically page source is a command it is a browser command which returns the source code of the page so this is a page and this is the entire source code of the page so it will return this entire source code of the page so for this we'll use the get page source uh and this get page source it accepts nothing as a parameter is there any parameter over here no right so it accepts nothing as a parameter but it returns a string value and the string value this is the entire string value that is given over here now to print the paste to source what i have written is string ps is equal to driver dot get page source i have used the get paste source command and i will print this variable this string variable then to find the length of the page source what i have done i have used the length method i'll write driver.getpagesource.length and i store this length in the integer type of variable named as ph length and i've printed over here so the total length is displayed over here this is the total length so these were the commands the browser commands next we will learn about the click and the uh next we will learn about the close and the quit command the difference between the close and the quit method okay for that we will click this new tab so first what did i do is i clicked this new tab so for that i inspected this element and i wrote the x path and i have performed the click operation on this web element next to differentiate between the close and the quit what i did is let me execute this again first i have written driver.close now then i've written thread.sleep which causes the currently executing thread to sleep for a specified time for example here i have written the 5000 milliseconds okay now let me execute this command and see the difference again so my chrome browser is launched it's maximized this is my parent and this is my child tab my parent tab will be closed so this is close driver dot close which means that the method terminates the current browser window okay whereas in quit it will terminate all the browsers so let's execute this so my chrome browser is launched it's navigated and here you can see this is the new tag and through driver.quite both the tabs are closed okay so uh this is the major difference between the close and the quit the close in both these commands they accept nothing as a parameter and uh it returns also nothing as a parameter this simply closes the tabs and the windows so this is all about the browser commands that we have studied till now we have studied about the get then we have studied about the get title the get current url and we have studied about the get page source then we have learnt the difference between the close and the quit command now let's understand the difference so the driver.quick command closes all the browsers whereas the closed method shall close the browser which is in focus that was the parent tab was in focus right so it closes that browser which is in focus now the quick method closes all the active webdriver instances whereas the close method closes the active webdriver instances so this is the difference between the quick and the close command so in the next tutorial we will learn about the navigational commands like what is navigation command what are the different types of navigation command with the syntax we will also implement the same test cases we will implement the different test cases and then we will understand the difference between the navigate to command and the get command so under then goodbye please like share and subscribe this video