hey guys welcome to the next video on open CV tutorial for beginners using Python in this video we are going to see how to use background subtraction method in open CV so first of all what is background subtraction so background subtraction is common and widely used technique for generating the foreground mask which is also known as the binary image containing the pixels belonging to the moving object of a scene when these images are captured using a static camera and as the name suggests background subtraction calculates the foreground mask performing the subtraction between the current frame and the background model containing the static part of the scene so for example the background subtraction method can be used in the case of visitor counter where you have a static camera capturing the number of visitors and during or leaving the room or you have a traffic camera which wants to count the various telematic data from the moving car or moving car data which is captured by that traffic camera now there are several algorithms which were introduced for the purpose of this background subtraction and OpenCV has implemented few of them which we are going to see one by one so as you can see here I have this example which is a very simple example of just taking a video and then we are extracting each and every frame of that video and showing it into a window so you say I am show method I'm just showing each and every frame of that video so this you already know from the previous videos how to capture the video frames from a video file or the live camera so when I run this code you will see that there are few persons which are moving here and we want to detect all those moving persons which are moving in the image so for that we are going to use a few methods which are available in OpenCV so let's first write some code and I will explain you what this code is going to do so I'm going to define a variable after this line of code and I'm going to define a variable named F gbg4 foreground/background and then i'm going to just call CV dot BG s eg m so BG s eg M and then I'm going to call a method called create background subtraction mo G method so this create background subtraction mo g method is a Gaussian mixture based background and foreground segmentation algorithm so using this line what we are doing is we are just creating a background object of the function using this method create background subtraction mo G now this method has some optional parameters like history number of Kos in mixtures and threshold but all of them are set by default so you don't need to set anything specifically unless you want to change some of the optional parameters so I'm going to leave everything as default and I'm not going to give any argument here for this method and then after I captured each and every frame inside this while loop what I'm going to do is I'm going to create a new variable called FG mask for foreground mask so I'm going to just write FG mask is equal to and for getting the four gram and masks we are going to just call a method called apply on this f G B G or the background subtractor image so we are going to just take F G B G and then we are going to call a method called apply here and it takes one argument which is the frame which we are capturing okay so we have applied this method and then we are just getting the foreground mask using the apply method on this background subtractor variable and that's it so this is your foreground mask so when I just use one more I'm show window and this is for the FG frame let's say so FG mask frame let's say okay so FG mask frame and we are going to just pass this argument here so let's see a what result we get after we apply create background subtractor mo g method so you can see this normal image here and also you will see these moving persons in the foreground mask right so you have subtracted the background from the floor ground and you can easily detect the moving persons here inside this image using this mask you will also observe that there is a very little noise not much when you use this kind of subtraction using Create background subtractor emoji method there is one more method which is called background subtractor mo g2 which is also Gaussian mixture based background and fro ground segmentation algorithm so let's use that method also so this method is directly available under cb2 so you just need to write CV dot create background subtractor mo G okay and everything will remain the same so it's going to return you the background subtractor variable which you can use with this apply method to get the foreground a mask okay so let's see how this method performs so you can see the result which is quite different from the first method which we have used so in the previous case we have to create the background subtractive object and here in this method you have an option of detecting the shadows so there is an optional parameter which you can give into this method which is this create background subtraction emoji which is called detect shadows so by default this detect shadows is true that's why you see the shadows there if you just write the text shadows is equal to false then it's good not going to detect the shadows so I'm going to just run the code once again and you can see now shadows are less visible right so let's run the default case once again so let's say we just write true here and you will see the shadows in the gray color right so these shadows in the gray color and when we just make it false so the text shadows false you will not see that gray color okay so shadows are displayed in the gray color so if you don't see any gray color then shadows are not detected this is a noise which is detected but not a shadow okay so this is the difference between the first background subtractive method and the background subtractor emoji method there is one more method which is called the background subtractor G M G so this algorithm which we are going to use so let's use this method first of all which is called background subtractor G M G which is available under C V dot B G segment as the first method so just write BG s eg m dot create background subtractor g mg method so this create background subtractor g mg method algorithm combines statistical background image estimation and p pre pixel by a scene segmentation let's see how this method performs when we just used this GMG method and when you will see here there is nothing on this foreground mask frame so to get the better result you need to apply morphological opening to the result to remove the noises so we are going to do just that so I'm going to just overwrite this F G mask frame using a method called CV dot morphology X this also we have seen in the previous videos right so the first parameter here will be FG masks parameter the second parameter here will be the OP so CB 2 dot morph open we are going to use the morph open method and then the third parameter will be the kernel so we need to define the kernel also so for defining the corner let's define the kernel outside this while loop so I'm going to just write kernel which takes few argument first is the shape so we are going to say we want the more Eclipse shape so I'm going to just write more Eclipse and then the kernel size will be let's just 3 comma 3 ok so we are going to apply this kernel using this morphology X method and when we are going to run this code you can see these kind of results which are not as good as you have seen in the first method now let me show you the last background subtraction method which is called the background subtractor KNN method so this method is available under CV directly so we are going to just comment this kernel code because for this method we don't need to define any kernel so we can just write CV dot create background subtractor and then at last you just need to write k + n in capital ok yeah and it also takes few optional parameters like history and other parameters but these are optional parameters so for now we are not going to set any parameter and let's see the result which we get using this KN method so I'm going to run this code and you can see this KN method result it also shows the shadows in the form of grey pixels so whatever gray pixels you see here in this image are the shadows in this method also there is an optional parameter which is called detect shadows which is set by default to true so when you make it false the shadows will not be detected so you can see no gray pixels are visible now when you make it true then the gray pixels will be visible and those gray pixels indicates the shadows right so these are the few methods which you can use for the background subtraction in OpenCV I hope you've enjoyed this video and I will see you in the next video