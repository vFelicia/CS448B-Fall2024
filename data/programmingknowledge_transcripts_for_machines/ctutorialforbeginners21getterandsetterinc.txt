hello guys in this video I'm going to teach you about Setter and getter method in C so to start with for example I have a class called book and this book book class have three public variables public in ID which is a book ID public string book name and public int number of pages which which is assigned to a value of 250 now in objectoriented programming it's a bad idea to declare your variables as public members of the class and why it's a bad idea or it's bad practice to declare your variables public because for example our book class is here right and book ID cannot be negative right and book name cannot be a null in in normal circumstances and number of pages you cannot change the number of pages right book A book contains a certain number of pages you cannot change the uh number of pages in the book right now for for example if you declare them public members variables of the class what the other user can do is other user can declare the instance of a class called B is equal to new book and then he can access your ID for example B dot ID and he can assign negative values to the ID for example minus 10 and it will be perfectly valid but in real situations the ID cannot be negative right book ID cannot be negative and when I want to print this ID I can even print this and console dot WR right line and I can say here book ID is and then my placeholder and then I can say book ID I can call this book ID here right and when I run the this code it will work perfectly fine even though uh it's not allowed to set the book ID a negative value right in the same way somebody can even assign a null value to the book each and every book in for example we are taking the example of book so have you seen any book having the null value but in this case when you um declare your book variable public what some other user can do B do book name and he can assign this a null and this means that your book don't have any name book name is null so you can just call this and run the program and program runs fine but it's not valid in real conditions right the book name cannot be null in the same way somebody uh in real situations when you have declare a book class it has a certain number of pages you cannot change the number of pages or user user should not be able to change the number of pages but look at here B do number of pages and I can change it to 300 3,000 even and I can call book pages is number of pages and the user can be able to change even the number number of pages which is not allowed so that's why it's not a good idea to declare your members of your class as a public members so it's a good practice to declare your member variables as private okay so what I can do private and whenever I declare my variables as private what will happen is so let's see what happens I declare all the book member variables as private as soon as I declare them private you see your assignments are invalid now so you cannot directly access these variables so when you hover over here it says that this U book. ID is inaccessible due to protection level because this is a private member of a Class A Private member cannot be accessed outside your class okay so this is a class and this is the boundary of a this private member and it cannot be used outside the class so this is one level of protection you have given to the variables now nobody will be able to access them directly but if nobody should be able to access them directly how can you assign a name to a book or assign some other values to a book so what we use is a Setter and get getter method and what are these Setter and getter method these are nothing but a way of indirectly accessing your uh variable private variables and protecting your private variables uh against invalid conditions so for example I will declare the setter and getter method for ID how we can uh declare a Setter and getter method so first of all we will declare a set method of our variable ID so it start with public and what it return it will return integer because our ID is an integer right public int and when then we say set ID okay so Setter method how we can Define these Setter method generally we add the set before your variable name okay and then this set method takes an argument in ID for example or ID and what it will do is let me give this bracket once again and what is will do is it will return an integer okay or this will not return an integer a bag bag your pardon it will be void and the get method will return the value so it is it is declared like this public void set ID and it just has set and the name of your variable and what you need to do here is take your uh private member variable so you can uh access it like this this dot ID is equal to this ID okay in the same way to declare a get method what you need to do is you need to do public get and the name of the ID so get ID and what it does is it returns an integer and why it returns an integer because it it has to return the ID of the book right so in the code we will just return return this do ID okay so indirectly we are returning this variable so this set method is used to set the value and get method is used to uh return the value or access the value of it but we have still or user can still give the negative value to ID right so what this method can do is if your ID or this ID is less than zero then we can print a message so I will just copy this and we can say the ID is not valid or ID is yeah so the book ID is not valid so now we have added a protection against the negative values okay so no user should be able to assign a negative value to your variable ID right but even this will also will be able to assign the negative value to the idy it will just uh go here it will see okay ID is less than zero and it will print it and it will assign it so what we can do is we can throw an exception so how to throw an exception just write throw new exception okay and what this will do is it will throw an exception by saying this message and then it will this condition will not be reached okay so let's try to set the value of uh value of ID a negative value okay so let's say B do set value set ID is equal to Min 10 10 okay and how you can get this ID by calling this get ID method and what it will return it Returns the ID right so ideally it should return whatever is assigned to the ID I'll run the program and as soon as I will I run the program it's not showing any result and it throws an exception see it throws an exception and it says the book ID is not valid which is our message right and it doesn't go even to the next uh next code so in this way we can protect our variables by assigning invalid values okay the same we can do uh for book name so I will copy this uh set and get values and paste it here and now it will be set book name and get book name okay and this is a string variable book name is a string variable so we will pass string book name and then in the get method it will return uh string right and we will return book name and in the set method what we uh have uh said earlier that book cannot be null or empty book name cannot be null and empty so what we can do is in the if condition we can say what we can say string dot is null or empty this is a property in uh string to check if your string is null or empty okay so if my book name is null or empty I can say the book name name is not valid so I can thr this exception or otherwise if I get this valid name I will just assign the value of book to my private variable and I can access this like access it like this so let's assign book ID positive and once again let's assign book name a null value okay book name I can say null and let's try to access this so I say book name is and I will call this go get book method and I will run the program and once again and it's expected to throw the er error and it says the book name is not valid it's throwing this exception but whenever I pass the valid name for example I pass the name c shop tutorial book and now I will run the program it prints that book is book name is c tutorial book okay so in this way we can protect our variables which are uh fragile or which are uh which have the capacity to be to take invalid values we can protect them using Setter and getter method in the same way for accessing this number of pages we can only Define a get value and we can we uh avoid uh defining the set value so whenever we Define a get value for number of pages we can only get the number of pages and we cannot be or the user cannot be able to set the number of pages right so what we can do here we can say public this will be our public int method okay public int get number of books and what it will do return this DOT number of pages so it will just return the number of pages and nobody can assign the number of pages to it okay so I can just P do do get number of pages and I will run the program it will run fine number of pages is book name is 250 I can say book pages is so now it says book pages is 250 so always remember that whenever you need to declare variables in the class try to make them private and try to access them with the getter and Setter values it's always a good practice so I hope you have understood the basic concept of Getters and Setters and I hope you have UND uh enjoyed this video please writ comment and subscribe and bye for now