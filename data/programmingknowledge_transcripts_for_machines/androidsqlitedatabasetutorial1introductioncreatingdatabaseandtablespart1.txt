hello guys welcome to the first video on Android escal database tutorial for beginners in this video series I'm going to show you how you can get started with escolite using Android we will look uh in this video series how we can create a database and perform some database uh queries like insertion updation or deletion or other basic queries on database using Android so let's get started and let's see uh some important stuff regarding SQ light on Android so first of all what is SQ light as you all know sqlite is a database which is a opensource database so you can use it for free and it's a relational database okay and the most important feature about sqli database is it's a local database so it doesn't require any server or any odbc or jdbc queries for query or connection for its uh you know functionality it's just you can say it saves its data into a text file and it's saved locally on your uh you can say mobile uh device or your tablet or whatever Android device you are using and Android comes with the builtin eslite database implementation so you don't need to install any extra uh libraries to use site with Android and the last uh point is to create update a database in your Android application you can create a subass of a class called escolite open helper this is a class which will help us to create and you know manage our sqlite database now enough uh of the theory let's go to the Practical part and let's start with creating uh our app from scratch so just open your Android Studio we are going to start a new Android application and we will name our application as escolite app for example and then click next or select your minimum SDK as you already know how to select it click next and I'm going to select a blank activity next and Main activity is okay for me so I'm going to finish now once your basic uh app is created what we are going to do is we are going to create a class for handling the sqlite database so go to your app folder and in the app folder go to the Java folder and inside here go to the package in which your main activity is there so this is a package in which my main activity is there so just go to the package and right click this package and we are going to create a new Java class and uh we will name it as database helper class okay and click okay and this is a basic uh blank uh class and in here as we have discussed we want to uh create or we want to extend this uh class using our escolite open helper so just uh go here and just write extend escolite open helper okay and uh it will uh show some error because we haven't uh imported the classes related to this escolite open helper so just click Alt Enter and just click this uh button called import class and it's going to import this uh class okay still it's showing error because we need to create or Implement some of the method from it so you will be able to see a small bulb red bulb here you just need to click this uh bulb and then you just need to click Implement methods and there are two important method related to this class which are on Create and on upgrade you are going to select both of them and click okay and one more thing which is required is to create a default Constructor so once again click this red bulb here and just choose create Constructor matching super okay and we are going to select first of them and just create it okay so we have successfully created our database helper class which EX extends from our esite open helper which is the main class for handling site and we have some basic uh methods here and a Constructor now for creating uh database first of all we need a database name now let's uh see how we can you know how we are going to create a database and what will be the name of of our database and uh all other stuff so for uh this for example to start with we are going to create a escal database like this and the name of the database will be student. DB the escolite database is not case sensitive so you can use upper cases and smaller cases uh together and it's not not case sensitive so case doesn't matter in escolite okay so our database name will be as student. DB and it's going to contain four columns first for ID for the student second is the name for the student third is the surname or last name for the student and fourth column will be the marks scored by the student and we are going to create database uh or insert some data like this so ID will can be 1 2 3 4 for example name surnames and marks coded by this student and in this video we will just see how we can create this database which is student. DB and create the table this table for our database okay so now what we are going to do is Let's uh declare some variables so that uh we can Define the name of our database so let's declare our uh variable which we are going to assign the database name okay so let's declare public static final string and let's declare a variable name called database uncore name and we will assign the name of our database for example student. DB student. DB and I have told you uh that case doesn't matter you can you know write student. DB like this or in capital it doesn't matter it's going to uh treat them as same okay and second what we are going to do is we are going to declare our table name so this will be our table name and let's uh give the name to our table as student data table or student table which will resonate perfectly with our table and as we have discussed this table is going to contain four columns 1 2 3 4 and for Simplicity Let's uh keep all the uh variables as string First Column name name was ID okay so ID for the student and the table name is uh column name is ID right so or you can do something like this call underscore 1 column one is ID and similarly column 2 column 3 column 4 so like this column 2 column 3 column 4 first is First Column was ID second column was name third column was surname and fourth column was marks okay so these are the four columns this is our table name and this is our database name now in order to uh create our database first what we are going to do is we are are going to uh in the Constructor we are going to create our database so we need to call a function which creates the database right so for Simplicity let's reduce our Constructor which only takes uh this context okay and as you can see here the super class uh we can just give the name of our database so our database name is this variable pass it here third is Factory we are going to pass null here and the version for example version is equal to one now whenever this Constructor is called your datab base will be created okay