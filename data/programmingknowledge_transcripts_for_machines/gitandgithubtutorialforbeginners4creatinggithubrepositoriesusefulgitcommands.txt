hello everyone this is varsha and welcome to programming knowledge so in today's tutorial we're going to learn how to create a repository how to add files to a repository how to commit files and how do we push files in the remote repository after pushing the files you will also learn how to delete a particular repository and also at the end i will be providing you with a git cheat sheet in which you will get all the git commands so that you get hang of all the git commands easily so let's get started so here you can see this is the github profile that we had created in the previous tutorial that is a tutorials git how to create a github profile how to install the git bash i have explained in the previous tutorial so you can have a look at it first now uh here this is the github profile that you have now to create a repository here you can see there is a plus sign you simply need to click over here and here you have a option which says new repository click on new repository now over here it says that you have to enter your repository name so in this case i will name it as test repo you can name it anything for example if your project name is ecommerce you can name it as ecommerce repository the repository name can be ecommerce or if you have any other project like library management or anything you can name it that way so in my case i will just write test repo now the next option that here you can see is the description box description box means here you can add a little bit description about the repository so here i will write this is a demo tutorial of get get up on programming knowledge okay so i have added a little bit of description about this repository now comes an option for public or private now public means anyone on the internet can see this repository but you choose who can commit it whereas private means you choose who can see and commit this repository it is totally private so in my case i would name it as i will put it as public now initialize this repository with add a readme file a git ignore file or choose a license now you must be thinking what is this readme file now this is where you can write your long descriptions of your project you can tell what how to initialize a particular project what are the prerequisites for the project so it is a detailed version of the project that you have put on away then you have the dot getting drawer in which you can choose which files not to track from a list of templates like here you are given a list of templates and you need to choose which files you don't want to track then you have choose a license now a license tells that others that what they can do and what they cannot do with your code so this is all up to you but since i don't want anything during the initialization i will not tick any of the button over here any of the check boxes over here so i'll just simply click on create repository now once i have already created a repository now its name is test repo we will add files in this repository how do we add that we will add it through git commands so what i want you to do is now so now i want you to create a folder over here so i have created a new folder and i will name it as git inside this kit again i will create a new folder and i will name it as git demo now in this git demo right click and here you get an option which says git bash here now if you have installed your git bash properly which i explained in the previous tutorial you will get this option and if not then please go to the previous tutorial and install your git bash again so this is the git bash that we have now what we're going to do is first we're going to initialize this is the first step that you need to do whenever you have a new github account okay now i have already created a repository named as test repo on our github that is a tourist github if you have uh if you have an old github account where you have already added your files and stuff then you don't need to follow this step but if it is new if it is a new account and you're learning github for the first time you need to initialize your username and user email so the very first command that you need to write is get config global user name and after this you need to write your username so in my case it's tutorials get and i will simply enter okay so uh here it says that my username has been initialized as tutorials kit now if i write uh git config global and i'll write user dot email and here i will write my email and my email is and here i will press enter so my username and email has been initialized over here so to check here i will simply write git config dash list and here you press enter enter enter enter and here you can see your user.name is tutorialskit and here your user.email is been set okay so our username and email has been set over here okay so now the next thing that we're going to do is we're going to create files in this folder that is the git demo folder we need to add files to the repository right for that we need to create a file for that we're going to write touch and file dot txt press enter and there you can see that there is file dot txt in my git demo folder again i will create a new file i'll write touch file one dot txt and there you see you can see another file file one in git demo folder now one of the most important thing that we need to understand is that to add these files in our repository that is the test repository test repo this repository we need to make this git demo folder a repository for that we are going to write get status now you must be thinking what is the git status means so git status is one of the most important and the frequent use git command it basically means that it displays the state of the working directory and it is one of the most important command also so here it says fatal not a git repository as i said this git demo is not a git repository right now and we need to make it as a git repository to add files in the test repo repository for that we need to write git init and press enter so here it says initialize empty git repository in and the location has been given over here so this basically command creates a new git repository now once a repository is created what you can do is you can go and view and here you can select the hidden items and here you can see that you have a folder dot git so once your folder your git demo has become a repository it will create a hidden folder dot git you don't need to delete this folder just let it be hidden if you want to verify if your folder is a repository or not you can simply go on view and click on hidden items and here you can see that there is a dot get folder present over here so now uh we have created this git demo a git repository now what we want to do is we want to track the status so let's write git status and let's see it says that on branch master no commits here there are untracked files that is the file.txt and the file1.txt nothing added to commit but untracked files are present now see there are two types of file in git that is the tracked files and the untracked files now you must be thinking what attract files or what or what is untracked files so let's first understand what is untracked files untracked files are the files that exist locally but they are not the part of the git repository in untracked files the file change history will not be recorded and it will not be pushed into the report copies of your repository so when you run a git push command it cannot run because it is not tracked whereas chat files are the files that stores the change history and it can be pushed to the remote repository whenever we run a git push command okay so this is the basic difference between the tracked and the untracked files now how to convert these untracked files to track files for that we need to write git add and the file name so in my case first i will write file dot txt and here it's added so i'll write git status so that i get to know the status of the working directory and here you can see that the file dot txt is in green color whereas file one dot tst is in red color because file.txt is a tracked file now whereas file1.txt is untracked file so now we need to add file1.txt to track also there there's a shortcut for it just i'll write git add and a dot which means that it will add all the files that are present in this git demo folder will be dragged so here you can see i'll write git status and here you can see that both the files are tracked now now to keep it in the repository that we have on our github profile tutorials kit we need to commit these files for that i will write a command git commit m and a get message so let me write first commit and here i'll press enter and here it says that the commit has been done there are two files changed there is zero insertions there are zero deletions okay now after this just write git status so that we get to know the status of the current working directory and here it says on branch master and nothing to commit working freely now here you must be thinking what is the meaning of branch master so the default branch name in git is master and that is why your ad is written on branch master so as you start making commits you are given a branch master that points to the last commit you made and every time you commit the master branch pointer keeps moving forward automatically basically in short it is just a default branch name in git okay so now uh let's do one thing let's make some changes in this file since we have not written anything so i'll just click over here and write hi i am versa replied and i'll just save this similarly in file one here i will write welcome to programming knowledge and please like share and subscribe this video and i will save this now we have made some changes over here okay so since we have made it some changes over here we will write git status so that we get to know some changes that we have done and here it says that it is in red color and it is said modified since we have added some lines that's the reason why it is saying modified okay so now what we have to do is we need to write git add again so all the files are added then after that let's write git status and here it says that the files are being tracked now all are the modified files have been tracked right now now here i will write the commit statement git commit and minus m and here i will write after changes and let's press enter okay so your our files have been uh committed after the changes so here it says two files changed and there are three insertions over here now we have to add these files to our repository this repository test repo repository what to do for that we need to write git remote add origin and here we will paste the url that is this url that is the https url i simply copy this and i will paste it over here and press enter okay so if i write git remote so here if i write git remote i get origin now you must be thinking what is this origin we have given a short name as origin to this entire url so when i write git remote we get origin the origin means this http url okay so now if i want to push my code i need to push my code so that it so that the files are added in the repository so what i do is i write get push minus u origin master and it will take some time so here it says enumerating object 7 done and get the files have been pushed now you can go on this repository refresh and here you can see your two files that is the file1.txt so this is how you can add your files to the git repository now let's understand how to delete a particular repository so in this case you can just go here go on your repositories and click on test repo and here you have a settings bar just click on settings go a little down scroll down and there you can see there is a danger zone written over here so the first option in danger zone is changed repository visibility you can change it to public or private then you have transfer ownership you have are keep this repository and then you have delete this repository so once you delete this repository there is no there is no going back okay so you need to be very certain about this that you want to delete this repository or no so i simply click on delete this repository now here it says that this action cannot be undone this will be permanently deleted from the tutorials git and if it's permanently deleted it will not be back so you need to be very certain that do you want to delete this repository or no and here it says please type tutorials git test report to confirm so i will write tutorials and here i have written the entire uh thing that were given over here and you have to click on i understand the consequences and delete this repository i'll click on this so it says that confirm your access you need to enter your password and your your repository has been deleted so if i go on your profile and here it says you don't have any public repositories yet so there is no repositories now so this is how you can create a repository you can push your files to the repository you can create a new file also and you can delete a repository now coming to the cheat sheet which i was saying to you so this is a simple cheat sheet that i found on internet and it is very precise and very easy to understand also here it says all the installations that we need before starting with github also the setup that we have seen that is the git config the user name the user email and how to set it all these uh configurations we have seen also how to write git dot init and the commands that we used today that is the git add and the file name and the get add dot or the git status file so that it shows uh the modified files in the working directory also it is staged for your next commit or not all these different commands have been given over here we will be using these commands for the entire tutorial and these are quite simple and that's the reason why i'm putting the link in the description so that it's easier for you to download this cheat sheet so this is the oil for today and in the next tutorial we're going to learn about the three staged architecture of kit for this you need to have a good hang about the git commands that we learnt today because we are going to use these git commands to understand the architecture of git so this is all for now we will meet in the next tutorial please like share and subscribe this video and please ring the bell icon so that you don't miss out the next video thank you