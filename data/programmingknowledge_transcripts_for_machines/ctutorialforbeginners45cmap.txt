hello guys welcome to the next video tutorial on C++ programming for beginners and in this video we will see what are STD maps and how to use maps in C++ so first of all what uh what is a map in C++ so map or maps are associative containers that stores element formatted by combination of key values and the mapped value so unlike vectors which uh maintains their uh values on the basis of index the maps maintains uh their values on the basis of key so maps are associative containers and if you know or if you have learned about associative array or associative uh sets you know that uh in association of uh sets or arrays there is a key and on the basis of key you can assign the value to a container now let's uh see how we can uh you know declare a map in C++ so to include a map what you need to do is you need to include a library called map so include map okay and now to declare a map you can just declare a map using STD map and then in these angular brackets you can Define your key and value uh data types so first uh argument in this uh angular brackets is the key data type for example we can define a key data type as integer like int or float or STD string it can be key can be anything string character integer or float now for our example we will Define uh key as uh integer and the value as for example string okay so suppose we want to make a map of some student based upon their ID okay so using this map we can do this so ID we will save in the form of integer and that will be the key of our map and the names we will save as strings right and let's um name our map variable as name map okay now to use map or to insert values in the map it's very simple to insert value in a map like this so just take uh variable and then in the square brackets you just provide the key because uh our first element or First Data type here we have defined is the key data type so key is integer in our case so in this square bracket we Define the key for example key is equal to 1 and then we Define the value after equal to so we will assign the value to this key which is one for example Tom and in the same way we can uh add more elements to the map okay so now we have defined a map of some values and uh here 1 2 3 4 5 are called the key of our map and the names are called values right now depending on the key we can access the values for example we want to access the value of uh the map where key is equal to 4 okay so we can just write STD see out and the name of uh our map variable so name map for example and then you can just call this key using the square bracket for example three and then once again STD end line okay and now once I run the code it gives me the value Mark right because key I have Associated to Mark is three now because maps are associative you cannot provide the duplicate key to two values so for example uh someday you decide that we will assign uh key 4 or or key for the name John and the name some other name also okay so in this case the first assignment will be valid so there is there are no duplicate keys or you cannot create duplicate keys inside a map okay so for example I will try to access the value of name map 4 and run the program it will only give me the last assigned value okay and and not the previous values okay so it's not possible to uh you know have two similar keys because you cannot duplicate keys in map right because they are associative now in order to uh iterate over the map what you can do is you can uh uh use uh iterator so there is uh special class iterator and using which you can iterate over the map so using for Loop you just need your map okay so this is called the iterator and we can iterate over these values like this so first of all in the iterator we can print the key using this iterator like this so just copy the iterator and the key is accessed by the function called first okay and the value is accessed by a function called SE second okay so this is key and the value is it do second and here we can uh make it little bit fancy like this okay and now when I run the program it gives me error because this is a pointer so I should use these arrows here instead of uh dot notation and now when I run the program I can print the values with keys and values so key is equal to 1 then uh the name associated with this key is Tom when key is equal to two name associated with is Max key is equal to three name associated with it is Mark like this so it will iterate over whole map and show you the values right now you can also print the size of the map like this so the name of the map dot size okay and this function will give you the size of the map so run run it once again and it says Map size is equal to 5 okay so the size function gives you or returns you the size of the map now there is uh uh an other function called arrays or first let's uh see the function called clear and clear as we have seen in Vector it clears the map so now you will uh you know after clearing the map you will uh just empty your map so I will call this clear here and then we check the size of the map after clearing the map and the result will be zero okay so Map size become zero after clearing your map so it deletes all the key uh value pairs okay now there is an other way to uh insert the values to a map right and that is let me commment this and that is using a function called insert so just uh the name of your map dot insert and it takes a pair so there is something called STD pair and using this STD pair you can create a pair of two data types so our pair is integer and string pair because our map is you see integer and string pair right so I will give the integer and string pair here and then in the brackets you can give a uh the key first and then the name okay it'll print this uh other values in the map or it will add the these other values with key six and seven to the map okay now for example you want to search something inside a map how can you do it there is a function which you can call over your map and that's called uh find function and the iterator it and then your uh value so second because second as we have seen in this for Loop indicates the value okay so it will find the value five inside your map and store it in this iterator and using this iterator you can uh find the second value of uh this so I will close this and run it once again and you can see key found and the value assigned to the key five is Patrick you can see here also right on this iterator using this iterator you can even delete the value after finding the value here okay so for example I want to delete the value where key is equal to 5 so what I can do is I can just call a function on this map called Erase will erase the key value pair where uh value is equal to five because we are finding value here right once again we will uh run our program and now you can see here in the for Loop it has printed all the values except the value five because we have already erased this value right now there are some other interesting uh interesting functions in map for example if you want to check if the map is empty or not so you can just I will just call is empty and on the map you can just call this function called empty map dot empty and it gives you the value true or false and if uh it returns true then map is empty otherwise it's not empty so right now our map is not empty so it returns zero right but for example we clear our map after clearing our map clear and now I I'll run the program now it returns one because our map is empty right so in this way you can use map