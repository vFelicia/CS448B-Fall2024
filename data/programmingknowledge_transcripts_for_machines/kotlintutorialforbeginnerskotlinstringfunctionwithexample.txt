uh in the previous video we have covered about string and string function in this video we are going to learn about more string functions such as the length function we discussed about in the previous video okay so the string functions are the function which will be implemented on string as the name suggest so the first function is the length function i have discussed it in the last video but still i will discuss it in this video also so i'll go ahead and create a function main in which i'll define a string of value a is equals to hello okay i'll not leave space and value b is equals to this is a coder and i'll define another value c and another string with a value and my age is and i'll define another value d and it is an integer which is with the value of 90 okay so i have three strings and a uh integer so uh firstly i am going to discuss the length function okay so uh what about what if i have to get the length of the the value of the string b or the string a okay so i'll just go ahead and write the print statement okay so the value the length of a is and i have discussed about the string template in the previous video so i i am going to use that here okay and the length of a is a dot length okay so the length function is used here as a dot length so whatever i have to see the length of b whatever i have to see the length of c so just i am going to copy this and paste and instead of b i'll do c so uh when i run this program i should find the length of a b and c as the output okay so this is the use of the length function so as in the output we can see the length of a is 5 the length of a is 15 okay so i here did not change the values okay so length of a is 5 the length of b is 15 and the length of c is 13 we can verify from here also but uh yeah i guess you are you have now a clarity about the length function the second function we are going to talk about is the get index function so get index function returns the character at the specific index within the bracket now uh i've already told about you the index so in this hello string i'll just mention h e l l o so uh the h here has an index 0 the e has index one the l has a index two and another hell has a has an index three and the o has an index four okay so what the get index function does it returns the character at a specific at a specific index specified within the bracket so uh i'll just mention a print function and i have to get what is the character at index 4 of b string so the character the character at index 4 of b is what i'll do is i'll just go b uh okay so i'll first use string template and the the function is get in bracket index so i'll use the string template and i'll just mention the string that is b and the function that is get index okay and then the index so i have to find the index at 4 okay so when i run this program what is the expected output so at 4 it has a space okay so it gives a space so i'll just go ahead and change it to 5 and when i run this program we can see that the output is the character at index 4 of b is index 5 of b is i so yeah it is pretty clear from here that the index at index 4 of string b is i so here it is underlined by a yellow line so what i'll do is i'll go here and hit alt plus enter and it suggests that replace get call with indexing operator so what is an indexing operator so i'll just show you that okay so instead of doing this what i can do is i can just uh mention b and that and then in the bracket i'll square bracket i'll mention five okay so when i run this program i will get the same output so instead of using get function or a bigger code i'll just do is what is what b square bracket and the index okay it gives us the same result so i guess the get index function is also pretty clear now what about the subsequence so as the name suggests it provides a sequence which is a part of the mainstream okay so the the function goes like sub sequence start index and n index so between start index and end index it prints all the uh the string okay so it returns the sub string between the start index and the end index but excluding the index in n index it is a main point one of the main point okay so it excludes the end index so uh what if i uh i go and say uh put the print the substring from 1 to 3 of a so i have to mention 1 to 4 okay because it excludes the end index so i'll just go ahead and print for the better understanding so println the sub string is i'll go with the string template and for a i have to mention and the function is sub sequence and the start index is 1 and the end index is 4 okay so what happens when i run this program what will be the output so when i run this program it gives e ll but at the fourth index there is oh so why is all the is why o is not printed because it excludes the excludes the character at the index last index mentioned here okay so keeping that in mind uh just predict the result uh after pausing the video of the substring uh of b 2 to 7 okay so what will be the substring of b dot subsequence 2 comma 7 just pause the video and think about it and write it on a paper or something okay and then now you can play the video and check so it is is space is now we will go ahead and check so uh this so the second is here second uh index is here okay third index is here and fourth fifth sixth seventh so seventh is a space so uh it is not clearly visible here but the space is not printed here okay it stopped at the s okay i'll just go ahead and make that nine so it would be more clear okay so not nine i'll make that 11. so uh we can see that at the 11th index the letter the character o is there but in the output we cannot see oh because the last index is not printed there so i hope the subsequence function is also clear to you okay so we have now till now covered the three functions which are mostly usable now uh we will we will be moving to some less usable function okay so there is a comparative function so the comparative function compares the object with the specified object of order okay so it just compare two strings it returns zero if the object is equal it returns a negative number if it is less than the other okay so uh like what will be the um uh i have to compare the okay what will be what will it be comparing it will be comparing the length of the two strings so uh what i'll do is i'll just print ln and print a dot compared to b okay so i am comparing here a to b so uh like it is the specified other object is b here the specified other object is b and the object our main object is uh a okay so if it is less than the other it gives a negative number and if it is greater than the other it gives a positive number so you can guess the output here and while i run the program so when a is compared to b it provides a negative number that means that a is lesser than yeah smaller than b okay it is pretty clear from here that b is a larger string so i'll just go ahead and compare uh also compare b from c okay so you can guess the output here has b is a larger string so it gives a positive okay and what i'll do is i'll just create for the sake of just come comparing the function uh a variable a value f and just change some characters in it and okay and now i'll do is what i'll do is i'll just compare c compared to f and now i'll run the program and the expected output is 0 because the two strings are of equal length okay but it gives a a positive number why so because it it just not compares the length okay it compares the object specified within the string so the object the object f is greater than the object c okay so if i have the same string here then it will be zero but if i have the purpose of me stating that was just that uh if i have the same string then only it will be zero if i don't have the same string then the output could be positive or negative we cannot define that as per as of now okay so thank you for watching this video in the next video we will be covering more string temp string functions okay