hey guys in this video I'm going to give you a brief introduction about Sona Cube and also I'm going to show you how you can set up Sona Cube and do some code analysis using Sona Cube on your favorite operating system so let's get started and let's see what is Sona Cube so Sona cube is an opsource platform designed for continuous inspection of code quality that means it plays a crucial role in development life cycle by identifying and addressing potential issues early on ensuring the delivery of high quality software now let's see what are some of the features of Sona Cube so when you run a scan on your code which you are developing using Sona Cube it pushes some metrics to the Sona Cube server so sonak tube is going to analyze your code and provide you a very good metrics of your code quality it's going to continuously inspect your code so whenever you push a new code it's going to run the scanner once again and then it's going to report all the vulnerabilities or bug or potential issues in your code and also Sona Cube comes with extensive rule set so our rule is used to analyze your code based on the language uh you are using for your uh software development so for example if you're using python code there are some rules related to python which are used by sonar Cube to analyze your code and then based on those rules it's going to provide the Matrix you can also add your custom rules in addition to the hundreds of rules which are already available in Sona Cube now what are the benefits of using Sona Cube so the most important benefit is it's going to improve the code maintainability of your code also it's going to uh make your code more secure and it's going to enhance your code reliability because it's going to uh detect the code vulnerabilities like security vulnerabilities issues and then potential uh coverage issues all these issues are detected by sonar Cube and reported in its web interface also it have many type of Integrations so it can integrate with GitHub or Azure devops or your favorite cicd tool so that it can run the code analysis as soon as you push your code to your favorite repository right so it will help you for the whole life cycle of your code development now let's see what are the main components of sonar Cube and then we are going to see how we can run the sonar Cube on our operating system so there are two main components of Sona Cube one is called Sona Cube server and other is called son Sona Cube scanner so in this Sona Cube server when you install a sonar Cube server you need to link it with some database it can be a postr database or any other database which it supports and it also comes with some rules now the second important component in Sona cube is the Sona Cube scanner now let's say you have cloned a repository on your local operating system then you also need to install the Sona Cube scanner on your local machine which is going to scan your code and then it's going to send the analysis via the scanner to the server right so sonar Cube scanner is going to scan your code do the code quality analysis uh then it's going to prepare the Matrix and then it's going to push all the Matrix to the Sona Q server and how it's going to analyze the code it's going to analyze the code based on the rules defined in Sona Cube server right once the available metrix is pushed to sonar Cube server it saves that metrix into the linked database so these are few main components of Sona Cube now let's see how we can install sonar Cube we are going to use the docker images of sonar Cube to uh run Sona Cube on our Linux operating system but these steps will be valid for any other operating system which supports Docker for example Windows or Mac operating system let's also go to the main home hom page of Sona Cube and see uh what are the offerings it's uh providing so it has the community version which you can download it for free and it supports uh all these languages and then it has all these capabilities like detecting bugs and basic vulnerabilities it also reviews security hotspots track code smells and then code quality metrics and history cicd integration and other plugins are available so when you uh use Community version you can use it to learn how sonar Cube works if you want to use the sonar Cube developer version then you can uh use this version which comes with more capabilities in addition to the community version and then you can also use the Enterprise or data center Edition also right so we are going to be using the community edition of sonar Cube so as I said we are going to use the docker to install Sona Cube so you can go to the dockerhub website and then search for Sona Cube here and you will find the official Docker image of the Sona Cube here so you can see this is Sona Cube and it's the docker official image right so to uh get sonar Cube using Docker this is the command for that so just run this command on your terminal which is Docker pull sonar Cube so let me open the terminal here and then let me just run this command which is Docker P Sona Cube and then let me provide my uh password here and it's going to pull the latest image for Sona Cube now I have already pulled this image earlier so it says image is up to date but in your case it's going to download this image right so once this Sona Cube image is uh pulled from the docker repository the next command is this one so once you have a sonar Cube image we also need to pull the post gray image because we are going to use the post gray as a database for our Sona Cube server so this is the command for that so it's going to uh pull the post cray uh image and it's going to run the post cray server using all these attributes so we are going to uh run this uh post gray server with the post gray user sonar post gray password sonar and the post gray DB which will be called sonar Cube so I'm going to put all these commands in the description of this video so you can use them directly on your terminal so I'm going to just copy this uh command so let me just uh paste this command here and then press enter so it's going to uh find the proper Library image for post gray you can see it's extracting that and then it's going to run the container so once post gray container is running we can also check uh this using the docker PS command so I'm going to uh just run Docker PS here and you can see post gray uh container is running here right let me clear the terminal and then we are going to run the last command which is to run the actual Sona Cube server with the linked postr SQL container which we have created right so this is the command for that as I said I'm going to uh paste this code or this command in the description of this video so you can directly use that we are going to start the sonar Cube server on this port which is 9,000 so once that uh sonar Cube server starts it's going to be available on the port 9,000 so I'm going to just uh paste this come the terminal and then uh press enter and it's going to create this uh container once again I can run the Docker PS command and you will be able to see that now my uh Sona Cube container is also running and it's running on Port 9,000 right so we have forwarded this port to our Local Host also so now we can go to our browser and then we can open sonar Cube on the port 9,000 so just write Local Host colon 9000 here and you can see the Sona Cube web interface is starting if it doesn't start immediately that means that you need to wait for some time so just uh wait for one or two minutes and it's going to start automatically so now you can see uh the login page for Sona Cube the default login and password for Sona cube is admin and admin right so you can just write admin as the username and admin as password so I'm going to provide admin as password also and I'm going to Press login here which is going to log me into my Sonar Cube server as soon as I log to my Sona Cube server Sona cube is going to uh ask me to change my password immediately so I need to provide the old password which is admin by default so I'm going to provide that and then I'm going to provide the new password let's say I'm going to provide a new password as admin1 123 and then confirm this password admin 1 2 3 and then I'm going to click on update here which is going to update my password and open this kind of interface now as I mentioned earlier you can link your project which is hosted on Azure devops or GitHub or gitlab or bit bucket or bit bucket server so whatever Dev tool you are using you can uh create the setup for that right but for now for Simplicity I'm going to uh set up the local projects so I'm going to click on this option which is create a local project and here first of all I need to name my project I'm going to name my project as sample because I have a repository called sample and I want to uh create the same uh project name in the Sona Cube so you also need to provide a project name in the Sona Cube so it's a good idea to name the same name as your repository name in Sona Cube also the project key is sample you need to provide the unique project key here so for now I'm going to leave it as default which is sample and the main branch uh is Main in my case because I am hosting this project on the GitHub which I'm going to clone locally in my uh local operating system I'm going to click on next here now here I have two options I'm going to choose the first option which is use Global setting and then scroll down and I'm going to click on create project here which is going to create my project now it asks me how do you want to analyze your repository for that also so you can have all these different options I'm going to choose this option which is locally because I also want to show you how sonar scanner works right and this is possible using the local U scanning right so I'm going to click on locally here and then it says token name I'm going to uh leave it as default which is analyze sample you can also choose the expiration date for your token I'm going to choose let's say no expiration here and then click on generate which is going to generate my token which I'm going to use to scan my uh code and then push that code to the Sona Cube server once that's done you just need to uh copy this uh token somewhere and then click on continue and then you need to decide which type of project you have so if you have Maven project you can click on this option if you have gradal project you can click on this option and then for net you can click on this option I want to run the code analysis on my python project so I'm going to click on this option which says other jsts go python PHP so it includes the Python language also now also I need to decide which operating system I'm using I'm using the Linux operating system so I'm going to choose Linux and then here I have the command to run the scanner right but first of all I need to download the scanner you can see download and unzip the scanner for Linux so I'm going to click on this link which is available here which is going to redirect me to uh the download page for the sonar scanner CLI here I need to choose the Linux 64bit so I'm going to uh select uh Linux 64bit here which is going to download this ZIP file for sonar scanner right now I can just uh click on this ZIP file and extract this ZIP file in the downloads folder itself and all I need to do is so let me go to the sonar Cube directory which I have extracted you can see it have these four folder the configuration is saved in the conf folder so by default when you open this configuration file you can see the default uh URL here is HTTP uh Local Host Port 9000 so we are also running our Sona Cube server on Port 9000 if you are running your sonar Cube server on different URL or Port you need to change this configuration here in our case we are good to go because our sonar Cube server is running on the port 9,000 on Local Host let me just close this now the next important directory here is this bin directory where our sonar scanner binary is available right so we are going to use this sonar scanner binary in order to uh run the Sona scanner on our code but till now we don't have our codee right so let me clone my repository so I have a GitHub repository where I have the sample repository and it has a python script which I want to analyze so I'm going to just click on code here and I'm going to clone this uh repository by just uh clicking on this uh copy and then I'm going to go to the terminal let me open the new terminal here and then I'm going to just write get clone and then whatever I have copied which is going to uh clone my repository in my uh home folder itself so I'm going to go to the samples uh directory which is my uh GitHub repository and here you can see I have this python script and here now I have to run the scanner command so go to your um Local Host 99000 where you uh have clicked on the installation link for scanner just below that you will also find the sonar scanner command which you can run in your project directory so this is the command which we are going to run in our code directory right so let me open the sample directory in Visual Studio code for example and and as I mentioned it has two uh files one is read me other is uh test.py file let me open the terminal also and also let me just uh paste this command which I have copied which is for the Sona scanner right so this is the command let me just explain this command a little so here you can see you can set the project key which which is sample in my case because I have created the sample project key in sonar cube right now where do you want to run your uh code analysis using the scanner in the current directory that's why we have provided dot here right so you need to run this command in your project directory the URL is given here which is Local Host 9,000 where our Sona Cube server is running also we need to provide the D sonar. token and this is our token which we have created previously this is the same token right so this is the token this is the URL and then we have created the project which is called sample right which is this one so this is what uh it's uh showing here in this Command right so now because our Sona scanner resides in the downloads folder so you have the choice to set the environment variable for this Sona scanner path in your bash RC I think you guys can do that but for Simplicity I'm going to just copy the full path of this Sona scanner so right now we will uh go to the downloads folder and then go to the bin directory and then I'm going to right click on the Sona scanner and then I'm going to copy the full path here for the bin directory where my Sona scanner resides and then I'm going to add this path in front of Sona scanner so this is the full path of my binary right so once you set the path in your bash RC for the Sona scanner it's going to run without this long path but for now I need to add this path here right so let's copy this whole command and then I'm in my uh repository directory where my python script is there which I want to analyze so just uh open the directory in the terminal you can see sample directory is open and I'm going to paste this scanner command here and then press enter which is going to run the scanner in your uh project directory you can see it's analyzing the code quality and all the other uh rules and then once everything is done you can see execution is successful here right the scanner also create these temporary or hidden files which is for report task. txt and also the sonar lock right so once your code is analyzed sonar scanner is going to to push the Matrix it has collected to the Sona Cube server so let's go to our browser and here you need to just refresh your uh browser and you can see we are still on Local Host 9000 and once you click on overview you will be able to see the overview of your code analysis right so as I said the Sona scanner has pushed all the Matrix to the Sona Cube server and it has saved the Matrix in the post grade database whose container is running and we can see the result here right now my code quality is passed if your code contains any uh vulnerability issues or maintainability issues or reliability issues you're going to see some bugs here or you will be able to see the Cod smells here and then Security review and vulnerabilities here you can see I don't have any code coverage for my uh project so I can see Zero code coverage but if your project is covered with some tests then you will also see the code coverage percentage here for your unit tests right you will also see the duplicate blocks here so on the overview tab you will be able to see all those you can also see the issues tab here where you will see all the issues related to consistency then all these adoptability and responsibility software quality right you also have the security hotspots right now I don't have any then you also have the measures right right so how is the overview of your project how uh is the reliability analysis over time right so for example if you are pushing the changes to your repository right the scanner is going to scan your code once again or you need to scan your code once again if you are running the scanner locally and then it's going to show you the analysis over time right you also have the code analysis here right now I can see the name of my python script and I don't have any bugs here I have nine lines of code and the coverage and everything is uh available here right so over time you will see this metrics is will be grown right also at the top you can see the list of uh all your projects right now I only have one project which I have created which is sample you also will see the list of all the rules right so Sona Cube server comes with predefined rules for many languages for example Java have 632 rules we are using python so it has 268 rules you can see for example consistency rule or other rules are available and as I mentioned you can all also add or remove or disable rules from this list right so these are the rules against which your code will be analyzed and it's available here okay you also have the quality profile and then other things quality gate Administration and then more so this is how you can install and set up Sona Cube for your project on your local machine using Docker I hope you've enjoyed this video and I will see you in the next video