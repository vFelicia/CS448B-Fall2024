hello guys in this video I'm going to show you how to use functions in C++ so first of all why do we really use functions or what is the need of function in C++ so function is a block of code which executes some something for example so ideally a function should perform a specific task which is assigned to it and normally when you write your code it's made of too many numbers of line for example thousands and thousands of line and when you when the other user tried to read your program it becomes really overwhelming to understand the program written by other person and the function is used to reduce the size of the code so that it makes your code or your program understandable so what is the convention generally is whatever value or whatever code is with repeating more than once in your program just wrap it in the function so whatever code or whatever piece of code is happening or you need again and again wrap it in the function now let's see how we can declare a function so I already told you in the first of two videos that this main is also a function right but this is a main function and we can define userdefined function so what we need to do is you can either go just above this main function and declare your function here so what you can do is you can give a function definition so when you define a function you need to give first of all the return type so for example right now I'm not returning anything so I give void the void means are not returning anything okay so every function whatever you make it returns anything like this mean its returning zero which is an int that's why I have written in India so on the right now I'm making a function which which is returning nothing and then comes the name of the function so for example I say my first function and then comes these two parentheses and then whatever code you want to write that comes in these two curly braces okay so this is the basic declaration of function a return type which is void right now so that we are not returning anything the name of the function curly braces and these not this curly braces but these are the parentheses and these are the curly braces okay and whatever you write in side this function it will be executed when you use this function inside your main function so for example I want to print something so I will write we are in function okay and I will end the line okay so how you can call this function inside your main what you need to do is just copy your function like this you don't need to copy the return type just copy the function and paste it wherever you need to use your function inside main so I will paste it here and I will close it by the semicolon okay so this is how you can call function inside your main let me build the program and let me run it and you can see it's showing we are in a function and this line is in written in the function right and we are calling this function here so main program just goes here and it sees that the function here so it goes to the function and it sees this is the code which I need to execute in the function it prints this and then goes to this life point so basically I oh I told you that whenever you need to execute the similar kind of code again and again you can use function right so for example I can use this function multiple times for example four times then my message will be printed four times and I don't need to write the code again and again right this is one line you can add multiple line in this function and you just need to call your function and these line will be executed whenever you call a function I will build my program and run it and you can see it's executed four times so this is the good thing about function whatever is repeating just wrap it in a function and use it now this is one kind of declaration of function or uses your function but there is other kind of declaration function definition like you use on you give up the function definition below this main function okay and then when I compile or build my program it will give me the error why it we gave me the error because your program executes from top to bottom so your program starts from here it sees that this line so it has to add all program things that it eats read this and it used to add this line and then it goes to Maine and it sees this but when it executes top to bottom it doesn't know that there is a function declared below it so you need to either declare a function on top of your Maine or otherwise what you need to do is you need to prototype your function okay if you want to use this function below main what you can do is you can just copy all your function from void to these parentheses just copy this and just paste it above and give semicolon and this type of declaration is called the prototyping of a function so now when the program executes and compilation is done it knows that right now this is included this should be included this namespace should be included and then it sees okay this function is put the time here so I need to include the Declaration of the function which is here then it comes when it comes here it knows that there is a function which I know that it's I need to execute it so that's why this will be executed so let's compile it and this time I don't have any error okay so in technical terms this is called the top coat or typing of the function you just declare or the function here and the definition of the function you can give below this okay and I run the program at once perfectly so in this way you can use functions and this is the big basic function there are other type of function which takes parameter which returns parameter how you can pass parameters in function so that in the main program whatever where you have you can pass it to the function so let's see how we can use it for example I need a function to add two values but whatever the user gives so for I will declare a function here as I have shown you in the last video I will give the return time which is void and then I will give the name of the function so I want the addition of the numbers so I will name my function as some and then these two parentheses and then give these curly braces and now the where you pass parameters in the function is in these two parents in between this parenthesis so for passing the parameter you need to declare only you need to give the data type of the variable you want to pass so you for example I need to pass or I want to pass integer or the numbers so I will give the data type and then I will give the name of the function so I will say your name of the variable this is first number this is the post variable and the second variable once again I will declare the data type and then second number okay so in this way you can pass two parameters inside this sum function the first first variable is first number and second variable is second number and the data type of both the variables are hint in our case this can be anything character or float or double or anything else okay now since this is a function to make the sum of the to numbers what you need to do is you need to print the sum right so you can give C out and then print the message that the sum of the given number numbers is and then what comes is the two numbers itself so you can just copy this variable here because we are adding these two numbers so we can write in the parenthesis first number plus just copy the second number and close the parentheses and then this insertion operator and then end line okay so what this function we do do you print the sum of the given numbers are whatever you give in the mean and then it will add these two number whatever parameter you pass in the function first number and second number and it will add this two parameter and printed now in order to use this function inside your main function just need to call the name of the function okay and then constantly in the parenthesis no need to write the return type and then the semicolon and inside these parentheses I need to give two numbers because this function can take two parameters one and two which we have already declared this can take two parameter for example for 76 and the second parameter is 587 okay and just watch here I separated these two parameters by a comma okay so what this function will do is when it comes to Maine it sees that okay I have this function and I have these two numbers so it will pass this note two numbers here and then these two number will be passed here and then the program will make the sum of these and print this message so let's compile our program and run it and you can see here the sum of the given numbers is 1 0 6 3 which is the sum of these two numbers now in order to make this program a little bit more interesting what you can do is you can declare two variables int a and B both variable type is integer and you can write C out please enter two numbers and then and line and then you can input these two numbers so cin insertion operator a purpose number and cin insertion operator B or second number okay and what you can do is you can pass a as a first parameter and B as a second parameter here is B okay so what this will do is now when you run the program it will ask for the first number and second number and whatever number you pass or whatever number user will give in the program you just pass these two number here and then it will let spill the program and run it now it's saying please enter two numbers so I will end us to number first number is seven four seven four and the second number is eight three examples and when I press ENTER to see there that this the some of the given number is 1 5 8 2 which is the state 2 2 which is a sum of these two numbers so this is how you can really utilize this function user will enter the values and it will be passed to the to the function and it will be passed here and it will go here both two numbers and it will be added and this message will be shown and in the last video also I have shown you that you can use this function at multiple locations so for example you need to add some more numbers you can just copy this code once again and paste it below and you can change this variable X and the y for example and in here also you can change it x and y and here also x and y okay so it will be executed in the same manner as above so if your function will be addictive uted two times right let's build our program and then let's see what happens now to run the program and the two numbers some number I will give for the first time and once again it is asked for giving me two numbers once again I will give two numbers it will execute the same functions function once again so whenever you need to add two numbers you can use this function again and again and you can pass any two variables inside this function which has to be int four which has to be of data type int so that's the beauty of function whatever you need whatever code you need to execute again and again you make it a function and use it again and again that will save your time and they that will save your space in the code how to declare and use a function which returns values so let's get started you by now you already know how to declare a function so this time we are going to make the sum of two numbers so we will make a function which adds two number and returns the sum in the main program so first of all we need to decide what we want to return in the last video if you noticed we were returning void but this time we want to return some value so this is not void of it this is not null value but this will be some values for example I want to return int this time so this is called the return value whatever data type you want to return just write in the Declaration here and then write the name of the function for example some and once again if you want to pass two parameter just give the Declaration of those two parameters here so int first number and int second number okay and because we are returning this time int here we need to return some value in order to execute the function okay so this because we are returning something instead of void we need to write this return here or whatever you want to return so this time what I'm going to do is I will take the sum of these two numbers and I will make some and return the value here so let's see what Howard can do it I will declare a third variable called make or I will say this is my result which is initialized as 0 okay so that there will be no confusion there will be no garbage garbage value inside result then what I will do is I will write result equal to the first number plus the second number okay so what this is doing I have declared integer as a result and I'm storing the addition of first parameter and second parameter inside this result and now what I am going to do is because this is this parameter hold my result and this function is supposed to get int in return I will just return this result like this okay so this is basic definition to return the function if you want to return int then you need to declare or function or declare a variable return only the variable which is of data type in if you return here some decimal value it will give you error because this function is expecting integer in return right now let me let now let's write or let's call this function inside your main function so what I'm going to do is for example I want to declare one more variable for example multiply from mul the line and then what I'm going to do is I am going to call this function so I will call this function here and I will pass two parameters first number and second number so for example I pass first in the year 253 and second integer 256 and because we are returning some value here what I can do is I can say let's initialize this by 2 so my x value is initialized by 2 and I will say main I will declare one more variable int main result okay and this main result will contain the result so what I am going to do is I will say main result is equal to this multiplied variable into so for multiplication we use s takes a number and then I am going to take this function and paste it here so what this function will do is let me show you first of all the simple way this will be a little bit complex to understand for the first time so let me use C out and I will say the result is and then I will call this some function and I pass these two values here and then I will end line okay so what this will do is this will call this function add these two values and return the result in here so return the result means sum or the result will be printed here so for example I compile this program and run it it will show me the sum of these two values right so what this function is doing it's taking these two values making the sum of these two values and the result it's returning as an int and it holds the result as an integer so whenever you call this function it will return you the sum right now for example I want to multiply whatever it this function is returning to my variable multiplying okay so now I can use this multiply result is equal to multiply into because this function is returning integer I can use it as a variable okay so this you can think of it as an integer because it's returning in either which is the sum of these two values right so I can multiply it by another integer and I can store the product in the third variable called mean result and I will just copy this and instead of this I can paste it here so the main result is now the product of whatever the sum of this and the multiplier you need now I will just build the program and run it and now you can see first of all it makes the sum of these two numbers and then it multiplies this number by two and then it stores the multiplication in this variable and we are calling this variable here so it will show the result in this form so remember this thing that whenever you return something you need to give the returning value same of same datatype whatever you have declared here if you have declared double here you need to return double value okay and then whatever the function is returning you can add this function or multiply this function to the another variable because it's returning something in our case it's returning integer okay so that's how you can return value using functions in the last video I have shown you how to write the function that returns value so I have written a function called sum and it takes two parameter and then it makes the sum of these two numbers and return the value so for example I want to print the sum of some numbers so I will just say C out and then sum and in the bracket I will pass just those two numbers for example fifty four and six by four and when I run the program it will give me the sum of these two numbers because we are returning the sum as an integer here and thinks this the sum is an integer and prints this number now in this video I am going to talk to you about one more really important property called default arguments or default parameters so what exactly I mean by default arguments of default parameter is you can initialize your function parameter with some value so for example I have written a function or making the sum of these two values first number and second value second number I can initialize these parameter by some values for example I will initialize this first number is equal to 20 and the second number is equal to 10 so this will be 10 okay so this is called default argument declaration okay so what this means is we have initialized our parameter with a default value so for example now you if you can even call this function like this without passing any parameter because what happens is when it sees this function here it goes to this function and it sees that I already have the parameters or the values of these 2 parameters so let's see what happens when I run the program I will compile this and run it and you can see it gives me the sum of these two default value even though I haven't given any parameter to this sum right so this is how you can initialize your function with the fault values now let's see some more properties for example you want to overwrite these values for how you can override these values is you can pass some new values here for example 134 so and when I build this program it will still run and I want to show you whatever will be the result the result is 144 so what it is doing is it takes this parameter as your first parameter right so whenever you pass the parameter how it knows that which parameter is this is this a first parameter or is this a second parameter it in C++ when you pass the parameter it just goes to first parameter and then second parameter and then third parameter so if you write here only one value it will be assigned to your first parameter when you write here the second value for example 234 it will be assigned to the second parameter and now the new values of these two parameter is for first number its 134 it is being overwritten by this 20 is being overwritten by 134 and a second number is now 234 which is to 34 is overwritten by them and now when you build your program once again and run it it will show you the sum of these two numbers which you have passed right 134 plus 2 34 is 368 okay so this is how you can initialize or your parameter or as default default parameter initialization right now if you are using function prototyping so I have already explained you in the previous video how to prototype your function if you are using this function below your main then you need to throw the type your function here so if you are using function prototyping you just need to copy this and paste it here and just gave a semicolon and when you do your function declaration you don't need to initialize this values in here in the declaration you just need to initialize your default argument values in the prototype not in the declaration so if you are declaring function below your mean and you are prototyping it just initialize these default values in the prototyping not in the declaration it will still work fine so let's run the program compiling it and running it and it will show the same value right so always remember that when you are Toto typing it just initialize it at the time of prototyping and not at the time of declaration so I hope you have understood the concept of default parameter or argument now in this video I'm going to show you how variable scope works in C++ and how unary scope resolution operator works in C++ so first of all I will demonstrate how variable scope works so for example you have a function void print me it's a random function I am writing and what it does is it just print something so I'll say print something okay and yes so now for example you can declare a variable which is local to a function and you can declare a variable which is global to the function so for example I declare some variable in my variable for example is equal to 30 okay and I want to use this variable here also so I want to print see how my variable in here will it work let's see if it works or not so it's showing the error and whatever it's showing is that let's see what is the error here error is my variable was not declared in this scope so there is a problem of scope in here so what is the problem here is whenever you declare a variable inside a function it's called a local declaration or local scope of that variable and whenever you declare a function inside or whenever you declare a variable inside a function it can be dysfunction of this function it will be usable inside that function only okay so you cannot use my variable outside this function so this is called the local scope or local declaration of a variable now for example if you want to use the same variable and this function in this function what you can do is you can declare your variable as global so I will just remove this here and I will declare it as global int my variable is equal to 20 is equal to 20 so now what will happen is because we have declared a variable outside this function and our main function this is called a global variable and it it is global to this and this so this function of this variable can be used here also and here also right and when I compile my program this time it will be compiled fine okay so you can declare the variable either as a global variable if you want to use it in your main function and the other functions then declare your variable has global variable and if you want to use your variable in the function itself or locally then you just declare Oh your function inside inside your function right so I hope you understood this now let's talk about unary scope resolution operator so for example you have declared a global value like this and you also have declared in my variable here also which you have initialized with then now how your program will know with this this which you are printing my variable it is local variable or a global variable let's let me just remove this function in order to clear point more so this is my global variable and I have also declared the same name in as a local variable also and when I want to print this variable let's see what happens I will compile my program and run it and it shows me the value 10 that means the variable value is 10 and it's using this value as a local value here right so whenever you declare variable with the same name which will be preferred the local value will be preferred right so most recent value you have declared will be preferred in the function so this is the most recent value or the most you know value all the local value simply it will be preferred on global value so this will print 10 here now in order to use the global value for example you want to use this value you want to print 20 and not 10 how you can print it so in order to print this global value you need to use this unary scope resolution operator and what is this unity scope resolution operator we just need to give two columns sorry let's pose a mistake you just need to give two colons before your variable so these two call colons are called unary scope resolution operator and this two double colons tells your C++ code that this variable is a Colo B global variable and not unloop a variable so in this way you distinguish between global and local variable if it doesn't have these two colons it will treat this my variable as this local variable and when you have this 2 then this my variable will be considered as a global variable and now let's try to build our program and run it and now you can see here that it has printed 20 so this variable is considered because we have declared is as a global variable using unity scope resolution operator so hope you have understood the concept of variable scores and unity scope an operator in C++ in this video I'm going to show you what is function overloading and how we can use function overloading and what is the logic of using function overloading so I will take an example which I have already used in our earlier programs so I will make a function to add two numbers so I'm not going to return anything and I will make a function and this will add two numbers so I will give in first number and in second number okay and I want to print the sum of these two numbers so I will say C out sum of integers is equal to and then I will add these two numbers first number plus this second number okay and then I will just give our end line and that's it so what I want is I want to add two numbers that's easy what I will do is I will just call this function sum and then I will I can add two numbers like this 235 and 675 for example and it will add these two numbers and show the result here right so when I compile this program and run this program it will work fine as we have expected okay like this but what happens when you want to add two decimal numbers so what are decimal numbers are what are full of note numbers decimal numbers are two sixty five point seven five six and two sixty five point something like this so what happens if you want to add decimal points and you want to add integers also and different kind of numbers and when you compile this program it will be compiled fine but when you run the program it will only show you the integer values and not the decimal value and this result is wrong because we wanted to add to float values and should show the result as of lower value so now the concept of function overloading comes so according to function overloading you can declare a same function with the same name two times or more than two times with different arguments or different return type so for example this function is adding two integer I can just copy this function and paste it just below it to add two floats so I just change the declaration here note and float okay and now when I run the program I will compile it showing the error because now the program doesn't know this function you are using is it initialized by the fin teacher or it is initialized by the float value what you can do is you can declare two float variables so I'll declare load a is equal to and note B is equal to and I will just pass these two values here is equal to 265 0.75 and is equal to 675 point seven six and I will pass a and B as an argument so now we have implicitly specified that the this a and B is a float value so then your program knows that okay I need I have been a there are two parameter which are four node and tried my beta passed as a parameter in me so I will go to these function and see which parameter can take float and you can see these parameter can take float so then this will this program or this function will be executed right so I will say here load the sum of float is this plus this now for example once again I will declare two int X is equal to some integer and Y is equal to some other integer and once again I will call sum X comma Y so these two functions this time the function which takes the integer will be executed and when you use integer as a parameter integers as a parameter and when you use float as a parameter this second function will be used okay now I will build my program and I will run it and now you can see both result first is the firm of float that means we are in this function and it will show the result and then the sum of integers that means we are in this function sum of integers is equal to whatever the sum of these two integers here right so this says how you can use function overloading you can declare a function with the same name more than two times or more than months and you can pass different kind of parameter inside this function or you can return different kind of parameter from this function and whenever you pass note inside this it will work as this function and whenever you pass integers it will know that you have passed integers so it will use this function so in this way you can know declare multiple function with the same name to use them differently in this video I'm going to show you how you can use data structure or simply structures in C++ so first of all why we need to use structure the in C++ so in the earlier videos I have shown you you can define a variable in C++ like this end and the name of the variable and this semicolon for care and the name of the variable and the semicolon so this int and care are the predefined data type which is provided by a C++ to us so we haven't defined these int or this care now suppose you want to define your own data type you can use structure to define your own data types so let me give you an example now for example you want to define a structure for a book a book can contain name book name book author or book ID and you want to use these name author and ID as a data type or book as a data type then how you can define a structure for the book so the basic syntax of the structure is you just write struct and the name of the structure you want to define so in our case we are defining book or books will be appropriate and then just give the semicolon and this column to complete the structure now this is the basic definition of structure and now inside structure you did you can define the traits of the book for example book has some name book can be written by some author and book have some ID so you can define it like this care name of array 50 but it can contain 50 character for example care of author which also can contain 50 character and for example int you define the book ID like this so now you have defined a new data type called book and now you can use this data type in order to call these members of your structure so how you can call this structure from in your main you just need to once again use the keyword struct and the name of your structure will just book and then you need to give the name of the variable you want to give to your book data type for example I will define book 1 has a variable name and now for example I want to assign the value to my Pope one variable which is a kind book of the data type of book one variable is books right so I want to assign some values to my book now I can assign value to my book like this I'll write the name of my variable book 1 and when I use dot which is called dot separator then you can see the option I can call any of the three members using this dot separator for example first of all I we call this name and then I can give equal to and give the name of the author oh not the name of name of the author but the name of the book so the name of the book for example we can give C++ C++ tutorials okay but one thing one more thing I want to show you that this type of assignment to the character array is not very efficient in order to copy a string inside a character array efficiently there is other way of copying this array inside your character array so what you can do is you can use the keyword string copy and as a first argument of this string copy you can give the name of the variable which is book 1 dot name in which you want to copy the string and as a second variable you can give the name give the string which you want to copy in this character array variable so this is the more efficient way of copying the string into a character array right so avoid using this type of assignment whenever you want to assign a string inside a character array just use the code like this this is more efficient okay this is a good practice in C++ to use string copy instead of directly assigned by equality now and one more thing in order to use this keyword string copy you need to use this library so just write include C string library just include this library in order to use this keyword string copy now we'll just copy this once again and paste it here and this time I want to give the name of the author for example I will give the name of the author s programming knowledge okay and then I want to assign the ID of the author so I will write poke one dot ID equal to one for example right now for example I want to access the data which is contained by a book variable right what I can do is I will write C out book one name and then you can just access it by this book 1 dot name ok copy it and paste it here and just give the regular and line right I'm going to just copy this two more times and I will say book one author and here also author and book 1 ID and here also I do now when I compile the program hopefully it will compile successfully yes it compiles with zero error and zero warning now when I run the program this will show whatever I assigned to my book dot abide you can see you can access this content in this book variable by book dot book 1 dot name book 1 dot author and book 1 dot I so in this way you structures allow you to define your own data type in our case we have defined the data type book and this data type book has the trade name author and ID right and then using this data type we have defined a variable like we'd be define it like this so we have the data type the data type in our case book and the name in our case is book one right and then we can assign values to our variables like this and like this and when we want to access the values inside the variable you can just access it like this book one dot whatever value you want to access so you want to access book one's name then you can write book one name book one author and book one ID okay so in this way you can access the structures content and you can define more book books like book 2 book 3 and you can assign values and you can us access the content inside this books so in this way you can define your own data type using struct and by the way you can also use functions inside the structure this is a little bit high level programming so for basic it's okay to use just the default data types now in this video I'm going to show you how can use structure as an argument to the function so in normal program we are able to pass some argument like in or characters or double or float values and I have already told you in the last video that structure is a userdefined data bike like int like care these Carrick are end and care and int are the C++ data type and this book for example which you have defined in the last video is userdefined data by which we have created now in order to use this structure book inside a function as an argument you need to pass it like a structure so let's see how we can use the structure as an argument inside a function now in order if you don't know what this code is just see the last video I'm using the food from the last video in this video also okay and in this within the last video we had defined the structure and I have shown you how you can use it now for example we want to define a function to print the content of the book okay so I will define a function called avoid print book and I will just give this and I will give this not this but this parenthesis here now in order to pass yours poke structure in the function as an argument what you need to do is once again you need to go here in the parenthesis and you need to call the this keyword called struct and then you need to call the datatype or the structure name which is booked in our case right and then just give any name to your book structure so I will name it as book itself and then what this book is doing is it this book I'm used to print the name of name contained by this book variable so I will just copy it and paste it here as you remember how we can there we can call the content of the book by its members so book this is the name variable name dot what is the member name of this book structure book name author and ID okay so I will just use this book in order to print the book name both author and book ID now this is just simply you need to pass in order to call this book variable inside this / this guy inside this function as a parameter or argument right now in order to call this print function what you need to do is just copy this function name paste it here and as a normal variable of how you pass your normal variable a variable inside this function like this right so think of it if it's so integer variable ended this will be an integer variable simply you will pass any number here okay or the variable which contains the number in a similar way we will pass this variable of book because we have defined this book datatype here for this book right so this is this book we can pass it inside the function and now when we compile the program and run the program it will work fine right it's printing whatever we have assigned here so we have a signed book name C++ folk author programming knowledge book ID 1 and then we are calling this function to print the value book one name but one name is book one book dot name right we have passed this and book dot name a C++ tutorial which is which comes from here right so in this way you can pass structure variable as a parameter to a function I hope you and understood the concept behind it and I hope you have enjoyed the video please rate comment and subscribe and bye for now