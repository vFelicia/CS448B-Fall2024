hey guys welcome to programming knowledge in the previous video we saw how to create an independent function right so this ad function right here this is an independent function what it means is it is not going to take any inputs and it is not going to return you anything it just performs the task which has to do and call it that's it so in this video we'll learn how to create dependent functions most of the time we'll be using dependent functions we will be using these kinds of functions also but these are very rare we will mostly use dependent functions we just pass it some parameters we ask the function to do something and then get back the value which we intended to so how to make this particular function dependent that is I need to pass in some parameters over here let's say 2 comma 3 and then it should only add these two numbers it should not ask the user to enter two numbers and then only work on those two numbers I want to work on these two numbers which I passed in as parameters so how do we get these two numbers inside this function so the way we do that is we define the parameters the baby different parameters is we first put the data type of the parameter and then the name right so in this case the data type would be int and then the name of the parameter let's just say num 1 right and then we have another integer so if you do like this like you declare variables sometimes you do this right so int a comma B well this is going to work only if you are declaring variables here you are not declaring variables here you are specifying the parameters right so while specifying the parameters it is compulsory that every parameter be mentioned along with its data type so you need to mention the data type of the second parameter also even though both the parameters belong to the same data type you cannot omit the data type of the second because it's just a continuation of the variable declaration now what we are going to do this we got the two numbers inside this and we don't need any of this right I'm just going to take out these things and then here instead of a plus B you those two numbers are now so you take number one over here and then number two over here and then it is just going to print out the Sun so let us execute this and see so 2 plus 3 is 5 so we should be getting the sum is 5 I saw output so here you can see the Sun is 5 right so another thing you can do is if you want to save this particular value that is if I want to add these two numbers and then keep the result there is no way to keep the result right well C contains the result of num1 plus num2 but see is not accessible outside this function right add is one function and then main is another function well if you want to access this particular variable you need to make it global that is you want to put it outside all the functions and then access it if you remove this then now C is accessible over here you could just say C out C over here and then if you execute it here you can see it has printed the value of C but what happens is we don't prefer this kind of global variables the reason is third when whenever the program is getting executed everything is inside the RAM that is the random access memory so once variables are out of scope they are automatically deleted and then again created whenever their time comes you need to free up the memory so that other tasks can go on right you cannot just keep this particular variable in the memory all the time so if it is compulsory that you need to keep it then you can but if there are other ways to do that without occupying that particular memory you need not do this because it takes up memory it so the way we do that is we return this particular value back to the calling function so what is return how do you return something to the calling function well the way you do that is you just need to put the return statement over here so you just say it returns C now instead of creating a global variable like I did before you don't have to actually create something and put it in the memory once your executed it you can just return that particular value of here so that is the main objective of this odd function rate you need to take into numbers add it and you're going to get one integer you need to just return it so if I say something like a equal to or let's say some but to add two comma three what they expect is these two numbers are added and the sum is coming to this particular variable that is sum right so here if I return it I will be getting a problem so if I now execute it you will see that I have got a problem it says okay see it's not that's because I've written over here now let's again run it so here you can see that it says return statement with a value in a function containing void right returning void so as I told you before if you are not retaining anything then only you need to use the void keyword or else you have to specify the data type what you're going to return so since I am retaining something I need to specify the data type and in my case it's going to be in it because if you had two integers is going to be integer right so I am just going to return that particular integer and then here I need to capture that value so let's say in some equal to 2 comma 3 and then now I can do this thing inside the main function also so here I will just paste it and Sumner's in my case Sun right now if I executed will be getting the output as the sum misfire so another thing is what if we want to make one of the variable optional so let's say I have another field also let's say int number 3 this is another parameter so here if I just omit that parameter I will be getting an error so here you can see there are too few arguments to this function that is because I have specified three arguments and then here I am giving only two arguments so what you need to do is if you are having an optional variable you can just put a default value over there so for addition if the default value is 0 you add those three numbers there's no there's not going to be any difference right so if we just put 0 over here and then I don't pass anything so it will just blows Express so let me just add the number over here so so number three also so I'm just going to store C equal to number one plus nine coolest monthly and then I'm going to written C so now if I execute it you'll be getting an error and you will be getting this imperfectly and if I want to use that variable I don't have to do anything I just pass the number and I will be getting the output so nine eight is seventeen so here you can this sum is seventeen so that's how you use default parameters and regarding the prototype so what is a prototype it is just mentioning the compiler that I do have a function like that in case you did not write the functions definition before calling it so whatever I have already called this function over here so if I write the definition after calling it I need to specify it early it says that this particular function does not exist so to that the for the prototype I said only you can try to copypaste this thing so ctrlc and ctrlv and then put a semicolon this is going to work but what you can do is in case of parameterize function you don't have to tighten variable names also so you can just skip these things well it's going to work with the variable names also but you don't have to put them and you should not pull equal values over here so that is there in the function definition in the prototype you just need to define the structure of the function and you don't have to put the default values and all you just need to put what the function is and what it's going to take the now if I execute it I won't be getting that any error and I will be getting the output so that's how you use dependent functions in c++ in the next video we will talk about recursion and different types of passing arguments so here I just passed some numbers right so these are direct numbers so what if I want to pass some variables also so let's say equal to well in this particular case you can just pass it over here it is going to work well it's int a equal to 2 it is going to work but actually there is a meaning for passing like this there are two methods of passing variables that is passing by I knew and passing by reference we will be talking about all those things in the next video till then happy coding