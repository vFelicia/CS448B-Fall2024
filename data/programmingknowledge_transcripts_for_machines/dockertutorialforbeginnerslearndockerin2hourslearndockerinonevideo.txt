hello guys and welcome back to the channel this is ayush and from today we are going to start out the docker tutorial Series so this is the our first video in which we basically talk about the introduction to Docker okay so without resting tablet start the video actually so for this tutorial uh we are just going to learn about some Theory concept because if you will learn theory then and only then you can Implement that practically Okay so there is also important to learn about the docker and all this okay so you should learn the first concept what Docker is so here you can see I mentioned some points for you guys like the basic definition which everyone knows and maybe everyone is aware of it like Docker is an app platform for developing shipping and running application what does this line or what does this definition actually mean so it's a very simple uh you will just think Docker as just uh one kind of platform or it is a platform which if which we use or which software developers use to develop the application to ship that application to some other place and then there run that application so it simply means the you will develop one project in the one involvement and then you will just uh send that project or that environment to the other person or to the other computer and then there that project will run okay so if you find this definition little bit difficult or not understandable so you can also see the second Point like Docker is a platform which packages an application all its dependencies together in the form of container so it this line is just similar to the adverb it simply means the whatever we will create an application so in which what will happen all the dependencies and all the whatever the required software whatever the required libraries are there they all will be packed in one single container and that can container will be shipped or will be sent to the other person okay we will see some of the things like how everything goes on and how the actually the docker works so we are we will going to learn with that example okay and next point if you will see like developers can create a container image that includes all necessary components of the applications as a core runtime Library so just just it's same as the above line okay so you can read and here also the this one is important the point like this image can then be distributed to other developers test or deployed on different server or Cloud platform okay so the basic uh Theory or basic concept about dog I just like there is one line in the software industry like this code is working on my machine but it's not working on your machine okay so it's basically uh just like to solve this problem Docker came okay so let's start with example so here I have just you can see the heading like what problem Docker solves so to understand this one I will just create one example for you guys okay so that you can understand it easily let me just do it okay fine perfect so here you will support this one is one computer okay I just write here uh computer one okay and suppose you are building uh or you are creating some python based project okay so you are creating project in with name one project one and the tool which you are using are the software which you're using is just python okay suppose here the version of python is 2.7 okay and the scenario is like that uh this project is created by your friend suppose this project is created by your friend and your friend sends you this project okay so now in your PC so this one is computer two okay so in computer 2 what you do you again just simply copy this project so the name will be same project 1 and suppose here you are using another version of python that is python 3.7 just suppose it so in this situation what will happen the first like the project which is created is based on the 2.7 so whatever will be the feature of 2.7 that will not be there in 3.7 some some features have changed okay so in this case your project will not work so it basically in this case we will use the the concept or the platform Docker okay I hope you got it why this project will not go this project will not work because they have the this project is dependent on 2.7 version but now you are going to run this project on 3.7 version so it says totally different okay so that's why this project will not work on this machine that is computer too so to solve this problem Docker came into role so what Docker can do so the docker will not Docker will just simply just create one container in uh in that computer one so in container what we can do we can just install Python 2.7 okay and we can create the project one okay and what we will do we will we can just send this project okay we can just send this project to this one to computer 2. you can send it using the uh container or image this thing we will cover in our further videos about the docker like important concept okay so this one is container which is shared with the computer too so in this what is happening you can say this project is created on 2.7 in this container and here also it will run in this on the same version of python it is python two point 7 okay so in this way the docker solves the problem of the statement like this one like it's a very famous statement in the software industry like my code runs on my machine but it's not running in your machine okay so this is the uh like most um like important or famous statement in the software industry and this problem is being solved by the docker nowadays okay so this is also the one uh very important Concept in the docker CDs okay so let's start with the video without wasting time okay so for the docker architecture in this we have different layers okay but if you will learn about the docker architecture so we will also discuss about about the virtualization like if you are aware of virtualization then it is very easy for you to understand this otherwise also if you don't know about virtualization concept then and also it's fine okay so you can get it easily okay so let's start with the layers okay or the architecture so the very first layer or the very bottom of player we get is the Hardware layer okay so this one is the first is the hardware okay and the next we get is the host OS okay so I will add Hardware we get the host operating system so this is the just basic okay everyone knows about it so in Hardware what do we usually we get the Ram we get the hard drives or SSD and we get the CPU and all those things motherboards a keyboard all those things okay we're getting Hardware okay and above Hardware uh we mostly install the operating system usually we install the windows OS okay some people install the Linux or Mac OS okay so some people install these osr as well okay so now we will talk about first we will talk about only these two or or normal operating system which we have in our PC So currently suppose if you I want to install python okay so I can easily install python in my PC suppose I install python 3.8 so yeah so I can easily install in my this host OS okay it's fine to install suppose if I again I want to install some other thing suppose I want to install Java yeah I can install Java suppose it's version 8 okay and suppose if I want to install MySQL I can install it easy no it's node.js all those things we can install it easy but the problem is there suppose if my if I require uh like the version 2.8 okay python 2.8 if I require okay python 2.8 is required for some project okay but in my PC there is three pointed so what I will need to do I will need to uninstall this version and again install this this version it is not possible to run those versions in a single OS okay so this is not a case we cannot do it like this so that's why a Docker came up okay and um with the help of Doc Docker we what we can do we can run different versions of a software okay we can run different version of software so again each container so how the like thing works now so I ever the host operating system we have a Docker engine okay so Docker engine is basically used to managing the containers which is created okay so here we have the Docker engine okay and above this Docker engine we have the different containers suppose this one is container one this one is container one this one is container two which is supposed to containers for now so this one is container one and this one is container two in this we have Python 2.7 in this we have python uh just to wait a minute we have python 3.8 okay and this one is computer one okay so in this way the basic architecture of the Docker works so Docker engine is basically responsible for sorry it is responsible for managing the I just write it here for many managing the containers okay so all those things is managed by the Docker engine okay I hope you got it how this thing works okay the docker engine host OS and control one container 2. so this is the basic architecture of the docker okay now if you talk about the virtualization so in virtualization what happens on in the host OS there is the hypervisor and in the hypervisor what happens we use different OS okay like in my PC currently I have virtualbox okay I use virtualbox so if you will see here in my virtualbox is one software which I use to run different OS in a single OS so here you can see I have two OS for now we I have Kali Linux and the Ubuntu so these are the two OS which is currently present in my Windows machine okay so the how is the architecture if you will see suppose if I just demonstrate you so suppose the hardware is my this one normal hardware and I have the windows OS so above the windows OS what I have I have one hypervisor okay not in my machine currently I'm using virtualbox okay and then what I have I have two OS so here if it's see here I have one is Ubuntu and other is that is Kali Linux okay so the thing is and if you now you will uh just to ask what is the difference between both of them the docker architecture and the normal virtualization architecture so the difference is basically it just like in virtualization what happens here you can see we are installing a new OS okay a new OS so it will what it will it will create like it will use more memory so because of that our board time will also reduce okay your PC will become slow so that's why instead of using virtual machines or the hypervisor or virtualization we can use the docker or container so we can create different container different number of contents on a single machine okay so this is the just the basic difference suppose in virtualization you have to run python two different version of python so you install python in this one and Python 2.7 in this and python 3.7 in in this OS so for those purpose you will need to you are you are installing the two OS so that is not a good thing okay and also uh it will create more load on your host OS so that's why Docker is mostly preferred instead of virtualization so I hope you got it the basic architecture of Docker and the virtual virtual machine not virtual machine virtualization okay so here also I have some basic um you can see the image I have the container architecture and the virtual machine architecture okay so here you can see the infrastructure that is the same as the uh what I said this one Hardware okay host devices there dock engine and there and here I have a fbfc FD suits four apps are being run on a single machine and anyway you can see the again the hypervisor is there and the guest OS is there and in case 2s we are running different apps so this is the basic difference between the docker and the virtualization architecture so like in this series these are this like very uh important week you can say or just you can say the foundation of this Docker series okay so let's start with the first one which we have on the screen is the docker file so what is a Docker file so it's a very simple concept like Docker file is nothing but a just like a text document like we just we have normal text document it's also like that text document like some commands and some like instructions will be there in that Docker file which will be which will be used to create Docker images okay so you might feel little bit of confusing about this but let me just simplify this for you guys so you will just think Docker file as just like uh you can think like it as a recipe okay just suppose it's like a recipe book or something like that and then you will create some like some good foods okay some tasty foods which you will create so similarly in Docker file we will have some instructions okay there will be instructions and we we will use those instruction or we will use this file like Docker file and we will create images okay Docker images which we will create so this is the basic Funda of this Docker file and it's a very uh like simple concept I think you should not get to feel like you didn't get it okay so this is the normal definition of the docker file I hope you got it now moving forward if you will talk about the docker image so Docker image is nothing but the like nothing which is Created from the docker file it just we can say it is a Docker image and also you can see here like it just a template to create a Docker container okay so whatever we will give the instructions like how you have to create image what are the functionalities or what are the dependencies what are the like base should be there like whether it's the application will be based on the python Java PHP or something like that we will write all those in Docker file and then we will get a Docker image okay so it just uh like just like a template to create a Docker container okay and also here you can see I mentioned on point like images which is created can be stored in a Docker Hub so in there is something called as Docker where we get different images different types of images and then we can share those images to other developers or we can use the like images which is created by some other developers okay all those things so now uh to uh like uh to understand quickly or to get it easily like it's the docker image the concept which basically is the based on the oops concept like the class and the object okay if you are familiar with the objectoriented programming language you may be in Python Java C plus plus okay or any other languages then it's it will be very easy to understand for you guys to understand the docker image so let me just simplify this for you suppose you have a one class called as students okay uh sorry it's not visible here I just take some other uh wait wait let's go in general yeah okay suppose this one is your class okay the class is uh students okay students is one class and it has some like Properties or uh you can say uh their name roll number all those things are there like okay so what with what will happen we can create different objects with this class okay so we can create different objects suppose one object will be o1 okay suppose this one is the o1 is the object okay and then suppose we will create one O2 as the object okay so this one is another object which we have now so here we have suppose we have object O2 okay cool now wait yeah we have object Auto so like you just like you know just think just think and uh imagine like it's just like the image okay a student is just one image and we are creating different containers from that image so I hope that is clear to you now like if we just talk an image just nothing but a template which we will use and we will create then containers okay so now moving forward if you talk about the container so container is nothing but just here you can see the running instance of the docker image okay it contains the entire package to run the application like whatever the dependency whatever the platform everything whatever is required we will get in the docker container okay like uh just like if you suppose like what what is the basic and what is um like main concept of the docker so it just it we just not just copy the code we actually copy the whole environment okay and we then pass it to the other person or the developer or other member of your team so this is the simple concept of the docker container okay so whatever the instance which is run by the docker image now in the summary which we have the summary is nothing is just a very simple so this one will be the docker uh it will be the it will be the docker file okay and with Docker file we will create Docker image okay let me just get it for you so that it will be easy to understand okay so this one is the code so here we what we will get we will get the docker image we will get okay so here I have got the docker image and then I will get the docker container here we will get the docker container okay so this is the like basic overview and the basic concept of the Docker file Docker image and Docker container okay cool so I'm taking a little bit problem in this so it's going in background I'll just leave I hope you got it okay you got the concept okay hello everyone and now in this particular video we will see how we can install the docker in all this window system okay so currently you can see I'm on this particular website.com install you can come upon on this by uh typing as well you can just search on the Google like Docker install and you will come upon on this screen just click on it and you'll be on the same screen on which I am okay so now in today's video we'll be basically installing for the windows okay so here are some different options as well for different OS like Linux Mac you can install on those OS if you want otherwise if you want to install for Windows so you are on the right place okay so what we can do for Windows you have to just click on this Docker desktop for Windows so here are the some information which you will see like some requirements and all those things WSL about Windows containers everything you will see on this particular page and this one is the button which we will use to uh download the exe so we will get one EXA file through which we will install the docker okay but before starting uh you will you will need to first check the system requirement like it is important for us to install Docker so the first requirement you can see it should be Windows 11 or Windows 10. it should be of six to four bit and the version you can check here like it should be home or Pro or Enterprise or education and it should be higher or 21 H2 it should be okay so to check the version you can just uh press Windows r and you will need to just write or type Winword like Windows version and head will come up on this dialog and here you can see the version in my case it's 22 H2 and the it is Windows 11 okay so same you can check in your computer as well and also uh you can see here the enable WSL to feature on on Windows okay so for this what you can do you have to just to open the command line and just type the command WSL if it is there it will show if it is not you can just install it using WSL hyphen iPhone install Okay so it will install WSL for you so WS is nothing but the window supported Linux Okay so it is required to install the docker okay and the other like General like 4GB 64 GB Ram should be there 64bit processor should be there and also virtualization should be enabled that is also on point so how you can check for virtualization like it is required for okay so what you can do you can just hit Ctrl shift Escape okay it will open your task manager you will come up on this screen here just click on the second one performance and then you have to go in the CPU and here you will see virtualization is enabled by default it is enabled but if in your case it disable then you can enable it by going in BIOS setting so you can follow some other tutorials for that as well so for different PCS there are some different Keys like effect F5 F4 something like that you can check so I hope it is clear the system requirements and all so now moving forward uh you have to just click on this Docker desktop for Windows it will start this one installer it will uh start downloading this installer actually I have already downloaded it it's of some 600 MB so now what we will do we will just click on it to hit yes and it will take some time yeah if you want to add to desktop here I want okay so it will unpack some files okay so just wait for them unpacking okay after that it will try to install and after all those things we will need to restart our PC as well that is also on point after that it will like installation will be successful okay so I hope you are enjoying the series of our Docker like in our previous video we have talked about the dog of file image and container so I hope these all concepts are clear to you if not you can ask us in comment section as well so just wait let's see till then we just go through the uh what are the other things which we have here uh for the WSL we can check the documentation as well so here you can see how we can install so this is the command which we will use to install the WSL so here you can see developer can access the power of both windows and Linux at the same time on a window machine that's what WSL game okay the windows subsystem for Linux okay so sorry uh so with that we can install many detective distributions and we can install Ubuntu Kali uh cleanups and all okay let's check okay so finally it's installing just wait so here it is saying You must log out of Windows to complete the installation okay so uh let's do this all right so here you can see uh we have got some error and it's it's showing we need to update the WSL okay no problem we'll just copy this one quit windows or CMD right click enter click on yes just wait for installation just see how much time it will take five percent is now okay so if in case if in your case it shows log out then you do log out but again just try to uh just restart your PC okay otherwise it will uh it will show like Docker stopped or else to wait for the installation 38 is done foreign just wait guys till then I just pause the video okay so here you can see uh like uh window subsystem volumes has been installed it's fine now just close this one again click on Docker desktop just wait and here you can see Docker desktop is starting okay just wait so it means we have successfully installed the docker actually and from here you can search for different images like where which we are talking about images in the uh in our previous videos so we can use images for for like which other developers have created okay so here you can see uh to try running a Docker copy and paste this command into terminal and then come back okay we will need to do this one all those things and the images volumes everything you will get here okay so today we will just stop here like our installation is successful now in our next video we will learn about how we can create images all those things okay so that's it for today's guys and I hope you like this video if you have any queries or you face any problem just tell us in the comment section okay so that's it for today's video thank you for watching hello everyone and now in this particular video we will see the docker basic command so as you can see on the screen The Heading is the docker basic commands Okay so we will see the these all commands to pull image to run the image to run the containers all those things we will see in this particular video so before starting the video I hope you have already installed Docker it should be there in your PC to run all these commands Okay and also make sure you are running Docker in your background already I have opened up Docker here in my background okay so I hope you have also opened it all as well so to run these commands we need one uh see command line so you can use just Windows CMD or Powershell whatever you want it all depends upon you so I'm using CMD here normal okay and if you want to use some other you can use that by clicking on this plus icon and then here you can see it as windows power cell and all those things or on this drop down you can check here I have Ubuntu as well okay so all those things you can do so I'm preferring here normal CMD okay so currently I will just divide up the screen between two parts okay to check the commands as well now I will first move into the different directory here actually so we are here at the different directory yeah and now to before starting the actual video so you should know about the docker Hub okay what is a Docker Hub so basically a Docker Hub is nothing but uh you can see as the uh Marketplace of images okay you will get many different type of images there if you will search for Docker hub you will come up on on this screen let me just increase the size here and just click on it hub.docker.com you will come upon on this and here you can search for any image which you want okay so today in this particular video we will be only using the hello world image okay in our next video we will see some other images like how we can use those images and how to run containers how to actually use the uh UI or the console of that particular thing suppose if you want to install python or use Python then we will use Python image and then we will do all those things so just let's search for Hello World for now so hello world is there okay and now what we will do uh here you will see we have this image hello world image okay you have to just click on it and from here you can find different things about this image you can check Force tags what are the tags here's latest is this share taxes there okay now what we will need to do we need to just uh use these uh commands in our CMD so let me open up the CMD and the uh my Chrome browser as well this one now let's start with the uh first thing which you will do is the docker version we will check the which Docker version we are using So currently here you will see we are using 20.1 dot sorry 20.10.23 and the build is this particular thing particular number okay so this is the currently version which we are using in our machine right now so now the First Command which we'll be using in this now we will be doing pulling okay we will pull the hello world image so this is very simple uh you will need to just do Docker pull hello world okay so in every programming language whether it's C C plus plus Java python Swift any language I hope like you may have wrote the first program as your hello world program okay so this time also we are doing the same okay so just hit enter and it will using the default tag as letters it means the uh it is latest image or the latest version of that image you can say like that okay so here you will see we have currently uh pulled this image hello world and now if you if you remember the concept of Docker image and Docker container so we run a container from our image so image just acts as a class and the container as the objects so now the thing is that now we will when we will run this image so it will create container for us okay so how how we can do it it's very simple you have to just write this command Docker run and the image name which we have currently pulled so image name is hello world so here you can see it it successfully uh executed this command so here you can see uh the content of that hello world image is the hello from Docker this in this message shows that your installation appears to be working all those things are there and to generate this image what Docker did so all these things are mentioned in that image that's why it's showing here now now if you will see our the docker uh UI so let me open the docker desktop and here you will see one container is showing okay so here you will see the uh logs what are the locks over there okay and the terminal nothing is there inspect is here okay files here in this one file we have hello name hello we have one file okay and here you can see the content of that file here actually okay so now the thing is if what will happen if I again run the command so it will just create another container for me let's check and if I do just clear the screen and again run the con command so here you will see one more container has been created okay so it just like the class and the objects these are the objects okay of the images okay it means different containers are being earned okay so uh this one is about the uh creating a container and all those things okay so I hope it is clear to you how you can pull the image and how you can then create a container from that image so you have to just pull image using Docker pull and image name and you have to create the container just using the docker run and the image name now next command we have in this list is Docker PA so what it does it basically stores the current running container okay so currently it's showing nothing because we don't have any running container right now because it is all the containers have started and it is stopped and exited so here if you will see uh on the UI here you can say status exited okay that's why it's not showing any kind of container right now it shows us the current running container we will see all those thing in our next videos when we will be doing on the python or some other uh image then we will see all those things which containers are currently running and all those things now moving forward if we will talk about the to check the list of all the containers then we have a option uh we get one as the a or or we can say if we will do a so here you will see if I increase this one and here you will see the container ID image is there when it is created status all those things we are getting so these are the two containers which we have created okay so if you will check for the container ID then you will see up here on the UI we will have the same ID that is if you will check for this one it's 903 and above one is C double four so it is same C double four and nine zero three okay so in this way you can check the uh you can check the all the containers which are there in currently in the system okay and similarly to uh check for images you can check using the docker images okay so before that let's uh check for how we can remove the container okay so this is very simple as you can see on the screen we need to just to use the container ID so how we can do it first I clear the screen and maximize it to it should be clearly visible to you guys so what is the command Docker PS hyphen a or all you can use anything uh sorry we have not deleted I think yeah hyphony okay so now what we will do uh we have to just use the docker okay and you have to use the RM and the ID which you have to use that is this one so here you can see if we will again check all the container it will give you only one and if you will go on here and you will check if there is also only one container is there now again to remove that container you can use the uh Docker RM and that container ID so you have to just copy it and paste it done we are done now there is no any container in our PC right now and also you will see nothing is there okay so in this way you can remove the containers as well now moving forward in this tutorial you will see for what are the images present in our this machine so if you need to go for Docker images so here you will see one image is there hello world image is there its tag is latest that ID is given when when it was created it was created 17 months ago like you can see like someone has created this image 17 months ago now currently in 2023 we are using this image so in this thing for like you can imagine how things have been changed what are the like uses of Docker can be you can think of that okay and also here you can see in this column we have size at 13.3 KB so now uh let's check for uh how we can remove the image so it's also very simple you have to just use Docker RMI that will remove image and the image name which we have is hello world okay so something happened uh no it's deleted now if we'll check for images so no images are currently there in our PC okay so that's all for today's videos guys I hope you liked it if you have any queries anything you can just ask in the comment section okay so this one is the command which we used now in our next video we will check for the actual implementation and all those things with some other images okay so that's it for today's guys thank you for watching I'll meet you in the next video thank you so much hello everyone and now in this video we'll be working on the python image okay so basically we are on this Docker Hub and we will search for the python image here so basically in this particular video we'll be working on the python image like how we can uh pull this python image how we can create the containers and also we will see the uh interactive cell of the python in this particular video okay so let's start with the video I hope you already have installed Docker Hub and all those things and your previous YouTube we have already covered the basic commands as well so it uh like there should be no any problem in that so here we have on the python this is the one of the image of python uh okay so here you will see the command for pull python okay so we can pull the python using this particular command which we have already covered and these are the some tags which you used nowadays like what version if you want to suppose in your project you are using python three point something like 3.2 you're using then we can use different tags for those all things okay so uh let's start with the video okay so let me open the CMD okay and I will go in first uh 15 I think yeah so here uh let's check our Docker version First okay so it's 20. something something okay so now what we will do we will be installing uh sorry we will be pulling the docker image so the very simple command which you have is Docker pull and the name of the image that is python okay so we'll just hit enter and it will using the default tag that is the latest is the default act which which is uh there okay so it will install it will take some kind of time you can see here we uh the size actually uh okay so we will just wait for the installation just wait and also one more thing suppose if you want to uh install different version of path and then while installing while pulling the image we can provide the different version using the colon like Docker pull python colon and the version name it might be three point something okay so in this way you can uh pull image of different version as well so it's quite useful for us okay so till then we just scroll the what are the things are here if we get something interesting let's search for it okay so these are the simple tags so we have here okay share taxes there quick reference okay so here you can learn about what is python okay if you're new to it and these are the some things which we will do in our next video actually so we will create one Docker file we will understand what are all those things and then we will run one python project as well in our later videos okay in the docker container we will do all those things okay so let's check whether everything is installed or not yeah it's installing uh you can also search for jdk as well like open JD or jdk something like that for Java which we have uh let me search I think it's open jdkm okay uh yeah I had this one is we have it so you can see it's one billion plus uh downloads are there for this one also there are many things which you can see here like Debian MySQL as well you can see everything is there and based on the operating system you can also uh select on which operating system you're working on so it's very interesting thing Docker hub let's check whether it is installed or not yeah it's finally installed okay download a newer image for python latest okay so uh finally we have a image let me just go in here and we'll search for images here so here you will see we have one python image okay so now what we can do we can just run this python image how we will run it uh as we have discussed already we can run it using Docker run and the one more thing which we will add here right now is hyphen ID and the image name which we have python so what does it refers to ital just server so I refers to interactive and T refers to the terminal so basically we will get the python interactive terminal which we usually get suppose if you are going in uh I open on another window of CMD I think yeah yeah this is the another window if I search for python so here you will see you you are getting this uh terminal window or that interactive cell of python if you will here write print hello then it will print okay so in this way we will get as well there also so let me just close it and now I just run this particular command okay so here you will see we are using 3.11.2 version that is the latest one if you will do something like print uh hello it will print okay so yeah if you want to do anything like suppose if I do import OS and print OS Dot pwde I think this is the command no it's not PWD something is the command which we use for the present voting directory let me just search for it uh if we go for uh OS Library python okay so let's open gigs for gigs okay so here you can see the CWD equal to OS dot get CWD it will print the current working directory so we can just copy it and I just paste it here okay and I just to print CWD okay so you you are saying like we are on this particular directory like the root directory okay so in this way you can use the python shell and all those things okay so it was a very uh quick tutorial for you guys so you learn basically about that it flag okay that interactive terminal flag okay so that's all for today's guys and in now next video we will be learning about how we can create the docker file and all those things and then we will create that images from that Docker file and then creating containers and running projects all those things okay we'll be doing in that particular video so that's all for today's videos I hope you liked it if you have any queries you can ask us in the comment section thank you for watching hello everyone uh in this video basically we will see some important content which are remaining from the basic commands video okay so basically in this particular video we will first see about the how we can uh run the container in the background okay these all thing which we'll see and also we will cover in this video like how you can start the container how you can stop the container so these are these are all things first we will see in the particular video in the next video we will cover that creating images then creating contents all those things okay so let's start with the video already in our previous video we have covered this one like we have created that uh images uh sorry we have pulled that image of python okay and now we will create the uh container of that image okay so just open the CMD uh let me go into that directory where I do all those things okay so now what you will need to do uh actually first we will see the images what are the images we have So currently you will see you we have on the python image right now and if you want to check for container So currently you don't have any container okay so the basic thing which we do usually uh to run the container so how we do it it's just simple Docker run and the particular image name so connected here we have the image name as python okay if you do python so what happened now if you will check for container so one container has been created and it is exited so what happened with this container created and then exited okay it's not running in the background okay it is now stopped so when you use this command uh Docker and python okay and also which we had covered uh in the last video the docker uh run hyphen interactive terminal and the image name so here uh we will just wait for five to ten seconds okay and I will just write the print hello is printed also something else if you do Class 2 and uh and if you do just pass here uh sorry indentation error we got if you do pass okay just control D okay so this thing you can do like you have created a student as well uh if you create the object of that class you can do that as well print S1 if you do yeah there you have the object okay so now we just exit okay now when we will see the uh this one so here you will see uh this one this is the container which is that okay uh exited about a minute and no no this one this one is the one just exited three seconds ago so we waited some time and then After exiting we it's showing three seconds ago if you again check it will show some more second that is 26 seconds ago and if you do just Docker PA so it shows the currently running containers okay so currently you you don't have any container running okay so to execute or to run the container in the background we have some different flags okay which we use so the very uh spatial flag we have is The Hyphen D that is the detach okay we use this flag to run our containers in the background so how we can do it it's so very simple to use and also you will learn about some uh what you can say uh one more flag that is The Hyphen iPhone name you can give any particular name to the uh container as well so how we will do it so if you want to do uh first I just do PSI funny I just remove these containers for now so how you can do it Docker RM and you have to just to provide this okay done again let me just copy this one okay okay let's check again okay we we don't have any content right now so now we will just uh create a container I need to run in the background how we can do it so you have to use Docker run and the flag which we'll use for now is it that is uh interactive terminal and the name we will use so I will give the name to the uh Docker is PS you can PC you can give it like that as well or like this as well it doesn't matter okay so I'm using this simple method that is PS without codes will use the hyphen D flag Dirty attach and here we will need you will need to provide the image okay the name of the image which you have pulled so image name is this python okay so here you will see some kind of long string it may be a Docker ID it uh sorry container ID it can be let's again search for Docker psyphen a so here you will see um the details about the container ID the image the command which is basically used when we do it interactive cell when we do it here you can see up it means it's running and the name you can say is PC which you had provided right now here okay if you do now Docker PS it will show you the running guidance So currently the running container is this one which is that okay that is 5D something is the ID which we have got already here okay so now moving forward uh if you want to execute that container how you can do it for that also we have the command that is exit means execute you can pronounce it like that like we have exec and here you will need to provide the itself that is uh interactive terminal flag not cell and then you will provide the name and after that you have to just give the which command you you want to execute So currently we want to execute this Python 3 okay so if you do Python 3 so here you got it you got the terminal that you can do print anything okay so in this way you can use the uh containers and you can run the containers in the background okay foreign so now what we will need to do uh later uh right now we will see uh how you can stop the container as well for now I just exit from this interactive shell and I'll just clear the screen and check for PS running and now I will do a stop so how you can stop Docker stop here you can provide the name of the container or just a container ID it takes some I approx 30 seconds of time for stopping the container okay just wait for it okay so now container has been stopped if you again go for PS something so here you will see there is no running containers for now if you do psyphenase so the container will be there again if you want to uh what we can say start the container how you can do it it's simple uh just instead of stop you can use this start okay so now if you go for PS uh that is running container so we have that this one up nine up four seconds again if you do 9 seconds 10 seconds 11 seconds 12 seconds okay so our container is running so I hope you got it uh how you can execute the uh command or how you can start the container stop the container run the Contour in the background so these were the some important content concepts of the docker okay which we had uh by mistake left currently now it is cover so in our next video we will surely uh do that one uh creating Docker file and creating image and then all those things particular okay so if you have any query you can answer in the comment section otherwise that's it for today's video and I will meet you in the next one thank you for watching hello everyone and now in this video we will talk about how we can create the docker file for the python image okay so here you can see the different uh keywords I have written for you all okay so these are the some keywords which we use for creating the docker file actually so in this particular video basically we will be will be creating the python image okay so uh here you can see actually the uh the description is also written for these keywords you can see the from keyword is used to use the base image okay what are the base image which we are going to use here so mostly in the from keyword we specify the base image for python we use Java for sorry for python we'll be use Python based image for Java we will we use open jdk for the Ubuntu will be us Ubuntu image okay so these are the base images which we get from the docker we will be using those kind of images okay and run command is also used to run some kind of commands which we which you want to uh run while creating the container and all and copy used to copy the files from the local file system to the docker image what they are used to set the working directory for the container actually okay and CMD is we use to CMD is basically used to specify the what are the commands you want to run or when that particular container runs or something like that happens okay so these are the some of the uh I think three to five uh commands or keywords which will be using in our Docker file okay so before starting the video or you should have a vs code installer you can use any uh any uh ID not ID it's just what do we say uh notepad or something like that okay or editor you can say so here uh I have this Docker uh Docker tutorial folder and I'll be creating one python image folder okay so let me just cancel all those things and now what we will be doing we will just create one Docker file okay you can do like this Docker file and keep it keep in mind like you should use only one capital D here not the name should be like this only okay so you here is the docker file has been created and let me create some app.pi as well okay so this is the python file and suppose you want to just print like this this is my first image okay cool so this is done suppose it till uh now we just want to pin this in our container like when our container will run okay now what we will be doing we'll be creating the docker file how we can do it you have to just use form and we from where I from which uh base image you want to use I want to use Simple python okay you can use from python after that you can specify the working directory for that particular container so I just want working directly to be app okay and also you want to copy all the files okay to the app here okay and next we'll be using the CMD okay now currently we don't want to run any kind of command okay that's why we are not using run here so in CMD what we want uh we want to use this line Python 3 and you can specify in a comma you want to run which file I want to run app.pi file okay so this one is done okay that much is fine to create the python image okay so now the further step is just to use to build that build image okay actually from the docker file so you have to just open up the terminal here you can click on this and click on this here Docker terminal and you have to go in that particular directory so we are currently in Python image so we are here in the directory and for building the uh image the command which we use is docker build and one hyphen T flag is used to define this some kind of tag like the default tag which you get is the latest so here you can Define any tag suppose like my first python app and in that also it should be only in lower case you cannot give the combination of a percussion lowercase in the tag name okay and then we will be using dot dot will be used to just uh get the docker file and then creating that image from that okay just hit enter and here you can see our image has been created actually and this one you can see exporting layer writing image this one okay naming my first python app this is done okay now I will just clear the screen and I will just run that uh particular image so image name was my I think my first python app so it's running so here you can see it is printing this is my first image okay and if you go on the docker desktop so here also you will see the name is this one it is just specifying that random name it specifies and the image name is my first python app and image also here you can see the my first python app okay so in this way you can create the python image now let's do uh some what we can say uh some kind of expand or not experiment just I write some commands actually here import OS okay and I want to just show you the actual uh directory in which directory that Docker is running okay so here we can write current dir is and here comma separator OS dot get CWD and here we will be using this one and again I want us to run the build image and I will build it okay and the container name I want to provide I want to provide name of container is iPhone iPhone name and it should be like uh uh what should be the name uh first pi first Pi c means first python container just hit enter and here you will see the this is my first image printing and currently I already slash okay and here if you will see uh here also like okay none it's showing we will see why okay tag is none okay okay no problem in containers if you see yeah engineer her name is first spicy okay the container name actually okay so uh now what we will do uh again if you want so we I just want to create one file here suppose I create one file hello.txt here and I just print a higher and I want to print the list of directories or files which are present in that documentary because we are using the copy here okay so it will copy all those things in the docker image so for this we can use OS dot get uh not get I think it's list dir yeah again we will just uh here I use some different tag list list I just do list image okay okay and now I run this using list image and the second Pi container enter and here you can see it is listing the all the uh what you can say um all the files and the current directory and the print statement is printing okay so in this way you can create the any python image which you want and suppose you want to uh send this file or something like that Suppose there is some kind of project which you have created in that file and you want to send to the other person so you can just create the image of that file and you can send it okay so in this way it works so I hope you like this video and that's all for today's videos guys and if you have any queries you can ask us in the comment section okay so that's it for today we'll meet you in the next video thank you for watching hello guys and now in this particular video we will see how we can create the docker file for the Ubuntu image okay so basically we'll be using all this command which you are able to see on my screen like from run copy work there CMD okay so basically we'll be using some of the commands from that and we will create one Ubuntu image okay from the docker file as we have already saw in previous video in the python we have done it so same thing which we have to do in this as well so what we will do will be just creating one uh directory with the name Ubuntu image and inside that let's create the file uh Docker file the name should be only like this and then what you have to do uh you will just uh use this one from okay and then what you have to do you have to just write the image name as the Ubuntu and then what you have to do a UV will use run command in this actually and we will update the image okay whenever the image will be created it will update it okay our Ubuntu will be updated and then we will be using CMD and then we will write some command like we can write who am I it will tell us the who is the current user the name of the user okay so now what we will be doing uh I'm already in this directory and we can do like this like Docker build hyphen T you can provide any tag name it's all depend upon you Ubuntu app and then we will use Dot and it will not okay so now it's donating okay PTA update also didn't take much time okay it takes usually okay fine uh let me just clear the screen open up the CMD okay you can do anywhere you can do on this terminalizer but I prefer doing on this so if you will do Docker images and here you will see Ubuntu app so this image has been created uh I guess uh let me just check what was the image name yeah Ubuntu app is the image name actually okay so now what we'll be doing uh we will just run this image Docker run and we'll provide some name as the my first Ubuntu okay and we will give it uh image name that is Ubuntu app yeah so here you can see the root so it is giving us the result root okay so uh like the command has been executed so which command has been executed uh this who am I if you will check in the containers so here you will see the command who am I and the image is Ubuntu app and the name is my first Ubuntu okay so uh now let's just uh change the command you can do any command like uh suppose if I do some comma and write some another command what will happen just check it was just to give us error because it will execute uh in a single command line I guess so it will give us error so instead of that uh we can try like this PWD only okay and we will create with the name we want to have two okay so it's done again open up the terminal and it will clear the screen and let's check for Docker images okay Ubuntu app 2 is there if you will do a Docker run uh hyphen iPhone name same name just give same name one two two and the uh okay so now let's hit enter so here you will see the present working diode the follow slash means it's in root directory actually okay so uh that's it for today's videos guys I hope you liked it and you got it how you can create the docker file for the Ubuntu image okay it's simple okay so that's it for today and I will meet you in the next video thank you for watching hello everyone now in this video we will see how we can create the Java image okay using the docker file okay so here are the some of the commands which you can see on this screen we have from run copy workday and CMD okay so basically we'll be using these commands Okay and we will create on Docker file we will create one python uh sorry one Java project as well and we will run that project okay and we will check the output in the docker like how we are getting so it's a very simple step to do uh for that again you will need to create One Directory uh let me just create outside this yeah here we can create that's fine Java image is there okay so you have to just create one Docker file fine and then we will be using next command we have is the work dir so basically we will Define the directory okay fine then we have uh copies there so it will basically copy the all the contents of the file or the current directory and then uh we will see uh we basically run one command let's uh uh I will explain it to you let me just write sample dot Java and then we will use CMD okay and we'll use Java comma sample okay so we are done okay Docker file is done so now let me explain you why I have written this sample.java so now I will just create one file with the name sample dot Java okay and I will just uh create the class with the name sample and then we'll be using public static void Main Java syntax is very lengthy r but it's fine we can do at the system dot out Dot println and then we will just print hello world hello world uh it's uh it's it's working fine okay cool so now what we'll do we will go into this directory in the Java image and we'll clear the screen and the simple thing which you have to do is they just compile this Java file so if you are a Java programmer you might be aware of that before actually running that uh like Java program we need to compile first because it's I think compile based programming language okay and then we get one file then we run that file then it is executed okay so we will just compile this one so we'll compile using Java C program sorry JavaScript command and the sample.java and uh we forgot semicolon it happens here okay so here you can see uh the file has been created and we have to just give the name sample and here you can see the result is hello world it's working okay it's fine so because it's working so now what we will do I will just explain it to you so basically the Run command is basically the command which is run when you create the uh when you run the image actually okay so uh it will just first compile and then what we are doing we are just running uh the executing that compiled code okay using this command Java and we are providing the file name as the sample okay that's it this is the only concept behind this okay fine uh what we will do uh we will first build the file uh build the image using this Docker file how we can do it job Docker build and we'll provide the tag name using hyphen T flag and we will write the name is my Java app okay just start at the end okay it's working it will take some time and something happened uh what we are getting uh sample dot Java comma not found okay fine because we have not written Java C here okay that's why it was just basic one let me again run okay now it's done finally and we will just clear the screen we will open up the CMD we will search for the docker images okay so here you will see my Java app has been created now what we will do we will basically run this image we will provide the name of the container as the uh what we can provide uh Java uh Java one okay fine it's fine my Java app is also we can give the image name okay let's see okay so here you can see we are getting the output as the hello world it's working fine it means like it's working perfectly if you want to check the container list so here you can see the using psyphen a and here you can see it's created just 11 seconds ago okay exit exited this one 10 seconds ago and the name is Javan okay fine again if you want to Let's uh we can uh we can do something else as well we can try to create calculator I will just copy the code of calculator y to write the whole code if you have code don't take it seriously okay so here what we can do uh I have just copied it and we will just paste it here Ctrl V and the change the name as sample again I will just first run this app let's see how it's working Javas Java C ycle dot sample dot Java let me again delete this one okay and let's run Java sample okay I will choose plus I will 12 11 okay it's perfectly it's working fine okay so now what we will do we will be just uh again creating image Docker build hyphen t Cal C dot okay fine and now what we will do uh will be on Terminal let me just clear the screen we will check for Docker images and its calcium is there uh it's created you can see 12 seconds ago we will just run this application we will do Docker build sorry sorry we will do uh Docker run we will provide the name one name like calci app in Java okay we'll provide the name of the application as my job sorry what was the name calci is the name fine okay let's see so here you can see choose an operator because we are getting something else uh we will need to run this application in the background guys okay okay we can try with uh detach mode okay let me just clear this screen uh we can do Docker run iPhone IIT hyphen iPhone name uh let me first check the name whether any your container is created okay we will delete this one uh Docker RM you can delete the container using the container ID and the RM command okay let's do now it is related uh yeah I guess yeah it's still later now so now what we'll do we will run the uh image that calcium is so we will do Docker run hyphen ID hyphen iPhone name we can give it as the calc C app again we will do hyphen D for inday touch mode it means it will run in the background again calcium is there let's hit enter let's do Docker PS to check yeah so here you can see it's running in the background okay fine uh let's try to execute Docker execute hyphen ID and the uh container name is we have container name as Kelsey app Cal C app okay okay but here we need to provide the command name actually so we can provide a Java sample let's let's see what happened just okay so choose an operator so we will choose operator S Plus enter the first number 12 13 and it's working perfectly fine so in this way you can just uh execute these type of programs in the background okay so that was a very simple actually so now uh if you will check again if I'll clear the screen and again run this one and I choose approach into first number 12 12 144 yeah cool create the screen it means it's working fine and to stop the container you can use uh here the container is running so to stop the container you just have to provide the command Docker stop and you can provide the container name and the or you can provide the uh what you can say um this one the name as well then it will stop it and if you will check so here no container is running okay it's perfectly fine so in this way we can do all these things so it was a very uh good video I guess uh but you guys will tell how it was okay so if you have any query you can ask in the comment section okay and uh that's it for today and I'll meet you in the next video thank you for watching hello everyone and now in this video we will see how we can push the image to the docker Rob ok so uh these are the some of the steps which we have to follow to push the whatever we create the image for the docker okay as uh it will be very beneficial suppose if you want to send some code or some part of like some of your project to someone else which works on a particular uh environment suppose that project works on python 2.6 only okay so then you can create the image of that and then you can send it to your friend or like you can post it on the docker Hub and from there your friend can access it okay so this is the very uh simple process so for that first of all you will need to go on this particular website that is Docker hub it will like hub.docker.com okay and here if you don't have any account then for that you will need to register first it's very easy process to register actually I have already a account on it so what we can do I will just sign up sign in here so this is the user which is required to push the image to the docker up okay So currently we are here on the dashboard okay so now what we will be doing uh like we had created the image that is calci okay and now but uh we can do uh we will create one more image uh for this project okay that sample.java okay we have already the docker file here we had done it in our last video okay so this is the docker file so what we will do we will basically create one image okay so how we can do it it's a very simple Docker build hyphen T okay and the name which you want to provide suppose I want to provide its name to calculator Java okay this time I want to provide and you have to just use Dot okay so you can see image is being created now if you'll search for Docker images so here you will see calculator Java has indicated and the tag is latest because we have not provided any kind of tag to it that's why it's showing latest okay so just uh clear the screen and again I'm let me just search okay so this is the image has been created okay so now here if you will check um here you will see like the whatever the image we create we don't provide the actual the format of that so we need to change the format using this command like Docker tag and whatever the image name if version is present then we write the version name and then the uh the name in The Format in which uh through which we can post that image to the docker app okay so that how we can do let's see so it's uh just you have to provide Docker and then you have to provide the tag and the name of the image which you have created so here the name is calculator Java okay so Cal queue later Java okay and the name will be followed by your username so my username is 987456 Slash and whatever the name which you want to give suppose I want to give it as a calculator app and I will provide the version so I will provide the version Ms version 1.0 okay let's hit enter and now if you will again search for Docker images you will see one image has been created with the name and the tag is version 1.0 okay so now what you will need to do uh you will need to just uh do Docker login okay to push that image to the docker so Docker login is required okay so here it is showing me like I'm already uh authenticated here okay so if I will open up some new terminal and if I will search Docker login okay it's already uh my account is already authenticated that's why it's not asking me for the username and password but when you will do it it you will need to enter your username and the password okay so it's fine uh now what I will do the last command which we'll use is Docker push and whatever the image name which we have so we have this image name we will need to copy this hole okay so okay push and the version which you will need to provide it and the version name is uh version 1.0 okay so here we're done so the post refers to repository this so it will push our project to on the docker okay let's wait it will take some time uh so it's soft 323.6 MB okay so here you can see it is showing me mounted from ayush disk calcium okay so is there also any no actually I had already pushed one image with the same name for the testing that so it's showing that so till the completion I just pause the video okay I will come back when this will complete here you will see now it is pushed okay so if you will check here uh if we reload this okay so here we you will see uh uh one image it's pushed here okay and this is the same name which we had given like calculator app okay and if you click on the public view you will get to know how you can uh pull this image okay so this is the command which we use to pull the image actually okay so that is the simple one okay so uh you'll might you might get confused why mounted and all so to clear all this uh if you want to you can give it like this colon and then version 1.0 but now I don't want it just a hit dot okay so let's just clear the screen if you'll check for Docker images so here you will see this one is this this okay oh sorry not this one yeah here we have hello python okay so this is created now we can just push it using Docker push and the name which we have is uh iOS 987456 slash hello python okay so here you can see it is preparing and waiting it will take some time okay okay it is now taking all the from library pattern fine okay I just pause okay and we'll wait let's pause okay so here you can see it is just pushed all those things if you will check again on the repositories here in this section and here you will see Hello python is there and if you click on public View so this one is the command which will be you using okay so now what we will do I just go into the dock images and I just remove this one uh Docker RMI remove image and the name of the image should be okay okay now removed if I can check okay fine there is no images so now what we can do uh where is the yeah instead of RMI we can do not pull okay so now it's pulling the resource from the docker up okay status downloaded if you will again check for Docker images so you will see we have this one and if you want to run you can earn it using Docker run and the Ctrl V if you do this one and the here you can see the content whatever the content we had written uh it's showing us here if we'll check app.pi so this is the this is first image current director is printing and the all the files which are present there okay so in this way you can push the image to the docker you can pull the image from the docker up okay and also this will help you to like um what we say you can easily share your project to other person as well okay so that's it for today's videos guys I hope you liked it okay if you have any queries you can ask in the comment section that's all for today's video and I'll meet you in the next video thank you for watching hello guys and now in this video we'll be talking about the docker compose okay so this is the very uh interesting topic and till now we have actually covered the very uh all the basic concepts of the docker like from creating uh for pulling images from the docker to pushing image to creating your own custom image everything has been cleared till now and now we will be moving towards some Advanced topic that is now the current we have is the docker compose okay so uh let's see uh what are the information about the docker compose on the documentation so uh here you will see uh so here you will see the uh overview of the docker compose one Docker composes how you can install try compose everything all the information is here okay so uh let me tell you first about the what exactly the docker comes and why it came in the role okay just think about the web application okay suppose if we have a one web application if we come here and if I create some suppose this is one of the website okay this is one website okay and it's uh support ecommerce website or any uh Dynamic website you can say it will be the front end and the backend as well okay so what will happen if you want to just uh run this application in the containers device with the through uh with containers and in Docker so in that case you will need to create two different images one for the front end and one for the back end so in this way like it will be very difficult to manage both the containers at a time okay so that's why that Docker compost came in a role so with the help of that we can run these two containers at once and we can manage it easily so this is a very a basic and fundamental concept of the docker compost will come up come on the documentation part and here it will run sorry if you will read uh so here you can see the compose is a tool for defining and running multiple container Docker applications okay with compose you use yml file so we basically use one viable file that is Docker compose dot yml it is the one file in which we Define all these things like uh images what images you have to use and all the like connecting parts all those kind of things it is managed by the docker compose file that is dot yml file okay so with this file uh we manage the containers here also you can see here it is written like with a single command we can create and start all the services from your configuration okay so this is also one of the parts so uh if you will come up on here you will see how you can install compose try compose all those things so we will cover all these things in our uh next video so uh that was the basic overview of the docker compose and what we got to know is the dot ymf file is first important file and it is basically used to run the multiple containers at a time if we need uh to like if you need some more information you can just search for Docker compose and any medium you can search okay so here you will see many people post about the docker compose what is this or you can read this uh blocks by someone for him okay so here you can see all those things okay so uh that is the uh basic overview of the docker compose I hope you liked it and we'll be surely updating uh in our next video the further part of the docker compose so if you have any queries you can answer in the comment section so thank you for watching and I'll meet you in the next video thank you so much for watching hello guys and now in this video we will see about the docker compose installation okay so before starting the video there is a good news for you like if you are using Windows and the Mac OS then uh it comes already preinstalled when you install the docker in your system okay so currently uh in this video we will be seeing uh how you can install in the Linux system if you are using the docker in the Linux system then you will need to uh install that okay so for that you will need to just search Docker compose if you search your installation and here you will come upon on the official documentation of the docker and here you will need to open a pair and here you can see the overview of the page of this one uh Docker compose and here you can read the documentation about all those things like for Linux Mac they are the same to install the docker desktop and for uh Linux as well like it is required I guess uh yeah here you can see if you have already installed Locker desktop you can check which version of compose you have by selecting about Docker desktop from the docker menu okay no one need no need to do all those things let's just quickly check the docker version in our PC so here if you'll do Docker compose hyphen V so here you will see we are using the version 2.15.1 uh Docker compose okay so in your PC as well it might be same or it might be different okay so let's see uh how we can install in Linux so for that you will need to come up on here and you will need to just click on this you can install the compose standalone and here you will see the some of the commands which will be used to install the docker compose in the system so here you can see the call command is there and there they are provided the some links and also these steps what are the steps you will need to take to uh install the docker compose and also this pseudo command is there for I think creating symboli links is there this is uh for the Linux and if you will go scroll down and here you will see for the Windows Server as well they have given the documentation so you can read it and you can install the docker compose easily in your system so if you are using Windows and Mac then it's fine otherwise you can install in both of these DirectX and Windows Server okay so that's it for today's and I'll meet you in the next video thank you for watching hello guys and now in this video we'll be talking about how we can create the docker compose.yml file for this uh Docker file okay so basically we will be creating that file that will be the simple one for this video for now okay in the next video we'll be look for some complex okay where we can manage the ports and all everything so Docker compose dot yml you have to write like this and it has also some kind of syntax and semantics to write this file just like the docker file which you have you are running from first from then run CMD copy all those things so similarly in Docker compose also we have some syntaxes so what is the syntax let's see uh we will just write okay so the very first is we need to provide the version okay version basically which version of Docker compose you want to use So currently we had checked so it's our 2.5 so we will write it 2.5 and then later on you have to provide the services so here you will provide the services and next you will provide with the service name so service name we can provide anything like uh let's provide ubu okay it's one two or Ubuntu image like this we can provide okay and next you will need to provide some container name okay so basically we'll be uh creating file for building the image and then running the ad container do those things okay so how you can do it now you have to just provide container underscore Name colon space and let's write something my container okay and next you will need to provide for build look look for the building of with the docker file we use build hyphen T then the uh tag which we want to provide and the context that is the directory in which directory we have so for that here also you will need to provide the context actually so context will be the dot and the next Docker file so Docker file will be the docker file which we have that is this one and that's it and now we are going to go so you will need to just enter the docker compose up and here you will see it is building so here you can see and now uh container my container created attaching to my container my content is printing hi hi why because so if you will check here so we have printed Eco High that's why it's showing High okay if you just clear the screen and you check for the images so here you will see uh image might be created with yeah here you can see Ubuntu image one two image with the name it is created okay and if you will check for the container as well let me open up the CMD in the full screen mode if we'll check for Docker psyphenase so here also you will see the one container just 35 seconds ago had created okay so in this way you can write the uh yml file of Docker compose so this is the basic Syntax for the version and this is the service this is the service name and these are the some key value pair which we need okay for building the uh image we need this one for ports to defining ports and all we do we write for the ports and these things okay so in the next video we will see some more uh complex so that's it for today's videos guys and I hope you liked it and if you have any queries you can ask in the comment section thank you for watching I'll meet you in the next video thank you so much hello whether now in this particular video we will see how we can create the python server using the docker company so for that you will need to First create One Directory let's create a python server and inside that we will need to create first one dock of file so it's very simple you can just write like this Docker file and in that we'll be using uh python as a base image okay and also I will create some file here like I will create one hello Dot txt and here I will just write hi this file is inside the python server directory okay fine cool so now what we will need to do you need to First copy all these files I want this to copy all this in slash app and work the IR should be as well slash app okay so let me just check it is correct okay fine now we will write like this work there at first and then correct cool so now our Docker file is ready now we will need to create one Docker compose file okay so how you can create docker compose dot yml okay so inside that you will need to write the version you need to specify the version so version will be uh 2.4 okay then Services you will need to provide services so inside Services you will need to write the service name uh you can write service name as my first server okay and inside that again you will need to write the container name so you can write like this container underscore name colon server nice and then command which we'll be using to run the uh server so the command which we have is Python 3 hyphen M HTTP dot server and the port I will give it as one two three four okay and here you will need to allow the ports from your system as well so for this you will need to write minus one two three four colon one two three four okay now you will be writing the uh code for the build which we use to build the image so build will be as simple as it is so we'll need to provide the context so contest will be the current directory and then the docker file you will need to provide the docker file as well so which we have Docker file as this one Docker file okay you have to just save and now we will run the docker compose up so for that you will need to go into that directory also you know python image CD python server PLS screen Docker compose up okay so here you will see how we are getting some techno string key in Services dot my first result port01234 okay uh for this we will need to just remove this space I guess so now it will work yeah cool so as you can see python service default containing server key container server created attaching to server all those things are working just check okay now let me just open up the Chrome and if I go on localhost one two three four and here you can see directory listing for this Docker composer value click on hello.txt here you will see this file inside of python server directory okay so in this way you can create the python server using the docker compose so here you can see the everything you can see here okay so that's all guys for today's video I hope you liked it if you have any query you can answer in the comment section thank you for watching I'll meet you in the next video hello guys and now in this particular video you will see how we can install the Dockery now this Ubuntu machine okay so it's very simple uh you just have to go on the official documentation of docker and we will search for the install uh Docker on Ubuntu okay and then we will go on this particular website and we will open up one terminal here just to go now it's fine let me increase the size yeah now if you will see here uh installation method so like Peter Quizlet is what you should have this Ubuntu like we have already that one and you will need to uninstall the previous version if you have so using this command you can just on install the previous version so here you will need to enter your password and no packages there so no install on installation okay later if you will go on go below you will see installation method you can install Docker engine and different ways depending on your needs so it is Docker desktop or apt repository or manually okay so we'll be using this apt repository so first we will be going to run this command so or you can do it just paste that command here okay it will update okay next we have to run this command okay let me just clear the screen okay uh run this command code so just to do yes okay next you will need to do this one so you do first we'll run this command let me be complete clear the screen again paste that one hit enter okay again you copy this command paste it hit enter okay again this command uh let me just copy this and paste it here okay cool uh okay next what we have to do you have to just do the Eco control C TRL V okay then again you have to update then we'll be using this copy we'll paste it it will take 414 MB of space it will take some time then we will finally run the hello world uh container okay let's see how much time it takes so it will take approx one minute of time again so here you will see you uh after running this command this command downloads a testament runs it in a container when the container set prints a confirmation message and exists exit okay so we will do that as well so one minute of approx time you can just fast forward the video at this point relax so if you want to install from the package you can do that as well so many methods are there actually then if you want to uninstall you can uninstall like this as well okay it's unpacking everything let's wait okay now it's finally done now I just clear the screen and run this command now it will fetch okay so as you can see hello from Docker this message so your installation appears to be working correctly so we have successfully installed Docker in our Ubuntu machine if you want to check the version you can use like this so current version we have 23.0.3 okay so this is the very uh like basic uh thing like you can do this from the official documentation later on we will see uh how we can install the docker desktop in Ubuntu machine so that's it for today guys I hope you like this video if you have any query you can also in the comment section thank you for watching hello guys and now in this particular video we will see how we can install the docker desktop on our this Ubuntu machine so it's also very simple step uh we will basically follow the official documentation which we have from the docker so you have to just search install Docker desktop or Ubuntu hereby app and then you you have to click on this first link and then you will come upon on this page and here you will see the information like install Docker desktop on Ubuntu and you will you will need to download this DB package the package okay and the prerequisite as this you can see like 64bit version should have like you should have this one and also uh terminals you should have genome terminal and everything you should have okay so let's do how we can do it and if you have already installed the uh Docker desktop in our PC or in our this Ubuntu machine then you will need to First remove that one and then you can go forward so let's do uh do uh I will open up one terminal here okay so first thing which we have to do is the install is the package I mean download so it's a 463 MB uh it will take two minutes of time till then I just pause the video okay so here you can see we have downloaded this dot package so now what we have to do uh you will need to first update so sudo uh uh sudo apt get update okay you will need to enter your password that's it and it would also take some time but now it's done okay now what you have to do you have to uh change your directly to the downloads how you can do it just CD and the name of directory that is downloads okay I have already done it so now what we will be doing uh we uh you will use this command sudo apt get installed uh i n s t a 12 install dots and then we will use the name what is the name okay desktop so do just hit tab okay why it's not showing let me just check a list okay so here we have to write AMD 64. and then here the version name we have 4.18.0 4.18.0 hit enter and it's working so here you will see at the end of installation I pictured displays Android to installing a downloaded package we ignore the error message okay just hit enter y and to run the docker Dexter you can use this command system CTL okay I just wait for the installation until then I just pause the video okay so we have installed the docker desktop successfully to run the docker desktop for what is the command so we have this one uh where it is uh this one not this one yeah this command we have just paste it and hit enter it will start the docker desktop and here you can see all those things you have to accept okay and it will start and here you can see quick weekly tips it will give you some weekly tips and this is the setup which you want to do uh you can do it as a student and local development and that's it or you can just skip this part it's showing now Docker engine stopped okay uh let me now close it and let's again uh here you can see to stop the docker you can use this command hyphen you just stop okay and also you can run it from here from all the applications you have just search for Docker desktop and hit on this and then it will start okay it's uh stopping again and again let me check okay guys so here is a solution for uh why Docker is being stopped so here you can see uh for reusing in Ubuntu we need to actually uh enable these things you can read this one KVM support and all so actually I'm also running on the VM that's why it's happening uh and then you can just check the another solution let's check if any other solution we have okay okay uh this one I had the same problem with this with Windows 11 as main host and offer desktop okay you need to enable nested virtualization support which is available on Windows on version greater than 6.0 also it's important to mention it will disable the hyper B virtual machine at the windows okay okay so in order to enable nested VT this in Windows you need to step by step guide so you can follow these steps okay from the this stack Overflow guide and then you are good to go so that's all for today's guys and I'll meet you in the next video thank you for watching