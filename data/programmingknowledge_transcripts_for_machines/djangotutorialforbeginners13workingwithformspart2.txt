programming knowledge so again welcome you all to programming knowledge so this is the thirteenth tutorial over Jango series so like this is the github link of our stream you can clone this repository download on your local machine then run the project on your local machine so these are the instructions I have defined below so like in the previous tutorial we were working on forms so we had made a form using of using a form template engine engine Jiang Django so I had made a file named form short py and then I hadn't made a form so this is the look of our form then in use dot py file I defined two method one was it Lucas wrote method is equal to post and one was the cat so basically I give a quick overview of what we were going to do so like when i refresh this page so basically upon this URL I am making a get request and having at the get request so basically this block of code gets executed and this block of code gets executed and this tells that I had imported the form on the top of the file from dot form and port star you can input any form so when you use star symbol so I use form is equal to feedback form so this was a feedback form which I was referring to and then I was able to render this form on my on the front end part of my application okay so basically what we are going to do first thing we are going to do is add bootstrap class to this form so what you are going to do whenever your input is defined inside form short py file so you need to define a dictionary which has key value pairs so basically this dictionary is to define by attributes so am ttrs is equal to this is a symbol for dictionary so it has a key PF okay basically the at the left it will have a keeping her key and then I found right if I have a value so basically these attributes could be anything which could be name ID class which refers to the basic HTML syntax to the follow so what i will do i define attribute class and i give it a value or form control or control so most of us would be thinking why we will form control as the class because this is a default class present in the bootstrap so this will make a form responsive and for the another text area I will do the same okay I'll basically quickly copy this yes yeah now this is fine so when I move to my page I would see a bootstrap has been added to my form yeah you can see the butcher had added to a form but this is this isn't responsive so what do we are going to do I'll go to my my form go to HTML and I'll add a div class is will call medium six and I put this form inside a div okay and I what I'm going to do okay to get the form on the middle of the page I'll define a style saidulu margin zero for okay no this is fine yeah now this home is is in the center of the page now this is good to check this post in this I press ctrl shift I and yeah now this looks good okay there is some issue okay yeah it's fine okay now this is form is responsive okay so this all it is a frontend part no for the back in part what if I want to submit this form to submit this form the method should be post method okay and I generated token for this which says % c RF under scope token so token is necessary when I when you submit the form Y post method okay and this is a form which I had record and additionally I need a button also button type is able to submit loss is equal to VTN so this is a short form button primary this is a default bootstrap class and I give the back submit okay okay now this is fine and I'll when okay so here comes a button so I'll give it a little bit of styling to this button style is equal to margin zero or two yes okay okay it is it it is it it is not in the center so I add displayblock okay and what I can do okay margin zero or two and zero for the bottom so what I'm going to do so this is a full hand rotation which says on the top I'll give one Ram and on the left and the right or two and on the bottom I'll give zero so this will give ya so it gives a margin top of one wrap and on the left and right because water and the bottom it was zero okay left and right auto top is one at the bottom is zero so this is pretty fine now so I'll make now I move to the back and card and what I told you when i refresh this page okay so I was making a get request on this route so when I made a get to pass on this router you can sit on tetrakis on this URL so the form had rendered but what if I make a post request when I would be making the post request and basically I would be submitting the form okay so when I'm going to submit the form so what I'm going to do I'll make form is able to feedback form request dot post okay sorry request what post so I get all the values when the form has been submitted using the post method okay okay but still I'll make a if condition to check form dot is underscore violin is underscore valid to make sure the form is valid and I'll make type is equal to request dot post and title tied dot del okay and subject so I'll make again a same request for the subject subject is equal to request dot post and subject okay now this was fine and I would print titles here and print subject here okay and I'll return an STD with bones okay but still I will make a is equal to STR form submitted I'll get plus STR request dot methods okay so this is find it here yeah now I will return an S et will spawn so we're okay if this form is not violate what I'm going to do so what I'm going to do I'm going to render the form again but okay and I define my dictionary is equal to this dictionary is going to be same as this one and you can see form and form okay and this is this as we copy this else now this looks fine this code I'll quickly give a quick overview if the request word method was get this cool this block of code gets executed in which it says I'll render the form on the front head part okay when I submit this so this block of code let's say we could execute which says request dot method is equal is equal to post so form is able to feed back home I get all the values using request or post if the form is valid then I'll get the two values that is subject and title then I print the title print the subject and I have given a name variable which says form submitted by the requested method and I will return the HTTP response of the world else in the form was not valid so you need to the touch check that if the form was not violated so I would render the form on the front head part again okay if the form was not valid so what I'm going to do it says I test app debug okay but okay before this I'll you start my server okay yeah that's fine okay I'll finish this page okay now when i refresh this page I made a cat request so I rendered the form of the frontend part so test I will give a title and say app develop I'll make now submit this form okay so I have submitted the form yeah now it says form submitted post so this was a method which I had defined so when I submit that in the form so this block of four gets executed and here you can see that I had executed two previous eight menhir one was a title and one was a subject so title corresponds to test and this hang it as a test was title and I've debug was there in my subject art so so thank you guys thank you so much I'll catch up in the next tutorial so you need to be very careful by the writing this code you need to be very careful about writing which if condition this comes inside which if then tells that hell if part so you need to have a quick you need to have a good overview on this so in the next current we are going to work how what happens if the user it's a form is not value of something is wrong then how we can show errors related to that form on the frontend part pocket so so thank you guys thank you so much I'll catch up in the next lecture