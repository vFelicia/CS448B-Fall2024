so I welcome you all to programming knowledge so this is our 4 tutorial for Django series so like in the previous three tutorials I showed you how you can today Django project how you can work with how you can initialize the Django app how we can work with the request and response part so if you have any doubts regarding to that tutorial or you have missed anyone so you can refer to my previous 3 tutorial so I again welcome you all to programming knowledge so like in this show tutor tutorial we are going to basically work with templates and before I start with this tutorial I will show you that you can go to our github repository and you can have the look at full source code that we were working in the previous three tutorials so you can move to this link get her github.com slash pro software development and then learn Django is the repository name so you can have a look at the full source code you can either you can even download this report you can download this full source code and I am mentioned below how you can run this project so like what you need to do you can either clone or to own this project or download the project extract the files then move into the project directory and then this file called acquire mist or DHT I showed you in the previous tripped over in the like in the previous tutorials on how you can create a requirements on tht file and why is it created so you need to install the all the packages necessary to work with the project so I would open the requirements of HQ file this is these are the package required and after installing these packages you can type the corn Python managed or py run so and this would run this project on your local machine so we would be working on this posture as well so after the video I am going to push the source code you can have a look at the source code as well what changes were changes work done so this would help you to crack the code as well and you can run this project on your local machine as well so in this tutorial but we are going to work with templates and basically I told you the Django is based on MBT pattern Model View and templates so models are based with your database and views are based on your business logic part and templates are based or like on frontend so models are based on your database views on business logic and templates for frontend part so what you can I want to tell you that for frontend part basically we are going to use bootstrap so bootstrap is design a world's most popular framework for building the sponsors mobile both sides so I would show you the responsive nature of bootstrap as well because if you are making a web application and what you want to you want to target an audience so what you want to do is that if someone is using a web application on a desktop then another day might someone it might use on a laptop as well tablet mobile phone and like there are various screen sizes so you want an application to adapt that screen size to show that to adapt that screen size bootstrap is used so this would make your content responsive in nature and it adapt to the particular screen side of the user and this will help people for a faster or development as well so it has all the predefined CSS HTML javascript libraries and we'll be using this template and I will show you how you can use how you can use Chrome developer tools to edit your your pages and you can you can be sure about how you can create your pages as well so the first thing you need to do like first thing you need to do like this is as I mentioned how you can go with the repository and the same thing it says second thing you need to do you need to move into a set in short P by file and before this you need to create a to folder one with the name templates another with the name static so templates and static are the two folders you need to do so first I would move to the my project actually so this directory same at the github repository so I would create a new folder named M plates well this is the first folder I've created templates and the second one which I'm going to create is the static so static basically is working with your static files it could be any satisfying so basically just for an example you have an image which is an raw image and you need to use it multiple times so you can store a raw image into static folder so in order to display in your page as well so to folder templates will be having your HTML files and static is going to have your raw files and it could be in any form so after creating these two folders what you need to do is to add them in your directory so the first thing you need to do is you need to move to your settings or py file and one shortcut I would show you that in sideways code you can type ctrl + P and move to any file suppose I have to move to this URL story of a file or model short p5 models or py fine like this V file so I would type models dot py and they could have given me the same recommendation about and I would click on it and I would move to this file so in this way again back to move to setting for preview our file so this is a very interesting shortcut so hundred installed apps I have mentioned my app and under the directories templates what I need to do I have to mention my current path where my templates are sold because this fall this list is basically as a saturated with the templates directory so I would type OS dot path dot join base directory comma templates so this would join my folder that I am telling that it could be any OS environment I would join this from base directly to the templates so this would connect with this folder so my project is more connected with this folder the second thing I need to do is the same thing I need to do for the static files but this little different so I have to first mention the list static files underscore directories so this is the list and I would be using this so you can see that these are almost same thing oh it's on Anton joint based on the school templates and answer is a short fun don't join base directory karma started so what I can do is Oh ssorry Oh s dot path dot join base directory Comic Standing okay so this looks good so I will run my server so till the time I will show you one thing that the my servers were working fine and I had made some URLs like in the previous tutorial I showed you how we can make the request in the response part so like just for just for to be sure about this I would move to localhost colon 8080 says hello world and I showed you like you can create and girls as well so like in this we are going to create a URL to so first thing you need to is to move to your templates folder so these are the two folders which I made templates and Static so inside your templates folder you need you will create a new file and name it as index dot HTML and you can you make this file and open this file and what you are going to do this inside that XD index index dot HTML file you are basically create your first HTML page and what you are going to do is you will move the bootstrap website and you would go to the getting started then introduction and start an introduction and now you would first pick the starter template the god this will be very helpful you can copy and paste this insert then index.html so like you can see that it has the whole HTML structure and it has all the JavaScript libraries predefined as well as the CSS libraries as well and you can note one thing that these CSS files as well as the JavaScript files has been kept online so anyone can use this CSS and JavaScript files because these are predefined in bootstrap and anyone can use bootstrap to make your web application responsive okay I would change this title to learn Django and basically I would save this file and basically the title is this what you can see above here the like introduction bootstrap github pouso further proof that this is a your title so learn Django and I will change this hello world Django project okay okay so what you can do is you can move to your URL start py file and you can define a URL to render your page so just for example I would define path my first page and I would call views taught my first name so in my first page and I would give this a name my first page so I have created a path called my first page you and I would call the function my first page from views and I have this given a short name to this URL as my first page so this is showing me an edit and why is it because I have did not define my first page function inside the views so I will move to my views door py file so they're my first page it is taking a request as a parameter and this time like in the previous two tutorials I showed you that they can be various types of responses when is sh2 you could respond JSON response but this time I'm here I'm going to render an HTML page so I would say return return render request comma index dot HTML so so this would render the HTML page and when I will move to this URL so this will show me that page so I am inside my localhost and I will slash my first page okay so yeah it's an int a state so what you can see that it has rendered the first page now I am showing you two shortcuts the first one is control because you so this would show me the whole front end code so this is the first shortcut you can use the I will repeat control + you okay and the second one is you can use inspect element okay and you can see now the response or nature of this I can you show you that this is like chrome developer tool and you can use this to work with the frontend part of your project it is very good ok galaxy s5 iPhone 5 ok this shows a responsive nature laptop laptop screen so this would be laptop and so what I can do is move to Galaxy s5 and I would inspect this and I would element or styles I would change color is equal to red so this changes the color of this heading to read but this is for to only to have a view of your project but as soon as I refer because this is temporary you do this you can do some temporary changes to have a look but as soon as i refresh this way this is this is vanished so and so you can use Chrome developer tools to have a change look at your frontend part so I would continue with the lecture and I will tell you how you can work with the backend logic and integrate it into the front head part of it so thank you everyone so thank you