hello everyone welcome to the programming knowledge i hope you are all doing well today let's understand filtering of events in every game we did not have to handle all the events because there are often alternative ways of getting the information that the event might give you for example if you are using pygame.mouse.getpos you will not need to respond to the mouse motion event pygame dot mouse dot kit pos will give you the position x y of the mouse as we have seen already in the hello world program occasionally you also need to suspend the handling of certain event right if you were to play a cutscene movie between levels you would probably want to ignore any input events until it is finished right the pygame event module has a number of function to help you just do that you can block event from the event queue with the set block function let's uh take a mouse motion event to understand it better so we can pass mouse motion event as a parameter to the set block we can write uh pygame dot event dot set underscore block then we can pass here mouse motion if you pass in a list of event type all those event will be blocked so let's suppose i have to disable key down and key up event so we can put this to event in a list and pass it as a list to the set block as a parameter now if you want to unblock all the events pass the value none to the set block so if we pass none then all the event will be allowed or unblocked the opposite of setblocked is set allowed we select the event that should be allowed it also take a single event type or a list of event type but if you pass in the value of none it effectively block all the event you can ask pygame if an event is currently blocked with pygame.even dot get block which take a single event type and it return it is blocked or not now let's understand about uh posting events generally it is by game that creates all the events for you but you can create your own events you could use this ability to play back demos or similar the effect of cat walking across the keyboard to send an event you first construct an event object with pygame dot event dot event and then post it with the pygame dot event dot post the event will be placed on the end of the queue ready for retrieval in the event group so here it is a very simple function call you can call like pygame.even.event and you have to pass a certain parameters so the event constructor takes the type of event such as uh let's say key down followed by the values the event should contain since here we are simulating the key down event we need to supply all the value that event handler would expect to be there if you prefer you can supply this value as a dictionary as well so here like key is equal to k underscore space mod is equal to zero unicode is equal to space so here uh so here all this thing key mod and unicode i have discussed in the previous part of the video so if you find difficulty then please watch the previous lecture so if you find difficulty to understand then please watch the previous lecture of the events in addition to simulating pi game generated event you can create a completely new event all you have to do is use a value for a event that is above user event all you have to do is use a value for the event that is above user event user event is the maximum value that pygame will use for its own on event ids this can sometimes be useful if you want to do something in event loop before you can you go on to draw to the screen so this is an example of user event to respond to a cat walking over the keyboard so here cat on keyboard is equal to user event plus 1 because we have to take the value greater than user event which is the maximum value that pygm will use for its own event id right so my event is equal to pygame dot event dot event here i am passing cat on keyboard and message is bad cat and you here we have to post so pygame dot even dot post my event now the handling of the user event is done in the same way as the usual event that pigram pygame generates just we have to check the event type to see if it is matches your custom event so here you can see that for event in pygmy.even.get which is similar to which we have already have seen that if event.type is equal to cat on keyboard we can print that message event dot message so i hope you are able to understand how to handle events as well as we have seen how to filter out the event and how to create your own event and try to simulate the pi game event as well as you can create your own event using a proper pie game functions so i hope you are able to understand the event completely so in the next lecture we will see opening of a display we have seen already in the hello world program example but pygame has a variety of option for display so we will see some varieties of option available in pygame so i hope you so i hope you are all able to understand the today lecture and thank you thank you guys