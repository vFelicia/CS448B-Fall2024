hey everyone so today we're gonna do something new we're gonna display the text that the user inputs so basically whatever we type in we're gonna see that on the pygm window we won't use any new module it's just the utilization of the available modules whatever we have learned till now as per the program's requirements so let's get started so i'll import pi game first i'll write import pi game then pi game dot init to initialize it then i'll have my screen i'll write pi game dot display dot set mode and that would be 500 comma 500 then i'll also set up a caption my caption would be user input so i'll write pi game dot display dot set caption user input okay then i'll do the while true loop the game loop i told you last time that i like to make the basic structure first then do the rest of the code then write the rest of the code then i'll have my events loop i'll write for events in pygame.event.get if events type is equal to pi game dot quit i'll check the condition then i'll quit i'll call the quit function of pi game yeah then i'll update this entire thing i'll write pygame.display.update so yeah that's the basic code that's the basic three steps of any pygame program now since i'm saying i want a user inputs i should of course have an empty string to which i'll concatenate whatever the user inputs so let's let me take this user underscore ip as the variable as the empty string then i'll have my font because of course we need to take a font we are working with text and pi game so please remember how we display text on screen it would be similar to that so i'll write font equal spy game dot font dot sis font and you can take any font you like you can take georgia ariel calibri uh i have taken friend script right now and the font size would be 40. cool then since i want a rectangular box in which i'll input the text i will initialize this text box since i want to manipulate this later in the code i'll do the spy game dot i'll use this rect module i'll write pi game dot correct and i'll given the arguments the initial position that would be 75 comma 75 and the size of the box let it be 100 comma 40 so the width is 100 and height is 40 right okay let's not keep this 40 let's make it 50 because i want a margin of 10 of 5 each at above and below the text so that things don't overlap and don't seem to be clumsy cool then i'll have this active boolean that will tell me if i can start writing if i can start typing in the text box and what will indicate me this is this color variable so initially this would be purple but when active is true i'll switch this color to red so that it i can know that i can now start typing whenever i take my cursor to inside the text box i'll see i'll make this active to be true so how i do this i'll do this in the while true loop and in the for loop i'll check if my events type is mouse button now then if i'll i'll check if i have clicked my mouse inside that text box okay so i'll write if text box dot collide point and event start position is uh is is true so i'll make active equals true cool otherwise i'll make active equals false maybe you have clicked outside the screen or outside the box so then active should remain false otherwise it should be made sure if my cursor is within the text box fine and now if i've started typing so i'll write if events dot type equal spy game dot key down and if active is true maybe it can be the case that you have clicked inside the box and then clicked outside and then started typing so that would not work then you should not get any text displayed so i'll check if active is true and then i'll have these two other conditions if i press backspace so i'll write if events dot key equals pycam.cave underscore backspace i'll slice the string okay i hope you know about list list and string slicing in python so what i'll do is i'll make user the string this user underscore ipstring as a sliced string i'll slice the last character out of the string and how do we do that we mention the stop index to be 1 so the last character is removed now else if we do not press backspace we write a we give any keyboard input we concatenate that unicode okay so i don't need to make several cases for this that if i press this key i should append this or concatenate this to the string i would just write event start unicode so it is very convenient then i'll fill my screen with the color you can take any color i'll write screen dot fill i'll take pink and now it's time i set up the color and get my indications that i can start writing or not so i'll say if active is true i'll take the color i'll assign the color variable the color red and if it is not if active is false i'll write else color is equals to pie pie game dot color purple cool then i'll draw my rectangle so i need to see a box i need to visualize the box so i'll write pygame.draw.rect and i want the screen to be the surface on which i draw and then i'll have this color variable the color of the box then the parameters of this rectangular box are given by text box cool and you of course need to mention the split otherwise you'll see the entire box to be of the purple or red color according to the situation i don't want that i just want the border to be of some color fine then i'll have this surface on which i render my text so you can see i have not rendered it here above but i'll render it in the while loop because every time the user gives an input i want that text on the screen so i've rendered it here and not above outside the while through loop so i'll write surface surf is equals to font.render and what is my message what do i want to output on the screen it's the user underscore ip variable that string i want antialiasing to be true and the color of my text i'll take it to be orange you can take any color fine now let me get this surface surf variable onto the text box so i'll do screen dot lit and what i want to get on which surface i want to get surf this text on my text box and i'll have a margin of 5 units so that things don't overlap so i'll write text box dot x so i've accessed the initial x position x coordinate and added 5 to it and then i'll write text box dot y so i'll increase the y coordinate by 5 to have a margin of 5 units and then yeah then i'll also do this thing let me write the code first then you might understand i'll write text box dot w so i've accessed the width and i'll take the maximum of 100 my default width and the surf variables with so surf is my surface the text surface and i'll use the get width method to get my current width of the text and add 10 to it again to have a margin and so that things don't overlap so what i have done is maybe whatever the default size of my text box is you outgrow that maybe whatever the text you have input that's longer than your default box size so if my text is smaller than the width the default width fine no problem and if it is greater than the default bit it will take the width of the text cool and then i'll update this i've already written this and then i'll set up the frame rate since i've taken the clock object already i'll write dot tick and 50. fine so if i run this now i see a purple outline box and if i click i take my cursor inside the box i see the border to change its color and become red and i can start typing now i can type in anything and you can see after a certain length when the width of my text increases the width of the text box also increases so that's what it does this max function on the 38 line it lets you decide when to increase the box size a rectangular box size so everything is working as we wanted to we can type in easily and yeah that's pretty much it about this program i hope you understood whatever the code was whatever we wrote