hello guys welcome to the next video tutorial on Java programming for beginners in this video we will see what is the difference between array list and Link list we have seen both kind of list in the last two videos and now we will see what is the difference between them and when we can use them so let's see the first difference first difference say link list element insertion is faster compared to array list so whenever you try to add element or your frequent operation in your program is insertion then it's better to use Link list okay so when you want to use Fe frequent uh insertions or adding of element in your list then link lists are preferred now why insertion is faster in link list in compared to array list because link list are doubly uh link list so link list uses dou link list you can Google what is double link link list basically it means that it maintains two pointer one is right before the element and one is right after the element so the insertion is faster but whenever you try to add something to the array list it has to resize it size and it has to shift the element because uh it us uses index based list so that's why link list as is faster in terms of insertion in a same way whenever you want to delete something or your frequent operation is deletion I'm talking about frequent word here and I'm stressing on this frequent word because uh in normal condition where you have to add you know hardly once or twice or I mean not more than 10 times both performance wise you cannot measure but the frequent operation uh by frequent operation I mean somewhere around 10 to the power five addition or deletion or something like this so it's frequent quent right so whenever you have frequent deletion also link lists are faster than array list okay so whenever you have frequent deletion operation or whenever you have frequent insertion operator operation in your uh program then use linked list okay now when array lists are are good to use so whenever your frequent operation is searching in the list then array lists are better so array list search operation is pretty fast compared to link list search operation search operation means whenever you want to get some value from your list which is quite big and your frequent operation is searching inside the list for example your list is 10 the^ 5 Element so your list contain 10 the^ five elements and you want to get exactly the element at the middle of the list then this array list is faster because AR list Ive already said that it's indexed index based right and it's faster to get the index uh of the array list than to uh you know retrieve it using iterator because link list I already told you uses these W link list that means it uses double pointers and for that you need iterator but array list are only index based okay so whenever you have search operations you use array list but these search operation if they have frequent search operations right now fourth and last difference is link list has more memory overhead because link list work on pointers or doubly link list pointers they uh have more memory overhead and because array lists are you know index based uh list and they only uh you know contain or they only uses the number of element or addresses equal to the number of element that's why Aris consumes lesser memory than link list okay so link list has more me memory overhead than array list because in Array list each index only hold actual object right but in link list each node holds both the data address of next and pre previous node this is the basic concept of Link W link list which is the pointer which holds next and previous value okay so whenever you are concerned about memory then use array list okay so these are the four differ main or major differences between link list now how can we prove these four points what I have done is I have made a program here and I will try to insert 10 to the^ 7 element 10 1 E7 means 10 ^ 7 elements I'm I will try to insert into the list also and insert into the link list also so array list and Link list I will insert same number of elements and I will compare the time taken by them and then I will see which is faster and this is not a small number 10 ^ 7 is quite big right so I'm going to see how much time in millisecond it takes so I uh am measuring time using this current time in millisecond using system. current time in millisecond and then I'm printing the time using the current time minus the time uh I have recorded before this insertion in the same way I am doing the same for the link list and I will see the time taken by them okay similarly I'm trying to remove the values from my list so once I insert some value in the list I will try to remove the value and let's try to remove the value from the middle of the list okay so you can uh say 10 ^ 7 Let's uh remove the value from 1 e 1 E five for example so 1 E5 okay not the middle but it's quite random and you know uh it has to do lot some work to find this value right to remove it okay and then I will try to search some value in inside the uh list okay so these three operation I'm going to do and I will try to run this program and see what is the time taken by all three operations so now I get the insert result and deletion result and the uh search result so insertion you can see the result in insert operation array list take 6114 millisecond and in insert link list takes 1617 millisecond right that means link list is faster in insertion operation right now in case of uh deletion it's it should be a link list should take less uh time than uh this array list but sometimes uh it can happen but this operation I have was not doing frequent right deletion I have only called only once here right not I have done any frequent operation so only one deletion takes uh lesser time in aray list in this case but more time in link list but this if the remove operation is uh frequent then the faster will be the link list right so let's try to remove the first uh element itself and then see what happens so in removal once again arist take more time which is 11 millisecond and delete of a link list for the first element takes 0 Mill almost 0 Mill millisecond that is link list is faster for the removal also or deletion if you have frequent deletion right now in the third operation what I was doing is I was searching in the list basically I was searching in the list uh exactly the middle element in the list so this search operation gives me the results something like this whenever I try to get some value which is exactly at the middle or whose index is exactly at the middle of uh the size of the array then it the array list takes less time which is almost 0 millisecond but link list you see takes more time okay so this proves more or less our Point deletion and insertion link list is better but whenever you want to search then uh this is better which one link AR list is better okay so these are the difference between AR list and Link list I hope you have enjoyed this video please write comment and subscribe and bye for now