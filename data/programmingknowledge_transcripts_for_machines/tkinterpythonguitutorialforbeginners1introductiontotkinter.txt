Holloway's welcome to programming knowledge this is the first video of geo programming using kata in Python so in this video we'll be learning about a brief introduction to the subject of graphical user interface programming in Python so when it comes to your programming in Python kinder is a default toolkit available or a default library available to build some robust smallscale applications in Python so for example on creating a registration form and attaching it with a database those kind of applications so Hinda is not the latest and the greatest but there are other options too like pi qt5 and double x by thorn for creating fewer applications in Python but when it comes to the simplicity and the ease of use or kinto is far more easier to use and create a rapid applications so there are multiple bindings available for kinto for commercial as well as on small small scale applications so this is a overview enter introduction to inter parking programming and I'll just show you a small example how to create a simple registration form which will be shown in the later videos in kinder so this is the basic structure of how to create a basic window using the kinder module so there are multiple ways of importing kinder so as deep as kinder comes in it comes in default like and default library you don't have to go to the process of installing firepit so there are multiple ways of importing into one of them is input inter that's it and the second one is from printer import the widgets you want for example if you want a entry visit or a label or something like button you need to specify that besides import and the last one is in both inter star so when it comes to star it will import every widgets within the window library so from kinder import label so here they are importing label with it in the inter window so initially we need to take a variable for example a bruit variable which is inherited in each and every visit we create within the printer or window out in the application so here we are taking for example a route on a top application and storing on TK e capital T and K in brackets so that our route variable will be headed in every which is we create within the kinder window for example if you are creating route variable and storing the kinder object within that variable we need to inherit over here for humble here the label none here we are inheriting none that is the root in our case and we are naming the label as hollow world so here is the example as you can see hollow wall is a table if you don't use any kind of placement argument such as back over here so PAC is one of the in Bill method for placing that widget within the gy window boy there are other methods too such as place and grid so what that does is that back cool if it doesn't take any argument it will take the default argument center and place a widget in the center and when it comes to place and grid place is based on XY coordinates and K is based on column with rows and columns so it will be covered in further videos and this widget main loop so when executing the printer and creating the window you need it is necessary that to typing main loop to execute that window in a proper manner so these are the events and bindings for Mouse and key events when it comes to Mouse based events such as on clicking a button or entering something into an entry field you can be used this events with the function which you need to get executed and when it comes to keyboard events these are the events bottom over here return is for enter and key shift up etcetera so this will be covered in the later videos and this is the event handling or when it comes to you and handling a small example such as if you want to if there is a window created with a button which say set quit for example if you quit that if you click on that button quit there is a function called s quit which is used for quitting the or exiting from a kinter window so if you click that button in the kinto window we'll stop executing and that main loop will be ended so this are the binding functionality which you can use in kinder which will be also covered in the further videos so these are the some examples of widgets which you can use within the kinder applications like example canvas check buttons radio buttons frame menu buttons panels cava etc so this is the basic outgroup of a widget if you create it in kinder so let me just show you a small form which are three already created so as you can see over here this is small registration forms with multiple which is such as label entry field this is the radio buttons list box and check box and this is the button submit so in further videos we'll be looking at even handling in more depth when it comes to Mouse events such as if you click some I click the button submit how it interacts with the database and etcetera so this is how you can create a jungle widget application in kinter so some of the advantages of winter is that it is accessible portable and available as you can use those applications in almost any operating system available and the approach of creating the application in kinder is more in a layered format for example initially you create a route that is a parent object of winter then creating the widgets and ending into the main loop etcetera the some of the drawbacks of kinder is that when it comes to handling multithreaded applications such as when you want to execute something or example if won't execute so two events at the same time which shows an error and it doesn't handle those kind of situations very gracefully and when it comes to building large applications it takes time to execute so it is a bit slow so this is the link for downloading the Python with a little version that is frequency 1.2 it is a precursor and in the next video we'll be looking at how to set up tinder in pycharm and how to generally create a window without further videos so thank you you you