hey everyone we have covered a lot in pi game by now but there are some modules that are useful and are yet not discussed so in this video first we'll see some examples of draw module we haven't used the polygon and arc function yet and then we will talk about the cursor module we will also discuss a program that will be a base requirement in some of the video games so let's get started with the draw module i have this regular code a very basic one and if i want to draw a polygon the coordinates of the polygons vertices are required these coordinates make a regular pentagon here the screen is the surface you want to draw on and green is the color of the shape you can give as many coordinates as you want and it is not necessary that the shape should be regular then to draw an ellipse you will give in the rectangles dimension and coordinates around which you want to draw the ellipse in case you specify a square's dimension in place of a rectangle you will end up getting a circle this is basic maths you can also draw an arc using the draw module for that you have to specify the rectangle's dimension basically an arc is from an ellipse or a circle so to draw an ellipse we specified the base rectangle's dimensions and hence to get its arc we will do the same cool along with this we also need to specify the starting and ending angles these angles are in radians it is 90 degree to 180 degree please be careful while working with the units while rotating an image the arguments of angles were in degrees okay please don't get confused now we have used the line function in tictactoe but this is the lines function it allows you to draw continuous lines deviated or undeviated passing through these mentioned points five here is the thickness of the line this false here is used for not getting a closed figure if i make this true i would have a closed figure if possible now let's run this and see if we get the desired shapes so yeah i have my polygon i have the pentagon i have this zigzag lines made by the lines function i also have my ellipse and i also have my arc you just need to know that the arc was taken in an anticlockwise direction from 90 to 180 degrees and yeah that's pretty much it now let's move on to the cursor module so we have three types of cursors the system cursor bitmap cursors and color cursors the system cursors are constants available in the module we can have cursor hand cursor no arrow crosshair and a lot more there's a complete list of it and this is how you create a system cursor to create a bitmap cursor you specify dot pygame.cursor.arrow or dot broken underscore x or diamond this would be a black and white cursor that uses the bit mask arrays and to create a colored cursor you need a surface so we have a surface of size 10 comma 10 we fill the color of the surface with sky blue or any color you like it's the color of the cursor and then you use the cursor class you may note that this cursor class of cursors module is a good example of object oriented programming this 5 comma 5 is the hotspot of the cursor and needs to be within the surface cool i have initialized the system cursor and this is just a way to see both the cursors if i click on the mouse i would see the bitmap cursor and if i input alphabet c from the keyboard i get to see the colored cursor so this was the cursors module it was pretty simple let's run this and see the three cursors so initially i can see my hand cursor if i click on the mouse i see this broken x which is a bitmap cursor and if i input c from the keyword i see my colored cursor cool so these were the type of cursors and now let's see the program i was talking about in the beginning of the video so this program lets you move a picture along your cursor and it is very useful when you want to move a figure in a video game using mouse so for that you would need to load the image we have done this many times now it should be easy to understand and then i have my rectangular object for my image i have this moving boolean to save the cursor state now in the events loop if my event type is mouse button up like i have released the mouse moving becomes false if it is mouse button down then moving is true and i would check if the events position my cursor is inside the image surface that is the wrecked object and if the mouse touch is in motion and moving is true i would move my rectangular surface along with my cursor or mouse that is my event so if i run this i should see an image that would go that would move along my cursor let's see if that happens so yeah i see my image moving along with my cursor as i move the cursor the image moves along with it and this is very similar to the moving object program that we did but that time we took inputs from the keyboard this time it's the mouse we are using and that time we used a figure we made our own figure using the draw module the time we are moving an image and we have loaded an image so this was pretty much about this video thank you