hello and welcome back to the new video of the Java tutorial Series so today we'll be covering method overloading in Java so what is Method overloading if a class has multiple methods having the same name but there are different differ in parameters okay then it is known as method overloading if the two methods are there which names are same for example sum is the name of the two methods but so that so how we can defer the two methods okay so when the parameter one if the one method is accepting two two parameters and another one is accepting one or either more than two not not exactly two then it is a type of a method overloading in Java okay where the same name method has the same name but they differ in the parameters they are accepting okay so if we have to perform only one operation having the same name or the methods increase the readability of the program okay suppose you have to perform a addition of the two given numbers but there can be any any number of the arguments okay if if you write the same method such as int a uh method name is a and it is accepting two parameters of type integer integer okay for the two parameters and another one is int B which is accepting as a three parameter int okay for three parameters then it it may be difficult for you as well as the other programmers to understand the behavior of the method because it's it has this it has the same name differs okay so we perform the method overloading to figure out the program quickly okay and what are the advantages of the method overloading method overloading increase the readability of the program okay and so let's just talk about the different ways to over overload a method okay so there are two methods uh by which you can overload the method method overloading by changing the number of the arguments uh the method is accepting and the method overloading by changing the data type of the argument which is accepting okay so let me just quickly go into my IDE we'll cover this popular question also uh but but let first we will code C1 example of the method overloading then we will see some popular method uh questions sorry okay method overloading okay let me increase the font size and first we will see a example of the method overlading by changing the number of the arguments okay let me copy this and I will give it a comment okay now okay so let me take one example okay uh what I can do is I will declare one method name as int add and it is accepting the two parameter let's suppose into a and B okay and inside this I'm simply returning a plus b nothing else okay and I will introduce one more method which is inside this same class which is static int add same name of the method here you can see add is the method name and here also add is the method name but what I what I will do is I will change the number of the parameters it are accepting okay now int a comma int B comma in C and I will simply return a plus b plus sorry C fine okay I will I will return this okay okay so now I will create my main method and inside my main method I will print add off uh let's suppose 11 comma eleven okay and now again I will print one more statement uh once again guys okay so I will just print call another method now I am giving 11 comma 11 comma eleven here you can see us method name or same add and add but they differ in the parameters they are accepting one method is accepting the two parameters one another method is accepting the three parameters okay so this is the example of the method overloading changing the number of the arguments we are passing okay and simply I will run this class and you're guessing 11 plus 11 that is 22 for the first print statement and another pin statement 11 plus 11 plus 11 is that is 33 is getting printed on the console okay so another meth another way to achieve the method overloading is changing the data type of the argument okay so I will just copy this and paste it over here okay so now let me comment this out okay now I will again I will have to declare one int method okay I will copy this and I will paste it over here and let me uncomment it okay one add method is there which is returning uh addition of the two methods two numbers A and B and one another method is there name is static double add and it it accepts two parameters double A comma double B okay and now it will return the addition of this two numbers okay okay now I will write my main method and inside my main method I will print call those methods add but I had to give 11 comma eleven and for another print statement I will call another ad method but this time I will pass uh 11.2 comma 11.5 11.5 okay so here you can see uh two same method same two methods having the same name and same number of parameters they are accepting one add method is accepting to two parameters integer a and integer B and another uh method which is accepted the two parameter that uh that is a and b but they are different in the return type they are returning okay the first method is returning uh in integer and second method is returning and double so this is a way we can achieve the method overloading by changing the data type of the argument okay argument here in it receive it was receiving in the integer format and here it was receiving the double format okay and so now if I run this class I should get the okay 11 plus 11 is 22 and 11.2 plus 11 11.5 is 22.7 so these are the two methods by which you you can achieve method overloading in Java one one is changing the arguments and another one is changing the data type of the argument okay some popular question which is asked frequently uh during the interview versus uh div of method overloading one is why method overloading is not possible by changing the return type of the method only okay so in Java method overloading is not possible by changing the return type of the method only because of the ambiguity let's see how the ambiguity May occurs okay so I will take one example uh let me go let me get into my class I will increase the font size and here I will create one same method same example I am taking let me print okay and now I will be writing the same double method also okay I will just copy this and paste it over here and comment this okay uh so all these steps let me introduce a new class adder and inside this I will write these two method okay and now inside this I will write my main method and main method I will simply print adder sorry editor dot add 11 comma 11. okay so here you can see I've created one two methods uh int add and double add they are written there the return type of the two methods are different that is inth and one is it returning a double okay and now if I come here and try to print this statement add a DOT add 11 comma eleven it will create an ambiguity why so here you can see int and IntelliJ IDEA is telling me there's some error and what is what's there add int is already defined in Adder so it creates an ambiguity for the Java it it for here you can see we are calling this add method 11 comma eleven but the return types are different one is double and one is integer but the number of the parameters they are accepting are the same and the type of the parameters they are acting accepting is are also same it creates an ambiguity for the Java programming language and it can't differentiate the two methods are there of the different types okay so this creates an ambiguity and one more question is there can we overload the Java main method yes by Method overloading you can have the number of the main methods in the class by Method overloading but the jvm calls main method which receive the string array as an argument only okay so here you can see we are passing this is the main method and jvm received this main method and our program execution starts from this line number 38 and it accepts the arguments of type string array okay here you can see we are passing a argument of type string array and let's this is how you can overload the main method also in Java okay so thank you for watching this video