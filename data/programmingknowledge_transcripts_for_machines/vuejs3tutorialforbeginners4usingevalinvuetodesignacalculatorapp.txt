hello everyone welcome to new vhs tutorial in today's tutorial we are going to design a calculator app using view js using the eval statement so let's take this one this time i'm using sublime text editor so this is a very basic component i have created and this is my app galaxy component and it's like this is my this is a vue.js component and i have mounted this on the id that is my app calc and this is the calcio.html and this is the id given below so this is like a very basic component i have rendered on the front end and it is very much common to my previous uh like tutorials how i rendered them on the front end so it is very common and easy and it's very basic so i've already made this so that it saves our time and we can already get started we should we could have a quick start to a tutorial so you can move to the project directory click on this html page right click inspect and this would return you the on console that you are running a development builder view so make sure to use production bit so that's perfectly fine so no issue so what you can do you can make a form and inside this form you can add so i'm using some line like for this time like it's like i've already have a huge font size so it's to give you better visibility so now in this you can give input input and then the type is going to be text and name is equal to query and id is equal to query and we are going to remodel this we model this is equal to query so you can you can remove this to avoid any confusion like it's not needed as of now so you can remove this and what you can do calcium.js so now what you can do you can build query and give empty parenthesis okay now you can refresh the page and failed to drive direct model okay i made a spelling mistake so this was v model and you can you can refresh this page so it works perfectly fine and now what you can do that i have a data query which is an empty string i have already mounted this on the front end and what i can do i can type for you using the paragraph tag you searched your query is this query inside the parenthesis which would give us the value so now let's refresh the page and your query is 2 plus 3 into 5 so this works perfectly fine okay now okay i forgot to put an r your query is this now for the same what you can do you can put input type is equal to submit and the value you can give is to calculate okay and you can give a hr tag below so this was just for demonstration purpose like to give an overview and here it works perfectly fine so your query is 2 plus 3 star 5 now if i want to like if i want to evaluate this query so i should use an eval statement so i should use an error statement and how can i use this is first i need to define a form and the date submit dot prevent is equal to my my method so this should call my method there in uh like my method or you can define this my eval function okay my eval you need to define this my eval here my eval and this is a function which is going to be called and what you need to do okay so you need to define my eval function and what you need to do console dot log this dot query okay so first we will just console.log this dot query so let's type this are we getting at the back the at the mounted part or not two thrusts two plus three star five calculate and here we see we have already got the query that is two plus three into five so we've already got this so it's working perfectly fine so what we can do we can evaluate this using the eval and let what we can do console.talk uh let's we should take an another parameter that result and we can also keep this as an empty string and what we can do uh we can assign this result this dot result is equal to eval this dot query okay and then we can your query is this and what you can do simply you can put this this is equal to result i hope this is perfectly fine so let's refresh the page i can already copy this and refresh the page so 2 plus 3 star 5 is equal to 17 so this is how we can use this so we can now remove this console.log statement it was just for the debugging part now we can store these results and for storing this result we can use an added data structure that is calculations and this is the calculations part and we can push this the result after query this dot calculations dot push we are going to define a push function and what we are going to do define a query a query so we are defining a json object so that's that this dot query and we are going to define a result and this is going to be this dot result and what we can do uh we can also push one thing uh like time okay and this is date to string so i hope this works perfectly fine yes so let's refresh this page and what we can do we can render this on our front end calculations okay so let's refresh this page 2 plus 3 star 5 so we are storing this and this is already showing us the time then let me change the query always storing this so we are already storing this calculations and yes so this works perfectly fine and we can use a v for loop on the front end so for that we can use unordered list and we can use li v for item in calculations calc calculations okay so we can define we can close this and we can define item dot query is equal to item dot result and we can define item so this is calculated.js and we can have item dot time okay so let's refresh the page we can click two plus three okay two plus three is equal to five calculations okay i made a spelling mistake this is calculations yeah now perfectly one two plus three yeah so here we maintain the history plus the result we make another calculations yes we make some another calculation so this is how we make calculations and storing them in history so this is how we design a calculator app and we can also use the last result and we by indexing so we can modify them when we click on the last result so last could also become available so this is how we manipulate data in view js and this is a simple design how we can design a calculator app using the power and maintain the history as well so you could integrate this with the backend and store this history in a database as well so thank you everyone for watching this tutorial i'll catch you in the next tutorial thank you very much