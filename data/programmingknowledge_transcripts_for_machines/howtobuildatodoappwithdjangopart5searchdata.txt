hello everyone welcome to programming knowledge so this is the 3034 django series so I again will commute programming knowledge so basically in the tradition tool we're going to continue with a todo app so basically we will perform a search query based on title so title of this video search data so basically what data we have in the call to do app so basically I'll show my app so we have add list all to do and this is for favorability so basically in list all to a section we have all the tools so basically I can add few more as well so let me do some like I added on a let me do Django so I have it on Django then Django priority I will give it to number one top most priority so here you can see I have on Django then or I'll do another one add another one Python and I'll add on Python again Python I'll add priority again to number two okay or maybe one also so here I've added Python also so basically if you want to search our or two rules so we can form search query so for that I'll refer this queries head so the one I told you which is going to be very important for this is going to it contains so I'll move to that contains contains contains I'll move to contains okay so for this contains yeah I am so no it's fine okay so basically we have to contains so yeah here you can see this one yes so object store filter and this is this is it this contains mean just this keyword is being look in this headline okay so so forth if even well we will design the same thing for the title one so let's get started with this so what we can do we'll move to URL short py5 and then we will define a path then search data then I will find views dot such data okay and name is equal to search data so basically I defined search data now what I can do so I'll define in my views define search data and it will take a request as a parameter and we do what I'll try to then we'll perform the operation so till time back into the past so basically people we're going to do the pages of query then I'll move to my index dot HTML page so this is sorry by title okay so I will give it to person URL okay search data okay so this would perform my query to that and then this is the form so here you can see so here you can see this I want to show you one thing okay let me do right click inspect so basically what I am trying to show here that this thing is a form okay and this whole thing you can see yeah so key yeah so here you can see yeah this is a form which is being highlighted now this to do title to do title to do description to the priority this is a formal in itself so for that form to submit this will be referred to the add button and for this form it has no buttons we will create a button for this form okay so sorry by title is a form in itself Plus this is in a format set in itself okay so for that what we can do we will move to that search by title search data and we will create a button button height is equal to submit name is equal to 4 that will do a button type so the submit and we will do submit or such so let me do search query bucket search right search okay and now for that we can do class is equal to button button primary okay for that we'll and style and define a style is you to display block and margin0 okay so this would define a button to the center okay let me do one them so it could also give put top margin here so when i refresh this page here you can see and I have a search button fine now then when I move here so to search the to really see you see a see if it's working fine I'll define a queue a diffuser to request sorry request dot you get query and I'll define it as HTTP response of cube so let me move to my page and refresh this and I will type click it okay the crl type CR so yes it gives me as a shitty forms of CR search works fine okay now we would render the these two two objects or not frontend so basically we can do what we can do for will okay I will show you one thing also we have contains so basically this is equivalent to even last time I showed you contains this one this one this one this one yeah okay yeah yeah I wanted to show you this thing so case sensitive containment this is contains so basically there is a difference slight difference between this this contains and I contains so basically here I stands for insensitive so this is case sensitive and this one is case insensitive so this one this one I wanted to show you and this is equal to this SQL query where headline is person this evil so okay so basically this is this is a small difference I want you to show you between the contains and I insensitive contains so basically there is a difference of this keyword I so we can move to our application now so what we can do so I'll define my dictionary I will define a dictionary then I will return render okay then request then list dot HTML okay if you want to show the result in the list itself so basically we are referred to the same template again and again then context is able to my dictionary this is pretty much same as above but here a difference will be so what we have all two rules okay for that we have to do dot objects dot filter okay then what we are going to do filter and now we are going to define title so basically we will move to model sort py file so this is the title world we are going to use title double underscore we will define double on the scope contains is equal to Q okay so I hope this was fine so this is we are referring to title to have this okay so let me do one thing I'll make a search query so if I just type SIA then we have cricket okay so it match my query so let me do wonder it is told to do so cricket 89 so I'll define a cricket so see this cricket cricket cricket and then 90 so this is a different form working okay absolutely fine so so this is created 90 then I define another one click it then 91 so when I should type C R so it should return all the tickets with 89 90 and 91 then even I had to solve a priority but pokayoke is a sorry for this okay we'll work on this but till now we can this is a well I'll clear this so basically this was sort data so it referred to all tools if it has no filter yet okay but when we dis research data so I'll do do this again I'll define cricket and now I have 89 1991 okay so we will next time we'll try for the update operation so okay we'll check enough another one then let me take per type B a so basketball would be so this is basketball okay and this is BA refers to here as well so it is ver referring to the BA in the basketball and football okay ba so we will define that you do another okay you can type the query here as well fo put bolts for this would be returned football only and that you type Papa so this wouldn't match this record survey ordered by order Y so this looks absolutely fine so we can do for another as well let into DJ will put it turn with Django and py this will turn with Python absolutely working fine okay so thank you guys thank you so much I'll catch up in the next curve so the next one we are going to do the update operation