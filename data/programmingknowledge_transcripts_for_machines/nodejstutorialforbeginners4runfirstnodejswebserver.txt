hello guys welcome to the next video on node.js tutorial for beginners now in this video I'm going to show you how you can create your first hello world project using node.js from start to end so when we were installing node.js we have seen how we can you know just copy and paste the code and create a simple node.js project but we will see in this video what this code means and how we can create a very simple hello world node.js server so let's get started I will be using Windows for this but you can you know do this same on your Linux operating system or Mac OS plus I'm using the Visual Studio code for editing my code or as an editor but you are free to use any other code editor which you please to use so what I'm going to do first is I will just open the you know folder in which I want to create my project so for example this is the folder where I want to create a project on Windows simple you know thing is you can just press the shift button and right click on it and you can open the command line in this folder by this method so just press shift right click and just press this option which says open command window here which is going to open the command window in this folder right now here what we need to do is we will create first of all our for example up folder which will we will name it as HelloWorld for example so I will just write mkdir HelloWorld now or let it be Hello right and press Enter this is going to create this folder right and then we will go inside this folder so CD hello and we are inside this folder so let's go inside this folder and in here what we will do is we are going to create a file javascript file for example so I will do this by using Visual Studio code so if you have followed my last video in which I have shown you how to install Visual Studio code you can just type code here and then type dot and press Enter which is going to open visual studio code in this folder so it's going to open visual studio code inside it will be you know opening this folder also for you right now inside this folder let's create a file so I'm going to create a new file here and I'm going to name it as so let me save this file as for example app dot J's file okay press enter and this is going to create your app dot JS file now let's start writing some code so first thing here we need here is wire HTTP is equal to require so just write require and we need to require a module so I will tell you what the module is so we just need to write HTTP here and a module is something like a library so it does what classes do in objectoriented programming is so it's for example whatever you do in C++ you just include a library inbuilt library for example iostream or some other libraries or you what you import in Java you import some libraries in order to work with those libraries in Java similarly modern node modules are the way to import some already built code in nodejs and we can use this code so there's such a module in node.js which is already inbuilt module which is HTTP and we need to create the instance instance of this module using require so require is like include MC plus plus or import in for example Java right so after requiring the some HTTP module we created an instance of HTTP right now the next step is we use the creating instance and we will call a method called create server or to create an instance of this server right so just use for example HTTP and then we will call a method called create server so just write create and so something like this okay and inside these brackets we pass one function now in JavaScript if you know we can make a anonymous function let's create a function here and then we will see what is an anonymous function so for example I will just write var and for example I will just write the name of the function so if you foo for example right and then I will just write function and we don't need to give any name to this function because we want this function to be anonymous and we will pass two arguments here response and request so first will be for request for example and second argument is the response so you can give any name to these argument I'm giving it according to the usage which we will pass here as an argument so you can do something like this or you can you know use a full name for example request or response it doesn't really matter right and then you can just create this function so this kind of function doesn't have any name so they are called anonymous function and then you can pass these functions here right so this will be your function you are passing or instance of function you're passing inside this creates over method now most common you know usage of this kind of anonymous function we don't do it something like this but instead of this passing the instance you can directly paste it something like this so you will most see this kind of code in node.js so just pass this anonymous function inside these brackets and you will be good to go so there are both the ways are correct for you right now inside this function we will just take a request and the simple thing is to send the response right so first of all on which port or on you know on which IP you are going to run your server for example so there is a function so just go I outside this you know function and just call a function called listen so just write listen function and whatever number you will write here this will be your port for example you write 3000 here this will be the port on which your you know serval will run so it will run on localhost obviously and it will run localhost 3000 port ok listen on 3000 for port you can do something like 80 81 in you know whatever port is available on your you know computer you can use this for sport so for example I use 3000 and the next thing here is we will take our response variable so just use this response variable and then call a method called end here okay and this is the basic you know thing you need to do in order to you know reply whatever client is recommendable client is you know requesting from a get request HTTP request for example right so we will send for example hello world here so just write hello or hallo node will be more appropriate right and if you want you can just give this line break here also so this is it this is the simplest server you can make using no cheers and if you want you can just log you know show the user that you have created this server on this board so you can just write for example console dot log and then you can give the information so for example I can write server is running on for example 127.0.0.1 port 3000 okay and it will run on this port and obviously you need to write HTTP I hope you know what this is so HTTP colon slash slash something like this right and if you want you can do something like this also and then save your code and open your command line once again and you can see it has this file and you can run this file using node and then the file name which is app dot J's press ENTER and you can see it will give you this kind of alert you can just allow on your Windows operating system which is okay and it shows this message which we want to display from here so it's showing this message that the server is running on this port so let's see let's open our browser and let's see if it opens or not so you can see here this code is running so our service is running on 127.0.0.1 and it's printing hello node right so this is the basic you know code for the server so what we need to create a server and instance of HTTP module and then this method which takes our anonymous function which have two argument request and reply or response request in response and whenever request comes on this port you just reply with this message which is hello node for example now to inspect this code you can just right click here and you can just click inspect element here on Chrome also I think this is the same thing and you go to network here so something like this here network and then when we reload our server for example you can see there is a request get request and it's requesting this IP and this port is sending get request and in the reply we are getting the status code 200 which is okay whenever you are you know request on cat you are supposed to you know get the 200 okay reply which is a correct reply from the server right now this is the default so this reply 200 will be sent automatically but if you want to be sure you can just write response dot right head so just write write head and then it takes a few arguments so first is the reply code which is 200 which is also a status code or an HTTP if you don't know what is this 200 just search for HTTP status codes right and you will see what this means is and then the next argument will be an object which contains two argument once one is the content type so just write content type and content type will be what kind of you know reply you want or you want that client to receive so content type let's say it's a text and plain so something like this not this first plain okay and then close it okay and then once again we will kill our server and once again we will run our server and then we will refresh our you know request and it's the same no change here but this time we are making sure that we are sending 200 on the client from the server using this code if you for example send 201 from here and save it and once again run your server so let's kill and run our server once again and once again refresh our code you see you get the status code to 0 1 but this means different so this is not a good practice whenever you are using get requests you don't want to send to 0 1 but because the meaning of 2 0 1 is little bit different which is generally used in post requests so you know just search for HTTP status codes and you will be you know good to go ok so this is how you can write a basic server using node.js in the next video we will move forward and so please rate comment subscribe and bye for now