hey guys welcome to the next video on open CV tutorial for beginners using Python in the last video we have seen how to use mouse click event in open CV using Python so we have seen how we can create a callback function which listens to a mouse click event and then how to use this callback function using the set mouse callback method now in this video I will show you some more examples about mouse click event so the first example I want to show about drawing point and then connecting points using the line so to start with I'm going to just remove this if condition for the lie right down button click event and every time somebody clicks the left button down click event of mouse then what I want to do is every time the mouse is clicked down I want to draw a circle very small circle and when he clicks on the next point then I want to join those two points using a line so for that I will need a CB to circle so I'm going to remove this code which we don't need right now we just need this condition which listens for the left button down click event of Mouse and then what we will do is we will just use CB 2 to draw a circle so we will just write dot circle and first of all this circle method takes the image so we are going to pass the image and then the second argument is the coordinates x and ycoordinate so we already have x and y coordinate using this callback function with the second and third parameters and then the third parameter we me the radius so I will take the radius three which is like very small which will give you effect like a point on an image and then we can give the color so let's give zero comma zero comma 255 and then we will give the thickness now the thickness I'm going to give here is minus one and you might already know what this minus one do so this minus one whenever you give as a thickness it fills your circle or any closed shape okay so your closed circle will be filled with this color which you provide here now next what I want to do is I want to create an array of points so I'm going to just declare a variable called points and initialize it with an empty array now this empty array a variable we can use inside our callback function and what we are going to do is we are going to just add or append every time this mouse is clicked so I'm going to just call an append method here and then we are going to append the X and y coordinate to this points array so we know that where this mouse is clicked and we are saving the coordinates wherever the mouse is clicked in the form of array now in the next step what we will do is if the mouse is clicked more than two times so we can just test the length of this array which is a point and if the length of this array is greater than or equal to two because the first click will be only a point so we cannot connect this point with a line but when we have two or more points then we can connect those points with a line right so if yes points are a length is greater than 2 then we are going to just create a line between those points or the circles in our case I'm going to just call CB 2 dot line method and first argument here will be image the second argument here will be the point 1 so the coordinate of point 1 now we want to join the last two points right so we are going to just use this points array and then to get the last value of an array we use minus 1 here so here as an index we will give minus 1 which means the last element of an array and then we will join the second last element of an array so I'm going to just give this will be points variable not print so let's give the points variable and then we are going to pass the minus 2 here which will be the second last element so last and second last element we want to join and then the next argument will be the color so let's say the color we want here is 255 comma zero comma 0 and the next point will be the thickness so V will gave the thickness of 5 here and then we will show this image using I am show method this code I have already shown you in the last video so I will not explain what this code is doing if you want to know more about this code you can see the last video and this time I will use the numpy zeroes array which will be a black image so let's run this script and let's see what happens so I'm running the script and now I click on some position on this image and you can see this red circle is created the circle is created using C v2 dot circle method and because the radius is three the circle is very small and because the thickness is minus one the circle is filled with the color which you provide here now we have said that if the point is only one then we don't want to create any line if there are points which are two or more then we want to connect those point with the line so let's click here and you can see point one and point two are connected with a line I click here and you can see the last and the second last points are connected with the line that's why we have taken this minus 1 and minus 2 argument which means the last element of the array and the second last element of the array so when I click at any point it will be now connected with this blue line so this kind of line drawing you can use in satellite images where you want to connect two points together with the line now let's see the next example which I want to show you so in the next example what I want to do is I want to first of all read an image and then I want to click on any point on the image and then I want to show the color of the point which on which I have clicked using a second window so for this instead of using the numpy array which is the black image I will use the normal image which is the Lanner dot jpg image and now I will just remove this code from here so first of all I want to read the BGR channels so first of all I will just declare these variables first is blue we have the image and in the last video we have already seen how we can get the BGR channels because we have the x coordinate and the y coordinate and we also know that blue is the first channel so we used the index 0 here to get the blue channel from this image at this coordinate which is X and by same we will do for the green channel so green I am G and then X comma Y and then the channel index will be 1 here and then we will just get the red channel from this image and now what we are going to do is we are going to just draw a circle on this point where you will click this mouse down button click event so I'm going to just write CB 2 dot circle and now I will not explain the parameters because you might already know what these parameters are in the next line what we are going to do is we are going to create numpy zeros image and then we will pass our BG our channels which we got from the particular point on an image so let's create an image so I will just say my color image and then we are going to just use and P for numpy and then we will just call a zeros method here and it takes 3 argument in the form of this list which is the size of your image let's say this size will be 512 comma 512 and the channel will be 3 channels and then the next argument will be the data type so NP dot you in 8 so we have a black image using this number 0 and now we want to fill this image with the BG our colors which we got from the particular point of the image so in the next line what we are going to do is we are going to just use this variable and then we are going to just write this kind of notation this means we want to fill every channel or every point of this list and then we will just pass our BG our channel values which we got from the image so blue green and then the red channel values we are going to pass so this will give us the BG our channel which will be the color of the point where we have clicked and now we have the new image with the color so we can show this image using a new window with let's say this is the color window okay so this is how you will get the new window with the color on which you have clicked so let's run this code and let's see what happens so I'm going to run this code and you can see this is the image which is the colored image let's see I click on this point and you can see the same color on which I have clicked is opened in the next window let's click here on the Hat you can see it's going to give you the same color on which I have clicked let's click on the eyes and you will get the same color on which I have clicked let's see what happens when we just load a black image instead of this colored image so I'm going to just use this numpy zeroes image which is the black image and let's run this code and now whenever I click on this every time I click on any point it will be the black color window which will open so this is how you can use some examples to understand how mouseclick events can work and you can use them to develop your applications so I hope you've enjoyed this video and I will see you in the next video you