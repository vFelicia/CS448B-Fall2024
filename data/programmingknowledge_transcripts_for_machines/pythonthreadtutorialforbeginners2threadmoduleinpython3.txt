hey guys welcome to the next video on Python thread tutorials for beginners in the last video I have given you a brief introduction about threads and threads in Python in this video we will discuss about a module called thread module now if you remember in the last video I have told you that thread module is considered as deprecated in Python 3 but if we want to use thread module in Python 3 we can still use thread module using module called underscore thread and this is for backward compatibility so I just want to give you a brief demo about thread module in Python 3 so you will have some idea about thread module in Python 3 so let's get started so first of all in order to use thread module you need to import it and then generally you will write thread but in order to use the thread module in Python 3 you need to use the underscore thread here okay so thread module is not directly available but it's available using this underscore thread module and for printing and giving some delay to our functions we are going to import a module called time now using thread module it's possible to use functions in separate threads so we are going to create a function and then we are going to execute this function in separate threads so let's define our functions and I'm going to name my function as print underscore epoch and if you don't know what is a pape it pork is the start of January 1st 1970 and we are going to try to print the number of seconds from apoc till now and inside this function we are going to provide two arguments first is the name of you're a thread so I'm going to just write name of thread and the second argument we are going to give is the delay okay so this is your custom function you can provide any name here and any number of arguments here and now inside this function first of all I'm going to create a counter so I'm going to just write count and I'm going to initialize this count with zero now inside this function what I'm going to do is I'm going to loop around and inside the loop I'm going to provide some delay so we will be able to see the thread execution so let me just provide the while loop here and we are going to just check whether this count is less than three and inside this while loop we are going to sleep for some time using that time module so I'm going to just write time dot sleep and we are going to just pass this delay argument inside this sleep function so I'm going to just write delay here which will be the delay in seconds so for example if I provide the delay of 1 then our while loop will sleep for one second now after this we are going to increment our counter so I'm going to just write count and then plus equals 1 which is going to increment the value of counter by 1 now after this in order to see whether our thread is working or not we are going to print something so let's print something using the print function so what we want to print so let's say we want to print the name of the thread whatever name we will provide for the thread and then I'm going to just give some indicator here let's say this is some line and then we are going to print that time since Apoc so in order to print time since epoch we will use this time module and then we just need to use the time for inside the time module so using this print function we will know which thread is executed and at what time it's executed so now we have our function and now this function we want to execute inside the thread so in order to execute this function inside the thread first of all I'm going to use this thread module and there is a special function inside this thread module which is called a start new thread function so I'm going to use that function so let's just call this function which is start and discord new underscore thread now if you hover over this function and when I press ctrl on Windows or command on Mac and then I hover over this function you will be able to see the signature for this function so this function takes three arguments 1st argument is the function which we want to execute inside the thread second argument is args which we provide to our function as tuples so 2nd argument we need to provide as tuples and inside this tuple we will provide the number of argument which we want to provide to our function and third argument is that kW adds option and this kwr is an optional dictionary for the keyword arguments so let's provide the function name first of all and our function name which we want to execute is print underscore epoch and you need to remember that you need to provide this function name without any parentheses okay so just provide the function name as the first argument second is the number of arguments so we have provided two arguments for this print a pop function so we need to give these two argument in the form of tuples so first argument let's say is the name of the thread so we are going to just say that this is the thread 1 which will be the name of this thread and the second argument is the delay in seconds so let's say I want to provide 1 second delay in the while loop so it will sleep for one second this delay we are providing in order to see the thread execution because thread execution is so fast that it will be difficult to see the execution of threads without this delay now I told you that the third argument is the optional argument so we will not provide the third argument to the start new thread so this statement is going to create a new thread and it's going to execute this function inside this new thread so till now we only have one thread so let's create the second thread and to create the second thread you need to repeat this function which is start new thread and then you need to give the name to your thread so I'm going to give the name thread two and let's just change the delay so here I'm going to provide the delay of 3 second to the thread 2 so now we have created two threads and this function will be executed in both the threads so let's see if this code works or not so I'm going to just run the script and you will see as soon as I run the script it exits without printing anything and this is because thread takes some time to be created and we need to wait for the thread creation so we need to provide some mechanism to wait for the thread creation and this wait we can provide in two ways one is we can just provide the blank input function which waits for the input so using this input function we will wait for some time until these threads are created and now we will see if this works or not so let's run this script once again and let's see what happens so you can see now you will be able to see these print statements and you will see that first of all thread 1 is executed and then thread 1 is executed once again because we have provided only one second delay between the loop inside this thread so thread one will be executed faster than thread two so first of all thread one is executed and the o'clock time is printed and once again this thread one is executed because the delay time is less and then thread two is executed and the Epoque time is printed here and then thread one is executed once again and at the end you will see that thread two is executed two times because you can see that here we have the counter limit which is less than three so let's try to increase this limit to five and let's see how many times this print statement is printed so let's run the program once again and let's see what happens so once again this thread one is executed two times and then thread two and then thread one is executed three times once again and then tried to comes and you can see rest of the threads are executed then so here you can see thread one is executed one two three four five times and thread two is executed also five times so in this way you can start multiple threads and execute different functions inside those threads now I told you there is another way of waiting and this is by providing the while loop so I'm going to just provide wild one and inside this while loop I'm going to wait forever so I'm going to just say pass and this is an infinite loop which is like waiting so I'm going to just close this script first of all and then run the script once again and then you will see the same effect which you have seen in the case of input function also now here one more thing to consider is the return of this function so if this function which you want to execute inside the thread returns successfully the thread will silently exit but when your function terminate unexpectedly then unhandled exception will be thrown and the strike trace of that exception will be printed on the terminal so if this function throws then strike trace will be printed and this will be an unhandled exception so in order to avoid this unhandled exception you can also provide the try catch block here so here you can provide try and then I'm going to provide some space here and here also and after this code I'm going to just write accept and inside the accept you can provide any error so you can print that this is an error so inside this print function you can just write that this is and or anything which you want to write inside this accept block you can write using the print function or whatever you want to do in order to handle this exception you can do inside that accept block so let's run this script once again and let's change the delay here so I'm going to provide the delay of 2 seconds and here I'm going to provide the delay of let's say 4 seconds and let's run the script once again and this script runs and you can see after 2 seconds the thread one print statement is executed and then after 4 second thread to print statement is executed and this tried execution you will be able to see in those intervals so this is how you can use thread module in Python 3 I hope you've enjoyed this video and I will see you in the next video