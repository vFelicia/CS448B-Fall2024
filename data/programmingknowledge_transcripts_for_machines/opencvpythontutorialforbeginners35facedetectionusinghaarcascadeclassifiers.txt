hey guys welcome to the next video on open CV tutorials for beginners using Python in this video we are going to discuss about the basics of face detection using har feature based Cascade classifiers so object detection using har feature based Cascade classifiers is an effective object detection method proposed by Paul viola and Michael Jones in their people now har feature based cascades classifier is a machine learning based approach where a cascade function is trained for a lot of positive and negative images now what are these positive and negative images so first a classifier is trained with a few hundred sample views of particular object that is a face or a car or any other object that is called a positive example so whatever you want to detect if you train your classifier with those kind of values so for example if you want to detect face then you need to train your classifier with the number of images which contain faces so these are called the positive images which contains the object which you want to detect similarly we want the classifier to train with the negative images that means the images which doesn't contain the object which you want to detect so in our case for example we want to detect the face then the image which doesn't contain the face then it is called the negative image and if the image contains face or number of faces then it's called the positive image and after a classifier is trained it can be applied to a region of interest in an input image and the classifier outputs a 1 if the region is likely to show the object or a 0 otherwise so let's see how we can use hard Cascade detection in open CV so open CV comes with Treena as well as a detector so if you want to train your classifier for any object for example a watch or a car or train or anything then you can use this classifier also on open CV github page you can find some trained classifier XML files so let me show you these classifiers on the open Seavey's github page so here is the open CV repository and inside this repository you can see this data folder and then go to har Cascades I will just share the link with you in the description so you can directly navigate to this website and this location and you can see plenty of trained the classifiers are available inside this repository so for our example we want to detect the face so we are going to use this train the classifier which is called hard crack cascade underscore frontal face underscore default dot XML file so you just need to open this file and then download it you can just click on the raw icon here this button and once this raw file is open you can just right click and save it on your computer so you can just say save page as and then you can just save this inside your open CV project so I have already saved this file inside my open CV project you can see this file here which is an XML file which I have downloaded using this repository so as you can see here I have this code which is the minimal code to load an image and show it using open CV window now in the next step what I'm going to do is before this reading we are going to just define our classifiers so because it's a face classifier I am going to name by variable as face gasps Kade and then in OpenCV there is a method called so I'm going to just call this method and there is a method called Cascade classifier so this is this method called Cascade classifier where you can provide your classifier name which is the XML file so just provide your trained a classifier file name in our case it's hard cascade underscore frontal face underscore default dot XML so once we have our classifier we read the image and then because this classifier will work with the grayscale images we are going to convert our image into a grayscale image and it will be really easy to convert our image to a grayscale image now once we have our grayscale image the next step is to detect the faces inside this image so for that we are going to declare this variable let's say faces and then we are going to use this result which we got using this Cascade classifier and then we can call a method called detect multiscale so we are going to just call this method which takes pure argument first is the image so we are going to provide our grayscale image here and the second argument we are going to use here will be the scale factor so the scale factor parameter specifies how much the image size is reduced at each image scale so to start with we are going to provide one point one value here and then the next parameter which we are going to provide here will be the min neighbors parameter so min neighbors parameter is going to specify how many neighbors each candidate rectangle should have to retain it so we are going to provide this value for here to start with and if it doesn't give us the proper result we are going to change it and the last step here will be to iterate over all the phases which we have detected and then draw a rectangle on them so this phase variable will be the vector of rectangle where each rectangle contains that detected object in our case this will be the detected phase so the rectangle may be partially outside the original image if it's on the corner so that if the object or the face is on the corner then this rectangle may be little bit outside the original image so we are going to iterate over this faces object and here we are going to get the parameter X comma Y comma W comma H which means the values of x and y and the width and height of the rectangle of the object in our case this is the faces right so we got all the four parameters for drawing the rectangle and then we can just call C v2 dot rectangle method to draw the rectangles the first parameter here will be the image the second parameter will be the point one which will be X comma Y which we got using this faces vector and then we need to give the second point which will be X plus W comma y plus hide okay and then the next two parameters are the color and the thickness so we are going to give the color 255 comma 0 comma 0 here and the thickness to start with we are going to give 3 here that's it so it's this simple to detect faces inside the images using haar cascade classifiers so now I'm going to run this code and let's see what happens so you can see this is the face so this is how you can detect the face or a multiple number of faces inside an image let's try to detect the face inside a video so I'm going to just close this window and now we are going to try to detect the face inside a video so this will be nothing different than this approach we just need to apply this approach on each and every single frame so instead of this code we are going to use the video capture method to capture the video so you can see I have this test dot mp4 video here so we are going to define a cap variable is equal to CB 2 dot video capture and then in the parenthesis we are going to provide the test dot mp4 file here or if you have the camera you can provide 0 here as the parameter and then all this code we are going to just enclose inside a while loop so we are going to just say that while cap dot is opened so if cap dot is opened is going to give us a true value then we are going to read the frame so underscore let's say the parameter name will be I am G in this case also normally we take the variable name frame here because we are reading each and every frame and then I'm going to just say cap dot read okay so cap dot read this means we are reading every frame and let's enclose this code also inside this while loop so I'm going to just provide a little space here so basically we are getting every frame and then applying the same procedure on each and every frame and at last outside our while loop we are going to release our cap so we are going to just cap dot release and here instead of using this CB 2 dot weight key you're going to provide a condition if CB 2 dot wait key and in the parents's we are going to provide 1 & 0 X F F is equal to or D and we are going to listen for the key Q so if somebody presses the key Q then we are going to break out of this while loop so let's run this script and let's see what happens when we run the same script on our video so this is the video and this is in this video so you can see in this video the face is detected in real time in the real live video so this is how you can use hard based Cascade classifiers to detect faces or any other object inside an image I hope you have enjoyed this video and I will see you in the next video you