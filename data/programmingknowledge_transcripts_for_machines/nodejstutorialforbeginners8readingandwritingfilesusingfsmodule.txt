hello guys welcome to the next video on nodejs tutorial for beginners and in this video I'm going to show you how we can use file system module in nodejs which is a builtin module now node implements file IO using simple rapper around the standard posix functions and this is done using node file system module or simply FS module in nodejs now uh let's see first of all how we can add FS module so just write VAR FS is equal to require and then you just add FS okay and this is how you can add FS module now this FS module you can use for various uh input output uh functions related to file system in this uh video particularly we are going to re see how we can use this FS module to read and write to a file synchronously and asynchronously right so first of all we will use this uh file to uh read from a file synchronously but for that we need a file text file which we can read so I'm going to create a text file for example I will name it as test do txt and in this text file uh I'm going to write some things and let's uh you know copy and paste this line okay so this is what we want to read from our file system object which we have uh you know uh created using this file system module so for reading this file syn synchronously what we can do is we can just use uh file and first of all we need to assign this uh output which we read so we can just write uh VAR and then uh we can just say uh red string is equal to FS dot read file sync okay so just write read file sync and this method will allow us to read our file synchronously okay and then give the name of your file and because this file is in the same folder you just need to give the name of the file not the path because it's in the same folder so just write test.txt and the second argument which uh we want to pass pass here will be the encoding type so just write U for example utf8 and now let's try to print whatever we have uh you know read from the file to the console so just write uh console do log and we will just uh print this string here whatever we have read so it should be red string and then we are going to run it so open your terminal and just run it using node app.js and you can see uh our file is red so our file content let's see what was the file content and what the terminal is showing right so same content as the file so this file system module enables us to read the file synchronously and if you want to uh write this file to uh another file or write the content of uh the file which you have read to another file new file for example what we can do so we can just write FS do write file sync so just write write file sync and then just pass uh this uh result to the argument okay so right right file sync can be used to write to the file synchronously right and this fi write file uh method takes two uh argument the first will be the name of your file so let's create the name for example test 2.txt okay and the second argument is the content itself right and uh let's run our code and let's see what happens this time so just uh see here what happens here whenever we will run this code and you can see this text two is created when we run the code and the content of text 2 is same as test 1.txt or test.txt right so in this way you can uh use this to read and write to the file synchronously now FS module also have the async method and uh this will allow uh us to read or write to a file asynchronously right so this for this we just need to use the method called file name without sync so uh by default if you know about nodejs nodejs is a asynchronous uh you know program so whenever you write the program it runs asynchronously and what I mean by asynchronous uh is I'm going to show you in just a second so just uh write this once again we want to read the content of uh test. txt file and uh just just uh call a method read file and the first argument will be the same and the second argument we want to uh pass here is the call back method or let's say we can do it in the uh last argument also right so just write function and then just say error as a first argument and data as the second argument okay and then give a curly bracket here and press enter and in here for example if there is some problem in Reading we want to uh return error so just call this uh argument first argument which we have passed in the call back function which is this one and then we can console error right so just write return console dot error and then pass this error here as an argument okay otherwise if uh there is no error in Reading we can just console log the content so instead of uh console log outside the you know read file uh method we can just you know call it inside our call back okay okay something like this and the argument which it takes now is data because data will contain your content of your file which you have read okay for now let's uh remove this line of code and in here we will just call console log and let's say we just want to print the file is red for example okay and let's run the code once again and let's see what happens so what I'm going to do is I'm going to run the F program once again or code once again and you can see the output here it's little bit different from earlier that first of all the terminal prints or this program prints the file is red which is this line and then it prints all the content of the file which was there inside the file so this is done in asynchronous manner right so what's happening here is nodejs starts the server for example and this uh method is uh reading the file if the file is for example very big what happens then so you want to you know in real life situation when uh you are dealing with real data you need to do your stuff asynchronously right because otherwise your code will block uh this you know uh running of your uh server and other things cannot happens if one process or one uh you know uh file reading is taking very long time but this way of of uh you know uh executing your code asynchronously will help you to you know run you know your code in a very uh good manner because your code is not waiting for the reading of your file but it's executing the next step and the next step once again if there will be some more you know useful code below this also then it's going to execute it and and once the file is read it's going to print the content of the file using this console log so the call back function this function is called callback function and it is triggered whenever the you know file is read completely right so this is how uh asynchronous uh you know way of uh reading file works okay in the same way you can um write to the file asynchronously also and you just need to uh you know call fs. write file and then the you know name of the file in which you want to write to so let's do that and let's see what happens so FS do write file and the first argument will be this argument the second argument would be the content which we want to write for example we want to write uh this data which we are reading from the first file for example and the third argument will be the same as we have done here the call back right so you can just copy this much amount of code before uh the bracket and then pass it here and we can just add uh semicolon here okay and uh this is just checking whether your file is written and if it's not written it's going to uh you know console log the error and if uh it's written then we can uh say success for example we can just print success right something like this and when you run your code once again it's going to write it so let's run it and program is done and at last it prints success and you can see the file is also created test do uh text right so in this way you can use uh FS module in nodejs uh there is more you know functionality in this FS module which you can find um on the nodejs site so go to nodejs.org /i/ fs. HTML and in here you uh can go here file system or you will be able to uh you know find more method related to this FS module here and there are so many method which you can use so just go through uh this documentation and then you will be good to go so I hope you have enjoyed this video please RIT com And subscribe and bye not