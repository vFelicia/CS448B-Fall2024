hey guys in this video I'm going to try to explain you what is rest and what is our REST API so let's get started so first of all what is rest rest is an architectural style which is based on web standards and HTTP protocol this style was initially described by Roy fielding in the year 2000 Roy fielding was also one of the principal author of HTTP specifications now rest is an acronym standing for representational state transfer so as I said that rest is an architectural style of web but what does this even mean so rest is a set of design criteria and not the physical structure or architecture of the system so it's just a design criteria right so rest is not tied to web that is it doesn't depend on the mechanics of HTTP now in rest based architecture everything is a resource and what is a resource a rest resource is a data on which we want to perform operations so this data can be present on the database on the server side for example some employee data which have some unique identification for example employee ID now this resource is accessed via a common interface based on HTTP standard methods which we will learn a little bit later so let me give you a more concrete example so in restbased architecture you have a rest server which provides the access to the resource so for example this is our rest server which provides the access to the resource which is there in the database or in some form of Records now on the other hand we have a rest client which is used to access and modify the rest resource now in rest architecture every resource should support the HTTP common operation so let me give you a more concrete example so let's say we want to create a weather app now weather app is dependent on the weather data now let's say this weather data is saved every day or every hour in some database which can be accessed from a rest server for example so in a restbased architecture you have a rest server which provides an access to the resource in our case it's a weather data of some city for example and you have a rest client rest client can access or modify the rest resource ok now every resource should support the HTTP common operation now how this resource is identified so resources are identified by a global ID which are typically called you are eyes which stands for Uniform Resource identifier and in some cases it's called URL which stands for Uniform Resource locator so you can consider this URI as an address of the resource so for example we want to access the temperature of City London now this request can be sent from a client in the form of URI you can see here so for example first of all this resource is under the country name UK for example and then the resource name London now if we think logically our resource must have at least one URI right so if the resource doesn't have any URI how will you access this resource so in rest architecture you must have a URI to access or modify this report for example if you don't have this URI UK forward slash London how will you identify this resource in the rest server and these URI should be descriptive that is human possible and have some structure so for example in our example I have given this URI UK which is a country name and then the city name for example now if we want to know the temperature of some other city in some other country for example we want to know the temperature of city munich then you can write germany as a country here and then forwardslash you can write the city name which is munich in our case now rest allows the resource to have different representations right so for example this request is sent to a rest server and on the request this rest server accesses the London's temperature report and then how or in which representation it should send the result and in which format this data is returned to the client is called a representation right and rest allows this resource to have different representation it can send an XML representation of the result or it can send JSON representation of the result or in most of the cases it can also send HTML as a representation now in rest clients decide which kind of representation it want to have so for example client sends this information that I want this result in the representation of Jason right so client send this request to the server that which form of its presentation of result it wants so let's go to the rest definition once again so why rest is called representational state transfer so representational state transfer refers to transferring representation in our case we have seen the representation can be sent in the form of JSON or text or HTML or XML in any representation so we are using the representation of resource to transfer this resource state which lives on the server into the application state which is on the client ok so presentation because client possesses the information necessary to identify modify or delete a web resource and client decide which form of representation of the result now the word state comes in rest because all resource state information is stored on the client side so you can say that your server or your stress server is stateless it doesn't have any state all the states are stored on the client side and transfer because client state is passed from the client to the server through HTTP now let's discuss about HTTP methods supported by a rest so these are some of the most important methods which are supported by rest architecture so you have GATT which is used to retrieve representation of resource you have put method to update or modify existing resources and in some special cases we use put to create a new resource also now we have post to create a new resource and delete method to delete an existing resource now rest have to another less commonly used methods which are had and option so had method fetches the metadata of representation only so it doesn't have any body and the method options checks which HTTP method are particularly resource supports so most of the time when you are designing your rest architecture you will be using these four method which are frequently used when you design your rest architecture which are get put post and delete now there are five basic software architectural style principle in rest so the principle one is everything is a resource so in rest are contextual style data and functionality are considered as resource and are accessed using a URI now the second principle is resource is identified by a unique identifier using URIs now the third principle is you have to use simple and uniform interfaces so use simple and standard interfaces to define your rest architecture so for example in our temperature or weather information example we have defined a very simple and uniform interface so we have defined a country name and then inside a country name there is a city names so whenever we provide the country name and then a city name and for example we want to access the temperature of some particular area of that city we can even request that temperature using this URI so use simple and standard interfaces for defining your rest architecture now the fourth principle is communication is done by representation so for example rests over can send a representation in the form of XML or JSON or text or any other form on the clients request and the last principle is be stateless that means every request happens in complete isolation now the next question arises is what is a REST API so first of all we need to understand what is API so API stands for application programming interface and an API is a set of subroutine definitions protocols and tools for building applications software now our REST API is an application program interface that uses HTTP request to get put post and delete some resources now let me give you a simple example to explain a REST API so let's say we have a resource for example some dishes inside a kitchen so these can be considered as resources right now a client comes and he wants to order some dishes the kitchen but he cannot directly go to the kitchen and then take whatever he wants so the user uses some intermediate service to access this resource and this is the job of an API which is waiter in our case so a REST API accesses this resource on the clients request and then responds this representation of the result to the client so we can say that our REST API is intermediate service to access some resources now a realworld example of that can be a Twitter API or a google map API or for example Facebook's graph API is so for example we want to make an app which uses for example Facebook's graph API to know who have the most popular page on Facebook you can use Facebook's graph API for that or for example if you want to post something on Twitter using the Twitter's REST API you can do that also so let me give you this real world example so open your browser and search for API key console ok so search for API geek and soul and you will be able to see this website which is API key com forward slash console so when you go inside this website you will be able to see different API is here ok and you will be able to see for example Facebook's API Yahoo weather API and so many different kind of API is so for example we want to use a Twitter API which is already selected here or you can even select it from here so for example let's say I want to do a tweet on my Twitter account using this API how can I do it so I will select this Twitter API and you can see this is the service which is API dot Twitter comment one point one and I need to give some authentication so I need to give some credentials from my side to login to my Twitter account and then only I will be able to do some tweet right so for authentication I will choose out one here so just choose this option out one and then just select sign in with Twitter who is going to ask for your permission I will just say authorize app and now this app is logged in with my credentials right and now I can do some tweet and on the left hand side I will search for the tweets section here and then I will just select this option which says statuses update dot JSON which uses this HTTP POST method right so I will select this option from here which is going to give you this kind of URL so you can see the resource we want to access here is statuses and then update dot JSON and this is the status we want to post so for example here from here I'm going to just delete this data which is the default status and I will just write here rest stands for representational state transfer and now I'm going to just send this tweet and I receive the status code 200 that means my tweet has been tweeted and you can see this response here right and I can see here that this tweet is posted on my Twitter account you can sees rest tents for representational state transfer which I have done using this Twitter's REST API now the last example I want to give here is the rest server I created using noches so this is a very basic reservoir which is used to create update delete or get the blog posts so a blog can have post and then the post can have some comments and you can have also a profile of the person who is posting this blog post right now this is a rest server and I need to have a rest client in order to interact with this rest server so generally in development we use a tool called postman rest client which is used to send restbased request from a client to a server so open your web browser and search for postman rest client and the first link which will appear here will be from get postman calm and then you can directly download this for your operating system and once you download and install it it'll look like this okay so this is a simple user interface of postman client from here you can send any request to your server so my server is running on localhost port 3000 so I'm going to just write here HTTP colon double forward slash localhost port 3000 and for example I want to just send the get request from here and let's see on the server side I'm using this DB dot JSON as my database so for example you can see there is only one post existing in this JSON database and I want to access this post resource right so what I can do here is I can just send a request on post so this is my resource posts is my resource and let's say I want to just get the post whose ID is one so I'm going to just write one here right and then I will just send this request and then you can see I get this response so for example ID is equal to one title is JSON server and author is code mine which is also there on my JSON database now let's say I want to just retrieve the comments for post one then I can just write instead of post I can just access the comment resource from here right so I can just send this request and this time I can just get the comments resources from this rest server now let's say I want to post a new post so I will just send this request so I will just use this resource post su post some data and the method here I will use is post because I want to create a new blog post and format of this will be same as this one so I'm going to just copy this format and then in the body I'm going to send this request so just click on body and then I will just say bulk add it and I will send this request so this time the ID of the post will be to the title this will be for example rest api and the author i want to leave it as same so i will leave it as code bind so this is my request body for the post right and then in the header you can even write the content type but by default the postman sends the application JSON content type to the rest server so i will leave it as default and I will just say send and you can see here the status I get here is two zero one created that means my post is successful and I receive the ID of the created post now in order to delete the post I can choose the delete method from here and whatever post I want to delete so for example I will just write resource name posts and I want to delete the post too so I will write the ID of the post too and then send the request and then you can see I get 200 response that means okay and then this ID is deleted and then when I do the get request for the post ID I will not receive any data about this and when I request all the posts then I will only get the post ID 1 because post ID I have already deleted so that's it for this video I hope you enjoyed this video please rate comment subscribe and bye for now