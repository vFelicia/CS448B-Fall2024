welcome to programming knowledge so in this video we are going to discuss about another type of list view and the dismissible feature which is generally associated with list view okay so let's start first of all in my body i'll give it a width of infinity so with this double dot infinity okay and then the child is list view dot separated okay so this is another type of list view which has a separator builder like in the list view dot builder we only had an item builder okay but over here in list view dot separated we also have a separator builder which means every item in the list will be separated by the widget returned to this separator builder okay so first of all let's add the item count and it will be list items dot length okay and then the item builder is simple it takes a build context okay and it returns so this wrong spelling returns a list tile okay and then over here in the title we can have the text and the text says count then we'll use the string interpolation inside curly braces we will write list items and then the index oh i forgot to give an index over here this method also takes an index okay then i'll return this over here this will go over here now let's format this and now let's also give a separator builder okay so when you hover around separator builder you see we get a build context and an integer which is the index so this means that for every item we can specify a different divider okay that is the power of this separator builder but over here we will simply use a single separator for all the items okay so build context context sorry that will be a comma int index and i'll use the arrow function and it returns a divider okay so we have not yet discussed about divider so divider is actually a widget that will just draw a faint horizontal line divider always draws a horizontal line in flutter so let's save this in c and now you can see we get the values and each value is divided by a divider okay so now you can see this is the standard color of divider but we can do a few changes with the divider like change the color so i can change the color to color start red now let's format this and see what happens and now you can see we have the divider in red now similar to list view dot builder it also has a padding okay so we can give it a padding con sorry the const will be in small c const edge insets dot all and that can be 10.0 so now let's format it save it and then you can see each divider has a little bit space over here and that is because of the padding okay so this was about the list view separated which is the last type of list view okay so we also have a list view dot custom which takes a sliver delegate but still we have not discussed about sliver delegate so i'll do the list view dot custom part once we discuss the list view sliver delegate okay so moving on the next thing that we are going to discuss is about the dismissible feature okay so by that i mean that if i if i pull from the end to start on a list item it should be dismissed or maybe over here it shows a delete icon and then if i pull it from the right to left the item gets dismissed okay so that is a very common feature that we see with list views okay so to do so over here in item builder instead of returning a list to tile i'll return another widget okay and that is dismissible okay so now again this dismissible will let's give it the child a card okay so a card is another type of widget it is very much similar to container only difference is that it has an elevation means it also has a height in the zaxis okay so then i'll give the child as a card okay then card will take a margin can the margin let's say h inserts symmetric i'm sorry edge inserts dot symmetric okay and then in horizontal we give it uh let's say 15.0 margin and in vertical we can give it a 4.0 margin i am doing so because we are already giving it a margin over here up adding over here that's why that's why i am reducing the margin vertically so let's format it now we have the card now inside this card we will add our child okay so the child will be for now a simple list tile okay and the title will be text that says count and then string interpolation list items index let's format this save it and see okay so you can see over here it says that key should not be equal to null okay is not true so that me that error is because this dismissible takes a key which is not significant over here but it is necessary so over here i can simply write key and then key takes a key value okay so over here i can simply say value key okay and then over here it takes an idea i'll write one two three okay that means this value key means it will generate a key from this value and it is assigned to this key okay that is just for removing the error now let's save this and now you can see we have this card over here this elevated thing okay so now i think we should remove this separator builder the purpose is understood over here and this can be changed to builder okay so now you can see we have this card over here for each item okay now after this the next thing that i need to do is for dismissible i need to add a on dismissed property okay so over here after the key i'll write on dismissed and it takes a function which has the direction means the direction in which the item was dismissed and then for now i we can simply print the direction okay we can change it according to the functionality needed later so let's save this and now let's try dismissing it so you can see this is dismissible and the value is being printed okay the direction is being printed so over here you can see dismiss direction dot end to start which means this is the end this is the start and dismiss direction is an enum okay now if i do it from here so now you can see it is like start to end so i think you are understanding what i am trying to do over here this is the feature i was talking about we can simply remove an item from a list with a little bit of animation okay and now however if i build this again i think all the items should return okay now let's rerun this that was giving us an error yes so you can see we have the list over here back now along with on dismissed we can specify a direction that will be used as the dismissed direction like right now in the app you can see the item can be dismissed from end to start and can also be dismissed from start to the end but i want only to dismiss it from the end to start so in that case what we can do is inside this dismissible we can add a dismiss direction okay not a dismiss direction just direction okay and over there over here we have just now seen we have our dismiss direction enum like this and then you can see this is the these are all the values down means when we pull the item down and to start means the names explain themselves okay and i want this to only be valid for end to start means the dismiss feature will only work when we try dismissing from the end to start okay now let's save this and see so now if i try dismissing it from this direction it will not work but however if i tried is missing from the end to start it will force your work because we have restricted the direction from end to start only now when we are dismissing you can see we have this background over here now in flutter we can also specify what should be the background of every item when being dismissed okay so the general convention would be to add a delete sign okay so let's do that we have a background named parameter it will it takes a widget and for now it is a container okay now the container should have a color and the color is red okay let's format this first now it takes a child the child is an icon which will obviously be a delete icon so i'll use the icons em and then delete and then the color should be colors dot white okay and then the size can be around 40.0 okay let's format this now after that i want the containers item to be aligned to the right we since we are dismissing it from the end to start where the end represents the right i want the child to be aligned at the right so i'll add the alignment as right so i'll use the alignment tenon alignment dot center right that means in the center vertically and at the right horizontally okay and maybe let's add a padding from the end that is from the right otherwise the the the delete icon will be at the end of the container means it will be sticking to the border of the container so let's add a padding and then again add a const before padding and margins because so it will not be builded again and again so const edge inserts dot only and it is only for write 20.0 now let's save this and see so now when we dismiss this we can see we get this delete icon over here now this doesn't look very good because when we try to dismiss this it is not actually the card which is being dismissed it is a little bit surface beyond the card which is dismissible okay so to fix that over here we can remove this padding from here and do a little bit design changes which is required but the purpose is fulfilled so i hope you understand how to use our dismissible okay and and one thing that i missed and dismissible was there is a confirmed dismiss option okay that means once the dismiss process has been done and still you want to confirm the user that are you sure you want to you want this to happen so then we can use this confirm dismiss okay so this will be for the video thank you