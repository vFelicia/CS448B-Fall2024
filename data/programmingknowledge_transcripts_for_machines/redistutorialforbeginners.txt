so first of all what is redis so redis is an open source bsd licensed advanced inmemory key value store where keys can contain data structures such as strings hashes lists sets and sorted sets so it's an inmemory key value store with persistence that means redis can be used as a database or a caching layer or a message broker now i already said that it's bsd license that means it's open source now redis is written in c and it's no sql database now what is nosql nosql is an informal loosely defined term for nonrelational structured data storage systems like mongodb memcached couchdb or cassandra so following in the footsteps of other nosql databases such as cassandra couchdb or mongodb radis allows the user to store vast amount of data without the limits of relational databases so in nosql databases data can be stored in nonrelational way now what does the name redis mean redis stands for remote directory server it is often referred to as a data structure server since the keys can contain strings hashes lists sets and sorted sets so because the keys can contain these type of different data structures it's often referred as a data structure server right so the name come from remote directory server now what is redis used for so as i already mentioned that it's an advanced key value store that can function as a nosql database or as a memory cache store to improve performance when serving data that is stored in system memory and also it can be used as a message broker so it can be used in place of caching systems such as memcached now you must be wondering how to interact with radiss so redis can be installed on a server and it can be interacted with a command line tool or command line interface which is called redis cli so using this redis cli we can interact with our redis server now this redis client can be used on any machine and then when we open this redis client which is a command line client uh the first line will look like this so redis then this kind of angle bracket this we will see in the coming videos how to install redis and how we can use redis now let's talk about some of the history about radiss so in early 2009 a developer called salvatore san filippo he was an italian developer by the way started the redis project at that time he was working on a realtime web analytics solution and found that mysql could not provide the necessary performance so in june 2009 redis was deployed in production for a website called log.com which was a realtime web analytics website then in march 2010 a company called vmware hired sanfilippo to work fulltime on redis although reddit remains as bsd licensed subsequently vmware hired some of the other developers who also contributed majorly to assist on the project so this was a brief introduction about radiss and from the next video we will see how we can install redis and how to use redis so stay tuned and please rate command subscribe and bye for now hey guys welcome to the next video on redis tutorial for beginners in this video i'm going to show you how you can download and install redis on your windows operating system so let's get started so first of all open your favorite browser and search for redis and hopefully the first result which will appear here will be from redis dot io so you need to just click this link which is for the redis dot io and then once you click this link you will be able to see the downloads tab on the top of this website so let me just maximize this browser and i can see this tab which is for downloads right so i'm going to click this downloads tab and then i'm in the downloads section now when you scroll down a little you will see a windows section here and there is a message here which says the red this project does not officially support windows however the microsoft open tech group develops and maintains this windows port targeting windows 64. so redis project does not officially support windows but there is a group of developers which makes it available for windows so we just need to click this link which says learn more and when you click this link you will be redirected to a github page of redis which is maintained by microsoft archive so once you reach to this page and scroll a little down and reach to the readme dot md here on the third line you will be able to see this message which says you can download the latest unsigned binary and unsigned msi installer from this page so there is a link for the release page right so just click this link which says release page and then you will be redirected to the downloads page for redis for windows right now when you scroll down a little here here are few options to download a redis on your windows operating system the first option is by using dot msi file which is our installer second option is by using a zip file so all the binaries will be packed in this zip file and you need to set up the environment variable so i'm going to show you both the ways so let's start with the dot zip file so i'm going to download this dot zip file first of all and i'm going to minimize the browser and here in downloads i can see this zip file so what i will do is i will create a new folder i'm making this folder in my downloads directory itself and i will name it as redis but you are free to create this directory anywhere wherever you wish right and then i'm going to extract this zip file inside this redis folder so let me drag this to this redis folder this zip file and then i'm going to just extract all files inside this redis folder right so it's going to extract all the files it's not really big files so it will be extracted really soon and you can see all the files are extracted inside this redis folder and there is a redis minus x64 minus 3.2 3.2 is the latest version at the time of making this video so inside this radiss folder there are some files so these files are all are important but two are of our interest one is redis server and another is redis cli so let me minimize this other window here and then i'm going to double click on this radis minus server exe file so i'm going to double click on this redis server which is going to start the redis server and it will ask you to give the administrative privileges or you need to allow the access to the server so here i'm going to just uh press this button it says allow access and now the redis server has been started now the default port on which the redis server start is this one which is six three seven nine okay so this is the default port on which redis starts on the local host and then uh this is the pid of this redis server right now next i'm going to start the redis cli to interact with this server so now this time click on this redis cli and it's going to start another terminal and it's going to connect to this redis server and then using this uh cli you will be able to interact with this server right so this is the client and server is running in the background right so let me minimize this window also and let me just place this server here and let me open this client on the right hand side right so this is the server and this is the client now in this client when you write ping you will get the response pong so you can see i'm getting the response pong that means the server is running fine and my client is able to connect to the server and get the response right now in order to save something as a key value pair for testing we can just write set and then it's going to give you some intelligence also so i just wrote a keyword set and it gives me the hint that i need to give the key value pair here so as a key i will give a name or name key and i will give any name as a value so for example mark i'm going to give as a name right and then i'm going to press enter and it says okay that means this key value that means name is our key and mark is the value of the name which is the value right so to get this value you can just write get and then the name of the key which is name itself in our case and press enter and it's going to give us the value right so that means everything is working fine and we are able to connect to the redis server and it's able to save the values right but sometimes or most of the times you will not go to this server and start from this directory right so you want to uh you know open your command line from your windows and you want to uh connect from this command terminal from windows not from uh this location right so in order to do that you need to set the environment variables so let's set the environment variables for this redis uh client and server so we will be able to open this redis server and redis client from our windows terminal so in order to do this you just need to right click on your this pc so just right click on this pc and then go to the properties and once this properties window is open we will go to the advanced settings so just click this option which says advanced system settings and once this advanced system settings is open we are going to go to the environment variables just click this option which says environment variables and once environment variables is open you just need to select this option under the system variable which is for path so just double click on this option which says path and here we just need to give a new environment variable and this new environment variable is the path to your redis folder where your server and redis cli is there so you just need to copy this path where this redis server executable file is there and redis cli file is there so i'm just going to copy this path and then into this environment variable i will just create a new variable so i will just click new and then i will paste this path right and then press enter and then click ok and then once again click ok and then once again click ok right so now the environment variable for redis server is set so now i will just close these two terminals right and then i'm going to open the command line so to open my windows terminal i can right click on this windows icon so just right click on the windows icon and then open the command prompt you can open the command prompt from here also or with the admin privileges so i'm going to open the command prompt with the admin privileges and once the command prompt is open i can start the server from this command prompt so to start the server you just need to write redis minus server which is the executable file here right so i'm going to just write redis minus server and then press enter which is going to start the redis server right so because we have set the environment variable now we can start the server from the command prompt from windows from any location right now in order to start the client we will open another command prompt and then we can start this with the redis cli command so i'm going to just write redis minus cli and then press enter and then we are connected to this server right now once again i can set any value here so for example set and then any name or any key i'm going to say this time the key is any number so i'm going to just write the number and then any number for example 50 here right and then press enter and then i'm going to get number number and then press enter and it's going to give us the value of this number which is 50 right so in this way also you can start your redis server and redis client okay now in case if you're wondering how we can install this redis on our windows operating system using this msi file which is a more easier version we can just download this msi file and once this msi file is downloaded i'm going to go to the location where it's downloaded and once this location is open i'm going to install it so i'm going to minimize my browser and i can see that this msi file is there in my downloads folder so i'm going to double click on this msi file and once this msi file installer starts we just need to click some next button to install it so just wait for some seconds to start the wizard and we just need to click next here and then just accept terms and condition and then click next and this is the location where redis will be installed on your system and then this is the important step so it will ask you if you want to add redis installation folder to your environment variable so this installer will automatically add the redis path to the environment variable if you check this option which is more easier also right and then click next and this is the default port as i already said 6379 and then it says add an exception to the firewall we can just click next here and then we will just set the memory as default and click next and just click install right so it's going to start installing and some seconds redis will be installed on your system and once it's installed then you will be able to start redis from your command line once again so once again for example i'm going to open the command prompt and then i will give the redis cli command so i'm going to just write redis minus cli and it's automatically has been started and when i just write ping i will get the response pong so you may be wondering that this time i haven't started the redis server so if you use the redis installer msi file to install redis the server will be automatically started and you don't need to explicitly start the server you just need to connect to the server using the redis cli so you just need to open the command prompt and then using redis cli you can connect to that server which is already been started by that installer automatically right so this time we don't need to start the server it's already has been started we just need the redis cli to connect to it so these are the two ways which you can use to install redis on your windows operating system hey guys welcome to the next video on redis tutorial for beginners in this video i'm going to show you how you can download and install redis on our linux operating system for this demonstration i will be using ubuntu operating system so let's get started so there are two ways of installing redis on our ubuntu operating system so first of all we can use aptget install to install redis but there is a disadvantage of installing redis using aptcad and that is the version you will install so with aptget whenever you use aptget to install redis the repositories are not updated frequently as the redis version is released so you will be able to see that you have installed the older version of redis if you use apt get command so for example let's go to the redis website so search for redis and the first result which will appear here will be from redis dot io and we will see the version of redis right now so as i can see here the red is 4.0.0 is the latest version right and we can see using the aptget command so i'm going to open the terminal here in ubuntu and here i can just type app minus cache to know the version of redis available right so just write app cache and then policy and then the redis server so just write redis minus server okay and then press enter and then you will be able to see the version so as far as i can see the version available using apt get command will be 2.8 or something near to that right for my ubuntu operating system it may be different if you have the more newest version of ubuntu i have ubuntu 144.04 but if you have for example ubuntu 16.04 or you've been to 17.04 it may be a little bit uh better this version but it will not be the latest version which is 4.0.0 in most of the cases right so if you want the easiest way then you can just write sudo apt minus get install redis minus server okay and then once you press enter it's going to install redis server on your ubuntu operating system but the version of this ubuntu server will be 2.8 right so in this case i'm going to show you how you can install the latest version of redis so for that i'm going to just clear the terminal let's go to the website once again so i'm on the redis dot io website and i will just click downloads here and then i'll go a little bit down and i can see the version 4.0.0 and i will scroll a little more down and i can see this installation step here and here it's using wget to get this zip file and then we need to unzip this zip file and then we will do cd and then we will make the redis binaries right so this is the procedure for installing redis on our linux operating system or a mac operating system this procedure will be almost the same right so let's open that terminal first of all and then once the terminal is open we are going to install two packages here one is the build essential package and other is the tcl package build essential package we use to compile our binaries for the radish server and tcl package we will use to test our binaries okay so first of all we will give this command sudo apt minus get update first of all we will update all the repositories and i'm going to give my ubuntu password so updates is done i'm going to just clear the terminal once again and this time i will give sudo app minus get install build essential and tcl okay and then press enter which is going to install these two packages in my case i can see both the packages are already installed so if they are already installed you will see these kind of message that they are already installed otherwise if they are not present they will be installed on your system so first of all give this command to install these two packages and then once again let me clear the terminal and then we are ready to install redis using these command which are there on the redis dot io website right so the first command is just to download this tar file so what we are going to do is i'm going to first of all make a redis folder so let me make a redis folder nkdir redis and then i will cd to this redis folder or directory and inside this directory i'm going to give this wget command which i copied from the redis website so let me just maximize the terminal and just give this command so wget http download whatever version of the redis you are downloading so at the time of making this video 4.0.0 is the latest version so you can see this version 4.0.0 right otherwise this version will be different in your case if the latest version is released right so this just give this command and then press enter which is going to download this tar file you can see the star profile is downloaded and then let me clear the terminal once again and let me do ls once again and now we are going to give the tar command to unzip this tar file so just give this command copy and paste nothing else and then once again ls and you can see this redis 4.0.0 directory is extracted and then we will go inside this redis directory cd to this directory and then we just need to give the make command so just give make command so just write make here and then press enter which is going to start uh the making of this redis binaries it can take some time so just wait for the process to complete so now i can see the make command is successfully completed and at the end of the make command i can see this message which says it's good idea to run make test after this make command so i'm going to run make test now so i'm going to just give make test command and then press enter and let it run so now the make test command is also finished so now let's go to the next step so i'm going to the website so make test is finished and now it says we just need to go to the source and we need to start the redis server using the source folder and then redis server okay and redis cli will be started from source redis cli right so let's start redis server first of all so let's do ls here and i can see this source directory right so i can just start the redis server like this so you just need to give src forward slash redis so okay and then press enter which is going to start the redis server and you can see the redis server has been started i will just move it to the left hand side this command line terminal and now i will open the next terminal so let me open the next terminal and then in this next terminal i'm going to start the redis line so i will just go to the redis directory once again where i have installed or created the binaries and then i will go to the redis directory and then i will give this redis command so src and then forward slash redis i think so let me do ls once again and yes src is here so i will give src forward slash redis client or cli i think yeah so red is cli let me just make it a little bit bigger so we can see it perfectly so now you can see we are connected to the server using this ip address and on this port so you can see the redis server was started on this default port 6379 and we are connected to this port using the redis cli so let's set something so i'm going to set for example name max for our example and then press enter and it says ok and now i will just say get name and it's going to give me the name max so everything is working fine but one more thing we can do here is because we have installed redis on some directory on a particular directory every time we need to start redis we need to cd to that directory and then we need to start the server and we don't want that we want that whenever we give the redis server command from any directory we just need to start the redis server so in order to do this what we need to do is let me just minimize this and let me just maximize this terminal and we are inside the redis directory as you already know and you can see the src folder is already here right so this is the src folder now the last command you can give here is make install so that whenever you give redis server command from anywhere from any directory it will start the server and you don't need to navigate to this particular directory in order to start the redis server so just give make install command in order to install redis server and the red is cli so let's do that and it says uh that cannot create regular file because the permissions are denied permission denied that means i need to give the sudo command before the make install so just give sudo make install uh command here okay so you just need to give sudo make install command and then once again press enter and now the redis server and redis cli and other stuff which are there inside this src folder is installed right so let me just close this terminal and let me open the fresh terminal now and we are not inside that redis directory right we are in our home folder and then from here i will just give redis server command and it will start the server so i don't need to navigate to that that redis directory because radis is now installed on on my system in the same way i can start the client so i will just start a new terminal and i will just give redis minus cli to connect to it and i'm connected right so in this way you can download and install redis on your ubuntu linux operating system hey guys in this video i'm going to show you how you can download and install redis on your mac operating system so let's get started and let's see how we can install redis on our mac so first of all open up your favorite browser and search for radiss and the first link which will appear here will be from redis dot io so we will just click this link which is redis dot io and here we can see the home page of redis what we want to do here is we want to go to the downloads section so we will just click this option which says download and then when we scroll down a little we can see this downloads button but don't click this download button yet we will see how to install redis on our mac by scrolling or down a little so when we scroll down a little here you can see the installation steps for redis so first we need to download the star file and then we need to unzip or untar this tar file and then we need to make the redis binaries right now let's see what is the latest version at the time of making this video uh for the radius so we can see in the downloads button that 4.0.0 is the latest stable version at the time of making this video right so we will install the 4.0.0 version of redis now sometimes uh this wcat command may not work on your mac operating system so we will use the curl command to download this star file okay so instead of wget we will use the curl command and then we will follow the same procedure as described here with some additional commands okay so what we will do first is on my desktop for example or at your chosen location just create a folder so i'm going to create a folder and i'm going to name it as redis okay so inside this redis directory i'm going to just download this star file and until it and then make the binaries out of it okay so then once i have this uh folder i will just see the info get the info and then uh just see what is the path of this redis directory and i'm going to copy it and then i'm going to open a terminal so just open a terminal and then just cd to this redis directory so because it's on my desktop i can just use this location so user and then whatever is your username and then forward slash desktop and then forward slash redis i just need to write forward slash redis and then i'm inside this redis folder right now we will do the alice and there is nothing inside this redis folder and let's just open this folder so we will see what's happening inside this folder okay so let me just resize it so we will see all the things which are happening here and now we will just give a curl command so just write curl and then minus o and then the location of this tar file so just copy this url from here which is there on the downloads page without wget okay so just copy this url and then paste it here on the terminal and then press enter which is going to download this star file and once it's downloaded we will just uh unturn it so you can see the star file is downloaded right and to unpar it or extract it we will use this command so right click copy and then just paste it here which is going to extract this tar file and we can see this folder is extracted and inside this folder we have some files right so the next step is to cd to this directory which is red is minus 4.0.0 and then make it right so you can see the step cd to this 4.0.0 directory and give the make command so we will do the same cd to the redis 4.0.0 directory and then give a make command which is going to uh make the binaries for the reddest server and let redis client and other redis stuff right so now the make is finished and at last i can see this message which says it's a good idea to run make test so let's run make test i'm going to just give this command which is make test and then press enter so now the make test command is also finished and i can see this message which says all test passed without error right so i know that everything is okay and now i can start the redis server and then redis client okay so let's see what are the command for for those so redis server can be started from the source directory and we just need to run this command which is redis server and the same we need to do for redis client so from the source directory we can just run this redis cli right so let's do this so i'm going to open a new terminal so let me open a new terminal so now i have two terminals right so on the first terminal i will just uh do first of all ls here or let me clear the terminal first of all so clear and then i will do ls here and i can see there is a source directory here so i will just give this command src and then red is minus server right so redis minus server and press enter which is going to start the redis server and it has started listening on this port which is the default port for redis which is 6379 and this is the pid of this redis server right now once again i will navigate to this directory where i have installed redis so it's in my desktop and then i'll go to the reddit directory then the red is 4.0.0 and then i will just give this command which is src forward slash uh red is cli so let me do ls so i know that i'm in the same directory and then i will just write src and then red is cli and i'm connected to the redis server i can see this kind of prompt here that means i'm connected to my redis server right so first to test whether everything is working fine or not you just need to write ping here and then press enter and if in return you get pong then you know that everything is working fine you can also set something so for example set name is equal to max and then press enter and then you can get the name so get name and then you can get the name okay and then you can give the save command to save everything for example right so everything is working fine but for example when i open a new terminal and i want to run redis cli for example from here how can i do it so i just want to write red s minus cli and i want to run it so let me just correct the spelling here so red is cli and i want to run it and it says command not found because right now the red cli command can be only run from this directory right so you need to cd to this directory and then run the redis command so how to solve this problem so this problem can be solved by running the make install command inside your redis directory so i'm going to just stop the server for now and now uh i will once again do for example pwd so you know that in which directory i am in so i'm in my redis 4.0.0 directory right let me clear the terminal so you will be able to see better so pwd present working directory and you can see i'm in my uh desktop directory and then there is a redis directory here which is this one and then we are in the redis 4.0.0 directory right so we have run here the make and make test command and you just need to write make install command here with the sudo privileges so you just need to write sudo make install here and then press enter and you just need to give your max password here and then press enter and then it will start the make install command and then you can see everything is installed and now you can run uh redis server and redis cli from anywhere right so let me just close this terminal and close this terminal also let me just terminate everything and i will open a new uh terminal so that we can check whether it's running from any other place other than this red is folder or not so i will start two terminals in the first terminal i will write redis server and it starts from my home directory and now i will give the redis cli command so just give redis cli and then i'm connected to this server right so everything is working fine and now you can start a redis server and you can use write a cli command from anywhere from your directory structure right so in this way you can download and install redis on your mac operating system hey guys welcome to the next video on registered role for beginners in the last few videos we have seen how we can download and install redis on our windows linux and mac operating system now further videos i will be making on my linux operating system that is my ubuntu operating system because more frequently or most frequently this redis server is installed on a linux machine and it's used from our linux machine so it's will be more appropriate to go further with this linux operating system but all the command which i'm will be using on this linux operating system using the command line are applicable on the windows terminal also and the mac terminal also so the command will not change and you just need to start the redis server and redis cli on your windows or mac os and then follow these uh instruction which i'm giving on my ubuntu operating system so if you are on windows or mac you just need to follow the same steps you just need to open two terminals on your operating system it can be mac or it can be your windows and of course the linux and on one terminal you just need to start the redis server so i'm going to just start the redis server here and on the other one you just need to start the redis cli okay so looks simple right the same step you need to do on your windows or your mac okay so once our server is running we can minimize this and start working to interact with this server using the redis cli okay now let's start with the data types which are there in redis and then we will see how we can use one of the data type which is string so basically there are five data types which we can use in redis and as i already told you that redis is a key value storage so the key is a printable ascii right and it can be up to 512 megabyte so it can take a really big uh key for example and it should be a printable ascii and then we can see the data types of values so the values can be strings and then uh the containers of strings so they can be hashes or lists or sets or sorted sets right so the key are printable asciis we can use printable asciis for keys and for values we can use strings hashes lists sets and sorted sets right and this uh reddish string can be up to 512 megabytes okay now let's start with the practical example so we will start with the basics and we will try to set some values and get some values so for example i have set some values already to this redis server so what i will do is to get all the keys which are set you just need to write keys and then the pattern which uh is asterix here so asterix is a wild card and it's going to search all the keys which are saved in your database and then give you the result so for example i have set two keys which is name and name two and it has given me both the keys which i have saved right so in order to see all the keys which are saved in your redis database you just need to write keys and as tricks right now as i already told you that to set some value as a string you just need to use set and then a key for example in this case i am going to write name 3 because name and name 1 is already set so i'm going to just set the third key which is name 3 and then i'm going to give some name right and then press enter and then once again i will just write keys as tricks and now i can see there are three keys stored in my database right so set is to set a string value and as you have already guessed from my previous videos i've shown you this command which is get command and whatever key you will write here it will give you the value of that key which is mark in this case right in the same way you can do name two get name two and it's going to give you the value of name two okay so get and set we are already clear now there is a delete command dell okay so using a dell and the key name we can delete some key value pair so for example i want to delete name 2 for now and then i will just press enter it's going to give me the number of keys affected and in this case there is only one key with the name two and now when i just do this command which is keys s tricks now it just gives me two values which is name and name three and because name 2 key is already deleted so i will not see this name 2 again right in the same way for example i want to delete name 3 key then also i can do del and then name three and then press enter and i can see the result one key affected and then now only one key left which is name okay so this is how you can delete some value right now let's set uh these names once again so for example name tom and once again do the get for example get name now you will see that the key value of name is overwritten with the name tom so previously the value of name was mark you can see here and now it's tom so whenever you set uh the value of previously uh set key then whatever value you will give for this key will be overwritten right so value will be overwritten for that key now for example if you want to delete all the values which are stored in our redis database then we can use flush all command so for example i will set some more values uh to see this example for example name 2 is equal to john and then i'm going to give name 3 is equal to max so now we have three names so we can just give keys and asterisks to see that so we have three keys stored right now for example i want to delete all these keys then i can give flush all so just write flush all command and then it's going to delete all the values so it says okay and then once again when we give keys asterisks then you can see empty list or set so all the values are deleted using flush all commands so these are some of the most frequently used commands which we can use with the strings in the next video also we will see some of the more commands which we can use with the string values hey guys welcome to the next video on redis tutorial for beginners in the last video we have seen how we can use some of the command with the string values now in this video also we will see some more command which we can use with the string values in redis so let's get started first of all i will show you one command which is valid in linux terminal also which is the clear command so when you do clear it's going to clear your terminal right so you can see when i have given the clear command it's going to clear the terminal and basically what it does is it just gives some of the some space in between your last command which you have executed and this uh after this clear okay so now uh you can see this terminal is totally empty now right and now we can start uh executing some of the other command so right now our database is totally empty i think so we can check it with keys asterix and now let's set some values and this time we can use a command which is called set ex okay and this set ex is the command which we can use with second so you just need to write set ex and this means set the value with the expiry of the key okay and then for example i just give the key and then i need to give some seconds so you can see the next option i need to give here is the number of seconds i want uh this uh key to live in my redis database and after that it will be automatically deleted so for example 10 second i want to give here and then i want to give the value of it for example max okay now when i just press enter it's going to say okay and when i just get name it's there right and then there is a command called ttl and then you can use the key with this and it says 2 and what is this 2 so ttl is the command for time to live so it will check for how much time or how long is this key is going to live okay and it says two seconds okay so this is time to live and then the key and then uh it returns us uh two second because eight tests eight second has already passed after after giving this command and once again for example i will just say get name and it's no longer there right because we have just set a 10 second expiry on this key so after 10 second it will be automatically deleted right for example i will just give a 50 second expiry for example here so 5 0 max and then i will just give a ttl and then name and then you can see it shows 44 second once again 40 second and then it will show you the seconds uh for which this key is going to live okay and after 36 seconds it will be deleted right so these are two more command which you can use with the string right now let's set one more value for example set name 2 and name 2 is equal to tom okay and now we can for example override this value so i told you whenever you write something like this set name to and some other name for example john then it will overwrite the value of name two for example i take name two as my key and give some other value it will override but if you don't know uh if name two is there and if you don't want to overwrite name 2 then you can use this command called set nx and this set nx first of all checks if the this key is available or not and if this key is not available then only it's going to uh you know create this key otherwise it's going to just ignore right so let's uh give this command and it says 0 0 because no key is affected due to this command that means when we do get name 2 we can see this name is not overwritten because this command is used or will be successful when this key is not available in the database right if it's available then it's going to just ignore and if it's not available then it's going to create a new value for example i will just give set nx 3 and this value is not available there so i will just give some other name and it says integer one that means one value is affected and then i will just do keys s tricks to see the values okay and i can see name 2 is there and name 3 is there that means this was successful right and i can also get the value from get name 3 also and i can see that value is there let me clear this terminal now if you want to know the length of the value stored in the key then you can just use str le n command okay and then the key name for example name two and it's going to give you the length of that key that means for example i do get name two here you can see it's a three character word and that's the length of uh this value right and that's the result here okay now for example if we want to set multiple values with the same command we use m set so just use m set and then the key and the value for example this time i want to insert some number so i will just say num 1 and i will just give 50 here and then after a space i will just write num2 and then i will say 60 here num 3 and for example 70 and so on right and then press enter and it says ok and then when i say keys keys s tricks it's going to give me name three and name two which were already there and then num1 and num2 because here you can see i have given the same key two times right so num1 was there num2 and num2 i have given two times let's see the value inside the num2 so num 2 get num2 and let's see the value inside it so the value inside is is the last set value so whatever is the last uh set value uh you will set for this key it will show you that uh value here right so once again for example i will just give m set m set and then num 3 here and then give the value of for example 60 here and then once again do the key asterisks it's going to give me name three named num3 num2 name 2 and num 1 right so right now i have two names and three numbers inside my database now if you want to set the expiry in millisecond there is a command called p set x and then it takes the value in millisecond you can see in the intellisense also right so i'm not going to set any value uh here but i just wanted to show you this command also exist which will take the value of seconds in milliseconds right so this is p set x okay now there is a one more command which is called d e c r and i n c r uh which we use to increment and decrement the value of some key so for example i want to increment the value of key num1 so let's see the value first of all so value of num 1 is right now 50 and then we can just write d e c r num 1 and then press enter and now the value becomes 49 right it will give you the result and when you give get num1 is going to give you the value 49. so this decr command will decrement the value by 1 and if you do inc r command to the num 1 for example once again the value will become 50. so incr and d ecr is to decrease and increase the value by 1. okay let me clear this terminal once again now there is one more command to increment or decrement the value by some number and this is for example inc r by so i and c are by and the key name for example num one once again and i want to increment the value of num one by five so earlier it was 50 right and then it's going to become 55 because i have incremented the value by 5. in the same way i can do decr by and on the same number num1 and for example i want to reduce the value by 30 right and then press enter and now it becomes 25 so get num 1 and the result or the value inside it is 25 now the last command i want to show here is the append command so let me uh just set one more value for example set and then the key name for example i will name it as my key okay and the value here i want to set is hello okay and then press enter and then get my key it's hello right now there is a append command so i can just use a p p e n d append and as the name suggests i can append something to the key right so i want to append to my key so i will just write the key name and whatever string you want to append here so for example in double quotes i will just give a space here and then i will just write world here okay and then press enter and you can see the number of characters i think for the new value right so once again get my key and it's going to give me hello world so space world is appended to the my key right so append is used to append a string so these are some of the other command which you can use with the string values hey guys welcome to the next video on redis tutorial for beginners in the last two videos we have talked about string values in redis now in this video i'm going to show you how you can use hashes as values in redis now first of all what are hashes hashes are map between the string fields and string values hence they are perfect data type for representation of objects in red is every hash can store up to 4 billion field value pairs now you may ask that i have talked about key value pairs but what are these field value pairs right so let me show you a slide and then you will be able to understand in a better way so this was the slide similar kind of slide i have shown you in the string data type also right so in the hashes we are talking about hashes now so in the case of hashes the keys are same which are printable ascii you can see here but in the case of string we were using string array here right and that string array was about 512 megabyte right now in the case of hashes we use this kind of map of field value right so field is this one and value is this one okay in the cases of string it was like a like only a string value right so i will give you an example for example i want to store a student's database or students info data then what i can do here is i can say student 1 as a key so student 1 as a key and then for example student has what attribute student has for example name surname age in which class he is so here field can be name and then for example name is equal to mark value 1 can be marked right age is the field 2 for example in this case and then for example 15 is the value 2 here right so name can be field 3 here and then whatever the surname of the student uh it will be value 3 right so uh for every student we can just provide this kind of map for his uh information so this is how uh hash data type as value work in redis right now let's take a practical example and then we will be able to understand this concept so i'm going to just start the redis cli and let me see what are the keys there so i'm going to just write keys pattern and these are all the keys so i'm going to flush all so let me flush all here so all the keys will be deleted and now i'm going to clear this cli and let's start with the hashes right so as we have seen in the case of strings we can just use this set command to set a key value pair now in the case of hashes we can use h m set to set a key field value pair right so for example we were talking about uh student information database right so just write h m set h stands for hashes here m set we have already seen in the case of strings also right so just write h m set and then uh for example stu 1 for student 1 and then for example i will just write name is equal to max right and then i can also give the second field value pair right so for example his age is equal to 15 and then for example class in which class he is so he is in for example eighth class okay this is just an example so this is students one information let me just give this minus here so we will be able to understand properly and then when i press enter it's going to say ok and to get this value there are two ways of getting so you can just say h get and the key name for example s t u minus 1 is the key name and you can give the field name whatever field you want to uh get or you can just say get a key name and here get we have already seen in the case of strings also and you just need to add a h before it and then the student key name it says error because we just need to give the field name also so what field we want to get so we want to get for example name of student one it says max here right now if you want to get all the information about student one you can just say h get all okay and here you can just give the student one key name and it's going to give you all the you know field value information about the student one so for example name max age 15 class 8 okay so let's add one more student for example so once again this command hm set student 2 and then the name for example tom age is 12 for example and class is 7 okay press enter and once again you can get the information about the student to using stu minus two right so let me clear the terminal so in this way you can just set the hash value and get the hash value right now uh there is one more command for for example h exists and this will tell you if the field inside this hash sets exists or not so just write h exists and then the key name for example stu minus 1 and then for example i am searching for surname okay and surname field does not exist in student one info right and then i press enter and it says 0 so there is no information about the surname of student 1 right in the case of name this name exists right the name field exists in this student1 hash set so when i just give this value then it says integer one that means it exists so zero it doesn't exist one it exists right now uh for example i want to delete a value what i can do i can just say h d e l and it says first of all i need to give the key name so stu1 and i want to delete for example class from it so i'll just write class and then i can just press enter right and then i can just do h get all and the student one key and now you can see class doesn't exist here anymore right for example i want to set once again the same value i can just write hm set and then the same student stu 1 and then class 8 okay and then press enter it says okay and once again h get all student one and now once again the class is added here okay so you can add and delete uh the values from this hash like this so for deleting you use hdl and then once again for setting you just add this field value pair now there is one more command called h set nx so h set nx so this this command is used for setting the field value if the field doesn't exist so if the field doesn't exist this command will be successful and if the field exists this command will not be successful so for example i will just say st1 name so name field already exists right and i will just give some other name to the student one right and it says zero so this command is not successful because this command will be successful only in the case of the field not available right so if i do the same command and i know that surname is not there so i will just write surname and some surname and then press enter and returns uh integer one that means it has created this field value inside this student uh set right so once again when i do get all st1 now this student1 also have surname information now as in the case of string we were using keys right so we were writing keys as tricks right same you can use for example h keys here and then the key name for example uh whatever key you want to give here stu 1 and it gives all the fields in that hash so by field i mean the name and for example age class and surname only the field not the value of those fields so it will only return the fields of that key whatever we provide here now as in the case of string values we were having decr decrement or incr for incrementing the value so the same is available in the case of hashes also so for example i want to increase the age of some student by some number i can do that so just write h and then i n c r by and then the key name s t u minus 1 for example and the field name is age i want to increment his age and then right now the age is 15 for example and i want to increase the age by 2 and then press enter and then once again when i do edge get all stu 1 now you can see the age becomes 17 right so in order to increment the value you just write h i and c are by and the key and the field which you want to improvement now if you want to know all the values of a particular key then we can just write h wells and then the key name stu1 it will just give you the values of that field value pair right so right now it's not giving name or age or class or surname it's only giving the values of them which is max and then 17 8 and the surname value right so hmels is for value okay now if you want to know the length of some hash for example i will just give this command h l e n and then the stu 1 the key name minus 1 it'll return you the number of fields in that hash okay so press enter and it returns four so i know that student one key has num four number of field name age class and surname so i can just verify that with that okay so four fields so it will return number four now uh the last command i want to show here is hm get so let me clear the terminal and then i just want to write h and get and it will give you the result whatever fields you want so for example for stu1 st1 for example i just want to know the name of that student i i don't want any other information about that in student but only the name then it will give me the name right and for example i just want to know the name and age even though the student hash contains surname and class also but i just want to know the name and age it will just give me the name and age when i use hm get then the key name and the field name i want to see so the field name i want to see right now is name and age so i just give name and age and it will give me the result of those field only so in this way you can use hashes in reddit hey guys welcome to the next video on registered role for beginners in this video we will learn how to use reddish lists so first of all what are reddish lists so redis lists are simply lists of strings sorted by their insertion order right so as i already said that a redis list is simply as list of string which are sorted by their inserter and order so a list would have a head on the top and tail on the bottom right now in this list we can insert any element from the top also and from the bottom also right so a element can be inserted to a list from the top or from the bottom now sometimes you see lists in a horizontal way right not in a vertical way but on a horizontal way right now if you see a list in a horizontal way your head will be on the left hand side right so your head will be on the left hand side and your tail will be on the right hand side right so redis have some command for example l push l push means the left push that means we want to push an element from the head right left and head are same in the case of list so this is how redis lists work it's simply a list with the insertion order now let's see how we can use lists in redis so i'm going to start a terminal i have already started my redis server so i'm going to just start the redis cli here and then press enter and i want to show you one more redis command which is a red cli command and i thought this would be interesting to you so i'm going to open our next terminal and here also i will just give a redis cli command and i will give an argument here so i will just give monitor command yeah okay so monitor so red is cli monitor and what this monitor is going to do is it's going to monitor all the commands which you are executing from your cli so for example let me give keys asterisk command here right and now you can see it's showing us that we have given this command keys asterix at this time this is time stamp at which this command is given okay so this is the timestamp at which this command is given and this is the command which we have given right so let's uh do flush all here and then press enter and you can see this flush all command is printed here so this is kind of a monitor right so this is going to monitor what are the command you are giving to your redis server okay so let's start with the redis lists so first of all uh how we can create our redis list so you can create this list by just uh giving this command you just need to give l push right so l push means left push that means we want to insert an element from the top right from the head okay and then we just need to give any uh key here for example key here i'm going to give num for numbers right and the first key i want to insert here will be for example one okay so first number right you can even insert multiple uh values here for this key for this list for example two three and four okay and then press enter and these four uh elements are inserted to the list in uh this order right now to see all the values in the list you use l range command so just use l range and then the name of the key for example number in our case and then you give the you know start and stop value for the range now redis lists index start from zero so for example starting value we can give zero here and let's say we want to just see uh the values in the list from 0 to 10 okay and then press enter and it shows us these values from 4 3 2 and 1 right so because we were pushing the values from the top we have pushed one first right so it will be pushed from the top one and then we have pushed two so the top value will become 2 now when we push 2 here and that's why it's our reverse order of numbers right so first we have push 1 and then we have pushed 2 at the top and then we have push three at the top and at the last we have push four at the top so that's why the number four is at the top of the list and number one is at the bottom of the list right now if we want to push number five on the top we can just do uh l push here so just do l push and the key name and then for example i will do number five here right and then press enter and once again i will do l range you can see 5 is at the top now if you want to remove the value from the top you give the l pop command okay so l pop command is going to remove the value from the left hand side left hand side means from the top okay so lpap pop is going to pop the value from the top and in this case our key is num and you can see it has popped five from the top that means our list is now up to four okay so let's give the same command i'll range zero to ten and now our list is one two three four because we have removed five from the top okay let me clear the terminal and then i'm going to show you one more command so let's start with the l range so we have right now four elements in the list now there is a r push command and r pop command also okay so when you do r push that means right push that means from the bottom you are pushing some numbers right so from the bottom for example i want to push the value five here okay first of all i just need to give the key a name and then from the bottom i want to push the number five and then press enter and i will do l range once again you can see uh this value goes at the bottom five goes at the bottom because we have r push we have used this command r push r push means from the bottom push from the bottom right from the right hand side of the list okay that's why this five goes at the bottom okay once again let's uh do this r push and let's push 6 at the bottom and once again do l range like you and you can see in the list you have the 6 at the bottom so in redis this list is sorted by the insertion order right if you push from the right it will go at the bottom and if you push from the left it will go at the top and for left push you use l push and for right push you use r push now as we have seen in the case of l pop l pop is going to pop the value from the top our pop is going to pop the value from the bottom so just give our pop here and then the key name and it's going to pop six from the list which is from the bottom right let's do a range command once again and now you can see six is gone from the list in a same way let's do our pop once again and now five is gone from the list so once again let's do l range and now we have a list of four numbers right let me clear the terminal here now let's give l range command once again and now there is a command called len okay this means left length and name of the key for example it's going to give you the length of the list in our case this length is equal to the number of element in the list okay so l ln is for knowing the length of the list now for example if you want to get some value at some index you just do l index command okay and then the name of the key and the index so index start from zero so zero one two three okay so for example we want to uh get number two here at index three so we will just say index three okay and it's going to give you the number one because index starts from zero so zero one two and three so index three is the value one here okay let's do index zero here and it's going to give us the value four now there is one more command called l set so you can use l set and the key name and then you can give the index at which you want to insert a value right so for example i want to insert the value at the very top so the very top is the index zero right and then the value itself so i want to insert the value at the zeroth index and the value is five and then when i just press enter it says ok and when i do l range you can see at the top at the 0th index this value 4 is replaced by value 5 right so the size of the list remains the same but the value is replaced at the zeroth index and now the new value is five here now let me push some more values here so i'll push you can do r push also wherever you want so uh l push num and for example i want to push number six here and then number seven and number eight here okay and let's do l range and you can see all the values are here right now sometimes you don't know the range or the length of your list so for example you just do 0 to 3 here and it's going to just give you 0 to 3 values right now if you don't know the length of your list you can give l range and then 0 to 1 so let's give this command and you can see it gives all the elements in the list so when you do l range the key name 0 to 1 is going to give you all the element in the list right this was giving the values from 0 to 10th index so if our list is of length 20 this is going to give you only 10 values 0 to 10 right but this is going to give you all the 20 values if you your list length is 20. now let me clear this uh terminal and let's go to the next command so now the next command is l push x and that means l push if the key exists okay so the left push if the key exists so we know that we have created a list with the key uh num right so let's do first of all this l range right and then we will give this l push x okay and this means that insert to this list for example uh this key exists already so insert to the list if this key already exists which you are providing here okay and this is the left push so we want to push one more value to the top so let's push 9 at the top and because this key num exists this command is successful right so let's do l range once again and this key is inserted at the top let's say we do l push x for a key which doesn't exist for example let's say we have a key for subjects so let's say the key is sub here and we want to push some keys for example once again one two three four five okay but this key doesn't exist right and then when we press enter it returns zero because this command is not successful because this command checks whether this key exists or not and if this key exists then it's it's pushing these values on the top right but because this key doesn't exist this command fails and there is no list will be created now the next command i want to show here is l insert before or after so you just do l insert here and then the key name for example num here and you have the option before or after so before after are the keyword for example i use the keyword before here so i'm going to just write before and the pivot name pivot name is this element okay so i want to insert the value before two for example okay so let me write two here and the value is this time for example 55 okay so l insert the key name and you can use this keyword before or after here and then the pivot and then the value and once again i do press enter and you can see now the list size is nine and when i do l range zero to minus one you can see this 55 is inserted before 2 right before 2 is the index from the left right because we have done the l insert okay so before 2 is inserted 55 right you can do after also so for example i want to insert after three okay let's insert after four so after five we want to insert the value four you can see uh after five there is three right so after five there is a value three and we want to insert 4 value 4 here and now our list is of size 10 and you can see now after 5 comes 4 okay and above 3 comes 4 okay so this l insert is used to insert the value before or after some value so these are some of the frequently used command with redis list hey guys welcome to the next video on register tool for beginners and in this video we will learn what are sets and how to use sets in redis so first of all what are sets so redis sets are an unordered collection of unique strings right so by unique i mean whatever values set contains they are all unique so no repetition is allowed here okay and they are unordered uh you know list so they are not ordered and they are unique so let's uh see how we can use sets in uh practice so i have already started my redis server and on my cli first of all let me just clear all the keys which i already have so i will just say keys and i have only one key which i'm going to flush all and now let's create a set okay so to create a set you can just use s for set and then add okay so s add and then give any a name any name to a key so for example my set is a key here and then you can add members here one or many okay so for example i want to have a set of numbers so let me say this is my first set so i will name it set one my set one and let's say i add here one two three four for example okay and i just press enter which is going to create a set and add these four numbers now here i have provided four different numbers right so they are all unique and to view uh the members of a set you just do s members okay so s members and the key name my key name is my set one and you can view all the members of the set right now for example in this set i want to add one more value so i just say s add and then my set 1 and i want to add 3 here right and i already know that here i already have 3 in my set and i want to you know add one more 3 to the set which is not allowed right so it's going to give me 0 in return that means the 3 is not added to the set because 3 is already there okay we can just prove with this by using s members and then the set name so you can see set is not changed the values in the set remain same because uh they must be unique okay on the other hand when i do s set 1 5 which is a new member in the set i can just verify this so you can see this time it's added and you can verify it with this value if you get 1 here that means the number is added to the set and if you get 0 here that means number is not added to the set right now for example if i want to know how many values are there in the set so how many members are there in the set so i can just do s card and then the name of the set my set one okay my set one and i can see there are five members in the set okay now uh let me create one more set so i have my set one let me clear the terminal first and now i will create a set two so set add or s add my set 2 here okay and let me add some more numbers here this time i will add for example 5 8 7 6 4 and 9 in this set okay and then press enter and i can view this set by s members here and the key name as set 2 and you can see these are the member of second set right now if you have multiple sets you can subtract one set from other using s diff okay so you can use s diff and this as tiff command returns the members of the set resulting from the difference between the first set and all other successive sets so this is the difference so i will just add my set one as my first set and then i will just give the second set as my set 2 okay and then press enter and it's going to give me the difference between these two set let me show you the values of the set 1 also so we can verify so you can see in the set one we have value 1 to 5 and then in the set 2 we have values 4 5 6 7 eight nine so from s diff it's going to give you the values which are there in the set one but they are not there in the set two okay so these values these three values are not there in the set 2 right but 4 and 5 are there in the set 2 so they are discarded so s diff is going to give you the difference that means whatever values are there in set one and not there in set two now if you want to uh know the s diff and save it into the third set for example then you can do that also so you can just write s diff and then store and then the destination so i'm going to save the difference in a new set so for example my set 3 right and then the difference between these two sets so my set one and my set two so these three values will be saved in the new set which is my set three okay press enter and then you can see by s members my set 3 you can see all these values are saved in the set 3 which is the difference between my set 1 and my set 2. now you can do the union also union of the set so for example i want to do union i can just write s union and the set name so my set 1 and my set two okay so i wanted to do the union of set one and set two and then press enter and it's going to give you ah these values so union means whatever values which are there in the first set also and second set also the combination of that unique value right so all the unique value which are there in the first set and second set so uh these value were in the first set and these value which are unique in the second set so this is the combination of s union okay and same you can do for storing so you can just write s union store here so just write s tune in store and i'm going to store it in set four for example so my set four the union of set 1 and set 2 right press enter and union is saved i can do s member my set 4 and you can see now it has 1 to 9 which is the union of set one and set two okay so in order to store use s union store now if i want to remove some members from a set i can do s ram for removing a value from a set or member from a set and for for example i want to remove uh some member from set 4 and i want to remove for example 9 okay and then press enter it's going to remove 9 from the set 4 and i can do s members 1 once again and you can see 9 is not there anymore ok you can remove multiple values for example 8 7 6 and so on and these will be removed so now i have only up to five values because 876 are removed now for example i want to remove a random value from the set so i don't want to remove a specific value but i want to remove a random value so for example i can do s pop here to remove a random value from a set so my set 4 for example and for example i want to remove only one value from here right so i can just press enter it says three so it has removed three from this set okay so let's do s member s4 and you can see three is no more there in the set four okay so it has picked a random value from this set and removed it okay i can give for example s pop my set for i for example i want to remove two random values so i can just do that and now it has removed four and one from the set and now my set is only of two values or two members two and five okay so as pop is to remove the random value from the set now let me clear this terminal and let me just print uh the values of set one and set two once again so set one has one to five and set two have four to nine now there is a command called s inter and s in the command gets the element of a set after the intersection of all the specified set okay so it's going to give you the intersection of all this specified set so just to s enter for example my set 1 and my set 2 and then press enter and it's going to give you the intersection intersection means these values are there in both the set so these are the intersection of both the sets so four and five are there in set one and set two so it's going to give you those value only and as we have seen in the case of sdf and as union you can do uh for example as inter store so you can store the intersection into a new set so as inter store and for example i want to save this in set 5 and then press enter and then i can just see the content of set 5 which is 4 and 5 which is correct now the last command i want to show here is s move command so s move and this command is used to uh you know transfer or move value or member from one set to the another set right so for example i want to move one from my set one to my set two okay so i want to move this value to the set two so what i can do so first of all the source source is my set 1 and i want to move it to the destination which is my set 2 and i want to transfer the value 1 member 1 right so press enter it says 1 that means the operation is successful so let me see the s member or members of set 2 and now you can see one is moved to the set two earlier one was not there in the set two but now we have one in the set two and let's see the contents of set one also so you can see one is no longer there in set one because it's moved from set one to set two so these are some of the most frequently used command in redis sets hey guys welcome to the next video on redis tutorial for beginners and in this video we will learn how we can use sorted sets in red is so first of all what are sorted sets so redis sorted sets are similar to the redis sets with a unique feature that their members can be sorted now every member of a sorted set is associated with a score and based on the score their members can be sorted right so you can see in this diagram uh the redis key will remain the same as other patterns but here you can see score here so you can define a score for example i will define a score 100 and then the value associated with the score so the value associated with the score is value 2 and this is our member of a set and there is a new feature in the sorted set which is this score right so you can define a score and with the score you can define a member or a value associated with it and then on the basis of that we can sort the members of our set right so let's see in practical how it works so i'm going to open my redis cli so the first command we are going to learn here is that add and the set ad is used to create a set if it doesn't exist or add a member to this set if it already exists right so every command in sorted set will start with this character z and then whatever its function is the function name for example right so that add and then the key name for example my set one and the score so score is one and the value associated with it so spelling for example you want to associate it with the score one is a right in a similar way we can define multiple score members here so score and the value associated with it two and b for example three is the third score and the value we want to associate with it is c and then they need not be in order so score can be five now and the value can be d here right or any other value right and then press enter and you can see four members are inserted in the sorted set now to get the members of a sorted set you use z and then range command okay as we have seen in the sets also and then what is your key name for example my set 1 and then starting value and the end value as we have seen in the case of sets also so in the case of sets we have seen that 0 and 1 are going to give all the values in the set right so press enter and you can see here all the values are printed here now you can see here the values are printed not the you know scores associated with them right so for example i once again write z add and then set one my set one and then for example i can just give score hundred here and then the value is e here right and then press enter and once again i will just give that range my set one and then you can see all the values here or all the members here but these are not the scores these are just uh order ordered number now if you want to know how many number of members are there in our set we can use z card here okay and the key name for example my set one and then press enter and i can see that there are five members in my sorted set right now in order to get the count of members in the sorted set with the scores within the given range we use z count okay and then the key name so my set 1 and the minimum and the maximum score value here so for example i want to get one two three here okay and then press enter and then it's going to count the number of values between this range right so for example i will just write one two five here and values are 4 because in between score 1 and score 5 there are 4 values including those scores now i can just write 1 to 50 here or 55 and still it's going to give us four values number of values because the last score we have associated here is hundred so when we write here one zero one here and then press enter then only it's going to give us 5 values and let's say we can give 99 here still it gives the 4 value so the z count is going to take the score values and then depending upon the score values is going to give you the number of values ah in between these scores now let me clear the terminal and to remove any member from a set you use z rem and then the key name my set and the member so the member here will be the member value so not the score but the member so for example i want to remove the member b so i can just give the value of member of b and then press enter and once again i will just give this sled range command and now it's giving the same answer because i haven't given the right key name so i must give uh zm my set one here right and then it gives integer 1 that means the command is successful and once again the range and now you can see the value is removed from here now if you want to determine the index of a member in a sorted set you use zed rank here so just give rosette rank command and then my set 1 and the member name so for example d here and then press enter and it's going to give you the index of this d right so the index starts from 0 so 0 1 2 right for example i want to see the index of e here that's going to give me the index three and for example for member a the index is zero now there is a z rev rank command also so you can just write z rev rank here and this is the reverse rank right so uh the rank will be sorted according to the score so highest score is the zeroth index right and then the lowest score is the maximum index okay so for example my set 1 and then the member name for example e is the rank 0 here right because index of e is the highest rank rank is 100 for e right and it's the biggest rank that means the index for it will be zero because we are printing the reverse rank here okay for example you want to see the index of a it will be 3 because it's in reverse order now the last command i'm going to show you here is z score command okay and then i can give the key name and the member name so for example i will give the member a and then press enter is going to give me the score value of this member right so for example i want to see the score of member e and press enter it's going to give me 100 because score associated with e was 100 right and for example this value doesn't exist in our sorted set for example i just added or given the random value here and then press enter it's going to return the nil value which doesn't exist okay now let me clear the terminal let me show one more command to you so for example i just want to print the range of my set 1 0 to 1 and this is a c d e and i want to add one more value here so i will just add z add and i want to add this value to my set 1 and add the score 1 and i want to add for example aaa five times and then press enter and and it returns me one that means the value for this score is now set to aaa instead of a for example right so let me do a z range once again and you can see here the new uh value is added here which is aaa right and if you remember the score of a was also one right so let me give the same command now which is z score and this time i want to just see the score of a which is 1 and then i want to see the score of aaa which is also 1. so it's totally fine if you give a same score to multiple values right so for example i want to give one more value to this score for example bbb and then press enter and once again the range i want to see this value is added and then i want to see see the score of b b b b so b b b b and you can see the score is still one okay so it's totally fine to have one score for multiple values now what happens to the rank here so for example z rank for my set uh 1 so my set 1 and then b bbb and the index here is 2. so this is how a sorted set works now there is one more command which is z range by score and then you can give the key name and then the score value minimum score for example 1 and then the maximum score for example i am going to give here 2 right and then press enter and i get here three values because there are three values associated with the score one and i think there was no score for two right so no value was associated with two so let's see one two four for example and now i can see these values and c also so if you want to get values by the range of scores then you can use that range by score okay so this is how you can use sorted sets in redis there are some more commands which are associated with sorted set you can just search for them and then practice them but these are some of the most frequently used command with the sorted sets hey guys welcome to the next video on registered role for beginners in this video we will learn how to use redis publish subscribe so redis publish subscribe implements the messaging system where sender is called the publisher and the receiver is called the subscriber right now in redis a client can subscribe to any number of channels so let me give you an example and let me show you how you can use radish publish subscribe so you can see i have opened three redis cli terminals in three different terminals right so this is ready cli first terminal second terminal and third terminal now first of all i am going to subscribe to a channel so i can just write subscribe here and then it takes a channel name right and i can give any uh channel name for example redis or any other channel name so for example my channel and i can subscribe to this channel okay so the name depends upon you right so for example i subscribe to the channel called redis and i just uh press enter so now this is or this terminal is subscribed to this channel right now from the second cli when i publish some message to this channel so let me publish something so to publish a message you can just use a keyword publish as we have seen in subscribe so to subscribe you use a keyword subscribe and then a channel name for publishing you use a keyword publish and the channel name on which you want to publish right so i want to publish on the redis channel and then your message for example hi right and i press enter and you can see on the subscriber uh it gets the same message so first of all it will just show you what kind of uh message is coming so it's a message and then on what channel it's coming and what is the message itself right now if you want to send a big message you can just enclose your message inside these double quotes so for example hello world here and then press enter then it's received here okay now it's possible to subscribe to uh any number of channels right so you can see i am subscribed to uh radish from one channel now i can just copy the same command in the next terminal here and then i'm subscribed to this channel so now there are two subscriber subscribe to one redis channel so this is the channel and i'm subscribed to that channel right so there are two subscriber for the channel name redis and when i just send the hello world again for example now it is received by both the subscribers right so you can see hello world is received here and hello world is received here okay so this is how publish subscribe method work in redis now when you are doing uh or using redis in the programming then it's really important or it's really useful so for example recently i created some kind of api where i wanted to listen for any event for save in redis so whatever is saved whenever some command comes and something is saved in redis i wanted to subscribe to that save event right and i have used this publish subscribe uh method from redis in that api and it worked fine so it's kind of listening to the trigger for examples for saving the data or some delete deletion of data you can subscribe and then you will get this message on the next side which is subscribing and based on that subscription you can trigger some event okay now let me just close this cli and once again open the cli once again and let me clear the terminal once again and there is a command called p subscribe so you can do p subscribe and then it takes the pattern so for example i can just write r and then s tricks r asterix here means any uh publisher when it's published on the channel name which start with r it will receive that message so for example uh i am publishing this publish redis because this pattern matches this pattern so asterix is some kind of a wild card here so uh it's whatever so for example i'm subscribing to our s tricks and i'm just publishing the same message again and you can see it's receiving that message because it's just matching the pattern whatever publisher publishes on the pattern which matches r s tricks for example r and whatever comes after r this is matching that pattern so it will receive that message for example i can just do something like this so i publish on r x for example this also matches this pattern right because we just want to match the first letter of that channel and whatever comes after that it will be matched automatically so this is kind of a pattern matching in radish so p subscribe is used to pattern matching and whatever publisher channel matches that pattern it will be receiving that message so you can see this is receiving that message but this cli is not receiving so because we have subscribed to a concrete channel layer which is not a pattern so whenever we uh just give the redis channel itself then only it will receive the message and this automatically receives the message because here we are just matching the pattern okay so in this way you can use publish subscribe in redis i hope you enjoyed this video