hey guys welcome to the next video on Jenkins tutorial for beginners in this video I'm going to show you how we can create a multi branch pipeline project in Jenkins so first of all what is a multi branch pipeline project so the multi branch pipeline project type enables you to implement different Jenkins files for the different branches of your project now generally in the software teams which is working on our project different developers can work on different features so let's say our team is working on a project called my app and we have a few developers in this team and master branch is generally the final product right which is going to be run in the production now when the developers work on some features they generally create a branch out of this git repository so for example here when you click on branches option here I have one a branch which is feature one so in a normal software project whenever some developer works on some feature he creates a branch and when this feature is implemented he or she merges this feature into the master branch now at the time when this feature is going on and the developer is working on how can he test this feature using Jenkins as well as the master branch so multi branch pipeline project allows us to test all the branches of your project at the same time using Jenkins so let's create a multi branch pipeline project in Jenkins and then we will see how it works so just click on new item here and then give any name to your Jenkins project for example Multi pipeline project and then scroll down and you will be able to see this option which is multi branch pipeline so select this option and then click OK so my multibranch pipeline project is created and here you can give some description about your project and in the branch source you can give the URL of your github project so here you can just click on add source and click on git and then just copy the URL of your github repository by just clicking on clone or download and then copy this URL from here and then paste it here where it says project repository I don't need to provide any credentials because this project is publicly available but if you want to add your credentials you can add it from here and then in the next section you will see behaviors and there is this option which is automatically enabled which is discover branches so your Jenkins job is going to automatically discover your branches and then run your test on all the branches now it's important to notice here is I have this Jenkins file here in my project right so make sure that this Jenkins file is there we have already seen how we can add this Jenkins file to our github project in the previous video so I'm not going to tell you how to do this but make sure that your project have this Jenkins file and then when you scroll down you will be able to see this section which says build configuration and in the mode you will be able to see only one option here which is jenkins file and you need to provide the path of your Jenkins file here and because my Jenkins file is on the root directory so I don't need to change the path of this Jenkins file right now when you scroll down more you will be able to see scan multibranch pipeline trigger and for now we only have one trigger which is periodically if not otherwise run so when you check on this check box you can run the scan on your project every minute or every two minutes or every you know this time period which is given in the list okay so for example I can just set it to every five minute then Jenkins will scan your project every five minutes and it will just look whether your project have any extra branch or not and if you have committed any changes then it will run the test on every branch of your github project now rest of the thing I will leave them as default because we don't need to use them for now so orphan item strategy we will not be using and then health metrics we can just click on this and you can see there is a one health matrix which is child item with worst health pipeline libraries we don't have any pipeline libraries so we are going to leave this as default and then the pipeline model definition we also don't have any model definitions so I'm going to leave it as default so what we have given here in the configuration the URL of our project and make sure that you have the Jenkins file in your github project so just choose or leave it as default which is Jenkins file and then click on Save button and as soon as you press the Save button you will see a scan will start on your multi branch project and this scan is scanning the branches in your github project and you will be able to see two tasks which are parallel running here one on the master branch you can see one on the master branch is running and other scan tasks is running on the feature branch and the same branches are available in my github project also so I have feature one branch and the master branch that's why there are two tasks running to scan them and when I click on my project here you will be able to see two jobs here which are running one is the master branch job and other is the feature branch job and you can individually click on every job so I'm going to click on the master job here and you can see this job is going on and you will be able to see the stages of this job which are currently running so this job is successful you can see and we can also go to the feature branch job also and you can see it's also successfully tested so that's why both of them showing the success now let me show you how you can create a new branch in gate and push it to your github project and how this trigger works so I'm going to open the terminal first of all and then I am going to CD to my project so I'm going to just CD to my project in which I am working on I have already checked out my project here now to view all the branches in your project you can give this command git branch and then press enter and it's going to show you all the branches in your project so I have two branches right now in my project one is master and other is feature one so let's create one new branch so in order to create a new branch you just need to give this command git branch and your branch name so so let's say I'm going to create a feature branch 2 here so I'm going to write feature 2 and then press Enter and now we are going to list all the branches once again and now you can see there are 3 branches in my project so one is master branch and other two are feature branches now in order to push this branch to your github repository you can give this command git push origin and then your branch name so my branch name is feature 2 and then press ENTER and you can see this branch is now pushed to our github repository so we can verify it by going to our github repository and then refreshing this web page and I'm going to once again click on branches and you can see our new branch is visible here which is feature two okay so now once we have the new branch we can trigger them with some web hooks like jeera or get bucket but right now we don't have any webhook so we are going to just press on this button which says scan multibranch pipeline now so I'm going to just click on this and then I'm going to scroll down a little and you can see there is a new task running here which is for the feature branch to and when i refresh this webpage so I'm going to refresh this Jenkins webpage and now you can see this feature branch to Jenkins task is running right so when I click on this feature branch to this build is running and you can see all the tasks are here running and the build is successful now so now you have three branches and you can see the result of three branches in your champions repository so this is how you can create a multi branch pipeline project in Jenkins I hope you've enjoyed this video please rate comment subscribe and bye for now