hello and welcome back to the new video of the Java tutorial Series so today we have completed the oops Concepts and now it's time for the exercise uh so exercise on oops Concepts uh head over to this link uh just type this link in your browser and you will be redirected to this page which is hacker rank page and here you can see uh some basic challenges on the oops Concepts in a Java animating this one Java inheritance to abstract class interfaces method overriding method over adding two instance of keyword so we can try solve this questions on your own but I will be uh taking for the first five questions of this challenges and you can try all these challenges but you can also try easy medium and hard you can set a difficulty level as whatever you want uh I'll be solving easy ones and so in this video we will be talking Java inheritance one and Java inheritance to solution to these problems okay so the problem statement is using inheritance one class can acquire the properties of others consider the following animal class so they have given us animal class which has one method wild walk and which is printing I am walking and this class has only one method walk and next time we want to create a bird class that also has a fly method we do this using extend keywords okay so they have created one one more class A bird which actually extends the animal and which has its own method fly and I'm flying is the print statement which is written inside this fly method and finally we create the bird object that can both fly and walk okay so they have one class solution inside which they have written main method and inside main method they have created the object of the bird class and using that object they have called walk and fly method and obviously this two methods will print I am working and I am flying this means that a bird object has all the properties that animal object has as well as some additional unique properties okay the the code above is provided for the for you in the editor you must add a sync method to the bird class then modify this main method accordingly so that the code prints the following line Okay so the expected output should be I am working I am flying and I am singing okay so they have provided us this code editor okay and we are expected to write one more method for the bird class which is sing method as you can see over here okay so we will write something reward thing and inside this method we will simply write system dot out Dot print Ln and inside this method I will write what we have to write I am singing I will copy this string and paste it over here okay okay this is the method that it has to write okay and okay and then modify the main method accordingly so that the code prints the following lines okay so I have to modify the solution class also and here bird dot thing is there okay now I guess it should print I'm singing I am submitting the code before that I will run the code okay let me just log in through my Google account foreign I will submit the code yes compiler message success now we congratulations so you have solved this challenge okay so this is about the Java inheritance one problem we will look into the Java inheritance second problem also wait let me open this in new tab okay okay for the Java inheritance second problem uh the problem statement is writer write the following code in your code editor below a class name arithmetic with the method name add that text to integer as a parameter and Returns the integer denoting their sum okay so let me write it down here comment what we have to do okay we have to write one class name arithmetic okay class arithmetic inside that class uh we have to write on method name as ADD one method should be there method and which accepts two parameters I and T comma int two integer parameters and then it Returns the sum and it is returning the sum of the two numbers okay and a class name Adder that inherits from a super class name arithmetic okay uh class name header an Adder class should be there one Adder class header class which inherits the properties of the arithmetic class okay so we have inherits inherits the arithmetic class okay and your classes should not be public okay so we don't have to write a class as a public because one class is already declared as a public list which is solution okay the input input format is you are not responsible for reading any input from this STV in unlock code step will be test your submission by calling the add methods okay this is the normal line output format should be you are not dismissible for printing any anything to STD out your your ad method must return the sum of its parameter okay the sample out sample output they have given as my superclass is arithmetic and 42 13 is 20 okay Okay so write your code here okay so first of all let me create one arithmetic class okay abstract arithmetic abstract CLA s s class arithmetic and inside this class I will write public abstract int add and this is going to accept two parameters final in a and final int B okay so this is the abstract method so I don't need to write the body of this method that's so okay and now uh I have to declare one another method or class okay inside this solution class I will just so it I can't edit inside this solution class okay let me create my own class in IntelliJ IDEA I will name it as in inheritance to I will get my main method and I will simply copied my arithmetic class that I have written over here copy paste okay now we have implemented the arithmetic man and we have also implemented the add method which Returns the sum and now we have to overwrite this method inside our main public method that is public class sorry inheritance to so we will write public in add and which accepts two parameter Final in a comma final in b and it performs simply the addition of the two numbers it will return a plus b okay and one more thing uh it it is extends this arithmetic class okay now it's okay now inside our main method we will simply create the object of this inheritance class in here it is to obj one is equals to new inheritance and using this object we will call this add method to call this method we will simply write obj one dot add and we'll pass two numbers let's suppose uh two numbers can maintaining 10 comma 20. okay so now I guess that is the work that we have to do inside this problem statement we have to just uh create one abstract class arithmetic and one hashtag method which will simply perform addition of the two numbers and that we have done over here and we will create one object of that class and we'll call it and pass the parameters okay now I will run this method around this class sorry not method and okay okay wait wait wait I have to okay I have to write this entire code inside one print statement because the method doesn't printing anything okay and I will simply copy this and paste Insider when statement and now if I run this question class Java class 30 is getting minted on the console yes because the addition of the 20 and 10 is 30. so this is pretty much about this problem statement Java inheritance to okay so we will discuss uh other problems also Java abstract Java interface method overriding method overriding two uh in our upcoming video so thank you for watching this video