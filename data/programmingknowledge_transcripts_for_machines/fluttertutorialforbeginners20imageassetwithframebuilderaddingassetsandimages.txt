welcome to programming knowledge so in this video we are going to discuss about images and the first type of image that we are going to discuss about is the asset image and as the name suggests the image will be an asset okay and an asset to the project means that the image is in the folder where the project is or in the root where the project is so for that first i need to add a image in my root folder okay so for that i'll create a separate folder and i'll call it asset okay and then i'll paste any simple image okay so for now i'll this image seems fine i'll add it to the asset folder okay so the image is now in our root directory of the project okay then the next thing that we need to do with every asset image to use it in the code is to add it in our pop spec.tml file okay so to add if you look you will see some commented code and you can see it over here okay so first we write assets and then the location of that image okay so i will simply comment this out okay and then over here instead of this it will be asset and then the file name which is in this case reshaft.png sorry and then we need to save this and then you can see automatically over here the flutter get command will start running so once it is done we can start using the image in our code okay so for that in my my home app i'll remove the body okay for now and i'll create another new body okay and the body is a image and dot asset okay so we are using the named constructor of image okay and we i will surely post a video on constructors class and objects in dot okay so for now image is a class and it has a named constructor that is dot asset okay so as it is an asset we can say it first takes the string name okay which is the required file which is the required parameter i'm sorry okay so i'll pass the name and we simply just can't pass the shop.png okay we also need to pass the folder because we have kept it in a separate folder and as i told asset refers to the data which is in the root root folder okay so i'll write asset and reshop.png okay so now if i save this i should be able to see my image on my mobile screen okay and you can see that okay so this was this is the image that i have added and the first thing that people tend to forget is to not add it in the prospect.tml and then they struggle a lot to fix their okay so that is one important thing that you should never neglect okay so then if we added the file name we added the image name first then the next property that we can add is height okay so our height will be of let's say 20.0 height takes a double value so that's why i have added a dot is 0 if i will not add it then also it is fine but adding the point 0 is a better practice okay so i'll save this and now my image size should have shrinked okay and you can see it has shrinked a little bit too much okay because the height is way too less i'll make it hundred and you can see the image has images height has decreased and since the height has decreased the width has also decreased and as we are talking about width we have a property called width okay and we can give any value we want okay so for now suppose i get 50 okay then since 50 is the smaller one then the scale right now will be 50. okay and you can see the image has shrinked even more okay so these were a few basic things now the next thing that we are going to discuss is the frame builder so as the name suggests it builds the frame in which the image widget will be shown so frame builder then it takes a it returns a method which has four parameters first one is build context okay so build context will get let's call it cons context then the next thing is widget child then in frame and bool was synchronously loaded okay i'll give a comma over here and then format it okay so now let's discuss what are these parameters over here so the build context returns the current context okay then the widget child so it contains the default image widget which is guaranteed to be normal because if we create an image asset then this is the required field we cannot neglect it we need to give this field and since we give this field there is some image displayed on the screen and therefore this child will never be null the next thing is into frame so it contains the frame index it is of no use right now it basically comes in play when we display a gif or a video because what basically happens in a video or gif is that the image frame keeps on changing continuously at very minute interval okay so when we want to change the frame in between a video or a gif then this frame comes to play okay for now the frame value is null and as soon as we build it its value will become zero and for gif or any other multiframe image it will increase by one every time any new image is shown and when something is not important we change it with a underscore okay so that means it is just a placeholder it has no significance in the function but still we need it in the function definition okay then the next thing is was synchronously loaded okay so before discussing about this we need to understand what is synchronous and the difference between a synchronous so for that i have found a blog which beautifully explains about both and the difference so you can have a look at it later okay for now in simple terms what synchronous means is that the transmission of data was done immediately and as we are using it in images image widget so over here it stands for whether the transmission of asset image to the widget was done immediately or not so it is generally true but if it is not then you can display some other widget until it until the image is being loaded like a progress bar or stuff like that okay so these were about the four parameters now inside this function we need to return a widget that will be the frame of our image okay so for now i'll remove this okay and save this okay so we are getting an error because i have not yet passed anything i'll comment this out for the moment okay and then save it and run it again okay so you can see our images like this and now when we use frame builder we return our widget that contains the image widget okay that acts as the frame for the image widget so for now let's just give some padding to it okay so return a padding that has a padding and the padding is first then edge in sets all and from all the sides i want to add 10.0 okay and the child is our widget child which we get over here okay that means the current image we check okay then i'll format it and save it so now you can see the image has padding from all the sides okay so to make the change significant i'll change it to 100 okay and you can see the image has automatically left 100 pixels padding from this side from top and even from bottom and right but it is not significant in the screen as we don't have any other widget okay now we can also change it to container and add some color and see if it works fine or not okay so container then the container has a color let's say colors dot red okay i'll save it and you can see the container is red in color and it has 100 pixel padding from all the four sides okay so now you can also try some different things in this if you want so the first is decoration for decoration we have a box decoration we have discussed all this in the previous videos okay and then since we are using a decoration we can't have a color outside okay it is like of a quick recapitulation so i'll paste the color over here and then i will also like to change the shape so the shape is in the box shape pinum and i'll make it circle okay then again format it save it and let's see what happens and you can see the padding has become circular okay so this is how we use a frame builder okay so frame builder is a very important thing when we deal with images and it is a thing where people generally make mistake so i hope all the concepts were clear till now will continue in the next video thank you