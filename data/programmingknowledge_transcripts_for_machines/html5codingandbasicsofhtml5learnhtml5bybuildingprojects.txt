hello guys welcome back to another tutorial hit the bell icon button so that you don't miss out any tutorial hey everyone welcome to html5 from scratch we're going to be learning all about how html5 works and all the different technologies that work with html5 to become a web developer so this course is going to cover a lot of things we're going to cover html5 we're going to cover CSS we're going to cover a responsive web design introduction to JavaScript and how to deploy to the Internet we're even going to cover how to set up git and use github which is an essential tool for all web developers we are going to get into some more advanced things like animations using CSS we're going to talk about and use CSS frameworks such as bootstrap and materialise and others we are going to create several projects throughout the course small projects to help us learn our skills and then a bigger final project that to build which will be a a professional portfolio with a working contact form that we are going to learn how to deploy using Netta fly and we're going to be even learning a little bit about the backend and how that all works using git and github so even if you are knowledgeable about HTML and CSS and even a little little JavaScript this course is going to put everything together and you will I think get a lot out of it even though it is for anyone and it's for everyone we are going to start at the very beginning so if you have no prior knowledge of web development or coding this course is for you if you do know some of the some of the HTML concepts and basic CSS and basic JavaScript you can feel free to fast forward through some things skip things all together but this is going to be a comprehensive course that will give knowledge and skills on how to put everything together all the way to the final deployment so HTML was developed by Tim bernerslee in 1990 it's short for hypertext markup language and it's used to create web pages that are displayed on the web you also can connect pages to other pages with hyperlinks html5 was first introduced in 2008 and then it was stabilized you made it might even say standardized in 2014 and is the newest version of HTML if you look into the history of HTML there is some interesting things that happened from 2008 and to 2014 that you can learn more about about the standardization of it and how it evolved anyway html5 uses the basic rules as older versions but will at but add some new tags and attributes which makes it a lot easier it's just easier than ever to to create web applications we are going to learn and use quite a few of the new html5 technologies we are going to delve into learning about some of the advanced things like canvas and C f/c SVG features using audio and video and incorporating those things into our web page and even look into web storage and local storage then we're going to be using some of the more common new elements like section figcaption nav headers footers and then we're also going to be creating a contact form page on our final project and use a lot of the new input types so here's an example of what the old version of HTML looks like when you begin an HTML page and it has all it has all the same things that html5 has except it's a little Messier there's just things that we don't have to see anymore it's pretty it's it's it's not easy to read it's not easy to understand so let's compare it to the new version the html5 version which is a lot cleaner easier to read easier to write so let's talk about some of the different things that you're seeing so at the top you're going to have a tag that says doctype HTML and that is telling our browser that this is an HTML page and then we have our HTML opening a closing tag and we're going to learn that in HTML we need to have an opening and a closing tag for everything so what that means is the opening tag is a greater than and and a less I'm sorry a less than and a greater than and then the closing HTML is the great that's less than slash and then the greater than and everything inside of that duck of that HTML tag is what encapsulate s' the HTML document then we have to have a head tag and here's the opening head and here's the closing head and then we have a body tag opening and closing and everything inside the body tag is what you see on the page so it's what the user will in the browser the the the elements that are inside of the head are not seen on the browser and I'll explain that when we start doing it ourselves the things that are in the head are very important but they're not something the brow that the users going to see so for example this is some information that for example your search engine BOTS are going to be reading to understand what the page has it's going to have a title and so your search engine BOTS will read the title and then it might even have a description and when you go to a search engine and you look up a you do a search and you and you find some webpages you often will see you'll see the title and the description in the search engine you know the page and then you'll know kind of oh do I want to go visit this site or do I not want to go visit the site and that's what where you see that's where this stuff is put in and then this meta tag here talks about the kind of characters that we're going to be using in this page you also could have a a meta tag that talks about the language that you're going to be using and then you're going to also add some other things called link tags that are going to help us to link our stylesheet to our HTML page now in the body this is where the text and images are going to live and this is what we see on the browser and we're going to be learning how to write all these different elements this is an h1 element and this is a pair a P element or a paragraph element and H stands for headings this is a heading 1 element and it's gonna show this these words with very large text so h1 is the largest text that we can display whereas a paragraph tag is going to display this text as normal text and there's all types of different elements that we can create on our browser and on our page CSS is something totally different and what it does is it makes the things that we see on the browser the different elements it styles those different elements and makes them more interesting to look at and more pleasing to see so for example with CSS you can make your text different colors different sizes you can put under you can underline it you can do all kinds of things to your text you can Center it on the page you can do some animations to it you can add so when you add images to your page you can Center those images you can move them around you can make them circles images instead of squares you can add shadows to those images you can add borders to those images and same with any element so you're styling sheet is going to make your webpage look beautiful now the cascading refers to which style rule applies if more than one rule matches a particular element so for example if at the top of your CSS page CSS file you make a rule that your h1 tag or heading is going to be read then if later on down the page you make another rule that h1 is going to be green then those are conflicting so in the cascading the cascading version the way it works is that the green one the one at the bottom is going to override the one at the top because it cascades down so that's what the cascading refers to it that and those things will become more clear as we get involved in CSS a separate stylesheet is best practice so CSS is designed to enable the separation of your presentation and your content so your content is brought about by the HTML page but the presentation is brought about by the CSS file and what this does is it gives you more flexibility and it it becomes easier to to work through your your coding for example if your if you have multiple HTML pages they can all follow the same style from that separate CSS file that you created there is a way to put your style inside the HTML page or inside the HTML file in your code but it becomes very cumbersome and very it just becomes very difficult and to read and your file becomes gigantic and it's difficult to find things and to work with because it's so so humongous and it's you can't find anything anymore because you've got so much the other reason it's important is the CSS can help you change the styling for different versions of your HTML so if you are going to be writing for a mobile phone and a tablet and a desktop you can use that CSS separate CSS file to denote how you want your HTML to appear on the different sizes and that talks that gets us right into responsive web design which is absolutely very very important for today's climate with all these different devices that everybody's using and we're going to learn techniques so that our apps look really good on all these different sizes and that's what responsive web design is all about and then we're going to do an introduction to javascript javascript is a highlevel interpreted scripting language and we'll be building some small applications to learn basic javascript and to get some experience with how HTML CSS and JavaScript work together so for example if you're on oh if you're on a webpage and there's a part a place on the page where you can input as a user you can input your name your email some more inputs maybe your phone number your address and then there's a little button that you can click that says hey is this the same address as your billing address is the zoo shipping address is the same as your billing address and then you say click yes and then all of a sudden all those inputs that you just put in for your name and email just automatically gets inputted into the other fields without you having to write them in so that would be JavaScript powering that or let's say you're on a forum type of website and you can input some text and some some different things and your as the user and you click on a button and you add all that text to the page so that others can read it so those are all the different kinds of dynamic things that JavaScript offers so the materials that you're going to need for this course is just a text editor of your choice so popular text editors are Visual Studio code sublime and atom and others I'm going to be using Visual Studio code people refer to it as vs code and in our next video I'm going to give you a tour of vs code in case you decide to use it you are very welcome to use any text editor but if you've never used one you might as well just go ahead and use vs code and then your experience and Mike will be theirs will be the same as my experience so when we're coding together it'll be easier for you to follow along so that's it our next video we're going to be starting to code see you then hey everyone welcome back we're ready to start coding I like to start on a fresh on my desktop on a fresh desktop and begin with a new folder so I'm going to rightclick on my desktop and hit new and then go over to folder and then we're going to title it whatever we would like so since we're just doing some practice I'm gonna title this one coding practice you may title it anything anything that you'd like okay so now that I have my folder I'm going to open up visual studio code and you'll see a welcome page and you can either go to open folder right here under the Start menu or you can go to your file and do the same thing where you would stay you would see where it says new folder not file open folder you would hit open folder and it's going to look in my look on my desktop and I'm just going to pick so I'm going to go to my desktop and I'm going to pick the folder that I just created which was coding practice and then I'm just going to select that folder so it's going to open that folder for us and that's where our code is going to live okay so here is that folder that we just created and the welcome page I'm going to go ahead and just delete it for now just close it out for now okay so now I have my coding practice folder so the first thing we're going to do is going to create an HTML file so we're gonna hit on click on the icon new file and most often we will title our initial HTML file index.html so index dot HTML and hit enter and it'll open up automatically for us okay so here is our index.html file and it's empty and what we're gonna do is we're going to use the feature on vs code where we just type in HTML and we get our little choice menu choice and we're gonna hit the one with a five and now we have our boilerplate so we'll change the title and I'm going to say coding practice and of course you can say whatever you want okay and what I'd like to do next is I'm just going to minimize go ahead and minimize this for a second so I can go back to my desktop now I'm going to go back to my folder or coding practice and now you can see inside that I have a index.html file inside there so if I open it up so we can see it and so there's my index.html file even though there's nothing in it yet so what I'm going to do is I'm going to right click on it and I'm actually going to do it again I'm gonna click on it first now now that it's selected I'm going to right click on it and I'm gonna say open with it should give me some choices here I can open up with Firefox Google Microsoft edge so I'm gonna open it up with Google doesn't really matter and that page is gonna open up but there's nothing in it yet because we haven't put anything in it yet so it's just going to be in our local environment this is on our on our own machine it's like our local server it's like so this is how you can see everything that you're going to write so what I'm gonna do is just minimize it a little bit just make it smaller and then I'm going to close out this and now I'm going to go back to my vs code and I'm going to go ahead minimize this a little bit just make it a little smaller so that I can see both screens so I want to be able to see my code and I want to be able to see the browser as well and then we're gonna start start coding inside the body and then we'll be able to refresh the browser and then see see the output okay so I'm in the body so let's start with some basic HTML tags so we're gonna start with our our header tags let's go ahead and start with all of our H ones so what you'll do is just start with a lessthan like that and you'll say h1 and then you'll close it and then automatically via the S code is going to give you your closing tag so you have your h1 here and then your closing h1 and then inside the cursors already inside it so if you just hit enter then you can see that you can put something inside the attack now another way to do it in vs code is just type H 1 and hit enter and you get it so you don't have to type all the little greater than's and less than's so and you don't have to hit enter and separate them if you don't want to especially for the h1s and h2s and stuff you're not gonna be putting a lot of text inside there so I usually just leave it the way it is so let's say let's say my web page and we can put anything we want in here and then what I'd like you to do is save it so you can either go up to file and save or it would be a lot easier just to hit ctrl s so I'm hitting ctrl s and now I'm going to go over here to my browser and refresh or reload the page and now we see the output my web page alright this is exciting okay so let's keep going now I'm going to type h2 and hit enter and I'm going to just right some text this is an h2 and I'm gonna hit ctrl s to save it and then I'm going to refresh and then you can see that this text is smaller than the h1 text now each browser has their own default styling so chrome is going to show this up show this in a certain way whereas if I had chosen Microsoft edge it might look different it will probably look different and then Firefox would look different and every single type of browser is going to have their own default styling we're gonna be overriding all of that when we do our own CSS and overriding some of it if not all of it so just wanted you to be aware of that okay so let's go ahead and do all of the different heading heading tags just to see the differences so h3 and I'm gonna right here's an h3 and then I'm not gonna save it yet because I just want to do it first and then it will save it at the end let's do an h4 and we'll say hello and then we'll do an age 5 and we can say let's say hello world something different and then we'll do an h6 and that is it that's those are all of the different ages okay this is it okay now that I've done it I'm just gonna control s and refresh so you can see that they all get smaller and smaller as you get to the higher numbers okay so you can choose different headers for this larger larger text all right so let's next do some other elements so a very an element is a div a div element a div element is a container it's calm it's a common element that we use and it just contains it can contain other elements so let's go ahead and and put it in so div and hit enter and then I'm going to hit enter again and now I can kind of see my container so inside of my div I'm gonna go ahead and put a couple other elements in there so let's do an h2 and I'm gonna say what are dibs and then I'm going to do next and h5 just for fun and inside there I'm going to say divs are used so I'm basically just gonna be writing some text but at least this text is helpful for you so when you keep this code you can refer back to it and you know to see what the definitions of different things are so divs are used as containers it seems like it's better than just making nonsensical paragraphs of stuff so divs are uses containers for other HTML elements and help us divide our page into sections okay so I'm going to hit control s and refresh and then I can see that I have my div all right so there are a lot of other elements that are similar to divs in in that they create containers and create sections for our page and we have we have some of them are called SEC there's one called section there's one called article on one called us aside divs are real common but it's it's kind of nice to have the other ones just in case you want to you know it's just helpful for you as the developer to see your code and divide your code into different things that are more useful for you okay now why don't we do another why don't we do another one let's do a section a section tag section and then inside our section let's go ahead and practice doing some other elements so I'm going to do a paragraph element so P and so this is going to be normal text so I'm going to say this is a paragraph with normal sized text okay and let's do some other ones how about we try italic I and I hit enter and I'm going to write this is italic okay and then I'm gonna do another one called emphasis M is emphasis and I'm gonna say that this is emphasized text okay and you know what I'm gonna do I'm gonna go over here to my file icon and I'm going to click it and that's gonna get rid of all the folders and that way I can see more of my code and it's just a little easier for us to to to manage next I'm going to do strong strong as another element and that is going to be bold text so this text this element uses a bolder or stronger text okay and then finally what else should we use let's do now let's do bold let's do actual bold B there's one for bold and see if that's different this is bold text okay so why don't we save and refresh and see what we can come up with here alright so we can see that we have our paragraph text we have our italic our emphasized which look exactly the same to me and then we have the strong and the bold and again they look exactly the same as well so there are different choices but it seems like they're very similar you might notice that if you look down the page everything is you know everything is right next to each other like underneath each other everything's just goes to the next line next line next line next line until we get here you're italic and you're emphasized or right next to each other and you're you're strong and you're bold is right next to each other if I if I expand this this again these stay right next to each other this is by default these elements are called inline elements by default so they're going to stay in line whereas all the other ones are called block elements which means they're going to go to the next line next line next line so as you learn which ones are in line and which ones are block it'll help you to decide what to do for your design as you're starting to design design things so quickly if you were if you were sitting here going okay yeah I want to do some italics and stuff but I don't I wanted to go to the next line there's a couple different ways you could do it one is to use CSS but an easier way is to simply put a break in in the in the ones that are in line so for italic I would go I would just type BR and hit enter and it would the code the text editor would give me my closing and my opening and closing tags or brackets and a break is is a single element it doesn't have an opening and closing it's just all by itself and then if I do another break after my m BR and hit enter and then I do another one after my strong BR and hit enter and then I do a final one after my bold BR and enter so I've got these breaks if I save it it should and it will put these things on the next line so let's see if i refresh and then you can see that everything goes into the next line alright this is a good spot to stop and take a break thank you for watching don't forget to subscribe the channel if you liked the video do give us a thumbs up and share it also check out amazing discounts and offers on our premium poses in the description below