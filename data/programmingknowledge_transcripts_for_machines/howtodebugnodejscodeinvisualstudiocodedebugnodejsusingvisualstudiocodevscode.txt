hey guys in this video we're gonna and see how can we debug Tobias code for a node.js applications this is the window we got for is code I have already installed support for Java so if you have like this color then you can just click on it and you can get the features of JavaScript in your vs code application and there is some intelligence some extension that you should download or easy looking like beautify and here also like typical for Firefox ES length or intelligence and NPM and also ps4 icons that's good so let's see our Holy Ghost so let's go to Mongoose demo and we're gonna see how can we do bulk and see how can we t work some code and see what's going on for now just just to use the npm run there for here and just run it and we're going to create some create one user here so let's create it so for creating we are gonna go to our knowledge demo and go to our create user both tasks in here if there is a party then you can just send you from here so let's send it so we got the user and you can see in our MongoDB compass just use it here so we we haven't like you will see right now table but we will see so let's see if we have a user in our database or not so let's see what we need to hold tbody so in here in a run there is one called start debugging solid let's just click on it and let's see what happens so we got this box here so and you can see what happens here like what so we see we got an error that says like already in use because we are running this application in 3000 so first of all we have like stopped this one and just run this the debugger so just we click on it running debugger and now we can see that it is running on so if we invest god we just simply use we can we will tackle on this like them this is running separately and debug is drying separately we are gonna see so how can we use T Perkins all in the terminal so it will be easy so in here we see it some dialog box in here this is stop this is like restarting the debugger process it is for like Brett point so we gonna go up or down or just like just go through this whole function and go to another step so this is what we use step over and this is going to like pause 30 bug more later debugging so yeah so we gonna see what's the breakpoint here so we are creating user so let's say we are gonna use a break point here so we can see what we are sending from the post went to the base code and we're gonna see what's variables watch call states and if there is loaded script and also the breakpoint away we can see that it has been has a correct box that means we are gonna use play point in here so let's pour off for now we're gonna just to remove this user from here and we're gonna send back the same user and we're gonna see that what happens let's see what will happen so let's send it again yeah so now let's cube this a full window we can see that the debugger has created an arrow sign in here and if we see in postman we see that the response has not been sent because this is like brick like the data is being break here it is not sending after there here so if we just power over here we can see that what are we are we are sending it from here so these are the requests third party parameter and here if we just over on the body part we can see that we are selling a email name and password we can see from here yeah but we cannot see it says like a user is undefined because the breakpoint is telling that all the things is not being assigned to the user here and here we can see the calls text is all about like what's been handling truth all this process so it's not to see more first of all and this are the load a script which are being used doing this process and these are the very ones that are using here so this is means it is a global request response because it has seen here what's the response and user but how can we go to the next step and it's try and catch block so for this we are gonna just use this symbols that have been given so we just you step into or we just wanna use to continue continue we'll what do is let's say we use continue then see what will happen so if we just continue we will go to our postman and see that the user has been created so what happened is that all this disparate point is going to like remove from here and just go to hole means use all the processes to be used from here so that's not what we that's not tells what has happened here so for knowing what has happened we should use these symbols like step out or step into so we're gonna see here once once again we are gonna remove this one the remove the Alex name so just remove it and again we are gonna send it back and we can see that it is also it has break point so not to worry so just send it and if we are saying back test breakpoint so we're gonna see what will happen so just use the down arrow again down arrow down arrow down arrow down oh these are the things that are happening here you can see that that is the thing in the do it are we happening here so these are all the process that is happening behind the scene so in here we can see that we have a step over from this line to this line and we can see that in user we cut all the body that we have we are sending and we can also use this to see what's in the variable in here just to click on the just we have used a user and we can see the these are the things that you are sending from response request from the postman and see there's these are things so that's how it's done so staple work like again we are sending and it's act so yeah these are all the things that are happening here and we can see that in postman the request has been sent and if we refresh it we can see it in here it telex has been activated so we have seen that how it's typically running yep but there is one more thing that we have to see that we are learning in the debug console but not internal and also that whenever like Nordmann restart its it does restart it will like him for one I want to ask so we won like the use not one for this how can we do with this so for now let's just stop it and we can start from here and we are back to where we are so now what to do so in here you know in the run start debugging it is some open configuration edge configuration so we are going to add some configuration in here so in here what we want you want to restart it should be true and what make another things want that we're going to use running time executables in here and for now its default as a node node but we are going to use Nordmann here and also there is one called console and in this console way when I use integrated console in here so just use it and we're gonna save it in here and also the app is going to run from index torches because in the world directory we can't see their index or chase it again so we are gonna use in here let's use in Finland there and also run our debugging and see if we caught in air that cannot find one time Nordmann on part so what is needed here is the Northmen globally so for this purpose we are going to install not more globally so for this and you install not more gee so at the meantime we're gonna see what we can do I have installed an odd morning globally so now if I run again oh sorry I have rendered on run without debugging okay it is running so now we are gonna run debugging here so it was started polling here and it's in terminal so you can see that we are running the debugging process internal and if we start restart this this is going to restart again and again so just use the debugging process in here and we are gonna stand back the same Alex water so for now let's just delete it and we're going to go to the postman and again run it and it's running here and we can see it a debugging process is going on here and yeah so this how it's done you can see what's in the user and what's in the party so this is how it's gonna through this process and just continue it and we can just simply use toe debugging process now yeah and if we're gonna just save it again like how can we write it I can save it it's going to give error it's playing as a debugging process here and just go and just use again the message one and I can say that it will very set it so that's how it's done and for now we're gonna stop it and it's in order quest because we have them so yeah that's how it's done thank you