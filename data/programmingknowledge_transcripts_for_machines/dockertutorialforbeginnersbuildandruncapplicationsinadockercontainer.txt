hey guys welcome to the next video on docker tutorial for beginners in the last few videos we have seen the fundamentals of using docker files docker images and docker containers now in this video i want to give you a concrete example of using the docker container so i'm going to give you a real world example of how you can really use docker containers and how these docker containers are really useful in certain situations so we are going to uh compile and run a c plus plus program inside a docker container now you might say that compiling and building a c plus program on your host operating system is also easy so why do we need a container so consider a situation in which you have a seek plus plus program and you want to compile a c plus plus program with different version of gcc let's say now it's really hard to maintain different version of gcc on your linux or windows operating system but using docker containers it's really easy to use and compile your program in different gcc versions using docker containers also let's say you want to develop a c plus plus program which works on multiple operating system or you want to compile your c plus plus program for a cross platform application so docker containers are really useful for c plus plus cross platform development with containers with containers you can choose a target with a platform that runs completely different operating system other than your host operating system or the system on which you are developing so let's say you are just working on your windows operating system but you want to compile your c plus program on a linux operating system or any special version of linux operating system you can do it easily with the docker container so let's start with our example so as you can see on my visual studio code i have opened a docker folder and inside this docker folder i have this directory d1 which we have created in the previous video and now i'm going to create a new directory inside this docker directory and i'm going to name this directory as d2 and now i'm going to just go inside this d2 directory so let's go inside this t2 directory and here inside this d2 directory i'm going to create a new cpp file let's say so you can use touch on the terminal or you can just click on new file here and then just create a new cpp file with the extension cpp i'm going to name my file as main dot cpp and as soon as you create a cpp file inside your visual studio code editor it's going to give you the suggestion for the c plus extension so i'm going to install this c plus plus extension so now this c plus plus extension is installed and this c plus plus extension is going to help me to work with the c plus file inside my visual studio code editor so what i'm going to do here is inside my main.cpp file i'm going to just write a very simple program here which just prints hello docker container so normally what you will do on your host machine if you have g plus plus or gcc you can compile your c plus program using g plus plus right so you can see i have this main.cpp so i can compile this program using g plus plus hyphen o and then the executable file name which i want to create let's say i want to just give the name test to my file and then my main.cpp file right so i'm going to just press enter which is going to create this executable file you can see here also i'm going to do ls here also so you can see this executable file and now you can just run this test executable file or binary file using this command dot forward slash and the name of your binary file and it's going to print hello docker container and i want to create a docker container and i want to compile my c plus program inside my docker container and i want to run my c plus program inside my docker container this is what i have done in my host machine not inside my docker container right so let me just clear the terminal and inside my d2 directory where my c plus file is there or my cpp file is there i'm going to create a docker file so i'm going to just uh right click and i'm going to just create this docker file here and then press enter and i can remove this test binary file because i don't need it for my docker container now if you don't know which base image you want to use so for example if you want to use gcc to compile your c plus plus program you can go to docker hub and search for gcc here and when you search for gcc you will be able to find the official gcc image here you can see docker official image or let's just press enter and see what result it gives so you can see the official image is this one with this official image tag and it has more than 10 million downloads so i'm going to just click on this gcc uh link and you can see when you just scroll down what are the tags you can use with gcc also you can see how you can pull this gcc base image using docker so the name is really simple gcc so what we are going to do is we are going to just write from and then our base image i'm going to use here is gcc now the version or the tag i want to use here is the latest or you can choose the tags which are available here so you can choose 10.2.0 or 10.2 or from all these uh tags which are available here you can also go to tags section and see the more specific tags you want to use for your c plus plus program so now once we have the base image the next step is to copy our current folder which contains our cpp code into the docker image under the file system where we want to copy this so for copying our local files into the docker image we use this copy command okay and as you can see it suggest us uh that we need to provide the source so source in our case is dot because we want to copy all the files from the current folder and the destination will be the destination inside the file system of your docker image in our case it's gcc so in gcc base image file system you will find this path which already exists there so you can just write user forward slash src which is already there inside the file system of gcc base image okay so as i said this command is going to copy all the files which are there in your local directory to this directory inside your docker image okay now if you want to copy some specific file then you can do this also you can just write main dot cpp and then you can copy a specific file into the folder which should already exist inside your image which you are using right so for now for simplicity i would just want to copy all the files from the color current directory to user forward slash source forward slash the directory which we are going to create so let's say we want to create this directory where we want to copy all the files cpp test let's say so this path already exists in the file system and this is the folder name which we want to create and copy our local files to this folder in the docker image right now we are going to define the work directory so we can just use this work there keyword to define the working directory in which you want to work now okay so because we want to work inside this directory because we are copying our c plus file inside this directory we are going to set our work directory as this one that means when you run any command it's going to run inside this directory which you set as work directory now in the next step i want to run the command which will compile the c plus program using this main.cpp so now i can just give the g plus plus command then hyphen o as the flag and let's say i want to name my binary as test and the file name which i want to compile is main dot cpp so this run command is going to compile my c plus program inside my cpp test directory under user source folder right now in the next step i'm going to give the command using cmd which will be the command which i want to run inside the container so this is going to run the program output from the previous step into our container so this works like this as you have already seen in the last video also if you want to run your binary you can just give dot forward slash and the name of your binary which is test right so this binary is going to be uh run using this cmd command inside our container so that's it that's how you can create this docker file to compile your c plus plus program and run it now let's build our docker file to create an image for that you can just give sudo docker then your build command so build and then the build context and then you can provide hyphen t to provide the name of your image i'm going to name my image as cpp underscore test for example and then you can also give the tag to your image let's say i want to provide the tag one to my image okay so this is going to create a docker image using the docker file so you can see it has pulled the base image in the first step then copied our files from the local directory to the directory which we have defined and then it has set the work directory and then in the next step it has compiled our c plus program and in the last step we have set the test binary to run when we run our container so now let's list out all the images you can just give docker images command for that and you will see that this repository is created about a minute ago and this is the image id for that image right so now we want to run our container using this image so for that we have seen in the last video we can give the sudo docker run command and then i'm going to give the hyphen hyphen rm flag and this rm flag causes docker to remove automatically the container if it already exists so if the container which we are going to run already exists then it's going to remove that container and then it's going to rerun that container so this command is handy when you want to just run only one container at a time and then i'm going to give this it flag with hyphen so i t flag for running this container in the interactive mode and then your image so you can give this image name cpp test here or image id also you can give so i am going to give the image name which is cpp underscore test with the tag so tag we have provided is one okay so here as i said you can give the image id or the repository name and the tag and then when you run this docker container it's going to print hello docker container that means we ran the test binary inside our docker container right now as i said you can change this tag instead of latest you can choose the version of gcc you want to use for compiling and running your c plus programs so that's why this docker and docker containers will help you to just cross compile in cross platform applications now let's say you want to compile your c plus plus program using the c lag compiler instead of gcc okay so we want to compile our program using c lag compiler instead of gcc so let me clear this terminal and let me go one directory up here and i'm going to create a new directory so i'm going to just write mkdir d3 and inside this d3 directory what i want to do is i want to just have the same cpp file so i will just copy this cpp file into the d3 directory also and then we are going to create a docker file inside this d3 directory so let's create this docker file here so now let's move to the docker hub website and let's search for c lang if we have something related to c lang compiler on docker or not so i'm going to just write c lang here and as i remember there is no official a base image for c lang on the docker hub so what we can do we can use the base images we already have on our system and then we can install the c line compiler on that base image so i'm going to just give this sudo docker images command and from these images let's say we will use this ubuntu latest or ubuntu 20.04 to compile our c program inside the ubuntu base image using the clang compiler okay so what i'm going to do is i'm going to just uh write this kind of docker file i'm going to explain you all the steps one by one so we want the base image ubuntu with the tag latest because we already have downloaded or pulled this image in the previous videos so we don't need to pull it once again now in the next step i'm running apt get y update and apt get install update to update apps on the base image so that's what you do when you want to install any software on your ubuntu operating system so this command is going to update the apps on the base image now in the next step using this apt get hyphen y install c lang command we want to install c lag on our base image which is ubuntu right the next step are relatively easier because we have seen these steps in the other docker files also so we want to copy all the files in the current directory into this directory inside our base image and then we want to set the work there which is the same where we have copied our c plus files and then to compile your c plus program using c lang you can just replace the gcc with c lang plus plus and the rest of the command will look like same as you have seen in the case of gcc also so you can see g plus plus hyphen node test main dot cpp and here also you can give this command the only thing i want to change here is the main dot cpp the file name here okay because our binary name is test we are going to just run this binary using this command so this is going to run inside our container okay in the d3 folder i have created this docker file to compile my c plus plus program using c lag and i'm going to run this now so let me clear the terminal once again so now let's build our docker image using this docker file so for that i need to go inside the d3 directory and then i'm going to give the docker build command with the context or in the current directory and then hyphen t to give the name of my image so let's say i want to give the name to my image as c lang underscore cpp and the version or the tag which i want to provide here is let's say 1.0.0 okay so let's build our image using this command so now as you can see the build of this image is successful with the name c lang underscore cpp and the tag 1.0.0 so let's run the container for this image using the docker run command so i'm going to just provide sudo docker run oops by mistake i pressed ctrl c that's why it break so let me just give this command once again and then give this image name with the tag 1.0.0 so we want to run our container using this image so let's press enter now and as expected we see hello docker container that means we successfully ran this binary file which is compiled using c lang in our container and the output is printed now let's say you want to change something in the output so instead of let's say hello docker container i just want to print hello world here okay so i will just save this uh program and then i can just build it again but this time i will build it with the different tags so let's say i just did the minor change so i will just change the tag as 1.0.1 so let's build this image which is going to be built really fast and now let's run this image using this docker run command but don't forget to change the tag because i have changed the tag for the image also to 1.0.1 so here also i'm going to change the tag for the image and then press enter which is going to run this program and it prints hello world so how simple is this so this is how you can compile and run your c plus programs using docker containers so as i said i just wanted to give you a real world example same thing you can do for your java programs or any other programs which you want to run in different environments so i hope you enjoyed this video and i will see you in the next video