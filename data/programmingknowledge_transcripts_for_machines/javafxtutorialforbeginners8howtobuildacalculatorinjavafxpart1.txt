hello guys welcome to the next video on JavaFX tutorial for beginners in this video and in the next video I'm going to show you how you can create a simple calculator using JavaFX based on modelviewcontroller design pattern or MVC design pattern so let's first see how our design will look like and how it will work so we are going to create a calculator something like this okay it's going to have these buttons and these operators and when we add want to add something we can just give the number add to this number and click equal to and it's going to give the sum so it's not going to be very fancy calculator it's a simple calculator but using this we are going to understand the basics of MBC in JavaFX okay so let's get started first of all I will create a new project so new and others and I'm going to create a new Java FX project click Next and this Java FX project I am going to name it as calculator FX for example okay click Next and click finish so our project is created and in the source there is a package called application as we always have and there is a mean dot Java class now let's prepare the basic skeleton of classes we are going to use so I'm going to go to this application package and click new and I'm going to create a new class here and first class I'm going to create is a model class so I will name it as model itself and click finish and second I'm going to create a controller class so right click new class and I will name it as main controller and click finish ok so we have our controller class glass and our main class now we are going to create our F XML file so right click and create new other and create a F XML document so new F XML document and I will name it as mean ok and click finish so now we have all the files which we require so let's create a skeleton of the model and we are going to go to the model and this model is just for the functionality so we want to calculate something in our calculator right so we are going to create this model I will name it as public and the return type will be float for example and it's going to take few arguments but first name our function as calculator or calculate better right so the name of our function is calculate and it's going to take two numbers and data type of these numbers will be long so number one for example and number two and the data type of second number is also long and the third argument it's going to take is the operator and operator we are going to provide in the form of string so just provide a string variable name for example operator okay and for now let's return return zero for now so that it's not going to give you the error of return type but in here in between here we are going to create our code for the calculation but it will be little bit later right and now just go to your main controller class and in here we are going to create two method one will be a public and the return type will be void and I will name it as process numbers okay and as an argument we are going to the action event here and action event should be our JavaFX event right it should not be a WT or swing so just choose the proper option which is JavaFX event action event and give the name to your variable for example event the second method I'm going to create here is the process operators function so process operators right so now we have two classes controller and model in the controller class we have two method one is process number another is process operator and the model we have one method which is calculator and it takes argument one is number one and other is number two and third or argument is here the operator which can be plus minus divide or multiply for example right so now everything is done so let's design our calculator so this is our F XML file so I'm going to right click it and I'm going to open it with the help of scene builder so this is our F XML file which is empty right now and contains this anchor pin so for now I'm going to delete this anchor pin and I'm going to go to this containers category here and I'm going to choose a vertical box or V box and drag and drop here okay and the default size for this I'm going to choose so click here layout and in here the default size is right now 600 by 400 I'm going to give it 300 by 300 okay so 300 by 300 so the prof wet it's 300 and pref height is 300 and the spacing here I'm going to give it as 10 okay so it will resize according to that now inside this vertical box what I am going to do is I'm going to take a stack pin and just drag and drop inside the vertical box and the height of this stack pain I am going to give it as 50 okay and then what I'm going to do is I'm going to take the horizontal box or H box so search for H box and I'm going to drag and drop this edge box also just below the stack pin okay so you can see the hierarchy here first parent is V box then the stack pain inside it and then the horizontal box now we are going to change the width and height of this horizontal box also so just go to prep width and give the width of 300 because it's the size of our vertical box so 300 by 50 so height will be 50 and provide the spacing of 10 here okay and now we will go to the properties of this horizontal box and the alignment for this will be Center okay so this is our horizontal box now in our H box we are going to take some controls from here and drag and drop some buttons so provides a button and just copy this button and paste it three more times in here so two three and four okay now select all the buttons one by one so I have selected all these four buttons now go to the properties and choose this property called fonts under properties and we are going to change the font size to 18 okay so just choose the font size to 18 now you can see these buttons have some width also so just go to the layout properties of these buttons and in here we are going to provide the width of this button as 50 okay so give 50 width and press Enter so they will look like this now let's save this scene so just go to file and click Save and now we will go to the Eclipse IDE and now we can see here all the buttons are present here right with the font size okay now let's give some text to these buttons so right now the text on these button is the default text which is button so this is our first row of numbers so we can give these text to these buttons seven eight nine and these this divide symbol okay so just give it 7 8 9 and /ok and save it and go to your effects ml file and you can see the text is set here okay so now we are going to do the same for the other rows also so the simple trick for doing it this is just copy your horizontal box so just copy this from here and then paste it once again here okay once again and once again so we have 4 rows of numbers okay now the second row of numbers here we can see here 4 5 6 and s tricks so just save your F XML file so just go file and save and then go to your next Eclipse and here you will see for a horizontal box first is this one which we have already given these number 7 8 9 and /tu the second horizontal box buttons we will give these number 4 5 6 and s tricks so just give 4 5 6 and the asterisk symbol and then the third row we will give 1 2 3 and minus symbol so 1 2 3 and minus and the fourth row is 0 equals 2 and Plus right so the fourth row has only 3 buttons 0 equals 2 and minus 1 so I'm going to delete the 4th button from here from the 4th row so that it has only 3 buttons and first will be 0 second will be the equal to button and third will be the addition button right now save it and go to your scene builder and you can see this layout like this now let's provide the width of this zero button so we will go to the F XML file from here and instead of giving the width of 50 to the zero button we provide the width of one 110 because we are going to cover two button width from this plus the space so it's going to be 100 plus 10 which is 100 tens so save it and go to the scene builder and we can see the width of this zero button has changed so these are all the buttons now in the stack pane just choose the stack pane and in here we are going to take a label so just take a label from here from the controls and drag and drop into the stack pane ok and you can resize this label according to the width of the stack pane and the font size we are going to provide it from the property so go to the property and provide the font size same as buttons so we will provide the font size of 18 here ok and let's say it's a bold font okay and the text of this font I'm going to just leave it as blank right so this is how your design will look like so we are going to see the preview so just click preview here and it's going to look like this ok now one thing which remains here is we need to add this mean dot F XML file to our main dot Java file so just open this main dot Java and instead of using this border pin which is by default added we are going to add the parent route right so just add this line here parent route is equal to FXM el loader dot load inside the bracket get class dot get resources and the part to your F XML file which is in application slash mean dot F XML just add these imports from here import F XML loader so the basic layout for our project is done so we will save it and run it and our calculator layout will look something like this okay now that's it for this video in the next video we are going to add the functionality to this calculators we are going to write the code for these two methods and this model method okay so stay tuned and please rate comment subscribe and bye for now