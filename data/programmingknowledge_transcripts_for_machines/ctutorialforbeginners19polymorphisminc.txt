hello guys in this video I'm going to teach you about polymorphism in cop polymorphism is also one of the very important Concept in objectoriented programming which C is poly morphism allows us to invoke derived class methods through a base class reference during runtime so let's see an example for example I have a base class which is called a drawing class so I have this Base Class called Drawing and it has one method called Draw and what this method does is it simply prints a message and this is a message uh this message says this is just a generic drawing object now from our previous videos we already know how we can Define the derived classing classes using this Base Class which is drawing class so for example I want to derive a class or I want to define a derived class called line which inherits from this Base Class drawing okay so I will declare this uh derived class called line public class line which inherits from your base class drawing okay and it also has a public method called Draw and it has its own message and message say says this is a line okay now I want I will derive two more classes from this base class so I will copy and paste this P derived class once again and the second derived class I will say it's a circle and the message I will change it as this is a circle okay in this draw method and the third derived class will be square and in the Square draw method I will print this is a square so we have one Base Class and we have three derived class line square and circle and they have their own draw method right now I will for example I want to declare an instance of my base class and this instance will be an array of uh the Base Class okay so how can I declare an array of Base Class instances so I will just copy my base class and I will give these square brackets and I will give the name to my object I will say d the obj which is drawing object is equal to new drawing object okay so I'll will just copy it and paste it here and for example this array contains four elements so I can pass four here like this okay now for example I want to give this object an instance of a line class an instance of circle class and an instance of square class so what I can do is I can say obj zero element or obj the index zero is equal to new line class okay and uh this will be like this in the same way I can declare an instance of scare Circle and square classes and even I will declare the instance of Base class so I will say 0 1 2 three and this is our Circle and this is square okay so our Base Class object has an instance of line which is a derived class and this is absolutely possible right we can have an instance of derived class as an object right of as an object of our base class right as we have seen in the last video so I have first object as an instance of line Second object as an instance of circle third object as an instance of square so these all three are derived classes and I even have the instance of drawing class which is our base class and now for example I want to call draw methods from each of uh these classes base and derived classes so I can use for each Loop you may know from the last video how to use for each Loop and I will say for each and the condition is drawing D for example or Draw in my object which is this one so it will take one by one it will go through to object by object depending upon the index of the object and here I will give the statement and what I will do here I will just take this draw object here and I will just call draw method so draw dot draw so let's see what is the result of this um code I will run my program and what this is doing is it's printing this is a generic drawing object this is a generic drawing object four time times right and it's uh true because uh we are not even hiding our method which is a base class method which we have seen in the last uh video so we have just created an instance of drawing and we are just uh giving them the instances of our derived classes so by default it will go to the base class and it will print this four times right now for example you want that from your base class object you want want to call these methods you want to call the draw method in line class draw method in circle class and draw method in square class you can do it by using polymorphism right so what you uh need to do here is you need to declare this object you need to change the Declaration of this method draw draw in the Base Class like this so just write public virtual so this virtual keyword will say that you can redefine this draw in the base classes right so this is the word this is uh uh this the use of this virtual method virtual keyword now in my derived classes I will say I will override this Base Class method so how can I override I will go to my derived class which is line and in this draw method in line derived class I will declare it like public override and this should be over over right okay so this keyword will tell this derived class that you are overriding this Base Class method by its own method and I will do the same in my circle derived class here public override void and in my Square derived class method draw okay now what I have done I have given the keyword draw keyword virtual to my Base Class method and I have given the keyword override to my derived class method this virtual virtual keyword tells the base class that somewhere whenever you declare a deriv class you can override this method by using override meth override key key word right now this main code will remain same and let's see what is the result now I'll run the program and see the result now you have this is a line which is a draw method in line class this is a circle which is a draw method in circle class this is a square which is a draw method in square class and you have this is just a generic draw object which is a method Base Class method right so in this way this is the basic concept of polymorphism and what I have said in the beginning polymorphism allows us to invoke deriv class method through a base class reference during runtime right so we have we have invoked the D dve class method like this from a base class so we have invoked from from a base class we have in invoked the method draw from our derived classes like this okay so this is how polymorphism works and where it comes handy it comes handy when you need to assign a group of object to an array and then invoke each of their methods so this is useful in those situation okay so I hope you have understood the basic concept of polymorphism and I hope you have enjoyed this video please RIT comment and subscribe and bye for now