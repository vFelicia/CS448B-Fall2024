hello everyone this is varsha welcome to programming knowledge so in the previous tutorial we learned how does an automation tool work and how does it overcome the challenges in manual testing in this tutorial we will learn about the selenium the selenium framework why is it called as a framework and what are its advantages and disadvantages and its components so let's get started now here as an automation tool we will be studying the selenium webdriver for this you need to have some prior knowledge about the java and i have also explained what are the requirements of an automation tester i will give the link in the description box so when you go for an interview as an automation tester the very first question that comes to you is what is selenium see this is very important before mastering your skills in selenium you need to know what is selenium is at components as advantages and disadvantages and what are the different types of frameworks so we will be studying about selenium today so first let let us understand what is selenium selenium is a portable framework for testing web applications now here there are three terms to understand in this definition one is portable second is framework third is web application now what is portable portable in general it means to be easily transported or relocated that is the meaning of portable now what is framework framework we can divide the word framework into two parts frame plus work that is if we work in a frame like here you can see this house right this is a house frame or a basic structure or a supporting structure with the help of this structure we will be able to build a house so this is a framework so framework just gives us the basic structure which will add our code for greater functionality of the system now you must be thinking why do we use framework we use framework for reusability and we don't need to build things from scratch like suppose uh let us take up an example if you are making a dynamic web page and what will you do you will create folders like suppose index.html then style.css validate.php and etc see the problem here is not that you have to create folders but the problem is that you have to follow the same process again and again but if you use a framework we don't have to worry about that you just need to code your logic and that's it so that's framework framework just gives us the basic structure round which we will add our code for greater functionality of the system okay that's framework next we have web applications now there are basically three types of applications webbased application desktop application and mobile applications webbased applications are applications that can be accessed through browsers that is like the online forms the registration forms those are online based applications then we have the desktop application the desktop applications are the applications in which uh we we install in the local system for example the microsoft word excel powerpoint that's your desktop application mobile applications are application we install our mobile in our mobile through a play store we download some apps like whatsapp flipkart amazon those are mobile applications now selenium is a portable framework for testing only web applications selenium tests only web applications that is the application that can be accessed through browsers this also serves as a limitation but we will discuss that later so moving forward why selenium first thing we will choose selenium because of cost selenium is free it is open source as compared to the other tools like qtp and uft they are a paid the second point is flexibility selenium supports multiple programming languages like java c sharp python ruby and many more whereas if you go to some other tool like qtp it supports only vbscript next is the multiple browsers selenium supports multiple browsers like chrome firefox safari and many more whereas if you take qtp as a selenium tool it supports only chrome it also supports multiple os like windows linux apple and many more the main important point is that why are we using selenium because it supports parallel testing now let me tell you what is parallel testing the browser will execute the commands in two ways one is the parallel execution second is the cross browser execution now here you see on the screen parallel execution let us understand that first parallel executions are execution in which the test scripts opens all the browser at the same time and executes at the same time it's called as parallel execution here you can see there's a test script then you can see there are three browsers over here the first one is chrome the second is the firefox the third is the internet explorer so the test script will open all the browser at the same time and executed at the same time this is parallel execution we will explain uh i will explain it with an example just wait first understand what is cross browser execution cross browser execution let us take up an example like suppose uh in the test script over here it is written to insert some value in the drop down menu so this command will be first executed in the chrome browser when the execution is finished that is when the value is inserted in the drop down menu then the firefox browser will be open and the command to insert the value in the drop down box will be executed and when that command is executed then the internet explorer will be opened and the command will be executed so this is called cross browser execution that means the test script will open the brow chrome browser first after two three minutes when the execution is done it opens the firefox browser and then after some time it will open the internet explorer browser this is cross browse execution cross browser execution whereas in parallel execution if we have the same command to insert some value in the drop down menu then this command will be executed in all the browsers at the same time this is parallel execution and selenium supports parallel execution now let's move a little deeper towards the selenium uh we will study the selenium components which come prices of the selenium suite total we have the four components like the ide rc web driver and grid let us discuss ide first now the selenium ide is the most simplest tool in the entire suites of selenium it is nothing but an integrated development environment see earlier this ide was simply just a firefox extension and it's just a play around tool like you know you just play record functionality mainly it is useful prototyping and it is used only for demo purposes you cannot use ide for creating automation realtime projects because of its some limitations we will discuss those limitations later then the next component is the rc that is the selenium remote control it is used to write web application test in different programming languages it interacts with the browser with the help of the rc server through which we can interact to the web browser but this rc server got deprecated in the serenium version 2 and was replaced by the web driver in the selenium version 3. we will discuss that also why it happened the next component is the selenium webdriver the selenium webdriver is one of the most important component in the selenium suites it is an api to create and execute the test cases and it is a successor of rc basically the selenium webdriver is a collection of open source api and which will be used to automate the testing of a web application as i said we will study the selenium webdriver very deeply the next component is grid the selenium grid is used to run multiple test scripts simultaneously on the different browser and platforms and it supports parallel testing what is parallel testing i explained in the previous slide so because of a grid we can selenium supports parallel testing so these are the four components in selenium let us discuss the drawbacks of ide the first drawback selenium id is a mozzarella firefox plugin which means the tests can be recorded only in the firefox browser and not in any other browser second it's not suitable for dynamic web pages because it is just a prototyping tool which works well only with the static web pages and not with the dynamic web pages third data driven testing is not possible fourth cannot provide detailed test reports whereas rc the next version of ide can provide detailed reports then we cannot perform database testing through ide same because it is just a prototyping tool it is used for demo and it is not used for automating web applications due to these drawbacks rc came into picture now we have discussed the components of selenium let's see the versions of selenium here we have total four versions selenium version one selenium version two three and four now see here we will dig into some history of the selenium here the selenium version one we have the selenium ide rc plus grid so when jason huggins introduced the selenium the tool was called as a javascript program he called it as a javascript tester but he had one major issue that that is called as the same origin policy so now what is you must be thinking that what is the same origin policy this policy says that when javascript is executed in the domain it can access the web pages in that domain only and it can not access any other web page in the another domain for example suppose like a web page in the google like if you have a domain google.com okay so you can access the search bar the email the drive but that can be accessible but nothing can be accessible outside the google.com like if you want to access you yahoo uh mantra or amazon or any other domain that cannot be accessible definitely this is because of some security reasons so that is why this is called as a same origin policy now to overcome this policy remote control server was designed that is the selenium rc now the main reason to create the server was to trick the browser in believing that the selenium code in which we are running the scripts and the web application under test are in the same domain now here this same origin policy is solved uh so this was the version one of selenium where we have the id rc and grid where the same origin policy was solved in the version one then comes the selenium version two here we have the ide the web driver the rc and the grid see in 2007 when this uh when siemens stewart he invented this web driver now why did he invent this webdriver because the architecture of the rc was very complicated and in rc we need a separate server to talk to this like we need a separate server to talk to the browser so what he did is he removed the requirement of the separate server and this is the selenium version 2 where the web driver was introduced now why you must be thinking like why web driver and rc is introduced over here in the version two because the web driver was in the development phase and they were trying to implement it so that is the reason why we have uh in the selenium version too the ide the web driver the rc and the grid so in the selenium version 3 we had the ide webdriver and grid here you see that the rc was completely deprecated and we only have the web driver currently we have the selenium version 4 that have many new features that this is the new version of selenium 4 and now it is still in development recently there was a version known as alpha version was introduced and this version was mainly introduced because of complete w3c protocol adoption but this change in protocol isn't going to impact any of the user because uh many major of the browser drivers like the firefox the chrome driver and they all are included in the selenium 3.8 version which we are going to use and i i will be also explaining i'll be uh explaining some of the features of the selenium fourth version we will do that also like there are many ways to take screenshot in the selenium four version there are two to three methods so there are new apis added there are some ways to access the web elements also and there are some of the features that are very new introduced in the selenium version so mainly we will be studying about the selenium web driver now you must be thinking why selenium web driver now why are we studying the selenium web driver for that we need to know the drawbacks of the selenium rc now this is the architecture of the selenium rc this is the main reason why we are studying the web driver so the selenium rc is a test tool that allows you to write automated web applications in various programming languages like java python ruby so let's see the architecture of selenium rc first we need to write the test scripts in supported languages like java python or any other supported language but before writing these test scripts the major requirement in rc is the rc server so first you need to start the rc server before you run a core and this rc server is a separate application this rc uh is uh responsible for uh receiving the silliness command from your test scripts it interprets them and then reports the result back to the script now i use the word selenius over here now what is the selenius commands they are nothing but the commands that are written in the test scripts are called as cylinders commands in id and rc they are called as syringes commands now let's look at the browser interaction how the browser interacts the browser interactions happens through the rc server this rc server is a simple http post and http get request to communicate okay it uses the simple http posts and get request to communicate to the browser now how this communication happens this rc server acts like a proxy now you see there is a complete cycle starting from your test script then the rc the rc server injects the javascript in the web browser runs your commands takes back the results sends it to the rc server and then the result is displayed this whole cycle gets repeated for each and every command which is written in the test scripts this is how the test case gets executed in the rc server like the selenium rc tool this is how the whole cycle goes for each and every test scripts now everything was good but why was rc not good enough to run test scripts let me tell you why what are those drawbacks first time taken for execution of command is locker why because there is an additional server rc to so it executes each and every command is executed through the rc so it takes a lot of time for execution the api supported by rc are redundant and confusing because one command means many meaning it has a lot of meaning for one command like suppose there is a command called as click and click at so which one to use it's very confusing for the developers then there is complicated architecture rc consists of an additional server that acts as an middleman also the mobile apps cannot be tested using rc so these are the drawbacks of rc now let's see how does selenium web driver overcome these drawbacks for this we need to understand the architecture of the web driver so in the web driver architecture we have the test scripts the web browser and the web server however we do not have an additional server for communication like the rc server which we saw in the selenium rc which makes the architecture of the web driver very very easy because we don't have an additional server in this as you can see there are direct interactions with the web browser so as an advantage the selenium does not use an additional server and since there is no intermediate server there then the browser is controlled directly from the system due to this direct communication the overall cycle that we saw in the rc server was which was very indirect communication since this entire communication made the execution very slow so that's why we have the web driver in which the execution is faster than the rc server as you can see the execution time for command is shorter due to the simple architecture now you have seen the architecture of rc and webdriver let's compare the selenium rc and the selenium webdriver let's see in terms of api now rc is less object oriented api now the api and rc is very confusing and redundant for example we have commands like click or click at commands which one to use so it was very confusing for the developers and the direct browsers interpreted different commands also which was very challenging for the developers working on different browsers for different browsers browsers there were different commands so it was very challenging whereas for selenium webdriver it is very simpler api and it is very easier to use for example we have the click function to click on the web element we have the send key command to send text on very on any web element in the web page so it has a very simpler api now let's see in terms of speed selenium rc is slow in execution and in terms of speed web driver is faster in execution because in selenium rc we have the rc server whereas in webdriver there is no additional server next let's let's see in terms of browser support see rcn webdriver supports multiple browser but rc does not have support for html unit which is a headless browser now let's see what is this headless browser headless browser is a browser which does not have a ui this helps to make testing more faster because it does not need a real browser for testing it does not take time to load the web elements so and the headless browser is very quick so rc and webdriver this support multiple browser but rc does not support html unit that is the headless browser whereas the web driver supports the headless browser and it is and it makes the execution move faster next we have the uh comparison in terms of testing mobile applications selenium rc does not support testing of mobile applications whereas web drivers selenium web driver it supports testing of mobile applications there is an application name as apm through which we can test mobile applications so these were the difference between the rc and the web driver but every component has its own drawbacks so let us see the drawbacks of webdriver one cannot readily support new browsers but rc can and it does not have a builtin command for automatic generation of test results see uh it cannot readily support new browsers there are many new versions coming up so this challenge can be overcome second uh we don't have builtin commands for automatic generation of test results whereas in rc we have we can generate test results there's a proper format in rc whereas in web driver we don't but we can use a third party tool we can integrate thirdparty tools for the test results generation so now we will discuss some advantages and disadvantages of selenium advantages of selenium selenium is an open source tool and it supports multiple operating system and multiple browsers like chrome safari internet explorer and many more it also supports multiple programming languages like java python c ruby etc apart from all this we can also integrate the third party tools in selenium like apache pui auto i t sql and why do we need to integrate this we will understand that in the next slide here you see the disadvantages of selenium the first disadvantage is that it can not support window based application it can only support the webbased application but to overcome this disadvantage we can use a thirdparty tool that is the auto id or the seculi tool the second is that it cannot support test reports but if we integrate test ng or extend reports through that we can generate test reports third cannot support excel files now you must be thinking why do we use excel files we use excel files while we doing uh while we are doing the uh data driven testing we use it because suppose there is a username and a password field and there are many test data to it like for user name you have the admin for password you have admin at the rate one two three that's one test data the second test data third fourth so like this there can be many test data to check the expected and the output result we will match it and then we will pass the status as fail or pass so matching those and results and communicating the test scripts to the excel files that selenium cannot support that but through apache pui we can do it next we have less or no technical support in selenium because selenium is an open source tool so there is very less or technical support but there are many forums and communities on internet whereas wherever you can write your queries and you can get your answers then writing test cases are sometimes very time consuming because it is just a programming interface and not an ide see whereas if you go in other tools like the qtp and uft though those are id as well as the programming interface that means you can record also you can record also the test scripts that you have written whereas over here it is just a programming interface each and every command needs to be written so at times it becomes very time consuming so these are the disadvantages of selenium till now we have learned uh what is selenium why is it called as a framework we have learned the versions of selenium their components that drawbacks and why are we starting the uh web driver we have also learned what are the advantages and disadvantages so in the next tutorial in the next video we will learn the installation part of selenium and then we will start the implementation of selenium until then stay tuned and thank you please like share and subscribe