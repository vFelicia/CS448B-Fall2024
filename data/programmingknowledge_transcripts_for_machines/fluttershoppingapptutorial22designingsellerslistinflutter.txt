so up until the previous video we have made our splash screen getting the list of sellers and then routing to the splash seller screen so you can see over here now today we are gonna continue making this screen look like this screen okay so let's get started so these all are basically our seller items so i'm gonna make changes in that okay so i'll give it let's say a height of 200 okay so now the height is appropriate but we are getting a render flex error and the error is because i am not using a list but i am using a column with a map function so in the seller screen you can see that the list of sellers is a column and not a list okay so to fix this what i'm gonna do is i'm gonna surround this container the topmost column okay with a another widget and the widget is single child scroll view okay so now once i add this then let's save this and now we shouldn't get this error okay so now you can see the error is gone and it is scrollable as well okay so now after this let's add border radius to it so let's see what is the border radius that we apply over here and it is 10 as you can see so let's apply the same okay so for that we will create our decoration and then the decoration will be a box decoration widget okay now since we have box decoration the colors can't be outside so we'll move it inside the decoration and then finally apply the border radius so for that we have another parameter called border radius and then it will take a border radius dot circular widget okay and the radius is gonna be 10 as in 10 pixels okay let's format it save it and now we get the border as we get rounded borders and the radius is 10 pixel okay so now the next thing is the colors okay so you can see all these items have different colors so i'm gonna create a list of this colors and then send it to this item okay so now the list of colors is gonna be constant so as per the standard practice it should be inside our init state and for that we need to convert it from a stateless to a stateful with chat okay and then over here i'm gonna call init state okay now over here i'm gonna create a list color seller items background color okay let's initialize it now i'll add values to it inside init state okay so over here i'm gonna write sellers seller items uh seller items background color dot add and then over here another color so now as i have already discussed for color we always start with zero x f now this f f can change that is actually the alpha value you can look for different types of alpha value on the internet okay so the first color we can find it over here so i'm simply gonna copy it paste it over here and there are gonna be three more like this okay so now this second item i'm gonna copy the color paste it on the second row okay so yes this is correct now let's copy this paste it over here and the last one okay so i'll copy it and paste it okay so this is done now this is giving us a warning and the warning will be gone if we add a const over here okay so let's add a const so you can see as soon as i add the cons to the error is gone const is a keyword which means constant okay now let's send this color to these items so for sending first we need to receive it over here okay so for that i'm gonna create another widget color and i'm gonna call it background color now i'm gonna take it in my constructor so first we need to give required because it is final this and not background color okay now let's format it okay and over here instead of color i'm gonna make it background color so we have background color okay now we need to give a background color in our seller screen okay so let's do that over here we will have another named parameter that is background color and then over here i'm gonna give let's give one color for starting and then we will figure out a way to give the color according to a pattern okay so i'm gonna say seller items background color and then zero okay means as in the first item now give it a minute to understand okay hmm okay so there is a small error over there i need to give another closing parenthesis so now the error is gone okay now let's do a full restart okay so that both gets saved at the stay same time okay so let's see now the splash screen is here it is loading the sellers and yes we get the first color applied to all the four now we need to apply uh one two three four in accordance with the list okay so let's create another method that will return the index okay so for that i'm gonna make another method int get color index and this will take the index means the index of seller item okay so like 0 1 2 3 it will work fine but what if it is more than that okay so what i'm gonna do is i'm gonna simply uh return index mod four okay so now with this what will happen that the remainders can be 0 till 3 that are 4 items and we have 4 items over here and now that i think of it we don't need to create a separate function for here for just this small piece of code i'm gonna directly apply it over there okay so over here instead of this what i'm gonna do is index modulus for now index we will get from here so what i'm going to do is sellers dot index of e okay so now we get the index and then we apply modulus 4 and then whatever is the remaining we send it as our background color okay so i hope you understood this calculation part now let's save this and see okay so you can see this is working fine four different colors are applied to all the four now after this if there were more items also the pattern would be same okay so i hope you understood now since now that the background is done let's add content okay before content you can see the margin towards the right or left or very less as in in the ui it is little bit more and among each other as well okay so let's fix that first okay so instead of margin all i am gonna make it symmetric and then gonna make it vertical so vertical it is gonna be 15 okay because if it is 15 then over here it is going to be 30 15 from this item 15 from this item so you need to do the calculations accordingly and then horizontal let's make it 20. let's see how it looks okay so there is little bit more let's make it 30 okay this is fine no but okay i'll i'll let it be 20 only if there is more space left i'll bring it back to 30 okay so you need to do this little tweaks on your own because it is not that as you design the screen and all those things are always gonna be same for an actual device okay what i mean is that this is the screen size that we have taken for our design but the screen size in actual development is a little bit less so we need to means do little bit tweakings here and there accordingly okay i hope you get ma get the just what i'm trying to say