so in today's video you will be learning about stack plots stack plots are also called as area plots so let's get started area plots are pretty much similar to the line plot these plots can be used to track changes over time for two or more related groups that make up one whole category for example let's compile the work done during a day by student so we'll go in our project and we create a new python file so we'll give on the python file name is stack underscore plot and then we'll press ok and we'll copy some starting code from the stat plots from pie chart actually that is importing the numpy snp and from matplotlib import pipeline as plt then we'll use the style 538 and then we'll copy the plot dot show and grid functions or we'll remove the title for now okay so so let's go in data dot py so we have a file list here so we'll copy them and we'll paste it here okay so we just plot them using pie chart so we had already done in the last video lecture so in the pi function will pass a list so how many uh list we want to show so we have four so we'll type one comma one comma one comma one comma then we'll close the list and we'll pass the labels for for the list so first is eight then second one is sleep okay okay the second one is actually study then close that and we'll remove the extra inverted comma then we have code and then sleep so i will just remove the comma and i have to place the code in front of sleep actually so we'll paste it here reveal the comma and we'll remove the extra commas now okay so this will plot a normal pie chart so i will show you why i'm plotting this so we'll type plt dot title so in that title we'll give as pie chart okay we make that h okay and then we will run this so for that we'll right click and we'll run stack parts okay so the normal pie chart will give you four quarters with study each sleep and code but uh this is like so what if you want to show data for five days in continuous manner so we can't show that actually using pie chart so for that we'll use this stack plot particularly so here you can see for a particular day one a particular student will have one hour of eating and eight hours of studying six hours of coding nine hours of sleep so like that we have five consecutive days so you can see second day he has three three hours of eating five hours of study code for eight hours and sleep for eight hours like that so what we will do we will remove the pi function so we'll type plt dot stack plot we'll open the parenthesis so inside that will pass our list so our first list we want to show is days actually so you can see the data in the it we have actually our data is increasing in study list and in sleep so what we will do we will pass first days as a parameter to state plot so this is a list then we will pass eight then it will pass study then code and then sleep okay so that is enough and we change the title as stack plot okay stack plot and now right click and we'll run the file so if you run it now it will load you can see that it is showing us the data for five consecutive days on xaxis we have days and on yaxis we have hours so you can see we have not given the labels actually so we are not finding uh which one is what so you can see the we will just close it and we will just put the labels now so we'll create a list for labels so type labels equal to so we'll open the square brackets and we'll pass the string first label is 8 for our first list then we have sleep not sleep actually we have study then third one is code and then the fourth one is sleep so we'll pass these labels in the stack plot as parameters so labels equal to labels that is our list and if we run it now so before running we'll type plt.legend so this is very much important so what this will do this will print the labels on the screen so that we can find it as which color is written pertaining to which particular label so you can see blue is for eight then orange is for study and on y axis we can see the hours and access is we have days okay so we have then blue color we have this uh eight which is actually decreasing in in middle for third day it was like four or five hours and then the story you can see it is a increasing in order and the code is actually decreasing till we reach the fifth day and the student is actually getting more sleep by the end of the fifth day so you can find it okay so another thing is we can change the location of the stack plot legend so we'll type in the legend loc equal to where we want to show that so we'll type upper left so upper space left so this is a string that we have to pass in the location loc variable the legend function so you can see the location of the legend is a change now and it is at the upper left corner okay so now what we will do is we will create one more list for colors here you can pass hex code also that is hexadecimal codes and also the short form or short characters so we have m for magenta c for c n r for red and k for black this i already showed you in my earlier videos you can refer them so we'll pass that list as colors equal to colors in the stack plot function so we'll remove the extra spaces white spaces and we'll run it again we'll run it again okay we'll also put tight layout just in case for nice padding so plt dot tight layout okay so now we'll right click here and we'll run it again so here you can see our check colors are changed and it looks really nice now really vibrant okay so magenta is the eight eighteen hours xi'an is the study hours an orange or kind of red is a coding hours and we have black for sleeping hours but you can see our legend is little bit uh off the grid it is a little bit getting outside so we can fix that so what we have to do is in our legend for loc variable we'll remove that string and instead of that we'll pass a tuple so how you create a tuples you have to just open and close the parenthesis and inside that we have to pass the x and y coordinates or percentage by which you want to shift the legend so we'll pass so 0.06 that is not actually 6 percent that is 0.06 percent and also that is from left and from the bottom we will pass 0.06 percent so now save it run it again so you can see our legend is now shifted towards the little bit inside of the area plot and you can see it is nicely put so by this how this is how you can customize your stack plot so this is just one example you can do more kind of this using stack plots you can actually create uh stacked stack plots those are actually sit one top of the another okay so as usual i will provide this python file in my github link in the description of the video so i hope you like this video thanks for watching and i will see you in the next video