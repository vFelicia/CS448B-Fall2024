hello guys welcome to the next video tutorial on C programming for beginners and in this video we will discuss about scope rules in C now there are two kind of uh variable declaration in C one is called a local variable which we have been seeing in our tutorial and one is called Global variable so for example local variable is a variable which you declare inside some function so inside for example in main you can declare in a is equal to 10 it's called a local variable okay so what it's called local variable okay now whenever you declare a variable which is not in inside any function it's called a global variable okay so for example I declare a function which is not inside main or I will declare one more function in for example or void vo number print it doesn't take any argument and it prints something okay okay and here we can declare a variable called X or a variable called int or any variable in a and this is also a local local variable right because it's declared inside your function but whenever you declare a variable for example int G it's called a global variable okay which is not uh inside any function and what is difference between Global and local variable is a local variable is only uh valid inside your function so it's local to your function so you cannot use this a inside this number or you cannot this use this x inside this main function or anywhere else but on the other hand a global variable is visible to every function in our program so you can use this Global variable here also and here also now let's see what uh I mean by that so for example I want to print or I declare Global variable as 0o or for example I just declare a global variable and just remember uh uh I will just comment here Global variable and always remember whenever you declare a global variable and it's initialized by zero if it's int float or double it's already initialized by zero you don't need to initialize it by zero but a local variable whenever you declare it the like this it's not initialized by zero so this variable can contain any value any garbage value and you may not know the value of this uh a so let's see first of all we will print print F we will print the value of uh This Global variable Global is equal to percentage d and this should be percentage D without space and comma G we are printing this value right in the same uh way we will print this local variable so we will write local and we will print a okay or let's name them uh logically so I will name this variable as Global underscore V and I will name it as local uncore V local underscore V uh stands for local variable and local un Global underscore v stands for Global variable so I use this Global variable to print here or let's not print it here but let's print this Global variable value in uh our main fun function because we are not going to call this function for now and this should be local variable and remember we haven't initialized this and this by any value let's see what happens when we run this program we can see that this variable local is equal to 77 let me give a one more thing here which is this sln to change line and I will run the program and you can see this local variable is printing 77 but we haven't initialized this local variable by any value so it's taking the garbage value but whenever you use this Global variable It's Always initialized by zero even if you haven't assigned any value to it so just uh remember this and if it's a character it will be a initialized by a null character and if it's a pointer which we are going to learn in next videos it will be initialized by a null pointer now a global variable so for example you decare this Global variable is equal to 25 here you initialized it and you also initialized uh local variable like this uh Global variable with the same name but this is is equal to uh 20 for example and I will just commend this because we don't need this line so what we have done we have initialized a Glo variable called Global V and initialize it by 25 and the same name I have given to my local variable now what happens in this case so in this this case whatever value is uh contained by your local variable even if it's uh declared with the same name uh globally it will the value of This Global V will be the value in the local variable right so whenever we print this this value will print 20 here so local variable is always has the preference over the global variable able if they have the same name I'll run the program and it says 20 instead of 25 right now for example you want to use Global variable inside this function I will just print this uh here so I will print something like uh Global variable plus uh 50 for example okay and I will uh name it as uh Global plus 50 okay and so what this will do it will print whatever the value of global variable which is 25 plus it will add 50 to it and I will call this function here and it's visible to this function so we can see global plus 50 is 75 it's printing so Global variable is visible to uh your functions and all all your functions and uh all your uh code right but local variable is you know you cannot use it uh globally for example int uh num local is equal to uh 30 for example and if you want to use this local variable here you want to print this local num here it will give you compilation error because this variable is not visible to uh this main function because it this exist in other function other than main right run it and it says the this error and this error is numor local Undeclared right so you cannot use a local variable in your other functions right so these are the scope rules in C I hope you have enjoyed this video please write comment and subscribe and bye for now