hello guys and welcome back to the channel this is aush and from now we are going to start our the denux sh scripting tutorial okay so we will start with the basics to the advance and we will cover many uh Concepts like we will cover like programming uh Concepts like if fails fall loops and also we will create some uh scripts like automated scripts and we will do some minor projects also so now from uh this video like uh in today's video we will cover some basic concepts like what is a shell what is a bash and also we'll see how you can create your first script that will be a very interesting thing okay but before starting uh let me tell you like we use sell scripting uh mostly for the purpose of the automation okay if you want to automate some kind of your some kind of task then you can use the cell scripting as an automation uh like not as an automation you can sayell like uh uh shell you can use the sell script as a tool to automate your work okay so now first of all now let's come to the point and we will learn about the what is a shell okay so shell is nothing but you can say it's uh just like interface which provides you to write some codes and R write some commands so right now this uh terminal is using the bash shell okay so but also according to the some other articles some book shell is just like an interpreter like uh it basically runs uh like executes the command line by line okay so that is the work of The Interpreter like it executes the code line by line and if some error occurs then it will just throw it on the screen so shell is just also like interpretor it basically interprets the sh files orsh programs you can say or you can say the scripts so now you will say what is a script so script is nothing but the like your program file just like in Python you create P file so similarly in in cell scripting and or in Bach scripting we create the dosh file okay so why we say like sh acts like interpreter because it interprets the dosh files orsh programs you can say so I hope you got a fair idea about what is a shell okay so now let's start with the basic concept like what are the different types of sell this Linux operating system okay so there are many cells like bash shell and also uh like Kor cell Born Again cell okay so you can get the list of the cells uh in this particular directly uh not directly it's a directory okay so here you can see the multiple CES is being used or present in my this operating system so for this whole series we will uh like stick with the only the second one this one bashes bash that means Born Again shell okay but uh this uh s the first one shell was the first shell uh which was created by the Linux and the next there is born against shell came into the role so uh we will use the born against shell for out this entire series and uh now what we have to do uh we have to just create one single script of hello world and uh also let me tell you what is this bin so the cell your your cell will be present in this bin directory okay so now but before creating your first script let me tell you the uh what script is being used by this session or by this terminal so you need to just enter this Eco and the shell dollar shell and here you can see B shell is being used okay now what we have to do we have to just create the first script that is the hello world script how we will do it we will just uh I'll move on to the desktop and I'll create the cat hello world.sh why Dosh because like we are getting the cell script script so bat script that's why we are using the extension so here you can see the file has been created hello. s now I will use this hash slash bin bash it's just like this line basically tells like uh tells how script or our the shell to which shell to use like tell The Interpreter which shell to use so here I'm just defining like I want to use the be bash again shell that is this one being bash not sh okay so now I can do eco eco is just like the print command okay Eco hello world I'm learning bash scripting this one now hit contr D and to run the script you need to add some permissions so you cannot directly run the script if you will check the permission for hello.sh so here you can see this is only read write permission you cannot execute that script so to give the particular permission to this particular file you will need to just uh give add the permission using ch1 you will if you will use plus X and the hello name of the file so permission will get added and here you will see the execution permission has been added and the color also has been changed from white to the green okay now to execute what you do you have to just do dot slash and the name of the script and we are done so you can see our script has been executed successfully okay so I hope you like this guys like how you can create the shell scripting and also I hope you got to learn about what is a shell what is Bash and if not then please go and uh you should explore yourself also to some kind of knowledge okay so that's all for today guys we will meet you in the next video thank you thank you for watching and I will come up and meet you in the next video with my amazing Concepts thank you hello guys now in this particular video we will be installing the visual studio code because we will use this ID to write our cell scripts okay so uh let me tell you how you can install it in a easy way so here is the one to software uh from here you can install multiple softwares now you have to just search for the visual studio code and uh it will take some time to load let's wait um so but before that let me tell you about what is visual studio course so it's a basically one the ID which we use to write our uh codes you can write code in any language which you want from C++ to Java python everything okay so here you can see the review is also good now you have to just click on this install so it will take some time for installation uh let's wait it okay it is it is installed now what now we have to do we have to just click on this show applications and here's just search for the vs code or Visual Studio it maybe yeah here you can see the visual studio code you just click on it and it will open up like this and this is something uh okay so here you can see you need to open some folder uh let me click on open folder and uh on the desktop I want to create one folder like uh plus I will create the shell scripting tutorial okay just click on create and you're done you have to just click on open uh don't say I don't want this is some kind of file okay let's wait I think the system is lagging because of the low Ram actually I'm running it in the ubu machine sorry in Virtual box that's why it's happening like this now here I will create just one simple script that is 01 uh test.sh I will create sorry sorry I have entered comma there again I create 01 test.sh okay so here you need to add the shebang this symbol is called shebang bin bash equal you have to just write here hello world and you are good to go you have to just open up the terminal here new terminal and you will need to just add the permission for this particular file that is 01 test.sh and you need to just execute it uh slash 01 test. okay uh let me just do LS why it's not executing okay/ 01 test.sh why showing uh biosis file or directory okay I think I minus like this okay so here you can see Hello World okay so in this way uh we can write our scripts in this ID and we can easily run it okay so that's all for today's video guys I hope you successfully installed and in our further videos we will start with the basic concepts of the cell scripting so that's all for today's video and I will meet you in the next one thank you thank you for watching now in this video we will be learning about what are the variables Okay so so first of all let me tell you about the what are the topics which we will be covering in this particular video so let me just open up the terminal and I will write all those topics which we will be covering this particular video so first of all we will cover variables what are the variables then user defined variables and next envirment variables okay so these are the topics which we'll be covering in this particular video so first of all let me start with the variables okay what are the variables okay but before that let me first open up my vs code actually I have already done it here you can see now you have to just uh create one file that is 02 variables Dosh okay so we will use Dosh extension for creation of file and I hope you have already installed this vs code actually in our previous video we have covered this part of installation so now what we have to do uh you have to just uh enter this sh she bang and then you have to just uh you're are good to go you can write any command here also like you uh variables you can write here variables okay just save it and here is the Run button if you run it maybe it will run yeah it's working fine okay so now what we can do uh let me tell you about first variables what are the variables okay so variables is nothing but uh just like a container okay container which will hold some values okay so variable is nothing but just like a container which will hold some kind of value it may be integer it may be a string it can be your uh any kind of a value like could your decimal value or character value okay so these are the variables okay so what happens actually uh like internally what are what things happen okay if you are coming from the C++ background so you might be aware of those things like let me tell you all this uh I will open up the paint so that will be easy to understand for you okay so I'll just create a block here okay so what happens if you create a variable suppose you create a variable a equal to 10 okay so at that time what will happen block will be created in a memory and some address will be given to that okay now you will tell ask me what are the address so address is nothing but uh which you used to access those variables okay if you are aware of C++ or python then you might be aware of it but right now just keep in mind that variables are stored at one particular address so it can be any address I will just uh enter like it uh it uh it what we can say address is in the form of hexa decimal so you can write anything like hexa decimal is like a to f 1 to 9 anything you can like this okay so you can think like this is the address and this will be the value you can suppose like it will be 10 and the name of the variable will be a okay so this is the case happens internally if you create a variable in any operating system okay so now we will start with the basic one like we will create some variables and we will also learn about some kind of rules which we follows while creating the variables in our shell okay or B scripting you can say so here what we will do uh I will just uh create some variables like I will create name equal to to I okay you can like write like this and then what you will need to do you can also give like age equal to 20 you can say and now we are good to go right now we will just print those variables so how you can print using dollar and the name of the variable you can easily print the variables okay so just save the variables and I will run up run this variable okay so here you can see the variable the first line and the second my name is printed okay so but before moving forward let me tell you about the some of the rules which we follow while creating the variables okay so there are some interesting thing if you do like this add a space so at that time your shell things like it's kind of a command so there should be no any spaces in your variable name inell scripting especially or pass scripting so if you will do so it will say command not form here you can see so you don't have to give any kind of a space in your variable name okay I hope it's clear to you guys uh let me just create some another variable like pointer I will create some kind of 9.9 I will give it it time okay it's fine so here I will add Eco my pointer is like this maybe uh string concatenation will happen there pointer let me just save and I will again run this script so here you can see my pointer is this plus okay if I will not give it it doesn't uh effect I think okay so here you can see my pointer is 9.89 so in this way you can uh enter the variables and enter the values assign the value to the variables so these are basically the user defined variables okay Eco you have to just here to user defined variables Okay so this is the okay so what if I want to uh print all those in a same line like Eco name and Eco a also I want okay let's do it I will remove this line save it okay here you can see the I 20 okay so these are the user defined variables okay I hope it is clear to you what are the variables now moving forward uh we will learn about the Su of U what we can say involment variables okay so I will just do a quick Google search for you guys and I will search for the user uh not user envirment variables okay so envirment will write at much biggest smelling environment variables and shell scripting and thep yeah here we got it okay so here you can see there are many blocks for on gigs for gigs or digital lotion okay so uh let me open this one geks for geks so it's a good website to learn more things okay so here you can see it's loading just wait for some time okay so here you can see what are the environment vales so environment system defined variables you can see it is given by the shell to use for you guys okay so here you can see the scope of an environment variable and all those things I will tell you about the scope and all those in the next video okay right now just uh learn about the environment variables okay so here you can see the name is one of the environment variables both go in the same way okay let me just uh this so here you can see okay name equal to Value okay I will use some different website let me use distal ocean not this this one this one looks good or I will just do list here because I want the list of the environment variables and cell script we use so here you can see the uh not Windows I want Linux okay here you can see the eath display the path inment variables okay so uh let me just use some variables here like uh I remember some variables like EOS shell if you will use shell and in variables keep in mind like it is written always in the capital letter and here I will just add some text like uh first environment variable okay and and just uh save it and run it and here you will see the bin bash it gives you the name like cell which cell you are using right now okay if you will do date also it will give you the information about date okay so just save it and run it from here and here you can see the okay it's not displaying with the date why I don't know okay d a t it should okay just run this okay I think dat is not one involment variable let me just quick uh search for it date environment variable L okay so here you can see the uh current involment variables so there are many articles so you can read here like when you do we can do like this also uh let me just copy and I will paste it here now and I will use here now okay just save it and click uh on run and here you can see the current date and time all those things okay so in this way you can use uh variables you can assign values and I hope you got to learn about this user defined variables as well as involment variables and uh in the next video also I will tell you some more envirment variables okay so I hope you like this particular video guys and thank you thank you for watching and if you have any queries then you can ask in the comment section and for these all the source code I will be posting on my GitHub repository I will give the link in the description okay so thank you thank you for watching I'll meet you in the next one thank you and byebye now in this video we'll be learning about how we can get the input from the user okay so basically we will see uh with the many examples like suppose I will ask the user to enter his name so at that time you just should be able to enter his name and all those things okay so basically we will use the uh read command or you can yeah read command you can say or the what you can say like uh read keyword used to take input from the user in the Shell scripting okay so actually I have already open up the terminal here uh vs code sorry and I will just create a new file here uh 03 uh read input Dosh okay so I will just use this hashbang pin bash okay I'll just give it the name of uh this tutorial that is lead input lead input from user okay so first of all we will see the basic scenario like suppose I enter here uh e into your name please okay so here I will read the name and here you you will see the this will be the name of the variable okay in which you want to store this value okay and next here I will print the variable like uh your name is uh dollar name okay controls to save and I want to run from here but here from here I will need to give permission but so it's better to run from here okay so here it is asking for me to enter my name so I will enter aush okay why it's not working oh my God let me just control C uh let me use the terminal terminal is far better than this okay so we need to just give the permission to that file that is 03 we are done sl03 Dosh okay sorry sl03 Dosh and enter your name please iush so you can see the your name is aush okay so in this way we can can uh take the input from the user and also there are many use cases of this read command okay so we will uh learn it one by one okay so uh let's start with the first one like uh we can use many options like read hyphen P okay so next moving forward I will just uh here I will do a read hyphen p is used for the prompt so here I will prompt enter your uh age okay so here you can just give the name of the variable which you want to provide you can just give it as is okay and next I will just use this Eco command or Eco keyword to print the value your name uh sorry your age is what dollar is okay contr s to save clear the screen again run the script your name my name is aush guys your is I will enter 20 here you can see your age is 20 so what is the difference between this and above and this one read so what is happening here we are using one extra line for eing that particular line but using hyphen P option you can write your variable as well whatever you want to prompt to the user you can write those all things in a one single line so now let me just comment out these things and I will again run the command so that will be easy for you to understand so here it is asking me for inter so here you can see I have just used this single line and it is asking me to enter the uh whatever the is and all those things so don't be confused it was by mistake 204 I'm not that much old okay so uh in this way you can uh use this hyphen P option also there is many amazing option like uh if I will uncomment this and I will just comment out these things and if in case you don't provide the variable name so at that time you can use this reply okay you can use this one to like you can use this one like this okay if you don't provide the uh name of the variable then it will store it into this de so I will just again run up this particular script and I will write the name as iush and here you can see iush your name is iush without any use of variable okay but that is not a very good practice to use but yeah it is always uh like advis to use the variables okay so I will give it the name here as name and the same as as it is the dollar name okay dollar name okay we are done you are good to go now there is also some amazing things you should know about like suppose I'm asking the user to enter some kind of confidential information I will just comment out these things uh read hyphen p and the username okay suppose you're asking for the username I will just create a variable username and you can also ask for password read hyphen SP and here you will ask for the password so obviously you don't want to reveal your password okay with everyone so hyphen has provides that functionality you will see right now so I will just equo those two variables so here I will write like this is your not your just use username and the dollar user name username okay yeah we're good to go now and just use the password okay dollar password okay controls to save let me just clear the screen again this one username my username is uh this one you can follow me on Instagram I know I'm promoting and for password you can use uh it's easy to crack okay so here you can see the username is this one and password is this one but uh you I hope uh you just uh uh what we can say notice like uh the when I was typing the uh password it was not visible okay I will use one more Eco for the blank space okay again I will run this script so that could be easy to understand so I will use username iush and the password is something and see I'm typing but nothing is displaying on the screen and here you can see now username is I and password is this whatever I WR don't know what I have written okay so this is the thing okay so I hope you got to learn about like how you can take input from the user okay so now thank you for watching and if you have any query you can ask in the comment section and surely I will post these uh CES inside your uh inside my repository not yours okay but you can access that repository so that's all for today's guide and I hope you uh you I liked it and we'll meet you in the next video thank you thank you for watching now in this video we'll be learning about the command substitution okay so as a name suggest command substitution which basically means we can use a variable name as a command okay you will store the commands in a variable it's not that interesting okay so we'll be learning these things in this particular video so let's start what what first thing you have to do you have to just open up your ter not terminal you have to just open up the uh vs code okay so I actually I have already open up here the vs code as you can see so now what you have to do you have to just create one file uh I will name it as Z for command substitute substitution Dosh okay I hope his spelling is uh correct yeah it's correct by the way it doesn't matter at all okay so now what we can do you have just paste this okay as Bank okay so here let me just enter this like Eco this is no not like this you have to just enter this command substitution tutorial okay tutorial okay so now uh let me tell you about the First Command which we can use as uh variable okay so I will create one variable Uh current directory okay so how you can get the current directory in uh Linux okay uh if you have watched our l series then you know the command that is a PWD present working directly which gives you the uh current directory location okay so we will use a PWD but before using those things uh right now I will tell you the ways how you can uh uh what you can say uh how we can declare uh that uh command to a particular variable okay so you can use the back tcks okay just the button uh left of one okay and here you can enter the whatever command which you want and right now I want PWD and you can just print this one like your present working your present working directory is like this bro okay is we will use this one not hash I need dollar current not container okay yeah we are good to go right now I will just add some permission plus X to that particular file that is 04 now we are obviously good to go oh I think something yeah so here you can see we have done some silly mistake like we don't have to give the space here if we'll give a space then it will give you the error command not found okay again I think uh command substitution tutorial 04 Line 6 home I6 no such file or directory wait a minute you will need to do like this guys okay so let me just clear the screen yeah we to here you can see that your present working directory this one I use desktop scripting tutorial okay so in this way you can use this particular thing like uh okay so now the next method is how you can do it so the next method is like this I will just copy it and comment it uh this line com this line and I will use this like this you have you have to use the dollar and the PWD Okay so so now we can do like this clear the screen right the command and here you are good to go guys here you can see the uh isn't working directly okay now moving forward uh suppose you want to create one file uh so new file I will create the name a new file and I will use the back tap uh I will use this command cat and I need hello.txt suppose in this case I want hello.txt so I will use this one like here and I will use Eco dollar new file contrl c not c contr s to save clear the screen so here you can see hello.txt has been created and I will write hello.txt has been created from has been created from command substitution toal okay tutorial control D to save okay so here you can see the same text okay so in this way you can use the command substitution technique like using back take or using dollar whatever the way you like okay but the most preferred is this one dollar and the parenthesis okay so that's all for today's videos guys and if you have any query you can ask in the comment section and these course will be posted on the GitHub repository and you will get the link in the description so thank you thank you for watching and I'll meet you in the next one thank you and byebye hello guys now in this particular video we will be learning about the how we can pass the parameters while running our script okay so let's start with this video okay so I have already opened up my vs code and you can also open it using the terminal or from here from applications so also so right now we'll create a new file that is a uh arguments. sh okay I will write the hashbang or cbang you can say whatever you want uh sorry bin bash okay now here uh what we will do uh I will run this script and I will pass some arguments and parameters and we will use those parameters and do some manipulation in those things Okay so before the starting the video let me tell you first thing like suppose I run the script this one command substitution or maybe see which script I have run oh yeah suppose this command substitution is one of the script so here I will pass some parameters like I will pass my name my number okay and my some uh something like U country India so in this uh in these way we can pass the parameters okay and how we will access these parameters so you can access these parameters using like this like uh using Eco dollar one okay dollar one for the first parameter Eco dollar two for the second parameter Eco dollar3 for the third parameter so here you can access till doll9 and dollar 0 is reserved and it gives you the name of your script okay so this is the uh in this way you can uh uh work with the parameters and now what we have to do uh we will just uh save this file and what we will do we will just run this particular script I will just give the permissions to this CH mode plus X and 05 Fus Dosh and I will create this screen and I will just run those script 05 okay done and now what I will do I will just pass some parameters like right now I want to pass my name aush okay I will pass my country India I will pass my number uh okay and then I will pass something uh like uh shell tutorial I can write like this okay so when I will hit enter then you will see what happens so here you can see first line giving me the name of the script second line the uh SEC first parameter then third is the second parameter then my number and we are not getting the sell tutorial why because we have not used dollar 4 okay so we will use here Eco dollar4 and again I will run the same script okay now here you can see all the uh what we can arguments we have got in these form okay so you have to also remember one thing here like if I going to just pass the one parameter in this case the other will be ignored okay so you can see others have been ignored that is nothing okay and if you want to give like uh like this suppose I want to my I want my full name like aush Kumar so if I will do this so now it will act like this will be act as a first parameter this will be act as second parameter so to act like to use this as a one parameter you can use this okay so now you will get this okay output okay so I hope you got it how you can work with the parameters and now moving forward uh if you want to get the uh list of all the parameter you pass so there are the some special characters or yeah you can say characters so how we will use to print all the arguments we will use dollar at the rate and now it will print all the arguments which you will pass so what I will do I will run these script this one and here you can see I have got the all the arguments which we have passed like I India number and c tutorial okay and also there is one more like uh Eco dollar hash to get the how many number of parameters we have passed not this one dollar hash okay so again just clear the screen and I will run this script and here we can see we have passed the four parameters yeah that's true okay now what we can do we can also store the value of these uh parameters which we pass in a variable suppose I want to store like name equal to dollar one and I will just remove this not I will remove I will just keep it up okay and then I will try to access my name so here I can give my name is is like this we can do also dollar name okay save these and now I just clear the screen and I will run this and here you can see my image I so you can store the whatever the arents you passed in a variable also so in this way you can pass the parameter pass the value okay so I hope you liked it guys and I hope you understood it if you have any query you can ask in the comment section and also here you can see uh I have updated this repository and I will give the link of this particular repository you can access this like from here like github.com 9ub and this one C scripting tutorial okay from here you can get the whatever we are writing the course like you will get each and every Source there okay so that's all for today's guide I hope you liked it and I will meet you in the next video so thank you thank you guys for watching byebye hello guys now in this particular video we will be creating our the first task that is the basically in which we will whatever we have covered till now we will use those things so basically let me tell you the scenario what we will be doing in this particular video so basically we will first read the input from the user okay that will be the IP or domain name and next what we will do we will be uh using the Ping command to Ping that particular server okay so things are very easy if you want to go ahead with your like with yourself then you can go for it you so it will give you the more confidence about it okay so now I will use this scenario and I will create one script so actually already have open up my visual studio code and you have to just create one script and I will use the hashbang sorry okay so now what we have to do we have to take input from the user so already we have covered how we can take input so you can use the read here and you will prompt for the user like which server you want to Ping okay it can be any server it all depends upon you and I will create one variable here server address and next moving forward what I will use the Ping command so basically in ping command we have some options like hyphen C so whatever uh if you use normal ping command so like if I will use google.com so here you can see it will go in the finite but we want only for the three or four okay so what we can do we can give the count for three and the deadline for 5 Second after 5 second if nothing like Ping command doesn't get any response and it will exit so next what we will do you we have to just give this name server address no we are good to go what we have to do you have to just add the permission to this file TR using CH mode command and then I will run this not 01 I have to write 06 okay so I want to Ping Google server that is 88.8 okay so here you can see I'm getting the response okay and now what I will do I will enter some random IP like 8.65 52.4 so it will wait for the five 5 Second and automatically it will exit so here you can see okay so yeah here we can see five pack and transmitter but zero receiv 100 100% package loss okay so in this way you can create different scripts so that will be helpful for you so that's all for today's video I hope you like this our first T so that's all guys and I hope you liked it and we will meet in the next video thank you for watching hello guys now in this video we will be talking about our task two okay so let me discuss with you what we'll be doing in our this task so basically we will be connecting our remote machine with the SS using bash script okay we will create a script with the help of this we will connect to that particular machine so we uh first of all let me tell you how you can create your virtual machine so actually I have there is a a link for you I will add this link in our uh description then there is a tutorial to create a virtual machine you can easily do it okay and I have actually already created the uh machine so here is my public IP address I will copy this IP address and now I will create the script okay so let me open the vs code and I will just uh create the file 07 plus2 Dosh okay but before that I will tell you like uh if you want to do it on yourself you can easily do it okay so if you do it yourself and that will be very good for you so because you will get a more confidence as well you will learn more quickly so let me I will just give you the uh basic idea what we will be doing so I will take the username and the password okay uh not username and the IP and then I will use the SS command to connect with that machine so this is the overall idea and if you want to take input from the parameter then also you can do it okay so first of all let's take uh the input I will prompt the user to enter the username first username and then here I will create the username variable then read hyph P enter the IP so I create the IP variable I use SSH command SSH dollar username we need to do dollar username at theate Dollar IP okay so this is the uh command which we we will use okay otherwise we can do with the passing parameters also we will do it that also so so now I will need to give the permission to this file 07 now we will execute this file 07 and I will enter the username as iush and my IP is uh not this one here okay and my IP is this and it will ask me to enter the password so I will enter the password okay soy you can see aush I the name of the V is also I that's why it's showing like this I will do LS here so nothing is there who am I so name of the user is I here also so in this way you can connect with the uh remote machine using our bash script okay so you can do exit to exit come out of the machine and now we will see how we can uh connect with the uh using like parameters okay so what I will do I will just comment out the all and I will create a variable username and it will be equal to the dollar one okay the first parameter then the IP will be equal to the dollar2 okay we will save this script and I will just pass the parameters like I for username and IP for this okay 247 hit enter and it will ask me to enter the password now we are good to go done again let's check who am I a okay so in this way you can connect with the remote machine easily you can use envirment variables not envirment varable you can pass parameters you can uh use variables okay whatever thing you want to do so I hope you liked it so this is a way to learn new things by while doing some new uh things like create I will like in future uh I will come up with the more task okay so that's all for today's guide and I hope you have used all the concept which you have learned till now so that's all and I'll meet you in the next video thank you for watching hello guys now in this particular video we'll be learning about the operators okay so let me first discuss with you what we'll be covering in this particular video so we will go first with arithmatic operators then we will go with the relational and Boolean and so on okay so I hope uh you guys have completed our previous video so now let's just create the new script that is 08 operators. sh okay just add the hashbang or pin shebang you can say okay now I will create uh one variable N1 ENT N1 and I'll create the variable name as N1 read hyph P enter N2 give the varable name as ENT then uh I will EO I will do addition is or just addition so to for incel how we do it we cannot write like this N1 + N2 there is a proper Syntax for it you need to write like this N1 + N2 okay or you can inside also you can give dollar but there is no need okay so now in this way you can write the expression inside these two parenthesis and the dollar sign outside of that expression okay so uh let me just run this script once I will give first the certain permission to this file and then I will execute it d08 and N1 is 4 four that is eight yeah we are good to go now now I will just copy all these things like addition so here you can go with the subtraction what I'm doing wait substraction then here you can go for multiplication and here division okay and next uh we can go with modulus also so let's go with modulus modulus okay m o d l u s okay modulus now let's give the operator like here it will be percent uh uh let me just write like this so that it will be easy to read for you for division you have to give this for slash for multiplication you know this star and for the subtraction there is the minus okay so let's run this script and we will get the output for each and every number so I will give the 10 and five so you can see the addition is 15 subtraction is five multiplication is uh 15 division is two and modulus is zero why because modulus gives you the remainder okay if you do uh 3x2 then in that case you will get the remainder as one so you can see the modulus is one okay now next uh you can do increment operator and decrement operator also you can use so how you can do it uh using Plus+ and minus minus okay so I will do eco increment so here we will use dollar and what you have to increment N1 Plus+ or what you can do Plus+ N1 it will first increase and then print the value okay so let's just run the script clear enter the N15 5 so you can see increment is six okay in case if you do N1 + plus so here we will not see the increment because it first prints the value then increments okay so in this case we will get the value as five here okay so but now what we will do if we will equal the N1 then we will get the six okay so let me just clear this screen enter 5 five okay now here you can see you have got the six so I hope you got the concept of increment and decrement if Plus+ is after the variable name then it will first print then it will increment if Plus+ is first then it will increment then print okay so similar case with decrement Eco decrement what is the dollar and you have to do minus minus N2 use yeah N2 we can use and here also I I do uh leave it as it is so clear the screen enter N15 n26 and now decrement value with six uh first it was seven then now it is six okay so I hope you got it how the things are working okay so now let's check with some relational operators like equal to equal to greater than equal to less than equal to greater than less than all those things okay now you have to just Eco here I'm writing just a automatic operators okay just copy it and you have to go there and just write here Rel re relational operators okay I just uh comment out these things okay so now what we have to do so now we will use this relational operator with the if Els so till now we have not covered the if Els but still we can use it okay so how will you do it uh we will use if and then the big bracket this is the whatever the condition we will write in this so dollar N1 and we use GT for greater than and dollar N2 okay and then so don't worry I will uh teach you about TS in our next video okay so you have to just Eco N1 greater than N2 like like this and then you have to close the if block okay so GT means greater than and there are also many like GT for greater than and G for greater than equal to and LT for less than l e for greater than equal less than equal to n e for not equal to okay like this you can uh use okay so we will use first GT and then we will use other options in next okay so now you can uh run the script 08 and I will write 5 and 4 so here you can see yeah N1 is greater than N2 now I will change the uh g to g e and I will write here greater than equal to so now let me just clear the screen and run the script again so five and five so yeah N1 greater than equal to it this line is executing and you can do now LT if N1 less than equal to so N1 L here I will do and I will again run this script so 545 so yeah N1 less than N2 it is executing again less than equal to so we can use like this 4 4 yeah it is executing we can use hyphen EQ to check equality hyphen EQ we can do like this 5 five yeah here we have not changed but still you can you can think like okay so now what we do five and five can see N1 equal to N2 so in this way we can use the relation operators now let me tell you about the and operator so and operator is nothing but if both the condition becomes true then that then the whatever inside that condition will be executed okay so if N1 equal to N2 and I use hyphen a option to check and and operator and I will check if dollar N1 is greater than 1 okay if this is the case then this line will be execute okay so N1 I will write five 5 and N1 greater than one yes so okay I'm getting some error here okay you can write like this clear 5 five yeah now here you you got the like output as N1 equal to N2 now what I will do I write 0 0 and let's check what happens whether we will get any output or not so here we are not getting any output but now we can use Hyer po option for or operator okay so let me just clear this screen and use like this hyphen uh 0 0 so in this case you the like this condition is equal like this condition satisfies N1 equal to N2 that's why this particular line has been executed okay so in this way and and operator and or operator works so that's all for today's vide guys I hope you liked it and yeah if you any query then you can ask us in the comment section and I will surely update this code in our get repository I will add the link in our description so that's all for today I will meet you in the next video thank you thank you for watching hello guys now in this particular video learning about the ifs conditions okay so let's start with the video and I hope you are aware of ifs but if not then let me tell you first what about what is this so basically if if if else what happens if there will be one condition if that condition satisfy it it is true then the whatever the statement you write inside that if block that will execute okay so without wasting time first of all let me uh tell you about the like how will we write this script so that will be easy to understand for you so 09 I will write here if else Dosh okay we are good to go now okay b bash okay so here just support this in a equal to 10 okay if I will write if and the condition is written inside this big bracket okay and here you have to do if a equal to 10 okay so then you have to write like this then then what what do you want if this condition satisfy you have to write like this you can do anything here I'm doing just printing like a is equal to 10 okay and you can do like in else you can write like this EO a is not equal equal to 10 okay and then to close the if log you can write like this fi so I will run this script but before that we will need to add the permission 0 99 it is yeah clear the screen/ 09 9 okay 09 yeah a is equal to 10 what if I do 11 here and run this script so in this case this condition will not satisfy okay so how we can do it 09 a is not equal to 10 so I hope you got it how this thing work like if conditions so we will take the scenario of voting system like there will be person age we will take the input from the user I will just uh comment out these things okay read and I will do here uh age okay or I will prompt for the user enter your age here I will do age okay and we will apply the conditions on this if age where is the dollar if age is greater than equal to 18 in this case we will write EO you are eligible to cost V okay in else condition what we can write Eco you are not eligible to cast vote okay and we have to just close this if block control s to save clear the screen enter your a 23 you are aible to cast V again 12 you are not eligible to cast V okay if or I can just do here greater than okay and I use one more thing that is L if it's also like the if but if this condition fails it will check for this particular condition here I will write if uh age equal to just equal to I will use equal to 18 so in this case I want Eco please apply for water ID card okay and here we will not use 10 so now what we can do clear the screen run the script I will write my age equal to 18 so so so what happened and uh okay okay I think we will write then okay yeah please apply for water ID card okay so this is the L if condition that's why we will need to write the then okay so right now what's happening whatever the the age we are entering so here it is first checking this condition if this condition fails it will come upon this condition so now this condition execute that's why it is giving the output as this line okay what if the output doesn't match with any condition in this case what will happen the else condition will execute you not eligible to passw simple okay so in this way you can use if if else conditions in your projects okay so that's all for today's videos guys I hope you liked it you will get the source code of this particular video in our G of repository you can get it from there also okay so that's all for today's guys I will meet you in the next video and thank you for watching hello guys now in this video we'll be learning about the case statement okay so if you are aware of the switch switch statements in different language and you you it will be very easy for you guys but not let me tell you about how it will work so why this basically came in Ro first of all we will discuss about this so in many programs you get to know about that there are multiple ifs conditions then that will be very confusing but in case of uh switch case or you can use you can tell the cases it is very easy to understand those things and use it so what I will do I will just create a new file that is a case Dosh okay so I will take the example of the grading system okay so if the grid is a then uh that will be very good like we will print something out inter grd I will write like this and I will create a variable create and how will we use it we will use it case dollar grade okay and then what we'll do we will use the in keyword and here we will uh add the certain conditions like if the grid is a then what to do so here I will do like a then what we have to do not this one uh wait a minute yeah I have use only this bracket closing bracket so in this case I will Eco it's uh your uh your marks is between 90 to 100 okay I can use like this then if the grade is B no and but before that what we have to do you have to just add this semicolon like this is the syntax of using the switch case in this so for B you will write like Eco uh your marks is in between 81 to 90 like this okay and so on like let me call uh use the semicolon and then we will use here C grade and then I will Eco your marks is in between 71 to 80 okay and then we have to just uh use the Astic we can use for default and here we will use the semicolon first and here I will eco your marks is your marks are below 70 like this and then we have to use the EA keyword and we are good to go now we will just give the permission to this script uh 10 okay done now I will run this script 10 you enter my grid I will enter c your Max is with this okay I will enter B your max is between this I will enter e so your max is below 70 okay so in this way this thing works okay so I hope you like this videos guys and if you have any confusion about this you can ask us in the comment section okay and I will surely add this course in our repository you can access this course from there okay so that's all for today's guys I will meet you in the next video so thank you for watching hello guys now in this particular video we'll be learning about the array in cell scrip Okay so you can see already I have created this file that is alwaysss and added this she Banger so before starting the video let me first describe you what is a AR so I will just write it like this so array you you can say like that is array is nothing but uh data structure which is used for storing multiple values in a single variable you can say okay so this is the add simple suppose uh let me tell you the one use case like suppose uh you have to uh store multiple names okay suppose you have to store 10 names so how will you create it like if you don't know about you will just do like this name one equal to aush name two equal to some another name like anit name three equal to Let's create some write some name like uh aushi name for equal to ainash like this okay so this is not a good practice of storing uh names in different different variables so that's why uh AR came in rooll for storing multiple VAR in a single variable okay so uh I will first tell you about uh like array initialization what is the method of AR initialization like how you can create AR in cell scripting so it's a very simple so you have to just U give a AR name suppose uh name list I will give name list equal to this single parenthesis and here you have to store multiple names like aush like here I will write anit aushi and ainash okay so here you can see uh all the names has been stored in a single variable that is the name list okay so now you will think about how you will access these arrays okay that's a point like how you will access it so let me tell you first about array indexing okay it is used to access the elements present in an array okay so array indexing is basically used to access the elements in an array so it starts from zero suppose uh this is the array so the first element will have indexing index zero second one will have one this one will have two and this one will have three okay so here is four elements so like there is uh like index starts from zero and ends with n minus one that is three that is 4 1 that is equal to 3 so so to accessing the elements of an array we will use the you will use these index okay like if I will uh enter the index zero so at index Z I use is present at index one this anit is present index 2 is aushi index 3 is ainash okay so now let tell you first about how you can access the arrays okay so I will just use the Eco so it will we will simply print the uh whatever the index present okay so how you can do it Eco dollar and this par uh cly bases and you have to provide the ARR name that is name list and the big bracket and the index which you want so I want zero index okay so I will just uh wait a minute I will just comment out these things yes and I will run this script okay so 11 Dosh so let's run 11 Dosh what happened LS okay I will need to give the particular permission here do/ 111 yeah so here you can see so this one is printing like add is nothing but a data structure so I will also comment out these thing and I will it will just print up the first index okay wait a minute I write like this Eco first index let me run this so here you can see the first index is this similarly I will print all the other three indexes so I will just copy these things and here I will just write the second and here we will write the third and here fourth and you have to just change the number here like index number that 0 one that is two and that is three just control save clear SL1 Dosh and yeah so here you can see the first index second index third index fourth index so so here the main thing is that like you can access or you can store multiple values in a single variable you can see here so but uh in this case you you will you had to create multiple variables to store those values so that's not a good practice so instead of this you can use an array so uh one more thing is like if you want to print the multiple arrays not multiple arrays all the elements of an array so how you will do there is also the special syntax for this uh like we we use asri okay for printing so you can use like this Eco all arrays all array elements so I will just write like this name list and this one and here you can see the asri you have to just clear this screen and this one all array elements is here aankit aushi and one more uh syntax is there like uh you can use add theate also for accessing all the elements so you can see okay so that's it guys for today's video I hope you liked it and yeah one more thing I will upload this code in my GitHub directory or your repository you can see here you will see okay you can get this from cell scripting tutorial I will add it here okay so that's this for today guys and I will meet you in the next video and in the next video we'll be learning about the fall loops and all those things okay so that's all for to video guys thank you hello guys now in this particular video we'll be working on the loops okay so basically today we will start with the for Loop and actually there are different types of loop Loops but before that let me first create the file that is the for loop. sh so for Loop Dosh okay so now we are done let me just add this shebang okay so let me just first discuss about you the what is the loop suppose if you want to do some task that is the there that like exist there is some kind of repetion of thing suppose uh like if you have watched the mem like uh uh boyfriend sent her girlfriend like I love you 100 times 100 times so what is this thing this is basically a loop okay so Loop is nothing but you can say like in kind of definition like uh what you can say iterations okay like doing one thing again and again and again okay so suppose let me first tell me with an example suppose uh in some cases like suppose if you got some punishment and you have to write sorry for a teacher and your teacher says like you have to write the sorry uh 100 times and all those things or five times so uh similarly what you will do you will oh sorry you will do like this like Eco sorry if you don't know the loop and all those thing you will write just like this sorry sorry sorry and like you will just simply copy and paste things okay so this is what is this this is the repetition of the same thing so this repetition is uh managed by or removed by the loops okay so basically there are the three types of loop that is the fall Loop while loop until Loop okay I will discussing all these uh two Loops in our further videos but now in this video will be working only on the for Loop okay so let's start with the first thing but before that uh I I will create one array okay and I'll be working on that first okay so let me create an array and in this I will use the loop okay so I will just create with uh some languages name like python C++ Java and c and yeah like comma is not required okay so but before that let me just print the uh these arrays so every I can like check everything is working fine or not okay my array and I will just provide asri here and I will just uh give the certain permission for this file that is the 12 CH mode plus X2 okay do SL2 okay so here you can see the our this ad is working fine okay and uh so now what I will do I have to just uh print this array using the fall Loop okay how you can do it but before that let me tell you first about the syntaxes and all those things of fall Loop so the basic Syntax for fall Loop is like this for parenthesis here the initialization will be there initialization here will be the condition if you know how the C programming or Java programming then that or CPP so it's very easy for you to understand this okay but if you don't know then also you can get it right now okay and here will be the increment or decrement okay and the two CRA is like this okay so what is the this is the uh Syntax for follow Loop okay so uh let me tell you how the thing works okay so suppose uh I want to print uh sorry uh like this number of times five times so I will uh start with the zero or one it's all upon you and I will provide the condition like uh that I will create one variable at I equal to Z and I will provide the condition that is i l than five and i++ okay so uh let me just open up my paint so I can like you you should visualize that thing okay so where is text yeah so here simply I write one for Loop that is I equal to0 I should less than six or five if we starting for this one from zero okay so this is the fall Loop okay and I will just Eco here the sorry statement okay so here now what you have to think is like how the things are working okay so let me just uh do like this okay so how things are working basically so so when your Loop will run so how it runs so it will CH it will first assign I value Z if I equal to Z okay it will check the uh condition so I here I will just Define the titles for them uh here I will do initialization here will be the condition and here will be the increment okay so why increment because here I using the I ++ it it simply means it will incre increment the value of I by 1 okay so now here what I will do so you can see the one like right now there is I equal to Z okay so it will now first check the condition whether I is less than five this one so yeah 0 is less than five so if condition is true it will print the sorry so here in this case 0 less than 5 condition is true okay and it will what it will do it will print okay so here I will do like print what it is printing so it is printing sorry and then again it will increment the value of I to I ++ that is now the value of I will become 1 okay so here again I will give like here this I equal to 1 so again it will check whether 1 less than 5 yeah 1 less than 5 true it will print sorry okay and again it will increment the value to two Okay now again Loop will run for two like I will be two and it will check whether uh 2 less than five yeah 2 less than five condition is true and it will print sorry again and the I will become increased by one from here like I will be three okay so similarly again I will be three here and it will check like three less than five yeah condition is true so what it will do like uh it will print sorry okay and again the value of I will get increased by 1 that is 4 and again uh now it will do I will be four and it will check let me just increase this size here I equal to 4 okay and it will do whether four less than five yeah it's less than five condition is true and it will print sorry first and then it will increment the value of I to five okay and now I will become five and it will check whether five less than five so here condition is false and uh what will happen Loop will end okay and it will print sorry five times okay if you're starting your loop from from uh zero okay so this is the simple uh working of the for Loop like how things are working so now let me just tell you about with the experiment part how you can get it okay so let me just open up this one and I will just uh comment of these things okay and for Loop and I will initialize the value of I from 0o to I less than 5 because I have to print five times I ++ Eco sorry okay just controls to save again let me run the script which number it is 12 okay it's not this one sorry bar yeah so here you can see five time sorry has been printed okay but what if you want uh like if you do less than equal to 5 so in this case suppose uh less than equal to 5 so it will print you uh it will print six times so here you can see six times has been printed why why this happened because at this point now if there is less than equal to so here the condition satisfied like yeah four five is less than equal to five so condition is satisfi satisfying and it will be true and sorry will get printed and then sorry will be printed and then I will be equal to six and now if you will check it will check the condition that is 6 less than five so that condition is false so in this case our Loop will get in and you will come out of the loop okay so in this way uh for Loop works I hope you got it and uh let me just tell you one more thing like how things work and like there is also uh some different syntax of for Loop okay so the different synex is this like this uh for uh for suppose uh you have to provide some list like uh uh like you can do like this for I in and you will provide a list like 1 2 3 4 5 6 7 8 9 10 you you can do like this also okay or you can provide some any other uh variables also like uh you can provide a string names also and all those things and here you will just do do okay and uh in this what you will do I will just print like this Eco iteration colon and here I will just write the I okay and then you will write here done do done okay contr s to save I will just comment out this this Loop and again I will just run this script okay so here you can see the iteration I is printed not the value okay so at that point I will just provide the dollar okay yeah so here you can see iteration one let me just uh clear this screen and again run this script so here you can see 1 2 3 4 5 6 7 8 9 10 okay so in this also you can run Loop suppose uh if you want to do some operation of if one comes or like suppose I provide here some different list like the name list suppose I II okay so here uh suppose if you want to uh do like this uh if and the condition which you will give like dollar I equal equal to iush so in that in this case what you should do like uh then Eco uh what should we Eco like um you can Eco like yeah uh like this I is a good boy okay and you have to just uh uh write uh what you can say close the if condition I will save it and I will just run this so here it is showing some kind of error like uh unexpected token then at line number 29 uh wait a minute I have wether uh let me write like this first and I will do it in the colon not colon okay why it's swing error I'm not getting uh let me just uh uh if if Toler I equal equal to I then Eco Fe yeah it's correct uh wait a minute okay so uh basically I got it so here you have to just provide one space so I was doing just some silly mistakes so let me again run this script uh clear dot SL SL yeah so here you can see uh sorry which script add in I have to run 12 sorry 12 okay okay so here you can see a is a good boy so if dollar I equal equal to I then it is printing like yeah iush is a good boy okay so I can do write WR uh write like this like dollar I okay so it will also run so I is a good buy okay in this case you can see so basically you can uh what you you I was saying uh you can just uh initialize or write your for Loop in the syntax also okay so uh if you are familiar with the C programming or CPP then that is very easy for you and if you are for uh same like familiar with python then this one is also fine for you okay so uh now let me tell you first about uh how you can print the array elements okay so in our previous class we have learned about array so here you can see I have created array here let me just create it uh below I will comment out this and uh I will just create array and I will just add some other language also like uh cotl I will add and some other Frameworks like react JavaScript shell scripting okay so this is my array okay so now I have to print this array okay using for Loop so how will you will print an are using F so basically we will need to define the uh condition like added should be less than the size minus one so here what is the size of the added that is 1 2 3 4 5 6 7 8 so 0 to 7 we have to do so in this case you will use the normal Loop that we use in for in other programming language that I equal to0 I should be less than 7 and I ++ and we will just equo the indexes okay so how you will do it my add a name and and I will provide the index as I and we are good to go now let me just run the script yeah here you can see all the AR elements has been printed in this in the same order okay so uh that's it for today guys I hope you liked it like how the fall Loop works and you like this representation also like everything should be clear for you if you have any problem then please ask to me okay so that's all for this guys and I will add this code in our GitHub deposit you can access from there and provide the link in the description so thank you guys for watching this video and I'll meet you in the next video thank you hello guys now in this particular video I'll be talking about the W Loop okay so basically uh I have covered already the fall Loop and in which we have discussed about the basics of looping and how loops work okay so now let's start with the Y Loop let me create this file first Loop Dosh and I will just add this shebang or hashbang you can say here okay so here we go so now uh file Loop is also uh just like the follow Loop but it is uh it works it works until the condition is true okay if condition gets F we can come out from the loop and if condition is true it will execute that particular thing okay so let me just give you the syntax part like what is the syntax of while so while space and this double space and here you have to write the condition okay and then you will write like this uh do and whatever the code you want to perform here and then you have to do like here uh you have to write here done okay so this is the basic syntax of the while loop okay so now we will see the visualization part so let me uh open up my paint first okay but uh before that uh let me just copy the this one code where it is here okay now I have copied let me just uh paste it here okay I will need to just create this one like this to add the text and all those things so here we go and let me just remove this part okay and also uh we forgot about uh this one like we need to give the semicolon all those things okay so let's start with the implementation one suppose uh same case if you want to print something like uh my name if I want to print my name five times how the thing will work okay so basically so here we will need to give the condition like we can give the I like uh I should be less than equal to four or less than five you can give the condition and above you can declare the I variable okay and here you will write the code like Eco and my name iOS okay so how the thing will let me tell you here we will give the value of I and then we will check the condition and then increment okay so initially the value of I is zero and condition will be get checked like 0 is less than equal to 4 yes it is less than equal to 4 so now now what it will do it will print so here I write the print so here what it will print it will print simple iush okay and the value will get incremented by one so now value of I will be one and it will again check the condition whether 1 less than equal to four yes it is true so again print the name iush and again increase the variable to like two it will so now I will be two and again I will check the variable name like 2 less than equal to 4 okay and print and again it will increase the uh value of I by 1 so I will be three and again it will check whether three less than equal to 4 yes it is true and again it will print and again value of I will get increased by one that is four now I will be four and it will check yes four less than equal to 4 yes it is not L than but yeah it is equal to four so in this case also I will get printed and value of I will be five now it will check I equal to 5 whether 5 less than equal to 4 no it's not so this is the false condition and we can come out from the loop okay so same thing we have to do in while loop also so how we can do it let's me just go into the terminal and I will just comment out this part okay so here what I will do I will Define the variable I equal to Z and I will give the condition like while and condition will be I should be less than equal to 4 and do what do nothing just Eco uh sorry Eco my name that is the aush okay and here you can do done and also to increment you can increment like this let i++ okay here we for forgot to increment uh this one so here uh we will increase the value of I okay so the same thing we have to do and uh now let's check whether this works or not so I will just give the appropriate permission uh sorry toore while loop Clear /2 while loop so here you can see no such file or directory why it's showing like this uh okay let me just copy this code and I will delete this file actually 12 12 is two times so I will create like 13 y loop. sh and paste it contrl s give the appropriate permission 13 clear do /13 and here we go and again what is showing line number oh sorry here we have to give the uh this one hyphen EQ less than equal to l e okay now it should run okay so here you can see five times aush has been printed okay so in this uh in this form you can create the while loop okay so again uh if you want to use the while loop with an array we can use it also like uh to print the array so I will just create the array uh array equal to I will write 1 2 3 4 5 so size of array is five and uh less than equal to 5 okay or less than equal to 4 it doesn't matter here and I will just eco eco the array array indexes okay and let me just again run the script and here you can see we have successfully accessed all the elements of an array so in this case you in this way you can use the Y Loop so I hope you got it and I will add this particular file in our GitHub repository so that's all for today's guide and I will meet you in the next video thank you thank you for watching now in this video I'll be talking about the unti loop okay so already we have covered the for Loop here you can see and the while loop okay so now let's start with the UN Loop okay so before starting let me first tell you about this what uh what is this how this Loop actually works so until Loop is basically it works sorry it works until the condition is false condition is false okay so it's quite interesting like it works when until the condition is false whenever your condition becomes true it you you will come out of the loop just like the reverse of the while loop Okay so it's just like you if you will say like 2 is greater than five so yeah it then in that condition the loop will run if you will say like 6 is greater than five now in that condition this Loop will not work like you will come out of the loop okay so I will uh do a visualization for you and I will open up my pain to show you but before that let me just write the syntax here uh sorry what happened here uh wait a minute guys I will open the pain in different window yeah and I will open up my terminal okay so now let me just create the Syntax for you so the syntax is very easy just like the while loop so you have to just give the until and the whatever the condition you will provide here condition and the do and then here you will write the code and done okay this is the basic syntax and the increment decrement whatever you want do here you can do like this okay i++ or whatever okay so here you can see uh I will just copy up this syntax and I will open up my paint so that will be easy for you to understand so I will take the same example of printing the name and all those things because that will be easy for you to understand okay so here uh I want to print my the same thing like my theme so I will provide the variable I equal to Z and I should be less than equal to three I will choose right now so it will print I think four times and then I will uh increase the increment let i++ and here I will write the code uh the code will be like iush I will just write like this and here what you have to do you have to give the wrong information like false condition you have to provide so here I will do like I greater than equal to 3 so here if is false then it will execute the this code okay so value of I so I am I'm writing like this V ofi and then the condition check okay and uh then increment okay or you I can write like this print also okay so currently value of I is I equal to 0 so 0 greater than equal to 3 yes condition is false okay so if false then it will execute so it is right now 0 greater than equal to three that is what false okay so in this case what it will do it will print iush and the value of I will get increased by one so I will be one right now so here again it will check 1 is greater than equal to 3 condition is false so again it will what it will do it will print okay so it will print now condition will increase by 1 that is now I will become two so I equal to 2 so here again 2 is greater than equal to 3 so again this condition is false so a will get printed okay so now I increment by one that is I will become three so now for I equal to 3 so 3 greater than equal to 3 yes condition is uh like uh false it will be false okay and I will get printed and increment by W now I equal to 4 so 4 is greater than equal to 3 yeah condition is now true so now you will come out of the loop okay so in this way until basically just the opposite of Y Loop like if condition is false the loop will execute otherwise not so let me just uh uh do with this uh uh what you can see what you can say like uh run this loop I will provide the I equal to Z and I will use until Loop until condition will be dollar of I is only greater than if I use or greater than equal to three so in this case do Eco aush okay and just do it done here and uh you have to just increment the value of I also okay now we are good to go I will just give the appropriate permission to this file 14 okay do /4 and uh we got some kind of error here line number 21 syntax error okay okay here I do semicolon let me just check now unexpected End of Line let me just check the syntax like I equal to Z until dollar of I is greater than equal to 3 do Eco iush and then let i++ and I have done here I have done here right two and done okay uh so here you can see we have not comment out this so let me just comment it and again I will run this script let me just clear this screen and sl14 yeah so here you can see uh the loop has been executed that is greater than equal to if I will do so it will run five time four times I think let me clear the screen okay the three times I is greater than equal to three okay it will run only three times okay I'm sorry for for here like uh here here like condition will get true yeah condition will get true here because it is equal to three so in this case it will come out of the loop and there will be no further check okay so it will print only three times okay so uh now what I will do I will let me just try uh what you can say we can print the table okay so you can print the table of any number like if you want to print the table of five okay so you can do like this uh you can write the expression here like whatever the expression you write like dollar uh let me just write for you I will just uh dollar parenthesis and you have to provide the number that is the uh any number five into and you will do like this dollar I and here just do zero and here you provide 10 okay and I hope should run so here you can see uh no we will start with the one okay so let's check so here you can see and here we need to do 11 okay so here in this way you can print the table of any number also you can do your customized changes like uh you can take input from the user and then passing that value here and then give the result on the terminal okay so I hope you you liked it guys and you got to know about the unop and I will post all the source codes of this particular video in our GitHub repository you can access from there and I will provide the link also in our description okay so that's all for today's and I will meet you in the next video so thank you for watching byebye now in this particular video I'll be talking about a break and continue okay so we will learn about these two keywords in our shell scripting so let me first create the file with the name like break and continue Dosh okay we are good to go let me add the She Bang because without this we cannot run our script okay so now uh let me just tell you the execution like what and what is this so let me first talk about the break okay so break is basically it breaks the sorry it oh what I'm doing here yeah man it breaks it breaks the execution of a loop okay so basically it breaks execution of a loop and continue is nothing but it skips the execution on some certain condition okay so we will do and do the Practical part of this so so break will basically it will break the execution and it will not do the further operation but in continue it will execute like it will skip that particular part okay so uh let me just start with the fall Loop because we'll be using the fall Loop for the implementation break and continue and also you can use while loop also it's all upon you so I will simply first uh demonstrate you how the things works okay so for this we will need to uh create one Loop so I'll be created for so here I will do I equal to Zer I should be uh what you can say I should be less than equal to uh 10 I ++ and I will simply write now I will just Eco the value of I ecoo I okay so now let me just add the certain permission for this 15 okay dot SL 15 sorry yeah so 1 to 10 the numbers are getting printed okay from 0 to 10 sorry so suppose in some condition you want like if uh if I is equal to uh five then after that your Loop should not execute okay so at this type of certain conditions uh you will execute from the loop okay so how you can do it you have to just provide the if condition uh like this if uh sorry if dollar I is equal to some number that is five so in this case what you have to do then you have to just break the loop and uh what you can do else you have to just eal this value of I okay so you have to just save it okay and I will run the loop here again so uh I think I'm getting some kind of syntax error at line number uh 13 if then equal to 5 yeah we have not closed the if condition okay clear the screen again okay sorry in else condition we are not writing anything right now so now I will write fi here and now you will get to know about how the things are working so here you can see the loop is getting uh started from zero and it executing till 4 but when if your value of I is equal to 5 then in this case what is is happening your Loop is not executing further okay so similarly uh in case of continue we will see and I hope you got it like how the break condition works okay suppose if you want to give some uh other number like if you want to give two okay so at at that time uh your Loop also will get uh break okay so two save and I will just run the script again so here you can see Zero and one is only printed okay so now we will talk about the uh continue so I will just simp simply copy this Loop and I will just here paste it and I'll write like this here comment out for you guys because you will need this code continue and here I will use only the continue okay so here what it will do it will skip that particular part okay if if I will run this loop again so here you can see it has escaped to okay let me first clear this screen so that uh and I will just comment out this part because you should not get confused okay so here you can see it has printed now you will see two is not getting printed okay why because it is execute continue statement basically skips that particular part okay so that's all about the break and continue uh if you want like more example uh let me just uh create uh like what we will do we will just take the input for the user from the user in the for Loop and based on the user input we will break this statement okay so I'll just comment out this all also and I will paste it here and here I what I will do I will do read U input okay and I will Eco here enter your AE or here I can give the variable name age also it okay so here I will do if age is equal to or less than we can say if a is less than 18 so then what we have to do Eco you are not allowed in party like this okay and else what we can do else uh Eco you are allowed in party okay and uh here after printing this we can just come out of the loop and you can use a break statement okay so clear and again run the loop and here it is showing inter your AG my age is supposed 23 so you are allowed in party okay so again it is asking 34 okay so now if I enter 12 so here you can see you are not allowed in part and you came out of the loop so that is the use case of the breaker statement to come out of the execution okay so uh that's all for today's guys and I hope you liked it and if you have any queries you can ask us in the comment section and you will get the whole source code in our get repository so that's all for today's and I will meet you in the next video thank you thank you for watching hello hello guys now in this particular video we'll be automating the creation of files and directory using the F Loop okay so already we have create uh learned about the F how the things work okay so let me first create the file using the 16 and automating file or di creation and Sh okay I will add the hashbang or shebang whatever you want to call okay and let me tell you the use case first so use case will be like this you will be creating the one fall Loop okay and using that you have to create files okay or directories okay so this is the use case simple use case if you want to perform on your own then that's a very good thing for you like you will learn to know how the things work and if not I'm with you and I'll be writing the code along with you guys okay so what do you have to do you have to first of all take the input from the user okay like directory name or first I will create the uh loop for the directory creation so I'll write the comment as like this and what you have to do you have to take the input from the user okay so we have to do read di name I will uh write the directory name di name and I will use the loop for i = 0 to I less than equal to 5 so suppose I have to create six director so I will use five directories so I will use I less than equal to 4 and I ++ okay and here what you have to do you have to create the directory so how you can create it using uh mkdr command and you will provide simply the directory name okay and if you want to uh add some 0 1 2 3 after this so you can do like this also like dollar I okay so we will do do that thing later but uh um now let's do this one okay so here I'm just Eco like enter the directory name which you want okay control s to save again we will need to give the particular permission to this file that is the 16 sorry not 116 clear the screen do/ 16 in ENT the directory name I need uh uh let's write the Linux Ford and here you can see file exist why it's showing like this file exist okay Linux TI okay yeah it already exists so we will need to add this one uh dollar I to create multiple directories okay so I will just uh uh delete this okay because you cannot have the same name like you cannot have the two directories with same name okay Enter the directory name Linux D okay Linux Di and here we go so all the direct has been created 0 1 2 3 4 okay so in this way you can create multiple directories we you want like uh suppose in some cases we need some directory like test so you can create this also like you can write like this test and again the D will get created like test 0 1 2 3 4 all these things okay so uh that's a very easy uh use case so again now let's create uh some files but before that I will need to delete all those things because I don't want uh much uh uh files in my this directory so I will delete this so let me choose all those things and I'll delete at a time okay okay okay move to trash okay it's yeah it's this OS is running in Virtual box that's why it's slow little bit slow okay bro so uh what we can do so we will now create the file creation script okay so Eco enter your file name okay so here again I will use the same Loop and read the read file name and all those things so here I will to read file name or a student name suppose uh there is some student list and you want to store their data in that particular list so how you can do it so you will need to use touch and uh here I will start with the one okay so let's clear the screen and just I will comment out these part because I don't want to create directory right now okay I'll simply run this scrip enter your file name so I will use a student like this and all the file will get created like 1 2 3 4 okay so I have not used here uh uh a student name variable so I will need to delete all these things again sorry for that okay delete it and again I will need to run this script here so let me clear the screen run the script enter the like this student so here you will see like all the St 1 2 3 4 has been created so in this way you can create 100 of files using the for Loop and that's a very good use case like suppose in some cases you need multiple directories so you will not do manual task okay whatever the amount you need amount number of directory you will just provide it here okay the number of directory you need and that's all for today and I hope you liked this use case again in our next video we will see some use cases or we will move with some different topics so that's all for today's guys and I'll will meet you in the next video so thank you for watching and I'll meet you next one thank you hello guys now in this particular video we'll be uh automating the user creation okay so how we can do it let's uh start with the video and I will create the file that is 7 user creation Dosh okay just add the hashbang okay so let me first tell you the use case okay what will the use case so here the use case will be the F Loop first we want multiple users and then username input then password and also choice whether user want to add user or not okay so I will comment out this and I will just create the fall Loop first the loop will be I equal to 0 and I will just run this Loop till less than equal to 2 and I ++ okay so here first I will take the input from the user so I will first uh use enter your choice okay if choice is one then uh we will add user otherwise no read Choice okay so we will read choice and we will apply the if condition here if so one space here if dollar Choice hyphen EQ it means equal to one then what we have to do then we have to take the username input read username so here I will do just uh Eco enter the username okay and next I will take the input Eco enter the password read password okay so uh now till now we have uh like we will take the input from the user okay so the command that we used to add the user that is the user ad then we will use sudo user ad and I will provide hphm hyph /bin bash okay and the username so username is this one and this we have a store a username and then we will pass the password because password takes the two parameters okay okay so I will pass like this okay so dollar username dollar password and the pipe is pipe works because it passes the uh whatever the uh data is here it passes this side okay it will pass the data to this command that is sudo CH and the CH password it is so we will write CH password password okay so this command will add the password in the uh system okay or for that user you can say so now the else part will be else just break out of the loop and uh close the if condition okay I will just uh clear and I will just uh add the permission do/ 17 enter your Choice my choice is one enter username I will enter like Hello World password Linux machine okay so here you can see uh authentication we're getting some kind of error like user hello world okay password not change enter your choice let me just enter some other number to break out of the loop okay let me check with the code in so read choice we are getting the choice enter the username that is the read username then read password then sudo user add hyph name hyph as bin bash and we have passed the username here okay then Eco username and here you can see the password okay we have okay there was a m mistake so again let me just run the command uh so but before that let me just delete that user Del user hello world I think it was okay done so again just run this script and enter your choice my choice is one and uh username anit I will write and uh password I will write hello world okay so now it is asking me to again enter my choice whether I want to add a user or not so I will I don't want so I will write zero so we are out of the loop now I will log in into the anit and enter the password hello world so here you can see who am I if I will do so it is anit okay so in this way uh we can U uh like automate the user creation if you want to add multiple users suppose if you want to add only one user at a time then you can use this commands Okay these much of a script and you don't need any if condition and all those things okay so in this way you can automate the user creation I hope you liked it and if you have any quy then please you can ask us in the comment section so that's all for today's video and I'll meet you in the next one so thank you thank you for watching hello guys now in this particular video we will be learning about the test command Okay so before starting let me first create the file that is 18 test command you can write Dosh okay so let just add the hashbang okay bin bash yeah so before starting this particular tutorial let me first tell you about the basic like description about the test command so basically test command is basically uh use to test the particular expression test the particular expression or particular condition okay so if condition is true then it will return zero otherwise return one okay so if condition is true it will return zero where uh or otherwise it will return one okay so it's basically uh like one of the another method of writing this expression like whatever we write in this if condition whatever the expression we write here whether of five is equal equal to 5 okay so it just we can just replace these part using the test command Okay so but also there are many uh like many functionalities or many options are being used with the test command like if we want to check whether two strings are equal whether there is some file uh exist or not whether the file is empty or not whether the file or directory like if we want to check uh whether some particular directory it is directory or not or some mathematical operation like equal to greater greater greater than all those things okay so we can do all those operations so let's start so first we will start with the string comparison like whether two strings are equal or not or not equal to whether a string is empty or not all those things we will do so how we can do it let me just uh create the two variables that is a and and B so I'll write my name aush and b equal to iush in this okay double course and now I will write the if condition and I will use the test command if test so it is basically like uh uh what we can say advis to use the double quote for the variable while using the test command okay if dollar 1 equal to Dollar B then what we have to do then we will just equo a is equal to P okay and I will just uh write the lse all part also lse equal a is uh not equal to B okay just close the if condition and clear the screen and CH mode plus X8 18 do/ 18 okay so here you can see a is equal to B now what I do if I just change the uh B okay so here you can see a is not equal to be equal not equal it's equal okay let me just clear this screen again and run the script yeah so here you can see a is not equal to B okay also uh test command uh offers me many more functionalities like string size if you want to get okay so how we can do it using hyphen and option okay like not basically string size it basically checks whether string is uh uh what we can say empty or not okay so how we will do it using test hyphen n dollar dollar a we will use so basically if there is some string then it will uh Eco string is not empty okay em PTY y okay so hyph option is checks whether there is a string or not if a string is not empty then it will result true it will return it return true if it is not empty otherwise it will return false that it means the string is empty simple so how you can do it the string is empty so we are checking a for a so for a there is a string so it will it should return a string is not empty so string is not empty is returning if I will just pass hyphen B uh dollar B here so it will it should return a string is empty okay so it is returning my string is not empty what is returning yeah uh let me just again run the script okay it is it is also returning a string is not empty so for this we we use hyphen Zed option sorry for that we will use hyphone Z option here so clear the screen okay so again it is is showing me same thing okay but uh okay okay sorry uh I'm sorry here we have to use this double quotes Okay but it's still it is showing string is not empty but why it is empty there is something wrong we have done here yeah yeah sorry sorry what we have to do here a string this is empty string so this condition is getting true and it is just displaying with this Eco message so that's a wrong if I do something else here condition will get false and then it will display me this okay so so so there is nothing much so we have to just replace this Eco with a one string is empty or here we can just do string is not empty okay so now it should return string is not empty so here you can see string is not empty if I will just remove this part it will display me a string is empty okay so it was just if it is true then it will execute obviously okay so in this way you can do string comparisons also so now moving forward uh in numerical part what you can do if we want comparison like equal to greater than all those things so how we can do it let's just do it okay so I will just copy this much part and again I will paste it here and I will provide here some numbers like a = to 10 and b equal to 20 and here if test hyph we will not provide hyphen here we will use uh the same thing which we use for numerical like hyphen EQ so here I will use dollar a okay if dollar a equal to dollar B okay I'll remove this one so here if a equal to B so it here we will print a is equal to B if it is true otherwise here we will just print not equal okay just again clear the screen and run the command so string is empty and not equal okay so if I will do 10 here also so in this case a is equal to b or you can check other options like L than LT for less than here I will just uh add one more zero that is 100 and clear the screen run the script okay so here we will just change the equest statement like a is greater than b sorry less than less than b okay so clear the screen again run the script so a is less than B that means it means uh it means this statement is true and this one is executing and if I write here so here we will see not less than b so not less than b so in this case you can use uh multiple things using test command like you can play with the numerical part string also okay so instead of this double bracket whatever we use in this one like double bracket and spaces so we it is easy to use this one okay so now moving forward we will uh use some like file comparisons also so how we can do it okay so I will provide the file name not file name I will use these much of file or hello.txt to play with it so then there are multiple options which we can see like uh hyph s option which is used for checking the uh like uh what we can say checking the if file is empty or not okay so let's start with this so here I will just add the command that is the file comparisons okay so here what we can do if test hyph s and I will provide the file name my file name is hello.txt then if file is empty hyph s is used to check if file is empty or not we will just Eco file is empty otherwise else Eco file is not empty it means if condition is true then it will execute line number 32 and if not it will will execute line number 34 okay so I will just uh uh comment out all other leave it uh let's check so let me first check the hello.txt so in hello.txt there is nothing so it should return file is empty so we have got some kind of error so the error is we have not closed the if condition clear the screen so file is not empty it it's showing why because uh I don't know if file is empty or not so the file is empty it should display let me just create one more file test1.txt so it is absolutely empty file so again here I will provide test 1.txt clear the screen so again it displaying me file is not empty why so okay um okay if file is not empty it will display this line okay if file is empty then it will display this line okay okay okay so we have done some mistakes here like we we have to just replace this line here so I don't know why this thing is happening so sorry for that so just uh clear the screen and yeah file is empty now so now what we will do we will just write some text here and now it should display some like file is not empty here so clear the screen and again so here you can see now it's swing file is not empty okay so uh also there are many flags we can use hyund D and all those things okay so there are many flags which we can use to check hyund D is used for check I think whether the uh whatever you are passing that is it is directory or not okay so I will create one directory that is uh uh let's create one directory that is dr1 okay so here I will just pass dr1 if it is directory it is it will I I will display if condition is get true it's a directory or it is not a directory I will display here it is not our directory just uh run the script okay so it is a directory and I will provide some different name here like suppose I provide hello what was the file name that is test one.txt and now it should display it is not a directly so yeah it's correct okay so uh I hope you liked it guys we can use test command while providing the conditions in if with if conditions so okay so that's all for today's I know there were some mistakes today so sorry for that and I will meet you in the next video okay so thank you for watching hello guys now in this particular video we will talk about functions okay so what is function and how everything works we will discuss all the things in this particular video okay so actually already I have created this uh function. SS file for you if you not then you can also create uh this one okay so let me first discuss about the function what is function the basic idea about it like if you are aware of any other programming language like ccpp Java python s then you might be aware of the function but if not then let me tell you uh about this okay how everything works okay so what is a function so the basic definition which everyone says is like function is a block of code which can be used again and again okay so as the name suggest as the definition so this is the same thing as like it okay so whatever the code if you write some kind of code and you want to use it again and again and again then you can write that particular code inside a function okay suppose you don't want to do some particular task uh repetitively okay then you can use a function okay suppose you have to uh like uh uh what you can say you have to sum two numbers okay then uh you can create a function and then you will just call that function to add those numbers okay so basically the whatever the main benefit we get from the function is the code reuse ability okay it means we can reuse that particular uh code again and again this is the basic idea about the functions okay so now let me tell you about the basic basic uh syntax what is the basic syntax of the function in the C scripting so how we can do it so basically the basic syntax is the function name whatever the function name you want to provide okay the double parenthesis and simply this CRA and inside that cly you have to just write the code okay whatever the code or whatever the operation we want to perform okay so this is the basic syntax which we will be uh using inside this whole tutorial so now let me just create one function with the name greetings okay and I will just Eco something like uh good morning uh good morning iush like this okay and to call the function you have to nothing uh you have to just uh write the name of the function gretings okay and now let me just uh move into the this particular directory okay and now what I will do I will just provide the certain permission to the file CH mode plus x 19 function.sh okay clear the screen do /9 okay so here you can see good morning iuse has been printed okay so here what happens uh suppose we want to again again uh call that function so we can just uh call it again here what happened let me just just copy it again greetings paste it here okay so again it will print good morning as two times okay why it happens because here you can see the name of the function and and we are just Eco this thing good morning I and then we are calling the function okay so with function calling whenever you call any function then it calls this function and whatever the code inside it it gets executed okay so this is the basic functionality of the functions okay sorry now moving forward uh we need to talk about like uh parameterized function and the returning value okay so what is the parameterized function let we first discuss about you so basically in function what happen you pass some parameters okay and uh with on that parameters we do some kind of computation and all those things so I will just create the sum function okay I will just remove this thing and I will create Now parameterized function okay so so the name of the function will be sum aush okay and I will just Eco the sum of uh dollar one and dollar two is not like this uh before parameterized function let me just discuss with the simple function how we will do it like suppose if a equal to 12 and Bal to 13 then C = to Dollar a + dollar B and you have to just Eco the value of C Eco the sum of dollar a and dollar B is the we have to just equal dollar C here okay just save the code and we will just call the sum function and then we will get the result as 25 okay so we have got some kind of error in line number sorry we don't have to provide this parenthesis here okay so okay we are getting uh error not error uh the same string because uh we have not uh added the expression in a right way okay so here you can see for computation like we know like we need to do like this okay then and only we can compute anything okay so here you can see the sum of 12 and 13 is 25 so suppose if you want to uh change number okay so 13 and 14 so we can get result as 27 I think yes 27 so here the thing is we need to change that thing in our this uh inside function but uh what do we want to pass that pass the value while calling the function and in that case we need the parameters okay so how we can do it so in sales scripting we basically pass the parameters as this one like from here we will pass suppose 12 and 13 and then it will act as the dollar one and dollar two okay so in this way we can get so now for this I will just uh like uh provide a equal to Dollar 1 and b equal to doll2 okay and all things will remain same and I will just pass the parameter here 12 and 13 not 12 and 13 let me provide just okay 12 12 and let me clear the screen and again this so here you can see the sum of 12 and 12 is 24 now we don't need to change anything in our function we can do changes here okay so now the code now the answer will be different like 167 okay so this is basically the parameterized function okay so we can pass parameters inside the function and then with those par and and the computation will happen on those particular parameters okay so this is the basic functionality of the parameterized function let me just create some another function like suppose uh you want to uh get uh get name of a student get a student name I will create a function get a student name okay and uh I will just Eco like this name of student is and here I will just Deco dollar one okay so here whenever you will uh call that particular function and provide the name so let me provide the name as iush and uh clear the screen so here you can see name of student is aush okay so in this way you can pass the parameters okay so now uh let me discuss about you the return type of the function of in cell scripting how this uh works so basically in uh what we can say in cell scripting the return the like method of returning any value some little bit of difference so let me discuss it with you how it basically happens okay so basically what happens whenever you call the function and if you return something then you need to store that return value in a special uh like uh with a special uh symbol we can say like that okay so here if we want to Eco uh and not e if you don't want to Eco you want to just return the value so you have to just write return dollar C okay and after calling the function you have to store the value return equal to you have to write uh uh what I think dollar question mark So it basically stores the value whatever the return okay so if here the return value is there like what basically happens it will store the value uh before like here this sum function okay so if there is uh if it is returning some value then it will store inside this variable return okay but if there is again some kind of any function and and here it is returning something like suppose uh here I create some function okay and here I write the function name as sub okay and here uh the return type will be all the same thing but here in this case now what will happen it will uh store the value of this return value okay so this happens so let me bu before uh going into complex thing let me first discuss with the basic part how how we can get a return value so now you have to just Eco uh the return Eco return value is dollar rdt okay so let me just clear the screen and uh I will just comment out this part okay and let me run the script so here you can see the return value is 67 okay so in this way you can store the return value but now what happens if you if we just uh like uh we do SUB here sub we do okay so in this case let me uh check what happens okay so in this case also we are getting the return value is 67 okay but we have not called the sub function so let me first call the sub function so sub I will provide uh 13 and 14 okay uh not 13 14 133 and 12 and here I will write dollar a minus B so value should be one okay so here you can see return value is one so and now what I will do I will just call the sum function here here before return so now let me check what will be the return value return value will be now 167 okay so now you I hope you got the idea about how the value is stored inside this red uh variable okay so whatever the function is calling before this so that value is getting stored inside this variable okay and whatever uh like if like some function is calling before this one so that value will not be stored inside this okay so this is the thing about return type of a value in a shell scripting okay so that's all for today's guys and I hope you liked in I will update this source code in our GitHub depository you can access that from uh access this code from there okay and uh in our next video we will cover something more important and that is about nested function so we will discuss all those thing about in the next video so that's all for today and if you have any query you can ask us in the comment section thank you thank you for watching now in this video we'll be talking about the nested function okay so actually I have already created the file with the name 20 nested function let me just paste the thing hash uh like shebang okay and now let me just discuss about like basic idea what is the nested function so it basically means as a name suggest you can uh guess like we will just calling function inside a function inside a function not calling also we can say like we can write also function inside a function okay so let me just discuss about the same thing suppose I create one function demo and here I just Eco something like this is a demo function this is a demo function and again I create one more function that is the demo 2 and here I'm writing ecoo this is uh sorry this is a demo to function okay and now what will happen I will simply call this function demo here okay and uh demo to below okay so I will just give the permission for this file okay clear the screen /20 okay now now we are good to go here you can see the both the function has been called okay so it this is the basic thing okay but now what I will do I will just uh uh call this function inside inside this function oh sorry demo two demo two okay so now what will happen it will basically call the function okay so here what happens the demo function has been called so here it saw like uh we have to Eco so it EO this part and again it check demo two function is also called so it gets the print the content of this demo to function so in this way uh our this nested fun function works but what if you want to call the uh but what if you want to call the uh like uh not call if you want to write the function inside a function so now here what I can do I can just call this this function here also demo to and clear the screen and again we will get the same result okay this is the demo to function okay so now what I will do uh we will take the one use case of summation and addition uh sorry summation and subtraction okay and we will work on those thing okay so I hope you got the idea about how everything works so let me just comment out these things and I will create the parameterized function that is first I will create the sum and here I will uh Eco the sum of and I will pass the dollar one and dollar two is and and here I will just uh do the computation part that is the dollar uh dollar 1 + dollar2 okay and let me first check uh whether the thing is working or not sum 2 and four and uh do/ 20 and okay yeah it is working the sum of 24 is six okay so now I will what I will do I will just uh create this sub function also here and I will just eco the sum of uh not sum the sub the difference of dollar one and dollar two is and here we will do the computation part that is the dollar one minus dollar2 okay and then we will just uh call the function inside the sum function that is sub 4 and two okay so let me just clear this screen again and hit enter so here you can see the sum of four and 2 is two yeah uh sorry I have done something yeah let me just uh give it proper space I clear this screen and yeah we are good to go now here you can see the sum of 2 and 46 we have passed 2 and 4 here and we are getting result from here 2 and 46 and substraction of 4 2 that is equal to 2 so we are getting the exact result let me change the value and I will write 80 here uh 80 and here I will do like 40 okay so here you can see we are getting the same result like expected result we are getting okay so in this way we can do the uh nested function and all those things okay so I hope you liked it and I hope you got the idea about how the nested function works okay so that's all for today's video guys and I hope you liked it and if you have any quer you can ask us in the comment section and you will get the all the source code in our GitHub depository and you will get the link in the description so thank you for watching and I'll meet you in the next video thank you byebye now in this video we will be talking about some basic and the important concept that is the local variable and the global variable okay so actually we have already covered the functions so that is very important to know about the concept of local variable and the global variable so let me create the file with the name lare and the gware dosh okay and I'll just add the shebang here bin bash okay now we're good to go so I will start with a basic definition of the local variables so if you like um I will just write local variable so we can Define the local variable as the uh variable which is uh which is sorry uh which which is declared inside a function is called as local variable okay sorry for mistakes okay my typing is not good so much that's why it is happening so so what is the local variable so local variable we can Define it as like the variable which is declared inside a function that is the local variable okay so so suppose if I am creating one uh variable that is the function one okay name of the function is function one and I'm defining a variable that is a equal to 20 sorry 10 so in this case what is this so a is nothing but the local variable okay so if I will do e a here uh Eco dollar a and I will just call this function function one and let me just add certain permission to this file that is the 21 clear do /21 okay so now I will just run the script 21 uncore okay so it's not uh okay let me just again yeah clear the screen sl21 now okay so here you can see we are getting the value as a value of a as a 10 okay so this is the local variable like we have declared this variable inside a function so so that we can access this inside this function only not outside of this function so if you want to print uh like uh uh without function calling okay I will just print here Eco dollar a so let me let's uh see what happens so it will I don't think it will print anything clear the screen again so here you can see we are not getting any kind of result here okay so this is happening because we can't access the uh Lo local variable outside of the function so that is the thing we can uh get to know with this thing okay so I will just comment out this and I will just again uh call this function and now I will discuss about with the what is the global variable okay so Global let me just uh write like this Global variable okay so this is the variable which is uh which is declared out outside the function okay Jo be like whatever the variable which is declared outside the function that is called as the global variable okay I hope you got the idea okay so let me just comment out these things and I will create the variable name as the gware okay gware equal to 20 okay or I can just uh Define this string like I am a global variable okay so this variable can be accessed from anywhere of your program like inside the function or outside the function so if I will just call here Eco dollar gar okay so here we can see the result as the um the global variable okay so here we can we are getting the result I'm a global variable but now if you want to uh again Eco the same thing inside the function also so we can also get the result two times like I'm a global variable so here you can see 10 and then I'm a global variable so you you should see the uh like how the function is executing like when when first what is happening we are just printing This Global variable and when we and then we have called the function so after calling the function we are getting the first it is calling this local variable and then it is calling this one G that is the global variable okay so this is the simple concept of the uh local variable and the global variable I have disc why because we have already covered the functions and these thing you should know about it okay so that's all for today's guys and I hope you liked it and if you have any queries you can ask in the comment section and I will post all these things in our get of repository okay so thank you for watching and I'll meet you in the next video thank you hello guys now in this particular video we'll be covering uh like one of the script that is the user deletion script okay so basically in this particular video we will use the whatever the thing which we have learned in now in our some previous videos that is the functions and the global variable local variable okay these all things which we'll be using inside our this particular video and we will create the one script that is the user deletion script okay so let me create that file that is the uh 22 uncore user deletion Dosh okay and uh let me just add the what we can say Ash C uh exclamation bin bash okay we will add this uh shebang and now let me just discuss with the workflow what will be the workflow because if you want to do the same same thing uh separately on your own then you can do it simply because it will give you the more confidence about in this scripting so let me just tell you what we will what will we are going to do in this particular video so we will basically read the uh username whatever the user which we want to delete and we will we just need to provide our the system password for deleting the user and the Del user command Okay so these are all things which you are going to do inside this particular video so let me just uh comment out this thing and uh now I will just uh uh use the local variable and the global variable concept and the function function concept inside this video okay so before uh deleting the user we'll need to some create uh user okay so how you can create the user we will just use Pudo user add and let me just name it the test okay I sh 098 okay user has been added I hope let me just check with the password okay so here you can see test user has been add we have not provided password and all the same because we don't want to create a like a normal user we we have to just delete this user that's why okay so the name of the user is our test okay so first what I will do I will just Eco enter the username okay and I will just read the uh username inside the variable read username okay and uh then what I will do I will just uh Eco enter your password it means it is asking me for the whenever we use sudo then it ask me for entering my password okay so that's why I've have entered enter your password and I will read here read uh system password I can write okay or current user password you can write the variable name okay or the Pudo or the root user password okay and now I will just uh write the function name as the D user okay and inside this D user I will just Eco uh dollar this one system password okay and I'm just passing this password inside the command that is the Pudo using a pipe I will use and I will use Pudo hyph s hyphen capital S is used whenever we take the input of the password from from different sources like we are getting we will uh write the password using this okay and with the help of hyphen capital S we can uh write write the password and then I will just write the command that is the Del user and the username okay dollar username okay and then we will have to just call the script T user okay so here you can see these are the what Global variables okay these are the global variables okay uh like username and the system password and these Global variables are being used inside this function okay so this is the normal function and here we are just what we are doing here we are just calling the calling the D user function okay and now what I will do I will just uh move into this particular clear the screen and I will just need to give some permission to this file create the screen do /22 okay now name of the username is the test and I will need to enter my password okay so removing user test so now done so we have finally remove that particular user if you want to go back and check the/ CTC password file so there will be no test user so you can see there is no test user okay so in this way we can uh delete the user with our script okay so we have just used the global variable concept which we have learned in our previous video and the function concept okay and here we are just passing the name of the uh username which we want to delete and hyph hyph capital S options uh to uh pass the like um password okay so this is the thing uh I hope you got it how everything is working so that's all for to this video and I'll meet you in the next video with some another script okay so thank you guys for watching and I'll meet you in the next video thank you hello guys now in this particular video we'll be creating one of the script that is the file Integrity Checker that is the basically a simple script which we will be using to check the Integrity of the file whether the file has been changed or not okay so basically for this tutorial we will be using one of the tool that is the md5 sum okay so let me just show you the demonstration of this particular tool so basically this tool will generate the hash of the particular file so if you'll check the hash of this hello.txt so here you can see the this is the hash okay so but now if we'll change the uh something like uh let me add again 1 D here and again let me check the hash so there will be change in both the hashes so here you can see the difference so basically what we'll be doing so we'll be using this tool and we'll be creating two functions for generating hash and the checking hash and uh we will check if both the hashes will match from the previous hash then there will be no uh changes we will display that as a output and if there is changes then we will display output as like there is change in a file okay so let's start with the uh creation of the script so let me just add the one file that is the file Integrity Checker file Integrity Checker Dosh okay so now what we will do uh I will create a function so let me just uh pin bash shebang has been added and we will give the two option for the user for generating hash and the create checking hash okay so but before this I will just create the function that is the generate hash okay and we'll be covering all the concept which we have covered till now like mostly function will will be covered in this particular video okay so now I will just ask the user to uh enter the file name of which we want to generate hash to here I will ask the user enter the file name please okay and I will just store the uh file name in the read file name v file name variable and then now what we will do we will just generate the hash and store that hash into the file that is md5 sum and we will provide the file name and we will just uh file name. md5 we will store the output in the md5 this output whatever the output we are getting this one we will store in this mt5 okay and uh then we will just Eco hash value stored in dot dollar file name whatever the file name we have file name. md5 file okay so uh this is the generate hash let me just call the function and let me check with whether everything is working fine or not clear the screen do slash uh but before that I will need to provide the certain permission to this file that is CH mode plus X that is 23 clear the screen do /23 enter the file name I'll just write uh hello.txt here and here you can see Hello hash value is stored in this file so let me check okay so here hash value has been stored we can check here okay now uh coming back uh to the script so let me just uh clear here generate hash now what I will do I will just uh what we can say um check hash value we will uh check hash check H check hash value okay and Eco enter the file name now we we are just checking the hash value and we will match the hash value with our previous value okay so Eco enter the file name again we will uh enter the file name and we will just read file name we are creating the variable and storing this in the file name and now we will uh generated hash we will create one variable value generated hash okay don't confuse between generated hash and generated hash okay and here we will store the output of the previously uh whatever the previous uh hash which has been generated in the md5 file so we will store the value like this value we will store in this variable generated hash how we can do it we will just read the file name that is dollar file name. md5 we will add okay and then we will again uh again we will just uh store the uh uh like current hash or current output so how we can do it dollar and we will just do md5 sum and then we will just provide a file name okay now we are good to go and then we will use the if conditions here like if uh we will just uh do like this if and we will pass the double codes and dollar gen let me just copy this thing if dollar generated hash will be equal equal to we will use here equal equal to again double code dollar output then in this case what we have to do then Eco there is there is no no change in file okay and in the else condition we will surely uh add the equal statement that is there is there is something change something change in a file okay and then we have to just uh block the uh if condition we have to just close the if condition okay okay and now what we have to do uh what we can do uh like uh now we will just Eco the choices Eco one dot what the user want generate hash whether user want to generate hash or whether user want to calculate Ash to check file Integrity we can say file inity okay and then what we will do we will use the switch case and uh whatever the thing which we have already learned so we will use read hyph P okay and we will like write enter your choice enter your choice okay and we will store it in the choice variable that is the choice okay and then we will use the case dollar twiice okay in and if this is the if this is one then what we have to do Eco gen generating hash and then we have to just call that function that is the generate hash okay here we go generate has Ash okay now we have to just remove this part now if two is selected by the user then in this case what you have to do and here you have to just break this one okay two then if we have to just Eco uh we can do checking file Integrity okay and we have to just call this function that is the check hash value okay and we have just close this one and the if any other value that is the default if we get the default then in this case we have to just Eco invalid Choice bu invalid Choice okay and we have to close this case okay now we are good to go I hope everything is uh ready and we will just run the script again or clear the screen okay and I will just remove this file here uh because we'll be using this file okay and I will just uh remove this one also okay now run the script okay what is the choice first enter the file name hello.txt okay hash value has been stored inside this file now we will to again run the script and now we want to check file Integrity enter the file name hello.txt okay so there is no change in file okay but now what I will do I will just again uh do hello.txt and uh I will add this one e okay and again I will uh clear the screen again run the script enter your choice that is the second check file Integrity enter the file name hello.txt and here you can see there is something Chang in a file okay so in this case you can see uh like we have changed file here name like we have added e so it is showing me that there is something change in a file so our this script is running uh actually fine so for your uh like if you want to go on some Advanced label you can uh use try except block all those things okay for if file doesn't exist you can just pop up an error or E the statement like file doesn't exist all those kind of things okay so that's all for to this guys and I hope you liked it and we have used multiple things inside this so this is basically the longest script which we have entered till now so that's all for today guys and I will meet you in the next video thank you thank you for watching now in this video we'll be creating one of the script that is the uh cloning repository okay so basically this script will what it will do it will basically clone the whatever the repository if you want to clone from the GitHub so basically we will be doing in this particular script so let me just create the file that is the 24ore uh clone repo Dosh okay now we're good to go we have to just uh so this is the basically a very simple script which we'll be uh doing right now okay so the way let me just tell you the use case how the thing will go like basically we will read the uh like link from the user okay we will use the git command okay and it will basically automatically uh create one of the folder inside ouros inside our system okay so this is basically the simple use case which we'll be doing inside this particular video so how we can do it we will be use the concept of the local variable not local uh L globally Global variable and we will use the functions also okay so how we can do it uh if you want to do on your own then that is a very good thing so now let me just uh Eco enter the repository link repository link okay so we will ask the user to enter the repository link so we will just read this thing inside the repo link variable okay and I will create the function get repo uh not like this get repo okay and to parenthesis Eco and here I just Eco getting depository please wait like this and we can use the command get clone okay and get clone and reping will provide okay so now what I will do uh we have to just call the script uh call the function sorry get report and provide a certain permission to the script CH mode plus x24 clear the screen /24 okay Enter the deposit link so let me tell you we will be like uh uh what we can see cloning this uh link okay or this repository sriping tutorial so let me just go back here and control shift V now enter so you can see cloning depository please wait so it is done so now here we can see all those file have been like uh cloned here okay 1 to 10 because we have added only uh till 10 so let me just again uh delete this uh link okay delete this directory clear this screen okay so uh this is the very simple script which we show right now so now what we can do we can check uh uh whether the uh user has entered link or not okay so this thing we can do in our next video okay like we will check about the uh like regular expression and all those things okay in our next video so that's all for today's guide and I hope you in the uh in the next video I'll meet you so thank you for watching hello guys welcome back to the channel this is aush and now in this particular video we will learn about uh one more script that we will create another script with the help of the nmap tool which we basically use for the network web mapping and we will look for the what are the open ports in the particular uh system using the IP address or the domain name okay so but before moving forward in this particular video I will uh talk about first about this clone repository s file so we can do one more thing in this particular uh script is like that uh wait a minute we can just uh add one more thing here like uh we can check for the whether user enters the uh correct URL or not okay so we can use the concept of the like subst that is the sub string we will match the sub string of a string okay I hope you got the uh concept this thing like what what we will do we will just match the sub string part of the this repo link okay if if it matches with the github.com then we can easily clone the repository so now what we have to do I will create the uh just another variable with the name domain name okay so let me just create it domain name equal to github.com github.com okay and I will just need to add the some fils conditions here to check whether the user enters the correct link or not okay so here I will just do dollar repo link equal equal to and I will need to use asri because uh we use that for the sub string comparison okay so I can do asri and then inside the double codes I have to just provide the variable name that is the domain name okay so now what we will do we will basically uh like write the fur the script like then Eco if the link are equal then what we will do what is happening okay let me just copy the same thing again here Eco then we will do this else what we can do else we will just uh Eco please enter valid link and we will close the condition part here with fee okay so I hope everything is uh correct so now what we will do I will will just run the script again here so okay I will run this script but before that I will just copy this link okay so just paste it here and the terminal so I will just run the script using 24 okay clone. Enter the repository link I will enter the link okay so here you can see we got some kind of error uh on which line we have got line number 14 okay if repo link equal equal to asri okay we forgot to add space here contrl s clear the screen okay now I will just add first google.com so it should Pro in yeah show please inter valid link now I will what I will do I will just just uh paste the depositor link enter so here you can see it is cloning into sriping tutorial and here you can see uh the directory has been created with the name s script to tutorial so uh our script is running uh fine because uh if you are entering some wrong URL then at that time we are getting the uh this statement is running like please enter valid link so it means uh this thing is getting verified okay so that was the part which was remaining in our previous video so now what I will do uh I will create one more uh script with the name sorry let me just create it 25 uncore uh nmap yeah we can do nmap Dosh so now uh if you don't know about the nmap so let me tell you first about what is this so nmap is basically one tool that we use for the network mapping or you can say like for finding the open ports in a particular uh system system okay so that is a basically a cyber security tool which we use for for Network scanning and all those things we can also get the information about the OS okay so just like other commands uh like for LS we have L option a option so similarly for nmap also we have different options okay which we will learn in this particular video okay so let's start with the scripting part and let me just give you the use case how the thing will go on so the thing is basically what you have you have to read the host name it basically means whether you want to take the domain name or the IP address it all depends upon you what do you want to take as a input from the user so you have to take the host name and then further what you have to do you have to just use the nmap commands Okay to just uh uh what we can say um to just scan that particular host name okay so this is the simple use case which we will be going to use in this this particular video so for that first I will need to enter the uh take the input from the user that is the host name okay so let me first clear the screen and now I will just uh Eco okay wait a minute what what is happening which keys I think some keys are okay wait a minute some keys are placed automatically wait a minute yeah I think now it's not happening nothing is happening sorry for that so now what I will do Eco enter the host name okay but before that let me show you the how the thing is work okay the actual thing works okay so let me just search for the N map okay so you will get the official website of the nm.org that where it tells like like uh it's a free and opposite utility for network discovery and security auditing okay so this is the basically one of the tool and there is also one uh scan me. nm.org this is the what we can say testing website through which we can test for any uh for this domain name okay like it's legal to test this domain name because they have already authorized peoples to test this particular domain but you cannot uh test any other domain this without their permission okay so if you do I will not be responsible for that I'm clearing this thing in this particular video okay so now let me just uh okay I think my Internet is slow wait a minute okay so now I switch with uh another Network okay so now let's go on this particular website and map.org so here you can see the whole documentation part if you want to read you can read okay so let's go with the reference guide you can go with this or docs also so this is the reference guide in this way we will basically write the command Okay hyph a option is there okay many options are there and before that you should know about the TCP Port UDP Port Okay so so basically uh we have 65,536 ports in our system okay so it basically basically scans which uh which Port are open in your system okay so now let's move with the scanning part okay so let me just uh check whether this website is accessible or not I think it should be yeah so here you can see go ahead and scan me the title of this particular website okay so now what we can do uh we will just create this script and we will use this nmap tool and some other options okay to run our script okay so now let's do so Eco enter the host name read host name okay we will just uh read the host name and now next what we will do we will just take the our password okay the system password because some of the options required uh Pudo permission so for that we need this enter system password okay so here you will learn one more thing hyph hyph FS option provides like if you will enter something it will not be visible okay so that is the uh benefit of using this option so here we can store with system password okay and then what I will do I will just uh uh create one function okay okay or not function before that uh yeah I will need to create one function to work with the uh cases okay I will just create different cases for different options okay so how we can do it so we have to just write the function name so I will write the function name as the inmap function okay like that I can write okay and in this I have to just provide the some options okay so how I can provide like I will need to write Eco dollar okay and uh then I will just need to write like this first option will be or I can uh write like this one dot and normal scan okay and we will use slash and for new line for two Dot and then tcps scan we'll be doing three types of scan in this particular video normal scan TCP and the udps scan okay three is UDP scan so these are the three option which will be available to the user and then what I will do we will uh what we can say we will take the input from the user okay choose option choose option which you want to prefer okay so here we will just write the option okay okay and now what I will need to do I will need to Pro uh uh write different cases so if user enter one what should happen if user ENT two what should happen all these cases I should write so we have already covered it in our uh previous videoos so how you can deal with the cases okay case option in if one is provided then what you have to do I will just Eco uh thing like uh uh if one is provided I should write like this eco uh like this normal scan okay like this we are done and then what you will need to do Eco I will just provide the system password to the Pudo command Okay so right okay so now what we will do we will just pass the sud sudo and we will use the capital S like hyph FS option because we are getting the password from this uh particular uh system password okay that's why we are using this option and now we will simply use the N map and the if you are going with the normal scan so at that time we have to just provide the host name or the domain name okay so we can just do like this host name okay so this is the first case which we will be do dealing with that and secondly what we'll need to do uh this is just like break a statement and for the second second case that will be for the tcps scan okay so you can do like this inter like this TCP scan and uh this much Dash Okay and same thing we have to do just we have to change the uh option okay so you can just uh copy and paste things easily and hyph is capital T that option will be used for the tcps scan and the third thing is the just the udps scan okay so I know yeah you will not be aware of these TCP and udps SC because that is the concept the security part but if you learn you will surely get it UDP scan okay and then again same thing I will just paste the thing here and I will just use the Su that is the one option which we use for the uh what we can say udps scan okay so these are the three option but if user something else then at that time what we will use we will use the As and then we will provide like uh please enter the valid option okay so this is the case and we have to just close this thing so how we can do it esac okay and now simply we have to call that that function where it is that MF function so I will just uh copy the thing here okay call it here okay now we are good to go first we will need to provide the certain permission to that file okay and now so enter the host name so our host name is this one is scan me. nm.org okay so it's all up you can provide the IP address as well as the domain name we we will go with the domain name first and after that we will go with the IP address sorry we will need to provide like this scan me. nm.org okay you will need to enter the system password okay so here we are getting some kind of error at line number 42 okay wait a minute oh sorry I have done some mistake I have to just enter the name of the function okay again same thing scan me do n map.org okay so whatever scan we I just want the uh normal scan so let's check it takes some time so you will need to wait and let's again check the IP of that particular domain name scan me. nm.org okay so I think I'm not connected to the internet okay okay sorry for that okay so now I have solved the issue so let's again run the script enter the host name scan me. nm.org okay system password normal scan I want okay so it's starting okay so here you can see we have got the different ports like 2280 9929 these much Port ports we have got okay so these are the port which are open on that particular domain name okay so also we can run for the second option so again run the same okay second tcps scan okay let's wait these SK take I think much time we will need to just wait so basically in this script we have used uh switch cases and the function concept and the user input all those thing we have used here so that was a quite type of revision for you guys okay if you will create these kind of scripts so let's wait for this uh it's taking a little bit more time let's wait okay so we have got the all the TCP ports which are open on that particular domain name so here you can see 22808 so these are the all ports we have got so these are the open port these are some filtered open filtered so you will uh if you will search about on Google like what the difference between open and filter Port you will surely get to know and these are Services which you can see here okay so that was the basically uh thing about the scripting like how we can use the different tools with the with bass script okay so that was the tutorial for this and I hope you liked it if you have any query you can call uh write down in the comment section and you will get the source code of this particular video in our GitHub depository so that's all for today's video and we will meet you in the next one thank you thank you so much for watching