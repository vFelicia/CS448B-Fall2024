hey guys welcome to the next video on open CV tutorial for beginners using Python in this video we will see how we can perform simple threshold anon images using open CV so first of all what is threshold in so thresholding is a very popular segmentation technique used for separating an object from its background the process of threshold involves comparing each pixel of an image with a predefined threshold value and this type of comparison of each pixel of an image to a threshold value divides all the pixels of the input image into two groups so the first group involves pixels having intensity value lower than the threshold value and the second group involves the pixels having intensity value greater than the threshold value and using the different threshold incretins which are available in open CV we can give different values to these pixels which are higher than the threshold value and which have the intensity lower than the threshold value so let's see how we can use simple threshold in an image so to start with I have the simple code which loads an image on a window and this image is called gradient dot PNG so let me show you how this image looks like so this image looks like this so as you can see in this image we have on the left hand side the black values and when we gradually move from left to right we move towards the white value so on the left hand side the pixel value are closer to zero and on the right hand side the pixel values are closer to 255 so we are going to just involve some thresholding techniques and we will see how these this image is affected by the trash holding techniques so first of all what we are going to do is we are going to define two variables one is underscore because the result of the thresholding gives two result one is ret value and the second is the threshold 'add value of an image so I'm going to just say the second value which is given by the thresholding technique is th one is equal to C V dot trash hold and this threshold method takes several values the first is the source so our source is image the second is the threshold value so as we have seen that our image have on the left hand side zero pixel value and when we move towards the right it's a pixel value increases to 255 right so let's say our threshold here is 127 and the maximum value of the threshold is 255 which is the white color on the right hand side and then the fourth value here will be the threshold type so there are several threshold type in simple thresholding we are going to see them one by one so the first tresh holding type is CB 2 dot trash binary so first of all let me show you how the result looks like and then I will explain what does this trash binary type does so what we are going to do is we are going to use one more CB to dot I am show method to show this thresholded value into a new window so we are going to just show this value into a new window and we already have the original image in the image window so let's run this code and let's see what happens so you can see in this binary threshold encompasses this original image to 127 and if the value of the pixel is less than 127 the value is assigned to zero and if the value of the pixel is greater than 127 the pixel value is assigned to 55 that means white so if the value of the pixel is zero it will look black and if the value of the pixel is 255 it will look white so this is how binary threshold inquiry and by the name itself you can understand that this is just a binary threshold links it's either 0 or 1 now let's see the other type of thresholding technique so now I will just change the name of this variable as th2 and the next type of thresholding is called threshold in inverse and as the name suggests the threshold inquiry inverse is going to give the inverse result of what you get from the trash binary so I'm going to once again use the imshow method to show the result of this threshold inquiry inverse value and let's run the code and let's see what happens so this is the original image and then we have the thresholding one image and the threshold inquiry Majer so this image you got from the first thresholding which is by using trash binary and the second image you got from this method which is trash binary inverse and this trash binary inverse image is just the inverse of what you get using the thresh binary so if the pixel value is lower than 127 which is our threshold the pixel is assigned 255 otherwise if the value is greater than 127 then the pixel value is assigned zero which is the inverse of what we got in the previous step now let's change this threshold to let's say 50 and here also let's say we change this threshold to 200 and let's see how this result changes when we change the threshold value so I'm going to run this code once again and you can see this is the result of fresh binary and now because our threshold is up to 50 that's why our result is like this so until the pixel value is 50 it's black otherwise if the pixel value is greater than 50 it's going to give you the white pixel value and the Thresh binary inverse is going to give you the inverse value of what you get in the trash binary step so I'm going to once again just close these windows and let's see the next thresholding type so I'm going to name my variable as th 3 so the next threshold entire called Thresh trunk so this is this type and let's first of all see what is the result of this trash holding technique and then I'm going to explain what it does so we are going to just show this thresholded image into a new window and run the code and now we have the result so let's move it like this and we have here the original image and the result of the trunk is this th3 so here what happens is up to the threshold the value of the pixels will not be changed so up to 200 because our threshold is up to 200 so when the pixel value is up to 200 the pixel value will not change and after the threshold which is 200 the pixel value will remain the same which is 200 so from here to here the pixel value will remain 200 let's change this threshold to some other value let's say 127 and then let's run this code and you will see that now from black to 127 pixel value the value of this image will not change the original image up to 1/2 is the same and after the pixel value 127 the value remains 127 okay so the pixel intensity value will remain 127 until the end so if the value is greater than 127 the value will remain 127 and if the pixel value is lesser than 127 then the pixel value will remain unchanged so this is how the trash trunk works and let's see the other method which is let's say th 4 and this is the method which is called trash to zero so we are going to just use trash to zero and then we are going to open this th for into a new window and let's run this code and let's see what happens so now we have this result let's move this to the left and the result of the trash to zero is this one so in Thresh to zero threshold inquiry whenever your pixel value is lesser than threshold the value assigned to pixel will be zero okay so when the pixel value is lesser than the threshold the pixel value is assigned to zero that's why you can see half of the image is black and when the pixel value is greater than 127 which is our threshold value the image or pixel value will remain the same so after 127 all the pixels will remain the same let's see the other technique which is called fresh 20 inverse which you already understood I think what it does so this is fresh 20 inverse and we can just change this variable name to th 5 and here we can just open it into a new window and I'm going to run this code once again let me move this here and the result here so you can see this fresh 20 inverse is just the opposite of the trash to zero so if the value of the pixel is greater than the threshold value which is 127 the value will be assigned to zero otherwise if the value of the pixel is lesser than threshold the value of the pixel will remain the same so this is how some of the simple thresholding techniques works in OpenCV we will see other threshold integra news so stay tuned and I will see you in the next video you