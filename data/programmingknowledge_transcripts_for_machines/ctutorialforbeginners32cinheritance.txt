hello guys in this video I'm going to show you what is inheritance and how to use inheritance in C++ so we all know that C++ is an objectoriented programming language right and inheritance is one of the most important concept of objectoriented programming so what inheritance does inheritance allows us to define a class in terms of another class right so once again inheritance allows us to define a class in terms of another class which makes us easier or which makes it easier to create and maintain our application and this in result will increase the US reusability of code and faster implementation of our code so let me give give you an example for example you want to calculate the area of some shapes and this shape is a polygon right so what uh polygon can be polygon can be a rectangle polygon can be a square polygon can be even triangle right and why I'm saying this is because each of the polygon has similar property and what is the property every polygon rectangle or square or triangle have height and width okay so height and width are common to each polygon but the calculation of area for each of the polygon is different right so what we can do is we can define a class which have width and height that we can reuse in other class for example rectangle square triangle or any other variable so that uh it will reduce our code uh writing also and it will use the reusability of our width and height in our polygon class so let's see how how we can Define uh inheritance classes in C++ so I have already told you we have polygon class and in this class for example I Nam this class as shape okay and this class has two member variables width and height as I have told you and what are these These are protected members now I I think I haven't uh discussed about protected access modifier uh before so this is the right time I think so protected member of a class are reusable or can be used in other class which is inheriting this class okay so I'm going to give you uh once I complete this example you will be able to understand what is protected and I will repeat this definition once again and you already know what is public uh members public members are available uh in other classes freely even though they are not inheriting from the base class so we have our class which we call as base class which will be a base class uh for rectangle square or triangle classes and the height and width we want to keep common to this rectangle square or triangle class so we have the class called shape which has protected members which is height and width and which has public me function function which sets uh which sets these uh the value of width and height okay so this is simple function which takes two arguments and whatever AR when we pass it in this function it will set the value of these two width and height right so this shape is a base class now for example I define a class called rectangle rectangle little bit okay so rectangle and in this rectangle we want to calculate the area of the rectangle okay so this has public function called void area and what it does it it's just we are using to calculate the area of the rectangle right so what we are going to do we are going to use these width and height from the shape class to our rectangle class and how we can use it by using inheritance and how we can inheritance inherit from from our shape class to our rectangle class okay so the shape class in our case is called a base class and rectangle class is in our case is called the derived class and how we can inherit from this shape class inherit uh these member variables or member functions in the derived class we just use colon this kind of colon and then we uh Define a x modifier which is Public public and then the name of our class from which we are deriving okay so this kind of Declaration is called inheriting from the base class to the derived class and rectangle in this case is called the derived class and shape in this case is called the base class from which we are in inheriting and what we are inheriting we are inheriting height and width of the polygon okay so we have the uh function public function and we want to calculate the area right so what we can do because we are inheriting from the shape class which have height and width defined already we can use all the public and protected members of the base class in our derived class we can use this height and width in our derived class so what we can do return what is the area of the rectangle height into width and because we are inheriting from shape class and these are the member variable of shape class we can use it here also height multiplied by width okay so inheritance allows us to reuse the Base Class member variable which are either protected or public okay and it will give you the area of the rectangle right now in order to calculate the area let's define other class for example triangle and this also will uh uh inherit from the shape class and we also want to calculate the area of the triangle so this is a class second class which is uh inheriting from the shape class and in this uh class also we want to calculate the area of the rectangle uh triangle right and the area of triangle is height into width ided 2 right if you all agree with me I think so area of the triangle is width into height divided by two right so what we are doing we are reusing the variables from our base class in our derived classes which are rectangle and triangle now we can just Define the object of our rectangle class rectangle is equal to rectangle rack okay and we can Define the object of triangle class triangle p r i for example and what we can do is we can reuse or we can use the function which is set value which is there in the shape class by using these objects called rectangle or triangle because we are inheriting from our shape class right so once we write re which is a object of rectangle class Dot and you can see here set values is available here right so we are going to use this and we can set for example we want to calculate the area width is equal to 15 and the height is equal to 10 okay so this will give you the um width and height with this will set the width and height and I forgot one thing because we are returning this we need to return int instead of void right you may be confused why I'm writing void here it should be int because we are returning integer value right in a similar way I can use triangle object to calculate the area of the triangle and the member function set value is also available here for example the same values I want to give in the case of uh this triangle to calculate the area of triangle so this set function is there in our base class but we can reuse this in our derive class using the object of uh our Drive classes right now to calculate the area I can just write uh STD not here here standard which uh is standard see out and then we can uh just print area area rectangle is equal to so the area of rectangle we can find it from this uh rectangle function which is a area function right area so we can use this object of uh this rectangle class right so re C dot area right it will give us the area of the rectangle then I will just write the the end line and in a similar way I can find the area of the triangle area triangle okay and this time we are going to use try object so let's try and run the program I will just build this and yes we want to build it now and it gives some error let's see what is the error okay so here I forgot the semicolon here also I forgot the semicolon and let's rebuild it R again and still because this has to be here and when we build build it we can see area rectangle is 150 which is 10 multiplied by 15 which is 150 and the area of triangle is 7 which is 15 * 10 ided 2 which is 75 okay so this is the concept of inheritance so once again what inheritance does inheritance allows us to reuse Our member functions or member variables from the base class which is shape in our case and we can inherit from shape class because what we want we want to reuse this height and width function in our rectangle class and triangle class or even Square class for example and in the derived class so class which is inheriting from our Base Class is called the derived class and in this we this class has the access to all the protected members and public members of the base class so so what are protected members protected members are the members which can be reused in the derived class okay so class in which we are deriving from which we are deriving these are protected but if it was a private member height and width were the private member we cannot use it in the derived class private members are private to the class they cannot be reused outside the class and what are public members public members can be used everywhere right even if this uh rectangle class will not be uh derived from the shape class even then also we will use public members from shape class but in order to reuse this height and width uh we need to Define these members as pro pro protected uh because we are in inheriting from this and we want to reuse this height and width right so this is how you uh use protected members protected members are only available in the derived class and not in any other class and public members are available in any class even though it's not uh inheriting any class and private members cannot be used outside your class because they are private right so this is the difference between public protected and private access modifiers and this is how you can use um uh this inheritance now how you come to know that you uh can use inheritance in your C++ program so C uh inheritance always have the relation of is a relation so I will write it in double quote is our relation okay and what is this is a relation if you can uh uh find this relation for example triang rectangle is a polygon right square is a polygon triangle is a polygon then you can use inheritance right I will give you an another example for example we have the Base Class called animal and we have derived class dog cat for example so dog is a is an an animal right cat is an animal so in this case also we can use inheritance where our animal class will be uh Base Class which can be reused in place of shape and dog and cat can be used as der class which can inherit from animal class so I hope you have understood the concept of inheritance and I hope you have enjoyed this video please RIT comment and subscribe and bye for now