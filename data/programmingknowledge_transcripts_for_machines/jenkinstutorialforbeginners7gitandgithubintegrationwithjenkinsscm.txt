hey guys welcome to the next video on Jenkins to troll for beginners in this video we will see how we can do the Jenkins integration with git and github so let's get started I'm going to minimize the browser first of all and if you are following this video series in the last videos we have created this Java samples project and inside this Java samples project we have a HelloWorld dot Java file and this is the output of that file now let's say we want to commit this project to get and then we want to push the changes to the github repository first of all I'm going to show you how you can do it and then we will see how we can create a Jenkins job out of it now if you are new to get and github in the last video I have shown you how you can install git and configure github on your open to operating system so just watch the last video of this series and you will be good to go so for committing my file on git let me open the terminal first of all so I'm going to just press ctrl alt T to open the terminal and first of all I will just CD to my Java samples directory and in order to initialize a git project in this directory I can just give this command get in it and then press enter and this directory will be added to the gate now in order to see the status of all the file I can just give this command get status and then press enter and you will see this message which says untracked file because we haven't added and committed these files to get so let's do that so to add these files to get we just need to write gate add and the file names one by one hello world dot class space HelloWorld dot Java and this will add both these files to the gate and let's to get status first once again and now you will see both the files and the message is changes to be committed so let's commit these files so to commit on gate you just need to give this command gate commit m to give the message and here you can give any message which you want to provide for your commit so for example first Java commit let's say or any other message which you like to give to your commit and once again we can commit these files one by one so just give the first file name and then space and then give the second file name and then press Enter which is going to commit these files to the gate now let's check the status once again so get status and you can see nothing to commit working tree clean so now we have committed these files to get but in order to push them to get hub we need to create a repository on github so I'm going to go to the browser and I'm going to go to github.com and log in with my credentials there and here I will just click on start a project let's say I just want to give the name Java hello world and then you can give the description here which is optional but for now I'm going to leave everything as default and I'm going to just press on create repository which is going to create a blank repository for me now in here you will see our two health messages one is to create a new repository on the command line and other is to push an existing repository from the command line so we have already created our gate repository so we will push this repository using command line so we will choose the second option which is this one and for that we need these command so I'm going to just copy the first command which is going to just add the remote origin to my project so this is my project and I have already committed these two files to my gate and to add it to my remote origin I just need to give this command git remote add origin and the URL of your git repository which is this one or simply you can copy this command which will be enough so once you have copied and pasted this command just press ENTER so this command is successful now let's copy the second command in order to push our changes to the repository so I'm going to just copy the second command and go to the terminal just right click paste and then press Enter and this is going to push our changes to the github first of all we need to give our github credentials here so first of all the username and then press Enter and second is the password and then press enter and now your files will be pushed to your repository so once you have done that I'm going to just go to this repository which I have created and I will see these two files which I have committed to the gate in this folder which I am working on so once you have created your repository on github you can go to Jenkins and let's create a new project here and here I'm going to just give the same name which my repository has which is Java HelloWorld and then I'm going to choose the Freestyle project and I'm going to click OK and in the description I will just say Java HelloWorld example and rest everything we will leave as default and now click on source code management and because we are working with gate so now we will click on the get option and here you can give your git repository URL so to get the git repository URL you can just go to your repository and click on this green button which says clone or download and then just copy this URL from here and then paste this URL here which is repository URL and now we will scroll down a little and here it says branches to the build so by default you can see there is only one branch in our github repository which is master branch so we will leave this as default but if you want to have multiple branches in your github and then you want to clone for example a development branch or any other branch you just need to give the branch name of your repository here which you want to clone okay so right now we only have the master branch so we will leave this as default and next option is repository browser so we will also leave it as default and now we will go to the build triggers and for now I will leave everything as default but we will see how we can choose this option which says pole SCM or other get option in a moment but first of all I want to show the simple way of just cloning and building your Jenkins job so just leave everything as default in your build triggers and then build in environment also I'm going to leave everything as default now in the build option we will choose execute shell here and here we will give the commands to compile our HelloWorld dot Java program so we will just say Java C HelloWorld dot Java which is or Java file which is this one so we want to compile this one and then we want to just run this file so for running we will just use Java HelloWorld and by now I think you already know what these commands are doing and let's go to the build environment once again so here in the build environment you will see few options so first option is delete workspace before build start and this is important for us so I'm going to show you what this is in a moment but first let me add save this job first of all and once your job is created let's go to the home page and in here let's build this job so I'm going to just click on this arrow button and I'm going to just say built now and now the build of this job will start we are going to just go inside this Java HelloWorld and you can see here our build is successful so I'm going to go inside this pill and I'm going to go to the console output and here you will see more details so first of all you will see the location where your github repository is cloned and this is the location where your great hub repository is cloned right and you can see in the next command it has cloned our github repository and after the cloning these two command has been executed so first was the Java C HelloWorld dot Java which is used to compile our hello world program and then Java space HelloWorld which have resulted in this output which is hello world and our job is finished with success so this is how you can clone your repository and you can just build your job using github repository now let's go to this location which is the default Jenkins location where your repository has been cloned ok so I'm going to just just copy this path from here and I'm going to go to the terminal and open the next terminal and I'm going to just give CD and whatever part you have copied and I'm going to just press ENTER here and I'm going to do LS here and you can see both of your file are here so hello world our class is there and HelloWorld dot Java is there now let's see if some more configuration options for our Jenkins jobs so I'm going to go to my Jenkins job and I'm going to go to the configuration now and once again in the configuration I'm going to go to the build environment and I'm going to choose this option which says delete workspace before build start so this is going to delete this workspace before our bill start so this is the workspace of Jenkins and if you choose this option this is going to delete the workspace before this Jenkins job starts right so I'm going to save the job and build it once again and hopefully this will also be successful and I'm going to go to my job and then see the console output and you can see building in workspace once again and then first of all it has deleted our fork space and once again cloned our repository okay so this is the extra step when you choose the delete workspace option now let's see some more configuration options so I'm going to go to the configuration of my Jenkins job and this time I'm going to go to my build triggers and in the build triggers I'm going to choose this option which says pull SCM and this option works similar to the build periodically option which works on the Kron mechanism so if you give five Asterix here this is going to pull every minute to your repository for any changes and if you have done any changes to your github repository this is going to detect your changes and if there is any change then it's going to build your job once again so let's save this job so to trigger this job now what we need to do is we need to do some changes to our github using git so in this project what I'm going to do is in my Java samples project where I have committed my Java HelloWorld files using git I'm going to do LS once again and you can see there is no read me into my repository so I'm going to add a readme file into my retrieve a positi so to do that I'm going to use the touch commands so just write touch read me dot M D which is the readme file name and then press ENTER and do LS and you can see this readme dot MD is created and to edit this I'm going to just write G edit G edit is the editor you can choose any editor you want and then the file name which is readme dot MD and once this editor is open I will just copy and paste some readme content into this readme dot MD file and now I'm going to just give the gate status command so just give the state status and you can see this there is one file which is untracked so we are going to add this to the gate first of all so get add and the file name once again and then I'm going to commit this file once again do the gate status and then let's get commit so get commit minus M and in the message you can just write read me added and then the file which you want to commit which is readme dontoh MD and then press enter and now we just need to push our changes to github and for that we will use the gate Porsche you origin/master command and then press enter and this will push our changes to github and once again give the github credentials and the password and then press enter and our changes are pushed to github so you can see here that this readme file is there and all the content of readme file is visible now and on the Jenkins job when i refresh this you will see this third job is triggered and you can see it's working so you can just click on the third job and I will go to the console output and you can see it's just say started by SCM change which means it is started by the change in our repository which is pulled every minute and once this change is detected then it's going to start the cloning of your git repository and your Jenkins job will be billed after that so this was the option to pull your a github repository every one minute and if the changes are detected then it's going to trigger the build and your Jenkins job will be executed so this is how you can integrate git and github with Jenkins I hope you enjoyed this video please rate comment subscribe and bye for now