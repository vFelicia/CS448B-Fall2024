hey guys welcome to the next video on open CV tutorial for beginners using Python in this video we will talk about an object tracking method which is called mean shift so first of all what is object tracking so in simple words object tracking is the process of locating a moving object over time using a camera and what is me shift the idea behind mean shift is really simple consider you have a set of points it can be a pixel density like histogram back projection and you are given a window which is a very small window which can be a circle or rectangle or a square and you have to move that window to a area of maximum pixel density or maximum number of points so in the image you can see this illustration very easily so essentially the working of mean shift algorithm can be summarized in following points so in the first step we pass the initial location of our target object and the histogram back projected image to a mean shift function and then in the second step as the object moves the histogram back projected image also changes and in the third step the mean shift function moves the window to the new location with the maximum probability density so we will see all these steps with the help of an example so here I have the simple code where I'm loading video which is called slow traffic small dot mp4 and I'm just iterating over each and every frame of that video so this code till now you already know how it works so I'm going to just run this code and let's say I just want to track this window of the white car okay so let me just run this video once again so I want to try this window of the white car or window in general of each and every car let's say okay so how can I track this window using mean shift algorithm let's see so as I said the first step is the passing of the initial location of our target so this can be you can say a disadvantage of mean shift that you have to provide the initial location of your target in our case that target is the car window so what I have done is I have just calculated the initial position of the white car window and that we are going to see in the next step so first of all we are going to take the first frame of our video so the first frame of our video can be retrieved by this course so ret comma frame is equal to cap we have this cap function and we will read the first frame using the read method and this is going to give you the first frame of the video so this is our first frame now once we have our first frame we are going to define the initial location of the car window in our case we want to track first of all the white car window right so I'm going to define four variables first two are X comma Y and the next two are width and height so and because I have already calculated the initial position of the window I'm going to hardcode this position of the window so 300 200 comma 100 comma 50 okay so this is the hardcoded value which I have already calculated which is the initial position of the car window now we can say that this XY and width and height is our track window so we are going to you define a variable called track underscore window let's say and then we are going to just pass all these four variables X comma Y comma width comma height okay so let's pass all these four variables and in the next step we are going to define our region of interest so let's define this region of interest with the variable called ROI and we already have our first frame so we are going to take our first frame and then we are going to pass that window so y y plus height comma X X plus width so this is our window or the position of the window so as I said in the first step we will pass the initial location of our target object and the histogram back projected image of the mean shift function so histogram back projection in simple words creates an image of the same size but of a single channel as of our input image in our case this will be our frame where each pixel corresponds to the probability of that pixel belonging to our object that is the output image will have our object of interest or region of a in more white color compared to the remaining part of that image so this is back projections so for calculating the histogram back projection there are some steps which are involved so we are going to follow all these steps to calculate the histogram back projection but first of all let's just see the region of interest because we already have our region of interest so I'm going to just write C V dot I am sure and our region of interests so let's say how our region of interest looks like so I have this video and this image which is our region of interest right so this is the initial position I'm going to pass to our mean shift function right so now in the next step what we are going to do is we are going to define the histogram back projection so you already have our ROI so in the next step we are going to just convert this ROI to the HSV color space so I'm going to just write HSV underscore ry HSB we have already learned in the previous video so I'm going not going to go into the details of HSV color space I'm going to just try it CV dot CB the color which is going to convert this image into the HSV color space so our input image will be the ROI and the next parameter will be CV dot color underscore BG are two HSV okay so we are converting this image to the HSV color space and then we are going to calculate the mask so let's say we define a variable called mask and for the mask we are going to just write CV dot in range so this also we have learnt in the HSB tutorial so if you want to learn more about all these functions you can just go to that video so first parameter we are going to pass is our HSV image and the second parameter and the third parameter will be the lower and the upper bound so the lower limit will be 0 dot comma sixty dot comma 32 dot okay so let's pass this and the upper limit so let's define the upper limit also so the third parameter will be the upper limit in the form of the topple but we need to use the numpy for that right so an umpire dot array and inside that we just passed this couple value which will be 180 dot 255 dot 255 okay so 180 dot comma 255 dot comma 255 so why we use the in range function because for the histogram only hue is considered from HSV right so the first channel right and also to avoid the false value due to low light or low light value we use the in range function okay so these low light values are discarded using the inner range function and then in the next step we are going to calculate our histogram a value so I'm going to define this variable called ROI hist this also we have learned in the previous video so I'm not going to go into the details so I'm going to just use the function called calc hist which takes the first parameter which will be the image so I'm going to just pass our HSV ROI so just pass HSB underscore ROI the second value here will be the channels so we are just using only hue Channel the first channel in the HSP space so we are going to just write 0 here ask now the next parameter will be the masks so we have already calculated the mass so we are going to just pass this mask parameter here the next parameter will be the hist size so as we have already learned in the previous videos that this his size starts from 0 to 179 so essentially 180 News and then we just need to pass the ranges so as I said start from 0 to 1 now in the next step we are going to just normalize these values using the normalize function so this normalized function takes few values first is the source so the source is our ROI hist variable the next value is the destination so let's say we have the same destination we just want to override this ROI hist value the next parameter here will be the value of alpha so alpha will start from 0 and the value of beta will be 255 so we want to normalize these values between 0 to 255 okay and then the next value will be the norm type so the norm type we are going to take is CV dot norm min max okay so we are going to just take this one norm min max so all these steps which we have written here is going to give us the histogram back projected image now once we have this histogram back projected image we are going to use this histogram back projected image which is also going to change with the moving object so now in the next step we are going to go inside our while loop and read each and every frame one by one and first of all what we are going to do is we are going to calculate the HSV value of the frame as we have done with the first frame also right so we are going to just take the frame and then calculate the HSV ROI value let's say this time we are going to name it as HSB and we are going to pass frame as the source instead of this I value now in the next step we are going to use a function called calculate back project so let's define the variable called nest for destination and then see we dot calc back project which is the function for calculating the back projection and this function takes few argument first is the number of images so we only have our HSB image so we are going to pass in the form of the list the second argument will be the channels so as I said we just want to use the hue values here so only one channel so we are going to just write 0 so because channel starts from 0 1 2 so that's why I have written 0 here the third parameter is the hist value so in this case or hist value is the ROI hist which we have calculated the next parameter is the ranges so we will start from 0 to 180 as we are talking about the HSV color space and the next value will be the scale let's say scale for now we take 1 as the scale so this is going to give you the back projected image and then in the next step we are going to apply the mean shift to get the new location so I'm going to just write ret comma track window so I'm going to just say track window which is this variable which we have already defined and then we are going to just use CV dot mean shift which is going to take few arguments first is the image which is the destination image which we got from the back project function calc back project and next argument will be our track image which is that track window so we have to define this term criteria so I'm going to just write term C RIT for criteria and then we have to define this outside this while loop so I'm going to go here and we are going to set up the termination criteria either ten iterations or move by at least one point okay so we are going to define that criteria so here in the curly brackets we are going to just say CV dot term criteria ESP or CV dot term criteria count so because we want to either provide the termination criteria for either ten iteration so we just give ten or we want to terminate by moving at least one point this is the criteria for the mean shift and we are providing these to try criteria so once we have or a track window for the car we can draw a rectangle with the help of this track window and this will be visible on our video so we are going to draw that window you're going to just say X comma Y comma W comma H for X Y width and height and this will be our track window and then we are going to just draw a rectangle so I'm going to just say we have the final image and then we are going to just write C V dot rectangle which is going to take the frame and then the point for the first point of the rectangle and the second point of the rectangle which are the coordinates of that point so the first point coordinate we'll be X comma Y and the second point coordinate will be X plus width comma y plus height okay and then the next value will be the color let's say we want to use 255 here and the thickness or thickness we want to take 3 here for example now we can just show this final image using imshow method so till now we were just showing our original frame so we can just say let's say we want to show the final image here also if you want to see the back projected image you can just use this destination so we can print this destination image also and see how does this back projected image looks like so let's run this code and you can see this car window is dragged right so as the car moves this window also moves once this car goes out of the scope it tracks the other window so this is how the mean shift algorithm works in OpenCV now as I said this mean shift has few disadvantages or limitations the first limitation is the size of the target window does not change so as we have seen once this car is coming near to us the size of this window is not changing it remains always same so this is one problem the second problem is we have to give the initial position of our region of interest for example if initial position of the region of interest is not known then it will be really hard to apply mean shift method so there are these two mean limitations of this mean shift Algar and we are going to try to solve these limitations in the next video when we learn which stands for continuously adoptive mean shift so this we are going to see in the next video so stay tuned and I'm going to see you in the next video