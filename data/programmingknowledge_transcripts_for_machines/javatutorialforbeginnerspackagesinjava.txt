hello and welcome back to the new word of the Java tutorial Series so today we will be covering packages in Java okay so Java package is a group of similar types of classes and interfaces and sub packages okay so package in Java can be categorized in two form a builtin packages and user defined packages so we'll be covering both of this you know in this video and so the builtin builtin packages look like this here you can see one example of this pictorial example of this building packages one Java main package main package Java is there and below that Lang utl and awt and there are a number of packages which are defined by the Java language itself these are the sub packages of the Java and inside this uh sub packages different classes are written system.class string.class I release dot classmap.class these are some classes that we have and here you can see I will open any of any of this uh example that we have covered in our upcoming uh sorry of not upcoming previous videos and here you can see we have written import java.util.scanner so this is the Java is the main package utilize the sub package and scanner is the class which is written inside this package if you hover over this you can see uh implementation of implementation part also of this scanner class okay uh so these are some job packages which are defined uh predefined in Java and we will see user defined packages also how you how you can create an uh call those okay so first of all if you are using an IDE uh then this example will not help will helpful to you those people who doesn't uh using any IDE uh please look at this example simple example of the Java package uh package name and package is a keyword which is used to define a package and my pack is the package name and inside this package I have click created one class name is simple and by in the inside this class one main method is there and inside main method welcome to package is the string that is printed on the console okay so to compile this Java package Java C minus t the directory or the folder where you are currently storing these files the path should be there in in place of this and Java file name a Java file name is the name we have which is you have given to this file so in this in my case I've written is at simple.java so I should write Java C minus t dot represent the root directory and simple.java okay whenever I run this command the minus D switches the specified destination where to put the generated class file so and you can use this directory name such as slash home in case of the Linux and D dot slash ABC in case of the windows Etc and if you want to keep this package within the same direction actually in that case you can use dot okay now how to access the package from the another package okay still now you have understood what is package how to create a package how to call the classes of the package now how to access the package from the another package okay so there are mainly three three ways you can access it by simply writing writing the import statement as you can see here over here import Java util.scanner and second one is import package.class Name by specifying the particular class in uh consider a scenario where in one package holds some n number of the classes and you want only one one class to be get called in that case you can write this statement uh this is the example of the second statement where Java is the main uh main package I utilize the sub package and from the util sub package we are calling simply one scanner class if you want to call all those uh classes which are written inside the util sub package you will simply write import Java Dot util Dot star star represents all all those classes which are written inside the util sub package import them all okay and third one is fully qualified name we will see each of them by looking one example okay now let me open my IDE so to create one package if you are using an IDE then it's very simple you just click on the source folder right click on it new and instead of creating Java class you just click on the package and you can name your package whatever you want I will name it as ABC you can write anything you want and uh so here you can see ABC package is created and inside this package if I want to write one class okay so I will right click on it new Java class and I will write uh class okay uh let's suppose a is my class name so a DOT Java is created under the package ABC here you can see okay and one more line is added by the IntelliJ IDEA package EBC that defines this class is written inside the package ABC and let me increase my font size okay so inside this a class uh I will declare one method okay public void message and inside this I will simply print hello okay and I will save this okay now uh in if I go outside of this package and I will create one new Java class name as B and inside this let me increase the font size and over here we are trying to see the import package dot star okay so I will same similarly like import package what is the package name EDC Dot stack okay we have it okay and now inside my public Class B I will write my main method and inside the main method I will create the object of the Class A which is written inside this package okay I will write a o b j is equals to new a and I will try to call the method which is written inside the obj uh that is this one hello uh message method okay and now if I try to run this hello should get minted on the console okay yes here you can see Hello is getting printed on the console y so because we are in imported the class A from the package ABC okay and now one more thing is there import package name dot class name okay so here to explain this let me create one more class okay okay here however okay let me create one more class public class B okay Class B if public should be declared in the file name B dot Java okay okay in this class is already declared let me write it as FBA okay what is ba should be declared in the B dot Java wait wait wait wait wait let me comment this out and this one also okay and okay okay wait you know what let me take this example itself and I will try to explain this also okay and now here you can see uh import package name dot class name okay if you want to call that specific class of that package then you should instead of writing star you should write a okay so package name is ABC the class is public Class A and inside this we have a written one method void message and it's printing hello on the console and it to import that package we have written import package name dot class name and inside the public Class B and inside the main method I will create the object of that class and I will call that message method okay again hello should be printed yes hello is waiting printed on the console and now uh we'll see the third method fully qualified name okay how we can call okay so if you don't want to write this pack okay with this line and you you still want to use those classes which are written inside the package then you can simply write the package name what is the package name abc abc dot a and here also you have to write abc dot a and now if I try to run this again hello is getting printed on the console because fully qualified names defines as uh one class here Class A is declared inside the package and one method is there MSG and which is printing hello on the console and we are trying to access that class by using the package name dot the class name and by creating the object and again if if you want to call that method object name dot method name is the simple we can call this method okay and hello is printed on the console so this is the pretty much either we have behind the package is in Java okay so in our upcoming videos we will see access modifiers in Java so thank you for watching this video