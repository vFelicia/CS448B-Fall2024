hello guys welcome to the next video on node Ro for beginners in the last video we have seen how we can send Json data to the browser from nodejs right and this was the code I have written in the last video now in this video we will talk something about routing and we will talk uh how we can uh you know route our data and C different uh responses for different uh requests right so let's get started what I'm going to do is um I have taken the last uh video code here and I have added one more line here which is logging the requested URL okay just uh this req. URL I have added this code uh extra and everything is same from the last uh video example okay and now what I want to do here is I want to first of all run this uh app and I want to just open my browser and refresh my browser so the base URL here is forward slash right this is the URL now for example I want to request uh something like API for in my URL I want to add uh for/ API and I want to to request some data when I request or I extend my URL with this for/ API and when I do this you can see uh the request is uh Gone with the different URL but the response is same right and for example I want to add about page and I will press enter it gives always the same response whatever the requested URL is you can see I have requested the for/ API uh URL or uh for/ about URL or for example home let's say home the you know uh response is always the same so how we can route these uh different URLs according to the request we want to send the response so let's see how we can do it so I'm going to go to the code once again here and first of all I will use this uh URL to pass uh which kind of uh you know request is coming to us and then on the basis of this request we can cater the result right so you can see I have already made uh uh index.html in the previous videos right so this is just a sample HTML which I have have uh created in the previous video so for example I would say this is my homepage okay so I will just add home page and when somebody uh you know request either the URL forward slome or just the forward slash then I want to cater this uh index.html or homepage there so what I'm going to do here is uh first of all Let's uh just take the space here let's make the space here and first of all we will add the code to pass the URL so just write request which is the first argument here request point or dot URL which is going to give us the URL and then give triple equals uh remember I'm using triple equals because it's always a good practice to use triple equals instead of double equals so try always using the triple equals right and then I want to match it with for example forward slash home or if it's only a forward slash okay so I'm just going to copy this and paste it here and if it's a forward slash then what I want to do here is I want to give the text response so I will just copy this line of code but this is HTML right so instead of this I can just say text/html right now in the next line we are going to create the stream of our HTML page and then we want will send it this will be HTML here so fs. create read stream and and we want to uh create the restream from our index.html so we can just directly give index.html which is already present right and we will pipe it to the response so we just write to pipe and then just write response or Rees okay so this is going to just send the index.html when ever this home is requested or the base URL is requested or else we can just write if or you can better write else if right so just write else if and if the request URL is for example the Json object so I will just say triple equals uh a API so this is just kind of a API and uh whenever this API is requested then we want to uh give this uh Json object so I will just create a if condition and inside my if condition I want to send all this uh Json data right something like this okay so what will happen now I'm going to just forward format it just right click on your Visual Studio code and just click format it's going to format your code right and let's uh rerun our code once again so close the code and rerun it once again and now when I do for example just a base URL and press enter it's going to show us the homepage which is the index.html it's sending from the server or whenever we write here for/ home we will see the same response the homepage but whenever we write here API for example API then it gives us the the Json response right and in the same way we can uh you know give different response on different requests so let's add one more uh response for example so for example I want to have a about page so I'm going to create about. HTML so I will just say about do HTML and in this about. HTML I'm just going to copy the code from index.html and I will just say here about page okay so this is my about page and in my app.js I can uh just copy this code from here I would just say else and my code the code which I have copied which is uh this code and instead of uh home home I will just add about here and I will just remove this right and instead of index.html I will just uh replace it by about. HTML right and let's run the code again and let's see if it works or not so I'm going to open the browser and this time I will just ask for about and it gives us the about page right or home then it gives us the homepage right now for example let's say I'm just uh requesting some random URL once again is going to uh you know request it but it's not never get going to get any response from the server because server cannot resolve this URL right now in this case uh whenever server cannot resolve the URL I ideally we want to send the response 404 which is not found right so let's add this response so in the last condition I will just add a else condition which is the last condition for us and let's create a 404 HTML page so I'm going to right click and I will just this is my 44. HTML page right and once again I'm going to just copy the HTML content from uh index.html or about. HTML and paste it here and I will just write here 404 and I will just write not found right and now I will just add the condition here so in the else condition I'll just copy these two lines once again and here I will just write 44. HTML and instead of giving 200 response this response I will replace by 404 right which is uh not found status code and let's run the code again and in the browser let's try this random URL again and now it gives the 404 response to us okay so home and we have uh about and we have our API which gives us the Json response or any other random URL will give the 44 response right so in this way you can uh you know route your request and give the response according to the uh you know URL requested now there are much better ways of uh routing your requests uh using some extra modules or third party modules and this is we are going to see whenever we will learn how to use npm modules right so there are uh you know thousands and thousands of thirdparty module available to perform different functionalities uh so we can use these modules using npm and this is what we are going to uh see in the future how we can use these modules so all these things can be done in a much easier and professional way so I hope you have enjoyed this video please Rite comment subscribe and bye for now