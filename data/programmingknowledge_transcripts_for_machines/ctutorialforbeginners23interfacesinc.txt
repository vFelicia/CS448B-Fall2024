hello guys in this video I'm going to show you what is interface and how to use interface in C so let's see what is interface an interface contains definitions for a group of related functionalities that a class or a struct can Implement so in a way using interfaces we can invoke functions from different classes through the same inter interface reference whereas using virtual function we can invoke functions from different classes in the same interface hierarchy through the same reference so let's see how we can Define interface in cop and how we can use interfaces in cop so for the definition of interface how to define interface interface you can Define with a keyword interface and then the name of the interface I just I always like to uh declare the definition of the interface or name of the interface by starting with the capital I so that I know that it's an interface and for example I want to Define an interface for meters okay and then I just close my definition from here using these curly braces okay and so let's see what are the properties of intern interface this is how you can Define interface but how uh we can use members in interface let's see so the first thing is for example I Define int a in interface will it work let's compile our program and let's see if it's possible or not so I will just uh run this or start debugging this and I will see an error there is error and I will say no and it says interface cannot have fields that means you cannot have Fields like in a or bu something bu X or double double so you cannot have fields in interface you can only have methods in interface so let's define a method in interface so for example I want to define a method called Public public void print so I have defined this method in interface this should be public and then also when I compile this let's see what happens I'll run this and I will say no and this time also I get an error so I Define a method and then also it uh gives me an error and what it says the modify public is not valid for this item that means you cannot initialize the member methods or members of a interface with a access modifier so you just need to declare the method in the interface like this okay and now when you compile this or now when you run it it will work fine okay now for example you want to give any definition to your method in inside interface can we do this for example I'm I want to print something console dot right line and I want to print something here so I will just write print is it valid Let's see we run the program and it says error and let what's the error interface member cannot have definition so you can only Define the Prototype of a method inside interface and you cannot define the definition of the method inside interface so interface just contains the prototyping of method or prototypes of method okay now how we can use these interface so for example I will define a class class meter and so this class I Define and I will close these curly Braes and how we can use this print method or how we can give the definition of the print method we can just inherit from interface so this IM meter or this meter will inherit from this interface like this so how to define an inheritance of this interface you can just write like this colon and then IM meter okay and then you can just give the definition of of this method and now let's see I have the same prototype and the definition and here I want to give some console line right line will it be valid let's see so for example something I want to write here okay and when I run the program it still shows me error why because it's saying that this method does not have interface member definition so I have told you that interface definition or interface prototyping does not have access specifier but you when you provide the definition to the interface method you need to specify the specifier public specifier or member specifier and by default all interface members are public method okay so just remember this by default all interface members are public okay so just write public and when I run this it'll run fine okay because I'm not using this class in my main so it will not print anything but it doesn't give me any errors so that means I'm on the right path so this is how you can Define the Prototype of interface and how you can in har it from the interface and now you can just Define for example meter object meter m t is equal to new meter and I can use this object to print or to use the print method okay so you see I have access to this print method and I can just print like this run the program and prints whatever I want to print okay so this is how you can Define interfaces let's see if we have uh two interfaces at a time interface I meter one and IM meter 2 for example can I inherit from both of them in the same class let's see if we can do it meter interface one meter 1 comma meter 2 so yes I can inherit from multiple interfaces in a same class okay now for example this meter one has method print one and this meter 2 has method print two so I can just Define two method inside my class print one and print uh two and I can say this is print meter 1 and the other is print meter 2 okay and so I can do multiple inheritance or I can inherit from multiple interfaces in a in my derived class and I can use this method like this so in the using the object I can print one I can use print one and even print two also and when I run the program both will run fine print meter one print meter 2 so that means I can inherit from multiple interfaces but in the last video I think or in the earlier videos I have shown you you cannot inherit from multiple base classes in your deriv class so if I say that you you have some one more class class meter some some class okay can you inherit from this and this in your example one let's see meter comma second class okay it will not uh be valid okay so you cannot inherit from multiple base classes or multiple classes but you can inherit from multiple interfaces okay so just let remember this fact now the question is can we Define the object of an interface so for example I will delete this class from here which I have used for the demonstration so for example I want to create the object of this meter one interface can I do this let's see IM meter 1 is equal to new ID meter 1 okay so when I do this as soon as I do this I get an error and it so shows an error cannot create an instance of abstract class or interface okay so it's logical also because your interface only contains definition but the implementation when you create an object uh and when you want to use this print one you cannot find the implementation or definition of the this print one only by using this IM meter right but what you can do is you can create a reference to interface which points to the object of your derived class so you can do it like this I meter one and what whatever you want to give the name is equal to new meter this is a class which is inheriting from meter 1 and here you have the definition of the member method of this meter one also okay so you can inher you can create an object which can point to the uh you can create an reference which points to the object of your derived class and you can use the method like this also so met dot you can see print one you can easily find this print one and you can print it okay but you cannot access print two here right because print two is a part of meter imer 2 interface and it's not a part of this IM meter one okay so only print one is available for the use right and you can do the same for the same for the meter to object also or meter to reference also you can use meter 2 i t is equal to new meter but this method will be print two because meter 2 only only have the prototype for print two and it will work fine here okay now can we Define same prototype in two different interfaces for example I have IM meter 1 IM meter 2 I want to have only print method in meter 1 and meter 2 also in both the method okay so this method and this method are same in both the interfaces and this meter is inheriting from those uh two interfaces and I delete this um method definition also so I have meter one which has the member method print I also have interface meter 2 which I have the uh member method print to same method and I inherit from those those two interfaces in my meter class and I provide the definition of uh this print so can I do something like this so I can Define interface meter 1 I'm mat one and I will Define interface for meter 2 m 2 which points to the object of this um meter class and can we use this print in both cases mat 1. print and here met 2 do print okay and when you do it it's completely valid when you run the program you will see print meter 1 and print meter 1 two times right so you can have the same method name in two interfaces and you can Define you can give a same or you can Define one definition for both the method in your derived class and you can use it like this also so this is how you can uh Define interfaces and this is some of the rules how to use interfaces in C++ so let's uh let's do some revision how to define interfaces inter faes cannot contain Fields I have shown you it cannot contain Fields like int a or double A or string or something it only have methods okay then the second rule is interface member cannot have definition okay so you cannot give the definition of the method inside interface okay by default all interface members are public so you don't need to explicitly Define that it's a public method right you see here we haven't defined here public it's just void print but when you define the implementation of this method from the interface you need to give the public specifier or public modifier here access modifier I beg your pardon so you need whenever you give the definition of the member of the interface you need to give access specifier here right and the last is a class can inherit from multiple interfaces you you can see here we can inherit from multiple interfaces so I hope you have uh enjoyed this video please rate comment and subscribe and bye for now