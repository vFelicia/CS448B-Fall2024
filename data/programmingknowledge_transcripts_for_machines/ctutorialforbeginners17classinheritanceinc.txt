hello guys in this video I'm going to teach you about class inheritance in cop cop is an objectoriented programming language and inheritance is one of the most important Concept in object oriented programming inheritance allows us to define a class in terms of other class which makes it easier to create and maintain our application so this allows us to reuse our code and that makes our code uh error free and fast to implement so let me give you an example first so we have these three squares as you can see here so suppose you want to make the classes of polygon so polygon can be a rectangle or a square or a triangle and all are we can say all are polygons right and some of the properties in rectangle square and triangle are same for example their height and their width are same right so rectangle also has width and height the Square also has width and height and this triangle also have width and he and suppose you want to calculate the area of the rectangle square and triangle using rectangle class Square class and triangle class then you need to define the length and width of all these classes but if you think that that all these length and width are same similar or same in all these polygons as we can say so we can define a base class polygon for example which will contain our two variables which are length and width or height or and width right and we can use this height and width for rectangle also for square also and for triangle class also okay so we are going to define a polygon class which we say or which uh we can say it's a base class and we are going to Define for example rectangle class and triangle class which we will call them derived class so this is a base class or parent class and these are the derived class or the child class which takes some attributes from your base class which is a polygon class right now this kind of implement on which uh this inheritance is based upon is called or uh is a implementation so rectangle is a polygon right square is a polygon and triangle is a polygon so whenever you use this uh concept try to relate this is a concept whatever is a base class then you can apply them in inheritance I will give you an other example for example we have the Base Class animal right and we can we can Define derived class like dog dog is a animal right cat is a animal so cat can be derived class or any other animal for example elephant is a animal okay so animal can be your base class and the dog cat and elephant can be your derived class now enough of this concept let's try to write some code okay so we will go to our um vual Studio here and we will try to make these classes so first of all let me Define a polygon class which will be our Base Class I'll write class polygon and then I will give these two early braces and inside this class we will Define two variable which are the member variable of these this polygon class so I will write public and then this can be integer Valu so I will say public int width comma height okay so this is our Base Class and suppose it we want to um calculate the area of the class so we need to set the width and height first right so we will also Define uh Public public method which will be void set values for example set values and we will set the values of width and height so we will say int a comma int B is our parameters and in the implementation of these parameters we can say this dot withth is equal to a and in the similar we can say this dot height is equal to B right okay so this is the definition of our Base Class and this should be public okay now we can Define the derived class so how we can Divi define derived class from this BAS Base Class once again you will write class and let's define rectangle class rectangle and in these curly braces we will Define or first of all I almost forgot this so whenever you want to inherit polygon so this is a base class and this is a derived class so you need to give this colon here and then give the name of your base class which is our polygon so this kind of implementation whenever you write this colon and then give the name of the base class then your rectangle class which is a drive derived class knows that you are inheriting the values or the variables of this Base Class to the rectangle class okay uh and now here we can create a method so we can write public method called for example int area okay so we want to calculate the area of uh these polygons rectangle and triangle right so we can say here area can be what can be area we can return return for rectangle the area is the width and the height the multiplication of both right so you can say width multiplied by height okay so if you have uh noticed that I haven't defined width and height in this rectangle but whenever you provide this Base Class as a uh inheritance class for example to the derived class it inherits all the values or all the members of the base class so rectangle also have width and height which is inherited from The Base Class okay and I will once again copy this class and I will paste it here and this time I will Define a triangle class triangle okay and this also has uh access to the polygon members which are width height and set values Okay so so the area of the triangle can be half of the height and the width okay so I will divide it by two right so what you have done you have defined a base class in which you have the width and height as a public variable and we have defined set values method in our Base Class which uh sets the value of width and Heights okay now we have defined a deriv class which is rectangle and we for inheriting for inheriting the values from the base class we just need to give colon and the name of the Base Class here so now your class rectangle knows that I'm inheriting from the polygon class and I have the access to width height and set Value method in my class okay similarly we have done the same for this triangle now to access these classes or to define the instance of rectangle and the triangle class we can say rectangle rect is equal to new rectangle okay so we have created the object in a similar way we will create the object on triangle triangle t r i g is equal to new triangle okay so we have created the instance of triangle class and the rectangle class or object of both these both class now for example I use this rectangle object from here and whenever I press dot you see here I have the access to set values which is the method in the polygon class so because rectangle was inheriting the values from the polygon we have the access to the methods in polygon class so we can say set values and we can set two values for example 10 and second value is also for example 20 the same thing we can do for this trig or triangle object dot set values so this has also the access to set values and we can say this time also this is 30 and 20 for example okay so whenever you create this uh derived class and Base Class you have the the derived classes object always have the public member access from the base class right now to calculate the area I can say console. right line right line and in the console I can I can print the area of both classes so I I say uh rectangle area is equal to and in the placeholder I will pass the rectangle area which is rectangle which is our object rect dot area so we have the member function area in rectangle right here is our area okay and we will give the semicolon in the same way we can do this for triangle so I I can say triangle area and I will copy this triangle object and paste it here and because this area is returning integer this will this function will return an integer and will be printed here right now whenever I run my program you will be able to see the area of the triangle and rectangle see here rectangle area is 200 which is 10 into 20 right and the triangle area is 300 which is 3 30 into 20 which is 600 ided 2 okay so in this way you can Define base classes and derived classes and in this way you can implement the concept of uh The Inheritance and what are the uses of in inheritance it makes your code uh smaller because this width and this height and set value you have defined only at one places and you can Define multiple class rectangle triangle square and or any other polygon and you can use this width and height in each of the class using this uh inherit inheritance right so it makes your code smaller it makes your implementation faster and it will whenever your code is smaller it's easy to read and it will be more error free right and one more important thing is whenever you uh Define or declare the object or instance of your derived class your base class will be automatically initialized right so so once again whenever you define the object of a derived class your base class will be initialized automatically so to uh prove this concept or to uh understand this concept I can uh Define The Constructor for example public polygon Constructor okay which takes uh nothing and we can print something here so I will just copy this console. right line and paste it here and I can say here that we are in Base Class okay in a similar way for example I can Define The Constructor for this rectangle I will just write public rectangle and I can say once again I will console do right line and I I can say we are in derived class or derived rectangle class okay and for example I can comment this code to demonstrate my example so I will just comment this and here also okay so we have just declared our object rectangle right and when I run this program you see here whenever I created my object of my derived class it calls we are in base class so first it initialize this PO polygon class and then it shows we are in derived rectangle class so then it initializes your derived class so whenever you declare the object of derived class your base class will be automatically initialized okay the other important thing to note is a class which is a derived class can only inherit from one class so for example uh if you create some other class I will create some other class here for example like this like this and I will say this is my rectangle one for example and I want to inherit from rectangle one and polygon at the same time so for comma rectangle 1 this is not possible okay and this will give you an error right because you cannot inherit from two B based classes at the same time okay so when I try to run the program it gives me an error okay but you can have multiple inheritances so I have this uh rectangle one right and what I can do is I can inherit from rectangle class here okay so what this will do is let me copy and paste it below my rectangle class so what this is doing our rectangle class is inheriting from my polygon and my rectangle one is inheriting from my rectangle class so in indirectly it's inheriting also from the polygon so for example I will create an instance of rectangle one class rectangle re C1 is equal to new rectangle one and then whenever I use this rectangle one and see after dot when I use this dot here I have the exis to area which is a part or which is a member function in our rectangle class we have the access to set values which is a class in our polygon class right so this also we have the AIS we have the access to width and height which is in our polygon class right so indirectly we can inherit from the polygon like this okay so this is multiple inheritance so I think that's it for this video I hope you have understood the concept A basic concept of inheritance and I hope you have enjoyed this video please wait comment and subscribe and bye for now