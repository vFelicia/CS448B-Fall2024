hello guys welcome to the next video tutorial on Java programming for beginners in this video we'll see what are exess modifiers and how we can use access modifiers in Java so you may have seen the use of public whenever I Define some class or some method uh in a class and this public or private or this can be protected these are called access modifier and what access modifier mean is it basically allows you to you know access this method or whatever class in a package depending upon the keyword or access modifier we can access it inside the class or inside our package or inside whatever uh inside our project so how we can grant the access and what keyword means what we will see now okay so basically we have three kinds of access modifier one is called public other is called protected and third one is called private and if you don't give any access modifier for example I haven't given any exess modifier to this string name and integer age this will be visible or we can use these uh variable inside the package and inside the class so because my class which is this one and student class are in the same package I can use these inside here so let me delete these we don't need them anymore so my class and student class are in the same package see here in lesson one we have my class and student class right so if you provide no access modifier public private or protected they are visible in the class itself and the package so package inside the package we have this class also so we can Define uh an instance of the class for example student Stu is equal to new student right new student okay and whenever we want to access this St Dot and this name is available name and age both are available in this class also right because my class which which is this class and this class student class are in the same package okay so basically this is what we are doing here or we mean here okay and name should be some uh string so something like this right and when we compile the program we will not get any error right so whenever we give Public Access modifier before any variable for example I give public before my name and uh the age variable it's V visible everywhere in your class in your package in your subass sub classes we will see when we see uh how inheritance work in Java and basically if you define a variable as as public it's visible everywhere right but it's a good practice to uh you know not give or not give access to your variables to uh you know outside your package or even outside your class okay so the good practice is always declare your member variable as private or protected and the basic logic behind this is you don't want that your variable should be affected by any other user okay so you give indirect access to your variable using getter and Setter functions okay so whenever you add this private access modifier before your UH your variable name it's only accessible through your class itself so outside your class outside this student class you cannot access if this member variable is private right so now whenever I try to run the program I will get an error and the error will be I will go to the error and it says the field student name is not visible it's not visible because we have declared this name as a private member of the class and whenever we declare private member of a class it only is V visible inside the class and not in the package not in the subass not anywhere else okay so there is other keyword called protected which we will see when we uh learn about inheritance and other things but protected also restricts the visibility of your variable in the class itself package and subass okay so right now we are not uh going to discuss more about protected because uh this protected we will use whenever we are going to learn inheritance and polymorphism right so right now just remember this table or memorize this table whenever you declare your variable as public it's visible everywhere in your class package subass or anywhere else if you declare your variable as private it's only visible in your class and nowhere else okay N means no here and y means yes here okay and it's a good practice to make your variable private so that anybody else should not have has the direct access to your variable and now so we cannot access this name directly from here so how we can allow the user to you know set the name of the student it's easy by using Setter and getter function so go inside your class just click anywhere inside your class and then go to source and click generate getter and seter okay generate getter and seter and Java will automatically generate getter and Setter for you whatever you check you you know if you want to get want getter and Setter for name if you want get and Setter for age you can check both of these so I select all like this I can deselect all and for now I'm selecting all and click okay and it's created four methods for me one first one is get name which just Returns the value of name so indirectly we are accessing the value of name but not directly right and set name allows you to set the name but not directly but using the copy use right and in the same way we have defined the getter and Setter for the age and by the way if you are wondering what is uh this key word mean here so whenever you see this name and this name is similar and whenever you define any variable uh inside a function for example this name this name will be preferred so whenever you want to do something like this Java may get confused this name is uh this name itself or this name which you define in the class so this keyword this keywords tells Java that it's a member of the class which is this one so this indicates class itself so this means whatever class we are in okay so student. name which is this variable not this variable right so basically you need to use or you can use this of keyword here whenever you have two variable with the same name and you want to differentiate between them this dot whatever is the member of the class which is this one and the variable which doesn't have this is the local variables like so this the name here is the local variable this one and this name which uh is preceded by this is the member variable this one so this is what this means this means the class itself student. name indirectly you can say instead of this you can just to imagine it like student. name okay but this keyword is indicates the class itself and now if you want to set the name what you can do is instead of directly setting the name you can just write St do set name and then you can set name like this okay and whenever you want to get the name you can just do something like this instead of of a class dot get name okay so this will allow you the access to this variable name but indirectly okay so just remember this table if you can memorize public grants you access to everywhere private grants you access only in the class itself and it's always the better practice to make your variables private unless and until you have the strong reason to make them uh you know public and use getter and Setter to access these me member variables okay and the meaning of this is the class itself so if you add this keyword before any variable it means the member of the class and whenever you don't have this here then it means it's a local variable so you can avoid conflicts between two similar variable names okay so I hope you have understood the basic concept of access modifier and this keyword and I hope you have enjoyed this video please R comment and subscribe and bye for