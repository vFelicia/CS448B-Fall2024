so today we are going to work on uh like daytime in ruby so and i'm going to take you forward with some like little bit good concepts in day time because you might be working like get to work in back end on the rails part so you might like query on some date time part in your like um database and your like logic so it would help you how you can manipulate because when you keep the like a record of things so you usually manage with date and time so i'll tell you how you can achieve the same using like in ruby so let's start with our tutorial so the basic thing you need to first type you need to type require required is like is is it is like uh you will get to like learn new things from this so require is used to like get this is required so it is like an import statement required date so required date would help you to like manipulate the date the date date records in ruby so now you can create a variable my date okay so you can get create variable my date bar so basically this would stay store a date and you need to store date dot ours and now you can put like in a string you can put 10 december uh 2021 so this is a very futuristic date and now what you're going to do you can like carry out few operations on this such as put as my date back so then put s so okay first we will do this so let's run this and we can type clear oh sorry click clear statement and now this would clear our console now ruby date time dot rb so when you print this so you get an output 20 21 12 so basically so this is how it depends this gives the year format now this is the month and this is the day so 2021 20211210 so this is a good output on what you can do now you can do different things like s my date wire dot gear okay so basically now we can comment this so this would usually print out the year okay and in the same way you can approach for okay so i'll show you one by one so basically this would help you to have a clear approach so i do clear and ruby datetime.rb yes 2021 is like is this the like output of this so next you can do put as my date where dot month so basically this would either give you the month now this is 12 okay and now what you can do you can simply comment this out or you can do put as my date where dot month day so month day is given by m day okay and now you can run this so i'm going a little slow because this should help you here because this is the 10th day of the month okay now you can do protest my date where dot weekly so this would tell you that which day of the week yes so basically now you can following make the operations like weekdays five if it was six or seven then you can refer that this was the weekend okay so this is how it goes good so now you can do clear and now you can type so which day of the year it is it is put as my date where dot y day so this will basically give you the year day so which day of the year it is okay so let's run this and it is a 344 day of the year okay so good to do good to go now what you can do you can shift this date my date were plus equal to five which is equivalent to like uh basically this is equal to my eight bar is equal to my data plus five okay so you can use either of this i'll use this notation the second one to have clarity now what you can do you can do put s my date where my date where dot you can string format time so this is strf time okay so basically your form for formatting and now i'll type you to do percent a person d person b and percent y okay so so this is capital yeah so let's run this so now it basically you can see by the notations it says though day is wednesday the day numeric the week terms of week is wednesday in terms of month is 15 december 21 so this is like a very used notation to keep the track of the like date okay so let's comment this and okay one thing i told you that i initialized as 10th december and now it did this plus five which turned incremented it by five days for this really like you can implement a good logic so like just by putting five you can increase the whole date so and get all the other details so like this was 10th i think uh sorry this was 10th december now i incremented by five here and then when i put it out this at this line oh it works like magic okay now now you can comment this okay so now what you can do you can create another variable time okay for that you require required time okay and let's comment this so let's pick some space so that it gives a clear view so you can give my time where is equal to time dot new 2021 year 10th a 12th this is december 6 5 and this is the notation basically which tells you plus make sure you put a 0 5 0 0 though don't put directly like this 5 0 0 so put 0 5 0 0 okay now in the same way what you can do you can do put s my time where okay and you can repeat this put as my time dot dot r this would give you the r now this would give you the minute and this would give you the second okay so let's run this yeah so here you can see so the r is sixth minutes is five then the second is ten okay uh you can like also do something put s time dot now so this would like bring you that current time okay good to go now we can clear the screen and we can also print this now let's uh move on with some additional topic so basically i'll give you like there's a very like a small quick topic you should really help you so directory uh and exceptions so basically okay i'll give you directory dot rb so basically this is a new topic so let's do this basically what you can do you can do put s run the directory command directory dot print pwd stand so print working directory now like the this your current working directory so this is print working directory now i'll give ruby directory.rb and this would print the current looking directory okay so this is the working directory i'm usually in and this can be confirmed now then you can do run a command directory dot make directory so basically these are all the like commands you do a folder here and then you can also check put as directory dot exists exists let's see this this exists folder here so when i run this file now you will see yes this directory exists and it does create a directory to my left okay now let's create another file exceptions.rb so this is another topic so now to create a try catch statement ruby basically you you can give a begin statement now in this begin statement you have three things rescue so one is rescue okay other is else other is ensure so begin is put s begin so basically okay and then i'll do put s three by zero basically this is an error to catch this error i'll do put s error error catched okay so this would like this is like a like input the error is not cached if the error is not catch then you can do this yes looks good okay ensure this put s this should always run always run respect of above irrespective of so always run inspector let's run this ruby exception.rb so here you can see begin there is cash because 3 divided by 0 is a division division by 0 error so it's an error and it says here cash always run respective above let's change to one this is not an error now because this is valid three by divided by one so let's see it see again it does good p is done because yes it does put three out it is not an error looks good or always run irrespective about so this is how you deal with error handling in ruby so i'll continue with like classes and object oriented programming next tutorial so thank you for watching for this tutorial thank you everyone bye