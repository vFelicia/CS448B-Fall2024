hey guys welcome to the next video on docker tutorials for beginners till now we have learned the basics of docker files and how we can create docker images using docker files now in this video we are going to learn about docker containers so as i have told you earlier when you run an image it's called a container so in the last video we have created this docker file and we have already built our docker file to produce an image so let's list out the docker images which we have created in the last video so just give the command docker images here and this was the image which we have created we have named our image as my app and the tag which we have given to our image is one here now this is the image id so let's see how we can run this image to create a container now in order to list out all the running containers you have the command which is called sudo docker ps which is going to give you the list of all the running containers so right now we don't have any running container now if you want to see the list of all the container including running or thus exited containers then you can give the command with the flag hyphen a and it's going to give you the list of all the containers you have on your system so it's going to give you the list of all the running container as well as if they are exited and if they are no more running then also it's going to give you the list of all the containers so you can see i have ran this hello world container two months ago right and right now the status of this container is exited that means it's not running so this is how you can see the list of all the containers now to run a container what you need is a command called run so you just write sudo docker run and then you can give with this run command some options for example and then you give the name of the image so it requires uh the image in order to run a container and then you can give some commands so you can give some commands with the docker round image and also you can give some args here okay so let me just write args right so this is the basic syntax of a docker run command so let's say we want to run our docker image which is my app right so let me just once again give this docker images command and i want to run this image so to run a container you just need one thing which is the docker image so you can just write sudo docker run and then the image id so this is the image id of this repository which is my app so let's say we want to run this image so i'm going to just take the image id of this image and then i'm going to just press enter and as soon as i press enter it's going to run the container and exits immediately so when i run this docker run image id command then it's going to run and it's going to exit immediately right so when you give this docker ps command so let's list out all the running containers right so all the running containers still you will see there is no running container but when you give this command with hyphen a flag which means we want to see all the containers then it's going to show you that it ran this container with this image so we ran the container with this image and this is the same image which we have used in this command right and it was exited about a minute ago right so it ran and it exited immediately now here one more interesting thing to note here is when you run the container with the run command dot co automatically generates a container name with a string of randomly selected numbers and letters so if you uh are wondering what this name is this is just a automatically generated name which is generated by docker for you now if you want to give a specific name to your docker container there is a flag for that so we are going to run the docker run command for the same image and this time what we are going to do is we are going to give some name to our container so before the image id i'm going to just provide this name flag and then i can give the name to my container so the name i have given here is my ubuntu container to my container and let's give the same command with this flag and once again you don't see any output here on the terminal but as i have told you it has just ran the container and exited immediately so when we give the docker ps hyphen a command once again you will see this time that now our container name is my ubuntu container right so this was the container which we ran earlier and this time uh with the last docker run command we have given the name to our container and the image was this one so image is unchanged but we have created a new container with the name my ubuntu container right and the command which we ran is command which is coming from this line of docker file now when you run your docker containers it's run in two modes one is attached mode or in the foreground and other is in the detached mode or in the background and by default docker runs the container in the attached mode that means it's attached to the terminal session where it displays the output and the message so if this docker file has some commands or some output related to uh this docker file then it's going to show you the output in the terminal when you run the container with the docker run command but because we don't have any uh output associated with the docker file it doesn't show any output right now if you want to run your docker file in the detached mode what you can do here is you can give the hyphen d flag that means you want to run your container in the detached mode so just give hyphen d and then i'm going to give the same command here and let's see what happens and you can see it's going to give you this message which says error response from the daemon conflict the container name this is already in use right so this container we have already defined so you cannot create this container with the same name so you need to give the different name here so let's say i'm going to just give my ubuntu container to now okay and then i have also given this hyphen d command to run it in the detached mode and now you will see that there is an output which is printed here and this is the container id of your container now if you have observed here in the previous command where it has should thrown this error it has this long container id now when you give the docker ps hyphen a command you will see in the container id some part of this container id is shown so for example i can see here up to this part of the container id is shown but in the background the container id is so much bigger right so now when i give the docker ps hyphen a command once again i can see one more container which is created and the container id you can see it's going to show you the starting few uh values of the container here until i think until d so using this id also you can delete or work with your container or you can take the full id of the container and work with your container okay so this id will also work or in the short form or the first few uh letters of the id will also work which is shown here now we have seen that how we can run our docker container in the detached mode and as i told you that by default docker runs the container in the attached mode or in the foreground right now let's see how we can run our container interactively so docker allows you to run the container in interactive mode that means you can execute commands inside the container while it's still running so let's see how we can run our docker container interactively so now what i'm going to do here is i'm going to just create a new container let's say it's container 3 my ubuntu container underscore three and i don't want to run it in detached mode instead i want to run this container in the interactive mode so here i can give hyphen i t flag which means that we want to run our container in the interactive mode and the image name is same which we have created using this docker file so let's see what happens when i run this command like this so when i run this command like this you will see the bash shell which appears here and this is what i was expecting so now as you can see here in this docker file when we have created this image the last command which we wanted is this bash command and it has just given us this bash command shell in the last right so this is how you can run your container in the interactive mode now when i open the new terminal so let this terminal be like this and let me open the new terminal in the visual studio code you can open the new terminal by just clicking on this plus button or you can open your default terminal on your operating system also you can see i'm in the second terminal and here i'm going to give this sudo docker ps command without hyphenae that means i want to see only the running docker containers and then i'm going to provide my password of my operating system and this time you will observe that when i give this docker ps command it's going to give me some output because now the container which i have created which is my open to container 3 is still running in the other terminal as you can see we have uh running bash shell in the docker container so this bash shell is running inside our container right so when you uh just give some ls command you will see the file system directories here inside your container you can also give for example up time so as the name suggests the uptime command will give you the time for which the system has been up or running right and as we have seen in the last video we have only uh given this bash command so our container is not doing much it's just opening the bash a shell now there are many interesting things which you can do with your docker run command and that we are going to see in the next videos also i want to show you uh some more commands related to docker run and docker in general so now what i'm going to do is i'm going to switch to my terminal so i'm going to open my default terminal on my ubuntu operating system also i'm going to open my browser and i'm going to just search for docker hub i want to show you how this docker hub looks like so the first link here is hub.docker.com and when you click on this link you will see uh this web page here from where you can just sign in with your docker id which you have created earlier or you can search for some images so let's say i'm going to search for an image called busy box and then press enter and you will see an official image of busybox and as you can see uh you will see the tag here on the top which is going to show you if it's official it's going to show you it's an official image and otherwise it's going to show you verified or the other information associated with the image so the most popular one and the official one is this one so i'm going to just click on this base image and here i will see some more information related to this image so if i want to just pull this image on my pc i can just give this docker pull busy box command so let's do this and i'm going to show you how we can use the docker run command with the busy box uh image which we are going to pull so i'm going to just write docker pull busy box here and then press enter and i'm going to just give my ubuntu's password which is going to just pull the latest tag image of the busy box right so if you don't provide any tag after colon then it's going to pull the latest image so now let's run the docker images commands so i'm going to just give images and now you can see this busy box image is there so you can run the docker run command with the images you have in this list also so till now we have seen how we can run the docker run command with the container which we have created but you can also use this docker run command with the base images also for example busy box or ubuntu 20.04 or ubuntu latest version and i have pulled this busy box base image because it's very small in size you can see it's only around 1.22 megabytes so if you want to quickly test something with some linux terminal or linux operating system busy box is the image to go so now as i told you you can use this docker run command with the images you have in your local pc so you can just give docker run and the name of your image which is busy box here and then you can do something with it so you can just write echo so it means that we want to run the echo command inside our busy box container when it runs and let's say we just want to print hello world here so i'm going to just write hello world and then press enter and it's going to run this busy box image as the container and it's going to print or execute whatever command you have given after this busy box command right so basically what this means is we are running echo inside our busy box container also when you give the docker ps hyphen a command so let's give this docker ps hyphen a and you will see this busy box command also so you can see this busy box and what command it has ran so we have we ran echo hello world and it was created 42 seconds ago and it was exited right so status is executed now let's say you just want to work with the busybox shell what you can do you can just give the same command but instead of giving this echo you can run it in the interactive manner using this i t flag and then you can just tell that you want to run the shell so just write sh which is going to run this container and open the shell inside the container right so let's give this command and when you give this run command with the id flag it attached us to the interactive tty in the container right so because we are running the sh command after this run command so it's going to open the shell inside your busy box container and here again you can run your basic commands or whatever you want to do inside the container so we are not working inside our operating system we are working inside our container now in order to exit from the container you can just give this exit command and you will come out of this container now the last thing which i want to show you before just finishing this video and that is how we can remove some containers so now we ran so many commands and we have so many containers and as you can see we have so many dead container that means all the containers are exited and they are not running anymore so when you give this docker ps command you can see only one container is running and all the other containers when you see using hyphen a are exited so let's say you want to remove some of these containers so let me clear the terminal and let me just give this docker ps hyphen a command so let's say i want to remove this container and this container so there is a very simple command which is called rm so you can just write sudo and then the docker command and then just give rm and then after that you can give the container id of the container so let's say i want to just give this container id of the container so just copy and paste this container id and then press enter and if you see the container id in return in the output that means this container is removed so once again when you give the docker ps hyphen a you will see that this container is already removed right so in the same way you can remove multiple uh containers using this rm command so you can just give container id space container id to space you can give multiple container id in this manner and it's going to remove all the container ids which you have given after the rm command so so right now we want to remove two containers and as i said if you see the container id in the output that means that container is removed and in my case as i can see this container is removed but the container with this id is not removed means the container with this id is not removed because it's running right so if the container is running and if you want to remove it you need to stop this container first and then you can remove the container so as i have shown you this container is running here so i i can either just give this exit command or i can stop the container let's see how we can stop the container using a command called stop so let's say i want to just stop this container so i can just give the command docker stop just write docker stop and then the name of your container so my container name is this one so i want to stop this container and then press enter and if you see the container id in the output that means this container is stopped so when you give this docker ps without hyphen a you can see there is no container running anymore and now in the list of all containers you will see this container and now when you give this docker rm with this container id it's going to give you the output that means this container is successfully removed okay so you use top command to stop the container and then you can use rm command to remove the container so that's all i want to show you in this video we will see more commands related to containers in the future videos also so stay tuned and i will see you in the next video