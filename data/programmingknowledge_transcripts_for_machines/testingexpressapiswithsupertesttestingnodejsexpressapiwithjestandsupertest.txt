hi in this video we're gonna learn how to use just for running our Express endpoints like we have to run the user endpoint and tasks in point so first of all we have to change the environment of chest because right now by default it is running as a browser environment so in here just we're going to use simple JSON structure in here we're gonna use test environment test environment and it will be known and in here with us see that the file the connection string that we are using in here because the test will run in other environment and it will run in separate environment so we're gonna separate the environment of test and the production so in here first of all we have to import one library that's called NPM I II and V CMD at the rate it will say that which update or which person you want and we are gonna save as Dave type in anything so it will really saved so their opinion see so in here we are gonna create one new folder let's say its name is conflict because we are gonna separate environment of port the tearful one and the taste one so in here we are just gonna say new file and let's say its name is dave dot env and one more that's called test dot anyway you will see that what I am talking about join here in dev tour env the connection string will be MongoDB we're gonna see how can we use this as a assignment in our connection a string so let's first of all let's close this tab there's no need for this one right now so in here in MongoDB URL you can see in the panel string that this is the connection string for now so we're just gonna copy it and just leave it there use this like yeah and if it is safe and also for testing enemy we're just gonna copy it but the name of the means it will be save as a different collection or a different database so among those rest mongoose test yeah and one thing more that we have to do like JWT key will be also it will be same but do we have to just keep as because we are using env see anything so in here in the art for yeah so in the middle over here in the middle where there is the this this money of course so just copy it and use it here and just save it and now in here we can just remove it and we can use process dot NV dot the name of the variable that you have kept here that is j TT t so just use it j WT k we have to use it one more place it is in the user model in here yes use it and one more in the connection string no in here just remove it yeah this will do the name is same so now we can just close this well and this one to this one now in the packet or JSON we're just gonna give the file means where it is located so it is locate the dots less config class there dot env and in here it will be e and we see MD dot slash config slash test dot enemy yeah now it will be will work so we can see if we just run nvm test you can see it is working yeah you can see that all test cases been passed we like we have separated environment but you can see that it is working so now for using the Express endpoints happen app app and points that we have made here so in here we're just gonna use the user dot torches because we are gonna test user folder user router so in here what to do next so for testing the this file like Express endpoints it provides with super test in film file and young library that is to be used in here so you can see that how it works same thing like we're just gonna use the request the destroyed super test and here the app express and we're gonna use the endpoints and what is the matter and this is how this will work so let's see how can we use in here so first of all we have to install the super test in here so just install it but as a tear dependency so just use it here now what to do we have installed a super test so in here which you cannot use the require it from the we're gonna use super test in here so now we need what we need app that means we need this index dot J's we need this one so what can we because this one run before the listen to any port number so what we're going to do we are going to restructure our older system in here so first we are going to create one more file let's say its name is AB dot J's that we are going to use it so in here what we're going to use that we don't need this part because we need this part in here we need this part yeah and this part that we need here so what we're going to do we are going to just cut the best here we're just gonna cut from here and paste it here and we're gonna modulate export app from here and for index we're just gonna use app require from darts last app so yeah that's it this is what we need so in here we can just Const app is equal to require dot dot slash from get out of a test folder and we app so we have care to app folder app functionality so now we're going to use the request one and we're going to use app what we're gonna just post in here because this one so what we need him here that we're gonna use two test cases so this is a test cases for what this is the test case for should sign up for a user and it will be an a synchronous process that we know and it will be an average and in a quest and here we're gonna use app dot post slash users and it provides some functions methods Lake dots and what we're gonna stand in here we're gonna send in here the name let's say the name is test email email will be just like test at test calm and password password will be test one two three so in here what we expect from here we expect like the status code we expect status code to be 201 and if it turned that we know that if it run properly it will create a new file for new user new user in the our MongoDB because in here we have used one of the rest Mongols in here but we have in separated environment so we can see that it will create a new user in the rest Mongols test data based so not do it just run it we can see what will we get we can see in here that the test has been passed yeah you can see in here that the test has been passed in yes that's actually so now if we go to our rest mongos test and here you can see you can see that new user has been created but there is one problem in here that that if we again run this file like just run it and save it it will give an give there because we have the same functionality you can see it gives a because we have used this one as email as one unique so it will give the error because validation is false in here so whenever we run this test sort we have to use this like we have to delete all the users all the collections in our database so it will restart again so this is what we're gonna use some global methods that just provides like before each before each means that it will run before each cases each test gets in here it needs a callback function we're gonna see how it will run but first of all we're gonna see how do we look like so is gonna use console.log test use before before h and one thing more matter that is after it this one means that it will call after each test call so let's say console dot log after H now if you run it you will see that it will come before the test cases will run and it will come after the test case it will run so in here you you can see in here that it gives the console.log before H and after H so what we're going to do we're gonna just use the before each one because in here before each cases will run it really delete and use it it has been saved in our collection so what we're gonna do we're gonna do we're gonna just first import the Const user it will require todd todd / t being / model / users in here what we're gonna do it's it will be a nesting cleanest process so we're going to do a sync and we're gonna await a way to user to or delete many we're gonna delete many and just use it and now if we just save it you can see that it will run because it will create a new user but before creating a new user it will delete previous one so this is how we can test our suit sign up for our user and we can also test for a user that cannot be signup and we're gonna use and when i see how can we login so we so to login for a user in here what we need in here await request app dot it will be a post request and we slash user slash logging and in here what we're sending we are sending the email test one test ad to test calm and password as test one two three so if we run this for this one it will work with what it will do it will not run because for each test case it will delete the test one it will delete user so for each cases what we're gonna do yes we're going to create a new user let's say current user in here what we will provide we probably will provide the email or we will provide the name name will be test one two email will be taste one it test calm and password will be test 1 1 2 2 3 3 and for each test guess what will we do it will do that await and in here we're gonna save it so user await user and for this certain we can use this await user dot save this is how we can also save the user proper name would be like user 1 that will be good because we we can have multiple users you exposed equipment toward test cases so yeah so if we will do this anything in here it will find it is fine we're gonna use this one like user 1 dot email and in here user 1 dot password so now if you run this file we can see rate will run perfectly you can see each test guest has been passed so this is how we will we can log in and sign up and for others API that we have used in here you can do similarly so yeah this is how we will do this thank you