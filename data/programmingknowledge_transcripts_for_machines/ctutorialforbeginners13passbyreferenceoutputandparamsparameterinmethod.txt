hello guys welcome once again in the last video I've shown you how to pass parameters to your methods and how to return values now in this video I'm going to show you how to pass parameters by reference and how to pass parameters by output and in addition I will also show you how to pass arrays to your methods by using the key keyword params so let's get started till now we have seen that how we can pass the parameters to the method by value now for example I have a simple method which is public static void my function and I'm passing an integer to this method and I'm just assigning a value of 10 to this integ which is my parameter okay now I'm calling this um uh function here so what I'm doing is I'm just declaring another integer Y in my main function and I assign this integer integer variable a value of zero and I I will pass this integer to my function which is uh this here this parameter I'm passing it as Y and I want to see what is the value of y now so I will just print this by using console do right line so what do you think will be the value of y or what will be the printed value here will it be 10 because what we are doing is we are passing this integer here and now the whatever integer we pass we assign the value of 10 to this integer or will it be zero because it's initialized as zero Y is initialized as zero so let's see by running our program what is the output and the output is zero okay so now what is the meaning of this the meaning of uh this is because we are passing by values so whenever you pass uh any parameters to your function by value it'll just copy the value here and then so whenever you pass this y to here it's a it's a copy of Y okay and not its address so what whenever you pass the copy of Y here and this y will now be be x and x is equal to 10 but this value will remain the same because it's this Y is a copy and not the actual address which we are passing so another way of passing a parameter to a method is pass by reference and the PA pass by reference means we are passing the memory location of a variable in a method right so let's see how we can use reference here we just need to give this keyword RF here and now you are telling your method that take the reference or the address of the variable which you pass here and then assign to that address the value of 10 so it's not a copy we are just taking the address and assigning the new value to the address and we are not just copying the value to the copy right so as you can see it's showing you the error here but when you use the keyword here this reference in front of Y this error will go okay and earlier our result was Zero but now see what happens I will run the program and now the value is 10 so by passing by reference you are passing the address of your variable so whatever whatever is the value is assigned to this will be directly assigned to the address of the variable you are passing and if you don't use this reference you are passing by value and it's just a copy you are assigning to your variable and it will not be assigned to the address of that variable so this is passing by reference now let's assume that for example I have a function uh this function name is uh my Cal which is my calculation and what we want to do is we want to take the sum and we want to take the product and we want to print it okay so I will declare two variables int X and int Y and I will declare here another integer here which is ADD and which is the addition of X and Y X + Y and I want to return this okay so I will say return add right and here it will be returning integer so I will return here in I will remove this and so I will also declare two variables here red and let's say a or let's say a is equal to 45 comma B is equal to 67 okay and I pass this A and B here a comma B okay and this method name is changed now so it's my Cal and we will comment this out and here comes the comma and this will go so what this will do you already know from the last videos that this will add the these two numbers and it will return the addition of these two numbers and you can just print it print the addition here right like this and addition will be printed so addition is 112 for 45 and 67 now suppose you want the addition of two numbers and the product of two numbers or the subtraction of or two numbers you can only return one value by using this return type right but how you can manage if you want two results from a method for example addition and a product there is a keyword called out from which you can you can access two output from a function so let's see how we can use this out parameter so in here what I'm going to do is I will declare two more parameter or I will pass two more parameter and I will say the third parameter is int sum and the fourth parameter is int fro for product right right and then I will say sum is equal to x + y and product is equal to X multili by y okay and now I don't want to return anything because whenever you want to return two value you can use the keyword out here so use keyword out here and keyword out here okay and now what this is doing is let me change the return type because we are not returning anything so we will write void here okay so now what this method is doing is we are passing two parameters here and what it does is it will take the addition of these two numbers and save it into this third variable and take the product of these two number and save it into this product variable and because of this out parameter or out keyword this method knows that this is the output we are expecting okay so whenever you add the out keyword here it will s your your method with st the values inside these par parameters and you can access these parameters in the main function okay so let's see how we can access these two parameters so now our function has four parameters right so we have first and second number one and number two and we want in some par some parameter which is I will initialize as zero and in product parameter which also I initialize by zero okay and we are passing A and B as a number so we are already passing A and B and these sum and product we we can pass it here as a third variable and as a fourth variable so now what whatever is the multiplication of your two numbers will be stored here and here right and you just need to use out keyword here also while calling this function okay and this error is gone so what we are doing here we are passing these two numbers A and B and we are summing those those two numbers save it into this variable sum and pass it here as a third parameter and we can access this sum parameter by another variable sum and now this value is stored here and it's same with the product we are calculating the product saving it here and we are accessing it with our product variable now for example I want to show the result so I can say sum is equal to a place folder which is zero and product is equal to place folder which will be one and some we'll pass as a first argument here and product as second okay so now we can output two parameter at the same time and now when we run the this program it shows the sum of these two numbers is this and product of these two numbers is this so whenever you want to Output more than one value from a method you can use this keyword out and you can store those values in those parameter which you initialize with this out keyword and while calling just use this out once again and you need one more parameter to access this that value from your method so you need every each parameter here and now this value is stored here and you can access it while you you can print it or you can use it into your code now how you can pass an array to your method that's next so to pass an array to an method let's delete all this code here and let's delete all this code here also and let's delete all the parameters here and let's say this method is our array method okay and we want to pass array to the this method right so you can pass array like this for example you want to pass an array of string so you can write string and this two square brackets and for example you can name it as names okay and what you want to do is for example you want to print all these names so I will I can use for each Loop which I have already discussed earlier in the last videos and I can print this so I can say by these curly braces I can say string name in names and I can print it like console dot right line and I can print this name here okay and suppose I want to show the size of uh the array also so I can write console dot right line and I can say array size is equal to and in placeholder we can pass this so like this names dot length so this names. length will return the length of your array which is the number of element in the array now whenever you want to pass an array to this to this um method you can do it like this and there is a keyword called params params which will help you to pass arrays to the method efficiently so let's say that we are not using params right now and we are just passing it like this okay so I will declare an array here first of all so I have the array which is my array and I have four parameters or four values inside my array and the values are for zero index name one for one name two name three and name four okay and I want to pass this array here so for example I don't want to pass anything to my method and I will just use it like this this is showing me the error right or this quickly line and this means that I have to pass an array to this method but whenever you use params keyword here so you have added params keyword here you can see here this twily line or error is gone and you you can even run your program and it shows array size zero because you you are not passing any array here so array size is zero and it's not even showing any error and it's not printing any names because you haven't passed anything but it's not showing any error right so by using perams you can you can pass your array efficiently and it will if you even not uh pass any argument here or any parameter here will not show the error now suppose we pass this array here which is my array then when you run the program it will print the names which is name 1 2 3 and four it will also show the array size which is four so we are printing just the same right so by using this keyword you can pass array efficiently to your method now there is one more way you can pass parameters to this array or you can pass a list of array to this method like this so you can pass first name for example N1 like this second name N2 inside this here and third parameter and three for example and whenever you pass this because of you are using this patterm uh keyword here it will take these three params as a list of array so this is the uh value at index one value at index value at index 0o 1 and two and when you run the program it will run fine it will even print your names and it will even print the size of the array so you can pass your collection like this also whenever you use this params okay now there are some rules of using params as a parameter in a method okay so what is the rule you can only declare other parameter for example int X before this param parameter so this param parameter should be the last parameter in the method okay so you cannot do it like this this is allowed but if you want to do it like this you want to pass parameter after your param parameter this will not work and this is not allowed okay so this is the first rule and the second rule is you cannot pass two params in the same method so suppose you want to pass this one param and second param like this which is with some other parameter name it's not allowed you can only pass one par parameter in a method these are the two uh rules you can say of using param keyword so in this way you can use reference parameters output parameters and the parameters with keyword param and you can pass array using this in cop so I hope you have enjoyed this video please rate comment and subscribe and bye for now