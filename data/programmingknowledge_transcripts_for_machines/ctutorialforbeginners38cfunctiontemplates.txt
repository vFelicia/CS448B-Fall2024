hello guys welcome once again in this video I'm going to teach you what are function templates and how we can use function templates in C++ so first of all what are templates a template or templates are the foundation of generic programming so for example you want to make your program more generic uh in order to you know increase the usability of uh the program then you use templates so let me give you an example for example I want to make a function which adds two values okay so this is simple you can make a function which will return an integer and we can add for example int a comma int B so we are passing two uh arguments to the function and we just return return A+ B this is simple right so we are making a calculator we want to make some uh function which calculates the addition of two values and we can do it like this and in our main we can just call two variables for example in um X is equal to 36 for example and in y is equal to 46 and you can just output this like this see out and then you can call this add function this is really simple stuff and you already know I think what I'm doing right and I'm just calling this function and then I will just end this and this will give me a result right so let me run this program compile and run so run the program and it gives the answer but for example you want to add so this is adding integers right you cannot use double values or float values or even string values with uh this function right because this is or the data type is fixed in this function okay so suppose you want to make a generic calculator and you want to uh make a calculator or function like this that it can accept float double and any other integer values so what you can do you can just overload this function for example with float for example float float float and here double for example double double double and this is also fine this will you know achieve the purpose of making a single function generic but it's taking too much lines of code and it's it makes your code lenier right now in order to make this function really generic we can use templates and this is the whole purpose of template to make a function uh generic so what we can do is we can use a keyword called template just above the function name and then in this angle brackets we can just write class is a keyword and then name of your type this is user defined name so for example I give my uh template class name data type this is given by me okay and what you just need to do you just need to replace your data type which is INT in our case int int int with this data type just copy this paste it here paste it here paste it here and this is the simple definition of a template okay and what uh this is doing is it's just uh telling C++ that we want to make this function uh generic using templates and this data type which we are using uh in here will be replaced by the initialization uh which is given to the function okay and let's build our program and run it it will still give the answer now for example we are adding two integer right now and we can change it to double values double double and we can make it 36 point some decimal points and 46 Point some decimal points points compile it and run it and it gives the answer okay or you can even make it float or any other values and it will give your uh result so this type of U template function templates can make your function really gen generic and you don't need to you know invest your time in rewriting the same code again and again unless and until until the purpose of this code is same right now there is a one little restriction uh when you use this template not a restriction but you can work around with but in this particular condition there is a restriction that if you define this data type here here and here this data type is same type type type type right so you cannot use int here and so now X is an integer and Y is a double value but here we have defined the template will be this data type which is same here data type data type data type and data type which is of same type so we cannot pass two different data type to a same function okay so it has to be similar data type if you define double then all the function argument takes double value values double and double or if you define or if you want to give integer values to a function you can just Define two integer values let's see what happens when we compile this and it gives the error and what is the error let's see what is the error and the error says no matching function to call add int and double right so always remember when you are using templates like this which in which you are passing two data type in a in in here and in here you just need to give the same data type or pass the same data type to your function okay there is a other ways of passing multiple parameters to a function using template and that I'm going to show you in the next video so stay tuned and please writ Comm And subscribe and bye for now