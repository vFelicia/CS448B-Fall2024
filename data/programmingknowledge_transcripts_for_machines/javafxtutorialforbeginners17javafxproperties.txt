hello guys welcome to the next video on JavaFX tutorial for beginners in this video we will learn about Java effects properties so first of all let's see what our Java effects properties Java FX properties store the inner state of a control and allows us to listen to the state change from Java effects UI controls that means you will be able to perform an action when the value is changed in the property right now there are two kind of properties in Java effects one is read write property and other is readonly properties right now to add a property in Java effects you need to import this library which is Java FX dot beans dot property dot whatever property you want okay now the example of readwrite properties are these so you just need to add for example Java FX dot bean dot property dot simple string property this is for declaring a string property in the same way you can declare an integer property or a boolean property or double property like this so you just need to add simple and then what kind of property for example double and then the property okay so simple double property simple integer property or simple boolean property okay in the case of readonly property you declare it something like this so you just write Java FX dot bean store property dot readonly boolean wrapper for example or readonly integer wrapper or readonly double wrapper or readonly string wrapper okay now these are the examples of the readwrite property and readonly property so how you can define a readwrite property in Java FX so for example you want to define a string property you can use this keyword called string property value is equal to new simple string property and in the constructor you can give some initial value to this string property it will work same as string but it has more functionality than string okay now because it's a read/write property you can call the set method on your simple string property and change the value of it okay so the initial value we have assigned here is JavaFX and using set method on the value object you can change the value 2 for example JavaFX tutorial ok and to access the value you call a get method on your object right so for example you want to print the value of this value object then you can use a system out print line and you can call get method on this value property and what will be the output the output will be the Java Effects tutorial because initially the value we have assigned was Java FX but we have change this value using the set method so the new value which will be printed is this value ok not this value now in the case of readonly you can define a readonly property in two steps first is defining an object of readonly whatever wrapper for example readonly string wrapper and then the object name is equal to readonly string wrapper and same as readwrite property you can assign some value using the constructor for example JavaFX and then you can make a readonly string property out of this using a method called get readonly property ok so you can define readonly string property and your object name for example readonly value is equal to value dot get readonly property now let's take an example to understand fully how these properties work so i have created a java FX project here in which i have this main controller or java class main dot java class in which i am just opening us primary stage and i think you know this code by now if you are following my video right and i have this blank F XML file okay now I'm going to create a new class here in the application package and I'm going to name it as for example my number okay and to add a property what I have told you you need to import this Java dot beans dot property dot Asterix right and now we are going to declare for example in normal condition you will declare a private variable and for example you want to declare a double data type variable and I will say this is our number variable okay and then to get and set the number value you can make two method which are getter and setter for this number so for example I will right click on this code and I will go to the source and I can just call generate getters and setters okay and I will click OK and it's going to give me this getters and setters but in the case of property you declare this property with the knee double property here okay and in the Gator what you will do is first of all we will check if our number property for example so this is our number property if it's null or not so for example it's not equal to null then what I told you you can call a get method on it so just call get numbered get otherwise you can return a zero value okay so just return zero this is the default value we are returning in the case of setter you cannot set it directly right you need to have this simple double property and then using this you need to then set the property using the set method so first of all we will create this property using a method and I'm going to create this method called public final double property which returns double property and then I will name my property as number property and first of all I will check if it's null and if it's null then I'm going to initialize it okay so in a way first of all we need to initialize this property using new simple double property and the default value I am giving here is zero or if it's already initialized then I will just return this double property which is number in our case right now every method you are define here should be final here okay now to set the number what you can do is instead of using this dot number you can use this function which we have created which returns the double property and then call a set method on it so using set and then set this number here which we are passing from the argument okay so this is how you can define a property in Java effects you have a class and then you have a property variable and then you declare setter and getter for this property and this whole class is called a Java Bean it's a concept in Java for declaring the properties right now let's go to the control dot Java class which is our main dot controller dot Java class and right now it's plank so let's implement initialize able interface first so just call initialize able and implement the unimplemented method here so just use add unimplemented method and it's going to create this method called initialize okay and now we are going to create our instance of this my number class which we have created so just write my number for example my num is equal to new my number okay and first of all let's set the default value inside this initialize method to it so my number dot for example set number and default value let's give it zero and now let's declare a label here so this we are going to use to set the value okay so just declare this at the rate effects ml private label and then label status and don't forget that this should be final here so just add this keyword final before initialization of your object now just take your my number object from here and go to your initialize method and then we are going to call this number property method which we have declared inside this my number dot Java class right so we have declared this number property method right so we are calling this method here and then we will add a listener to it so just use add listener method and inside the argument you need to add new change listener okay so just add change listener and it takes object so just pass this object here and now just click this bulb which shows the error and it will tell you to implement the unimplemented method so just click this a implemented method button and it's going to implement this change method now inside this changed method what we are going to do is we are going to take this label and set on this label the value of the number okay so just take this label and then dot set text and because we want to set a text and we have a number so we need to convert this or cast it so just write new double and then you take your my number object and get the value of it so we have declared a getter for its get number so just call this method and then just call to string to convert it to the string so what we have done here we have added a listener to our property so whenever the number is changed using a set method then the label is also set with the new value okay now let's declare our method which we can call using a button click so just add a public method and the return type would be void and the name of this function will be for example BTN click OK and just add this argument which is action event and give the variable name event and inside this button click function what we are going to do is we are going to change the value of number using this my number object so take this my number object and then we will call the setter method which was set number which we have declared and once again for example take this object and we will call a getter to get the current value of the number and then we will just add 1 to it so in a way we are increasing the value one by one now observe here we are not directly setting the value to the label we are just changing the value of the number using the number class okay and when this set method is called and the property is changed it's going to call this listener on this property and it's going to set this number to this label using this add a listener method okay now let's add some design using F XML file so just right click you're on your main dot F XML and open with scene builder and I have already given this default size to the anchor pane so pref width is 300 and pref height is 300 and now I'm going to take some controls from here so take a button from here which we will use for the button click event and take a label from here okay and this we will connect it from the label which we have declared right now first thing which we are going to do is we are going to connect our controller class to this F XML file so just go here at the controller and then choose your application dot main controller class and then we will give the ID to this label should go to the code and the ID will be the ID which we have declared which is label status from here okay so just give the same ID here and select your button and go to on action method here and then choose the method which you have declared so just copy the name of this method button click and paste it here okay and now save your code and now refresh your projects right click and refresh the project and now save your code and run it and now our app is running and when I click this button see what happens here so I click the button once and the value becomes 1.0 we click the button again and again and the value increases by one every time when I click the button ok now this is happening due to the change of the property so if you can see here in the method button click we are not setting the value to the label right we are just setting the value to the property and this property triggers this ad listener method which sets the value to the label okay so this is how the properties work so whenever you change the property value you can trigger some event for example setting some value or doing some other tasks and by the way in the main method just called application slash main dot F XML file right so in this way you can use properties in Java effects I hope you have enjoyed this video please rate comment subscribe and bye for now