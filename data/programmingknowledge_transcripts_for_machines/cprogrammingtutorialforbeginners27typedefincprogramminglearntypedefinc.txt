hey what's up guys welcome back to our YouTube channel and welcome to this video this is John from programming knowledge and in this video guys we're gonna be discussing type def in c programming so as a sort of review in the previous tutorial we have learned how to use unions and how to implement engines inside our c program and we also have implemented a simple solution or simple program that implements the capability of unions in C so as I've said in this video we're gonna be discussing type def and yeah I'm going to show you how you can use type def inside your program or C program so basically guys C is such a dominant language of its time and even now that even you can name those primary data type of your own and can create your own name datatype by blending data type and its qualifier so it means that we could create our custom name for our qualifier or custom name for our primary data type and then we can use the keyword type def right here and this is a keyword implemented to tell the compiler for assigning an alternative name to the existing data types this keyword type def typically employed in association with userdefined data types in cases if the names of data types turn out to be a little complicated or into intricate for a programmer to get or to use within a programs of their cases that the a particular data type or a name of a particular data type is like complicated and it's not easy to be used inside a program so that swear the type def comes in so it can be used to make the naming of our data types or your variables in C a lot a lot easier so the typical format for implementing this type def keyword is like this we can use the type def keyword just like that and then we could specify the existing names of data types or data type data type okay and then of course right after that is the alias user given name so again we're gonna use the type def keyword and then of course the existing names of data type so there are like int sign in and sign char and other the primitive data types inside our c program and then of course we're going to add the user given name which is the custom name that we want to name this particular existing name data type site this is going to make sense later on if we try to implement this inside our c program so for now just think of this as the syntax of defining or how to name our existing data types so type def and then existing names of of data type and then alias or the user given name so we could add here a sample snippet so like this type def okay and then sign long okay and we're going to give this user given name us as long okay so basically guess if you have or if you are trying to define sign long data type so it's going to be complicated or like it's going to have a long name because you can do it like this sign long and then say for example of our variable one and then sign long var to sign long var three and so on so as you can see the name of this particular variable or the data type has like signed and then long key word so it's going to take up more space take more we're going to type more text inside our program instead of just using it like this so all we have to do is define it like type def and then sign long and then as long and then we could implement this set of like that we could implement that by using something as long and then G okay so basically what we're doing here is that we're we're just getting this alias from there and then it's going to include all the data types or existing names of data type here so the as long is associated with this right here so we can declare or yeah create a variable with a sign long data type something like that and then of course we could add a variable just like this it will allow us to create two variables named G and D which will be of type sign long and this quality of sign long is getting detected from aslam okay which already defined the meaning of this long or as long in your program which is this particular meaning sign long okay and right after that we could make this or the concept of type type def can be implemented for defining a userdefined data type with a specific name and type and this type def can also be used with structure of c language and of course we already have that called demonstrated how we can use strap inside our c program so basically what we could do here as i've said we could add or use this a keyword type def in our structure so the syntax is like this all we have to do is type in type def and then strap and then say for example student so this particular struck is named student and then it has like the members of the struck s of type char and then say for example s name which is the name of the student okay and then we could say here in s h okay so this particular strap saved a data which is the name and the age of the student and of course we could add an alias tour strap so for example student okay so just like that and then of course you could use the struck inside our main so for now let's get rid of this so what we could do here is we could say stood and then st something like that and then we can see here printf and then enter student details okay you could add a new line here see me and then we could copy and paste this you can see here enter student name and we're going to add a tab /t and then we could what we could do here is use the scanf function so percent s and then we're gonna be passing the SD that s name so all we're doing here is just assigning a value of this SDS name coming from our user okay and then second line or the second information that we need is all about the age of the student so enter the age okay so we should add backslash n right here to add a new line okay so what we could do here is scan F and then percent B okay and then we could say here st dot h okay and then printf just like this backslash n for a new line and then we can say here input done okay and of course we could display this if we want to you know to get all the information that we have entered the name and the age of the student okay but for now let's let's just let's just try this build and run our program okay so we have here the output enters student details so the first name or the the first option will be the name so we can say here is John and then the second option is the H so enter the age of the students a very sample the age of the student is 18 and then yeah we need to add it says here that the main that XE has stopped working we need to add the ampersand here and then build and run our program once again so I hope this word this would work right now so John and then the age of the student will be 18 so input done okay so basically guys we could define our strap with the use of type def keyword just like this and si as you can see here we define our stood alias right here and then we use that stood alias right here to name our variable st and then from that our st we could access the members by using the dot symbol so st that and then the members of our struct student okay so if you have questions regarding the use of type def and how to work with this inside our strap you can comment down below in the comment section and once again guys thank you for watching and in the next video