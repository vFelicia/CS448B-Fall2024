hey guys welcome to programming knowledge in this video we'll be looking at do by loop and also the jump statements and cplus please let's get started in the previous video we looked at four loops and while loops right so let me just write down their basic structure so you have a counter you have a condition and then you have a growth rate of four the counter so that this critical condition becomes false at some point of time right time for while loop you define the condition inside a parenthesis and then you have the body of the loop where you define the growth rate of the particular cut fountain right so now if you observe if this particular condition is false at the beginning itself this whole loop is not going to run right so what I am talking about is if I declare some variable like int I equal to zero and in place of this condition if I give eyes less than zero and this growth can be anything so let's say I equal to I plus 10 something like that so now if you see the starting value of I is zero so once this condition is checked it is false so this whole loop is not going to execute this will so if I write something like this is the for loop statement so this whole statement is not going to be executed at all if you just start a new line also so this is the escape sequence of the new line so now the same will happen with a while loop also so if I just say J equal to 0 let me just write down the same set of condition so J is less than 0 and the growth will be J equal to JM Preston right and let me write on that particular statement so see out let me just copy this thing right and this one will be the while loop statement so if I execute this particular program I won't be getting anything so now if I just try to execute it you will be saying that I have a blank output right I don't have anything over here so what if I want to execute this particular statement or what is this particular set of statements inside the loop at least once sometimes you're given a middle and then you are asked to choose something from that right so you you have something like this you have choose your option and then you have first one second one third one and so on so this will continue and then you will be given a choice and you can enter your choice so in programs like this these are called menu driven programs these are called menu driven programs and in programs like this what happens is you need to execute this whole set of operations at least once if I directly press three over here let's say three means exit rate so you have some functions in one and two and three is exits so if I press three I should exit out of a program but for that to happen this whole set of code should execute at least once right so in this kind of loose that doesn't happen it will directly stop when this particular condition is false so in the beginning itself the condition is false it is going to break out of the loop so in such kind of situations what we are going to do is we are going to use the dowhile loop then you can do that with these loops also by using the jump statements but since you are not talked about the jump statements till now I will be talking about them shortly so now we will be using the dowhile loop the while loop is relatively easier to use than jump statements so also pointed or less you are going to write do and inside this you will be defining the body of the loop so this is actually a loop right so here inside I will be defining the loops body and then you will write while and then the condition right so what happens here is first you check the condition and execute the statements in these loops right in this loop what happens is first to execute the statements and then check for the condition that is the only difference between these four and while loops and this dowhile loop all let us execute this particular same program so let's take int a equal to zero and the same condition which is K is less than zero and let me just copy on this particular statement inside the loops body right and this is the dowhile loop now if I execute this particular program you will be seeing that this has executed once this is the do I look what happened is before checking for case less than zero it first executed whatever is dead in sentence and then it went for this particular condition check which it turned out to be false that's right broke out of the loop so in places where you need to execute the loop at least once in such cases where you have this kind of menu kind of thing you you are going to use the dowhile loop it is going to be very useful and very easy to use such so let us quickly write is from all menudriven program I will show you what I am talking about so this one is going to be a menu driven program for choosing between addition and subtraction so let's say I do and then inside this I am going to ask for a choice so choose one for addition and for traction and I'll be getting a number so in choice let's call it Nancy in choice and then now I can switch the choices as I told you so I can use as a switch case or if else I will go to a phrase because I only two numbers to compare so if choice equal to one then what you are going to do is you are going to ask for two numbers or enter number one and I'll get a number in ten one see in n1 and the same thing goes for number two also and two and two and over here number two well we can actually put this thing outside because for both addition and subtraction since we're dealing with only two numbers I am just going to put these two because really doesn't whether choices what not to write there anyway going to ask for the two numbers for identify addition or subtraction relating this the which is going to change this our print statement so I'm just putting it outside the conditions over here and then if charge equal to one what we need to print s we need to print the addition or the sum so since I only one statement I'm going to skip those curly braces and then the somnus so we can directly print the son or you can have even store it inside one of the variables and then print it I'm not going to do that and the same goes for the difference also right so if choice equal to two then you print the difference so give friends this n1 minus n2 and over here so I is equal to two and you can use elseif over here so instead of checking if you put two if what will happen is if you first check for this and again check for this but if you put an else if what will happen is if this condition is satisfied it won't check for this one now or if you have a hierarchy of condition so if you have ten conditions if the second man is satisfied it will directly skew to the next iteration so what happens over here is if you put all ifs or all tenets even if the second condition is satisfied it is going to check for all the ten conditions so else if is a better choice when you have two distinct choices right so now after printing this what we are going to do is we are going to ask for the user whether he wants to continue a good so do you want to continue he's going to look either yes or no I am just going to take one character so now once you take the character what will happen is it will be limited to the scope so if I write something like let's say con and then it's kind stands for continue cannot use the word continue because it's a keyword I will be talking about that shortly let's just say current means continue it so now if I just take in current what will happen is this particular video bill will be limited only to this the highlighted braces which you are seeing here so if you want to compare that that is not possible right because the vial which we are writing is outside this one right so why be right outside this body of the loop so we need this variable to be accessible outside the body of the loop so we don't want to access it outside everything else right we don't want to access this variable outside everything so what they burnt those we are just going to put this one over here inside the main function so what will happen is it will be limited to this main function but since we are not dealing with other functions we are just using this particular one as a function variable that is it belongs to this particular function and then it can be accessed from anywhere in the function since this Y also is inside the function it can access this continued variable now if you had written it over here it could not have access to it so now we are going to do it until he says no or till he keeps saying this both are equivalent statement you can do either corn is not equal to less or you can say all sorry corn is not equal to no till then you need to continue or else you need to continue till he keep saying this so both of them are right you can do either one of them and now if I execute this so it's asking for the choice I'm going to save one enter number one twelve twelve so the sum is 24 I want to continue yes if I put two and then boil it well so the difference is zero and now I press again it is going to stop so now you see how the dowhile loop can be used when if you are using the for wide loop that is also possible but it's quite clumsy to implement as compared to this particular two value so now let's talk about the jump statements right here this we don't need this so first jumps it now we are going to look at this continue so what continue does is it will skip a particular iteration so let me show you an example so for int I equals 1 I is less equal to ten and I placed this and inside this loop I am going to print something let's say let's just print I write and then a new line also no you know the output right it is going to print all the numbers from 1 to 10 so now what I need is I don't want the value of Phi to be printed in the output I want all the numbers except 5 so one way you can do is you can do something like if I is not equal to 5 then you print all these things so this is also one of the ways to get the output what I actually said so here you can see all the numbers are getting printed except 5 but in some scenarios where what we need to do is meaning instead of writing everything in an ifelse loop we can directly skip the statements if that number is not 5 right sorry if the number is 5 we what the mean is if I have some set of statements over here so let's say we have this one statement 1 and then I have another statement over here so statement 2 let me add a new line over here so that you can differentiate so after every ie there is going to be a statement valid statement 2 but if I want that all to be executed only when I is not equal to 5 what I need to do is I need to put everything inside a particular inside the body of inflow great so I need to do something like this and then here so inside this body of the if loop I'm going to get all these statements printed only if the number is not fine the easier way to do is what we can do is we can skip the statements right so if I use Phi we can skip the statements so the way you skip the statements is this stays as it is but once I equal to 5 what I am going to do this and just going to hit continue so what this will do is if is equal to Phi you it won't care about the next statements it won't care about any other statements inside it is just going to skip the I tration and go over to the next one so this is true with every loop so even if you have the continue inside the if and then you have some statement over here let's say continue is three good something like this so this statement won't be executed at all that once the continue is in contact it just directly going to skip everything and just going to the next iteration so now if I put this you will be getting the same output okay I did not put this yeah now if you see I have one two three four and then why you did not print anything at all and then six seven eight nine ten right so that is then you look and it escaped me it's just going to skip the statements once it's not required so every statement escaped so next thing we are going to learn about this break break is almost same like continue what it does it's just going to brave or continue is just going to skip the iteration it is just break is going to completely skip the loop itself so once breakers and contents is going to come outside the loop if I write something like the new has executed this is outside the loop right so this particular statement is outside the loop and also executed you'll be saying that all the statements are printed only up to 5 once 5 cent quoted it's like directly broken out of the loop and then it says loop as executed so that is the use of break statements so you you have encountered the break already right and switch case so this is what happens once a key s is satisfied you are just going to break out of the whole switch case if they don't pay for what is going to happen is it's going to follow all the statements which are associated with every switch case below that order so the next statement we're going to learn is about the goto statement so what goto is it's basically collecting kind of a thing so you have a label so let's call something like let's call it label and then you have a set of statements inside this label so you have C out hello and then nación so you have these two statements right or let me just and space over here so these two statements I'm going to be printed sidebyside I don't have a new line over here so now what will happen is I want to execute these statements again and again when I press something so remember the dowhile loop we can do the same thing with the goto statement also it's not exactly a you can act like a loop so let's say I have some media but over here let's call it ain't I so I'm going to take an eye and then if I is equal to let's say some number let's say 12 or 7 something like this so if I use this particular number I want the whole thing to be executed again right so whatever do is go to this particular label what this does is it will directly switch the control from here to over here it will directly go from here to here or you can go from here to bottom of it it can go from this particular place to anyplace in the whole program or the whole function you can at least skip all the statements you can either go backwards or even forwards it completely depends upon your program but here what will happen is they'll let press some other number except 7 this whole statements are going to be repeated again and again so once I press ENTER you are saying welcome to programming knowledge I press 9 in 10 so here you see it stopped now if I press 7 it's going to continue again and again so let's say 7 until you see the same set of statements of executed 7 7 till I press 7 it's going to repeat and then you press something else it's going to stop so that is about the goto student and then you have another statement called exit statement so what exit does is it directly breaks the whole program your program is going to end but it's not a function directly so you need to have another header file to executed so that header file is known as this standard library header file so it is htd li b which ran for sunday library but it's a c header file so it's named and C++ is CS TLB so you need to type a C STD Li B so this is a header file and inside this you have the exit function so let's say I want to exit right after this one so I just pressing exit 1 means exit with an error and exit zero means it's just going to exit without any error so let me show that if I execute this you can see it just ended with return 0 that is the exit code which are passed over here so it went on without any errors but now if I put 1 and exit so here you can see process returned 1 that is the exit code so one main cemented right so here you can see it's terminated with a status one that is red color it means that it will turn it on normally so that is all for this video in the next video we'll be looking at functions