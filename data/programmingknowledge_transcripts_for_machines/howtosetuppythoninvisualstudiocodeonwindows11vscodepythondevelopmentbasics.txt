hey guys in this video i'm going to show you how you can set up the support for python on visual studio code on your windows operating system so i'm assuming that you have already installed visual studio code and python on your windows operating system if you don't know how to install visual studio code or python i will provide the link of those videos in the description so you can watch those videos and then come to this video right so once you already have python and visual studio code on your windows operating system we are ready to go so first of all we can check the version of python for example so just write cmd on your terminal and if you have a python installed then this python version command is going to give you the version of python in my case it's 3.10.0 in your case it can be different depending on when you have installed python on your windows operating system as you can see i also have visual studio code now let me open the terminal once again and let me just start from the basics so i'm assuming you are totally new and you just want to create the first python project in your visual studio code and debug it and run it and then use python script inside your visual studio code so let's say i want to create a folder which will be my project folder on the desktop right so i'm going to just cd to the desktop here in my command prompt and then press enter and here i can create a folder let's say i want to create a folder named work so i can just type mkdir command which is uh the command line option to create a folder in your command prompt on windows operating system and then the name of your folder so let's say in my case i want to create a work directory on my desktop so i can just press enter and you can see this directory is created i will cd into this directory and then press enter once again so now i'm in my work directory and let's say here i want to create all the python script for my project so now here i can just type code space dot and then press enter which is going to open my work directory in visual studio code you can see the name of the directory here this name will always appear in capital letters so if you are wondering you have created this directory in all small letters but this directory is created in capital letters here on visual studio code you will always see the directory name in in all capital letters so now let's create a python file you can create a python file by just right clicking on the explorer here or you can click on this option which says new file or you can create the file by just clicking on the file and then click on new file so whatever option is easier for you just use that option and then just create your python file i'm going to name my file as test dot py and then press enter now as soon as i create a python file visual studio code is going to recognize that i want to create python projects or python scripts and it's going to give me the suggestion for installing the extension for python you can see do you want to install the recommended extension for python you can click on the install button which is going to install the support for python otherwise what you can do you can click on the extensions icon here and then it's going to show you the list of all the popular extensions and you can also search for the extensions so let's say i want the python extension so i will type python here and it's going to show me all the extensions related to python now you will also see these options are sorted by their popularity right so you can see the number of downloads for this first option is 48 million then 3.8 million then 2.6 million so i'm going to select the first option because it's mostly used here you can see who has developed this extension so it's developed by microsoft that's good because visual studio code is developed by microsoft so this will be the best extension for the support of python and then i can also see the ratings here and the number of downloads once again i can click on the install button which is going to install this extension which in turn is going to add the support for python in visual studio code so once this extension is installed you will be able to see these two options here you have the option to uninstall this uh extension and you have the option to disable this extension so if in future you want to develop let's say java or some other language you can maybe disable python support or totally uninstall it using these two options you can also uh just scroll down and read how you can use this extension right so once this extension is installed then we are ready to write some code also you will observe so let me just move to the explorer you will observe here your python interpreter right so as you might have seen i have python 3.10.0 installed so visual studio code is going to recognize my python interpreter and it's going to show this interpreter here if i have multiple versions of python installed or if i have python installed in multiple places on my windows 11 operating system then visual studio code is going to recognize that and it's going to show all these options here so when i click on this interpreter option i have only one python installation which is recognized by visual studio code but if i have multiple installation and multiple versions of python i will be able to select a particular interpreter for my python script if i have anaconda installed then also i will be able to see the anaconda related options here so you can choose the interpreter from here also when you type control shift p you will be able to see this kind of search bar here when you type python you will be able to see all these options related to python so you can see create a terminal configure tests debug python file enable disable linting go to python object so you can see you have all the options here on this command palette here so you can search all the options related to python now if you want to open the integrated terminal to just run your script you have this option which says terminal and then when you click on new terminal it's going to open the terminal inside the visual studio code and you will be able to see which terminal is opened so you can see it's a powershell terminal you can also see this here if you want to open the command prompt and not powershell you can just choose it from here so you can click here and then click on command prompt and it's going to open the command prompt and you will be able to see the list of all the command prompter terminal which are opened on your visual studio code now let me add a very simple python script here which have two numbers and i'm just comparing them using if statement so once you have your script you have multiple options to run your script so you can right click on the same editor in which you are writing your code and then you can see you have this option to run a python file in the terminal you also have the run current file in the interactive window so you have all these options here also you have this run button which is going to run your python file or if you are a fan of command prompt or terminal then you can directly type your command for example python and then the name of the file which is going to run your python script in this terminal so let's say i'm going to choose this option to run my python script i'm going to press this button you can see my python script is executed and the result is here right so it's going to uh just select the interpreter from here and then the complete path of the file and it's going to run this file and then give you the out let's say i want to just uh run this script using terminal i can just type python here and then the name of the file which is test dot py and it's going to give me the output which is a lot cleaner than using this terminal because it's going to show you all the complete parts of the python executable and your file right so whatever option seems to be useful for you you can use that option now let's say you ran your python script and let's say you want to debug your python script so you can just go to your script and then add the breakpoint on your python script using these red dots right so you can just hover over the line on which you want to set the breakpoint and then just click there and you will see this kind of red dot here that means the breakpoint is set on the third line now on the left hand side you have this debug and run icon here so you can click on debug and run and here at the bottom you will be able to see all break points uh you have set so right now i only have one breakpoint i can set multiple breakpoints here and i will be able to see the list of all the breakpoints here from here i can disable all the breakpoints by just clicking on this icon which means all the breakpoints are there but they are disabled right if i want to remove all the breakpoints i can click on the remove all breakpoints icon here and it's going to remove all the breakpoints so let me add the breakpoint once again now for the first time when you are debugging your python script when you click on the debug uh icon here you will see this run and debug button here and also you will see uh this option which says to customize run and debug you can create a launch dot json file so here you will be able to customize your debug file for example which debugger you want to use for your debugging which python interpreter you want to use which file you want to use for debugging so all these options you can give in the launch.json file let me just click on run and debug option which is going to give me all these options i want to choose the first option which is python file and once i click on that i will be able to see that my debugger is running and my program execution will stop at the break point here so you can see my execution is stopped at the break point i can see all the debugging related options here so when i click on this continue button my program will run normally i can just step over i can step into a function i can come out of the function and i can rerun my debugger using this option and i can stop this debugger using this icon here right when you see this pink kind of bar here that means your debugger is running right if you stop it you will see that this pink uh bar is gone right so this is kind of a trick uh to observe when your debugger is running or not right so let me rerun it once again you can see the debugger is running program execution is stopped at this breakpoint i will be able to see the list of all the local variables on the left hand side i can watch some variables let's say i want to watch a variable b i can just type b and then press enter and it's going to give me the value of the variable which i want to watch here i can also see the globals here so you can see all the global variable values are here and i can just step over right so i can just go to the next execution point and see what's happening in my script so this is how you can debug your script let me just stop the debugger i can once again go to my folder explorer now once you have added the python extension you will be able to see that the python intellisense is also there so when you type some letters of a method let's say it's going to show you all the methods which you can use uh related to what you have typed in your editor so when i type pri it's going to show me all the print related options right i can also when i just write one parenthesis it's going to complete that i can print the value of let's say b right so all the intellisense options are available for me once i have installed my python extension i can just save my script by just pressing ctrl s which is going to save my script now let's say you are an advanced user and you want to use a python virtual and in your project right so normally let's say whenever you want to uh install a python pip package you can do it directly but if you want to create a virtual env for your project you can also do it easily in visual studio code so let me create a new test file let me name it as test2.py and here in my test2.py i have this very simple python script which uses a package called be crypt right right now you can see this yellow squiggly a line here which says import decrypt could not be resolved because we haven't installed this package using pip on our project so let me just close all these terminals i just want to use one terminal which is the command prompt and let me uh clear this command prompt here right so in order to create a new virtual environment you can type this command so python hyphen m then v n and then n and then press enter which is going to create a new virtual end for us and you will be able to see uh this warning which says we noticed a new virtual environment has been created do you want to select it for the workspace folder so when i choose yes here see what happens when i choose yes you will be able to see this virtual env is listed here so with my python interpreter this end is also visible you can see and we end right so now i can choose between the virtual and also from this interpreter list okay so you can choose your virtual and also so to activate this virtual and i can give this command and then press enter which is going to activate my uh virtual end and you will be able to recognize using this so if you see the name end here then you have activated the virtual and so if you see the name of your virtual environment that means it's activated and then we can just install this package here so i can just write pip space hyphen q install bcrypt which is my package which i want to install and once i have installed this package you can see the squiggly line is gone that means i can just use this decrypter package in my script easily now right so now i can just uh type python command and then the name of the file which is test 2 dot p1 py right so that is test2.py and then press enter which is going to run this script and it runs successfully also when you are done you can just type deactivate which is going to deactivate your virtual environment so i can type deactivate and then press enter and now i'm in my normal command prompt also once you have created the virtual environment you will be able to see this directory here and right so all the configuration you will be able to see here and of course you will have the track of your files in your version control inside your visual studio code editor using the source control option so if you have installed git it's going to show you what changes you have made and it's going to help you to commit your code push your code pull your code from github or any other repository easily inside the visual studio code the last option which i want to show here is let's say you don't want to just run and debug you want to create a launch dot json file for debugging you can click on the create a launch dot json file and then click on python file and it's going to create this launch.json file so as i said so as i said you have the information about the console here the program which you want to run and then the request is here the type is python the name will be python current file and if you have created multiple debug files you will be able to choose those files or configurations using this uh list right and when you go to the explorer you will be able to see this uh launch.the json file which is created under dot vs code uh folder so this is a hidden directory and you will be able to change the content inside it using this launch dot json file so that's it for this video i hope you have understood the basics of getting started with python on visual studio code i hope you've enjoyed this video and i will see you in the next video