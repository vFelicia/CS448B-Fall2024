hello guys welcome once again in this video I'm going to show you what is function overloading and how we can use function overloading and what is the logic of using function overloading so I will take an example which I have already used in our earlier uh programs so I will make a function to add two numbers so I'm not going to return anything and I will make a function and and this will add two numbers so I will give int first number and int second number okay and I want to print the sum of these two numbers so I will say see out sum of integers is equal to and then I will add these two numbers first number plus this second number okay and then I will just give a end line and that's it so what I want is I want to add two numbers that's easy what I will do is I will just call this function sum and then I will I can add two numbers like this 235 and 675 for example and it will add these two numbers and show the result here right so when I compile this program and run this program it will work fine as we have expected okay like this but what happens when you want to add to decimal numbers so what are decimal numbers or what are FL float numbers decimal numbers are 265 756 and 265 something like this so what happen if you want to add decimal points and you want to add integers also and different kind of numbers and when you compile this program it will be compiled fine but when you run the program it will only show you the integer values and not the decimal value and this result is wrong because we wanted to add two float values and show it show the result as a float value so now the concept of function overloading comes so according to function overloading you can declare a same function with a same name two times or more than two times with different arguments or different return type so for example this function is adding two integer I can just copy this function and paste it just below it to add to float so I just change the Declaration here float and Float okay and now when I run the program I will compile it showing the error because now the program doesn't know which function you are using is it initialized by this integer or is it initialized by the float value so what you can do is you can declare two float variables so I will declare float a is equal to and Float B is equal to colon and I will just pass these two values here a is equal to 265.0 and B is equal to 67576 and I will pass A and B as an argument so now we have implicitly specified that the this A and B is a float value so then your program knows that okay I need I have been there are two parameter which are float uh inside my which are passed as a parameter in me so I will go to this function and and see which parameter can take float and you can see these parameter can take float so then this will this program or this function will be executed right so I will say here float the sum of float is this plus this now for example once again I will declare to int X is equal to some integer and Y is equal to some other integer and once again I will call sum X comma y so these two functions this time the function which takes the integer will be executed and when you use integer as a parameter integers as a parameter and when you use float as a parameter this second function will be used okay now I will build my program and I will run it and now you can see both result first is the sum of float that means we are in this function and it will show the result and then the sum of integers that means we are in this function sum of integers is equal to whatever the sum of these two integers here right so this is how you can use function overloading you can declare a function with the same name more than two times or more than once and you can pass different kind of parameter inside this function or you can return different kind of parameter from this function and whenever you pass float inside this it will work as this function and whenever you um pass integers it will know that you have passed integers so it will use this function so in this way you can declare multiple function with the same name to use them differently so I hope you have understood the concept of function overloading and I hope you have enjoyed this video please wait comment and subscribe and bye for now