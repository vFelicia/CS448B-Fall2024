hey guys welcome to the next video on numpy tutorial for beginners in the last video I have given you a brief introduction about numpy and we have already seen that how we can install numpy using pip and how to add numpy library to our PyCharm project now to go ahead I will be using the PI charm IDE but you are free to use any other IDE or the editor so in the pycharm IDE what I'm going to do first is I'm going to just open the Python console by clicking on this symbol which says python console and i'm going to maximize this console because we will be using this python console for this lesson so we have already added the numpy library to our project and we can import the numpy library to the python console also so i'm going to just write import numpy as NP and then what we are going to do in this video is we are going to try to compare the Python list to the numpy array and we will see the similarities or the difference between the number array and the Python list so to start with I'm going to declare a Python list and let's assign some values to the list let's say 1 2 3 and I'm going to declare the numpy array and I'm going to name it as n/a and we are going to just say NP dot array and we will pass the list content to the array function so we have numpy array and the Python list and they contain same number of elements now what is the basic operation we perform with the list or an array we iterate over the list and the array so we are going to iterate over the list first of all so for I in L and we are going to print the value of I and let's see what happens when we iterate over the list so result is expected it's going to print the content of the list and same we will do with our numpy array which is to iterate over this array and the result is same as the list so we can iterate over the numpy array or the Python list using a for loop so at this point these two things look similar now let's try to add some elements to the list and the number array so first of all in order to add something to the list let's say I'm going to declare the variable l1 and I'm going to add something to the list and this we can do with the concatenation operator so let's say we want to add 4 to our list and then transfer the result into l1 and when we see the content of l1 you will be able to see that 4 is added or appended to the list now there is one more way in which you can append an element to the list and that is by using the append function so let's say I want to append 5 to this list l1 I can do that and see the content of the list so now our list contains 1 2 3 4 5 so 5 elements let's try to do the same with the numpy array so I'm going to just use the and a 1 and then I'm going to try to concatenate the an a with some elements so let's try to add 4 to the number array and I'm going to just see the content of any one and you can see this is not the expected result so in case of numpy array when we use this plus operator it will do the vector addition so basically what we are doing is we are adding 4 to eat and every element of the array so as we already know that the content of the numpy array was 1 2 3 and when we add 4 to each element it becomes 5 6 & 7 and that is the result you are seeing here so in this way numpy array and list behave little bit differently now let's try to use the append method on the numpy array so I'm going to just write any dot append and we will try to append let's say 8 to our list and then press ENTER and it's going to give us error because this append method is not even there inside the numpy array so at this point it looks like that lists are winning over the number array but as soon as we try to do the vector addition or matrix operations we will see the differences between the number array and the Python list so as I told you in the last video that generally we use numpy to do operation on the n dimensional array so for example if you want to do the vector addition of let's say numpy array to itself what we can do here is I'm going to declare one more variable and a 2 and then we can do na plus and here and it's going to give us the vector addition of these two arrays so I'm going to just see the content of n a2 and you can see it has given us the vector addition of any plus na which is 1 plus 1 is equal to 2 2 plus 2 is equal to 4 and 3 plus 3 is equal to 6 now in case of Lists as you have already seen that when we perform the concatenation operator it's going to just append to itself so let's try to do that also so I'm going to declare the l2 variable and I'm going to just do the concatenation of L plus L and when we try to see the content of l2 it's just the appending of those two lists but it's not the vector addition so if you want to perform the vector addition on the list what we can do is we can just define l3 variable and we will assign the empty list here and then we will iterate over the list using the for loop so for I in L and then we are going to just say L 3 dot append and we are going to append I plus I which is this variable to the list 3 or l3 variable and then when we see the content of l3 you will see the expected result which is 2 4 6 which is the vector addition of L plus L now let's try to multiply a scalar with the vector so we have an umpire array and I will just multiply it by 2 so I'm going to just write 2 Astrix and a and then press ENTER and I can see the error because n a should be in capital so once again I'm going to just write 2 multiplied by n a and then press ENTER and it's going to give us the multiplication of a scalar which is 2 with the vector which is numpy array the similar operation when we perform on the list let's try to do that so 2 multiplied by L and then press ENTER you can see the result is the repetition of L multiplied by whatever scalar you right here so L is just repeated two times in case of multiplication so in case you want to do the scalar multiplication with the vector once again you need to iterate over the list and you need to multiply each and every element of the list by 2 as we have done with the vector addition let's try something else so let's say we want to find out the power of something so I'm going to just say an A and then we already know that when we use double Astrix it means ne to the power whatever we write here so ne to the power 2 and what we get here is the squared result of every element so 1 4 9 here and when we do the same thing with the list it's going to give us some errors so let's see what error we get and you can see this operation is not supported so we can not perform this kind of power operation on our list so if you want to perform this power operation on the list you need to use the for loop once again and in that way numpy array is a little bit easier to use and you just need to use the operation whatever you want to perform and this operation will be performed on each and every element of the list now you can imagine if you want to perform the similar operation vector addition or addition of scaler and the vector or the power operation to each and every element of matrix which is a two dimensional array then how difficult it will be to perform on a list and how easy it is to perform on numpy array so if you want to square each and every element of the list you can just write 4i in L and then what you can do is you can just square each and every element of the list so I'm going to just write print here and then I'm going to just say I multiplied by I and it's going to give us the square result of each and every element of the list which is 1 4 9 and you can just append this result to a new list which will give you the similar result as we have seen in the case of numpy array now let's say you want to perform the square root on each and every element you can use s qrt function and then pass your an umpire array variable to it it's going to give you the square root of each and every element you can also find out the log of each and every element so you can just say log and then pass the numpy array here and you will find out the log of each and every and you can even find the exponential of each and every element using the exp function and then passing the numpy array to it and you can see it has given us the exponential of each and every element so here we have seen some similarities and some differences between the Python lists and numpy arrays but this doesn't mean that numpy array are better or Python lists are not better both have their importance sometimes you need a Python list and other times you need an umpire arrays usually you can treat a Python list as an array but you can treat numpy array as a vector that means you can perform the vector operation on the numpy array and as we have already seen to do operations on every element of the list we need to use the for loop and in case of numpy array we can do it in much easier way loops are slower than numpy array operations that's why also we use numpy arrays so at the end I will just say that if you want to perform these kind of mathematical operations on a list or an array numpy is not just more efficient it is more convenient to use because you get a lot of vector and matrix operations for free which sometimes allows us to avoid unnecessary work which is required in the case of Python lists so that's it for this video I will see you in the next video