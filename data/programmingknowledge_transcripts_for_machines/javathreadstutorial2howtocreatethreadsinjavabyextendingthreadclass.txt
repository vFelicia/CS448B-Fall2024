hello guys welcome to the next video on Java thread tutorial for beginners in the last video I have given you the overview of threads in Java and I have told you in the last video that you can create threads in Java in two ways one is by subclassing from thread class and other way is by implementing the runnable interface and in both cases you need to implement this run method so in this video I'm going to show you this first way of creating class by subclassing from the thread class so let's uh go to our Eclipse IDE here I have a blank project whose name is thread demo and inside this uh project I'm going to create a package and I will name it as lesson one for example and inside this lesson one package I'm going to create create a class called demo and it's going to have this main method and I'm going to finish it now as I told you we want to extend from the thread class in order to create a thread so I will create a class and this class I will name it as my class which extends from a thread class second thing we have learned that we need to implement run method in order to create a class right so to implement this run method you can just write click and go to source and in Source you can go to overwrite SL Implement methods and in here you can see all the method you can override or Implement and the method which we want to override is this run method so click this and click okay and it's going to implement it now right now we don't really need all this uh you know autogenerated code so you can delete it or leave it it's on you what I want to do is I want to uh for example perform some code for example I want to print some number 10 times right so int I is equal to 0o and I should be less than zero and I ++ and I want to print the value of I 10 times this is very simple so I will just write thisis out and in here I want to print the value for example Value Plus I and what this is going to do it's going to just print the value of I right so now we will go to our main method in our demo class but first of all let me correct this it should be less than 10 I should be less than 10 right it should not be less than zero so let's go to our main method in our demo class and we can create an instance of this my class and we can call it my class is equal to new my class and you can use this my class object and call a method called start on it so remember you don't need to call run method from your my class but you need to call a start method if you call run on your my class object it's going to run like a normal program no thread will be created but if you call the start method on your my class object which extend from the thread class is going to create a thread and then it's going to call this run method automatically so let's uh run our Pro program now so just run it and what it does it prints 10 numbers right or 0 to 9 right so nothing special how will you know that uh threads is really running so what we can do is we can create a second instance of my class and we can call it my class one for example so we have created two instance of my class one is this one and one is this one right and and now let's run the program and what it does it's printing value zero two times value one two times and here you can see threads in effect right so what's going on you have created first thread and you can have created second thread and first thread is called first and then second thread is called first and then they are running congruently to print print the number values now how will you know which thread is calling which value here so in order to know that there is a function in the thread class which we are going to call in our this print line method or system out method uh and just call thread. current thread. get ID okay and it's going to give you the current tread ID okay and then you will know which thread is running or which thread is printing which value so let Let's uh run the program once again let's run it and now you can see what is happening here so here you can see the thread number so the number is given to the thread and in this case the number 10 is given to the thread one and number 11 is given to the thread 2 right and it's using thread 1 and printing value 1 2 3 4 5 6 until 9 and it's going to take the thread two and it's printing the value from 0 to 9 right but they are running in sequence right now now in order to check further that these uh threads can run in concurrency uh what we can do is we can use a method CL called thread sleep so just use a method thread do sleep leap and what it does is it takes an argument which takes milliseconds so for for example we want to pause this thread for 100 milliseconds it's going to pause this uh you know method for 100 milliseconds but when you uh call this method it's going to ask to enclose it in the TR catch uh block because it can throw okay so I just click this small but bub here and then just click this surround with try catch and it's going to surround it by try catch right and now let's run it once again so let's run the program once again and now you can see first of all first thread is called and then the value zero then second value zero then first then second then first then second so in this way you know that they are running in concurrency or so in this way you can create a thread or create different threads by extending from the thread class in the next video I'm going to show you how you can implement this runnable interface to create the same threads so I hope you have enjoyed this video please rate comment and subscribe and bye