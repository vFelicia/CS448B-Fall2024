hello and welcome back to the new video of the maven tutorial Series so till now we have covered about uh post introduction and the software that I required for running the maven projects on your PC all right so for this video I will be discussing about Maven life cycle and basic mapping commands so these are the commands that you must know to work with the maven project and how actually the maven life cycles means how the projects that is being you built using Maven works or throughout its life cycle okay right from the validation and till the deployment Point okay we will cover all the points over here okay so Maven is a quick introduction for those who haven't seen previous videos uh Maven is a powerful project management tool that is based on form that is Project object model used for project build dependencies and documentation it is a tool that can be used for building and managing any Java projects okay and Maven makes the daytoday work of Java developers easys and help with the building and running of any Java based projects so if you are trying to build any project that uses Java then you can go for the maven it will quickly do your uh all the tasks of managing those dependencies building the project and documentation part okay and so let's go and see one by one uh each point so first point comes is the default Maven lifecycle consists eight major steps or phases for compiling testing building and installing a given Java project as a specified below so these are the eight steps first is validate compile test package integration test verify install and then deploy okay so first is validate in this step it validates the project if the project structure is correct for example it checks if all the dependencies have been downloaded and are available in the local repository so we'll see what is local depository and repository and what is the palm.xml file so we'll have a separate video on form.xml file will where when we will be discussing all each and every tags of of that XML file and in detail we see how how the form.xml is important in Maven okay so next is compiled it compiles the source code and converts the java.java files to dot class files so since we are using the Java programming language to build our project so there there must be a DOT Java files that you create for your project so that those dot Java files need to be converted into the dot class file that is the byte code which is machine understandable code the Java converts jvm converts to be a more precise and it and it stores the classes in the Target slash classes folder so this is the folder where all those dot Java files are converted into the dot class files and got stored in the Target and then inside Target folder there is a classes directory where it stores okay so next is the test it it runs unit test for the projects so you at this phase it will run the unit test that you have defined for your project and we'll see how to define it and how to use it and how to run it okay so package this this step packages the compiled code and in a distributable format like jar and ojar or what so it converts the yeah that code into the distribute distributable format like jar and War okay so integration testing uh it runs the integration test for the project uh we'll see how it runs the integration testing also and where the next step is verify this step runs checks to verify that the project is valid and with so called quality standards so the quality standards are being checked in the verification step and then comes the installation step this web installs the package code to the local Maven repository there is a look uh there is one local manual repository where all these uh packaged code is being installed over there okay and then is the next deploy it copies the packaged code to the remote repository for sharing with with other developers so here last comes the deployment phase so where it converts the code to the pack it copies the package code to the report remote repository by using which you can share that share it with other developers which are there in your team or company okay so these are some uh Maven life cycles build life cycles and then comes we'll see how some basic mapping commands Okay so first come the mvn clean okay it cleans the project and removes all files generated by the previous build so when you do perform one build uh it creates that uh folder and when when you again do some changes and we are you again build that project again install that project then it again creates that those folders again so if you're using MV and clean it cleans the project and removes all those previous build build files okay so an mvn compile it compiled the source code of the project again mvn test compile it compile the test Source Code mvn test run the test for the project uh they do are defined and mvn package creates the jar uh or warp file for the body and convert it into the distributable format as we discussed above and mvn install uh deploys the package jar file to the local repository and MV and side generate the project documentation so next is mvn validate validate the Project's form and con configuration so as I said as I told you pump file uh form dot XML file is the very important file for the maven projects again we see in depth with one separate video so stay tuned so mvn uh idea colon idea colon generate project generates the project files for the IntelliJ IDEA or Eclipse so if you are using any IDE uh that is Intel GID or Eclipse any one of this so you can use this command right so ambient release uh perform performs the release build okay and mbn last come mvn deploy it copies the package jar or War files to the remote repository after compiling running and test and building the project okay and so oh so this is the command that we write MV and clean install and why we write clean because uh it by using this clean we can remove all those previous build files and it will remove all those files which are pre uh came from the previous build it will delete and creates the new uh files for the new build okay so this is the idea behind the maven life cycle and Maven basic Maven commands so in our upcoming video we will see you we will start working with the maven actually and start start creating a project a basic project just to understand and just to give you clear idea or how Maven works we will start working on a project from the next video so thank you for watching this video and I will see you in the next one