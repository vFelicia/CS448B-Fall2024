hey guys welcome to the next video on Jenkins tutorial for beginners in the last video we have seen how we can create our first Jenkins job now in this video we are going to see how we can configure our Jenkins job so that we can run our Jenkins job remotely or how to chain the job execution so let's see them one by one so I have created this HelloWorld Jenkins job in the last video so I'm going to click on this job and then I'm going to click on configure to change the configuration of this Jenkins job now when you reach in the configuration area just click on build triggers and what this bill periodically trigger was doing is it was triggering our job in a periodic way depending on the cron scheme we have provided here now let's say we want to trigger our job remotely then for that we can choose this option which says trigger build remotely so I'm going to choose this checkbox and I'm going to uncheck this build periodically checkbox and here you can see this option which says authentication token and you will also see this message which is a very helpful message which says use the following URL to trigger build remotely so this will be the URL format you can use to trigger the build remotely so I'm going to copy this URL and I'm going to paste it into the next tab so here first option here is Jenkins URL so here you can give the IP address of your server for example right now it's localhost so I can just write localhost and then the port is port 8080 or if you have the IP address of this server then you can write the IP address of the server so for the local host instead of localhost I can just write 127.0.0.1 or any other server IP address on which this server is working on now the next thing here is the token name in capital so this token name is I'm going to go to my Jenkins job configuration and this token name is the token name which you will provide here so for example you can provide any complex password or anything here which will be your token name so let's say I just write here one two three four five and I'm going to save my configuration and then I'm going to go to my next tab and instead of the token name I will just provide the token name which I have given for my Jenkins job which is one two three four five right now let's go to the Jenkins job once again and I'm going to go to the home page of Jenkins here you can see the last success was in build 24 and when I click on this job you will be able to see the build history so the last job was 24 so let me go to the next tab and I'm going to just give this URL and then press ENTER which is going to execute my job so I'm going to just give my username and password here once again and then I'm going to just say remember me for this computer and then login and once you do this and when you go to that Jenkins job and when you refresh it you can see the last bill was bill 25 which is triggered using this URL okay so once again I'm going to refresh it and I'm going to just give this URL once again on the next tab and then press ENTER and you will see in a few seconds the new build occurs so this is how you can trigger your build remotely now the next thing I want to show here is how we can change our Jenkins job execution so let's say we a scenario that we have created this Jenkins job which was compiling the Java program and running it right so let's say we want to create few Jenkins job one Jenkins job we want to create is to build our Java program second is to run our jog of Java program and in the third Jenkins job let's say we want to just display the success message so for that we need to create two more Jenkins job and first of all we need to change the name of this Jenkins job which is hello world so we will just rename it to HelloWorld build first of all and then we will create HelloWorld run Jenkins job and HelloWorld success message Jenkins job or sorrow world message job so let me show you how you can rename your Jenkins job so you can see the option here rename which you can use to rename your Jenkins job so instead of using HelloWorld Jenkins job name I want to rename it as HelloWorld build so I'm going to just write hello world build and then I'm going to just click on rename which is going to rename my Jenkins job to HelloWorld build now let's create two more Jenkins job one is HelloWorld run so I'm going to just click on new item and here I'm going to give the name of my Jenkins job this will be the HelloWorld run now one more way of creating the Jenkins job if the jobs are relatively similar then you can copy the configuration of the old Jenkins job into the new Jenkins job using a copy feature and when you scroll down here you will see this option which says copy from and here we can just write hello world build which is the Jenkins job from which we want to copy the configuration to HelloWorld run job and when you click OK all the configuration of hello world build will be copied to this Jenkins job which is hello world run and here we can just change the description so this job is only going to run the Java program so I'm going to just change it to run Java program and when I go down a little and in here I'm going to remove this line because this line was compiling or building or Java program and this we are already doing in the hello world build Jenkins job and this is hello world run so I'm going to just remove this and I just want to run the executable file which was created by a hello world build and this is the hello world run Jenkins job and now I'm going to click on build triggers and instead of using this option which says trigger build remotely we want to build our Jenkins job after the success of the previous job which is hello world build so I'm going to just copy the name of the Jenkins job after which I want to execute this HelloWorld run Jenkins job so after hello world build I want to run HelloWorld one Jenkins job so just check this checkbox and just write the name of the chenkin job after which you want to execute your hello world run Jenkins job and then I'm going to just save my configuration and I'm going to go to the home page and you can see there are two jobs now one is hello world build and another is hello world run I need to change the configuration of hello world build also because now we just want to build our Java program using this Jenkins job and not run it so I'm going to just remove the description here for run I just want to build Java program and in the build trigger let's say we want to just trigger this build remotely or we will just click on the build now button and execute the bill so I will not change this and when you scroll down a little from here I will just remove this Java HelloWorld command because this we are doing in HelloWorld run Jenkins jobs so I'm going to just remove this last command and save this so now both the Jenkins job have been created you can create one more Jenkins job and chain it in a similar fashion so let's create one more chenkin job and this Jenkins all I want to name it as hello world let's say message okay so this is going to just print the message of the execution and I'm going to just say freestyle project and I'm going to just say okay I'm not going to copy the configuration and in the description I'm going to just a display message and in the source code code management I will leave it as none in the bill triggers this will be executed after the hello world run Jenkins so I'm going to just check on this checkbox which says build after the other project build and here I'm going to just write hello world run I'm going to choose this option which says hello world run so this Jenkins job will run after hello world run Jenkins job is executed and now I will just scroll down a little and in the build section I will just choose execute shell and here I will just echo something so I will just write echo and in the double quotes I will just print something which I can recognize so I'm going to just print these echo messages and here in between the lines I want to just say success let's say and now I will just save my job and when I go to the home page now we have three Jenkins job hello world build hello world run and hello world message so let's just start the build of hello world build Jenkins job so for that I can just click on this little arrow here and I can just say build it now which is going to start the build of hello world bill and you will see after some time you can see this is in the queue so hello world run is in the q so as soon as my hello world bill is completed the hollow world run will be executed and now you can see hello world message in the is in the queue because hello world run is completed so hello world message will be executed after the execution of hello world run and when i refresh this page now you can see here build number 27 last build was build number 26 and then after this build was successful hello world run Jenkins job was triggered and you can see the build number one was triggered and after the success of hello world run hello world message was triggered which is triggered by the success of the hello world run and let's see the messages also so let's go to the hello world build first of all and then let's see a build number 27 and console.log and just build the the hollow world java program it's a success and now let's go to the hollow world run which is going to just execute our executable file and let's see in the console it prints hello world it executes our hollow wall executable file using Java HelloWorld command and in the last Jenkins job which is going just to print some message we can just go here hello world message and then when we go to the console output of this you can see this echo command and it echos success so this is how you can change your job execution on success or failure of the last build so I hope you have enjoyed this video please rate comment subscribe and bye for now