hello guys welcome to the Android SQLite database tutorial for beginners in this video series I'm going to show you how you can get started with SQLite using Android we will look in this video series how we can create a database and perform some database queries like insertion updation or deletion or other basic queries on SQLite database using Android so let's get started and let's see some important stuff regarding SQLite on Android so first of all what is SQLite as you all know SQLite is our database which is an open source database so you can use it for free and it's a relational database okay and the most important feature about SQLite database is it's a local database so it doesn't require any server or any ODBC or JDBC queries for query or connection for its you know functionality it's just you can say it saves its data into a text file and it's saved locally on your you can say mobile device or your tablet or whatever Android device you are using and Android comes with the built in SQLite database implementation so you don't need to install any extra libraries to use SQLite with Android and the last point is to create update a database in your Android application you can create a subclass of a class called SQLite open helper this is a class which will help us to create and you know manage our SQLite database now enough the theory let's go to the practical part and let's start with creating our app from scratch so just open your Android studio we are going to start a new Android application and we will name our application as SQLite app for example and then click Next or select your minimum SDK as you already know how to select it click Next and I'm going to select a blank activity next and main activity is OK for me so I'm going to finish now once your basic app is created what we are going to do is we are going to create a class for handling the SQLite database so go to your app folder and in the app folder go to the Java folder and inside here go to the package in which your main activity is there so this is a package in which my main activity is there so just go to the package and rightclick this package and we are going to create a new Java class and we will name it as database helper class ok and click OK and this is a basic blank class and in here as we have discussed we want to create or we want to extend this class using our SQLite open helper so just go here and just write extend SQLite open helper ok and it will show some error because we haven't imported the classes related to this SQLite open helper so just click alt enter and just click this button called import class and it's to import this class okay still it's showing error because we need to create or implement some of the method from it so you will be able to see a small bulb red bulb here you just need to click this bulb and then you just need to click implement methods and there are two important method related to this class which are on create and on upgrade you are going to select both of them and click OK and one more thing which is required is to create a default constructor so once again click this red bulb here and just choose create constructor matching super ok and we are going to select first of them and just create it ok so we have successfully created our database helper class which extends from our SQLite open helper which is the main class for handling SQLite and we have some basic methods here and a constructor now for creating our database first of all we need a database name now let's see how we can you know of how we are going to create our database and what will be the name of our database and all other stuff so for this for example to start with we are going to create a SQLite database like this and the name of the database will be student dot DB the SQLite database is not casesensitive so you can use upper cases and smaller cases are together and it's not case sensitive so case doesn't matter in SQLite okay so the our database name will be a student dot DB and it's going to contain four columns first 4i d for the student second is the name of wonder student third is the surname or last name for the student and fourth column will be the marks scored by the student and we are going to create database or insert some data like this so ID will can be one two three four for example name surnames and Marx code by this student and in this video we will just see how we can create this database which is student dot DB and create the table this table for our database okay so now what we are going to do is let's declare some variables so that we can define the name of our database so let's declare our variable which we are going to assign the database name okay so let's declare public static final string and let's declare a variable name called database underscore name and we will assign the name of our database for example student dot DB student dot DB and I have told you that case doesn't matter you can you know write student dot DB don't like this or in capital it doesn't matter it's going to treat them as same okay and second what we are going to do is we are going to declare our table name so this will be our table name and let's give the name to our table as student data table or student table which will resonate perfectly with our table and as we have discussed this table is going to contain four columns one two three four and for simplicity let's key all the variables as string first column name was ID okay so ID for the student and the table name is column name is ID right so or you can do something like this call underscore one call one is ID and similarly column two column 3 column 4 so like this column 2 column 3 column 4 first day first column was ID 2nd column was name 3rd column was surname and 4th column was marks ok so these are the four column this is our table name and this is our database name now in order to create our database first what we are going to do is we are going to in the constructor we are going to create our database so we need to call a function which creates the database right so for simplicity let's reduce our constructor which only takes this context ok and as you can see here the superclass we can just give the name of our database our database name is this variable pass it here third is factory we are going to pass null here and the version for example version is equal to 1 now whenever this constructor is called your database will be created ok now in order to create the table inside your database we are going to create a table whenever this on create method of this class is called ok so you can see the SQLite database class is the argument in oncreate right so we can just take this DB which is a variable of SQLite database dot execute SQLite or exact XQ light or sq so take this instance DB and call a method called dot exact SQL and what it does is it executes whatever query you pass inside this method as an argument so it takes the string variable or a string query so here you can prepare your create table query and then whenever it's called it's going to execute this query and it's going to create this table okay so let's write our query for example create the table name source create table and the table name in our case is this one so you can use this concatenation operator to concatenate this and then inside your brackets your column names comes right so first column name is ID or you can just take these these names column 1 column 2 column 3 and column 4 here so inside double quotes and plus plus you can write column 1 and then let's write our query first and let's forget about these variables so let's understand first how this query is written and then we can insert these variables here ok so just write create table and your table name and then in the brackets comes the ID which is the first column name and then comes the attributes of this column so it will be integer and it's going to be my primary key by primary three means the unique key which you will be able to identify the tail rose okay and then it's going to Auto increment Auto increment means it's going to increment automatically even if you don't provide any data for it okay the second column a name is name itself and the attribute or the data type for this is text for example the third column will be surname and the data type is text for it also and the fourth column is the marks column so marks and let's create it as integer so we have created a table using this query so this query is create table and your table name is student table and in the brackets we have provided four columns to it ID which is a primary key and it's going to auto increment name which is a text surname which is a text and mark which is integer datatype okay now one more thing which we can do is in the upgrade method we can once again call this exact SQL so this is the object we can use dot exact SQL and in here we can just drop our table if it exists in case of upgradation so drop table if exist and the table name is this one so you can just copy and paste like this okay and once again we are going to create this table so you can now directly call on create here on create and pass this DB instance now once this is done what we are going to do is this is just for checking we are going to write a single line of code so that our database is created and the table is created also so just go to the constructor once again in here and just create an instance of SQLite database which is the same as this and we will name it as DB is equal to this dot get write table database okay and what it's going to do is it's going to create your database and table and in next video we are going to remove this line we have because we are going to write our code to insert the data into the database so this is just for checking our database helper code is done I think just one more little change which I would like to do is this key spelling is wrong it should be ke by instead of ka Y and now what we are going to do is we are going to take this database helper class and create an instance of this database helper class in our main activity dot Java class so copy this last name go to your main activity dot Java file and create an instance so write the name of your class and the instance name for example my DB and now in our on create method of main activity dot Java file you can just create a new instance so my DB new and then new database helper okay and this takes one argument which is the context so you can just write this and everything will be fine now once everything is done what it's going to do is it's going to call the constructor of this database helper class and what we are doing in the constructor in the constructor we are creating the database right and the table okay so once this constructor is called this code is called and it's going to create the database and the table for you okay so let's run our program now our app is running so you can see this activity which is blank activity and it's not going to do anything right now but what it has done is once this activity is invoked it's going to call your oncreate method in your main activity and in turn it's going to call this constructor and this constructor is going to create a database and your table inside your database now to check where your database is created or not how you can check and where where is the location of this database so let's see where can we find this database so go to your Android studio and in here go to this tab called tool and then go to Android and click Android device man monitor okay so click Android device monitor and once your Android device monitor is open you will be able to find your project name in here so my project name or my app name is SQLite app and I can find my app here you can see SQLite app okay once you select this go to the right hand side and in here choose File Explorer form from here okay and in this file explorer' go to the category called data and open it and once again search for the category called data so data go to data and inside data there will be a folder once again called data so go inside that folder open this folder and now you can find your app name here also so my app name is SQLite app I can see here and I will open this folder here and I can see a folder called database and inside this database I can see my database name which is student dot DB so now I know that my database is created now if you are more curious about you know seeing inside this database and you want to see or if the table is really created or not or if once we are going to insert some data you want to see the data if it's there or not I will show you a simple trick which will help you you can export this database to your local PC ok so right now it's in your Android device so you can explore port this database on your PC and then you can you know query this database or you can see inside this database what's inside this database ok so this is just for checking the content of your database by transferring this database to your local PC and see what's inside it so just select your database in my case student dot DB and you will be able to see this small button here which says pull a file from our device so click this and it's going to open a file explorer and then you can select your choose chosen location and save it on your chosen location for example I am going to save it on the desktop and it's going to save it there and then what you can do is you can you know if you have SQLite installed on your windows you can just open your terminal and you can see inside this database one more helpful a tool I'm going to show you in order to see inside this database and this tool is called SQLite manager which is a Firefox plugin so if you have Firefox browser it's going to help you a lot what you can do is you can open your Firefox browser and go to the settings here and go to addons and search for an addon called SQLite and it's going to search for this SQLite many the manager zero point eight point three you just need to install it just install it and then restart your browser and once your browser is restarted you can go to settings once again and then go to customize here and in here you will be able to see this tool SQLite manager you can draw drag and drop this in to your you know tools here and then exit customize and now you will be able to open this from here so just open SQLite manager click OK and now you can browse your database so my database is on the desktop and make sure you select all files from here ok so you will be able to see this dot DB file ok so select all files from here and select your database and open and now you can see this database and there is a table called student table which we have created and this table is containing four columns ID name surname and marks code by the student ok and you can browse the type integer txt text integer which we have provided and our ID is a primary key you can see so database content you can see using this SQLite manager okay so this is a simple little trick which you can use in the last video we have seen how we can create a database which is a SQLite database using Android now in this video we are going to see how we can insert some data into our table inside that SQLite database so let's get started first of all go to your activity main dot XML file and go to the design tab there in the last video we have created this is a blank activity right so go to that activity and then we are going to drag and drop some text views here and added texts here so that we can use them to insert some data so what I'm going to do is I'm going to drag three large text here and three plain text and now we are going to change these large text label as the column names of our table so first is name second is surname and third is marks if you want you can change the ID names of these text views and added text also so for example this is for text view for name now you may be thinking that we have four columns in our table first is ID second is name third is unsername and fourth is mark but we have taken only three you know three variables here or three text views where is the ID text field and added text if you remember we have defined ID as Auto increments so it will increment automatically when you insert some data inside your table so we don't need to add this ID specifically okay now what we are going to do is we are going to take a button and we are going to change the text to add data and we are going to check change the ID to button add for example okay and that's it for the design part now what we are going to do is if you remember in the last video we have created a class for handling our database and the class name was database helper class so go to that class this was the code which we have written in the last video and now just go below and now we are going to create a new method to insert data so let's create this method this will be the public method and it's going to return boolean and we will name our method as insert data for example and we are going to add three arguments to this method first is for name second is for surname and third is for marks right so let's add now once this is done what we are going to do is first of all we are going to create the instance of SQLite database but if you remember last time we have added in the constructor of this database helper this extra line so that we can see the database created okay so now it's time to remove this line so just cut it from here and the constructor will be like this okay so just remove that extra line and you can paste the same line here because we are going to create use this SQLite database instance in our insert data method okay so just paste it here now the second thing which we need here is the instance of a class called content value so just write content value and the variable name is equal to new content value just press alt enter to import the required classes and now we are going to take this content value instance and we are going to put some data into the columns so just write content value dot put and it takes two argument first is the column name in which you want to insert data and second is the value itself so our column name first column name for name was column two you can see here so column two comma the value which we are going to pass so this is the value which we are going to pass here okay in a same way we will do the same for column three or the surname column and the marks column right and this will correspond to the value surname and marks value okay now once this is done we can just insert our data using this DB instance DB dot insert and this takes three arguments first is the table name so our table name is this variable so copy this and pass it here second is null and third is our content values okay which we have created okay now how can we know that the values are really inserted into the table or not okay so what we can do is this insert method you can control and just click this method and you can see here in case of error this method returns 1 and if it's successful this method returned and inserted a row value okay so if the data is not inserted this method is going to return 1 to us so what we can do we can define long and then result is equal to the result because this insert returns the result as minus 1 or the inserted value and then we can return this if we can check if this value is minus 1 so if result is equal to minus 1 is equal to minus 1 then we are going to return false else we are going to return true now once this method is created we can just go to our main activity dot Java file here and in here we can define 3 added text variables because we have created an outer and added text so we are going to create 3 valuables for added texts and one variable for our button ok you once these three variables are created what we are going to do is inside our on create method we are going to cast all these four variables three added text and one button you now once our casting is done we can use this button add data variable to call some action right so what we are going to do we are going to create our method public void add data and inside this method we can take this button add variable and call a set on click method so set on click method and in here new on click listener now inside this on click method what we can do is we can call our insert data method here using the instance of this data helper class so in the last video we have created this instance my data so just take this dot insert data now as an argument for this insert data we need three arguments right so we can see it needs three argument first is name value second is surname value and third is mark value right so we will go to the main activity and in for this insert data what we can do is we can take the value from added text so just take the first added text which is added name dot get text dot to string okay the second value will be added surname dot get text dot to string and the third argument will be added mark dot get text dot to string and don't forget to close this and once is it is successful what we can do is we can check if it's successful or not by declaring a boolean variable so bull is inserted is equal to right because this insert data method return boolean value we have made this method to return boolean value if the data is inserted it's going to return true otherwise false so if this is true that means data is inserted right so we can just display some message you otherwise if it returns false then we can print the negative message code for inserting data is done one thing which is remaining is just called this method inside the oncreate method of your main activity so that this method will be called whenever we click this add data button okay and now we are going to run our program so now our app is running and you can see three added texts so we are going to add some name surname and mark and once our data is inserted we can click this add data button and this is going to show at the message if it's inserted or not so click this and it says data inserted right now in the last video I have shown you the trick how you can check whether it's really into inserted or not using this Android device monitor I'm not going to show you how you can do it once again but just follow the trick as we have done in the last video and you will be able to see the data so I'm going to go to my database and I'm going to save this database to my local PC and now I can see this database using the SQLite manager as I have shown you in the last video and now you can see this data is inserted in our database right so in this way you can insert data into your database using Android I hope you've enjoyed this video in the next video we are going to see how we can display this data because it's not convenient to go every time to the database and see it in the Escalade manager so we are going to create some code to display the data using some button in the last video we have seen how to insert data into SQLite database using Android in this video we will see how we can get all data from SQLite database table and show it on your Android so let's get started first of all what we are going to do is we are going to take a button and this button we are going to use to view all data so I'm going to change the text as view all and the button ID I'm also going to change as button now once our button is created what we are going to do is we are going to create a method to get all the table data so we are going to go to our database helper class which we have developed in the last videos and inside this database helper class what we are going to do is we are going to create a new method and this method we are going to call it as get all data which will be a public method and it's going to return a class or instance of a class called cursor and this cursor class we will see what this is but let's create our method first so get all data and it's not going to take any argument for now and inside we will write a query to get all the data now this cursor will show some errors so you just need to press alt enter to import that loss which is cursor class and now what we are going to do is we are going to create the instance of database class just as we have done in the last video you can just copy this first line from the function insert data from the last video and paste it in this new function and then we will create an instance of a cursor class so this is our cursor class and we will name it as for example rs4 result and then we will take an instance of our database and then we will call a rock very on this database so rock weary and if you are know how to query SQLite database you may know how to query all the data from the table so this is a simple query I'm going to write which is select all astir extends for all right from your table so our table name is table name itself which we have defined in the last video so plus table name and then it takes an argument which we are going to pass it as null for now and now we just need to return the instance of this cursor which is our es right so return our es now you may be wondering what this cursor class does you can press ctrl + click on this cursor and you will reach to this cursor class and this cuz a class is an interface which provides the random readwrite access to your result okay so you can see here we are querying the database and the result we are storing it in this cursor instance and using this we have the access to our data right so our get all data is created now we are going to go to our main activity dot Java class and in here first of all we will create the variable for view all button right if you remember we have created this view all button so we will create an instance for this here so and now we will cast this button now once we have casted our button we can use this button object to call set on click listener right let's create a method so it will be a public method and we will say this will return nothing and we will name it as view all method it takes no arguments and in here we can call the object of our view all button and then we can call set on click listener set on click listener and inside this we will create a new on click listener and when this button is clicked we want to perform some action right so what we are going to do here is we are going to get all the data using this function which we have just created which is get all data right so we will use the instance of our database helper class which is my DB which we have created dot get all data right and we are going to save it in the cursor because its returns an object of cursor right now this has some properties this object have some properties if we call this object and we can get the count of the lines so get count and this is the result count we are getting if this is equal to zero then it means that there is no data available for us right from this get all data by querying to the database and then we have to show some message so right now I'm just writing a comment and we are going to create a method for showing message in some moment and then we are going to return if there is no result then we are going to show error and return otherwise if there is some result then we are going to create some string buffer and then we are going to display this data so we are going to create an instance of string buffer and we will name it as buffer is equal to new string buffer and then we are going to get all the data one by one using this re s object and how we can do it we can use a while loop and as a condition of this while loop we can take this re s object and we can call a method move to next so dot move to next it moves your cursor to the next result okay and then we are going to get this result and we will store it in the buffer right so buffer dot append and in this buffer we can append the result okay and how we can append this we can write the name of our call so our first call name was ID and then this and then plus we will use this re s object and then we are going to get the string so get string and then we will pass an index of the column and the index of the column starts from 0 and if you remember our table was containing four columns one was ID second was name third was surname and fourth was mark so index of ID will be 0 index of her name will be 1 index of surname will be 2 and index of marks will be 3 okay so that's what we are going to do so index of ID is 0 that's why we are giving here 0 and then we can just give or change the line to next and we will do the same for the other columns also so of name was one index of surname was two and index of marks is three and let's give double line break to the last column so that when next data is printed it's printed after all line break and then we want to show all the data so let's write the comment so let's create a new method which will be also a public method and it will return nothing so void the method name will be show message it's going to take two argument first is the title and second is the message itself okay so string message and in here we are going to create an instance of a lot dialog builder so just write alert dialog thought builder and we will name it as builder is equal to new a lot dialog dot builder and it takes the argument which is the context so this itself and using this builder we can create a lot dialog ok so we can set our title and set message using this builder to a lot dialog so let's create first of all let's use this builder to set cancel label so set is canceled label so that we can cancel it after its use and then we will set the title so builder dot set title and title will be the title which we get from this argument and then we will set the message so builder dot set message and message will be this message which we will get in the argument ok and then we can just call show method on this this will show our dialogue okay dialogue or alert dialogue so let's just copy this so message function here and first of all if no data has found what we are going to do is we are going to show some message so the title of this message box will be error and we will display nothing found or you can say no data found okay and when the data is found in here we can just show some message that data the dialogue title and the second argument will be the buffer and we need to convert this buffer into the string so just called to string on it okay and now our code is done one more thing which remains is we need to call this view all method inside our on create methods so just copy this view all method and paste it inside your on create method of your main activity okay now let's run our program so our app is running now and when we click this view all button we will be able to see the data so right now we only have one student data so it's showing ID one and name surname and age and we can add some more data for the student and let's add this second student data here and I'm going to click this add data button and data is inserted and now you all the data and now we have two student data ID 1 and ID ok so in this way you can insert some more data and then using this view all button you will be able to see all the data here and in this video we will see how we can update data in SQLite database using our Android app till now we have seen how to insert data into the SQLite database and how to view it and let's add one more button here and this button we are going to use to update the data so I'm going to change the name as update and one more thing we want to do is if you remember our database table contains 4 columns first one was ID second one was name surname and the maths code by the student right and to update the data we need a unique reference of the row so that we can you know tell SQLite that we want to delete the data from this row particular row right because names can be same so if you want to change the name of one person which shares the name with the other person then the data can be changed for both the names if you don't know what is the unique you know row or unique column in this okay so ID we have defined as a unique column for this database table so what I'm going to do is I'm going to quickly add this ID text view and you know added text so that we can enter the ID also so now I have added this ID added text and textview here right now we are good to go so next thing you need to do is we need to create a function in our database helper dot Java class which we have created in the last videos so let's go to database helper dot Java file and in here till now we have created insert data and get all the functions right we will create one more function here and we will call it as update data okay so it will be public and will return boolean so we need to know if the data is really updated or not so we are going to return boolean and we say this function name is update data okay arguments it's going to take is it's going to take four arguments 1st argument we are going to pass here will be string ID 2nd is the string name so basically I want to pass all the four column data to it because our table contains four columns ID name surname and marks right so I am going to pass all the four column data I am going to take it from added text and pass it in this function right now in here what we are going to do is as we have done in the insert data function first of all we will create a SQLite database instance so I'm going to copy this from here to here and second we are going to create an instance of content value okay so let's create that and then as we have done in this insert data function that we were putting whatever data is passed from the argument to this content content using put right so let's do it and one more column we need to add here and this will be for column one right this will be column one and it's IB in our case right because this contains extra ID here now the only difference in this function and the insert data function is the method we are going to use now so just take your database instance now and then call update here and this update will update your date whatever argument you pass here first argument it takes is the name of your table okay so give the name of your table this is our table name of if you remember we have declared table name here right so first argument is the table name right second is the content value so it takes second argument as content value so we take this instance of content value and pass it here third argument is the condition which we want to pass here so what we want to do we want to update data on the basis of for example ID because ID is our unique primary key here and on the basis of primary key we can differentiate data so in here we will write ID is equal to question so we will you know ask whatever ID is passed using this ID parameter we are going to query this and fourth is the value on the basis of which we want to update our data so this is the column name on the basis of which we want to update the data and our column name is ID so you can just write here column name ID is equal to question mark and then in here fourth argument let's go inside this update so just hover over control and click and see it takes the whole argument as the string array right so we will go back and pass string array here right so we can just right here in the curly braces we just pass our ID and we want to pass the new instance of it so new string ID okay and if everything goes well we want to return return true to know that if the data is really updated or not now this is done so what we are going to do is we are going to move to our main activity dot Java file and in here we will declare one more button variable which will be our button for updating so button update okay and then we are going to take this button instance and we will cast it as a button using the ID so the idea of this button is button itself right now so let's change the ID to button underscore update or something like this button underscore update so we know that this button is for update right then we will go to main activity dot Java we already had declared our button for updating so take this button go to your oncreate method where you have typecasted all other tools or widgets is equal to button so we have done casting this button and now we are going to create a function and this function will be public I am going to declare this function here itself void update data for example it's not going to take any argument and inside this function what we are going to do is we are going to take this button and call set onclicklistener on it so got set on click listener and inside this new on click listener and inside this we just need to call our update function from our database helper so this was update function the name was little bit wrong so let's update make it update function right and now what we are going to do is you know mean activity log Java file inside this on click method we will declare a boolean to check if the data is updated and we will name it as is updated is equal to and now we are going to take about my database instance which we have created in our previous videos from our database helper class right so my DB dot of death data and now this update data function takes 4 argument as we know ID name surname and age right and in here we need to declare one more added text variable for ID because we have created this new added text here which is added text ID so let's create one more variable for added text in our main activity dot Java file so that's add for example added text for ID okay and then we take this added text and add to our on create method and we will cast it same as we have done for other added text in the previous videos but the ID here will be for added text ID right so edit text ID right and now we can take this added text ID and pass it in our update data method here dot get text right so it will take the text from the edit text and it will pass to this function same we will do for all of our other added text which was for name surname and marks and the reason why it's showing error because we need to convert this get text to strengths right so dot to string okay add this to other variables also so basically what we have done we have called our update data function and we have passed whatever we are getting from added text right now if this function returns true which is update data then so we will check if Bob is update is equal to true then what we are going to do we are going to show some message right so we can take these messages from our last video by the way in the last video I forgot to give this double equal to so when we are checking equality we need double equal to single equal to we need in case of assigning the values right so I'm going to copy these messages from here and I'm going to paste it here okay so now we will say data is updated or data is not updated in case if it returns false the data are not updated okay now just copy this function and paste it inside our oncreate method so that it can be called when this on treat method is called and now we are ready to run our program so let's run it so now our program is running and we can see when we click this view all button which we have created in the last video that we have two rows of data one is ID one and name is mark and surname is denser and second is Dom right for example I want to update the first letter of the name math I want capital M here instead of small m and same I want to do for this Bentsen here right so what we are going to do we are going to just write the name here so I have corrected the spelling or in the name instead of small M I have added capital lemons instead of small B I've added capital B and other things remain same marks remain same and if you remember the ID of this name mark is 1 this is important here because on the basis of ID we are adding the data right and now we can click this update button just click this update and it says data updated okay so let's check the data once again by view all and now you can see the mark name mark with the capital M and the surname Benson with capital B so our data is updated successfully right so in this way you can update the data in the SQLite database using your Android app and in this video we will see how to delete data in SQLite database using our Android app so let's get started till now we have seen how to insert data how to update data and how to view data in SQLite database so let's add a new button and we will call this button as delete data so let's change the text of this button as delete and the button ID will change it to button delete okay now once we have this button what we are going to do is we are going to go to our database helper class which we have made in our previous videos and in this class we will create a new function and we will call it as delete data function or method as we say in Java so let's call it a public function which will return integer and we will call it as delete data function for sample and it will take one argument and this argument will be the ID of our table okay so we know that we have four columns as I always mentioned in our database table one is ID name surname and age this table we have been working on and we want to delete the data on the basis of ID because ID is our primary key here primary key means the unique identifier on the basis of which we can recognize the data which we want to affect in this case we want to delete this data right so that's why this function delete data will take this ID as an argument now the first thing which we will do is we are going to create the SQLite database object using this get writable database which we have done in the last videos also right so just copy this and paste it here okay and the next thing is we will take this database instance to delete the data so take DB here and we are going to call delete on this database instance and this delete takes three arguments one is the name of your table so let's press ctrl and go inside this delete function first of all and well let's see what it takes so this delete function takes the name of your table and then second argument is the bearclaw's and the third argument is the value which you want to pass as a string array and in return it returns the number of affected rows if the data is deleted or number of rows which are deleted otherwise if no data is deleted it returns zero okay so we are going to use this return integer to check how many rows are affected or if any rows are affected or not and on the basis of this we can print the result right so we will come back to our database helper class and first argument we will pass it as the table name our table name is student table so we will take the table name variable and pass it as a first argument second argument is the clause and laws is in this case is we want to delete the data on the basis of ID right and the ID column name in our case is ID here right so you can take this ID and we want to ask for the ID so we will ask what is the IB like this ID is equal to question and then this question mark will be replaced by the value we are going to pass here as a third argument so this will be the news string array and here we will pass the ID the value of ID which we take from here and this is going to delete your data now we are seeing here I am really returning integer so you can just write return because this delete method in the SQLite database class returns the integer right so this is the method we want to create in database helper class now what we are going to do is we are going to go to our main activity dot Java class where we will write a code for the button press right so first thing we are going to do is we are going to declare one more button variable and we will name it as button delete for example and now we are going to cast this button in our on create method so in here and to copy this and I'm going to just cast this button delete and change the ID so ID dot button delete okay now next thing is as we are always do is we will create a function which will be a public function and it's going to return nothing and we will name it as delete DITA function and it's going to take no argument and in here what we are going to do is we are going to take our button delete variable dot set on click listener and we will create a new on click listener and in here what we want to do is we just want to call our delete data function right so here what we are going to do is we are going to declare an integer variable and we will call it as deleted rows right is equal to and then we are going to take the object of our my database class or database helper class which is my DB in our my case dot we will call this delete data function which we have created just now right and that this takes one argument which is ID so let's see what is the ID of this added text ID so this is added text ID itself right so we will just write edit text ID okay now we are going to take the text from it so we will call get text function here and then we are going to convert this into string right so whatever this function returns we will check how many in number of rows are affected if this deleted rows not equal to zero that means ROS are deleted or better we can say is greater than zero okay if this is greater than zero then what we are going to do I will copy this to save some time and we are going to create a toast which will show the message like this data deleted and if this deleted row is equal to 0 so if number of rows deleted is equal to 0 or less than 0 then we say they turn not deleted okay so this is our function which we want to create in our main activity dot Java file and don't forget to copy this and paste it in your oncreate method so call this function in your oncreate method and now we are going to run this program so let's run it so now our app is running first of all let's see what data we have so we will click view all and right now we have two rows right one is ID one and one is ID 2 so let's delete this ID 2 data for example right so what we need to do is we will just go to this ID added text and we will just write 2 here okay and now what we are going to do is we will just click delete and it says data deleted and we will see once again all the data so we will click view all and now only one row is remaining here so that means it has deleted of a row number 2 or ID 2 data okay in the same way if you write here 1 and click delete it will delete the row 1 or row with ID 1 in this way you can delete the data in SQLite database using your Android app I hope you have enjoyed this video please rate comment and subscribe and bye for now you