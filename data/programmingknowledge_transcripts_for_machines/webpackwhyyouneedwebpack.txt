hello guys welcome back to another tutorial hit the bell icon button so that you don't miss out any tutorial I'd like to welcome you all to this second part of our second set of lessons on webpack sponsored by hu annex my name is Mathew Raymer and I'm looking forward to guiding you through the virtual jungle which is webpack and why you need it to appreciate why you need webpack it's worth making a few observations about how the field of web development has been changing so rapidly on how we do things these days back in the good old days before frontend libraries and frameworks JavaScript development was just a simple javascript file included in your HTML file but now in CSS we have multiple libraries and frameworks to use this situation makes frontend development increasingly challenging the same can be said for the entire JavaScript ecosystem frontend backend mobile etc not only that we have of changing libraries and frameworks to use but we also have module and language standards which have been progressively changing for over a decade from iffy to es6 and beyond now the big three frameworks like angular reactant vu have burst onto the scene over the past few years as well with those things in mind I want to spend a few minutes summarizing how web pack is being used in the web development industry this is going to be a lovefest so do not expect any criticism in this lesson it's going to be all positives but was a little warning message at the end I understand many of these examples are going to overlap in their functionality somewhat but I wanted to at least loosely organize them into categories generally articles on webpack will start with the low level technical benefits of using webpack but I'm going to start with the higher level benefits to developers first of all learning web pack gives you an opportunity to better understand web development in the present time both the features and the problems angular react and vous depend on web pack to build their boilerplates and their readymade app for developers to be able to start coding their prototypes boilerplates rely on web pack because they are built on modules and libraries web pack will allow you to understand how boilerplates work under the hood therefore to understand the modern frontend ecosystem web pack has most of the development industry using it thus information and advice are readily available you pack is still evolving adding new features such as async chunk loading and prefetching as web pack matures so can you as long as you can keep up with the changes ultimately continuous learning is one of the habits that distinguishes good developers from excellent ones web pack offers ample opportunity to learn more in the world of web development so with those benefits to the developer highlighted let's go down the hierarchy of benefits to those benefits which are the the processes of web development if you've worked in development for very long you will have noticed that in theum and yarn appear across the web development landscape not only in JavaScript centric development web pack works perfectly with NPM and yarn providing powerful features due to the vast number of libraries available for NPM and yarn web pack is perfect for importing resources and this leads to a good workflow pattern for development and design we can use webpack to interpret commands where native support for those isn't what it needs to be web pack can speed up development work with hm our hot module replacement your page doesn't need to trigger full reload just to reflect your changes on your JavaScript code CSS code can also benefit from HMR by adding CSS loaders in your web pack config this makes for fast development and cuts back the time it takes for the page to fully load while debugging web pack automates the process of downloading and including modules it is used often in frameworks and libraries you can actually see the benefits in using webpack especially if you're developing single page applications for react web pack can use transpilers such as babel alongside it to transpile JSX syntax into readable javascript code web pack gives you assurance of control over your build system web pack is open to various build systems but with Babel and treasure you will need to transpile es6 + code to make javascript run compatible with older browser versions web pack is also available as a node module which is often used in development mode in conjunction with HMR when used in the form of a node module it is also possible to use webpack with frameworks such as electron J s note electron J s is a runtime framework that allows a user to create desktop Suite applications with html5 CSS and JavaScript you are also able to use the build onthefly in production because node and chrome are available together inside one app for more complex builds tools like jest remove most of the boilerplate and allow development of tests with minimal configuration web pack is compatible with a variety of mocking tools which allow shaping of test environments web pack has a module resolution mechanism which assists tools running to test builds deployment outside of web pack can be done in an NPM script for example output public path property in web pack can be configured dynamically if you don't know before compilation and want to decide during compilation then this technique is useful web pack could consume most NPM packages without a problem web packs module resolution is versatile web pack can pache resolved modules when specific dependencies expect Global's webpack can inject them as needed using webpack can expose modules as Global's this is necessary for certain development tooling webpack deploys to production in a stable fashion you can't accidentally deploy code with missing images or outdated Styles webpack automatically changes file names to hashes of the file contents giving you CDN cache busting no more version issues when developing or building web pack aids in internationalization i18n and localization l10n are important problems if you target multiple markets with your application webpack supports multiple approaches to i18n as a starting point webpack can replace specific annotations although more sophisticated alternatives are available the problem of internationalization can be handled by web pack pushing translations to a server web pack can also allow you to handle translating the actual applications interface language through the same API finally given the state of browser support for various versions of JavaScript web pack is also useful in situations where it's not clear whether the native version will be smart for performance or not now those system development benefits covered let's get to the benefits to application performance webpack can perform fancy magic that results in good performance related capabilities for our websites webpack knows how to concatenate and compress our javascript every way it can be done thereby you can fix optimization issues without headaches it allows you to manage load order which isn't something you want to handle manually web pack aids indead asset elimination you only build only the images and CSS into your distribution folder that your application actually needs this is especially useful in CSS rules web pack allows easier code splitting for example say your file homepage J s only requires specific CSS files web pack can easily build a home page CSS file and so greatly reduce initial file size this is great control over how assets are processed an image below a certain size can be base64 encoded directly into your JavaScript for fewer HTTP requests if a JSON file is too big by a web pack you can load it from a URL you can require style dot less and it's automatically parsed by less into vanilla CSS web pack takes time and effort to master adequately but given time and care it will offer great speed benefits finally let's talk about the etc category for benefits of web pack the line between builder and task runner has become blurred thanks to community developed web pack plugins sometimes these plugins are used to perform tasks that are usually done outside of web pack such as cleaning the bill directory or deploying the build another example is the use of web pack to aid in setting up cuttingedge technologies such as IP FS interplanetary file system API ipfs is a system that aims to make local data accessible across a distributed network normally when using webpack our usual aim is to place the data on a remote server to make that same data available locally in order to do this web pack needs to have a bridge called a Shem over which it can transform data and then write that data to a local file system another interesting place that I recently encountered web pack playing a critical role was the high performance website framework gatsby j/s gatsby j/s leverages react babel and yes web pack to produce static websites with none of the usual limitations now that we covered the etc category let's spend a few moments talking about a little bit of criticism of how developers use tools like web pack large numbers of the developers rely very heavily on boilerplates to get their work done boilerplates is the term used to describe sections of code that with little or no alteration have to be included in many places it is a term more often used when referring to languages which are considered verbose that is the programmer must write a lot of code to do minimal jobs don't get me wrong boiler plates of various kinds are very important roles and in efficient development workflow but the use of boiler plates obfuscates how a system they are simplifying functions webpack capabilities without proper study can also feed bad developer habits but that's enough ranting about developer habits let's bring this lesson to it close if you're building a complex frontend application with many non code static assets such as CSS images fonts etc then yes web pack will give you great benefits if your application is small doesn't have many static assets and only needs to build one javascript file to serve to the client the web pack might not be for you in our next lesson we'll be continuing our discussion by looking at competitors to web pack until next time this is Matthew Raymer on behalf of Eddie onyx signing off thank you for watching don't forget to subscribe the channel if you like the video do give us a thumbs up and share it also check out amazing discounts and offers on our premium poses in the description below