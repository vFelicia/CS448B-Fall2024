hello guys in this video I'm going to show you how you can create your first QT widget application using QT Creator now hopefully you have uh successfully downloaded and installed cute Creator and CT SDK on your Windows operating system and now we are going to create our first QT uh widget application which is going to be a GUI application or graphical user interface application so open your QT Creator and go to files here and then click new file or project and in here you have different type of uh templates to choose with so the first in the left you can see here is application and here you can uh create QT widget application QT console application or a QT canvas 3D application which we are going to see in a moment we are going to create a QT widget application right now but let's see other templates we can create C++ library or QT Creator plugins uh using uh QT Creator or you can also uh create some other projects something like QT unit test or QT quick UI or you can even uh choose this option which is mtq qake Project which is also going to make make uh QT application now if you want to make some uh non QT uh related application something like C or C++ project you can choose this option which is non QT project and in here you can see by default they have plane C application and plain C++ application QT comes with uh the builin minv compiler so it's going to you know use this minv comp to uh compile or build your C or C++ applications or you can import some other projects from other repositories or other locations right so let's create a QT widget application so go to application choose qy widget application and then click choose here and then give the name to your uh project for example my first QT right and then click next and leave everything as default here you can see here we are using QT 5.5 and Min GV compiler right and it's going to be a desktop application so just click next and now you can see when you create a QT widget application it's going to create some classes or one class exactly which is going to be a main window class you can change the name of this class but for now I'm going to leave the name as default which is main window and for this class QT Creator is going to create two files for us one is the main window. Ed or header file and the other is source file which is main window. cpv file in addition the QT Creator will also create a UI file for us which is going to be our designer in which we can design our QT application and this is going to be this file which is main window. UI so I'm going to leave everything as default but uh keep in mind you can change the name of uh these classes and the header files so just click next and if you are using any uh kind of Version Control like sub version or some other version control you can choose from here right now I don't have any Version Control so I'm going to leave everything as default and then click finish and it's going to create our project right now this is our project directly directory on the left and it's going to contain some folders and files so we are going to go through each and every file so just click the first topmost uh file which is my first qt. PR file and in here it's like a make file for your project so in here you going to uh add all the you know files which you are going to use in your project or all the libraries which you are going to use in your project so for example we are uh you know using main.cpp and Main window. CPP files as our source file and our header file is main window. so it's a part of this header and we are using one form file which is main window.i so it's the form uh it's the part of the form right our Target is me my first QT which is the name of our application and these are some of the core files which QT is going to use to build up our application right so in here you add your uh you know files and source files and libraries now we go to the header uh folder and in here is going to contain uh this main window. header file and the source folder it's going to contain main CPP and Main window. CPP and in the form file you have your main window.i when you click this main window. UI it's going to open this kind of uh design interface in which you can pick and place these widgets in this form and create your design right once again when you click the addit you will go to the you know code behind of uh this UI uh designer which is a XML file basically and you you can see it's looking like this now the main entry point of any uh C++ program is the main function right so QT is also based on C++ so uh it's also going to you know start from the main function so just go to the main. CPP file and in here you can see this main function here now uh you can uh you know give the arguments for your application using this a c and arv as you know uh you can do it with C++ also and the main uh you know class uh which is going to start the event Loop for you is your qt or Q application class right so it's like a main class which is going to start the event Loop which is going to listen any event of your application so you just uh create an object of this uh Q application uh you know class and it's going to take uh your argument if you want to pass any argument to your application and then it calls this main window uh you know class so you can then create an instance of uh main window and then you can uh call this uh object. show which is going to start your main window which is main window UI and Main window class right and this exact is going to start your main event Loop uh which is uh you know created by your Q application instance so let's go to our main window class right so using this we can uh you know start our main window UI okay so first of all we are going to go to our main window. header and you can see our class has uh right now A Constructor which has one argument which is uh Q widget parent and uh D structor right so we are going to go to our uh CPP file and we have one uh private variable variable which is UI using this UI instance we can call any widget we are going to pick and place in our UI file okay now when we go to our main window. CPP file in here in the Constructor you can uh see first thing in the Constructor it's doing is it's uh initializing your UI with the new object of main window and then in the Constructor it's just calling this uh function called setup UI which is going to uh you know basically set up your user interface and when we close our application it's going to call the destructor and it's going to you know delete your UI object so now let's create a hello world uh you know application and let's see how it works so go to this Main window.i uh file which is going to uh you know open this designer and from here once first of all you can see here different kind of widgets according to the category so just pick and place a push button from here which is uh going to be something like a button when we push it is going to perform some action and let's take a label from here so just uh drag down and in the display widget you can see this label you can just drag and drop here and you can resize it something like this okay now every widget has its own property so when you select this push button and on the left on the right hand side here you can see some properties which you can change right so for example you can see the object name is push button and then you have some more properties some like minimum size or maximum size or font you can even change the font of uh this text from here or you have tool tip or you have other uh you know um properties for example I want to change the text of this button I can change this uh text so right now by default it has push button text so I can change it to for example click me and you can see uh this text is changed on the button right you can change this text also from this button so double click on this button and you can uh change this text from here also for example click me right and same with the label it has its own properties so you can change these properties from here okay so for example I don't want to show this text label on the label so I'm going to go to the property called text and I'm going to delete this text from here so it's blank right now now to perform some action you just need to right click on the button and then go to slot so just select this option which says go to slot and then select the first option which is clicked as the function says it's when you click uh the button it's going to call this function clicked and then it's going to perform the code inside this function so click okay which is going to uh you know create a new function in your main window. CPP and in here this function is called whenever you press a button or click a button so when we click a button we want to uh set some text on our label so how you can uh you know set the text on the label you just call this uh UI object or instance so just call UI and then call the name of the widget so let's go once again to our main window. UI and select your label here and you can see the name of our label here object name is labels so here you can uh you know see all the names and uh you know properties of your uh uh widgets so the name of our label is label you can change the name from here so for example label one or label two but right now I'm going to leave it as default so once again I'm going to go to addit and Main window. CPP and we have called UI and then by Arrow pointer you just call this uh label uh variable name right and then you can call a method called set text so just call a method called set text and whatever argument you pass it takes one argument basically which is a string and whatever string you write here for example hello world it's going to print this thing on the label right now to compile your application you can just go to build here and you can click build all it's going to build your application so just click it and you just need to uh save everything so just click save all and it's going to build your application you can see on the right bottom this progress bar and when this progress bar shows green then uh it means that your uh you know application has been compiled successfully and then you can run your application to run your application you need to click this uh green button here so just click this green button and it's going to run your application so now our uh widget application is running so when you click this button click me it's going to uh print hello world on your label so this is how basically you can create your first CI GUI widget application using Cy Creator I hope you've enjoyed this video please comment and subscribe and bye for now