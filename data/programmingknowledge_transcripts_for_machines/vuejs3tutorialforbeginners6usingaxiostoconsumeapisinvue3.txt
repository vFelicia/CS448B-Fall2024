hello everyone uh welcome you all to the new vhs tutorial today we are going to learn about how to fetch an api using vue.js so what you can do you can move to the bootstrap website and click on get starter template and you can copy this template and you can paste this uh in advice i'm dot html and what you can do you can paste on this website and you can refer to this so to fetch an api we are going to first i'll give this a title advice app advice app and what i'm going to do i'm going to use another dependency that is axios axos is very similar to fetch uh you can use axos or fetch it's up to you uh i'll show you how to do this using fetch so this is the api we are going to use advice with json api this is a free api which returns an api and it would you can fetch and advise the id and you can search and advise so this is how we do it and we will first we will try to initialize make a simple one then we can get back to the like how we fetch an api so what you can do uh you can move to this uh get a website uh that is axios uh you can use axial so exercise is basically used to fetch apis so what you can do uh you can move to this link and and you can you click here and what you can do you can simply add this script this is uh so this is accessment.js so you can simply copy this script and you can use this in your project so at the below you can use this so axle is there now what you can do you can also put vue.js in your project and you can install vue.js you can click on view three point x so then you can click on get started and you can click on three point x and you can click on installation so this is how we will get cdn for the vue.js and you can copy this script tag and you can paste this in your html page then we can add our own script tag that is script script and we can give a type is go to text comma javascript javascript is perfectly fine we can give a source that is advise advice app dot js so we have used both the things that is axios and the script a script tag using advice app.js we have used both the things so this would particularly help us so axos is used to catch an api i'll show you how you fetch one so let's make a form uh then we can fetch the api using access okay so let's move with the code then first you need to like i'll show you one thing what you can do in this advice app.js you can do constant my app component and you can give a data app component and you can give a data and you can return a json object okay now you can return a json object plus you will have some methods uh methods is going to be one that will say fetch api okay so effect api is going to be the method and what you can do you can uh create some data that is you can create some null data that is response response is equal to an mg json object okay and this is how you you will do it and like you can do response data is equal to empty json object okay now what we can do we will first fetch an api using axios and you we can mount this hours as well constant my app is equal to view dot create app my app component dot mount so you can use the mount functionality and you can give my app as the id so in this you can give an div div id is equal to my app okay so this is how we do it and we right now for just the sake that we want when we open our application so let me move to this page so what you can do you can right click and you can right click and the uh open containing copy file path and you can paste this path here so this is your js file okay i'm going to open the html file you can click on copy file path and you can open this html page so this is how we open the page and you can right click and inspect element so here you can see everything looks perfectly fine we are good to go with our code so axos has installed and now what i want to do that when i open my application so i already want this dot this fetch api function to be called automatically so for that what you can do you can use the inbuilt functionality there is one more thing mounted so mounted means that you call this method you call this method automatically when your page gets loaded or when the component gets loaded so we want our response to be displayed automatically as we open the website so we don't want something to be clicked so we can call this dot patch api so this dot fetch api will be automatically called when we open the page so for that what i can do uh console dot log com uh we can do mounted okay so this would be automatically called let's refresh the page and here you can see it says mounted so this is automatically called this function method has been automatically called as soon as we load the component so the next what we can do we can uh we can use some response so let's see how we get a response from the api so this is the api we can open this api and here you can see that this api returns a json object which says slip id is equal to 116 and advises advice is one of the top five requests people have is that they this is just an advice and with that we have an id so let's see how we we fetch the api so let's copy this https request and let's put this so we if our this api is constant so we can put this above our code api is equal to this so this is our constant api so it will remain forever for this code and we could just modify it as well so what we can do what we can do we can we can do uh so we want this function we want the we want we want to wait for an api response so what we will do we will make this function asynchronous that is we would wait for this function to load and complete if we make this function asynchronous then we can use an await keyword that is await a wait for the response we need to wait for the response and for that we would do axios dot get api so we are calling dot get api and if we get an api then we will have two things that is then the next thing we will do and plus catch error so if we have an error so we can make a function to call the error error is equal to console dot console dot log error okay so this would automatically confirm the error if if there is no error then we will proceed with the then functionality then we would get the response response okay and we want to do this dot response data is equal to response dot data okay so this is how we do it and we can what we can do we can just simply do this response data okay so let's refresh the page move to our app and this is our app now here you can see just for a automatic automatically we load this page and we get the response data okay so what we can do uh we can we can create a front end so this is how we fetch an api and we can render this using bootstrap so i'll show you quickly how we do it uh you can move to the bootstrap and you can look for cards okay and in this you can copy this and you can first give an h1 tag and you can say advice i have and you can give a style is equal to text a line is equal to center okay and let's refresh this okay sorry let's refresh this and we get advice app and now we can create a card we can paste the card here and we can we can remove this image because we don't need it and we can so we can uh advise for the day day is something we can call this advice for the day is and what we can do uh we have two things so this is we can remove this and we can give 2p class so one is the id and another is the like we are do so what we can do uh what we can do like we have a response data this is perfectly fine and we can create two things one is id so let this be null and another is the text so this should be also null and what we can do this dot response data is able to respond to data and we can do this dot id okay so let me show you one thing so we have a slip and id so we can do response just one.data.slip okay and you can you can do this as well responsordata.id oh okay i'll show you one thing i'll not make this complicated this dot id this is good too i just wanted to show you so i kept an empty json object response.datas.slip dot id okay and this dot text is equal to the same thing and i'll copy this and paste it here at advice and i'll put a comma here and here i'll put id and text okay so let me i think i have done english enough for this and let me refresh so here you can see you get a card advice for the day is uh advice number you get 150 you try using an old idea so this is how you fetch an api and you i have a responses to any card and you can just make it more simple number advice advice id and advice text and you can just simply so you can simply you can simply put a bolt back around it so if you want you can make it bold so you can also make this bold as well and you can just remove this response data because we don't need it and you can style is equal to margin zero auto margin zero auto so let me refresh the page so here you can see so advice text okay let me inspect element and i have given margin zero okay so i've given uh i have given uh like i've given this to the okay let me remove this and let me remove this yes perfectly fine so this is how we fetch an api advice for the day is advice id is 198 saying is the shower so we already get the response from the back end and displayed on the front end so this is how we do it so thank you everyone for watching this tutorial