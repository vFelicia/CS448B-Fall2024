so in this video we are gonna continue with our php backend okay so i have the design already open okay i'll simply fire up my mamp server so once it has started we'll open our code editor and continue with the coding okay so i already have better buys open over here now in the previous video we have completed the code for our register api now it's time to run it okay so for uh running it we are gonna use a application called postman okay so if you don't have it you can simply go to this link postman.com and download it and even if you don't want to download it that's all right because you can use it in the browser itself okay but i have it downloaded over here with me so i'll open it now i'll create a new request okay so over here this type will be post because you can see in the code editor we are allowing only post requests okay so i've changed it to post now i need to write the url so first it is going to be local host colon it'll tell it because as i've already told map runs on localhost and for its okay then we write the name of the folder that is better buys okay and then after better buys we have api then seller and then register dot php so we write api then seller then register dot php okay so now if i send a request okay so it is giving me internal server error so that means there is some error in the code okay so i don't think it is over here let's take our model class so i don't think it is here either now let's check our database class okay so i can see it over here only i have a typing error so it will be localhost okay then it should be public function constructor not just public constructor i am extremely sorry okay and after that this shouldn't be a comma but a dot because string concatenation in php happens with a dot same over here okay so now if i try to format it yes it has formatted as php should be okay so this is fine now let's save this okay then again we go to our postman send a request and then it is saying name is required okay so that is exactly as we wanted it to be okay so first it checked if the server method is post or not which is true so we can change it to get and see what is the error that we get so we get 405 request method not allowed which is exactly the same as we write over here 405 request method not allowed so i'll change it back to post okay and then it is telling name is required so this error occurs when name is not there okay so let's give it a name so in a post request we don't give values in params but in body and in form data okay so over here i'll give the key as a name okay now keep in mind this spelling and this spelling should be exactly the same okay so the name of seller is gonna be rishabh kumar that is my name okay then after that i also need to give an email so email and email is gonna be rishov at the rate gmail.com okay then after that password so i'll give a simple password for now although it is not suggested to use such type of passwords anywhere okay then after that i need to give a seller image and even if i don't it should work fine okay so i'll skip this for the moment okay so for that i'll add the name and then unselect this so that later i can add a image but if not also then it is not an issue okay then after that we need to give an address so the address is so the address is gonna be the same as i have written in sigma because that is a legit address so i'm gonna copy it go to postman and then paste it okay then after that we have i guess we have description okay so we have description we write the description and for description again we'll use lorem ipsum okay now after description it should save okay so let's see if that is the case or not so i'll click on send and it is again giving me an internal server error okay so let's see what is the error now okay so the error is this is the error message that means this function is causing errors so let's get inside the seller okay and then inside seller this is the error because i am using a function last insert id and it is not in my database class so it is giving an error okay so for now i will just make it a true okay just true later we will add the last insert id again okay and maybe even not if that is not required in some cases it is so it is suggested to always use that okay so now it is done now let's send and it is still giving an error let's see what is it okay so let's go to database and and we need to add a password over here i'm extremely sorry it was not needed in xampp so i forgot that in mamp it is required you can see over here the password should be root okay so once this is done i think now it should work okay so i'll open it again so i'll open postman yeah and click on send and it gives us a message seller is registered okay and now if we go to our database and inside sellers we can see our seller the seller name is rishabh kumar email password address and description okay so now you can see that the password is quality which is visible to everyone who has access to your database and can read the password then log in with login as this user and then change things okay so this is not a suitable way to store the data means in which the password is human readable okay so to avoid that we are gonna hash it and to hash it we are gonna use bcrypt okay so bcrypt is a file that means bcrypt is md5 hashing okay you can read more about it by simply typing md5 or bankrupt in google and get to know about it it is a type of hashing which will convert a human readable sentence or keys to something and means a lot of numbers so that human cannot understand that and decoding it back to the human readable human readable string will take lots and lots of time okay so for so let's implement this in our project so what i'm gonna do is uh open this decrypter.php okay copy the entire code and then inside our includes folder i am going to create a new file called bcrypt.php okay and inside this i am gonna paste it okay then save it close it and now we go to our seller.php along with a database we include the bcrypt okay over here the name changes to bcrypt now let's see how to hash it okay so over here you can see we can hash password simply by writing decrypt dot hash password okay so i'll copy it and where we are storing the password in our database which is over here i am gonna write over here i'm gonna paste bcrypt.hash password and this password okay so now let's save this and let's try to send a request again okay so now if i send it okay it is giving me an error so i think this is because of okay so this was the error i'm sorry now let's see so the seller is registered now if we go and open our database okay we need to refresh it the password here is something like this this is the hashed version of qwerty only because you can see in our request the password is still quality but it is in database stored in such a manner that normal human being cannot understand what this actually means okay so in this way your data becomes more it becomes more secure okay and that is a plus point okay so with this we created a api to register the users okay but there is still one flaw and the flaw is that there are user multiple users with the same email which is not the ideal case okay and the next flaw is that we have this extension dot php which we don't want okay we simply want to write the seller register and that's it not the dot php okay so we will see how to fix both of these in the next video thank you