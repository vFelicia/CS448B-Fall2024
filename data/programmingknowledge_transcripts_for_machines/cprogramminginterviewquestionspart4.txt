today we are going to discuss some more interview questions that are related to the C programming language and this is the part four of us the interview question series so let's start first question is what are static variables so the variables that are declared using the keyword static are known as static variables they have a property of preserving their value even after they are out of their scope such variables have this hope restricted to the function in which they are declared let us understand the use of the static variables with the help of an example here we have taken a function whose name is fun it takes no arguments and has integer as a straight old ace in its body we have declared an integer variable count with the keyword static and have initialized it to zero so now count will house all the properties of the static variable in the very next statement we have incremented discount and then we have returned the value of this count now inside the main function there are two printf statements and both are doing that they are calling this function one and at the same time they are printing the value of sound so the output is one how is this possible various functions one is called for the first time this static int count variable is initialized to zero and its value is incremented so now count will hold one and this one will be printed using this printf statement here now since sound is a static variable so it's value is preserved now when the function one is called for the second time then here the value of counters not again initialize to zero but its previous value is preserved that as one now one is incremented and now the count variable will hold the values new now this new will be printed using this printf statement over here so the output wicket is one and two next question differentiate between the log and the log function in C so as we know that both these functions are used to dynamically allocate the memory in free programming language what is the difference between them first we will take a look at melot melot doesn't initialize the allocated memory thus the memory that is being initialized by Mello holds the garbage value Manoff takes only one argument and battles the size of the memory block to reserve the remedy it's in taxes void astrick Maalox with in parantesis the size of the memory block the next is shell off cannot initializes the allocated memory block to zero so the memory that is initialized by Kelo will hold the value 0 and not the garbage values now it takes two arguments one is the number of the blocks to be allocated and the other is the size of each block if syntax is void asterisk L of the number of the blocks that need to be allocated comma the size of each block next question is differentiate between actual parameters and formal parameter formal parameter or variable and it's tight as they appear in the prototype of the function or method actual parameter the variable or expression corresponding to a formal parameter that appears in the function or metric coil in the coiling environment naigus understand this with the help of an example here we are using recursion to calculate the factorial of a given number so factorial is the name of our function that accepts 1 integer argument in and it's radon type is also in video this int n is the formal parameter as it is appearing in the prototype of the function factories inside its body we have calculated the factorial with it if n is greater than equals 1 return n into factorial n minus 1 which is nothing but the recursive calling in return one inside the main we have a printed statement in which we are printing the value that has been returned by this factorial function and we are passing a value to it here we have past fights so this file becomes the actual parameter as it is corresponding to the formal parameter n and it appears in the function pole here we are calling the factorial function and we have passed 5 so it is an actual parameter next question what is the preprocessor directive in C C preprocessor is just a pitch substitution tool it instructs the compiler to do the required preprocessing before the actual compilation can be done all the preprocessors commands begin with a hash symbol this is the hash symbol a fountain it gets executed before the actual C program is being executed examples hash define that substitutes of preprocessor macro and hash include that inserts a particular header from the fight there are other examples of the preprocessor directive also next question what is an eye an array is a data structure that stores multiple elements of the same data type that is it stores the homogenious elements it resolves the memory in a sequential manner one after the other any leader structures are traffic data structure thus the memory size once defined cannot be changed later on in the program there are three types of arrays namely one dimensional array two dimensional array and multidimensional life examples int a within square brackets we have specified 2 so 2 is the size of a deal and after the execution of this statement an array of integer data type a will be created which has a size of two within the square brackets the dimensions are mentioned since there is only a single square bracket it means it is a one dimensional array similarly in the very next statement we have mentioned in math 3 and in the other square brackets its against which is used to declare a two dimensional array this will declare a two dimensional array like a form of a matrix which will have three rows and three columns so total of nine elements will be stored in math next question with the statement is better in terms of efficiency and by x equals x plus 1 or X plus plus so X plus plus is efficient than X equals 2x plus 1 because it is just a single instruction to the compiler while the others is so increment operator is doing a single instruction to the compiler which is more efficient next question is what are the limitations of scanner function in C so the limitations of scanner function are asked for use the scanner function cannot work with the string of characters it is not possible to enter a multiword strength into a single variable using the scanf function suppose you have a variable in which you want to store your name in that case it is required that after the first and last name a space is needed but if you are using the scanf function to store your whole name in a single release then it is not possible because channeis ridges terminate with strings as soon as it encounters a space character and it will only show your first name so to counter this problem the biggest function is used which tweets with spaces and tabs as a part of the input space and it's terminated only when the Enter key is pressed next question write a program to swap two numbers without using the road variable so here we have declared two integer type of variables a and B is initially holding the value of 10 while B is holding the value of 20 after swapping we need a to hold the value 20 and B to void the value 10 there is a printf statement that is used to print the current values of a and B which is 10 and 20 respectively then there is a treatment that takes that in a 2 system of E and B so the sum of a and B that is 10 plus 20 which is nothing but 30 will be stored in a after the execution of this statement the very next statement States as B will hold the difference of a and B so a which is now holding 30 and be with us still holding 20 will be stored in B that is 30 minus 20 which gives the value of B as 10 over here in the next statement even told the difference of a minus B status it will store the value of scale with us protein minus the value of B with a step which gives the value of a as 20 so the current value of a is 20 well that of B is 6 and this will be printed when this printf statement is executed not we can see that the values of a and B are tracked and mode variable is used