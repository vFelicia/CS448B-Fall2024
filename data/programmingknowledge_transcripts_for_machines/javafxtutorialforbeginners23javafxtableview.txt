hello guys welcome to the next video on javix tutorial for beginners in this video we will see how to use tables using table view in Java effect and for this we are going to use properties which we have learned in the previous videos to populate our table view so if you uh don't know how to use properties just watch uh that video first on properties and then watch this video so let's get started I have created a project called table View and in the application package I have this main. Java class where I have added this code to uh you know call our main. fxml file I have this main. controller class which is blank right now and I have this main. fxml file which is also blank right now okay so I think you know how to uh you know create these files now next what I'm going to do is first of all for example I want to create a table of student information so student can have his ID name surname and age and I want to populate uh this data on a table view so how do I do that so first of all for that I'm going to create a new class which I will name it as student okay so first uh class name is student and click finish and this will create this student class and in here first of all I will create four variables first will be private final integer and this will be the ID of the student okay in a same way I will declare three more variables for name surname and age okay so this will be string variable and this will be our name variable and then third variable will be the surname and the fourth variable will be the age and the surname is string here okay so because we have declared them as a final we need to initialize these variables so let's right click on this class and then go to source and then we are going to select this op option which says generate Constructor using Fields okay so select this option which says generate Constructor using fields and select all the fields and then click okay and it's going to generate this kinds of Constructor with all the field names and it's setting all the values like this okay now next what we are going to do is let's transfer this variable at the top so all the variables are are at the same place right now second thing what we are going to do is we are going to declare the gets for these variables right so right click once again on your class and then go to Source once again and this time choose generate Getters and Setters okay and then select all and then click okay and it's going to generate only gets because we are already setting the values of these variable using the Constructor right now after doing all this we will change our variable data type to simple integer property and simple string property I have used this integer and string earlier because I wanted to generate this Getters and Setters for this class so uh it's easier to uh you know generate these Getters and Setters using these data types right after after generating your Getters and Setters you can change this data type to simple integer property for ID and age and for the surname you can uh use uh simple string property okay so for surname and uh name you will use Simple string property right so we have done that now uh you can see it's showing this error and this error says change to the ID uh data type so we need to cast this ID to uh you know simple integer property so what we can do we can use new then simple integer property and in the brackets just enclose this ID right same you can do for the age so let's do for the age and we can do do the same for uh these names and surnames right so just enclose it like this and for the surname also enclose it like this and we forgot this new keyword here okay so like this now if you remember to access a simple integer property or simple uh string property we need to have the method called get on the variable right so here it's showing this error because we need to add this method called get on this ID variable right so just write dot get okay so add after every uh variable name doget method and it's going to get you the value of uh this property okay so this is our student class which we are going to use to populate our table view okay now once this is done we are going to go to our controller. Java class which is main controller. Java and first of all we will uh Implement here initializable and then you just add the unimplemented methods here which is initialize and now I'm going to declare first of all atate fxml and then private table view so just call table view variable from here and it takes uh the template variable right so we want to uh you know create a table of students right so just call the student class which we have created recently in these uh angle brackets and then give the name to your table for example I give the ID as a table itself okay now every table has its column on also so we are going to create four columns in the table and instead of using table view we will use table column now okay so just use table column and paste it four times here and this takes uh two uh template argument one is the class name and second is the data type so the ID data type was integer right so just write integer here and then give the name to your table column variable which is ID for the First Column right same we will do for the age column so just name it as age and this will be the name column and second will be the surname column right and just add this string data type here and to the name also okay so we we have declared one table view variable and four table column variables with the column names right now next what we are going to do is we are going to declare a observable list so declare uh public observable list and name it as list so this is the list of students right so it will also take uh this uh template variable which is student in our case because we have uh created this student class and name it as list is equal to FX collection so just write FX collection dot then call a method called observable array list here and then close it and inside this Constructor brackets we will uh you know add add some uh data to our list so because it's observable list of student we can add this uh new student Constructor here so just add new student and this Constructor takes four variables if you remember right first is the ID so give for example one second is the name so give any name for example some name and then third is the name so give some surname and fourth is the age which can be something like this an integer right and then using comma separator you can add multiple instances of this Constructor right so you can do something like this and then change the IDS of all the student Constructors so I have generated uh this kind of uh data inside this uh list here and make sure the last uh you know data doesn't have this comma okay so we have our observable list now right now what we can do is we can take this uh table variable and go inside our initialize method and call a method called set items on it and then it this takes the observable list so just provide this list variable here okay now just above this uh code what we can do is we can just use our ID variable and then we can call a method called set cell value Factory here and then we can just add new property value Factory so just search for property value Factory and it takes uh two uh template argument as we have given in the table column right student and integer for ID right and then in the Constructor it takes uh this name of your column okay so do the same for uh the name surname and age so second is our name third is the surname and fourth is the age and we have to pass this here also surname here also and age here also and this name and surname are string right so just add string and string here okay so now we are ready with our code so we just need to edit our fxml file and add a table view inside this so that we can populate it so just right click on your main. fxml file and open with scene Builder here and just choose your anchor pan here and then change the layout property of it so pref width is equal to for example this time 500 and the pref height is also I'm going to choose 500 okay and then go to here in the search option and search for table view okay and just drag and drop this table view inside this anchor Pane and to make it stretch to the length and height of uh this anchor pan you can just uh select your table view go to modify and then click this option fit to parent and it's going to fit to parent and now right now you can see this table view has two table columns C1 and C2 so we need to add two more T table columns because we have four table columns right so just add one more table column here this will be the third table column and take one more table column from your uh controls and just drop it here okay so now you have four table columns now select your first table column from here go to the property and change uh the title of it or text of it for example first is the ID second was the name so just change the name of this also and then third was the surname so change the text of this also and the fourth was the age so just add age here okay now once you do this we need to uh connect our controller to this fxml file so go to controller here and then choose your controller class application. controller okay now select uh your column once again and then go to the code here and then choose the ID of the code right so when you just drag here you can see we have declared the table column variables here ID name surname and age right so Select First Column and give the first uh you know table column variable here ID select second column and then choose the name third is the surname and fourth is the age right now uh we also need to give the ID to the table so go to the hierarchy here choose your table here and then go to the code code and then choose this variable called table which we have declared here you can see here right and now you can just uh save your code and refresh your project and now we are going to run it so just run your app and now you can see uh we have successfully populated our table view with this data okay so this data is same as this data in the observable list right you can match it from here right so in this way you can populate a table view in Java FX I hope you have enjoyed this video please wait com And subscribe and bye for now