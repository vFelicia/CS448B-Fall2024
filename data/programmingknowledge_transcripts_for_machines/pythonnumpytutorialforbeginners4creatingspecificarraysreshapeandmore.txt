hey guys welcome to the next video on numpy tutorial for beginners in this video I'm going to show you how you can use numpy to create some specific array and also we will see how we can reshape or numpy array and some of the properties related to shaping your arrays so first of all let me show you the first method and this method is and B dot zeroes and if you have guessed correctly this method we use to initialize a specific array with some dimension so we are going to give some dimension here as an argument so let's say 2 by 3 and this is going to give us an array of specific dimension and all the values inside this array are zeros so all the values or elements which this array contains are all zeros there is one more method which is called NP dot once and here you can give the same type of argument let's say 3 by 2 and it this is going to give you an array all initialized with the value 1 so you can see all the values here are 1 now if you want to initialize the value with some datatype you can also use let's say NP dot once and you can provide an extra argument here which is called d type is equal to so just write the type is equal to and whatever datatype you want to give here you can provide here so let's say n P dot in 16 and this D type argument is going to make sure that this one is of this datatype now there is one more method which is called NP dot empty so this method you can use to provide some shape let's give 3 by 3 and this empty method is used to create uninitialized data so the content is under fine and once again I'm going to give the same command it's going to give us the array of these dimensions and here also you can provide the dtype let me give the list here you can also give the list instead of this tuple and then as an extra argument you can provide that the type is equal to NP dot into 16 and then press ENTER and you can see now it's going to initialize these values with the random integers once again when you give the list without this argument dtype and I'm going to just provide some dimensions here in the form of list it's going to once again gave us this dimension with all ones but always remember that empty and like zero does not set the array values to zero and this means that this may therefore be marginally faster now the next method I want to show here is the arrange method to create an array of particular range so here you can provide some range let's say we want to provide the range from 1 to 5 and then press Enter now this arrange X similar to the range method in Python so it's going to create this array but it's going to exclude this 5 this is the property of range also you can also provide the interval in which you want to see this array so you can just say I want to see this array in the interval of 0.5 then you will get the array in the interval of 0.5 or in the steps of 0.5 now there is one more method which is called NP dot linspace and this method is used to create an array by specifying the range and the number of elements so first of all we are going to provide the range so once again I'm going to provide the range between 1 to 5 and then press Enter so you can see in the result it returns the evenly spaced number over the specified interval and in our case this interval is 1 to 5 and we got 50 values which are evenly spaced values you can also provide an extra argument in this function and this is the number of samples you want to generate the default sample is 50 as you have seen here this is the default sample so if you don't provide any number here it will generate that evenly spaced array of sample 50 but if you want to provide your specific number let's say we want to just generate an array of 10 values then we can provide this third parameter here and now you will just get the array of 10 evenlyspaced values once again if you provide here 5 it's going to give you only 5 evenly spaced value which is 1 2 3 4 5 if you want to create an array of random numbers you can use NP dot random dot random and provide your dimensions here and what you will get in return is an array of random numbers which are in between 0 and 1 now let me show you how you can reshape an array so I'm going to create an array of zeros so let me just assign this result to our variable let's say this is C variable so first of all let's see the content of this array C and now I want to reshape this array so there is a method called r dot reshape which you can use to change the dimension of this array so earlier this array was of dimension 2 by 3 and now I want to change the dimension to 3 by 2 let's say so now once you do this the array dimension will be changed to 3 by 2 which means 3 rows and 2 columns you can also change it to let's say 6 by 1 so I'm going to just say 6 by 1 and this is going to give you an of 6x1 but you need to make sure that all these reshaping dimension conforms to the original dimension so for example you just give dimension which is not conformed by the original array let's say seven here and you will get this error which says cannot reshape array of size six into the shape seven seven by one let me give you one more example so this time I'm going to create a new variable D and this time I'm going to use one's method so this is once method and I want to create an array of let's say 1 by 9 and then press Enter it is going to give me an array of 1 by 9 and all the values here are once now when I use a reshape method on this D array so let's use this reshape method and let's give the dimension let's say I want to give here the dimension of 3 by minus 1 and then press enter you will see this array will be reshaped to 3 by 3 array so why this is happening so because we have provided the second parameter as minus 1 which means that it will be determined based on the actual condition automatically so this array was containing 9 element and this means that your matrix will be resized to 3 by 3 matrix so now you can see when you see the content inside a D you can see the original array never changes you cannot change the size or shape of the original array you can just reshape it and then assign it to our new variable so when you do this I'm going to just reshape it and then assign it to a new variable E and then see the content of E now once again let me create an array of all 0 of dimension 3 by 1 let's say and there is a method called V steak and as stake so V stake is used to stake multiple arrays in vertical direction and one thing to notice here is the dimension so the dimension of an array must be matched so here you can see II which is of the dimension 3 by 3 and we have a new array F which have the dimension 3 by 1 so let me just create one more variable let's say it's G variable and then I can use NP dot V stack and I can provide as an argument both the arrays so I have the array E and I have the array F and it gives us error because this I need to give in that tupple so the error says it takes one positional argument but I have provided two because this I need to give inside at a plural list so these argument I will provide as a tuple and then press ENTER and now you will see this error this error says all the input array dimension except for the concatenation axis must match exactly so because this is the 3 by 3 array and we want to add the new array vertically which is not possible because in the 3 by 3 matrix you cannot add the matrix of 3 by 1 if this matrix is of 1 by 3 then this is possible so let's create the array of 1 by 3 so this should be 1 by 3 not 3 by 1 so I'm going to reshape it once again or let's just change the dimension it should be 1 by 3 in order to use the V stake with the array of 3 by 3 so now once again we will see the content of H so now we can once again use this B stake method and this time I'm going to pass H here instead of F which is of dimension 1 by 3 and then press enter and this time I don't get any error and once again when I see the content of G it's going to give us the calm the nation of the matrix e and H so this method V state can be used to stake multiple arrays in vertical direction there is one more method which is at stake which you can use to stake multiple arrays in horizontal direction and there our F array will work so now when I create one more variable I and I will use the H stake method and here I will provide as an argument the array E which is of dimension 3 by 3 and the array F which is of dimension 3 by 1 not 1 by 3 not like this but it's of dimension 1 by 3 so it's like this right and then press ENTER and I will see the content of I and now you will see these two arrays are staked horizontally now if you give the array of wrong dimensions here so for example I give H here instead of F which is like this and then press Enter it's going to once again give me an error which says all the input are a dimension except for the concatenation axis must match exactly and at last I want to show you two more method and they are edge split which is called horizontal split and be split which is called vertical split and I want to split this array in the horizontal format so what I'm going to do here is I'm going to use the method H split and here I can first of all give the name of the array which is G in my case and then I can give the number of splits so for example I want to split this array in 3 different arrays then I can provide this number 3 here and then press enter and now you can see the result so this result contains 3 different arrays 1 2 & 3 now let's say I want to split this array I which looks like this in the vertical direction so I want to just separate this this and this in three different arrays so I can use once again and P dot V split method and first argument is the name of the array and second argument is the number of arrays you want so when I press ENTER it's going to give me three different array which are split in vertical direction so that's it for this video I hope you have learned something new this time and I will see you in the next video