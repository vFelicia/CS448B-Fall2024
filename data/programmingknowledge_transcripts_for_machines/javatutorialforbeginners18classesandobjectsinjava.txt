hello guys welcome to the next video tutorial on Java programming for beginners till now we have seen the procedural part of java now from this video we will see some of the objectoriented uh aspects of java uh and first of all we will see what are classes and how we can declare classes in Java and how we can use classes in Java so first of all what is a class you may have noticed that whenever we have created our first program it was a class and inside this class we were calling this main method so every Java project has at least one class and one main method and class is basically a data structure or type inside which you can Define some variables which are called member variables and methods which are called member methods and the most uh important property of classes are you can create instance or object from class so you can maintain different states of a class using these instances or objects so let's see how we can uh define a class which will will be a new class and how we can use it with our main class which is my class so for example we want to uh make some student uh data structure and uh for that we will make a class so just go to your project if you are using eclipse and go to the package you have made we have made a lesson one package uh at the starting of uh this video series go to that package inside which you will be having a class my class in my case just go to the package right click the same package and go to new and create a new class and this class name we will name it as student okay and leave everything as default and click finish and now we have this student class inside our lesson one package so we have two classes now my class is the first class which we were working on and the second class is called student. Java and this is the second class uh we have created now now this class can have its member variables and methods so for example what can be the traits of the student student can have his ID so ID is integer value so I declare a variable called ID student can have name so I declare a variable called name and student can have age his age so I declare student age okay so this is basically you have created a class and it can have member variables it can also have member methods uh that we will see in a moment but let's consider this is a basic student class which contains three variables ID and name and age okay now to call this class in your main method in my my class you can just create an instance of or object of the the class so how you can do it you can just call the same name student class name just copy this name here and then give the name to your instance so as we have we give any name to our variables for example age name or something here also you can give uh the name to the students variable okay so for example the name is Mark we are making the data structure for Mark is equal to new student okay and this basically we have created an instance of student class which we name as Mark so this is uh Mark instance so Mark here mark here is called object okay or some people also call it as instance okay instance so Mark is here called object or instance and this object we can use to you know assign values to the member variables of this student class for example Mark's ID is uh so whenever you call this instance called Mark and whenever you use this dot separator it'll give you the options which is um provided by Eclipse to you so the student class contain age ID and name so we will choose ID student ID is equal to for example uh one Mark is our first student and and in the same way you can call Mark dot name should be Mark do name is equal to name is Mark we already know and the age so Mark dot age is equal to and he is 15 year old for example so what we have done is we have created an instance of uh student class and we name it as Mark and then to this instance we have created or we have assigned some values and these values we can you know access these values with the same names mark. ID mark. name and mark. age so you can just write CIS o control shift and then you can just write Mark do name is so you use Plus or concatination operator is and then plus and then mark. AG so we will print Mark is uh whatever his age is years old okay years old okay and when we run this program it'll print Mark is 15 years old okay in a similar way we can create different instances of our classes and so what we can do is we I will just copy the same uh Mark uh student class and we will create a new object called this time we call it Tom okay so here Tom is the second instance of the student class okay and his ID is two name is Tom itself and the age is for example 14 okay so in here we can once again make the copy of this print line method and this time we will just replace Mark by Tom and now you can see it prints Tom is 14 years old and is there something wrong here yeah here we haven't changed this instance name here okay once again we will run the program and it says Mark is 15y old and Tom is 14 years old okay so using a class we can Define different object and we can Define uh these object values of object member variable values which are independent of each other so this instance values which are ID Tom's ID Tom's name and Tom's age is independent of Mark's ID Mark's name and max age okay so this is very uh important property of object that it can store its own State and it's independent of uh the other instance right now in uh you know in Java programming or programming in general uh we never use or this kind of usage direct usage of variabl are discouraged and why it's discouraged because uh any other person or whoever is uh whoever is using your code can modify these values so we use some uh you know some methods or some functions which can get or set these values okay so what I mean by getting and setting these Valu is uh I can go to this uh class called student and in here I can just use I can just go to the source Tab and in here I can go to so we will go to the source and just go to generate Getters and Setters here and here we can see operation is not applicable in current class okay and in here we will just use this and click once again Getters and Setters so just click one variable name or variable then only this will work so go to Source once again and create gets and Setters and in here select all so we are basically uh making getter and Setter method for every value because we don't want to use or we don't want to access these variable directly we just create gets and sets for all of them and whenever we click okay you can see here Java has created us these Cs and Setters for all these values okay and what this is basically doing is it has we whenever we want to you know assign some value to the ID we will use set ID method and whenever we want to get the value of ID we will use get method and this is called encapsulation of a variable and this is important because we don't want to give access to our variables to some other user which is unknown to us right and so now what we are going to do is we have generated these Getters and Setters in between our variables so we can just cut these values and paste it here and these Getters and sets we have generated for all the values right so now when we want to assign some values to the mark instance instead of this mark. ID we will just use Mark dot set ID or set ID and then we can give any ID to to Mark and this value assignment is we are not going to use in the same way we will use marks dot set name and this name we will give to Mark and in the same way we will assign age to Mark so Mark do set age okay age is 15 right and in the same way we will do something with uh Tom's instance also so tom. set ID Tom do set name so Tom dot set name we will assign this name to Tom and tom. set age same thing here so basically what we have done we have used instead of direct assignment we assigned ing values using these Getters and Setters and this protects your data from corrupting if you somebody wants to corrupt your data or something like this okay and to get these value you just call Mark do get name and Mark dot get age okay and same we will do with our Tom instance and whenever we run the program result will be same but this is more preferred while you are accessing or assigning the values to the member variables so this is how classes uh Works in Java there are more uh things to you know classes which we will discuss in further videos but but that's it for this video please wait comment and subscribe and bye for now