hey guys welcome to the next video on open CV tutorial for beginners using Python in the last two videos we have seen how we can detect the lane lines on the road using open CV now till now we have only worked with this image and in this video we are going to try to apply what we have written not on an image but with the video frames but you have already learned in the previous videos that a video frame is like an image so a video contains many number of frames so if we apply the same technique on each frame we will be able to detect these lane lines on the video frames also so let's apply that concept on our script what we have till now so right now I have added this test dot mp4 video inside my project so let me show you how it looks like so our video looks like this so we are going to apply all these concepts which we have applied on an image on this video so let's get started so I hope you have this code which we have written in the last two videos the only thing we need to do here is we need to read the video instead of an image and then apply those concepts on the frame instead of an image so we till now have two functions region of interest draw the line and we have this code so this all code we are going to enclose inside the function so that it will be easier to apply all this code on the video frames now as you already know that this will not be used because we are reading the videos so we don't need to read the image obviously so we are going to comment these two lines out so we don't need to convert BGR to RGB because we are going to use this native CV to lie not the matplotlib library of which we have converted this BGR to RGB image so now we are going to define a function so let's define this function and I'm going to name this function as process and it's going to take an argument which will be the image argument and all this code which is under this which we have written in the last video we are going to enclose this code inside this process function we don't need these two lines because we are not going to use matplotlib for processing this video so I am going to remove these two lines and I'm going to just give space here for this code so it can be enclosed inside this function now at last or at the end of this function we are going to just return this image with lines so we are going to return this image with lines using this process function that means on every frame we are going to draw the lines and return it using this process function next we are going to read the video using the video capture functions so I'm going to declare a variable cap is equal to CB 2 dot video capture and then we are going to just pass one argument which will be our video file which is test dot and before in our case so test dot mp4 and then once we have this video we are going to check if the video frame is available using the while loop so let's use this while loop and we are going to check if cap dot is open is valid or not so is opened and this function is going to return the boolean value so if this video frame is still available is going to return true and whatever we write inside the while loop is going to be executed now in the next line we are going to just read every frame so we all know from our previous videos that this cab dot read returns to result or two variables one is ret and the other is the frame and you're going to just say cap dot read and then we are going to apply our process function on this frame so we are going to once again take this frame variable and we are going to overwrite this frame with the lines on the frames so this we are going to get from our process functions let's call the process function and pass the frame variable inside it okay so this frame is going to go to the process function it's going to process everything and then the final result which we get is going to be saved once again into the frame variable with the actual lines on the frame in the next line we are going to just show our result using cb2 dot I am show method and we are going to just pass the frame variable here in the next line we are going to just write the code for the quitting from this loop so we are going to just say if CB 2 dot wait key is going to be 1 and then we are going to apply the end operator and then write 0xff for the crossplatform functionality and then we are going to just say is equal to so Rd so whenever somebody presses the Q key then we are going to exit from this loop and then in the next line we are going to just say break so break out of the loop the last two line in the last two line outside this loop we are going to just call the release function on the cap variable and we are going to destroy all the windows in the cv2 so we are going to just say destroy all windows that's it hopefully this is going to work so let's just run this script once again and let's see what happens and here we got the error and it's coming from this line which is CV to dot I am sure we forgot to give the first argument here which will be the name of this window you're going to just say frame here and let's run this script once again and let's see what happens and you can see on this video on this Lane line or lines are drawn right so this is the result which we were expecting we can improve this result by adjusting few variables so we are going to first of all press Q to quit and let's change some of these values here in the half line transform so we are going to just say that the max line gap is going to be hundred we are going to reduce the threshold value to fifty and draw a value to two okay inside this half lines P method and let's run this code so let's see what result we get this is also okay let's improve it a little bit more in the canny edge detection we can reduce this threshold value here to 120 the second threshold value and let's run this code once again and now we get the better result so the problem might be the edge detection so we have reduced our second threshold and now we get the better result you can see on this middle lane the lines are drawn clearly so this is how you can write a simple script to detect Lane lines on the road I hope you have enjoyed this video and I will see you in the next video you