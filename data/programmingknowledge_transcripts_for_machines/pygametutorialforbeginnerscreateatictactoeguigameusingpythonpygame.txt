hey everyone in the last video we made the snake game it comprised of various modules by pie game this time we would make the tictactoe it would be a little bit more complex than the snake game but don't worry if you're clear with the basic modules of fire game you won't have a problem dealing with this let me discuss what all functionalities we need to put in to make this tictactoe so you need to draw a board right you know tictactoe is played on a 3x3 grid so for that you need to draw that board you also need to get the images loaded what images i'm talking about i'm talking about x and o symbols we won't be sketching anything manually we would just be rendering the images of x and o symbols at the place we want to we would also need to print the results on the screen we would also need to check which row or column has similar symbols so that we can strike that out and declare a win okay we would also need to declare a function where we can get the coordinates of our mouse click and put our picture over there paste our picture over there so to get all this i have defined five functions and we would put them together to make this detector cool so what the five functions are we would draw the board one we would get the results printed two we would check the winning cases we would check all the rows and columns if there is a win we would also need to get the coordinates of the mouse click we would use the mouse module that's a new thing for you and we would put the pictures at these coordinates that would be the measure engineering part cool let's get to the code so i'd be importing pi game initializing it then i'd be declaring some basic variables okay so don't worry if you don't understand their purpose you will understand it once we start manipulating them in the code further cool so i have this xo it would hold the current value of the symbol whatever symbol we are working on whoever whose ever turn it is okay then we have a winner it would store the winner x or o and declare and print the message then we have draw it is initialized to none right now but if it is a draw it would be true okay it's a boolean basically then i have this board it's initialized as a 2d matrix with no values none values and it's a base matrix basically of 3 cross 3 of size 3 cross 3 then we have this clock object and then i have the screen then i have set the caption then i have rendered the images i have this in the tictactoe files so accordingly i have mentioned the path okay then i have scaled the images because i want them in a block okay we have this nine these nine blocks and i want it in the same shape okay i want it in the same size basically of the block okay then we have our first function the draw grid we would be drawing the board with lines i'll fill the screen with some color then i have drawn the lines i would need two two vertical and two horizontal lines i hope you can get that because i need to draw three parts okay so i'll be drawing the vertical lines first so i have used the line function by draw module the screen is the surface i would need to make this make this lines on then i have given the color of the line then i have the start and the end positions okay so the start and end positions need to be visualized by you uh just like you would visualize a point on a coordinate axis okay so 400 by 3 comma 0 would be a point on the x axis right so 400 by 3 by 400 by 3 it's because i am making three parts of the complete board and what is the length of my uh screen that is 400 and by 3 gives you the one one third part of it okay similarly 400 by 3 comma 400 gives you the last point okay on the x axis but at the bottom cool and 6 is the size of the line similarly for the second line i've multiplied the same thing by two so that is just an interval ahead of the previous line okay i hope that makes sense to you then to draw the horizontal lines i have just flipped the coordinates because now i'd be taking coordinates on the yaxis just like i took coordinates on the xaxis to draw the vertical line i take points on the yaxis to draw the horizontal lines okay it should not be problematic at all if you can visualize a coordinate plane cool then i'd be defining the result function just for printing the result on the screen so i have made the draw and winner variables global so that i can work with the same variables throughout now if i have a winner x or o a message would be printed like i would have a message that would be a string and that would would be the winner's name and one okay similarly if draw is true my message would be game draw now just like we would display a simple text on the screen i have done that i want my message to be rendered on the screen to be displayed on the screen it's the same code that we used in the display text nothing is different then i have the spin cases function to check if all the symbols along a row or column are same okay we would check it nine times right after every image is rendered okay now just as i said we would check along all the rows the columns and diagonals so to take a longer row we would run a for loop so that we can change the value of the row zero one and two and we would check if all the symbols along that row are same that's what the if condition does and the element we are checking should not be none okay if it's not so and all the symbols are same then we would anna we would assign the winner to be that element okay and we would draw a line across that row how we would do that we would use the line function from the draw module and since we want to draw a horizontal line please know that we would need to take coordinates of the y axis so we have the start point to be 0 comma row plus 1 into 400 by 3 minus 400 by 6. now rho plus 1 is because the indexing starts from 0 and we cannot take 0 to be something and i have subtracted it by 400 with 400 by 6 because i want the line to be the half of it okay half of the block and so is the case with the end point okay and then i'd call to the result function because i wanna if there is a winner then i want to call the result function so that the result is printed and no further game has been played okay similarly for the column i will have a loop to traverse through all the columns and i'd check accordingly if along a column the symbols are same then i'd assign that value that element to the winner variable and then i draw the line along that column since i want a vertical line now i would be taking points on the x coordinate okay x axis sorry and this start and end point again should make sense to you just as we did above i want the line to be at the half of the block again there is a factor of 400 by f6 subtracted from that value cool then again i'd be calling out to the result because i want to want the results to be printed if there's a winner and i'd break this loop cool then to check along the diagonals i would have two diagonals in a matrix there are two diagonals the principal diagonal and the other diagonal the principal diagram runs from left to right whereas the other diagonal runs from right to left and it's the conditions are very similar you check along the principal diagonal if the symbols are same if they are assign winner that value that symbol and draw a line along it and call on to the result function again to print the result similarly for the other diagonal that runs from right to left now if there is a draw then how would you check that for all rows if all is true that means all the blocks are filled now and the winner is still none then it's a draw okay the draw boolean is now true and you'd call on to the result function what the result function would do is it would check the condition for draw and the message would become game draw and the text displayed on the screen would be true cool now i have this get image function which takes an arguments row and column but you would not understand this until you understand this input to block function so let's get to the input of block function what it does is it gives you the position of the coordinates you clicked so basically it is to find out which block is clicked on board there are several blocks and once you have clicked inside that block you would get the row and column as a result of this function cool then to get the coordinates of the mouse click we have this mouse function by pygame we have this mouse module by pytheme that has a function getposition we get the x and y coordinates of that mouse click and if the x coordinate is less than 4 by 400 by 3 the first vertical line the first part then it is column 1. else if the value of the x coordinate is less than 400 by 3 into 2 that means it's less than the second partition but greater than the first partition the first vertical line then it would be column two please note that i have used the else of condition for doing the same thing and not if because i want to check the second condition only if the first one is not satisfied and then there's another else if that is the x coordinate is less than 400 which would be the last column the third column cool similarly for assigning the row i have checked the y coordinates accordingly now if the row and column are assigned some value and that port position is empty it's none i would call on to the get image function please see to the indexing part row and column are normal numberings when you're using them for indexing you need to decrease them by one cool now let's check out what the get image function does so i'll pass on the row and columns i got from here and use them to get my image rendered at that position but there is a problem to render my image i would use the blit function but the blip function does not identify the row and column positions but it identifies the destination coordinates so we again need to convert this row and column to a position okay to a coordinate these coordinates would be same for all the images for all the positions clicked to have a uniformity i would need to again convert this row one column to a single position the mouse coordinates would be very random and i don't want my images to be overlapping and that's why i have to do this i have to declare another function to get the coordinates from row one column okay so if the row is one row number is one i want a margin of 30 so the quarter would be 30 x coordinate would be 30. and similar if the similarly if the column is 1 the position y would be 30. i want a margin of 30. if it is row 2 then i'd be adding 30 the margin of 30 with 400 by 3 because i want the image to be rendered right after the second line with a margin of 30 okay 30 units cool and similarly there are conditions for the third row and the third column now i would assign the current symbol stored by xo to the board position that we got from the input to block function and if xo was x it change xo to o because the turn should be changed now to o and i and before that i would render the image at the given position the x image and if i have xo as o then there is this vice versa condition i'd be pasting o's picture and now xo would be changed to x now after calling the get image function in the input to block function i'd call on to the win cases function which would check if the there is an even in any row or column or along any diagonal so you should get that after pasting or rendering each image we would check if there is any win case okay now we are done with the five basic functions the five parts of the tictactoe game now we can move on to the main part of the program i'd be calling the draw grid function and then i'll have my game loop cool in the game loop i have that events loop where one event is to quit and the other event is to check if there has been any click on the mouse for that we have the mouse button down method if there has been a click on the mouse then i'd call on to the input to block function don't worry we would just get to the flow of the program if you don't understand how the program is interconnected and then i would be updating the entire display and i've set up the refresh rate using the clock object now let's quickly see how the program flows into each other i have just called on to the draw grid function in the main part so if i call on to the draw grid function what i'd see is i'd see a board getting rendered okay i'd see a board with lines and if i click onto the mouse i would call on to the input to block function which would give me the row and column and call on to the get image function which would help me paste my picture and then i would call on to the win cases which would check if there is an event along any row or column or diagonal and then add from the win cases function i'd call on to the result function which would print my result if it is a draw or a win if there is no such win if there if no win cases are satisfied my tictactoe game would take an inputs until all the blocks are filled with some image so now if i run this i'll play it twice just so i can check both the cases for x when or o spin and to check a draw so this game is a draw and if i play it again i have x1 message printed so everything is working fine and if i quit the screen simply goes away cool everything worked as we wanted it to work and this was all about the tictactoe game hope you understood whatever we did in this program in the program thank you