hello guys welcome to the next video on Java fix tutorial for beginners in this video we will see how we can use and add combobox in Java FX so let's get started to start with I have created a project in which I have a min dot Java file in which I have added this line to add the main dot F XML and I have created this blank F XML file okay so till now I think you know how to do this okay and now what I'm going to do is first of all I'm going to create a controller class and one way of creating controller class is just rightclicking on the F XML file and then go to source and in here you can just click this generate controller and it's going to give you the automatic name if you satisfy with this name you can just click OK ok and it's going to create you this controller class now what I'm going to do is first of all I'm going to open my F XML file using scene builder and in this scene builder I have this anchor pane and I'm going to provide the size to this anchor pane as I always do which is 300 by 300 right so it has some initial size and now what I'm going to do is I'm going to go to the controls section here and I can see here a combo box control so I will drag and drop this combo box control here and I can resize it and you can see in the properties you can give the property called prompt text so for example you can give the prompt text something like you want to show some list of names so you can just say select name ok and press ENTER and it's going to give you this prompt text on the combo box right now just save it and now what I'm going to do is I'm going to go to my eclipses and in the controller main controller I am going to implement our interface called initialize able okay so just add this interface and this interface has a method which we need to implement that's why it's showing this error to us so just click the bulb and just add the unimplemented method okay and it's going to add this one method which is initialize able and we can use this method to initialize some components so what I'm going to do is first of all I'm going to add aa box element here so I will add at the rate FX ml and then I'm going to add public combo box and this combo box works as a list so you need to provide the type of you know data type which you want to have inside the combo box so for example we want to have the string data type here and then you can provide the name to your combo box for example combo box now what we are going to do is we are going to define observable list and I'm going to name it as list itself and I'm going to initialize it as effects collection dot observable ArrayList and inside these brackets you can give some argument as a list so for example I can give the list of names for example something like these and just import this class called observable list which is in JavaFX collection and now the error will go okay and now you can take this combo box and go inside your initialize method here and then you can just call a method called set items so just use this method called set items and this takes observable you list okay so you can just copy this and paste it here right so what this method does is whenever you run your code it initialize or it calls this method first which calls this code and it's going to initialize your combo box right and now one thing is remaining we need to link this combo box with the combo box which we have in the scene builder so select this combo box and then go to the code and then in the effects ID section you just need to give the same name as this variable name okay and one more thing we need to do here is go to the controller section on the left hand side and provide the controller class here so just choose application dot main controller from here and now save everything so save it and go to your project and right click on your project and refresh it and then save it and then run your project and now we can see the combo box with these populated names okay so we can choose some names but it's not doing anything so let's just create a method to listen this selection event okay so just close everything and go to your main controller dot Java class and in here we are going to create a method which will be a public void combo changed and the argument will be action event and what we are going to do is we are going to link this method to of a combo box in the scene builder okay so just go to your scene builder select your combo box and just choose this method which we have created which is combo changed and then what I'm going to do is I'm going to take a label here so just drag and drop a label in your scene builder and what I'm going to do is I'm going to display the name when I select some name using this combo box okay so I'm going to give some ID to this label so for example my label and the same ID I'm going to just copy it and I'm going to save my code first and I'm going to go to my controller and I'm going to define this label with this name okay okay so we have this label and this label we can use inside this combo changed method and what we are going to do we are going to just use this label and set some text on it so just call set text and what we want to set to this label we want to take the combo box and get the values which is set on the combo box so just use get value method which will give you the current selected value okay and it's going to set it on this label right so just save your code and run your code once again and when I select some name from here you can see it's set on the label right now for example you want to change the number of items in your combo box dynamically so on this button click event you want to add some more items to your combo box so I'm going to just comment this code for now and what I can do is I can take my combo box object and then call a method called get items so just take get items dot add all and this takes a collection of values so I'm going to provide some extra names here and save my code and run my app once again and whenever I select something from here you can see some more names are added to the combo box okay this action I can do with some button also so let's create one more function for example something like this and you can say button action here okay and in your scene builder you can drag and drop a button from here and you can just call this function which we have created which is button action and save everything and refresh your project once again and run it once again and right now we have four names inside the combo box and when we click this button it's going to increase the names right which we have added from this function okay now we can also add these lists from the effects ml file so for example I want to initiate this list from the F XML file what I can do is I'm going to comment this code so it's not going to populate this list to the combo box and I'm going to go to my main effects ml file and in here in the combo box so I have this combo box here what I'm going to do is I'm going to just extend this element something like this and in between these combo box tags I'm going to add the element called items so just add these items and then add element called effects collection so just add this effects collection here but it's not going to give you any intelligence because you need to import a collection class here so just add this line import Java FX dot collection dot star okay and now you can add effects collection and just close it and give the attribute here called FX Factory is equal to observable ArrayList this is the same list which we have defined in the collector class okay so now in between these elements for the effects collection you can add the items and how you can add the items you can add the items something like this so just add string and then FX value is equal to your text for example item 1 item 2 item 3 and so on for example item 4 and then you can save your code and run it once again and now you can see here it's propagated with item 1 2 3 & 4 okay so you can also populate your combo box using the F XML file something like this so this is all about combo box in Java FX I hope you have enjoyed this video please rate comment subscribe and bye for now