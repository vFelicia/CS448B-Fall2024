hello and welcome to the new head of the Java tutorial Series so today we will be covering aggregation in Java so till now we have covered uh in inheritance in Java and inheritance represents is a relationship and aggregation represents has a relationship I will tell you what what exactly this is uh so let's start this video If a class has an entity reference it is known as the aggregation and aggregation represents a hazard relationship okay because so consider a scenario where employee objects contain many information such as ID name email ID Etc it contains one more object that is name address so address contains so many fields like city state country zip code Etc okay uh so when to use aggregation and why to use aggregation so for y you can use aggregation for code reusability and when to use aggregation if the code reuses is also the best achieved by the aggregation when there is no is a relationship is a relationship is handled using uh inheritance and has a relationship is inside aggregation inheritance should be used only if the relationship is a either is maintained throughout the lifetime of the object involved otherwise aggregation is the best choice okay so I will cover one example uh that I have discussed earlier of the employee address so let me get into my IDE and I will create one new Java class name as aggregation let me increase the font size I will include my main method okay so I require one more class to hold the address of the employee I will name it as class address okay and inside this public static okay and insert this I will write string I will get City state and Country of that employee okay and I'll write one Constructor so public address and I will receive three parameters one is City no one needs state and another one is country and inside this I will map all those strings to the string that I have declared above that is City this velocity is equals to City uh again this Dot state is equals to state this dot country is equals to country okay so this declared one address class and one Constructor of the address class it which receives the three parameters city state and Country for that employee uh so I have created one address class which holds the address of the employee and now inside my main method public class I will write in ID which is uh receive the ID and string name to receive the employee's name and I will create address of type address this is where we are implementing aggregation in Java because we are receiving the address of the employee in in the format of address and this add format of the address we had declared over here which received the city state and control of the employee okay and I will write now one method Public Employee which receives the ID of the employee and string name of the employee and wait a minute uh aggregation in ID string name and address of type address okay so we have created Constructor for this class aggregation and upon create when we create a object of this class ID and name and address of the employees will receive and map those variable with this this Dot ID is equals to ID this dot name is equals to name this Dot address is equals to address let me check why I'm getting this error unexpected token wait a minute I should write Constructor outside the main method and all this declaration should be done I'll set the limit now it's okay and I need one more method to display the information of the employee display um system.out.printlain printer ID ID Plus name of that employee press name okay and below that I will print the address of that employee and address here you can see we have created address in the format of City then State and then country so I need to print in that format also address Dot City and then one space should be there address Dot state and space and then address Dot country this will print the address of the employee employee okay now inside my main method I will create the object of this classes to create the employee and I will create so now I have created a address one and address two of the employee and I have created two employees okay now I just need to display the information that we have got from this address one and employee one so to imprint that I will just simply call employee one dot display and employee two dot display okay and now now I will run this it should print the employee ID employee name and address of the employee okay so here you can see id101 name Jack a Mumbai Maharashtra India and id102 name hack and XYZ is the city uh State and Country of that employee so here you can see we can this by creating the separate class for the address we are reusing that code for to to create the multiple instances of the employee we just need to create one address for that employee and we we can pass it over here as in parameter to the employee class employee object sorry so in this way we can achieve a aggregation in Java so thank you for watching this video