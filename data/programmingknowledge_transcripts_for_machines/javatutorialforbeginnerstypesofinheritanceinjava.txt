and then welcome back to the another video without tutorial Series so today uh we are seeing in inheritance in Java part two where wherein will be discussing each and every type of inheritance in Java and there are basically five types of five types are there single multilevel hierarchical uh multiple and hybrid and as you know multiple inheritance is not supported in Java uh we'll discuss why not it is not supported in Java in our later videos but for now we will see in this video particularly we are seeing into a single and multilevel inheritance in Java so let me just open my IDE foreign class here and Class B is innate in the property of the Class A okay so we'll see when a short example of single level inheritance I will just write a new class inheritance let me increase the font size I will import the main main method and now I will declare one method inside this uh for that before that I will create one class called animal inside this I will declare one method name is eight and this method is not accepting any parameters any return type is also voiled that's why it is not returning anything else I will just print eating now I will create another class name as dog and as we discussed in our early video for implementing The Inheritance we use the keyword extends I will write extends animal so here uh dog is a subclass or the child class and the animal is the parent class or the superclass okay and the dog classes in editing the properties which are properties of the animal class now I will create one method here name as bark and I will just simply print marking okay now inside my main class that is the inheritance class and inside my main method I will create the object of the doc class let me call it as dog1 is equals to new dog okay and I have created the object of the glass and I will write D dot bark let's take the dog one dot work and dog1.8 sorry and now if I run this class um here you can see uh bulking and eating is getting printed on the console because uh in animal class that is apparent parent class we have written the word method avoid eat method uh which which is printing eating on the console and inside the dog we have a bark method and which is printing working and using the object of the doc class that is Doc one we are just calling the method bark and eat so here you can see we are we have written the implementation part of the eat method inside the animal class that is the parent class and still we are using it uh by the creating the object of the dark class because we have inherited the properties of the animal class inside the doc class that's why so this is the simple example of this uh single level in inheritance and next we have multilevel inheritance so let me just go here and I will create one another class name as multi level inheritance now let me just increase the font size we'll write my main method and as you can see here multilevel inheritance is nothing but multiple classes are in inheriting uh the properties as you can see here uh Class C is inheriting the properties of the Class B and Class B is generating the properties of Class A okay so we will Implement try to implement this inside our code so I will take the same example as we have taken for the single single level inheritance uh I will just copy this animal class inside this class k y is throwing error degree class found in acha oh sorry we have already written the cinema class over here and let me just comment this out so that IntelliJ IDEA will not throw the errors okay here we have this animal class and one dog class is also I require and I will just copy this doc class also okay and I will require another class so that I can have three classes which I need inheriting the properties of animal class and I will write new class class name and let's suppose baby dog and which is inheriting the properties of dog and it has its own method known as void well let's suppose whip and I will just simply print whipping okay here you can see uh one parent class is their NM animal a neat method is there and dog is extending the extending the animal class and baby dog is extending the doc class so here here you can see one class in editing the another class and another that class is also in editing the properties of the main main parent class okay so simply we will create the object of the Davido class let's suppose dog one is equal to new baby dog okay and now if I write dog1 Dot whip whip is the method I guess this is what sorry I have written wrong here now it's okay uh web and dog one dot bark doggo and Dot it now if I run this class now it should output should be whipping uh barking and eating here you can see now now in hierarchical and uh hybrid we will discuss in the next video and we will also discuss why multiple units is not supported in Java thank you for watching this video