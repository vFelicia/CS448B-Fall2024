so basically to start the application you need to type rail server and this will type the application on your machine so like previous part we had created a form using a basic form layout using the signup method so let's create the input type for this so for this we can type input is equal to email uh so this is the email and the name is equal to uh we can't give a name by any recent name uh this is like let's give this a name email or like let's give this a username okay and let's give the name username and required and this is required so let's get this and so i hope this is fine and we can define our id is equal to username basically ids is needed for the label so for this corresponding let's create a label method so let's create a label table for username and let's create this label let's close this and let's type user name here so this is how it is done and to avoid any like cr csfr token since we are making a process so we need to define percent equal to token underscope tag and this is this okay so this is how we do it in types of good email name is going to do the name id and required and this is like label for this is user password so we are creating a user password here and for this we are defining input type is equal to password and we need to define name is equal to user password and id equal to user password okay and this is also required so we keep this as required okay and since we need to define input type is equal to submit value is equal to register let's keep a value of register this is fine and we can close the stack so by default when we refresh this page so we need to find something like username and we need to find a password here okay yeah password is required so let's keep this and let's put there as a password okay and this is fine okay so let's yeah so let's yeah we have option to sign up that is username and password and let's we have a register button okay so this is fine so let's give this as a signup page okay so this is fine now so we have a user password and like so let's create when we submit this form so we need a method where we need to submit this form so let's create this method uh let's create this method uh sorry a route for this so that is post register and when we hit this register so basically we tell them okay uh we define users hash create and we need to define this as as register okay so this is fine he defined as the disturb post register we need to find to use this hash create as registers so when we make a post request so we need to hit this method okay so i have maintained this method so i'll give you to show you a trick or how to view this routes everywhere so move to this local route okay this is your base route app is working this sign up app is working okay type invalid route something like uh any invalid route maybe i type invalid a uh invalid xyz something anything invalid you get this and now you can type register uh uh you can like you can search from here as well and i'll use this so it says register underscore path which hits on users as great so i can use this copy this i'll copy this register underscore path and let's go to this page and i can type percent equal to this so this works perfectly fine so this would be like this would help you from defining like this works as a constant so it action moves to this row data but these are good to put okay so when you put this this register underscore path it will hit this method because i have told him to move hit this method and then you can simply render json just for the simplicity i am telling it to render json params okay so let's now hit the sign up uh let's uh type a user at mail.com and let's give a dummy password something like very dummy password you can give so one two three four five six okay i'll type again one two three four five six so let's hit this so when we hit so we never so we have authenticity to open is to this username is equal to this and user password is this and controller this action is great this is fine so what we need to define we need to define email is equal to patterns of what parents you are getting here so we are getting a parent for username let's copy this to avoid any and so it is equal to items of this user password okay and this is fine so we have already like i have shown you like in the previous tutorial so i'll just give you a quick overview yeah so we had created a user right so okay this is not needed i'll show you again we tap exit and we'll type rails console okay so rails console will be open and when i type user dot connection and then i'll type user so this is how we have email and password underscore digest okay so this is we how we create a user so we can define user we can define simply user dot create we need to define user.grade where email is equal to email and password underscore digest equal to password i hope this is fine and then you can simply say response response is equal to this and let's define a success is going to be true and json response okay so let's hit this request again okay i need to make sure the server is running server is not running so let's start the server so let's hit the request again and this time the user should be created okay so basically i'll show you again once again so password is this user is email.com let's again making the request again let's make a request again okay i'll assume this and now i'll so this is the username and user password let's make the request again and i should get a success rule true okay good if the success is true then let me check let me check uh so help raise console okay so i'll do this console and this would be do user dot first okay so now you see the password is being stored in a digested form okay so thank you everyone for watching this tutorial i'll catch you in the next one thank you everyone