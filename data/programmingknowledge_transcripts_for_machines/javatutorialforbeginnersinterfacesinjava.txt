hello and welcome back to the new way of the Java tutorial Series so today in this video we will be covering interfaces in Java which is used to achieve the abstractions in abstraction in Java okay so an interface in Java is a blueprint of the class it has the static constants and Abstract methods the interface in Java is a mechanism to achieve abstraction okay so there there can be only abstract methods in Java interface not not method body because we have seen earlier abstract methods doesn't have anybody uh it is used to achieve abstraction and multiple inheritance in Java so in when we are trying to when we are learning inheritance in Java at that time I have said uh multiple multiple entries is not supported in Java and we can achieve that multiple units in Java by using the interface by uh how we will see in this video itself in other words you can say that interfaces can have the abstract methods and variables it cannot have the method body okay and interface in Java is also represents a is a relationship as we have discussed in our in inheritance part and uh next up why we use interfaces in Java there are mainly three reason to use interfaces in Java it can be used to achieve the abstraction by interface we can support the functionality of the multiple unitings in Java and it can be used to achieve loose coupling okay so how to declare any interface okay so we'll see uh this how to declare when we bring some example of The Inheritance okay before that uh we need to understand some uh interface improvements that Java has done after the Java 8 release okay the Java compiler adds the public and Abstract keyword before the interface method and moreover it adds the public and static and final keywords before the data members in other words uh here you can see one example interface printable and int Min is equal to 5 and wordprint method is declared and uh what com compiler of the Java interprets is as uh this is the Java printable.java class dot Java class and this is the class which is created by the compiler so here we have written int mean is equal to 5 and what the Java compiler interprets is as public static final it adds the three uh keywords public static final if you heard before the Declaration of that variable whether you write it or doesn't don't write it it doesn't matter compiler will going to add these keywords before that Declaration of that variable and for the method it adds public abstract void okay and so here are some terms that you need to understand whenever a class a class in class A relationship is there it extends the okay this is the inheritance and whenever class implements in in interface and interface extends an interface okay we'll see one example of it okay so see we will see one real life example of the Java interface uh Bank example as we have discussed earlier okay so let me get into my IDE and I will create one new class okay by the name of interfaces let me increase my font size I will get my main method okay and now I have to declare one interface okay okay wait now if if I write one interface name is okay interface Bank and inside this interface I will create one float variable that is rate of invest rate of interest okay this is the method rate of interest and here you can see I have not written a float rate of I have simply written float rate of interest so what Java entropy interprets this method as uh here you can see I have discussed earlier also public abstract okay so it adds adds one two variables two keywords so before that public abstract float rate of interest this is what Java interprets it interbates as okay and now you know inside outside this interface I will write one class any class SBI which is implements Bank interface okay so and inside this wait a second why I am getting error duplicate class okay I will write Banks now it okay Banks okay and here IntelliJ IDEA is throwing some errors let me check why the class SBI must be either declared as app store called implement the abstract method rate of interest okay so this is here you can see we we didn't write any abstract keyword before it and if still that Java is throwing some error telling that this is an abstract method you have to implement this method inside this class okay so let us Implement that method public float rate of interest and for the body of this method I will simply return float value 9.15 f okay now it's not doing error and inside my main method I will create the object of that Banks interface oops sorry Banks obj1 is equals to new SBI okay and now here I will just simply print sbis rate of interest is and I will concat it with what is the object name object one dot rate of interest okay uh it was a throwing some errors duplicate class found okay SBI is Click we will write sbis it's okay okay and run interface access dot Java here you can see SBI is Roi is 9.15 9.15 here here we have declared it so this is how a interfaces Works in Java to implement that interface we have we have one keyword is there implements and to achieve the what we can say polymorphism we have we are writing extends keywords okay so these are some differences don't get confused inside this when the class when there is a relation between class and class extend keywords is there when there is a relation between uh class n interface implements keyword is there and when there is a relationship between interface and interface extend keyword is there okay so let's discuss how we can achieve the multiple inheritance in Java by using the interfaces okay so let me comment this out this code or else I will just remove this so that you don't get confused between the passcode and current code okay uh now if I create one interface okay interface and I will name that printable inside this I will write void one method which doesn't return anything and this is an abstract method because everything will return inside the interface is an abstract method okay and after that I will write in again one interface uh travel show s h o w a b l e is showable and inside this I will write void show method okay so these are two interfaces and now inside my this interface is class which which is public class I will create public void print okay now before that I have to write one keyword which is implements so that Javan does knows that we are trying to implement those interfaces inside this public class interfaces okay so the name of the two interfaces are printable and one is actually and an intelligent idea is showing some errors we have to okay we have to declare that show method also inside this because that method was abstract method okay showing theirs and inside this print I will write simply one random string let's suppose hello and inside this I will write um world okay and now inside this main method I will create the object of this interfaces class interfaces sorry this is object one is equals to new interfaces okay and now if I try to call those methods object1 dot print and obj1 Dot show okay and now if I run this class hello and World should get printed okay hello and world is getting printed so here you can see uh we are trying to achieve the multiple inheritance over here why so because uh this is one child class and these are two parent classes and we are trying to inherit these two parent classes inside one child class and which is the example of the multiple heritance Okay so this is how you can achieve multiple linear attention Java by using the interfaces and the keyword which is used to here do this is implements okay so this is pretty much about interfaces in Java I hope you got some idea about the interfaces in Java thank you for watching this video