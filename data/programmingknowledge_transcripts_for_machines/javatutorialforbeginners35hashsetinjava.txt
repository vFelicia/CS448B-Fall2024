hello guys and welcome to the next video tutorial on Java programming for beginners and in this video we will see what are hash set or sets and how we can use hash set in Java earlier in this series we have seen how to use array list and Link lists in Java or we can say we have seen how to use list in general in Java now hash set belongs to the set category and the basic difference between lists and sets is that list can contain duplicate elements but a set can only contain unique elements so it cannot contain duplicate elements now let's see how we can declare headset so you need to have this import called import java.util do ASX which is a wild card which includes all the um all the classes which are there in the util namespace and now let's see how we can declare hash set so hash set starts with the keyword hash set set and then in this angular bracket comes the data type it can be integer or double or string or the and data type of your set then comes uh the name of your uh hash set or variable name is equal to new not like this but new hash set and then once again comes string and then you can uh Define the length of the headset it's opt optional and this can be overloaded with the size or different ways okay so whenever you hover over this hash set you can uh see uh how you can use this Constructor okay now it uh generally works in the same way as any list or uh array list to add elements so let's see how we can add element to the set so we will use our name H set dot add and then we can add some string okay so for example I want to add some name and some other names in the same way you can add multiple names or multiple values which are not not duplicate values so Tom Jack some other name some other name okay and now when you compile your program it's okay but let's set say it has a duplicate entry it will compile I think but when you try to access these value it will give you some errors okay so in this way you can use hash set and to access the values in the hash set what you can do is you can use iterator so in the last video we have seen how to use list iterators uh in the same way you can use iterators normally uh which uh you can use to iterate over your hash set or set in general and you just need to use this iterator keyword and then the data type of your list which is string in my case then your variable name for example ITR is equal to your name of your hash set dot iterator okay and then this it R you can use to iterate over your values for example I can use while ITR dot has next as we have seen in the last video if it has next value then we can use ciso control shift and then ITR dot not here but it. next right it do next in a similar way you can uh iterate over the list in reverse order Let's uh compile it once so it it Rays over the list and gives or prints our list in ascending order from top to bottom if you want to uh print your list in uh bottom to top order or in reverse order what you can do is instead of this has next you can use has previous so search for has previous and then you can uh iterate over your um uh list in reverse order okay but as we have seen in the last video that list iterator has has previous and previous value the iterators for the sets doesn't have this has previous and previous value you can see there is no method called has previous or previous values okay so only List iterators have has previous and previous values but they have some other method like um remove or clear this list if you want to remove the uh values you can use remove or clear method so for example I want to clear Let's uh iterate over using has next and before this we will remove some values so for example name dot remove on the basis of object you can remove or you can can remove on the basis of uh your your collection or you can see uh these are the options you have to remove the values right or if you want to clear you can just use name do clear and it will clear all the values from your hash set right so it will clear all the values and whenever you run the program you will not see anything here because it has already been cleared it has some other method so you can see you can check the size of your list by using do size method you can uh check if the uh list is empty or not using is empty method you can uh use uh add we have already seen you can add on on the basis of some conditions and then there are some method you can try which you want to use so you can just hover over this method and you will be able to see its use when you hover over it so I hope you have enjoyed this video please wrate comment and subscribe and bye for now