hey guys welcome to the next video on open CV tutorial for beginners using Python in this video we will understand the concept behind the half transform so first of all what is Hough transform so half transform is a popular technique to detect any shape if you can represent that shape in a mathematical form Hough transform can detect the shape even if it is broken or distorted a little bit now this explanation might seem a little bit confusing so let me explain it by an example so let's say you have an image of this road and you want to detect these lane lines in this road image so the first step in order to detect these Lane lines in this road is to find the edge pixels using canny edge detection or any other edge detection method now after you found out the edges using any edge detection method you want a geometrical representation of that edge and in order to find out the geometrical representation for example you want to find out the slope of this edge or its intercept you can use half transform to represent these pixels or edges in the mathematical or geometrical form so after you find out the edges using any edge detector you just have the sequence of pixels so you can loop through all the pixels and somehow figure out the slope and intercepts but it's a very difficult task so we want some mechanism that gives more weight age to pixels that are already in line and this is what we can achieve using Hough transform so let's begin and let's start with the lines so a line in the image can be represented by two coordinate systems first is using the cut in coordinate system and using this equation you can represent a line which is y is equal to MX plus C and you can also represent this line using polar coordinate system using this equation which is X cos theta plus y sine theta is equal to R or Rho sometimes so let's start with this equation first which is a Cartesian coordinate system equation which is y is equal to MX plus C so when you represent a line in x and y coordinates which is also called the XY space this equation looks like this so Y is equal to MX plus C where m is the slope of the line and C is the intercept of this line so if you know the values of M and C you can represent this line in the X and y coordinate now in Hough transform you can represent this line in other form also and this is called the M C space or the Hough space so using this equation when you take M on this axis and C on this vertical axis then this is called the M C space so earlier we have represented this line in the XY space and now we are saying that we want to represent this using the M C coordinate where M is on the horizontal line and C is on the vertical line so when you represent this simple line in the MC space or the half space it can be represented as a point so this line can be represented as a point so we all know that a line is a collection of points and managing the collection of points is tougher than managing a single point so if you want to manage a collection of point and if you were to manage a single point which will you prefer and an obvious answer will be to manage the single point and this is what this MC space is doing it's representing a line in the form of a point in MC space or the Hough space and the opposite of this concept is also possible so if you can represent a point using this coordinate in the XY space then it can be represented as a line in the MC space okay and the formula now will turn into this equation which is C is equal to minus X a.m. plus y a right so you can represent a point and if you have the X&Y coordinate in the MC space you can represent this as a line and this will be the equation where X will be the slope now and Y will be the intercept earlier M was the slope and C was the intercept but when you just transform or just represent this point into MC space then your X becomes or minus X becomes the slope and y becomes the intercept so how does these concepts are going to help us so the Hough transform is all about doing what we have learned converting points in the XY space to the lines in the MC space or the Huff space so for example you can see four points 1 2 3 4 which are joined by a line right so you can represent these four points and you can join all these four points and it's our representation of a line and here slope is equal to M and intercept is equal to C in the XY space the same line you can represent in the see space using these four lines okay so every point is a line in the MC space and you see the intersection point here which is on the MC coordinate so you have taken an edge detected image and for every point that is a non black point you draw lines in the MC space and obviously when you draw these lines these lines will intersect with each other and these intersections mark are the parameter of a line okay so in the MC space you can represent each and every point as a line and they will intersect on a single point and now this intersection point can be used to draw a line so this was the representation of points in a line using MC space using a Cartesian coordinate system now let's apply these same concepts which we have learned using the Cartesian coordinate system into a polar coordinate system so as we all know that in the polar coordinate system we can represent a line using this equation also which is R is equal to X multiplied by cos theta plus y multiplied by sine theta or in other form you can also represent this equation like this where Y is equal to minus cos theta by sine theta multiplied by X plus R divided by sine theta so this is your XY space where line can be represented like this and we are going to transform or represent this line using this equation into the R theta space or the half space okay so this line using this equation can also be represented as a point in R theta or the ha space like this so let's take an example about this so as I said the equation was R is equal to X multiplied by cos theta plus y multiplied by sine theta where this theta is the angle of the line and R is the distance from the origin to the line so let's say we want to represent a point which is from XY space into a half space into R theta space so we give the values of x 0 and y 0 which will be the first point we can represent this point in the form of line in the half space or the artistas space in this formation which looks like a sine curve using this equation so this is for the one point representation in XY space to a line representation in the half space so let's say you have multiple points so we take three points then it's going to look like this so let's say x0 is equal to 8 and y 0 is equal to 6 X 1 is equal to 4 y 1 is equal to 9 and X 2 is equal to 12 and Y 2 is equal to 3 so we have three points in the XY space they can be represented in the half space using three lines and as we have seen in the Cartesian coordinate system these points can be represented in these lines in the half space in the polar coordinate system also using these curved line and this intersection is going to represent a line in the half space so which representation we are going to use in order to use the Hough transform so this equation is not able to represent the vertical lines that's why generally we use this equation or polar coordinate system in order to use half transform so the Hough transform Algar involves these four important steps in the first step as detection is done using canny edge detector or any edge detection method in the second step mapping of the edge points to the half space is done and all these edge points are stored in an accumulator in the third step interpretation of accumulator to yield lines of invalid length is done and this interpretation can be done by threshold Anor any other constraint the fourth step involves the conversion of infinite line to finite lines now OpenCV implements two kind of half line transforms the first is the standard Hough transform which is done using half lines method the second type is the probabilistic half line transform which is done by half lines P method so this is the half lines method and this is the half lines P method so the implementation of these two methods in OpenCV we are going to see in the next video so stay tuned and I'm going to see you in the next video you