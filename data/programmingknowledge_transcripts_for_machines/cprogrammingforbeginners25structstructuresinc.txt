hello guys welcome to the next video tutorial on C programming for beginners and in this video we will see what are structures in C and how we can use structures in C so the first question is what is a structure in C uh in C a structure is a collection of different uh variable which are grouped together to make uh make some logical uh group so for example I want to make a structure of a student uh there is no direct variable uh I can uh uh give to define the attribute for a student so that I know that this uh attribute is for some particular student there can be many students and there can be uh you know I have to declare so many uh variables and in the end when I have so many variables I can get confused uh which which variable is assigned to which student so structures make it very easy to uh Define if you have a group of variable to which you want to bind uh in a logical group so let's see how we can uh uh declare a structure in C so structure you just uh need to use struct keyword in U to define a structure and then the name of the structure for example student and then comes these uh curly braces I just need to change the fonts so then comes these uh curly braces here and then inside these curly braces you can Define your variable so what attributes the students can have he can have his ID his or her so this ID can be an integer so I will Define int ID then a student can have his uh name so I can Define string as a name so string for example car uh pointer I can Define it as name hello guys welcome to the next video tutorial on C programming for beginners and in this video I will teach you what is a structure in C and how we can use structures in C now what is a structure structure is a group of variabl which you can group uh together to make a logical uh you know variable for example you want to Define some database of uh some student or you want to uh uh create some record of a student or some students uh it will be very difficult to Define variables to each student and then if in the end if you have many variables containing the student requir uh it can get a little bit messy but uh we can uh make this situation better by using structure so structure is a logical uh group of variables so to define a structure for example I want to define a structure of student uh to define a structure we use a keyword called struct and then we uh give the name name of the structure for example I give the name to my structure as student and then comes curly braces and inside these curly braces you define your attributes for this student structure okay so for example what attributes or what traits a student can have a student can have uh his ID which can be integer ID student ID can be integer so I defined integer then student have his name which can be character and student can have his score or marks which can be in percentage and percentage we will Define it as a floating uh point so uh he can have these three attributes or these three traits right now for each student we can Define this uh a different uh you know instance of a structure and we can use structure uh to make a logical group of these three variable for a particular student okay now once you define uh the structure this kind of structure you can use it in your main function like this so whenever you define a structure you need to call it inside your main function and how you can call it you can just copy the name of the structure and struct keyword itself and then give the name to this student structure right so for example you will give this student structure name record one for example this uh indicates the student rec student record of student one for example right now this is is the variable you define for this student structure so this can be a treated the student can be treated as a data type in this case and structure is a key keyword which tells that it's a uh student data type which is a structure okay and this is your variable name just uh think it think it like this okay now whenever you want to assign some value to this record which is a uh instance of uh the student structure instance means one uh part of this student uh then how you can do it you can just do it simply like this so you just need to take this record and you for example you want to assign ID to this uh record you just need to use this dots separate data and you will be able to see the member variables of this uh student uh structure you can see automatically in code blocks okay so these ID name and percentage are called the members of the structure okay and you can call them using this dot separator of but after this variable okay so for example student ID is equal to uh one for example I have assigned one to record one and student uh name so I will once again use this do name and then I can assign any name to this student but if you remember in the last video when I uh teach you what are strings I taught you how you can copy a string to uh you know a character array right or you can assign or copy a string you can just use a function called St St cpy which is string copy and then you can use uh this thing so the first argument of this function is the destination where you want to assign the value and second uh uh argument is the value itself for example the value is John so basically what we have done is we have assigned John as a value to this uh name variable record. name variable okay and the third we can assign percentage like the same so record one dot percentage is equal to for example example uh 70.2 okay these are the percentage scored by him okay now once you assign uh these uh values to the structure or the to the instance of the structure you can access these values also using uh your print uh uh print function so just use print and then you can just call for example ID so uh you can just write ID is equal to percentage D and then you can just give the space uh and just write name is equal to percentage s and just gives a little bit more space and then just write percent is equal to uh percentage F okay so this is for holding the decimal value this is for holding the string this is for holding uh the floating point right and we will give the line break here also and then we will assign or we can we can access the value which we have assigned just by like same as we have assigned the values so record. ID will give you the ID record. name will give you the name and record do percentage record 1. percentage will give you the percentage okay like this so let's uh break this print into few lines so we can see it easy easily okay so we can access these values like this okay so let's try and run the program and hopefully it doesn't contain any errors and you can see ID is equal to 1 name is equal to John and percentage is equal to 70.1 1999 which is 70.2 right so in the same way you can uh Define different instance of this student structure and you can maintain a record of the student for example uh you define uh some different structure so I will just copy the same and paste it below to uh Define a second uh record and this record I will name it as record two everywhere I will just change it record two record two record two here also record two so I will just copy record to for the student two okay and the ID now is uh two the name will change for example Mark and the percentage also changes for example 91.3 okay and now we have two records of the student student with uh student ID 1 and student with student ID 2 so logically we have two record for students right run the program and now it so says ID is equal to 1 name John percentage 70 something ID is equal to two name Mark percent uh 90.1 point something right so in this way you can uh Define as many instances of this structure as you want and you can uh you know create uh uh record for the student or so this is one way of using structure there's one more way of using structure uh in C and this is by directly giving the name to your student uh structure for example I can just delete this line from here and instead of giving giving the name to this uh uh student variable here I can just give the name at the Declaration of this student structure for example record right and then this record will be my variable name okay so the student is the structure and record will be the variable able name of your uh structure okay and then you can use this record to uh uh you know access the value or assign the values to this record for example here you can just replace record like this and it will work like same so you don't need to declare this record inside your main this can be also declared like this and this will be your variable name and you don't need to declare inside your main and when you run the program it'll run fine it'll give you the output so in this way you can use structures in C and uh try uh you know using structures uh by yourself and try practicing uh using structures and you will be good to go so I hope you have enjoyed this video please wait comment and subscribe and bye for now