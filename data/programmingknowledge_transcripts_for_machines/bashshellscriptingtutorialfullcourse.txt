hello guys and welcome back to the channel this is ayush and from now we are going to start out the data shell scripting tutorial okay so we will start with the basics to the advanced and we will cover many uh Concepts like we will cover like programming uh Concepts like a fails for Loop so and also we will create some scripts like automated scripts and we will do some minor projects also so now from uh this video like in today's video we will cover some basic concepts like what is a shell uh what is a bash and also we'll see how you can create your first script that would be very interesting thing okay but before starting uh let me tell you like we use cell scripting uh mostly for the purpose of the automation okay if you want to automate some kind of some kind of task then you can use the cell scripting as an automation uh like not as an automation you can say like uh Shadow you can use the cell script as a tool to automate your work okay so now first of all now let's come to the point and we will learn about the what is the Shelf okay so shell is nothing but you can say it's uh just like interface which provides you to write some codes and routes write some commands so right now this uh terminal using the bash shape okay so but also according to the some other articles some books uh shell is just like an interpreter like uh it basically runs uh uh like executes the command line by line okay so that is the work of The Interpreter like it executes the code line by line and if some error occurs then it will just throw it on the screen so shell is just also like a interpreter it basically interprets the dot sh files or dot sh programs you can say or you can say the scripts so now you will say what is a script so script is nothing but like your program file just like in Python UK dot Pi UI file so similarly in in cell scripting you know in batches scripting we create the dot sh file okay so why we say like shell acts like interpreter because it interprets the dot sh files or dot sh programs you can say so I hope you got a fair idea about what is a cell okay so now let's start with the basic concept like what are the different types of cell and obviously as operating system okay so there are many cells like a partial and also uh like K bone cell bone again cell okay so you can get the list of the cells in this particular directly uh that's not directly it's a directory okay so here you can see the multiple cells is being used or present in my this operating system so for this whole series we will uh like stick with the only the second one this one passes pass that means gone against shell okay but this assets the first one cell was the first cell uh which was created by the Linux and the next uh there is Born Again shell came into the role so uh we will use the bond against shell for our this entire series and uh now what we have to do uh we have to just create a one single script of hello world and uh also let me tell you the what is this bin so the cell your your cell will be present in this bin directory okay so now but before creating your first script let me tell you the uh what the script is being used by this session or by this terminal so you need to just enter this Eco and the cell Powershell and here you can see the batch shell is being used okay now we have to go we have to just create the first script that is the hello world script how we will do it we will just move on to the desktop and I'll create the cat hello world.sh why dot research because like we are getting a solicit script so batches script that's the way using the dot sh extension so here you can see the file has been created Hello dot is now I will use this hash slash then cash it's just like this line basically tells like uh tells our script or our the shell to which shell to use like tell The Interpreter which cell to use so here I am just defining like I want to use the P bash again of cell that is this one main batch not sh okay so now I can do eco eco is just like the print command kit Echo hello old I'm learning Bash scripting this one now get Ctrl D and to run the script you need to add some permissions so you cannot directly run the script if you will check the permission for hello world.sh so here you can see this is only read write permission you cannot execute that script so to give the particular permission to this particular file you will need to just give add the permission using the CH mode you will if you will use plus X and the lower dot is the name of the file so permission will get added and here you will see the execution permission has been added and the color also has been changed from white to the green okay now to execute what you do you have to just do dot slash and the name of the script and we are done so as you can see our script has been executed successfully okay so I hope you like this guys like how you can create the shell scripting and also you I hope you got to learn about the what is a shell what is Bash and if not then please go and you should explore yourself also okay so that's all for this guys we will meet you in the next video thank you thank you for watching and I will come up and meet you in the next video with some amazing Concepts thank you hello guys now in this particular video we will be installing the visual studio code because we will use this ID to write our service scripts okay so uh let me tell you how you can install it in an easy way so here is the Ubuntu software uh from here you can install multiple softwares now you have to search for the visual studio code and it will take some time to load or let's wait um so but before that let me tell you about what is visual studio code so it's basically on the ID which we use to write our uh course you can write code in any language which you want from C plus plus to Java python everything okay so here you can see the review is also good now we have to just click on this install so it will take some time for installation uh let's wait okay it didn't it is installed now so what now we have to do we have to just click on this show applications and here's your search for the vs code or Visual Studio it may be yeah here you can see the video Studio code now just click on it and it will open up like this and this is something uh okay so here you can see you need to open some folder uh let me click on open folder and on the desktop I want to create one folder like uh plus I will create the shell scripting tutorial okay just click on create and you're done you have to just click on open uh don't save item but this is some kind of file okay let's wait having the system is lying because of the low Ram actually I'm running it in the Ubuntu machine oh sorry in virtualbox that so it's happening like this yeah now here I will create just one simple script that is zero one uh s dot sh I will create sorry sorry I have entered comma there again I'll create 0 1 test dot sh okay so here you need to add the C Bank this symbol is called C Bank Bash equal you have to just write here hello world and you are good to go you have to just open up the terminal here new terminal and you will need to just add the permission for this particular file that is zero one test.sh and you need to just execute it uh dot slash zero one test.sh okay uh let me just do a list why it's not executing okay dot slash zero one test dot sh white showing uh banosis file or directory okay I think uh Ministry written like this okay so here you can see hello world okay so in this way uh we can write our scripts in this ID and we can easily run it okay so that's all for today's video guys I hope you successfully installed and in our further videos we will start with the basic concepts of the cell scripting so that's all for today's video and I will meet you in the next one thank you thank you for watching now in this video we will be learning about the what are the variables okay so first of all let me tell you about the what are the topics which we will be covering in this particular video so let me just open up the terminal and I will write all those topics which will be covering this particular video so first of all we will cover variables what are the variables then use the defined variables and next environment variables okay so these are the topics which we'll be covering in this particular video so first of all let me start with the variables okay what are the variables okay but before that let me first open up my vs code actually I've already done it here you can see now you have to just create one file that is zero two variables dot sh okay so we will use dot sh extension for creation of file and I hope you have already installed this vs code actually in our previous video we have covered this part of installation so now what we have to do uh we have to just uh enter this shape band and then you have to just you are good to go you can write any command here also like you uh variables you can write here variables okay just to save it and here is the Run button if you run it maybe it will run yeah it's working fine okay so now what we can do uh let me tell you about first variables what are the variables okay so variables is nothing but uh just like a container okay container which will hold some values okay so variable is nothing but just like a container which will hold some kind of value it may be integer it may be a string it can be your uh any kind of value like a few decimal value or character value okay so these are the variables okay so what happens actually uh like internally what are those what things happen okay if you are coming from the C plus plus background so you might be aware of those things like let me tell you all this uh I will open up the paint so that it will be easy to understand for you okay so I will just create a block here okay so what happens if you create a variable suppose you create a variable a equal to 10 okay so at that time what will happen a block will be created in a memory and some address will be given to that okay now you will tell ask me what are the address values nothing but uh which is used to access those variables okay if you are aware of C plus plus or python then you might be aware of it but right now just keep in mind that variables are stored at one particular address so it can be any address I will just enter like it it uh what we can say address is in the form of hexadecimal so you can write anything like hexadecimal is like a to f 1 to 9 anything you can like this okay so you can think like this is the address and this will be the value you can suppose like it will be 10 and the name of the variable will be a okay so this is the case happens internally if you create a variable in any operating system okay so now we will start with the basic one like we will create some variables and we will also learn about some kind of rules which we follow while creating the variables in our action okay or back to scripting you can say so here what we will do uh I will just create some variables I can create name equal to I okay you can write like this and then what you will need to do you can also give like H equal to 20 you can say and now we are good to go right now we will just print those variables so how you can print using dollar and the name of the variable you can easily print the variables okay so just save these variables and I will run up run this variable okay so here you can see the variable the first line and the second my name is printed okay so but before moving forward let me tell you about the some of the rules which we follow while creating the variables okay so there are some interesting thing if you do like this add a space so at that time your shell thinks like it's kind of for command so there should be no any spaces in your variable name in cell scripting spatially or bash scripting so if you will do so it will say command not form here you can see so you don't have to give any kind of a space in your variable name okay I hope it's clear to you guys let me just to create some another variable like pointer I will create some kind of 9.9 I will give it a time okay it's fine so here I will add equal my pointer is like this maybe a string concatenation will happen there pointer let me just to save and I will again when this script so here you can see my pointer is this plus okay if I will not give it it doesn't affect I think okay so here you can see my pointer is 9.89 so in this way you can uh enter the variables and enter the values assign the value to the variables so these are basically the user defined variables okay Echo you have to just here to user defined variables okay so this is the okay so what if I want to uh print all those in a same line like equal name and equal it is also I want okay let's do it I will remove this line save it okay here you can see the ayush 20 okay so these are the user defined variables okay I hope it is clear to you what are the variables now moving forward uh we will learn about the sum of what we can say involvement variables okay so I will just do a quick Google search for you guys and I will search for the user not user environment variables okay so involvement will write that much being smiling environment variables shells cutting in JavaScript yeah here we got it okay so here you can see uh there are many blocks for on EX for gigs or digital ocean okay so let me open this one Geeks for gigs so it's uh good website to learn more things okay so here you can see it's loading just wait for some time okay so here you can see what are the environment values so environment is very system defined variables you can see it is given by the shell to use for you guys okay so here you can see the scope of an environment variable and all those things I will tell you about the scope and always in the next video okay right now just learn about the environment variables okay so here you can see the name is one of the environmental variables both over here and Google in the same way okay let me just this so here you can see okay name equal to value okay I will use some different website let me use this solution not this one this one looks good or I will just do list here because I want the list of the environment variables and cell script we use so here you can see the uh not Windows I want Linux foreign variables okay so uh let me just use some variables here like uh I remember some value books like Eco shell if you will use shell with an enormous variables keep in mind like it is written always in the capital letter and here I will just add some text like first environment variable okay and just save it and run it and here you will see the bin bash it gives you the name like cell which cell you are using right now okay if you will do date also it will give you the information about date okay so just save it and run it from here and here you can see the okay it's not displaying with a date why I don't know okay it should okay just run this okay I think date is not one involvement variable let me just pick the search for it date environment variable minutes okay so here you can see the uh current environment variables so there are many articles so you can read here like when you do we can do like this also uh let me just copy and I will paste it here now and I will use here now okay just save it and click on run and here you can see the current date and time all those things okay so in this way you can use uh variables you can assign values and I hope you got to learn about this user defined variables as well as environment variables and uh in the next video also I will tell you some more environment variables okay so I hope you like this particular video guys and thank you thank you for watching and if you have any queries then you can ask in the comment section for these all the source code I will be posting on my GitHub repository I will give the link in the description okay so thank you thank you for watching I'll meet you in the next one thank you and bye bye now in this video we'll be learning about the how we can get the input from the user okay so basically we will see uh with the many examples like suppose I will ask the user to enter his name so at that time you just should be able to enter his name and all those things okay so basically we will use the read command or you can yeah read command you can say or the what you can say like repeat keyword is used to take input from the user in the Shell scripting okay so actually I have already opened up the terminal here uh vs code sorry and I will just create a new file here uh zero three uh read input dot sh okay so I will just use this hashtag okay I'll just give it the name of this tutorial that is the input create input form user okay so first of all we will see the basic scenario like suppose I enter here uh Echo enter your name piece okay so here I will read the name and here you you will see the divs will be the name of the variable okay in which you want to store this value okay and next here I will print the variable like your name else uh dollar name okay controllers to save and I want to run from here but here from here I will need to give permission but so it's better to run from here okay so here it is asking for me to enter my name so I will enter ayush okay why it's not working oh my God now let me just Ctrl C uh let me use the terminal terminal is far better than this okay so we need to just give the permission to that file that is zero three we are done dot slash zero three dot sh okay sorry dot slash zero three dot sh and enter your name please I use so you can see the your name is ayush okay so in this way we can uh take the input from the user and also there are many use cases of this Reader Command okay so we will learn it one by one okay so uh let's start with the first one like we can use many options like read hyphen p okay so next moving forward I will just here I will do a read iPhone p is used for the prompt so here I will prompt enter your age okay so here you can just give the name of the variable which you want to provide so you can just give it as is okay and next I will just use this Eco command or eco keyword to print the web value your name sorry UAV is what dollar is okay Ctrl s to save clear the screen again run the script your name my name is ayush guys here is I will enter 20 here you can see your age is 20. so what is the difference between this and above and this one reading it so what is happening here we are using one extra line for echoing that particular line but to you using hyphen P option you can write your variable as well whatever you want to prompt to the user you can write those all things in a one single line so now let me just comment out these things and I will again run the come on so that will be easy for you to understand so here it is asking me for interview yes so here you can see I have just used this single line and it was asking me to enter the uh whatever the is and all those things so don't be confused if there was by mistake 204 and not that much old okay so uh in this way you can uh use this hyphen P option also there is many amazing option like uh if I will uncomment this and I will just comment out these things and if in case you don't provide the variable name so at that time you can use this reply okay you can use this one to like you can use this one like this okay if you don't provide the name of the variable then it will store it into this replay so I will just again run up this particular script and I will write the name as ayush and here you can see I should name it ayush without any use of variable okay but that is not a very good practice to use but yeah it is always uh like advice to use the variables okay so I will give it the name here as name and the same as it is the dollar name okay taller name okay we are done you are good to go no there is also some amazing things you should know about like suppose I am asking the user to enter some kind of confidential information I will just comment of these things uh read hyphen p and the username okay suppose you're asking for the username I will just create a variable username and you can also ask for password read hyphen SP and here you will ask for the password so obviously you don't want to reveal your password okay with everyone so The Hyphen s provides that functionality you will see right now so I will just equal those two variables so here I will write like this your not you just use username and a dollar user name username okay yeah we're good to go now and just use the password okay dollar password okay controllers to save let me just clear the screen again this one username my username is uh this one you can follow me on Instagram I know I'm promoting and for password you can use it's easy to crack okay so here you can see the username is this one and password is this one but you I hope uh you just uh what we can say notice like the when I was typing the uh password it was not visible okay I will use one more Eco for the blank space okay again I will run the script so that could be easy to understand so I will use username I use and the password is something in the C I am typing but nothing is playing on the screen and here you can see now username is I wish and password is this whatever written okay so this is the thing okay so I hope you got to learn about like how you can take input from the user okay so now thank you for watching and if you have any query you can ask in the comment section and surely I will post these uh codes inside your uh inside my GitHub repository not yours okay but you can access that Repository so that's all for today's guide and I hope you in uh you guys liked it and we'll meet you in the next video thank you thank you for watching now in this video we'll be learning about the command substitution okay so as the name suggests to command substitution which basically means we can use a variable name as a command okay you will store the commands in a variable it's not that interesting okay so we will be running these things in this particular video so let's start whatever what first thing you have to do you have to just open up your Tommy not terminal you have to just open up the uh vs code okay so I actually have already opened up here the vs4 as you can see so now what you have to do you have to just create one file uh I will name it as zero four commands substitute substitution.sh okay I hope this spelling is uh correct yeah it's correct by the way it doesn't matter at all okay so now what we can do you have just paste this okay hash the bank okay so here let me just enter this like Eco this is no not like this you have to just enter this commands substitute okay tutorial okay so now uh let me tell you about the First Command which we can use as a variable okay so I will create one variable Uh current directory okay so how you can get the correct directory in uh Linux okay uh if you have watched our Linux series then you know the command that is a PWD present working directly which gives you the uh current directory location okay so we will use a PWD but before using those things uh right now I will tell you the ways how you can uh uh what you can say uh how we can declare uh that command to a particular variable okay so you can use the back ticks okay just curve button uh left of one okay and here you can enter the whatever command which you want it and right now I want to PWD and you can just print this one like you present working your present working directory is like this bro okay yes we will use this not hash I need all our current not container okay yeah we are good to go right now I will just add some permission plus X to that particular file that is zero four now we are obviously good to go oh I think something yeah so here you can see we have done some silly mistake like we don't have to keep the space here if we'll give a space then it will give you the error command not found okay again I think command substitution tutorial zero four line six or no such file or directory or at a manner you will need to do like this guys okay so let me just clear the screen yeah where you two here you can see that your present working directly this one oh my desktops are the scripting tutorial okay so in this way you can use this particular thing like uh okay so now the next method is how you can do it so the next method is like this I will just copy it and comment it uh the slang I mean this line and I will use this like this you have to you have to use the dollar and the PWD okay so now we can do like this clear the screen at the command and here you are good to go guys here you can see the uh isn't working directly okay now moving forward uh suppose you want to create one file uh so new file I will create the name a new file and I will use the backtick uh I will use this command cat I I need Hello dot txt suppose and discuss I want hello.txt so I will use this one like here and I will use Eco dollar new file Ctrl c not C Ctrl s to save clear the screen so here you can see hello.txt as we created and I will write Hello dot txt has been created from has been created from command substitution to tutorial okay due to real and told you to save okay so here you can see the same text okay so in this way you can use the command substitution technique like using a back take or using dollar or whatever the way you like okay but the most preferred is this one dollar at the parenthesis okay so that's all for today's videos guys and if you have any query you can ask in the comment section and these quotes will be posted on the GitHub repository and you will get the link in the description so thank you thank you for watching and I'll meet you at the next one thank you and bye hello guys now in this particular video we will be learning about how we can pass the parameters while learning our script okay so let's start with this video okay so I have already opened up my vs code and you can also open it using the terminal or from here from applications also so right now we'll create a new file that is a arguments.sh okay I will write the hashbank or C Bank you can say whatever you want oh sorry bin bash okay now here uh what we will do I will run this script and I will pass some admins and parameters and we will use those parameters and do some manipulation in those things okay so before the starting the video let me tell you first thing like suppose I run this script this one command substitution or maybe say which script I have run hope yeah suppose this command substitution is one of the script so here I will pass some parameters like I will pass my name my number okay and my some something like country India so in these in these way we can pass the parameters okay and how we will access these parameters so you can access these parameters using like this like using Eco dollar one okay dollar one for the first parameter Eco dollar two for the second parameter Eco Dollar Tree for the third parameter so here you can access till dollar nine and dollar zero is reserved and it gives you the name of your script okay so this is the uh in this way you can uh work with the parameters and now what we have to do uh we will just save this file and what we will do we will just return this particular script I will just give the permissions to this CH mode plus X and 0 5 fragments.sh and I will clear the screen and I will just run those script 0 5 okay done and now what I will do I will just pass some params like right I want to pass my name ayush okay I will pass my country India I will pass my number uh okay and then I will pass something uh like shell tutorial I can write like this okay so when I will hit enter then you will see what happens so here you can see first line giving me the name of the script second line the second first parameter then third is the second parameter then my number and we are not getting the cell tutorial why because we have not used dollar 4. okay so we will use here Eco dollar 4 and again I will run the same script okay now here you can see all the uh what we can say arguments we have got in these form okay so you have to also remember one thing here like if I am going to just uh pass the one parameter in this case the other will be ignore okay so here you can see others have been ignored there is nothing okay and if you want to give the like this suppose I want to find by one by full name like ice Kumar so if I will do this so now it will act like this will be act as the first parameter this will be active second parameter so to act like to use this as a one parameter you can use this okay so now you will get this okay output okay so I hope you got it how you can work with the parameters and now moving forward uh if you want to get the uh list of all the parameter you pass so there are the some spatial uh characters or yeah you can say characters so how we'll use to print all the arguments we will use dollar at the rate and now it will print all the arguments which you will pass so what I will do I will run these escape this one and here you can see I have got the all the arguments which we have passed like I use India number Excel tutorial okay and also there is one more like Eco dollar hash to get how many number of parameters we have passed or this one dollar okay so again just to clear the screen and I will run this script and here we can see we have passed the four parameters yeah that's true okay now what we can do we can also store the value of these uh parameters which we pass in a variable suppose I want to store like name equal to dollar one and I will just remove these not available so that's all for today's guide I hope you liked it and I will meet you in the next video so thank you thank you guys for watching bye hello guys now in this particular video we will be creating our the first task that is the basically in which we will whatever we have covered till now we will use those things so basically let me tell you the scenario what we will be doing in this particular video so basically we will first read the input from the user okay that will be the IP or domain name and next what we will do we will be uh using the Ping command to Ping that particular server okay so things are really easy if you want to go ahead with the video like with yourself and you can go for it you so it will give you the more confidence about it okay so now I will use this scenario and I will create one script so I actually already have opened my visual studio code and you have to just create one script and I will use the hashbank sorry okay so now what we have to do we have to take a input from the user so already we have covered how we can take inputs so you can use the read here and you will prompt for the user like which server you want to Ping okay it can be any server it all depends upon you and I will create one variable here server address and next moving forward what I will use the Ping command so basically in ping command we have some options like hyphen C so whatever uh if you use normal ping command so like if I will use google.com so here you can see it will go in the infinite but if EB want only for the three or four okay so what we can do we can give the count for three and the deadline for 5 Second after five seconds if nothing like Ping command doesn't get any response and it will exit so next what we will do we have to just give this name server address now we are good to go what we have to do we have to just add the permission to this file using CH mode command and then I will run this not zero one I have to write 0 6. okay so I want to Ping Google server that is 8.8.8 okay so here you can see I'm getting the response okay and now what I will do I will enter some random IP like 8.6.5 52.4 so it will wait for the Five series five second and automatically it will exit so here you can see okay so yeah here we can see five packing transmitter but zero is saved 100 packet loss okay so in this way you can create different scripts so that will be helpful for you so that's all for today's video I hope you like this our first starts so that's all guys and I hope you liked it I will meet in the next video thank you for watching hello guys now in this video we will be talking about our task two okay so let me discuss with you what we'll be doing in our this task so basically we will be connecting our remote machine with the SSH using bash script okay we will create a script with the help of this we will connect to that particular machine so we uh first of all let me tell you how you can create your virtual machine so actually I have there is a link for you I will add this link in our uh description then there is a tutorial to create a virtual machine you can easily do it okay and I have actually already created the machine so here is my public IP address I will copy this IP address and now I will create the script okay so let me open the vs code and I will just create the file 0 7 task two dot sh okay but before that I will tell you like if you want to do it on yourself you can easily do it okay so if you do it yourself and that will be very good for you so because you will get a more confidence as well you will learn more quickly so let me I will just give you the basic idea what we will be doing so I will take the username and the password okay not username and the IP and then I will use the SSH command to connect with that machine so this is the overall idea and if you want to take input from the parameter then also you can do it okay so first of all let's take the input I will prompt the user to enter the username first user name and then here I will create the username variable read hyphen P enter the IB so here I create the IP variable I will use SSH command SSH dollar username we need to do dollar username dollar IP okay so in this is the uh command which we we will use okay otherwise we can do with the passing parameters also you we will do it that also so now I will need to give the permission to this file 07 now we'll execute this file 0 7 and I will enter the username as ayush and my IP is not this one here okay and my IP is this and it will ask me to enter the password so I will enter the password okay so here you can see I use I use the name of the VMAs also if that's why it's showing like this I will do LS here so nothing is there who am I so name of the user I use here also so in this way you can connect with the uh remote machine using our bash script okay so you can do exit to exit come out of the machine and now we will see how we can uh connect with the uh using like parameters okay so what I will do I will just comment out these all and I will create a variable username and it will be equal to the dollar one okay the first parameter then the IP will be equal to the dollar two okay we will save this script and I will just pass the parameters like I wish for username and IP for this okay two four seven hit enter and it will ask me to enter the password now we are good to go and again let's check who am I I wish okay so in this way you can connect with the remote machine easily you can use environment variables not environment variable you can pass parameters you can use variables okay whatever thing you want to do so I hope you liked it so this is a way to learn new things by while doing some new things like create I will like in future uh I will come up with more task okay so that's all for today's guys and I hope you have used all the concept which you have learned till now so that's all and I meet you in the next video thank you for watching hello guys now in this particular video we will be learning about the operators okay so let me first discuss with you what will be covering in this particular video so we will go first with arithmetic operators then we will go with the relational and the Boolean and so on okay so I hope uh you guys have completed our previous video so now let's just create the new script that is 0 8 operators dot sh okay just add the hash bank or pin C Bank you can say okay now I will create uh one variable and one enter N1 and I'll create a variable name as N1 read iPhone P enter and to give the value name as N2 then uh I will Echo I will do addition is for just addition so to for in cell how you do it we cannot write like this N1 plus N2 there is a proper Syntax for it you need to write like this N1 plus N2 okay or you can and shadows you can give dollar but there is no need okay so now in this way you can write the expression inside these two parentheses and the dollar sign outside of that expression okay so uh let me just run this script once I will give first the certain permission to this file and then I will execute it d08 and N1 is 4 4 that is eight yeah we are going to go now now I will just copy all these things like addition so here we you can go with the subtraction what I'm doing wait subtraction then here you can go for multiplication and here division okay and next uh we can go with modulus also so let's go with modulus modulus okay m o d u l u s okay modulus now let's give the operator like here it will be percent uh let me just write like this so that it will be easy to read for you for division you have to give this forward slash for multiplication you know the star and for the subsection there is the minus okay so let's run this script and we will get the output for each number so I will give the 10 and 5. so you can see the addition is 15 subtraction is 5 multiplication is 50 division is 2 and modulus is 0 why because modulus gives you the remainder okay if you do a three by two then in that case you will get the remainder as 1. so you can see the modulus is one okay now next uh you can do increment operator and decrement operator also you can use so how you can do it uh using plus plus and minus minus okay so I will do Echo increment so here we will use dollar and what you have to increment N1 plus plus or what you can do plus plus N1 it will first increase and then print the value okay so let's just run the script clear enter the n155 so that you can see incremented six okay in case if you do N1 plus plus so here we will not see the increment because it first prints the value then increments okay so in this case we will get the value else 5 here okay so but now what we will do if we will Echo the N1 then we will get the six okay so let me just clear this screen enter five five okay now here you can see you have got the six so I hope you got the concept of incremental decrement if plus plus is after the variable and then it will first print then it will increment f plus plus is first then it will increment then print okay so similar case with decrement equal decrement where is the dollar and you have to do minus minus and 2. we can use and here also I I do uh leave it as it is so clear the screen enter N15 into six and now decrement value with 6. first it was 7 and now it is six okay so I hope you got it uh how the things are working okay so now let's check with some relational operators like equal to equal to greater than equal to less than equal to greater than less than all those things okay now you have to just equal okay automatic operators okay just copy it and you have to go there and just write here read the relational operators okay I just uh comment out these things okay so now what we have to do so now we will use this relation operator with the if else so till now we have not covered the effects but still we can use it okay so how will you do it uh we will use if and then the big bracket this is the whatever the condition we will write in this so dollar N1 and we use GT for greater than and dollar N2 okay and then so don't worry I will teach you about yourself in our next video okay so you have to just eco N1 greater than N2 like this and then you have to close the if block okay so GT means greater than and there are also many like GT for greater than and GE for greater than equal to and LP for less than l e for greater than equal less than equal to n e for not equal to okay like this you can uh use okay so we will use first GT and then we will use other options in next okay so now you can run the script 0 8 and I will write 5 and 4. so here you can see yeah and one is greater than N2 now I will change the G's to GE and I will write here greater than equal to so now let me just clear the screen and run this script again so 5 and 5 so yeah N1 greater than equal to it this line is executing and you can do now LT if n 1 less than equal to so in one less here I will do and I will again run this script so five four five so yeah and one there's an N2 it is executing again less than equal to so we can use like this um four four yeah it is executing we can use hyphen EQ to check equality python EQ we can do like this five five yeah so here we have not changed but still you can and you can think like okay so now what we do five and five okay so c n one equal to N2 so in this way we can use the relation operators now let me tell you about the end of data so and of it is nothing but if both the condition becomes true then that then the whatever inside that condition will be executed okay so if N1 equal to N2 and I use a hyphen a option to check and and operator and I will check if dollar N1 is greater than 1. okay if this is the case then this line will be execute okay so N1 I will write 5 5 and N1 greater than 1 yes so okay I am getting some error here okay you can write like this clear five five yeah now here you you got the like output as N1 equal to N2 now what I will do I write 0 0 and let's check what happens whether we will get any output or not so here we are not getting any output but now we can use hyphen o option for or operator okay so let me just clear this screen and use like this iPhone 0 0 so in this case you the like this condition is equal like this condition satisfies N1 equal to N2 that's why this particular line has been executed okay so in this way and and operator and or operator works so that's all for today's videos guys I hope you liked it and yeah if you have any queries then you can ask us in the comment section and I will surely update this code in our GitHub repository I will add the link in our description so that's all for today I will meet you in the next video thank you thank you for watching hello guys now in this particular video learning about its sales conditions okay so let's start with the video and I hope you are aware of yourself but if not then let me tell you first what about what is this so basically if if else what happens if there will be one condition if that condition satisfies it it is true then the whatever the statement you write inside that if block that would execute okay so without wasting time first of all let me uh tell you about like how will you write this script so that will be easy to understand for you so zero nine I will write here if else dot sh okay we are good to go now okay bin bash okay so here just support this scenario a equal to 10 okay if I will write if and the condition is written inside this big bracket okay and here you have to do if a equal to 10. okay so then you have to write like this then then what what do you want yes with this condition satisfy you have to write like this you can do anything here I am doing just printing like a is equal to 10 okay and you can do like in else you can write like this Eco a is not equal to 10 okay and then to close the eighth log you can write like this F I so I will run this script but before they will need to add the permissions 0 magnitude yeah clear the screen dot slash zero nine okay zero nine yeah a is equal to 10 what if I do 11 here and run this script so in this case this condition will not satisfy okay so how we can do it 0 9 a is not equal to 10. so I hope you got it how this thing work like if conditions so we will take the scenario of voting system like there will be person age we will take the input from the user I will just comment out these things okay read and I will do here uh page okay or I will prompt for the user enter your age here I will do age okay and we will apply the conditions on this if age where is the dollar if age is greater than equal to 18 in this case we will write eco U are eligible cost okay in else condition what we can write ego you are not eligible to cast vote okay and we have to just close this if block control is to save clear the screen enter your age 23 you are able to cast more again 12 you are not eligible to cast what okay if or I can just do a greater than okay and I use one more thing that is alif it's also like the if but if this condition fails it will check for this particular condition here I will write if uh age equal to is equal to ID equal to 18 so in this case I want eco please apply for voter ID card okay and here we will not use 10. so now what we can do clear the screen run the script I will write my age equal to 18. so so so what happened okay okay I think we will write them okay yeah please apply for voter ID card okay so this is the LF condition that's why we will need to write it then okay so right now what's happening whatever the age we are entering so here it is first checking this condition if this condition fails it will come upon this condition so now this condition executes that's why it is giving the output as this line okay what if the output doesn't match with any condition in this case what will happen the else condition will execute you are not eligible to pass towards simple okay so in this way you can use if L if else conditions in your projects okay so that's all for today's videos guys I hope you liked it you will get the source code of this particular video in our GitHub repository you can get it from there also okay so that's all for today's guys I will meet you in the next video and thank you for watching hello guys now in this video we'll be learning about the case statement okay so if you are aware of the switch switch statements in different languages and you you it will be very easy for you guys but not let me tell you about how it will work so why this basically came in Road first of all we will discuss about this so in many programs you get to know about that there are multiple if else conditions and that will be very confusing but in case of uh switch case or you can use you can tell the K system it is very easy to understand those things and use it so what I will do I will just create a new file that is a case dot sh okay so I will take the example of the grading system okay so if the grid is a then that will be very good like we will print something out integrate I will write like this and I will create a variable create and how will we use it we'll use it case dollar grade okay and then what we'll do we will use the in keyword and here we will add the certain conditions like if the grid is a then what to do so here I will do like a then what we have to do not this one uh wait a minute yeah I've used only this bracket closing bracket so in this case I will Echo it's uh your uh your marks is between 9200 okay I can use like this then if the grade is B no and but before that what we have to do you have to just add this semicolon like this is the syntax of using the switch case in this so for B you will write like eco uh your marks is in between kt1 to 90. like this okay and so on like let me call uh use the semicolon and then we will use here C grade and then I will Echo your marks is ended 71 to 80 okay and then we have to just use the asterisk we can use for default and here we will use the semicolon first and here I will Echo your marks as your marks below 70 like this and then we have to use the E stack keyword and we are good to go now we will just give the permission to the subscript uh 10 okay done now I will run this script again you enter my grade I will enter c your mouse is written this okay I will enter B you imagine between this I will enter e so your mouse will be the select T okay so in this way this thing works okay so I hope you like this video guys and if you have any confusion about this you can ask us in the comment section okay and I will surely add this course in our GitHub repository you can accept this course from there okay so that's all for today's guys I will meet you in the next video so thank you for watching hello is now in this particular video we'll be learning about the array and cell script okay so you can see already I have created this file that is always.ss and added the shebang so before starting the video let me first describe you what is the address so I will just write it like this so array you you can say like that is array is nothing but uh data structure which is used for storing multiple values in a single variable you can say okay so this is the array simple suppose uh let me tell you the one use case like suppose uh you have to uh store multiple names okay suppose you have to store 10 names so how will you create it like if you don't know mortality you will just do like this name one equal to ayush name to equal to some another name like name three equal to Let's create some write some name like uh ayushi name four equal to Avinash like this okay so this is not a good practice of storing names in different different variables so that's why array came in role for storing multiple values in a single variable okay so uh I will first tell you about uh like array initialization what is the method of adding initialization like how you can create a legend cell scripting so it's a very simple so you have to just give or add a name suppose uh name list I will give name list equal to this single parenthesis and here you have to store multiple names like ayush like here I will write Ankit ayushi and Avinash okay so here you can see uh all the names has been stored in a single variable that is the name list okay so now you will think about how you will access these arrays okay that's a point like how you will access it so let me tell you first about array indexing okay it is used to access the elements present in an array okay so array indexing is basically used to access the elements in an array so it starts from zero suppose uh this is the array so the first element will have indexing is index 0 second one will have one this one will have two and this one will have three okay so here is four elements so like there is uh like index starts from zero and ends with n minus 1 that is three that is 4 minus 1 that is equal to 3. so so to accessing the elements of an array we will use the you will use these index okay like if I will uh enter the index 0 so at index 0 I use this present at index on this Ankit is present index 2 is iuc index three is Avinash okay so now let me tell you first about how you can access the arrays Okay so I will just use the Eco so it will simply print the uh whatever the index present okay so how you can do it Eco dollar and this parent uh curly braces and you have to provide the array name that is name list and the big bracket and the index which you want so I want zero index okay so I will just wait a minute I will just comment out these things yes and I will run this script okay so 11 dot sh so let's run 11. sh what happened LS okay I will need to give the particular permission here dot slash eleven yeah so here you can see so this one is printing like that is nothing but a data structure so I will also comment out this thing and I will it will just print up the first index okay wait a minute I write like this eco first index let me run this so here you can see the first index is this similarly I will print all the other three indexes so I will just copy these things and here I will just write the Second and here we will write the Third and here fourth and you have to just change the number here like index number like 0 1 that is 2 and that is 3. just Ctrl save clear dot slash eleven dot sh and yeah so here you can see the first index second index third index fourth index so so here the main thing is that it's like you can access or you can store multiple values in a single variable you can see here so but in this case you you will you have to create a multiple variables to store those values so that's not a good practice so instead of this you can use an array so uh one more thing is like if you want to print the multiple arrays oh it's not multiple arrays all the elements of an array so how you will do there is also the special Syntax for this uh like we we use asterisk okay for printing so you can use like this eco all arrays all array elements so I will just write like this name list and this one and here you can see the asterisk you have to just clear the screen and this one all array elements is here are you shank it I usually and one more uh syntax is there like you can use adderate also for accessing all the elements so you can see okay so that's it guys for today's video I hope you liked it and yeah one more thing I will upload this code in my GitHub directory audio repository you can say here you will see okay you can get this from cell scripting tutorial I will add it here okay so that's it for today guys and I will meet you in the next video and in the next video we'll be learning about the for loops and all those things okay so that's all for this video guys thank you hello guys now in this particular video we'll be working on the loops okay so basically today we will start with the for Loop and actually there are different types of Loops but before that let me first create the file that is the for Loop dot sh so for Loop dot sh okay so now we are done let me just add this C Bank okay so let me just first discuss about you the what is the loop suppose if you want to do some task that is the there that like exist there is some kind of repetition of thing suppose uh like if you have watched the meme like uh uh boyfriend send her girlfriend like I love you hundred times hundred times so what is this thing this is basically a loop okay so Loop is nothing but you can say like in kind of definition like uh what you can say um iterations okay like doing one thing again and again and again okay so suppose let me first tell me with an example suppose uh in some cases like suppose if you got some punishment and you have to write sorry for a teacher and your teacher says like you have to write the sorry a hundred times and all those things or five times so uh similarly what you will do you will oh sorry you will do like this like Eco sorry if you don't know the loop and all those things you will write just like this sorry sorry sorry and like you will just simply copy and paste things okay so this is what is this this is the repetition of the same thing so this repetition is managed by or removed by the loops okay so basically there are the three types of loop that is the for Loop while loop antiloop okay I will be discussing all these two Loops in our further videos but now in this video we'll be working only on the for Loop okay so let's start with the first thing uh but before that uh I will create one array okay and I'll be working on that first okay so let me create an array and in this I will use the loop okay so I will just create with some languages name like python C plus plus Java and c and yeah like comma is not required okay so but before that let me just print the uh these arrays so everything nice I can like check everything is working fine or not okay my area and I'll use provide asterisk here and I will just give the certain permission for this file that is the tool CH mode plus X12 okay dot slash 12 okay so here you can see the power this ad is working fine okay and so now what I will do I have to just uh print this array using the for Loop okay how you can do it but before that let me tell you first about the syntaxes and all those things of for Loop so the basic Syntax for for Loop is like this for parenthesis here the initialization will be there initialization here will be the condition if you know I was the C programming or Java programming then that or CPP so it's very easy for you to understand this okay but if you don't do then also you can get it right now okay and here will be the increment or decrement okay and the two curly braces like this okay so what if this is the Syntax for for Loop okay so uh let me tell you how the thing works okay so suppose uh I want to print uh sorry uh like this number of times five times so I will uh start with 0 or 1 it's all upon you and I will provide the condition like uh that uh I will get one variable at I equal to 0 and I will provide the condition that is I less than 5 and I plus plus okay so uh let me just open up my pane so I can like you you should visualize that thing okay so where is text yeah so here simply I write on for Loop that is I equal to 0 I should less than six or five if you're starting for this one from zero okay so this is the for Loop okay and I will just Echo here the sorry statement okay so here now what you have to think is like how the things are working okay so let me just uh do like this okay so how things are working basically so so when your Loop will run so how it runs so it will change it will first assign I value 0 if I equal to 0 okay it will check the uh condition so I here I will just Define the titles for them uh here I will do initialization there will be the condition and here will be the increment okay so by increment we call here I am using the I plus plus it simply means it will increase and increment the value of I by 1. okay so now here what you I will do so you can see the one like right now there is I equal to 0 okay so it will now first check the condition whether I is less than 5 this one so yeah 0 is less than 5 so if condition is true it will print the sorry so here in this case 0 less than 5 condition is true okay and it will what it will do it will print okay so here I will do like print what it is printing so it is printing sorry and then again it will increment the value of I2 I plus 2 that is now the value of I will become 1 okay so here again I will give like here this I equal to 1 so again it will check whether one less than five yeah one less than five true it will print sorry okay and again it will increment the value to 2 okay now again Loop will run for two like I will be 2 and it will check whether a 2 less than five yeah two less than 5 condition is true and it will print sorry again and I will become increase by 1 from here like I will be 3. Okay so similarly again I will be 3 here and it will check like 3 less than five yeah condition is true so what it will do like it will print sorry okay and again the value of I will get increased by 1 that is 4 and again uh now it will do I will be 4 and it will check let me just increase this size here I equal to 4 okay and it will do whether 4 less than 5 yeah it's less than 5 condition is true and it will print sorry first and then it will increment the value of I to 5 okay and now I will become 5 and it will check whether 5 less than 5 so here condition is false and what will happen Loop field and okay and it will print sorry five times okay if you're starting your loop from from zero okay so this is the simple uh working of the for Loop like how things are working so now let me just tell you about with the experiment part how you can get it okay so let me just open up this one and I will just comment of these things okay and for Loop and I will initialize the value of I from 0 to I less than 5 because I have to print 5 times I plus plus Eco sorry okay okay just Ctrl s to save again let me run the script which number it is 12 okay it's not this one sorry yeah so here you can see five times sorry has been printed okay but what if you want uh like if you do less than equal to 5 so in this case suppose uh less than equal to 5 so it will print to you uh it will print six times so here you can see six times have dependent why why this happened because at this point now if there is less than equal to so here the condition is satisfied like yeah 4 5 is less than equal to 5 so condition is satisfied satisfying and it will be true and solid will get printed and then sorry will be printed and then I will be equal to 6 and now if you will check it will check the condition that is 6 less than 5 so that condition is false so in this case our Loop will get end and you will come out of the loop okay so in this way uh for Loop works I hope you got it and uh let me just tell you one more thing like how things work and like there is also uh some different syntax of for Loop okay so the difference index is this like this uh for uh War suppose you have to provide some list like uh like you can do like this for I in and you will provide a list like one two three four five six seven eight nine ten you can do like this also okay or you can provide some any other variables also like you can provide string names also and all those things and here you will just do do okay and in this what you will do I will just print like this eco iteration colon and here I will just write the I okay and then you will write here done do done okay Ctrl s to save I will just comment out this this Loop and again I will just run this script okay so here you can see the iteration I is printed not the value okay so at that point I will just provide the dollar Okay so yeah so here you can see iteration one let me just uh clear the screen and again run the script so here you can see one two three four five six seven eight nine ten okay so in this also you can run Loop suppose uh if you want to do some operation of if one comes or like suppose I provide here some different lists like the name list suppose I push iuc okay so here uh suppose if you want to uh do like this if and the condition which you will give like dollar I equal equal to I use so and that's in this case what you should do like then eco uh what should we Echo like um you can equal like yeah uh like this are you sure she's a good boy okay and you have to just uh write uh what you can say close the if condition I will save it and I will just run this so here it is showing some kind of error like uh unexpected token then at line number 29 oh wait a minute I have whether uh let me write like this first and I will do it in the colon not colon okay why it's showing error I'm not getting uh let me just uh if if dollar I equal equal to ayush then eco free yeah it's correct uh wait a minute okay so uh basically I got it so here you have to just provide one space so I was doing just some silly mistakes so let me again run this script uh clear dot slash yeah so here you can see uh sorry which skipped that in I have to run 12 sorry 12 okay so here you can see I used to the good boy so if dollar I equal equal to I use then it is printing like yeah ayush is a good boy okay so I can do right right uh right like this like dollar I okay so it will also run so I wish you the goodbye okay in this case you can see so uh basically you can uh whatever you I was saying uh you can just initialize or write your for Loop in the syntax also okay so uh if you are familiar with the C programming or CPP then that is very easy for you and if you are for uh same like familiar with python then this one is also fine for you okay so uh now let me tell you first about uh how you can print the array elements okay so in our previous classes we have learned about array so here you can see I have created array here let me just create it below I will comment out this and uh I will just create array and I will just add some other language also like kotlin I will add and some other framers like reactor JavaScript shell scripting okay so this is my array okay so now I have to print this array okay using for Loop so how will you will print an ad using for you so basically we will need to define the uh condition like array should be less than the size minus one so here what is the size of the array that is one two three four five six seven eight so zero to seven we have to do so in this case you will use the normal Loop that we use in for in other programming language that I equal to 0 I should be less than 7 and I plus plus and we will just Echo the indexes okay so how you will do it my addin name and I will provide the index as I and we are good to go now let me just run the script yeah here you can see all the ad elements has been printed in this in the same order okay so that's it for today guys I hope you liked it like how the for Loop works and you like this representation also like everything should be clear for you if you have any problem then please ask to me okay so that's all for this guys and I will add this code in our GitHub depository you can access from there and provide the link in the description so thank you guys for watching this video and I'll meet you in the next video thank you hello guys now in this particular video I'll be talking about the while loop okay so basically uh I've covered already the for Loop and in which we have discussed about the basics of looping and how loops work okay so now let's start with the while ago let me create this file first you can say here okay so here we go so now our file Loop is also uh just like the follow but it is uh it works it works until the condition is true okay if condition gets full we can come out from the loop and if condition is true it will execute that particular thing okay so let me just give you the syntax part like what is the sentence of value so while space and this double space and here you have to write the condition okay and then you will write like this uh do and whatever the code you want to perform here and then you have to do like here you have to write here done okay so this is the basic syntax of the while loop okay so now we will see the visualization part so let me uh open up my paint first okay but before that uh let me just copy the this one code where it is here okay now I have copied let me just paste it here okay I will need to just create this one like this to add a text and all those things so here we go and let me just remove this part okay and we also uh we forward about this one like we need to give the um semicolon all those things okay so let's start with the implementation one suppose uh same case if you want to print something like my name if I want to print my name five times so how the thing will work okay so basically so here we will need to give the condition like we can give the I like uh I should be less than equal to 4 or less than 5 you can give the condition and above you can declare the I variable okay and here you will write the code like eco and my name ayush okay so how the thing will let me tell you here we will give the value of I and then we will check the condition and then increment okay so initially the value of I is 0 and condition will be get checked like 0 is less than equal to 4 yes it is less than equal to 4 so now what it will do it will print so here I write the print so here what it will print it will print simple ayush okay and the value we get incremented by one so now value 5 will be 1 and it will again check the condition whether one less than equal to 4 yes it is 2 so again print the name I use and again increase the variable to like 2 it will so now I will be 2 and again I will check the variable name like 2 less than equal to 4 okay and print and again it will increase the uh value Phi by 1 so I will be 3 and again it will check whether 3 less than equal to 4 yes it is true and again it will print and again value 5 we're getting is two by one that is 4 now I will be 4 and it will check yes 4 less than equal to 4 yes it is not decimal but yeah it is equal to 4. so in this case also ice will get maintained and value of I will be 5 now it will check I equal to 5 whether 5 less than equal to 4 no it's not so this is the first condition and we can come out from the loop okay so same thing we have to do in while loop also so how we can do it let's me just go into the terminal and I will just comment out this part okay so here what I will do I will Define the variable I equal to 0 and I will give the condition like while and condition will be I should be less than equal to 4 and do what do nothing just Echo oh sorry Eco my name that is the ayush okay and here you can do done and also to increment you can increment like this let I plus plus okay here we forget forgot to increment uh this one so uh we will increase the value of I okay so the same thing we have to do and now let's check whether this works or not so I will just give the appropriate permission uh sorry it will underscore while loop clear dot slash 12 underscore while loop so here you can see no such file or directory why it's showing like this uh okay let me just copy this code and I will delete this file actually 12 12 is 2 times so I will create like 13 while loop dot sh and paste it Ctrl s give the appropriate permission 13 clear dot slash 13 and here we go and again what is showing line number oh sorry here we have to give the uh this one iPhone EQ less than equal to l e okay now it should run okay so here you can see five times I wish has been printed okay so in this in this form you can create the while loop okay so again if you want to use the while with an array we can use it also like uh to print the array so I will just create the array uh array equal to I'll write one two three four five so size of array is 5 and less than equal to 5 okay or less than equal to 4 it doesn't matter here and I will just Echo Echo the array array indexes okay and let me just again run the script and here you can see we have successfully accessed all the elements of an array so in this case uh you in this way you can use the while loop so I hope you got it and I will add this particular file in out GitHub repository so that's all for today's guide and I will meet you in the next video thank you thank you for watching now in this video I'll be talking about the antilooper case so already we have covered the for Loop here you can see and the while loop okay so now let's start with the antiloop okay so before starting let me first tell you about this what what is this how this Loop actually works so antiloop is basically it works sorry it works until the condition is false condition is false okay so it's quite interesting like it works when until the conditions fall whenever your condition becomes true it you will come out of the loop just like the reverse of the while loop okay so it's just like you if you will say like 2 is greater than 5 so yeah it then in that condition the loop will run if you will say like 6 is greater than 5 now in that condition this Loop will not work like it will come out of the loop okay so I will uh do a visualization for you and I will open up my pane to so I'll show you but before that let me just write the syntax here uh sorry what happened here uh wait a minute guys I will open the paint in different window yeah and I will open up my terminal okay so now let me just create the Syntax for you so the syntax is very easy just like the while loop so you have to just give the until and whatever the condition you will provide here condition and the do and then here you will write the code and done okay this is the basic syntax and the increment decrement whatever you want to do here you can do like this okay I press Plus or whatever okay so here you can see uh I will just copy of this syntax and I will open up my paint so that will be easy for you to understand so I will take the same example of printing the name and all those things because that will be easy for you to understand okay so here I want to print my the same thing like my name so I will provide the variable I equal to 0 and I should be less than equal to three I will choose right now so it will print I think four times and then I will uh increase the increment let I plus plus and here I will write the code uh the code will be like ayush I will just write like this and here what you have to do you have to keep the wrong information like false con condition you have to provide so here I will do like I greater than equal to 3 so here if condition is false then it will execute the this code okay so value of I so I am I am writing like this V of I and then the condition check okay and then increment okay or you I can write like this print also okay so currently value of I is I equal to 0 so 0 greater than equal to 3 yes condition is false okay so if false then it will execute so it is right now zero greater than equal to 3 that is keyword false okay so in this case what it will do it will print I use and the value of I will get increased by one so I will be 1 right now so here again it will check 1 is greater than equal to 3 condition is false so again it will what it will do it will print okay so it will print now condition will increase by one that is now I will become 2 so I equal to 2 so here again 2 is greater than equal to 3 so again this condition is false so I usually get printed okay so now I increment by 1 that is I will become 3 so now for I equal to 3 so 3 greater than equal to 3 yes condition is uh like uh false it will be false okay and I wish will get printed and increment by what now I equal to 4 so 4 is greater than equal to 3 yeah condition is now true so now you will come out of the Loop okay so in this way until it basically just the opposite of Y Loop like if condition is for the loop will execute otherwise not so let me just uh do with this uh what you can see what you can say like run this loop I will provide the I equal to 0 and I will use until Loop until condition will be dollar of I is only greater than if I'll use a greater than equal to 3 so in this case do equal ayush okay and just do it done here and you have to just increment the value of I also okay now we are good to go I will just give the appropriate permission to this file 14 okay dot slash 14 and we got some kind of error here line number 21 Centex error okay okay here I do semicolon let me just check now unexpected End of Line let me just check the syntax like I equal to 0 until dollar of I is greater than equal to 3 do equal I use and then let I plus plus and I have done here I haven't done a right to and done okay uh so here you can see we have not comment out this so let me just comment it and again I will run the script let me just clear the screen and Dot slash 14 yeah so here you can see uh the loop has been executed that is greater than equal to Phi I will do so it will run five times four times I think let me just clear the screen okay the three times I is greater than equal to 3 okay it will run only three times okay I'm sorry for for here like here here like condition will get true yeah condition will get true here because it will be equal to three so in this case it will come out of the loop and there will be no further check okay so it will print only three times okay so uh now what I will do I will let me just try uh what you can say we can print the table okay so you can print the table of any number like if you want to print the table of five okay so you can do like this uh you can write the expression here like whatever the expression you write like dollar let me just write for you I will just uh dollar parenthesis and you have to provide the number that is the any number 5 into and you will do like this dollar I and here just do 0 and here you provide 10 okay and I hope it should run so here you can see uh now we will start with the one okay so let's check so here you can see and here we need to do 11. okay so here in this way you can print the table of any number also you can do your customized changes like you can take input from the user and then passing that value here and then give the result and the terminal okay so I hope you liked it guys and you got to know about the antelope and I will post all the source codes of this particular video in our GitHub repository you can access from there and I will provide the link also in our description okay so that's all for today's and I will meet you in the next video so thank you for watching bye now in this particular video I'll be talking about the break and continue okay so we will learn about these two keywords in our shell scripting so let me first create the file with their name like break and continue dot sh okay we are good to go let me add the c bank because without this we cannot run our script Okay so now let me just tell you the execution like what and what is this so let me first talk about the break okay so break is basically it breaks the sorry it oh what I'm doing here man it breaks it breaks the execution of a loop okay so basically it makes the execution of a loop and the continue is nothing but it skips the execution on some certain condition okay so we will go and do the Practical part of this so so break will basically it will break the execution and it will not to do the further uh operation but in continue it will execute but like it will skip that particular part okay so uh let me just start with the for Loop because we'll be using the follow for the implementation break and continue and also you can use while loop also it's all up on you so I will simply first demonstrate you how the things works okay so for this we will need to create one Loop so I'll be created for so here you I will do I equal to 0 I should be uh what you can say I should be less than equal to uh 10. I plus plus and I will simply right now I will just Echo the value of I equal I okay so now let me just add the certain permission for this 15 okay dot slash 15 oh sorry yeah so one to ten the numbers are getting printed Okay so from 0 to 10 sorry so suppose in some condition you want like if uh if I is equal to uh 5 then after that your Loop should not execute okay so at this type of certain conditions uh you will execute from the loop okay so how you can do it you have to just provide the if condition uh like this if sorry if dollar I is equal to some number that is 5. so in this case what you have to do then you have to just break the loop and what you can do else you have to just Echo this value of I okay so you have to just save it okay and I will run the loop here again so uh I think I'm getting some kind of syntax error at line number 13. if then equal to 5 yeah we have not closed the if condition okay clear the screen again okay sorry in else condition we are not writing anything right now so now I will write f i here and now you will get to know about how the things are working so here you can see the loop is getting uh started from zero and it executing till 4 but when if your I value of I is equal to 5 then in this case what is happening your Loop is not executing further okay so similarly uh in case of continue we will see and I hope you got it like how the break condition works okay suppose if you want to give some other number like if you want to give two okay so at at that time your Loop also will get uh break Okay so to save and I will just run the script again so here you can see 0 and 1 is only printed okay so now we will talk about the uh continue so I will just seem simply copy this Loop and I will just here paste it and I'll write like this here comment out for you guys because you will need this code continue and here I will use only the continue okay so here what it will do it will skip that particular part okay if I run this loop again so here you can see it has escaped two okay let me first clear the screen so that uh and I will just comment of this part because you should not get confused okay so here you can see it has printed now you will see two is not getting printed okay why because it is execute continue statement basically skips that particular part okay so that's all about the break and continue uh if you want like more example uh let me just create uh like what we will do we will just take the input for the user from the user in the for Loop and based on the user input we will break the statement okay so I'll just comment of this all also and I will paste it here and here I what I will do I will do read U input okay and I will Echo here enter your age or here I can give the variable name is also it now okay so here I will do if age is equal to or less than we can say if is is less than 18 so then what we have to do Echo you are not allowed in party like this okay and else what we can do else eco you are allowed in party okay and here after printing this we can just come out of the loop and you can use a break statement okay so clear and again run the loop and here it is showing interior as my age is suppose 23 so you are allowed in party okay so again it is asking 34 okay so now if I'll enter 12 so here you can see you are not allowed in pattern and you came out of the loop so that is the use case of the break statement to come out of the execution okay so uh that's all for today's guys and I hope you liked it and if you have any queries you can ask us in the comment section and you will get the whole source code in our GitHub repository so that's all for today's and I will meet you in the next video thank you thank you for watching hello guys now in this particular video we'll be automating the creation of files and directory using the for Loop okay so already we have create learned about the fold how the things work okay so let me first create the file using the 16 and automating file or dir creation and Dot sh okay I will add the hashbank or C Bank whatever you want to call okay and let me tell you the use case first so use case will be like this you will be creating the one for Loop okay and using that you have to create files okay or directories okay so this is the use case simple use case if you want to perform on your own then that's a very good thing for you like you will learn to know how the things work and if not I'm with you and I will be writing the code along with you guys okay so what do you have to do you have to first of all take the input from the user okay like directory named or first I will create the uh loop for the directory creation so I'll write the comment as like this and what you have to do you have to take the input from the user okay so we have to do read dir name I will write the directory name the IR name and I will use the loop for I equal to 0 to I less than equal to 5. so suppose I have to create 6 directory so I will use five directory so I will use I less than equal to 4 and I plus plus okay and here what you have to do you have to create the directory so how you can create it using uh mkdr command and you will provide simply the directory name okay and if you want to add some 0 1 2 3 after this so you can do like this also like dollar I okay so we will do that thing later but uh um now let's do this one okay so here I'm just eco like enter the directory name which you want okay Ctrl s to save again we will need to give the particular permission to this file that is the 16 sorry not 116 clear the screen dot slash 16 enter the directory name I need a uh let's write the Linux underscore dir and here you can see a file like this to why it's showing like this file exist okay Linux TIR okay yeah it already exists so we will need to add this one uh dollar I to create multiple directories okay so I will just uh delete this okay because you cannot have the same name like you cannot have the two directories with same name okay Enter the directory name Linux dir okay Linux TIR and here we go so all the directors has been created zero one two three four okay so in this way you can create multiple directories we you want like suppose in some cases we need some directory like test so you can create this also like you can write like this test and again the direct will get created like test zero one two three four all these things okay so uh that's a very easy uh use case so again now let's create some files but before that I will need to delete all those things because I don't want uh much uh files in my this directory so I will delete this so let me choose all those things and I'll delete at a time okay okay move to trash okay it's yeah it's so this OS is running in virtualbox that's why it's slow little bit slow okay bro so uh what we can do so we will now create the file creation script okay so eco enter your file name okay so here again I will use the same Loop and read the read file name and all those things so here I will read file name or student name suppose uh there is some student list and you want to store the data in that particular list so how you can do it so you will need to use touch and here I will start with the one okay so let's clear the screen and just I will comment out this part because I don't want to create directory right now okay I will simply run this great winter your file name so I will use student like this and all the file we get created like one two three four okay so I have not used here uh student name variable so I will need to delete all these things again sorry for that okay delete it and again I will need to run this script here so let me clear the screen run the script enter the like this student so here you will see like all this right one two three four has been created so in this way you can create hundreds of files using the for Loop and that's a very good use case like suppose in some cases you need multiple directory so you will not do manual tasks okay whatever the amount you need amount number of direct you will just provide it here okay the number of the ACT you need and that's all for today and I hope you liked this use case again in our next video we'll see some use cases or we will move with some different topics so that's all for today's guys and I will meet you in the next video so thank you for watching and I'll meet you next one thank you hello guys now in this particular video we'll be uh automating the user creation okay so how we can do it let's uh start with the video and I will create the file that is 17 user creation dot sh okay just add the hash Bank okay so let me first tell you the use case okay what will the use case so here the use case will be the for Loop first we want multiple users and then username input then password and also choice whether user want to add user or not okay so I will comment out this and I will just create the for Loop first the loop will be I equal to 0 and I will just run this Loop till less than equal to 2. and I plus plus okay so here first I will take the input from the user so I will first use enter your choice okay if choice is one then we will add user otherwise you know create choice okay so we will read choice and we will apply the if condition here if so one space here if dollar choice hyphen eqo it means equal to 1 then what we have to do then we have to take the username into read username so here I will do just eco enter the username okay and next I will take the input eco enter the password read password okay so uh now till now we have a uh like we will take the input from the user okay so the command that we use to add the user that is the user that then we will use sudo user add and we will provide hyphen name hyphen s slash bin Bash okay and the username so username is this one and this we have stored a username and then we will pass the password because the password takes the two parameters okay so I will pass like this okay so dollar username dollar password and the pipe is pipeworks because it passes the uh whatever the uh data say it passes this side okay I get it pass the data to this command that is sudo CH and the CH password it is so we will write CH password okay so this command will add the password in the uh system okay or for that user you can say so now the else part will be else just break out of the loop and close the if condition okay I will just clear and I will just add the permission dot slash 17 enter your choice my choice is one enter username I will enter like hello world password Linux machine okay so here you can see uh Authentication we're getting some kind of error like user hello world okay password not change enter your choice let me just enter some other number to break out of the loop okay let me check with the code again so read twice we are getting the choice enter the username that is the read username then read password then sudo user add hyphen M hyphen as pin bash and we have passed the username here okay then Eco username and here you can see the password okay we have okay there was a mini mistake so again let me just run the command uh so but before that let me just delete that user Dell user hello world I think it was okay done so again just run the script and enter your choice my choice is one and uh username Ankit I will write and password I will write um hello world okay so now it is asking me to again enter my choice whether I want to add a user or not so I will know I don't want so I will write 0 so we are out of the loop now I will login into the Ankit and enter the password hello world so here you can see who am I if I will do so it is Ankit okay so in this way uh we can uh like automate the user creation if you want to and multiple users suppose if you want to add only one user at a time then you can use this commands Okay these much of a script and you don't need any if condition and all those things okay so in this way you can automate the user creation I hope you liked it and if you have any queries then please you can ask us in the comment section so that's all for today's video and I will meet you in the next one so thank you thank you for watching hello guys now in this particular video we will be learning about the test command Okay so before starting let me first create the file that is 18. test command you can write dot sh okay so let me just add the so before starting this particular tutorial let me first tell you about the basic like description about the test command so basically test command is basically uh used to test the particular expression press the particular expression or particular condition okay so if condition is true then it will return zero otherwise return one okay so if condition is true it will return 0 or otherwise it will return one okay so it's basically uh like one of the another method of writing this expression like whatever we write in this if condition whatever the expression we write here whether of 5 is equal equal to 5 okay so it just we can just replace these part using the test command okay so but also there are many uh like many functionalities or many options are being used with the test command like if you want to check whether two strings are equal whether there is some file uh it just don't know what whether the file is empty or not whether the file or directory like if we want to check uh whether some particular directory it is directory or not or some mathematical operations are equal to greater greater greater than all those things okay so we can do all those operations so let's start so first we will start with the string comparison like whether two strings are equal or not or not equal to whether a string is empty or not all those things we will do so how we can do it let me just uh create the two variables that is a and b so I'll write my name ayush and be equal to ayush in this okay double quotes and now I will write the if condition and I will use the test command if test so it is basically like uh what we can say advice to use the double quote for the variable while using the test command okay if dollar one equal to dollar B then what we have to do then we will just Echo a is equal to p okay and I will just uh write the else all part also else equal a is not equal to P okay just close the if condition and clear the screen and CH mode plus x 18 dot slash 18 okay so here you can see a is equal to B now what I do if I just change the uh B okay so here you can see a is not equal to V equal or not equal it's equal okay let me just clear the screen again and run the script yeah so here you can see a is not equal to B okay also uh test command uh offers many more functionalities like string size if you want to get okay so how we can do it using hyphen and option okay like you not basically strings I just basically checks whether string is uh what we can say empty or not okay so how we will do it using test hyphen n dollar a we will use so basically if there is some string then it will uh Echo string is not empty okay e m p t y okay so hyphen and option is checks whether there is a string or not if a string is not empty then it will result to true it will return it returned true if it is not empty otherwise it will return for that it means the string is empty simple so how you can do it string is empty so we are checking a for a so for a there is a string so it will it should return string is not empty so string is not emptied is returned if I will just pass hyphen B uh dollar B here so it will it should return a string is empty okay so it is returning my string is not empty what is it running yeah uh let me just again run the script okay it is it is also returning a string is not empty so for this we use hyphen Z option sorry for that we will use iPhone Z option here so clear the screen okay so again it is just showing me same thing okay but uh okay okay sorry I'm sorry here we have to use this double quotes okay but still it is showing string is not empty but why it is empty there is something wrong we have done here um yeah yeah sorry sorry what we have to do here is string this is empty string so this condition is getting true and it is just displaying me this Eco message so that's a wrong if I do something else here condition will get false and then it will display me this okay so so there is nothing much so we have to just replace this eco with above one string is empty or here we can just do string is not empty okay so now it should return a string is not empty so here you can see string is not empty if I will just remove this part it will display me a string is empty okay so it was just if it is true then it will execute obviously okay so in this way you can do a string comparisons also so now moving forward uh in numerical part what you can do if we want comparison like equal to greater than all those things so how we can do it let's just do it okay so I will just copy this much part and again I will paste it here and I will provide here some numbers like a equal to 10 and be equal to 20. and here if test hyphen will not provide hyphen here we will use uh the same thing which we use for numerical like hyphen EQ so here I will use dollar a okay if dollar a equal to dollar B okay I'll remove this one so here if a equal to B so it may here we will print a is equal to B if it is true otherwise here we will just print not equal okay just again clear the screen and run the command so string is empty and not equal okay so if I will do 10 here also so in this case a is equal to b or you can check other options like less than LT for less than here I will just uh and one more zero that is 100 and clear the screen run the script okay so here we will just change the equal statement like a is greater than b sorry less than less than b okay so clear the screen again on the script so a is less than B that means it means uh it means this statement is true and this one is executing and if I write here so here we will see not less than b so not less than b so in this case you can use multiple things using test command like you can play with the numerical part string also okay so instead of this double bracket whatever we use in this one like double bracket in spaces so we it is easy to use this one okay so now moving forward we will uh use some like file comparisons also so how we can do it okay so I will provide the file name not file name um I will use these much of file or hello.txt to play with it so there are multiple options which we can see like uh hyphen s option which is used for checking the uh like what we can say checking the if file is empty or not okay so let's start with this so here I will just add the command that is the file comparisons okay so here what we can do if test hyphen s and I will provide the file name my file name is hello.txt then if file is empty hyphen is used to check if file is empty or not we will just Eco file is empty foreign else Eco file is not empty it means if condition is true then it will execute line number 32 and if not it will execute line number 34. okay so I will just comment out all other way leave it let's check so let me first check the hello.txt so in hello.txt there is nothing so it should return file is empty so we have got some kind of error so the error is we have not closed the if condition clear the screen so file is not empty it is showing why because uh I don't know file is empty or not so the file is empty it should display let me just create one more file test1.txt so it is absolutely empty file so again here I will provide test1.txt clear the screen so again it displaying me file is not empty why so okay um okay if file is not empty it will display this line okay if file is empty then it will display this line okay okay okay so we have done some mistakes here like we we have to just replace this line here so I don't know why this thing is happening I'm so sorry for that so just to clear the screen and yeah file is empty now so now what we will do we will just write some text here and now it should display some like file is not empty here so clear the screen and again so here you can see now it's showing file is not empty okay so uh also there are many flags we can use hyphen D and all those things okay so there are many flags which we can use to check if iPhone D is used for check I think whether the uh whatever you are passing that is it is directory or not okay so I will create one directory that is uh uh let's create one directory that is the ir1 okay so here I will just pass dr1 if it is directory it is I will display if condition is get true it's a directory or it is not a direct variable display here it is not our directory just run the script okay so it is a directory and I will provide some different name here like suppose I provide hello uh what was the file name that is test1.txt and now it should display it is not directly so yeah it's correct okay so uh I hope you liked it guys we can use test command while providing the conditions in if with if conditions so okay so that's all for today is I know there were some mistakes today so sorry for that and I will meet you in the next video okay so thank you for watching hello guys now in this particular video we will talk about functions okay so what is function and how everything works we will discuss all the things in this particular video okay so actually already I have created this function.ss file for you if you're not then you can also create this one okay so let me first discuss about the function what is function the basic idea about it like if you are aware of any other programming languages like ccpp Java or pythons and then you might be aware of the function but if not then let me tell you about this okay how everything works okay so what is a function so the basic definition which everyone says is like function is a block of code which can be used again and again okay so as the name suggests as the definition so this is the same thing as like it okay so whatever the code if you write some kind of code and you want to use it again and again and again then you can write that particular code inside a function okay suppose you don't want to do some particular task repetitively okay then you can use a function okay suppose you have to uh like uh what you can say you have to sum two numbers okay then you can create a function and then you will just call that function to add those numbers okay so basically the whatever the main benefit we get from the function is the code reusability okay it means we can reuse that particular code again and again this is the basic idea about the functions okay so now let me tell you about the basic uh syntax what is the basic syntax of the function in the cell scripting so how we can do it so basically the basic syntax is the function name whatever the function name you want to provide okay the double parenthesis and the simply this curly braces and inside the curly basis you have to just write the code okay whatever the code or whatever the operation we want to perform okay so this is the basic syntax which will be uh using inside this whole tutorial so now let me just create one function with the name greetings okay and I will just Echo something like good morning uh good morning ayush like this okay and to call the function you have to nothing uh you have to just uh write a name of the function greetings okay and now let me just uh move into the this particular directory okay and now what I will do I will just provide a certain permission to the files CH mode plus x 19 function dot sh okay clear the screen dot slash 19 okay so here you can see good morning is has been printed okay so here what happens uh suppose we want to again again call that function so we can just call it again here what happened let me just copy it again greetings paste it here okay so again it will print good morning as two times okay why it happens because here you can see the name of the function and we are just to Echo this thing good morning ayush and then we are calling the function okay so with function calling whenever you call any function then it calls this function and whatever the code inside it it gets executed okay so this is the basic functionality of the functions okay sorry no moving forward uh we need to talk about like a parameterize function and the returning value okay so what is the parameterized functionality for discuss about you so basically in function what happens you pass some parameters okay and uh with on that parameters we do some kind of computation and all those things so I will just create the sum function okay I will just remove this thing and I will create Now parameterize function okay so so the name of the function will be some ayush okay and I will just Echo the sum of dollar one and dollar two is not like this uh before the parameterize function let me just discuss with the simple function how we will do it like suppose if a equal to 12 and b equal to 13 then c equal to Dollar A Plus dollar B and you have to just Echo the value of c equal the sum of dollar a and dollar B is you have to just equal dollar C here okay just save the code and we will just call this some function and then we will get the result as 25. okay so we have got some kind of error in line number sorry we don't have to provide this parenthesis here okay so okay we are getting uh error not error the same string because uh we have not uh added the expression in a right way okay so here you can see for computation like we know like we need to do like this okay then and only we can compute anything okay so here you can see the sum of 12 and 13 is 25 so suppose if you want to uh change number okay so 13 and 14 so we can get now result as 27 I think yes 27. so here the thing is we need to change that thing in our this inside one chain but what do we want to pass the pass the value while calling the function and in that case we need the parameters okay so how we can do it so in cell scripting we basically pass the parameters as this one like from here we will pass suppose 12 and 13 and then it will act as the dollar one and dollar two okay so in this way we can get so now for this I will just uh like uh provide a equal to dollar one and b equal to Dollar two okay and all things will remain same and I will just pass the parameter here 12 and 13 or 12 and 13 let me provide this okay 12 12. and let me clear the screen and again this so here you can see the sum of 12 and 12 is 24. now we don't need to change anything in our function we can do changes here okay so now the core now the answer will be different like 167 okay so this is basically the parameterized function okay so we can pass parameters inside the function and then with those para and and the computation will happen on those particular parameters okay so this is the basic functionality of the parameterize function let me just create some another function like suppose uh you want to get get name of a student get a student and I will create a function get student name okay and uh I will just Echo like this name of a student is and here I will just decode all or one okay so here whenever you will call that by a particular function and provide the name so let me provide the name as I use and clear the screen so here you can see name of student is ayush okay so in this way you can pass the parameters okay so now uh let me discuss about you the return type of the function of in cell scripting how this works so basically in uh what we can say in cell scripting the return the like method of returning any value some little bit of difference so let me discuss it with you how it basically happens okay so basically what happens whenever you call the function and if you return something then you need to store that return value in a special uh like with a special uh symbol we can say like that okay so here if we want to Echo uh and not equal if you don't want to Eco you want to just return the value so you have to just write return dollar C okay and after calling the function you have to store the value return equal to you have to write uh I think dollar question mark So it basically stores the value whatever The Returned okay so if here the return value is there like water basically happens it will store the value uh before like here this sum function okay so if there is uh if it is returning some value then it will stored inside this variable return okay rdt but if there is again some kind of any function and and here it is returning something like suppose uh here I create some function okay and here I write the function image sub okay and here uh the return type will be all the same thing but here in this case now what will happen it will store the value of this return value okay so this happens so let me first report uh going into complex thing let me first discuss with the basic part how how we can get the return value so now you have to just Echo uh the return eco return value is dollar rdt okay so let me just clear the screen and I will just comment out this part okay and let me run the script so here you can see the return value is 67 okay so in this way you can store the return value but now what happens if you if we just uh like uh we do sub here sub we do okay so in this case let me uh check what happens okay so in this case also we are getting the return value is 67 okay but we have not called the stop function so let me first call this sub function so sub I will provide 13 and 14. okay not 13 14 13 and 12 and here I will write dollar a minus B so value should be 1. okay so here you can see return value is 1. so and now what I will do I will just call this sum function here before return so now let me check what will be the return value return value will be now 167 okay so now you I hope you got the idea about how the value is stored inside this red variable okay so whatever the function is calling before this so that value is getting stored inside this variable okay and whatever uh like if like some function is calling before this one so that value will not be stored inside this okay so this is the thing about return type of a value in a shell scripting okay so that's all for today guys and I hope you liked it I will update the source code in in our GitHub repository you can access that from uh access this code from there okay and in our next video we'll cover something more important and that is about nested function so we will discuss all those things about in the next video so that's all for today and if you have any query you can ask us in the comment section thank you thank you for watching now in this video we'll be talking about the nested function okay so actually I have already created the file with the name 20 underscore instead function let me just to paste the thing hashed like she Bank okay and now let me discuss about like basic idea what is the nested function so it basically means as the name suggests you can uh guess like we will just calling function inside a function inside a function not calling uh also we can say like we can write also function inside a function okay so let me just discuss about the same thing suppose I create one function demo and here I just Echo something like this is a demo function this is a demo function and again I create one more function that is the demo 2 and here I'm writing Eco this is uh sorry this is a demo2 function okay and now what will happen I will simply call this function demo here okay and demo to below okay so I will just give the permission for this file okay clear the screen dot slash 20 okay now now we are good to go here you can see the both the function has been called okay so it is this is the basic thing okay but now what I will do I will just uh call this function inside inside this function oh sorry demo 2. demo 2 okay so now what will happen it will basically call the function okay so here what happens the demo function has been called so here it saw like we have to Eco so it decode this part and again you check demo two function is also called so it gets the uh print the content of this demo to function so in this way uh our this nested function works but what if you want to call uh but what if you want to call the uh like uh not call if you want to write the function inside a function so now here what I can do I can just call this this function here also demo 2. and clear the screen and again we will get the same result okay this is the demo2 function okay so now what I will do um we will take the one use case of summation and addition sorry summation and subtraction okay and we will work on those things okay so I hope you got the idea about how everything works so let me just comment out these things and I will create the parameterize function that is first I will get the sum and here I will Echo the sum of and I will pass the dollar one and dollar two is and here I will just do the computation part that is the dollar uh dollar one plus dollar two okay and let me first check whether the thing is working or sum two and four and dot slash 20 and okay it is working the summer 246 okay so now I will what I will do I will just create a soft function also here and I will just Echo the sum of not sum the sub the difference of dollar one and dollar two is and here we will do the computation path that is the dollar one minus dollar two okay and then we will just call the function inside the sum function that is sub 4 and 2. okay so let me just clear the screen again and hit enter so here you can see the sum of 4 and 2 is 2 yeah sorry I have done something yeah let me just uh give it proper space I can clear the screen and yeah we are good to go now here you can see the sum of 2 and 46 we have passed 2 and 4 here and we are getting result from a 2046 and subtraction of 4 minus 2 that is equal to 2 so we are getting the exact reason let me change the value and I will write 80 here uh 80. and here I will do like 40 okay so here you can see we are getting the same result like expected result we are getting okay so in this way we can do the uh nested function and all those things okay so I hope you liked it and I hope you got the idea about how the nested function works okay so that's all for today's video guys and I hope you liked it and if you have any queries you can ask us in the comment section and you will get the all the source code in our GitHub repository and you will get the link in the description so thank you for watching and I'll meet you in the next video thank you bye now in this video we will be talking about some basic and the important concept that is the local variable and the global variable okay so actually we have already covered the functions so that is very important to know about the concept of local variable and the global variable so let me create the file with the name lvar and the given dot sh okay and I'll just add the shebang here bin bash okay now we are good to go so I will start with the basic definition of the local variables so if you like I will just write local variable so we can Define the local variable as the a variable which is uh which is sorry uh which is declared inside of function is called as local variable okay sorry for mistakes okay my typing is not good so much that's why it is happening so so what is the local variable so local variable we can Define it as like the variable which is declared inside a function that is the local variable Okay so so suppose if I am creating one variable that is the function one okay name of the function is function one and I'm defining a variable that is a equal to 20 sorry 10. so in this case what is this so a is nothing but the local variable okay so if I will do equal a here Eco dollar a and I will just call this function Function One and let me just add certain permission to this file that is the 21 clear dot slash 21 okay so now I'll just run the script 21 underscore okay so it's not uh okay let me just again yeah click the screen dot slash 21 now okay so here you can see we are getting the value as a value of a as a 10. okay so this is the local variable like we have declared this variable inside a function so that we can access this inside this function only not outside of this function so if you want to print like uh without function calling okay I will just print here Eco dollar a so let me let's see what happens so it will I don't think it will print anything till the screen again so here you can see we are not getting any kind of result here okay so this is happening because we can't access the uh local variable outside of the function so that is the thing we can get to know with this thing okay so I will just comment of this and I will just again uh call this function and now I will discuss about with the what is the global variable okay so global let me just write like this Global variable okay so this is the variable which is uh which is declared outside the function okay like whatever the variable which is declared outside the function that is called as the global variable okay I hope you got the idea okay so let me just comment out these things and I will create the variable name as the G where Okay g where equal to 20 okay or I can just Define the string like I am uh Global variables okay so this variable can be accessed from anywhere of your program like inside a function or outside the function so if I will just call here eco dollar G bar okay so here we can see the result as the um the global variable okay so here we can we are getting the result I am a global variable but now if you want to uh again Echo the same thing inside the function also so we can also get the result two times like I am a global variable so here you can see 10 and then I'm a global variable so you you should see the uh like how the function is executing like when you when first what is happening we are just printing This Global variable and when we and then we have called the function so after calling the furniture we are getting the first it is calling this local variable and then it is calling this one G where that is the global variable okay so this is the simple concept of the uh local variable and the global variable uh I have discovered y because we have already covered the functions and this thing you should know about it okay so that's all for today guys and I hope you liked it and if you have any queries you can also in the comment section and I will post all these things in our GitHub repository okay so thank you for watching and I'll meet you in the next video thank you hello guys now in this particular video we will be covering uh like one of the script that is the user deletion script okay so basically in this particular video we will use the whatever the thing which you have learned till now in our some previous videos that is the functions and the global variable local variable okay these all things which you will be using inside our this particular video and we will create the one script that is the user deletion script okay so let me create that file that is the uh 22 underscore user deletion dot sh okay and let me just add the what we can say Ash call exclamation bin bash okay we will add this uh c bank and now let me just discuss with the workflow what will be the workflow because if you want to do the same thing uh separately on your own then you can do it simply because it will give you the more confidence about in this real scripting so let me just tell you what will be what will we are going to do in this particular video so we will basically read the username whatever the user which we want to delete and we will we just need to provide our the system password for deleting the user and the Dell user command okay so this is all things which you are going to do inside this particular video so let me just uh comment on this thing and now I will just uh use the local variable and the global variable concept and the function function concept inside this video okay so before deleting the user we'll need to some create uh user okay so how you can create the user we will just use sudo user ad and let me just name it the test okay zero nine eight okay user has been added i o let me just check with the password okay so here you can see test user has been added we have not provided password and all those things because we don't want to create a like a normal user we had result delete this user that's why okay so the name of the user is our test okay so first what I will do I will just Echo enter the username okay and I will just read the username inside the variable read username okay and then what I will do I will just Echo enter your password it means it is asking me for the whenever we use sudo then it asks me for entering my password okay so that's why I have entered enter your password and I will read here read system password I can write okay or current user password you can write the variable in okay or the pseudo or the root user password okay and now I will just uh write the function name as the tell user okay and inside this tell user I will just Echo uh dollar this one system password okay and I'm just passing this password inside the command that is the sudo using a pipe I will use and I will use sudo hyphen as hyphen capital S is used whenever we take the input of the password from from different sources like we are getting we will write the password using this okay and with the help of hyphen capital S we can uh like write the password and then I will just write the command that is the tell user and the username okay dollar username okay and then we will have to just call the script tell user okay so here you can see these are the what Global variables okay these are the Global variables okay like username and the system password and these Global variables are being used inside this function okay so this is the normal function and here we are just what we are doing here we are just calling the calling the Intel user function okay and now what I will do I will just move into this particular clear the screen and I will just need to give some permission to this file create the screen dot slash 22 okay now name of the username is the test and I will need to enter my password okay so removing user test so now done so we have finally removed that particular user if you want to go back and check the status ATC password file so there will be no test user so here you can see there is no test user okay so in this way we can uh delete the user with our script okay so we have just used the global variable concept which we have learned in our previous video and the function concept okay and here we are just passing the name of our uh username which we want to delete and hypheness of hyphen capital S options uh to pass the like um password okay so this is the thing uh I hope you got it how everything is working so that's all for this video and I'll meet you in the next video with some another script okay so thank you guys for watching and I'll meet you in the next video thank you hello guys now in this particular video we'll be creating one of the script that is the file Integrity Checker that is the basically a simple script which you will be using to check the Integrity of the file whether the file has been changed or not okay so basically for this tutorial we'll be using on the tool that is the md5 sum okay so let me just show you the demonstration of this particular tool so basically this tool will generate the hash of the particular file so if you will check the hash of this hello.txt so here you can see there this is the hash okay so but now if we'll change the uh something like uh let me add again 1D here and again let me check the hash so there will be change in both the hashes so here you can see the difference so basically what we will be doing so we'll be using this tool and we'll be creating two functions for generating hash and the checking hash and we will check if both the hashes will match from the previous hash then there will be no uh changes we will display that as output and if there is changes then we will display output as like the rich engine of file okay so let's start with the uh creation of the script so let me just add the one file that is the file Integrity checker file integrity Checker dot sh okay so now what we will do now I will create two function so let me just uh pin Bash shebang has been added and we will give the two options for the user for generating hash and the create checking hash okay so but before this I will just create the function that is the generate hash okay and we'll be covering all the concept which we have covered till now like mostly function will be covered in this particular video okay so now I will just ask the user to enter the file name of which we want to generate hash so here I will ask the user enter the file name please okay and I will just restore the file name in the read file name value file name variable and then now what we will do we will just generate the hash and store that hash into the file that is md5 sum and will provide the file name and we will just file name dot md5 we will store the output in the md5 this output whatever the output we are getting this one we will stored in this md5 okay and uh then we will just Echo hash value stored in dot dollar file name whatever the file name we have file name dot md5 file okay so uh this is the generate hash let me just call the function and let me check with whether everything is working fine or not clear the screen dot slash but before that I will need to provide a certain permission to this file that is chmode plus X that is 23 clear the screen dot slash 23 into the file name I'll just write hello.txt here and here you can see Hello hash value stored in this file so let me check okay so here hash value has been stored we can check here okay now uh coming back to the script so let me just clear here the net hash now what I will do I will just uh what we can say um check hash value will uh check hash check h a s h check hash value okay and Eco enter the file name now we are just checking the hash value and we will match the hash value with our previous value okay so Eco enter the file name again we will enter the file name and we will just read file name we are creating the variable and storing this in the file name and now we will uh generated hash we will create one variable value generated hash okay don't confuse between generate hash and generated hash okay and here we will store the output of the previously uh whatever the previous uh hash which have we generated in the md5 file so we will store the value like this value we will store in this variable generated hash how we can do it we will just read the file name that is dollar file name dot md5 we will add okay and then we will again we will just store the uh like current hash or current output so how we can do it dollar and we will just do md5 sum and then we will just provide the file name okay now we are good to go and then we will use the if conditions here like if we will just do like this F and we'll pass the double quotes and dollar and let me just copy this thing if dollar generated hash will be equal equal to we will use here equal equal to again double quote dollar output then in this case what we have to do then eco there is there is no change in file okay and in the L condition we will surely uh add the equal statement that is there Edge there is something change something change in a fight okay and then we have to just block the uh if condition we have to just close the if condition okay and now what we have to do uh what we can do uh like now we will just Echo the choices Echo one dot what the user want generate hash whether user want to generate hash or whether user want to calculate hash to check file Integrity we can say file in t gritty okay and then what we will do we will use the switch case and whatever the thing which we have already learned so we will use read hyphen p okay and we will like right enter your choice enter your choice okay and we will store it in the choice variable that is the choice okay and then we will use the case dollar Choice okay in and if this is the if this is one then what we have to do Echo then generating hash and then we have to just call that function that is the generate hash okay here we go generate hash okay now we have to just remove this part now if 2 is selected by the user then in this case what you have to do and here you have to just break this one okay two then we have to just Echo uh we can do checking file integrity okay and we have to just call this function that is the check hash value okay and we have just closed this one and the if any other value that is the default if we get the default then in this case we have to just Eco invalid Choice buddy invalid Choice okay and we have to close this case okay now we are good to go I hope everything is ready and we will just run the script again dot clear the screen okay and I will just remove this file here uh because we'll be using this file okay and I will just remove this one also okay now run the script okay what is the choice first enter the file name Hello dot txt okay hash value has been stored inside this file now we will do again run the script and now we want to check file Integrity enter the file name hello.txt okay so there is no change in file okay but now what I will do I will just again uh do hello.txt and I will add this one e okay and again I will uh clear the screen again run the script enter your choice that is the second check file Integrity enter the file name hello.txt and here you can see there is something change in a file okay so in this case you can see uh like we have changed the file here name like we have added e so it is showing me that there is something change in a file so our this script is running actually fine so for your uh like if you want to go on some advanced level you can use try Excel block all those things okay for if file doesn't exist you can just pop up an error or Echo the statement like file doesn't exist all those kind of things okay so that's all for today's guys and I hope you liked it and we have used multiple things inside this so this is basically the long script which you have entered uh till now so that's all for today guys and I will meet you in the next video thank you thank you for watching now in this video we'll be creating one of the script that is the uh cloning repository okay so basically this is crypto Bill what way it will do it will basically clone the whatever the depository if you want to clone from the GitHub so basically we will be doing in this particular script so let me just create the file that is the 24 underscore uh clone repo dot sh okay now we are good to go we have to just uh so this is the basically a very simple script which we'll be uh doing right now okay so the way to let me just tell you the use case how the thing will go like uh basically we will read the uh like link from the user okay we will use the git command okay and it will basically uh automatically uh create one of the folder inside our deposit inside our system okay so this is a basically a simple use case which we'll be doing inside this particular video so how we can do it we will use the concept of the local variable or not local uh low globally Global variable and we will use the functions also okay so how we can do it uh if you want to do on your own then that is a very good thing so now let me just Echo enter the repository link depository link okay so we will ask the user to enter the repository link so we will just read this thing inside the repo link variable okay and I will create the function get repo uh not like this get repo okay and to parenthesis Eco and here I'll just eco getting Repository please wait like this and we can use the command get clone okay and get clone and the reporting will provide okay so now what I will do uh we have to just call this script call the function sorry get report and provide a certain permission to the script CH mode Plus x24 clear the screen dot slash 24 okay Enter the deposit link so let me tell you we will be like uh what we can see cloning this uh link okay or this repository cell scripting tutorial so let me just go back here and Ctrl shift to B now enter so here you can see cloning depositivity is wait so it is done so now here we can see all those file have been like uh cloned here okay one to ten because we have added only uh till 10. so let me just again uh delete this link okay let's delete this directory clear the screen okay so uh this is the very simple script which we show right now so now what we can do we can check uh whether the user has entered link or not okay so this thing we can do in our next video okay like we will check about the uh like regular expression and all those things okay in our next video so that's all for today's guide and I hope you in the uh in the next video I'll meet you so thank you for watching hello and welcome back to the channel this is ayush and now in this particular video we will learn about uh one more script that we will create another script with the help of the nmap tool which we basically use for the network mapping we will look for the what are the open ports in the particular uh system using the IP address or the domain name okay so but before moving forward in this particular video I will uh talk about first about this clone repository sh file so we can do one more thing in this particular uh script is like that uh wait a minute we can just add one more thing here like we can check for the weather user enters the uh correct URL or not okay so we can use the concept of the like substr that is the substring we will match the substring of a string okay I hope you got the uh concept this thing like what we will do we will just to match the substring part of the this repo link okay if you if it matches with the github.com then we can easily clone the Repository so now what we have to do I will create the just another variable with the name domain name okay so let me just create it domain name equal to github.com github.com okay and I will just need to add the semifels conditions here to check whether the user enters the correct link or not okay so here I will just do dollar repo link equal equal to and I will need to use asterisk because we use that for the substring comparison okay so I can do asterisk and then inside the double quotes I have to just provide the variable name that is the domain name okay so now what we will do we will basically uh like right for the script like then eco if the link are equal then what we will do what is happening okay let me just copy the same thing again here Eco then we will do this else what we can do else we will just Echo please enter valid link and we will close the condition part here with fee okay so I hope everything is correct so now what we will do I will just run this script again here so okay I will run the script but before that I will just copy this link okay so just paste it here and the terminal so I'll just run the script using 24 okay clone.sh Enter the depository link I will enter the link okay so here you can see we got some kind of error uh on which line we have got line number 14. okay if repo link equal equal to asterisk okay we forgot to add space here Ctrl s clear the screen okay now I will just add first google.com so it should Pro in yeah so please enter valid link now I will what I will do I will just paste the depositor link enter so here you can see it is cloning into cell scripting tutorial and here you can see other directory has been created with the name cell equipment tutorial so uh our script is running uh fine because if you are entering some wrong URL then at that time we are getting the uh this statement is running like please enter valid link so it means this thing is getting verified okay so that was the part which were remaining in our previous video so now what I will do I will create one more uh script with the name huh sorry let me just create it 25 underscore on map yeah we can do nmap.sh so now if you don't know about the nmap so let me tell you first about what is this so nyp basically one tool that we use for the network mapping or you can say like for finding the open ports in a particular uh system okay so that is a basically a cyber security tool which we use for for Network scanning and all those things we can also get the information about the osc okay so just like other commands uh like for LS we have L option a option so similarly for nmap also we have different options okay which we will learn in this particular video okay so let's start with the scripting part and let me just give you the use case how the thing will go on so the thing is basically whatever you have to read the host name it basically means whether you want to take the domain name or the iPad does it all depends upon you what you want to take as an input from the user so you have to take the host name and then further what you have to do you have to just use the nmap commands Okay to just uh what we can say um to just scan that particular host name okay so this is the simple use case which we will be going to use in this particular video so for that first I will need to enter the uh take the input from the user that is the host name okay so let me first clear the screen and now I will just Echo okay wait a minute what's what is happening which key is uh I think some keys are okay wait a minute some keys are pressed automatically wait a minute yeah I think now it's not happened nothing is happening sorry for that so now what I will do eco enter the hostname okay but before that let me show you the how the thing is work okay the actual thing works okay so let me just to search for the nmap okay so you will get the official website of the nmap.org that where it tells like uh it's a free and opposite utility for network discovery and security auditing okay so this is the basically one of the tool and there is also one uh scan me dot nmap.org this is the what we can say testing website through which we can test for any uh for this domain name okay like it's legal to test this domain name because they have already authorized peoples to test this particular domain but you cannot uh test any other domain names without their permission okay so if you do I will not be responsible for that I am clearing this thing in this particular video okay so now let me just okay I think my Internet is slow wait a minute okay so now I've switched with another Network okay so now let's go on this particular website and map.org so here you can see the whole documentation part if you want to read you can read okay so let's go with the reference guide you can go with this or docs also so this is the reference guide in this way we will basically write the command Okay hyphen a option is there okay many options are there there and before that you should know about the TCP Port udb Port okay so basically we have 65 536 ports in our system okay so it basically basically scans which uh which Port are open in your system okay so now let's move with the scanning part okay so let me just check whether this website is accessible or not I think it should be yeah so here you can see go ahead and scan miss the title of this particular website okay so now what we can do uh we will just create this script and we will use this nmap tool and some other options okay to run over script okay so now let's do so Eco enter the hostname read hostname okay we will just read the hostname and now next what we will do we will just take the our password okay the system password because the sum of the options required uh sudo permissions so for that we need this enter system password okay so here you will learn one more thing hypheness or hyphen f s option provides like if you will enter something it will not be visible okay so that is the uh benefit of using this option so here we can store with system password okay and then what I will do I will just create one function okay or not function before that uh yeah I will need to create one function to work with the uh cases okay I will just create different cases for different options okay so how we can do it so we have to just write the function name so I will write the function name as the nmap function okay like that I can write okay and in this I have to just provide this um options okay so how I can provide like I will need to write Eco dollar okay and then I will just need to write like this first option will be or I can rule write like this one dot and normal scan okay and we will use slash n for new line Fair two Dot and then TCP scan we'll be doing three types of scan in this particular video normal scan TCP and the udps scan okay three is UDP scan so these are the three options which will be available to the user and then what I will do we will uh what we can say we will take the input from the user okay choose option choose option which you want to prefer okay so here we will just write the option okay and now what I will need to do I need to prove uh write different cases so if user enter one what should happen if user interest two what should happen all these cases I should write so we have already covered it in our previous videos so how you can deal with the cases okay case option in if one is provided then what you have to do I will just Echo a thing like if one is provided I should write like this eco uh like this normal scan okay like this we are done and then what you will need to do Echo I will just provide the system password to the sudo command Okay so night okay so now what we will do we will just pass the sudo and we will use the capitalist like hyphen f s option because we are getting the password from this particular uh system password okay that's why we are using this option and now we will simply use the nmap and the if you are going with the normal skin so at that time we have to just provide the host name or the domain name okay so we can just do like this hostname okay so this is the first case which we will be dealing with that and secondly what we will need to do uh this is just like break a statement and for the second second case that will be for the TCP scan okay so you can do like this inter like this TCP scan and these much Dash okay and same thing we have to do just we have to change the uh option okay so you can just copy and paste things easily and hyphen as capital T that option will be used for the TCP scan and the third thing is just the udps scan okay so I know yeah you will not be aware of these TCP and udps configure that is the concept of the security part but if you learn you will surely get it UDP scan okay and then again same thing I will just paste the thing here and I will just use the Su that is the one option which we use for the uh what we can say udps scan okay so these are the three options but if you just something else then at that time what we will use we will use the asterisk and then we will provide like please enter the valid option okay so this is the case and we have to just close this thing so how we can do it esac okay and now simply we have to call that that function where it is that nmf function so I will just copy the thing here okay call it here okay now we are good to go first we will need to provide a certain permission to that file okay and now so enter the host name so our host name is this one is can me.nmap.org okay so it's all upon you you can provide the IP address as well as the domain name where we will go with the domain name first and after that we will go with the IP address sorry we will need to provide like this can me Dot and map dot org okay you will need to enter the system password okay so here we are getting some kind of error at line number 42 okay wait a minute oh sorry I have done some mistake I have to just enter the name of the function okay again same thing scan me Dot nmap.org okay so whatever scan we I just want the normal scan so let's check it takes some time so you will need to wait and let's again check the IP of that particular domain name scan me Dot nmap.org okay so I think I'm not connected to the internet okay okay sorry for that okay so now I have solved the issue so let's again run the script enter the hostname scan me Dot nmap.org okay system password normal scan I want okay so it's starting okay so here we you can see we have got the different ports like 22 8929 these much ports we have got okay so these are the port which are open on that particular domain name okay so also we can run for the second option so again run the same okay second TCP scan okay let's wait this can stick I think must time we will need to just wait so basically in this script we have used a switch cases and the function concept and the user input all those things we have used here so that was a quiet type of division for you guys okay if you will create these kind of scripts so let's wait for this uh it's taking a little bit more time let's wait okay so we have got the all the TCP ports which are open on that particular domain name so here you can see 2280 Triple H so these are the all ports we have got so these are the open port these are some filtered open filtered so you will uh if you will search about on Google like what the difference between open and filter poor you will surely get to know and these are the services which you can see here okay so that was the basically uh thing about the scripting like how we can use the different tools with the with bass script okay so that was the tutorial for this and I hope you liked it if you have any query you can go on uh write down in the comment section and we you will get the source code of this particular video in our GitHub repository so that's all for today's video and I will meet you in the next one thank you thank you so much for watching