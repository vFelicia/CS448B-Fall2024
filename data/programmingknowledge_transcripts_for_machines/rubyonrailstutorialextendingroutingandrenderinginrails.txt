so today we are going to continue with the rails tutorial so to start with first we will start a rail server okay so let's start a rail server with the command rails server so the short form of this command is rails s also so now when i like but i can previous tutorial i have showed you some like these things how to create a server console and the generate command so we had generated a control controller for the same so let's move to our server so let's refresh this page so here you can see like this is the page we get okay so let's define one another route and let's say get slash index and it moves to a root slash index hash index so let's define a index method here so let's define index and this should be on the top basically like above all so let's yeah perfectly fine so let's uh render index okay now uh i hope you must have watched my previous tutorial to like get so basically we are creating an index route which hits to root slash index and root hash index and when we move to root hash index it calls the index method and it renders the index erb so let's create an index crb which is by default should be created in the root folder and it should be the name index.html.erb and it says h1 with index page okay so yeah so let's move to this route slash index so okay it is showing an error okay it's a quite a small error uh i'll help you resolve it so basically in our route dot rb we i forgot to put it like a colon here so yeah now it should work fine so now we have like achieved the index page okay let's move to the another page contact and let's move to the another page about okay so it works perfectly fine so what you need to do like here you have the leg written render index so instead of index if you want to like you the one thing you could also do is like we can comment these things and we can comment these things and this is not required like uh like console statements are not word uh you can see that whenever i hit that method the console is uh these statements are run in the console so uh when i remove this line okay let me remove this line render contact render about and render index so real by default has the ability to map that erb if the method name is same okay and here you can see contact and here you can see index okay so if inside the index you want to by default render index so you can leave blank and if you want to render about you could also do that okay so when i hit the index page i move to the about page okay index route moves to the about page so like this sounds little confusing but we should follow the convention because it increases the readability of the code and we know what is going out when so basically you should put these statements and it's like easier to debug than uh contact so uh so now we can like remove the statements so yeah so now what we can do a short activity like we are going to perform right now so we know that when we hit the root most route of this page like this is so we get the ruby on rails page so for that what we can type we can define the root and it should be root hash index so uh one thing i wanted to make clear don't confuse this root keyword with my root controller because i could have named any root controller but this is a like a reserved keyword in rails for the like giving the root route so let's refresh this page and now and you can see now this root is the this route is the index row so you could also do this to about so now about one becomes the root perfectly fine you could also do this to contact contact and contact one will become the like default one so this is how it's performed so this is how we have achieved this uh like the root route so this is like easy to do and uh yeah so let's keep it this to index if we are keeping this to index then this is not required okay so we can either comment this out or like i'll comment this out because this is not required and i'll move this to top now like yeah so this is perfectly fine so uh now one format uh one one short active we are going to supposed to do we are going to create a one like api method uh let's create api and let's end this let's create a variable response response and let's uh give them a key so basically in rails we give a key by giving a colon so status and is equal to 200 and basically it is like a hash map and message is equal to hello world now uh basically there are a lot of render methods we can do render json and this is we sent the response so basically i'm showing you this because like this is like most a used one so it will help you and now i'll type get flash response and we hit like the root hash api so when i hit move to the response route i i call the api method of the root and then we can see the response so let's move to response so here you can see a status of 200 and a message of hello world is there so this is how we have cros uh created created a mock json response so that's good so there are multiple uh you could like figure out these uh i close this close this all as well and this and yeah so there are like multiple methods like one is json another is status okay i'm telling you you can like refer there are many then one is html uh one is body one is ht like like html there is a xml then there is a json there is js as well so uh there are many methods like plain uh text so there are many so you can like uh serialize your data like in many ways as like you want so this is this one will be like json so this one is perfect so now let's uh do uh one one thing i'll show you let's create a file header dot html dot erb and let's create another file new file footer dot html dot erb so one thing like you must have like a scene here like i'm putting a underscore tag in between like in front when naming this file so basically this underscore tag defines a partial so i i'll give this a notes like this is a underscore tag means a partial so partial is something where you can it renders the same thing again and again so i'll show you when i move to like this page header.html.erb so i'll create header okay and i'll close this and i'll put a hr tag so i'll put a hr tag in the top and the bottom as well in the same way i'll copy the same code in the footer and i'll this name is add to footer okay when i move to my index page so when i move to my index page so i'll define so this is like uh like rails has a template engine so this is the syntax render header and this is how we define like this is like these braces are very important because this signifies the template engine rails okay so let's let's close the server and i'll start the server again so let's the server should start so yeah the server has started so let's refresh the page at the index so here you can see i have a header okay and in the same way in the same way i can render a footer okay so like yeah so this is how we achieve and now we can use this partial everywhere like if in this page we want a footer only okay or we want a footer at the footer only so we can do only footer and let's refresh and move to contact so here i only have the footer so this is how you can maintain the partials and partials can be rendered only wherever they are required so thank you everyone for watching this tutorial so i'll catch you in the next tutorial with some more content on rails thank you everyone