hello guys welcome once again in the last video I have shown you how to use inheritance in C++ and I have shown you how you can create a base class and create a derived class from which you can inherit from base class so we have seen in the last video that uh our shape is our Base Class I have uh given you an example of this polygon and types of polygon right and the polygon for example shape class was our Base Class and the rectangle which was inheriting this shape class was the derived class right so we were just calculating the area of rectangle using uh The Inheritance uh method in this uh uh example right if you haven't remember this uh example just watch the last video and in this video I'm going to show you that it's not only that you can inherit from one class it's uh also allowed to multiple inheritance or inherit from multiple classes in C++ so if you remember we have created in the last video a shape class visual was our Base Class and rectangle class which was our derived class let's create one more Base Class for example class and I will name it as description which will give us the description of any any class right and what I'm going to do is I'm going to create uh simple program print and what it takes it takes uh string which gives us the description okay so and what I'm going to do is I'm going to Sprint STD see out and then I'm going to print we are using and then I'm going to give the space and I'm going to use this description variable which I'm passing it as an argument uh and I can just say class okay and I will end line okay so this is a very simple class uh let me give the xess modifier also okay so this is a very simple base class and what it does is it just gives us the description of uh whatever we pass as an argument right so one class which is a shape class uh we have used this class in the last video as a base class and for example we want to use this description class also as a base class for our rectangle class so what we can do we can multiple inherit from uh shape class as well as your description class and how you can do you can just separate your inheritance by a comma or in uh base classes by a comma so now this rectangle is um inheriting from shape class as well as description class but don't forget to give this excess specifier to every a base class here okay so we are inheriting from two classes and now in the main I have created if you have remembered that I have created uh uh object called rectangle Rec and I can calculate or set the values using this um set Value method from our shape based class right so from our rectangle object which is a object of our rectangle class we can access the method from the base class which was the shape class in a similar way we can access the method from description class from or by using the object of our rectangle class because we are inheriting from our description class into the rectangle class also right so what we can do is we can just in the next line we can use this rectangle class or object and we can whenever we just write dot separator we can see the print method is also available which is a method we have defined in description class right but because we are inheriting from description class it's available to the object of your rectangle class also just use this and you can just give a string as a parameter and for example I can say rectangle okay so we passed rectangle as a parameter now I'm going to run the program I need to build it first and then run the program now I'm going to run this and now you can see we are using rectangle class right so in this way you can inheriting inherit from multiple classes and all the function or member function or member variables are available for us usage by the instance of of the derived class also okay so this is from The Base Class function right this uh in the last video we have seen this we have defined in the base class in a similar way this print method we have defined in the Base Class called description we haven't defined any print method in the rectangle class but even though even then also we will be able to use this um print method from the description class because we are inheriting from the description class in the rectangle class and whenever we inherit the public and protected members of the base class are available for user use to the derived class okay so in this way you can do multiple inheritance in C++ I hope you have enjoyed this video please wait comment and subscribe and bye for now oh