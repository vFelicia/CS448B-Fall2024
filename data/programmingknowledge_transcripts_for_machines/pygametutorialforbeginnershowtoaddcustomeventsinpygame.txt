hey everyone today we're going to discuss making custom user events sometimes while making a video game with pi game you might need to create a custom event so we're going to make two user events one that is initiated by the user and one that works automatically so i'll have a rectangular object that will inflate to a certain size when i hover over it and the other event would be the screen changing its color alternatively let's write the code for it now i'll import by game i'll initialize it i'll set up the screen screen equals spy game dot display dot set mode screen size that will be 500 comma 500 and then i'll also given the caption i'll write pie game dot display dot set caption and let the caption be custom events then i'll get to the wild true loop i'll write while true for events then by game dot event dot get if events dot type equals by game dot quit i'll call the quit function by piking and i will quit i won't write screen dot phil right now i will do that later there is a clause to it i'll get to that later and then i'll update this i'll write pi game dot display dot update okay now outside this while true loop let's get to the main code now let me define the two user events two custom events so let the color changing event be called color i'll write color equals pie game dot user event and capital and plus one so that is how you define a custom event then i'll have another event the box grow event i'll write box underscore chrome equals by game dot user event plus two so that's the second event so i've done plus okay now i'll set up the background color to white to check the next color of the screen what color needs to be filled next it will be used later in the color user event when we define it and i'll have this grow variable of boolean type to know when the cursor is hovering so that accordingly the rectangle can inflate and deflate this also would be used in the box grow function since i told you i'll be having a rectangle so let me define it i'll use the rect class again i'll write box equals by game dot correct let the initial position be 255 comma 255 and the size before t comma 40. now here i'll be filling in the screen color okay so i'll write screen dot fill and let the color be white initially so this is like i have just initialized the screen color because in one of my events that color changing event i would alternatively change colors of screen if i put this in the while loop it would render a single color regularly okay because there is a loop okay then i'll have my clock object to set up the frame rate later i'll write clock equals pi game dot time dot clock then i'll call on to the color changing function because it would be automatic so i'll make use of the set timer method by the time module i'll write pi game dot time dot set timer the event would be color and comma 500 milliseconds so that would be the interval okay in what interval i want to call on to this event now in this events loop i will define these events that i initialized up above so i'll write i'll check if events dot time equals color if background color this variable this which was initially white if pg underscore color equals pink then i'll fill in the screen with pink color and i'll make the easy color equals white and else if background color is white i'll fill the screen with white color and i'll reassign background color value i'll make it pink so that would help me to alternatively change the colors of the screen okay then i'll check in for the box grow event i'll write if event start type equals box underscore chrome i'll check this boolean grow if it is true i'll inflate the box in place we discussed the concept of in place earlier so i'll write box dot inflate in place let us inflate it by four comma four the x and y coordinates with the same amount same units since i said i would grow the rectangle to a certain size i would check the box width if it is less than 80. you can take a larger size if it is not i will let grow to be true else if the box is larger than the size i will make grow false i won't use a nested if i would simply write grow equals box dot width is less than 80. i'll check if box width is less than 80 and accordingly grow will have that true or false okay now for the else condition if grow is false i'll deflate the box so there's no such function for deflating but we can inflate but with the negative units so what i'll write is i'll write box dot inflate in place minus four comma minus four so we'll be subtracting this four units from the x coordinate and i'll write cro equals box dot width is less than 40. now if the box decreases to a size of 40 or less grow will become true again okay now since the box grow event should only be called when i hover over the rectangle i'll write outside this for loop i'll write f box dot collide point i can write this for rectangle class pygame dot mouse dot get position in the arguments this would be checking for the cursor's position so basically i'm checking if the cursor is over the rectangle what i'll do is i'll call on to this box grow event i'll write by game dot event dot post by game dot event dot event and i'll call on to box crew okay after that i'll draw my rectangle i'll write pie game dot draw.rect and in arguments green orange let the box color be orange and box that was my rectangle and after this update function i'll call on to the tick function to set up the frame rate let the frame rate be 40. now let's run this code and see if you could really create some custom events so the screen changes its color or automatically alternatively and when i hover over this rectangle it changes its size as we have defined it inflates on the plates accordingly so everything is working fine we could actually make constant events so that was it for defining custom events i hope you understood how we define custom events thank you