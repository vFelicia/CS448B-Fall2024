hey guys in this video we are going to look into a tool that is called Mongoose well when we are using a MongoDB library we are using for the crud operation but for using other functionality like validation typecasting is bit difficult in this so we are using a new library that is called Mongoose Mongoose is a NPM library that is used for Valdez and typecasting and also the crud operation that people come into it so let's start with our new project let's say we are going to create a new project name called Mongoose demo we go into new project Mongoose demo now we are going to initialize then pmn it by using NPM can eat sy after that we are going to go to this project by using code space dot now in this project we are going to initialize how are we going to start the script so for product sample first we are using node app and for EF purpose we're going he was not one app now let's create a new file export app dodgiest now here again we are going to install new libraries first we are going to install Nordman library for installing it npm install' testers save their step not one now we are going to install NPM Express and Mongoose for installing it we are going to use NPM yes I test Express space monkey in the meantime we are going to use all the configuration that is needed here let's same cons expressed differently require expressed and and we are going to use the app that is going to get required from experience as a function and we are going to listen to a port number let's say 3000 now for using mumbles into a project we are going to create a new folder let's say utils in this folder we are going to create a new file let's say DB torches and this while we are going to create a new Const Mongoose and we are going to require it from bangles after requiring it we are going to connect our MongoDB to our current project so for connecting it we are using connect function we have used in the Normandy with Trevor so we are going to require the so what means we are going to require the connection string that is here now let's copy it from here and we are going to paste it into the connect function in here we are going to replace the password that is given here and pasting it into the password field after pasting it we are going to use optional options that is given here like used minify to apology to true and used new URL Varsity true after that its is using if we are using the tan function here it returns a promise and if we used then it will give the successful result and if it is error it will give an error now for starting this file we are going to use the this file using requiring it from the file using this thing using required dot dot plus dot slash utils /t b and now if we run this project by using NPM run tear we can see that the connection is established now we are going to use the Mongols in our fight so we are going to remove this one because there is no need of it now we are going to create the model of a user so for creating a model we are going to use a term that's called schema so for this so for using a schema we are going to require it from the Mongols so let's say schema consists EEMA mongoose dot EEMA after that we are going to create a new schema use it so for creating it we are going to use any user schema variable and after that we are going to construct or use new operator and using the schema and here we are going to define the user schema so what are the information needed in the user is Emma so let's say we are using name so we start it will be it will be a type of a string so we are using string and it's required so we are using a required property of it that's it's a boolean so we are going to use true and if there is any like spaces before the name or after the name we are going to trim it so it would be it give a dream properties so we are using dream is to true and after that we are going to create a new document let's say is and in the A's we are going to deliver like what type is it so it's a type of number and it's also required into our project so after that we are also like that's it now it's a model so for creating a new model we are going to use cons product user and we are going to create a new model for creating a new model we are going to use Mongoose dot model and we we can give any name that's a string so let's say user and in here we are going to provide a schema that we have used the we are going to use user schema now we are going to instantiate a new user into our project so for instance ietting in the new user we are going to use a new user one and after that we are going to use new creators constructor and then we are going to use new user and in here we are going to perform now let's say we have provide a new name let's stay John Doe John till and it's Easy's let's say 21 after this we are going to save it for saving it we are going to user dot save that is Leon by the Mongols and it's in promise so we are going to use 10 and after that we we can see that if it is saved or not you can console got love with paste and if it's an error then we can perform an error operation not only we can see what's in there there now here you can see that it keeps the user and it automatically give the ID in the name and the is and the version of the document that is zero now if we see into our project we will see that it has been saved in the world no more DV so for thing we can go to the collection and here you will see that the user has been saved and the user collects that name is also given to it so now we are going to see how can we provide the validation here so if we want to validate that there is will be like only great 1518 or let's say we validate that error that the ears will be will not be less than zero or it's not a negative so for doing this we can use a method or a function called validate into it and in this if we provide like if value is less than zero it will throw an error so for throwing the error we can use throw new show new error and let's say yes must not be less negative so if we save it no first we have to change the value of it so let's say if we are right like minus 20 and now if I save it you will see that it gives an error that say s must not be negative so Mongoose can be used for performing like any validation that we require now if we add one more property let's say email so how can we check that in email is like a rock so it will be an string and it's also required into our jaw collection and full validation purpose there is a new there's a NPM library it's called validator so we are going to install it for install NPM I delegated so in the meantime we are going to use the how can you like we can see here like if people Fe don't display or don't in slide is in here and if we save it you will see it also gives an error here it says that yes is required and the part is is required and the message xnl so so now we are going to use neoliberal II called validator and in here we are going to require it from elevator now in here we are going to use validator validate function and the value that we provide and in here if validator thought is email value it will throw an error let's say it should be an email but validator that is email if it is right it will perform a true so in here we are going to use not operator so now if we provide like is can be 20 and if you provide like email to be John gmail.com and if we save it now we can see that it should be an email so it gives an error so that's how we can use so that's how can we use the Mongoose library into our folder so thank you