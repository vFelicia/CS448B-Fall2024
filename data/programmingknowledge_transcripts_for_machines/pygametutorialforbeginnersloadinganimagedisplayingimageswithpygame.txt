hey everyone this video is going to be about image handling in pi game we would load an image see it scrolling across the screen rotate it and scale it and also we would talk about the transform module which is readily used with images in pyking so let's start with normal image loading i have initialized pygame declared the screen and in the fourth line i have used the load function from image module by pygame to load the image it takes one argument that is the name of the file or path let's keep it simple for now just use the file name this is the image we would work with then is our normal game loop i have colored the screen white with fill used blit to get the image at the provided coordinates we can also use direct object we would do that in a minute and then there's our regular events loop so let's run this code and see if the image is loaded on the screen so yeah it is up and running but what if i needed the image at the center of the screen we would just repeat what we did last time to bring this text at the center there we have the font object here we have the image object we would get it on the rectangle by declaring a direct object and assign its center the center coordinates of the screen let's run this now see if our image is at the center so yeah we have our image at the center of the screen cool what if i want to move this image across the screen for that we would repeat exactly what we did for scrolling the text you can see here i have taken the speed determining i variable put up a condition given a weight of 5 milliseconds incremented i by 80 it's exactly the same it's just that last time we had text object now we have image object so let's see how it moves here you can see the picture moving across the xaxis you can also try it moving across the extreme left you can try moving it in the bottom along the bottom and along the right side too just like we did for the text now let's try to rotate a still picture for this we would use the transform module as you can see i have loaded the image in the seventh line then i have used rotate function by transform it takes two arguments the object you want to rotate and the angle by which you want to rotate the positive angles rotate anticlockwise and please note the angles are in degrees and after that we have our simple game loop with no new things you will fill a color get the image object on the given position then run the events loop so without wasting any time let's run it and see if the image is rotated yeah we have our image rotated clockwise by 90 degrees since i gave an argument of minus 90. cool now let's try to scale the same image for that we would use the scale function by transform scaling is just resizing the surface to a new size the second argument here is of the new size that you want for the image and then it's our normal game loop so let's run it and see if we have new sized image yes we do have a new sized image the original image squeezes into the size we have provided that is 200 by 200. in the last two programs we use transform module this module has some more functionalities let's look at them so i have loaded an image it's the same program as of the first one and use the flip function now by transform so it takes in three arguments the surface you want to flip and the axis about which you want to flip i have flipped it about xaxis as the second argument is true and the third one is false if i run it my picture is flipped about xaxis you can do this for yaxis as well then you can even set both the of the arguments as true then the image would be flipped about both the axis next up we have the auto zoom which is a combination of rotation and zooming in the image of course the function itself the name of the function itself explains it it takes three arguments as well the surface you want to work with then the angle of rotation and then the zoom in factor which takes a flow data type so you can given arguments like 1.5 2.5 and 2.25 etc even given a float data type it is not just confined to integers fine let's run it and see what we get so we have our picture zoomed in by 1.5 and it is even rotated by 90 degrees you can even rotate it by 180 degrees not a problem or by 360 then you'd get the same image again now if you want a picture double the original size you can use the scale 2x function if you're using this function you do not need to mention the zoom in factor it's automatically two we get a picture which is double the size of its original size so let's run it and see if we have what we are expecting so yeah the image is double the size of its original one transform also has this average color function which gives you the average color of the mentioned surface now if i print this for the current image it comes out to be this color there's a color this is an rgb format so yeah this is one color that we get it is the average color of the given image so in this video we work with the image and transfer module next time we would work with the music module in buy game hope this video helped you thank you