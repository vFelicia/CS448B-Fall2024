hey guys welcome to the next video on Jenkins tutorial for beginners in the last few videos we have seen how to install Jenkins on variety of operating systems like Windows Mac OS and Linux operating system now moving forward I'm going to use my U bun 2 operating system in order to demonstrate Jenkins functionalities because most commonly and most frequently Jenkins is used on a Linux operating system but having said that if you are running Jenkins on Windows or Mac operating system you can also follow along with this series because most of the time we will be working with this Jenkins UI on a browser so it doesn't matter on which operating system I'm working on now if you want to practice Jenkins on a Linux machine it's also easy if you have Windows or Mac operating system what you can do is you can install VirtualBox or VMware Player which are the software using which you can install Linux or any other operating system virtually on your Mac or your Windows operating system I have already made some videos on how you can install Ubuntu on VirtualBox and VMware Player so if you want to use Ubuntu or any other Linux system virtually on Windows then you can install VirtualBox or VMware Player and install Linux and then install Jenkins on it and you can follow along with this series so in this video I'm going to show you how you can create your first Jenkins job so let's create our first Jenkins job so what I'm going to do in this Jenkins job is I have a Java program on my operating system which I want to build and run using Jenkins and I'm going to show you how you can do it using your first Jenkins job so to create a Jenkins job you can either click on this which says create new jobs or you can click on this option which says new item so I'm going to click on this option which says create new job and then you will see here an interface which says enter and item names so I'm going to give my Jenkins job name as hello world here okay now you will be able to see few options under this name so there is a freestyle project pipeline multi configuration project folder and other options so to start with we are going to start with the Freestyle project so just choose the freestyle project and then click OK and once your job is created you will be able to see this kind of a window here so first we need to configure our Jenkins job so the first thing here is the general tab and here you can provide a simple description about your job so what this job is going to do is going to build and run Java program let's say so here you can provide a simple description about your project and also you can preview your you know description here so it will be shown like this on your job window we can configure it and change this thing in the future so that we will be able to use the HTML tags also in the description and now let's move to the next section so under the description you will be able to see discard old builds when you build your Jenkins job or github project or this project is parameterised for now we will not be using any of these options so just leave everything as unchecked and we will move to the next section which is source code management now by default you will see three options here one is none second is kit and third is subversion so for now we will choose the none option because we will not be using any source control management system for this video but in future we will be using gate or subversion in order to pull the source code from the github for example and then how to build or run the test on it so just choose the none option here and then we will move to the build triggers you can also click on this option which will just lead you to this category now here you will see few options first option is trigger bills remotely we will see this in the next video build after other projects are built this also we are going to see in the next video the third option is build periodically so we are going to choose this option for this video and the next option is github hook trigger for gate SCM polling and pool SCM which is for the source code management system so these option we are going to see in the future when I am going to show you how you can configure gate and other options into your cheng Kean's now by the name you can just guess that this option is going to build or you know run your test periodically but how we can configure our Jenkins to run periodically so for the help you can just click on this question mark here and then you will be able to see all the options which you can use here so you can see this field follows the syntax of Kron right so for example when I write s trachs Astrix Asterix Asterix Asterix using spaces so 5 X tricks and between them I have used spaces this means that I want to run my Jenkins job every minute and when you do this you will be able to see the hint here so it says do you really mean every minute when you say the estwick size tricks Astrix Asterix and then it says perhaps you meant other option right so this when you write five time Asterix with the spaces in between them it means that you want to run your Jenkins job every minute now if you want to read more you can read this whole document so you can see in the help window here this Asterix means these five options so the first s tricks here means the minute the second X tricks is for the hour third is for the date of month fourth is the month and fifth is the day of the week right and you will be able to see also some examples here when you scroll down a little so for example if you want to run your Jenkins job every 15 minutes you can use this option for example so I'm going to just copy this and paste it here and now it says would last have run at Saturday at this time and the next time will be 15 minutes after that ok so if you have any confusion you can read this document and you can also use these example in order to run your Jenkins job so to start with we are going to start building our Jenkins job every minute so we are going to just give 5 s tricks here ok and you can once again collapse this helped window when you click on this question mark here once again now let's go to the build environment which is this option so the first option here is delete workspace before build starts so we don't want to delete our workspace so we will not check this option second is use secret text and file we will see this option later third is abort the build if it's stuck we can also use the use it later add timestamp on the console output this we can use it but I'm going to skip this for now because we want to build a very simple Jenkins job and I'm going to skip also the last option so I don't want to check any of the check boxes in the build environment now the next option is the option and here you can just choose which type of weld you want to perform so if you are on Windows you can choose this option which says execute Windows batch command which is the Windows terminal if you are on Mac or Linux you can choose this option which says execute shell which is like executing command on your terminal now what we want to do in this execute shell so let me show you what I want to build here so in my home folder I have a directory called Java sample and in this directory I have a file called hello world dot java and when I open this file I have a simple hello world program written here which only prints hello world right so I want to build this program using Jenkins so to build this program I know that I can use Java C command to compile my Java program so I'm going to just copy the path where this file is located which is in this location which is home my username and this Jenkins sample project and I'm going to just CD to this directory so CD to the Java samples directory now here I can just run Java C command in order to compile my HelloWorld dot Java file right so this is going to compile my code and to run my HelloWorld the program I can just use Java and then hello world which will be the executable file so these three lines what they are going to do first of all we are going to change directory to the Java samples directory and then Java C is going to compile my HelloWorld dot Java file and then Java HelloWorld is going to run my program so after doing this you can just press on save which is going to save your configuration and if you want to change this configuration in future you always go to this option so on the left hand side you will be able to see this option which says configure and when you press on this option this configuration window will open once again where we have done our configuration right and when you click on this option which says Jenkins you will come to the Jenkins home page now in here you will see first of all that there is no build here and the status of this build is shown by this glowing Sun right and our project name is or our Jenkins job name is hello world now we have a configured our Jenkins job to run every minute right so I'm going to click on this Jenkins job for now and you can see even if we haven't started any Jenkins job it has already started my Jenkins job and the status here is a red ball which means my job has failed okay so we will see how so we will see why my job has failed so what I can do here is I can click on this job you can just click on this and you will see this kind of window and it says red here which means failed and when you want to see more about your build status you can always go here which says console output which is going to show what exactly happened and now in the console output you will be able to see what happened while running your job and why your job failed so in here I can see this message so while performing this step which is Java see helloworld.java it says this message so error is error while writing hello world hello world class permission denied and this most probably happens when Jenkins doesn't have permission as a pseudo user on a linear machine most probably on Windows it will run fine but on Linux we need to provide Jenkins the sudo privileges so let's change the sudo privileges so let's go to the hello world and you can see already there are three builds because we have configured to run Jenkins every minute so don't worry about this what we are going to do is we are going to open the terminal to open the terminal I can just go here and just search for the terminal or press ctrl alt T on my Ubuntu operating system and first of all what I need to do here is I need to open a file using a sudo privileges so just write sudo and then /et see for a slash sudo ah ok so I'm going to give you this command in the description also so just write sudo and then any tool which can open and edit your file for me I'm going to use G edit or you can use nano or VI or the best would be sudo VI sudo okay so just write sudo G added /e tc4 / sudoers and then press enter and then give your Ubuntu password or Damian's password and then at the end I'm going to just give a little space here and then at the end I just need to just give Jenkins user all the privileges and I want to just give no password here so that it will not ask for the password okay so just provide this line in your open to operating system in order to provide Jenkins the sudo command privileges right and then just save this and then close this and now I'm going to go to the configure section once again and in here instead of writing Java C something like this I can always give a sudo to compile my program so just write sudo in front of Java see and if you are on Windows most probably you won't be needing this sudo command so just skip this sudo command if you are on Windows right so I'm going to save this once again and I'm going to build my program so this button is going to build your program immediately so it will not wait for the prebiotic trigger to you know build your Jenkins job it'll build your Jenkins job immediately so you can see now our job shows a blue ball this means the last build was successful so let's go inside this build and then go to the console output and you can see now it prints hello world right so once again I'm going to go to my job and you can see previous all the previous jobs have failed because we haven't provided Jenkins the sudo privileges but now you can see this is the periodic bill which has been started and it's successful so in this section you can see that times at which your bill started and what was the status of bill using the color of these balls and when you go on the main page when you click on champions here you will be able to see blue ball here which means that last build was successful and when you see this kind of rainy cloud here and you when you hover over this cloud you will see the status of last five bills so you can see it says build stability three out of last five bills failed right and when I run this build few times once again so when I want to just run this Jenkins job five times so that the last five builds will be successful so you can see four out of five are now successful and now you can see this icon has changed so now the icon is like sunny and little bit cloudy and it says one out of five build have failed right so it shows the last five build and once your last five bills are successful or were successful then you will see the whole Sun here so I'm going to refresh this page and I'm going to go to the build here and let's see if the build has been started or we will start in manually using build Now button and it's going to start the build and you can see last five bills are successful now and when I go to the Jenkins home page you can see this bright Sun here and you can see the message here which says no reason bill failed so here this I can always shows the status of last five build and this will show if your job is in progress or it's already is failing or last build was successful if it's blue now in this table you will also see some other sections here so this is the section where last build occurred so for example eight point nine second ago last build was occurred and this was the build number 14 and last failure was three minutes ago which was in build number nine and by default this status doesn't refresh by itself there is a small option here on the righthand side top and you can click on this which says enable auto refresh and this is going to enable the auto refresh after a few seconds so you will be able to see the most refreshed status here okay so you can see it refreshes after a few seconds and you can see the status last build last success was fortyseven seconds ago and last failure was four minutes 47 seconds ago so this is how you can create your first Jenkins job in the next video we are going to see some other options of running our job remotely or running our job in chained so stay tuned and please rate comment subscribe and bye for now