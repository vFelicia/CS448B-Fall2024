hello guys in this video I'm going to show you what are delegates in cop so uh let's see what is the definition of uh delegates and then we will see us uh declaration and usage of uh delegates so a delegate is a type which holds a method reference in an object okay uh we can also say it is also referred to as a type save function pointer okay so delegate is a type safe function pointer and generally we use delegate to improve the performance of our application because we can use a delegate uh to call methods asynchronously so I will uh demonstrate you how what I mean by those lines but first let's see how we can declare delegates so for that what I'm going to do is I have this class called example one and in this class I will create a public method for example which will be public void or it will return integer for example in and I want to name my method as uh add or yeah add numbers add numbers and this takes two parameters which are obviously two numbers right so this will take two parameters uh first is int number one comma in number two okay and what this uh method does it just Returns the addition of these numbers so return number one plus number two right plus number two this this is a small method and this is there is nothing special in it it just takes two number as a as parameters and it's it adds those two numbers and returns right now I said or by the definition to declare a delegate what are delegate delegate is a type save function pointer so we declare a delegate to point to this function okay so let's see how we can declare delegates first delegates uh we can use delegate or we can declare delegate as a simple function with a keyword delegate so for example I want to create a delegate for this function I will take the signature of this uh method or prototype of this method I will just copy this and paste it here and I just need to include a keyword called delegate here okay so delegate and the number uh name of the delegate uh we will name this delegate as such that it rep represent that it's a delegate of this function so I can say add number Delegate for example okay this is how you declare delegates okay and this function has the same signature to the function you are pointing so for now I'm pointing to this function which returns integer it so our delegate will also return integer and it takes two argument which are ins and my function also take two argument which are in right now delegates are similar to a class in a way we can define an instance of this delegates like in a class we can Define the object of the class you can also Define the object of the delegate okay so let's uh use this delegate sorry this delegate which is add number delegate to our main function so I can create an object of this function like this like I can do it with classes add number delegate D is equal to new add number delegate and it takes two parameters right but for pointing this delegate to this function right now in the definition we are not specifying that this delegate is for this function right but in the construction of this function or as a Constructor of this function we pass the name of the function we point we want to point two in this delegate okay so here we pass a function as a Constructor right and this is showing us error because for example we haven't created the instance of this function to use in here so I will declare this uh method or function function as a static method and then we will be able to use it so I will use it as static and then we can use this otherwise we has to we have to define the instance of this uh example one class and then by using the object of this class we can call this but for now we declare this as a static function so we can use it directly here okay so this is How You Can Make an instance of delegate it uh has the name of the delegate then the object name is equal to new delegate and as a construction or as a Constructor you pass the function name you want to point to okay and now you can just use this Dell object as a instance or object of delegate and call that function so just write Dell Dot Dot and you can just pass those parameters like you uh can pass to a function right so what you can do for example I will declare in int result and this is equal to the addition of two numbers so just write D and this will take two arguments which are two integers right so because we uh have passed this uh add number function as a as a Constructor in the construction of this delegate this delegates knows that it's pointing to this function and this function is taking two parameters or two integers right so I can pass these two integers in here right for example 455 comma 678 okay so you can just uh use delegate like this you need to pass those parameters which the function is taking and it will return the result as uh an integer whatever it's returning and then you can just uh print this and cons do right line and you can just print the answer like this result okay and when I run the program it will run fine and it shows me the addition of these two numbers right so this is how you can declare a delegate and use a delegate to point a function but you can do it like this Al also uh why do we really need this delegate if we can use this function directly you can just use this uh add a number here and you can pass these two numbers instead of doing this you can just uh you can just copy the name of this function and instead of this Dell object you can just use this and it will also give the same result but why we can you we need to use this delegate because because whenever we create some classes uh which has to be you know uh used in a general sense or in a multiple situation delegates are very useful why because in instead of this condition for example you wanted a product of these two numbers and these two numbers uh the argument will be same but for example you want to change the function functionality of the product you cannot change the functionality of the product uh when you use the same function but you can change the functionality of the pro pro functionalities of this uh number or this function when you use delegates because delegates just point to a function so you can point to a multip add or multiply numbers function and this will this delegate will for work fine so in a situation where you need some performance or multiple usage of the function or method you use delegate in the next video I'm actually going to show you how to use uh this delegate in a better way uh using some class and some better example so stay tuned and please RIT comment and subscribe and bye for now