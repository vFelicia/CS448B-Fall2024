hey what's up lace welcome back to our YouTube channel and welcome to this video this is John from programming knowledge and in this video guys we're going to learn how to use C function arguments or parameters inside our function so from the previous tutorial we have learned how to define and declare our function inside our C program and of course we have learned how to use the basic syntax to create a function and implemented a simple function that could add two numbers okay so as I've said guys in this video we're going to focus on the function arguments or function parameters so while calling a function the arguments can be passed to a function in two ways so there there are two ways on how we could pass the parameters or the arguments into the function so the first one will be called by value and the second one is called by reference okay so in callbyvalue way the actual parameter is passed the function and then new memory area created for that particular passed parameters and then it can be used only within that function and the actual parameters cannot be modified in the call by value way of you know passing the the argument into our function while call by reference so instead of copying a variable an address is passed to a function as parameter and then we could use the address operator which is the ampersand symbol I know you're already familiar with this so address operator is used in the parameter of the called function and of course the changes in the function reflect the change of the original values so we could understand this better if we try to implement our function by you know creating a simple project or simple application that could demonstrate the call by value or call by reference so first let's try to create a program that would pass the argument us or it would call by value so the first thing that we're gonna need is of course to it's actually the same with the program or I mean function that we have created from the previous tutorial but the difference is that in this particular video we're going to use parameter or argument so the first variable that we're going to declare here is the answer so the type is int and then we have the variable name num1 so the value is 5 and then in num2 and then the value is 10 okay and of course guys we could declare the function so for example we could create the function right after this closing curly brace of our main function so the first thing of course is the return type and in this case in and then the name of our function which is addition and we could say here int a and int B basically it means that this particular function would accept two parameter int B and int a okay and then in here we could return the value or the total value of this two parameters so a plus B pay and of course guys we could declare the function right here so we could you know add the function declaration here function declaration so you could say here in addition and then this particular function is gonna take two parameters int num1 in so as you can see here guys this is only the function declaration okay and this is the function definition function definition again this is function declaration declaration and function definition so now we could try to call our function by value so for example we can say here answer and then equals addition which is the method or the function that we have created here and then we could pass along the values of num1 and num2 hey so let me explain this first for you so it would be clearer for you so we have here the parameter num1 num2 as I've said in convey value the actual parameters cannot be modified because num1 and num2 is it won't change even if we you know change the parameters here into a and B so the value of num1 and num2 would not change even if we try to modify this int a and b inside our addition function so the actual parameter is passed to a function and then new memory will be created for our parameters e in a and int a int B okay and of course we could display here be a result so printf and then of course the statement the addition or you could say the total of two numbers yes and then the format specifier % B and then the variable answer okay and then you could you know build or application or build and run and it should display the output something like this the total of two numbers is 15 okay so you get the point this is the calling of function by value wait now if we want to try to call the function by reference as I've said we're going to use the ampersand symbol so ampersand symbol or it is the address operator and we're going to use that in our parameter of the code function so let's let's try to implement a function that you know could call by reference and you should see by now how you how the call by reference and call by value is different so the same thing we're going to declare the method here the return type is int and then the name is addition and then it's going to take two parameters with type in pay and then we could also use this in answer and then the same value for example and now guys instead of just using this num1 and num2 we could add the address operator the ampersand symbol or the address operator in seed programming so basically guys were sending or we're passing the address of this particular variable into our function so so whenever we change this value inside our function it's going to reflect the value of our num1 and num2 okay so we have here D and % or address operator and then we call the function right here and then display the answer and of course we need to add the asterisk symbol for this variable here or the argument and then one for the other variable P so this means that it is the operator that is used as a pointer to a variable so it's going to find the address to that particular value of number one or number two so of course we need to add this also here and of course for our variable num weight and then as I said if we want to change the value of num to here and inside our function we could do that and it's going to reflect the changes of this num to end number one worry about eight and of course we could still use the Aster symbol here and let's try to run our program for now so build and run and it's going to answer or it's going to the output this way a total of two numbers is 15 okay so let's try to modify the num1 and num2 right for example inside this four particular function we're going to change the value of our variable a so instead of fine it's going to like maybe six okay so we could do that by using this particular variable argument we could add here the variable a and then we could say six then semicolon semicolon at the end and we could try to display the value of our eight so the value of a and then percent D and it should you know the variable a correspond to the variable right so we could copy and paste this so notice that number one it was the five here okay so let's see what's the output of this so build and run our program so as you can see we have you the the output the total of two numbers is sixteen and the value of a is six but as you can see here a corresponds to the number one right number one so we have here number one was to five and then we change the value of num1 by using the reference of variable a and then we said into six that's why we're getting six here and then the total or addition is six okay so I think that's all there is to it guys for this tutorial and if you have questions please let me know in comment section below and again guys thank you for watching and see you in the next video