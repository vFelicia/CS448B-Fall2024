hello and welcome to programming knowledge so in today's video you'll be learning about how to use matplotlib library to plot different types of graphs so we'll start with the simple plot so I'll be using pichumani for this video series so if you are not installed PyCharm I will be giving the link to the video to show how to install pi jam on your Windows or Mac machine so I will open PyCharm ID using spotlight ok so we'll create a new project we will give on project name as met matplotlib tutorial or toad and we'll select project interpreter so we will select new environment using virtual M you can also select peepin or Wanda but I will select virtual M and you can change the location if you want the base interpreter is Python 3.6 and will click on create it is creating the virtual environment for our project if we use the tip you can see the project structure we have the virtual environment directory so in the bottom you can create on click on terminal tab and it will open the terminal so here we will type beep installs matplotlib and press ENTER so this will download the matplotlib library and we will install on our machine so we'll wait till it get downloaded in the store so while it is downloading let me show you the metro T laboratory and what is the use case object so we'll open a new window of Chrome we will type matplotlib let it load so you can see the matplotlib rarey is a Python twodimensional plot in library which produces quality figures in a variety of formats so you can also use it with Python scripts and also with Jupiter notebook so it is derived from a MATLAB my gem is a multi paradigm numerical computing environment so we can go in examples so here you can see the different are graphs they are provided with extract bar graphs horizontal graph there are n number of graphs here so each one has a demo code with that so if you want you can take a look at it so these are scatter plots we have bar graphs I'll be using our simple plot to show you how to use Matlock clip library let me click on particular you can see the percentages so horizontal bar chart so they have given ask the code also so this code looks little bit advanced so we'll start from the basics and as soon as we learn more about Matt floaties I'll be showing how to use it to produce complex charts so you can also create pie charts you can go through the gallery if you are interest rating this so it is still downloading so it has downloaded and installed so you can see the it is install different packages along with the Metro teeth like numb by six you can see the matplotlib in the end so you can click on our project for body structure and new and click on Python file so we give you the name has met night tooth one will is made up met totally tutorial one so click enter and as you can see it has opened the file and here we can now import the package so we'll use from matplotlib type input pipe lot and we can use alias as dat so I know you want to use a pipe lot we call as vit and the name of the function which we want to use so now we have imported pipe lot package so we'll import our data so here we have a list so I have put as 3 ished sound share with on the list with you it are not PR fine so this contains the ears so I have copied the data from all these particular website cause fiddlestick times so in here you can see the China versus India population from 1950s to limited year like 2100 so I have copied it from 1950s to 2013 so you can see it is from 1950s so China has like 554 millions and 2130 here 1.4 billion in or India has 1.5 billion so I had copied that data and put it in the list in Python so here contains 1952 on 30 so I'll copy this year least into our metric torial 1py in population China so these floating point values are billions so keep in mind I not take on the whole number as a storm scaled it down to the decimal point to so I will use only two population china here so we plot this saw data using PI plot package so we imported decades using ELT dot plot so this is a function so inside this function will pass the xaxis and yaxis values so X is axis would be here comma Y axis will be population of China okay so after this if you have to show it to the screen so you will use PID dots show function to display it on the desktop so when you run this you will see this figure 1 so this is a simple plot so in xaxis you can see the age and in y axis you can see the scale of the population so you can use the pen pen function to pan or you can use the magnifier to magnify and see the executives of the plot and you can use these arrow keys to undo and redo so if you can you want to go back you can use undo if you want to get one step back back you can use redo so I think this is about configuration of subplot so also we can click on this save to save the file as PNG save the plot has PNG format image and you can also use home to bring it back to the original position so we want to add xaxis and yaxis label so we can do that using vit dot X label so this will display the actual label values so we'll pass the string as here and for the Y label will use PRT dot y label in the pan this is will you population in China in billions okay so we make here is I capital you will run now and you can see the label is put up and in xaxis we have here in yaxis Villa population we also add title but first I will change the population you can also add title so for that we will use PID dot title function so inside this you can pass the screen as population of China so let me run up in this program you can see the title has come up as population of China now we will import our another leash that is population of India we copy and paste it in our matplotlib tutorial one fine I think so now it'll pass this population India list to the plot you cannot give an error equal actually print it but you will be not enough good for me so the better option would be to print it separately using parity dot dot pass here as a first argument comma population of India a second argument now we will change the title as population of China versus India now we'll run this so you can see so you cannot figure out which one is what but according to our previous graph you can see that blue is China and orange is so India so you know which one is we what we can use legend function so for that we will use vit dot legend so inside that will pass the values of the particular line as a summation so the first string would be population of China so you could take China , next will be India so good string is India insane and now run so you can see in the upper left corner you know blue for China and orange for India so this is carried out using the function legend so this is little bit term it can create problems in longer run if you are having more than one or two countries like population of Brazil or population of Russia for example so if we have like 10 15 then the orderly mismatch if you are working on lot of countries so for that the better option would be using our attribute in da not function so I remove this I'll copy this China and now in the plot function will give an attribute as label equal to we pass the string at China and will pass India in the second plot as label equal to label equal to not India so what this will do it will do the same thing is what legend was doing using the leashed so instead of passing through legend we are passing it through plot so this is how you create a simple plot in this video I will be showing you how to use different format strings to customize the plot and also I will be showing you how to use different styles provided by the matplotlib library we'll run our current plot so you can see it is containing only the China and India population graph and you can see the India is so arranged in China it's blue color and India is slowly increasing from 1950s to 120 and at 2000 some poo after 2020 it will intersect the China population so you can use a function provided by my Scottie I already called grid so we can type PA t dot grid and if we run a program now we can see that our graph contains agreed now so this is very much easier for us to understand at what time or at what period both the lines of the population will intersect each other so that is around to around 23 and you can also see it would be more than 1.4 billion so at 120 China is ahead of India as per the data data so India is somewhere around one point below one point four and China is around 1.45 something million okay so now I will go in my prototype website and here you can see my prototype lot dot plot so in here if you go down you can see the format string so don't worry about the URL I will give this URL in the description of the video so format string contains first marker and in line and in color so so the other combination will also be working but it parsing of them might be ambiguous that is sometime it might be errorprone so it's better to use the given format string that is marker in the line in the color so so in the markers we can see we have point marker etc and pixel circle so the characters which are provided we can use for the particular markers and also for line style you can see solid line styles this is the default that is only one and four line style we have to provide two dashes so by default solid line style is included by my plotly so we'll go in our plot and now we can add the format string in our plot function so for that million comma and inside the comma we can use you know any neighborhood comma you can give the format string so for that we'll put first line style so that is dashed and now we'll run so here you can see in China's line dotted line it is given as a dashed so that is due to the form in which here we have included so let me close it and for and now we'll go in the website and you can see there are different line styles so we can use and dot for a start line style so for India we'll put one comma in the plot function and inside that will you type in now into invitamos in dot so India is desktop so we'll run now and you can see the India is a plotted in our desk dot line style format and we have one more format so that is a that is so in which dotted lines lines tall is included so we'll make the China is default format it is a solid line and for India we'll make it as so this will print the dotted line so here you can see the China is now solid and for India we have dotted so now we will include the different colors so for that will go in the web site and we'll go down and here you can see in a color step so there are different keywords given for black we can use K for wide you can use W for red we can use R so after the line style you will have the keyword for the color for China will give it as R because as you know as you all know it contains already in the colorful color of the flag and for India we'll go with green that is G keywords so here you can see the red is red line is plotted for China and for India tea screen now will uh make it dashed for India the line style and for China will now include our marker so far they will go and top and you can see different markers we are given given as point marker circle marker so we use circle marker that is a Oh key word so we include oh it's alphabet Oh small alphabet before the lines turn and will run and as you can see the little different data points in the data set of China population is are now populated with the regular dot on the line style and there are other markers also you can try with for India I will use different markers so you can go and see which one you can use okay we'll use star marker so further we have include star keyword so we'll put star it is s tricks and we'll run and as you can see the data points in the data set of India is now plotted with a strict symbol so this is the one way we can use the format string another one is by using the labels or the attributes so we can put comma and we can type marker so mark are equal to which marker we have to talk I use so the key word we have to put in the string format so I'll put in inverted commas the keyboard oh and then the line style we won't include so type line style equal to in the inverted commas include or double for a dashed line and the third one is color so for yep color equals to in the inverted commas include our four four red color so we'll remove the earlier for midstream and same way we now you'll run and as you can see the it produces the same result as earlier and you can see the code is little more readable due to the segregation of the marker line style and color in two different attributes so we'll do the same thing for India for marker we'll put a star keep in mind to include it in the inverted commas because it's a string so for Martha will put star and for line style we'll equals to in the inverted comma will include double dash comma the color will put green that is G and now we will clear the other corner string and now we'll run and as you can see produces the same result as earlier so this how you use the format strings to customize the plot one more thing is there for color we can directly give the values like red green that is the complete string and it will also include that as a valid argument and also you can also include it is hex value so you can get it online easily and now I will copy it paste so other one is particular color I copied from Internet and the second one is for color it is hex value so I will put it for China and now you run and as you can see the colors are slightly different now I would use the shade of red for the China and for India I use it was a bit darker in blue color okay so one more thing I want to add is you can also change the line width so by default it is or I suppose and I'll make it as 4 to make the line little bit thick and falta India we will put it as line width is 3 input a comma save and we'll run it as you can see the China line is a bit thick and for India is little bit thin then the China okay let me remove the language if you are having problems with the screen ratio like padding is not supposed to be really good with the graph you're plotting so you can use a function called tight layup so what this will do is according to your screen resolutions it will make the plot bedding match to the screen resolution so that your plot looks really nice on the screen whichever you are working with so it will not show that much difference but if you have any padding issues you can include the slightly odd function you know I'll show you how to if your different styles or themes so for that we have two we have a attribute so we'll type ELT dot style dot available so this attribute contains all the different styles which might blow trip provides so we'll include it in our print function keep in mind that it is a attribute and not a function PID dot style dot available so now we'll run the program and as you can see in the console glow the list of different styles plot styles are available so here you can see cpawn we have classic we have so let me choose one for demo we'll stop the farm program first now I will show how to use that so type II era T dot style dot use so in this function provide the style value as a string so we start with dark background so this produces a very dark plot with white color edges so let me stop the knot first and then we will run it again you now we'll use a non thorough method another type that is 538 so here you can see the it creates a graph so this looks a little bit more nicer and you can see we have included a grid but it is not showing us let me remove the colors first so let me see what the theme provides okay so team provides these colors so these are very bright and nice as you can see okay so now we'll use another style that is si bon dark grid so let me copy it and we'll paste it in the style string so now we run so this is little bit different as it as you can see it provides us a dark background okay and colors are so different now you can see we have included a grid function but it is not providing us with the grid so for that we have to put we have to include true as a value in the grid functions not as a stream but as a value you so as you can see it creates a grid and displays it along with the style we are using okay so for me the favorites are 538 and another one is GG plot so GG plot was basically derived from arthur amin language so we'll include that and we'll see how it looks and we'll run now and as you can see it is similar to the support dog treat okay and will now close it and as you can see this is how you can use different styles so one more thing I want to show you these are there is one function which is provided by the matplotlib library which creates comics like graphs so for that we have to include PID dot xkcd function so if we run our graph will be displayed in the form of Hendron dot so as you can see it is like little bit different and it looks like tom using hand so this is helpful if you are putting it in formal way or sharing it with your friends okay so I'll clear all the markers and the line styles so now we can run and we can see our default graph with no markers no line styles in the X scale Ceri format so this is how you use the styles and different format strings for plotting the graph so input is usually I'll be showing you how to use subplots to draw more than one plot and also in I will show you how to draw bar charts using the data so let me run the what we had done in the previous video so we're drawn this simple plot which has years from 1950 to 2030 and population in billions in y axis so we had drawn for Indian population and Chinese population so let me show you how to use subplots I will show you how to plot two subplots in the same adjacent Lane so we first remove this xkcd function and let me use some style so we'll use GG plot for this video and you can just comment out the plot function plot function first the subplots are plotted as the way of matrix so if you want to plot three plots so what it does is three into one so that will be in the matrix form that is in the first row it will have three plots and it will have first love or subplot so like that in the matrix format to be like 2 + 1 3 n 3 so these are passed other parameters to the subplot function so let me just show switch the type ELT dot subplot in that we pass our first one grow and will display two subplots two comma first support this like indexing so we'll give the plot function now inside that will pass over here comma population population of China label equal to you know comma color will cue it is orange orange red will you okay so when you plot title it will be support one and our X label valuable will give a chase here and why label will be population millions so same we will type it for subplot 2 in that will pass 1 comma seconds apart comma 2 and we'll type alt dot dot function in let me pass here common population of India comma label equal to India color equal to bring so remember we have to pass the legend function on top also the below the first support and we'll type title so eighty dot title will give it is so plot just copy the X label and my little fun talk see you and will turn so as you can see we've got two subplots and in one we have China and another one is India be here yeah but you can see that one is little bit bigger and one is let me to smaller the grid function this is I think the due to the values which are passed okay so this is how you plot two sub plots sidebyside you can also try with different method like style that is 538 so let me see that how it looks okay so this will this looks really nice so this is 538 style okay so we'll create a new file for bar charts and it's concealed so it is at a target repository and I have a pop unit for subplot we've got the data from our main file to the bar chart it is ear operation China India ending lines begin just directly plot the bar chart using power function in that we'll pass the same year population of India labor equality will pass India comma inertia equal to three so same will copy and paste it here and here the pass population of China and make it a Polish ina and color it create thread so so you feel you now run this file really cared by chart like this our China bar chart is showing perfectly but our green colored india's bar chart is like little bit showcasing this is actually happening because the China is China bar chart is all laying on top of India's Pal chart let me show you so for that we can use our method that is that uses offset to separate out fellows but first what we will do is we'll trim down our data below will only contain values from 2015 2025 now it is done let me comment this out can turn this a bar chart so what if we want to draw a bar chart it's my fusion we cannot see the green one it is overlaid by the on this China's population so for that we have my third Norcom that so for that we have to use something called as waste so by default it is 0.25 is okay and we also have to pass indices variable called indices in that we pass the function from numpy and we taught a range and it should contain the length of our should contain at least so we are not imported numpy it just import it is imported and what we have to do is you have to pass the indices in each and every function apart so the time indices here fully red color because these indices are not properly set up to work with our ears in particular so it is just giving us the index from zero to ten so what we will do is really for first part indices indices wait one second we'll keep it as same and pass with wait so that the function will know that we have changed the first value and also meaning not required for second street below epilation comparison between so if you now okay got an error so if we forgot to remove the here because we are already passing it through the indices so we remove here and we'll also remove and if we say everybody feel run you can say India China comparison but ears are still she showing us indices so funded the work as a function of V dot X ticks so in there to be of the pass ticks s parameter further to the pass our indices variable comma we also pass label equal to the year and if we save any field Ron can see ears are shown here you can see how these increasing and it should be a turnon who was 2022 a 324 India is led near to China in 25 across societies so this is how we plot a path chart a vertical bar chart actually so in today's video I'll be showing you how to plot pie charts using matplotlib library so here we have earlier code is used for bar chart so I'll create a new file new python file so i will give the name is pie chart pie underscore chart so we'll import our code from here so the style and import core will be same so we'll copy and paste it here and the end part that is now not show and product read will copy and paste it here for the pie chart pie chart contains slices so we'll create a list of slices for inside debt we pass some values like 40 and 60 so this makes it makes it at 100% so 40% 60% so we'll put the pie chart using parity dot pie function inside that you passed you passed slices as a parameter now if you don't need you can see the pie chart has drawn on canvas and there are no labels and nothing so we had labels here so type labels eco I do so this is also leashed so inside that pastor strings which you want to show so first is 40 comma 60 so for the particular slices this neighbors will be displayed so these labels we have to pass in the PI function so labor is equal to the name of the variable that is labels and so now if we run we can see along with the spices we have the labels also displayed now we will run without this tile 530 so this is the default pie chart style which matplotlib uses so the color you can see it a little bit different you can also pass parameters such as veg coughs so what veg props does is it will create on the border of this particular color or any parameter you want to pass so will pass each color so this is in the form of dictionary so it is having a key value pair so each color will be Co the color we want to showcase that is white so fear on you can see the wheels dominancy you can see that door edges are now colored as white you can also put another color is black etc if you want so I will show you different parameters it can be passed in the PI function under wedge box so let me take you into the matplotlib documentation so we wedge crops then matplotlib enter okay so here you can see my products is not exist or pi then we have wedge so will go in first link and here there are the different parameters so if you go down you can see the wedge drops property so it can it takes dictionary as a parameter and you can also pass dictionary value as line width and we can set the width of the particular line here some examples are also given so here you can see some slices are outside display so these are used these are displayed using or export parameters I will show it in couple of minutes so will pass line with colon 3 in the veg puffs so here you can see the line width it changed so that edge was there it has now little thick so by default it was one I guess if you zoom in you can see around the circle so that edge is so displayed so this is another page from the documentation where you can see the particular wedge function so the different parameter it takes like edge color we have seen then we have different parameters like line style color so try them out if you want now I'll show you how to add custom colors so we'll create a list of colors and we'll pass like red and then we'll pass green so the 40person slice will be right color and 60% of the green color so let me run this okay it is not run because we have not integrated colors in the PI function so we'll integrate colors in the Pythons now let me edit it now and so colors equal to the name of the variable that is colors so now if you run you can see the 40% is in the red and 60 is in green so this is unwelcome this not only works for the percentage like this but also you can include different values in the slices so I have shown for out of hundred you can include different values so it can be out of n values let me show that quickly so let me make it like 40 60 comma we pass another value such as 30 and then another value 25 now we'll pass colors now we'll pass labels so the 30 will pass as other other one will make it and the next would next one will be other two so if we now save it and run it you can see it has now created four slices sixty forty other one another to close this now let's make it as 80 and then this one we make it's 120 yeah and we add some different colors like blue comma yellow now we will run and now you can see the according to the slices it is allocated so we can also pass these are hexadecimal codes of color so you can pass it as custom colors I just copy that and paste it here now what will make it as we grab some data so these are the populations of seven countries so I have taken it from a website I will show in the end the website so we'll paste it in the slices and the name of the countries so we put it in the labels I provide this data in the github repository so you can see that in the description of this video and also we'll make s color as black and aligned with there's one so now if we run it you can see the edges now change to black color and/or all the different countries are plotted along with their own slices so the largest is China and in India as you can see and then we have United States Indonesia but this doesn't look all that good so if you have if we have like more than five values then you should go with the bar chart and if you have like less than five values then you can go with the pie chart so if you want to highlight a particular slides so you can remove that particular slice little bit outside from the center of the circle so we'll first remove the last two countries from the labels and also remove the two values from the list of slices and what we'll do is we create explore leashed so inside this it takes a float as a float values as parameter so we pass zero or zero percent and 0.14 United States 0.1 using the sense like 10% so if you run it again we will also have to pass that export value into the Phi function we are getting an error because we have included a comma inside the line width so we'll remove that comma just outside okay so we remove this explode from here we paste it in the front so after labels will type export equal to the explode list comma and now if you run it you can you will be able to see that United States this little bit highlight it outside so this is do the Explorer so it is taking 10% off the whole radius you can see it is just a little bit outside but it is that 10% of the actual radius if we make it like 0.5 that will be like 50 percent of the total radius so if you run it again you can see it is it has come out from the center about half of the radius so this is how you can now highlight a particular sliced or remove that particular slice it will be outside and also we'll add titles so reality dot title will i population pie chart and one more thing i have to show you is you can also create a 3d effect so we for that we have to have shadow equal to true so what this will do is it will create a shadow around the slice slices and it will give feeling of a 3d chart you can see it has created a dark shadow around India and also around India Indonesia let me make it X bar equal to zero point two it is twenty percent so it will look a little bit better if you run again you can see it has taken a twenty percent of the total radius so you can change the colors according to your needs so I'll show you one more thing let starting or equal to 90 so what this will do is the slice the particular slice or label we have it is China in the first place in the list that will be starting from ninety degree the pie chart will start from the China the slice so you can see goes to China in India so one more thing is if you want to discern if you want to display percentage in the slices so you can do that using a parameter called Auto percent that is Auto PCT equals it is a format it's particular format that we have to pass in Airstream so that is percent 1.1 F % % so this is a particular format you have to take into consideration so if you run it again you can see you know slices they have displayed percentages at a particular country has so nine point one person is of United States so I'll show you from where I got this country's population so this is a website kilometers so we net we have the population of all the different countries current population so I have scraped the data from here the data for this video is included into the data dot P Y so this I included in the git repository you can just refer it so I will give you the link to the mind keep on github repository in the description of this video so in today's video you'll be learning about stat plots stat plots are also called as area plots so let's get started area plots are pretty much similar to the line thought these parts can be used to track changes over time for two or more related groups let make up one whole category for example let's compile the work done during a day by student so we'll go in our project and we create a new Python file so we'll give our name Python file name is stack underscore plot and then we press ok and we copy some starting code from the stat plot from pie chart actually that is importing the numpy SNP and from Metro click import pie plot SP arity then we will use the Styles 538 and then we copy the plot dot show and read functions or will remove the title for now okay so so let's go in data out py so we have five lists here so we'll copy them in we paste it here okay so we just plot them using pie chart so we had already done in the last video lecture so in the pie function will pass Unleashed so how many least we want to show so we have four so we'll type 1 comma 1 comma 1 comma 1 comma then we close the list and we pass the labels for for the list so first is 8 then second one is sleep okay the second one I actually study then he was dead and we extra inverted comma then we have code and then sleep so I will just remove the comma and how to place the code in front of sleep actually so paste it here we will the comma remove the extra commas now okay so this will plot a normal pie chart so I will show you why I am plotting this so we'll type peyote dot title so in that title you give as pie chart okay make that edge okay we'll run this so for that right click and step pots okay so the normal pie chart will give you four quarters we study eat sleep in code but this is like so what if you want to show data for five days in the continuous manner so we can show that actually using pie chart so for that we'll use this stat plot particularly so here you can see for a particular day one a particular student we have one hour of 18 and eight hours of studying six hours of coding 9 hours of sleep so like that we have five consecutive days so we can see second day here's three three hours of eating five hours of study code for eight hours in sleep for eight hours like that so what we will do will remove the PI function so we type parity dot stat plot will open the and this is so inside that we pass our list so firstly is to be one to show is days actually so you can see the data in the eight we have actually our data is increasing in steady east and you see so what will you do will pass first days as a parameter to state plot so this is a list then we pass eight then we'll pass study then code and then sleep okay so that is enough and we change the title as stat plot state plot and now we rightly can we'll run the file so if you run it now to load you can see that it is showing us the data for five consecutive days on xaxis we have days and on y axis we have hours so you can see we have not even the labels actually so we are not finding which one is what so you can see the we will just close it and we will just put the labels now so you create a list for labels so type labels equal to so we open the square brackets and we pass the string first level is 8 for our first reached then vs sleep not sleep actually we have study then third one is code and then the fourth one is so we passed these labels in the stat plot as parameter so labels equal to labels that is our least and he feel run it now so before running we type PLT dot legend so this is very much important so what this will do this will print the labels on the screen so that we can find it as which color is put in pertaining to which particular label so you can see blue is four eight then orange is for study and on yaxis you can see the Owls and XS is vo days so we have then blue color we have this 8 which is actually decreasing middle four third day it was like four or five hours and then the story you can see it is a increasing in order and the code is actually decreasing in the V reach the 50 and the student is actually getting more sleep by the end of the fifth day so you can find it ok so our series we can change the location of the stack plot legend so we'll type in the legend LOC equal to where we want to show that so we'll type upper left so upper space left so this is string that we have to pass in a location LOC variable the legend function so you can see the location of the legend is changed now and it is at upper left corner okay so now what we will do is we will create one more list for colors here you can pass hex code also that is a decimal codes and also the short form or short characters so we have em for magenta C for CN for red and Kay for black yes I already showed you in my little videos you can refer them so we'll pass that list as colors equal to colors in the stat plot function so we will remove the extra spaces white spaces and we run it again we will run it again we will also put tightly out just in case for nice padding so PLT dot tightly out okay so now we will write it here and we will run it again so here you can see our chick colors are chained and it looks really nice now really vibrant okay so magenta is the 8 18 hours see on is there study hours orange orange or kind of fred is coding hours and we have black for sleeping hours but we can see our legend is little bit off the grid with getting outside so we can fix that so what we have to do is in our legend for LOC variable will remove that string and instead of that will pass so tuples so how you create a tuples we have to judge to open and close the pants this an inside debt we have to pass the x and y coordinates or percentage by which you want to shift the legend so we pass so 0.06 that is not actually 6 percent that is 0.06 percent and also that it is from left and from the bottom we will pass 0.06 percent so now save it run it again so you can see our legend is now shifted towards the little bit inside of the area plot and you can see it is nicely put so very see how this is how you can customize your stack so this is just one example you can do more kind of this using step loads you can actually create stacked step plots those are actually sit on top of another so as usual I will provide this Python file in my github link in the description of the video so in today's video I will be showing you how to use macro library to plot an Instagram okay so here we will create a new file new python file and we'll type histogram and press enter okay so our file is open so first will input the might correlate library so import matplotlib dot PI plot SP editing so you are importing plot function from metric library okay so now we will open our it up on the top file so in here I have a list which contains blood sugar levels of patience so this is a string which contains data okay and so diabetic blood sugar levels range I will show you so if the range is from 80 to 100 then the person is a non normal person and he doesn't have a diabetic and if it is from 100 to 125 then that person is pre diabetic patient of diabetics and if he has about 125 blood sugar level then he is a diabetic person so we'll plot the histogram using the above chart above let me comment this first so you know this PLT dot yeast like a cystogram function and open curly parenthesis open and close parentheses so inside need with inside that will pass our list that is a blood sugar okay so we run this particular file mr. brown dot py r actually can run looking you forward to add a show function in order to show the histogram on screen so we type prit dot show no point curly open and close and this is stopped and we'll run it again let me check okay so now we can see our resto gram is loaded so by default you can see it is taking the scale from 80 to 150 because that is the highest number of value 150 be here from less than 80 to 150 and there is the number of people in yaxis so my proudly implicitly has plotted or ten number of beans so beans is actually the number of bars in particular histogram you can say that and now we customize the bins so we'll type beans equal to you we have three categories so we will type in sequel to three and we will pass that beans into the histogram function we type of beans equal to the variable beans and if we run it again we can see that we are presented with only three bins and you can also categorize them using a parameter called edge color we have already used in other graphs so edge color equal to will pass the string is theme of the color we want to place like we can pass G for green so here you can see like we can't see it clearly so we'll make it R for red and we'll run it again so here you can see our beans are surrounded by our edge color of red so that we can easily distinguish between these beans there is one more thing ammeter which you can use so I'll show you that so let me remove the edge color first okay so we'll type our width equal to zero point type eight so R which is actually relative width that is relative to the beam we are targeting so that term it will provide a gap between two bins let me make it explicit so we'll type in sequel to and Unleashed so inside a list we will pass a T comma 100 comma 125 so these are the three categories and the fourth value will be the highest number of category values so we'll pass as 150 so we passed at least into the beans equal to the name of the list that is bins so as you can see now it is recognizing the values we have passed in the bins parameter or bins leashed so it is starting from 82 till less than 150 so this is how you can customize the beans to have a particular raw category and also you can play around with the are good so we'll make it as 0.95 so that you can see that now the width between the two bins are is decrease so one means there will be no gap in between the two bins so you can also pass color parameter so color equal to you can pass G or we can pass green inside of a go string so if we run now our beans color it changed to green you can see and I can I would also show you how to make the beans as hollow so we'll type hitched type equal to step and the step is a string so we enclose it into the single inverted commas and you can see our beans are now Hollow so I will remove them and show you again by really running the program and if you see now you can see that those bins are filled with color and we provide the hitch type a step then it will be Hollow and it will look like steps so that is they did have a kid customized okay now we'll open our data file and I'll pass two strings on to list actually so one is for blood sugar of man and another one is for blood sugar when so this is to static data the least so we'll copy and paste it here and now we'll pass those two lists into our hitch from our histogram function so we'll type that sugar man woman and man okay so instead of directly passing it here we make it as a list and pass it here so let me cut this both of this list from the sugar function okay then we will create a separate variable coil type and inside that we will create a lift and in the camping list we'll pass our both the lists so now if you type type in the extra gram function so it takes both the lift into the histogram function and also will pass colors equal to a list inside that will pass G in anybody comas and our green and red for the colors of the list you know it pass color equal two colors image to our function so if we run it again we can see that the green and red color beans are displayed on the screen but we are not knowing which one is man and which one is a woman so for that we will pass the tangent function and legend function and also the title so we pass PLT tour title and inside that will put the string as a blood sugar levels chart maybe and also we will put labels so we'll go on top and after colors we type label equal to that will pass an interest and in emptiness to the type the string which won't launch so we'll type man and woman so let me enclosing team to the inverted commas okay so now we pass this table into the histogram function by invoking the label equal to label variable okay so if we now turn duck in now before that we have to type the legend function so pH dot legend so you can see the green one is men and red one is women but we forgot to add X&Y labels so we'll get that in a minute so you can see why we have number of people in the XV oh gosh sugar range so we after beans we type of PID Tom X label for labels to blister on xaxis so it is a function inside that will pass a string so we'll type blood sugar range and for y label we'll type PLT or why label and inside that we'll pass a string as number of patients total number of patients and if we turn it again we can see the x and y labels as total number of patients and the blood sugar range on the x axis and y axis respectively so we'll close this so using the h2 Brown you can compare the values so you can see for normal six men are there and in periodic diabetics we have very less number that is two and as compared to the diabetic people normal people are more and women's the more people are more and diabetic diabetic woman's are less so this is how we can compare and analyze the data using the oyster gram so in the future I will show you how to utilize the finance library to display the histogram in a very efficient manner so that's all guys thank you for watching before that I will also show you how to change orientations for that we will type orientation equal to in the it is a string so we'll type WH comma and we'll pass horizontal so this we have to pass English program function okay so if we run it again you can see the x and y axis so total number of patients is now on yaxis and blood sugar in the range is on xaxis so this is how you can change the orientation of this program so thank you guys for watching and I will see you in the next video