hello everyone welcome to new tutorial on ruby so today we are going to start some with some conditions and operators so let's start with a tutorial so basically we are going to create two variables a is equal to 100 b is equal to 50 and now we are going to define put s a plus b okay the we are going to i'm going to repeat these four statements so this is put as a plus b this is put as a minus b this is put as a by b and this is put as a multiplied by b and the last one is going to put s a modulo b so let's run this file ruby conditions and operators or rb so we get all the result the addition takes it to 150 minus takes a 50 a by b 2 and this is 5 000 and this is model this is zero so this is fine okay and now let's start with some conditions some basic condition so so let's take with uh so let's create a variable and try to give this a value true and false and let's put sc okay so let's remove this yeah so this is false okay uh let's change this to or operator and let's run this file again okay clear now this is true so you must be clear with all the conditions like how this and operator works and our operators work so this is fine go now and now what we can do we can like this is perfectly these are some basic conditions now let's create some if conditions so for if conditions let's create a a a grade uh we'll give this a value if grade greater than equal to 90 then put s a plus else uh this else in so else if so please and make a note of this e l s i f else if grade is less than equal to 89 okay no no we will do this is greater than equal to 80 and okay and grade less than equal to 89 so this is it lies in this range so we do put s b or we can assign it a else else put s b plus l uh and then we need to end this if condition so i'll just make a like these are three conditions if else else so we will give values to it and see how this condition was let's give the grade equal to 99 uh so okay it's a small stick okay yeah i like this looks looks very intuitive to python so you don't need a semicolon a colon here okay so let's run this and here we are about it a plus now let's give it a 85 let's give it a value 85 now let's run this now it is a and now let's give it a value 75 and it should move to the else part okay now let's run this and it is b plus so this is how we make conditions now let's move to the like while loop so for that we can define a variable a zero so while i less than equal to 10 okay so simply put s i and make sure you increment the i else it is in an infinite loop okay and now let's run this okay yeah so you need to end this loop here okay so i was going with some speed so yeah so this is how a while loop works okay now uh you can also work with for loop so there are two ways to work on a for loop so before we work on for loop i would like to show you the case statement okay the case statement is very much similar okay so okay what i'll do first i'll move with the like for loop so because i did the value first so uh then i'll move to case statement in ruby okay so basically case statement in the ruby are similar to switch statements okay so let's move to okay before we move i'll do word and print there is i'll show you one a range operator range operators is denoted by double dots and there is a small difference with one dot two dot three dots like there is a difference between i'll show you how see when i do put s put s range of 100 okay okay so i'll show you okay now i'll show you so yeah so i just forgot to lick this is to underscore array so it says i'll convert this range 100 to an array and here you see i have two dots okay so in these two dots here you can see this one two and i'll show you a small like i i'll show you small one yeah i know it's fine i'll do this now here you can see the value is from 1 to 10 increases of inclusive of 10 the 10 is here when i put an extra dot here the 10 will not be included see so here you can see the last value has been excluded so it is because of the like extra dot so this is how it works okay so like this is for you can use this to work in like a for loop so for i in 1 to 2 10 okay and you can do put s i okay so let's clear this okay you need to end this for loop like i uh forgot to do that and this is how a for loop works with the full range okay now let's move to case statement in ruby so so what you can do the very first example the one with for which we made the grade we'll do this with the grid okay so we will take a variable grade and this time we are going to define case grade and uh i'll first try i'll automatically end this before i forget this so case grade now what i'm going to do uh when when uh so k is great and when when this crate is less than is greater than equal to 90 then i put s a play a plus okay when this grade how great is greater than equal to 80 and grade less than equal to 89 put s a when grade uh when grade uh then you can have a default statement uh but i'll show you one when grade is greater than equal to 70 and and great less than equal to 79 then you can do put s put s b else uh something like else put s improve something like this uh now i'll put some great value 95 and i'll try to run this and so okay i made a mistake then i'm putting a colon here sorry so this is okay when like this didn't hit the like something is missing key is good one good okay let me check what's the issue with this hey hey everyone uh welcome back uh that time i made a mistake the mistake was like uh like uh like the mistaken distance i opted to use case grade here so i used to just define the variable so uh earlier i was also like instead of this i was also comparing the value grade greater than equal to 90. this was not needed because i had already used case grade so this is not needed to repeat the same here okay so let's uh like let's uh so let's remove this now the perfect like syntax for grid statement is this now let's run this now for 95 it rewards a plus let's do this to 85 for 85 it will reward a and 475 it will reward b and like let's take another value 55 it should prove to move to improve statement that is else so thank you for watching this tutorial tutorial i'll catch you in the next video thank you