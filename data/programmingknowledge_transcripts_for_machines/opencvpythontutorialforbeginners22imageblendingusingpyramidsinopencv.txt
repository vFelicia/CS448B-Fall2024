hey guys welcome to the next video on open CV tutorial for beginners using Python in the last video we have seen what our image pyramids and I have told you there are two kinds of image pyramids in open CV one is called the Gaussian pyramid and the other is called the laplacian pyramid and we have seen in the last video how we can create the gaussian pyramid and the laplacian pyramid now in the last video I have also told you some applications of image pyramids and one of the application of image pyramids is the image blending so let me show you one example so here in this code I have two images one is of Apple and other is of orange and I want to blend or merge these two images so let me just run this code first of all so you can see there are two images first is of Apple and other is of orange and I have also printed the shape of these two images so you can see the shape is similar 512x512 and orange image shape is also 512x512 so here what I want to do is I want to blend half of the orange to half of the Apple so let's say I want to just blend right hand side of this orange to the left hand half of this Apple so how can I achieve this now you might say that I can just cut these two images into half and then I can stack these two images sidebyside and I will get the half and half of the two images and that's how I can just get the result so let's first of all try this technique first of all we are going to just create the halfandhalf of the apple and orange images and we are going to just stack these images sidebyside so let's say I'm going to create the variable called Apple underscore orange and then here there is a method in numpy so I'm going to just say numpy dot H stack so there is this method called H stack and here what I can do is in the form of tuple I can provide the half of my Apple image so Apple is the image variable name and then what I'm going to do is the half of this image because this image is 512 by 512 so I'm going to just give this kind of expression comma and then colon 256 which is the half of the Apple image on the left hand side right and then I'm going to just do the same with the orange image so I'm going to just take orange and then colon comma 256 so one thing to observe here is I have taken before 256 in the Apple image and I have taken after 256 in the orange image and then I'm going to just show this apple orange image and let's see what result we get when we run our code so these two are the apple and orange image and this is the result of adding the two halves of the orange and the Apple image but still you can see this line which is clearly visible and from this line you can say half of this is orange and half of this is an apple so in image blending what we need to do is we need to blend this line also so the orange and the apple image should be merged or blended in a perfect way so for blending this half Apple and half orange image what we can do is we can use the image pyramid techniques to blend these two images now in order to blend two images using image pyramids technique we need to follow five steps the first step is to load two images in our case these images are of Apple and orange which we are already doing so first step is to load these two images the second step is to find out the Gaussian pyramid of our Apple and orange image the third step will be from these Gaussian pyramids find out the laplacian pyramids okay so we will find out the Gaussian pyramid in the second step and then in the third step we are going to find out the laplacian pyramids now in the fourth step we are going to join the left half of the Apple and the right half of the orange in each levels of laplacian pyramid and finally in the fifth step what we are going to do is we are going to just join these image pyramids and reconstruct the original image so let's follow these steps one by one and let's see what result we get so as I said first step is already done which is just loading these two images and the second step would be to find out the Gaussian pyramid so let me just just write this step generate Gaussian pyramid for Apple first of all and then we are going to find out the Gaussian pyramid of the orange so first of all what I'm going to do is I'm going to just copy the Apple image so I'm going to just say Apple underscore copy is equal to apple.com there is a method called copy which you can use to copy the this image so from this copy what we are going to do is we are going to generate the Gaussian pyramid so I'm going to once again name my variable as GP let's say underscore Apple and then we are going to just pass our image which we have copied in the form of list so I'm going to just say Apple copy here so these steps we have already seen in the last video how to create the Gaussian pyramid and the laplacian pyramid of an image so I'm not going to explain this in detail if you want the detailed explanation you can see the last video next what I'm going to do is I'm going to create a for loop and I'm going to just say for I in our range so I'm going to use the range function and we are going to use the six levels in this example so I'm going to provide the range up to six and then what we are going to do is we are going to just say Apple copy or you might have named this variable as Apple layer also because we are just creating multiple layer of the Apple image for the Gaussian pyramid right and then we are going to use the CV 2 dot pareddown method to create the Gaussian pyramid ok this we have already seen in the last video and now as an argument we are going to pass our Apple copy variable here and in the next step what we are going to do is we are going to just append to our GP underscore Apple variable which is our Gaussian pyramid for the Apple image and then we are going to just append this Apple copy after we have applied pareddown method on the same image so this is just giving us multiple layer of the Apple image right the method we are going to apply for the orange also so I'm going to just copy this code and then we I'm going to just paste this code once again and this time this will be for orange and I'm going to just say this is the orange copy and we are going to copy from the orange image and then we are going to just generate the Gaussian pyramid for the orange image and this will be passed here and also here and also here and also here and this Gaussian pyramid orange will be passed here okay so we have generated the Gaussian pyramid for the apple and the orange now we are going to generate the laplacian pyramid for apple and oranges so this also we have seen in the last video so I'm going to just comment generate laplacian pyramid for apple first of all and to find out the laplacian pyramid for the apple what we are going to do is we are going to once again take our Apple copy and then using our Gaussian pyramid so let's take cos in pyramid for the Apple and we are going to use the fifth element of this list so what we have learnt in the last video how we can find out the laplacian pyramid a level in the laplacian pyramid is formed by the difference between the level in the gaussian pyramid and extended version of its upper level in the gaussian pyramid so this difference we are going to find out in this step so I'm going to just say this is L P for the Apple which stands for laplacian pyramid for the Apple is equal to in the list we are going to just pass the Apple copy and then we are going to use the for loop so for I in the so we are going to take the range and in the last video I have shown you how to take the range for the Laplace in pyramid so we want to go from five until zero in the steps of minus one and then in the next step we are going to create the Gaussian extended variables Gaussian extended is equal to C v2 dot pair up this time we are going to use the pair up method and then we are going to pass our GP Apple which is Gaussian pyramid for Apple and then the index here will be I in the next step we are going to create the laplacian variables is equal to c v2 dot subtract so there is a method in c v2 which is called subtract and then we are going to take our Gaussian pyramid for the Apple so GP Apple and the index here will be I minus 1 and the second argument for this subtract method will be our Gaussian extended variable so we are going to just pass this Gaussian extended variable and in the next step we are going to just append to our laplacian pyramid for the Apple so LP underscore Apple dot append and we are going to just append this laplacian variable to the laplacian pyramid for the apple same we will do for the orange image also so we are going to generate the laplacian pyramid for the orange orange here and this will be the copy of the orange copy here and here also and then this will be the GP orange right this also will be GP Orange this also will be GP Orange and here instead of LP apple we are going to just say L the orange and then we are going to just pass this variable here also so now we have finished three steps one is to load both the images second is to find out or generate the Gaussian pyramid and the third step is to generate the laplacian pyramid for both the images now the fourth step is to just join the half of for these two images so what I'm going to do is now I'm going to just create one more variable which will be Apple underscore orange underscore let's say pyramid is equal to and also we are going to create a variable called N and we are going to see later how to use this variable and then we are going to use the for loop and then we are going to create two variables one for the first image so I'm going to just say apple and then lap comma orange lap okay so these two are variables I'm creating just same as this I in this for loop in zip so there is a method a zip which we can use to zip the laplacian pyramid one which is for the Apple and for the orange also so I'm going to just say LP for Apple comma LP for the orange and inside this for loop first of all we are going to just increment the value of n by one each time so n plus equals one and in this next step we are going to find out the shape of the apple image so the apple image shape gives us three values first is columns so I'm going to just say CEO LS for columns then rows and then the third value is the number of channels and then we are going to just say laughs dot shape in the next step we are going to just create a variable called laplacian and we are going to just join the two halves of these two images which we are getting inside the variable apple lap and Orange lap so we are basically doing this step after applying the Gaussian pyramid and the laplacian pyramid on both the images so NP dot h stake method we are going to apply in this step so I'm going to just write and P dot H stack and then as an argument what we are going to do is we in the form of tupple first of all we are going to take our Apple lamp variable which is this one and in the square bracket we are going to just write comma zero comma int so we are going to just type cast the number of columns in the apple shape so this we got from the shape of the Apple index and then divided by two so we are going to just dividing the columns into half and same we will do for the orange lap so we are going to just say orange lap in the square bracket colon comma int and then once again in the parenthesis we are going to just say calls for the number of columns divided by two and then as we have done in this step also and at last we are going to just append this laplacian variable to this list which we have created so Apple underscore orange underscore pyramid dot append and then we are going to pass the laplacian variable here now the last and the final step is to reconstruct our image so let's reconstruct our image so now what we are going to do is we are going to once again create a variable called apple orange underscore reconstruct is equal to this will be the first index of our apple orange pyramid so I'm going to just say apple orange underscore pyramid and this will be the 0th index and once again we are going to use the for loop so for I in the range so we are going to go from 1 until 6 and the default step is of 1 so we don't need to give the 3rd argument and inside the for loop we are going to just take this variable once again and then we are going to apply the pair up method on this so CB 2 dot pair up and as an argument we are going to pass the same variable so we are going to just apply the pair up on this apple orange reconstruct from the 0th index of the pyramid up to the 6th level and the last step will be to add all the layers so apple orange reconstructed once again or risk constructor is equal to CB 2 dot add so this is also one method which is called add and here we are adding apple orange pyramid and the reconstructed app Lorenz image ok so this is this variable which we got by just adding the left and right halves of each level and then we are just reconstructing this image using the pair up method and thus just adding the pyramid level so there should be I think the index I right we cannot just add the list to the image directly ok so this will be at each layer we are just reconstructing and adding it to the image which we got by just the addition of this half of the image now in the end let's try to just load this reconstructed apple orange image in the I am show window and let's hope it works I haven't checked it yet so I'm not sure it will work or not and you can see it's working in the first go so that's a good thing so you can see the difference so this result we got by just stacking this apple and orange image sidebyside but this line is clearly visible but when we applied the Gaussian pyramid and the laplacian pyramid technique for blending the images then you can see this line is perfectly blended and this line is not any more visible so this is the perfect blending of the orange and the apple image so this is how you can use the laplacian and gaussian pyramids to reconstruct and blend two images together and the result is in front of you so you can see how it can blend two images so perfectly so this is how you can blend images using image pyramid technique I hope you have enjoyed this video and I'm going to see you in the next video