hey guys welcome to the next video on open CV ttold so beginners using Python in this video we will talk about track bars in open CV our track bars are really useful whenever you want to change some value in your image dynamically at runtime so let's see how we can use track bars in open CV now to start with I have this simple code which you might know what it does so first of all I have imported CV to as a CV and then I'm creating an image using the numpy zeros array with these dimensions and then I'm creating our named window with the name image so this might seem new to you because I haven't created a named window in the previous video so the named window you can use to create a window with a name and this time we have given the named window name as image now in this while loop we are just using this I am show method to call this window and then loading this image inside this named window now you might already know what this code does it just wait for the key and if the key is escape key then we will break out of this loop and in the last we are just destroying all the windows which we have created now in order to create a drag bar you just need to use CV and then call a method called create track bar now the first argument here you need to give is the track bar name because you can create multiple track bars in your image window that's why you need to provide a name which is unique to this track bar so I'm going to just give the name to my track bar as B because what I want to do is I want to change the BG our values of the image using the track bar so the first track bar will change the B channel values that's why this first argument is the track bar name which is B and the second argument here we will give is the name of the window so that one that is why we have created this named window so that we can provide the name of the window which is image in this case and that is how we know that in which window we need to add at the track bar so in the image window which is this one we want to add the B track bar now the third argument here will be the value which is the initial value at which your track bar is set and the next value here will be the count which is the final value you want to set for your track bar now there is this last thing which we want to set here and this is the callback function which will be called whenever your track bar values changes so here for example I'm going to create a callback function called nothing and this callback function definition or signature I'm going to create here so we can just create callback function with a name nothing and this function can take this value X and this is the value of the current position of your track bar so we will see what it does little bit later and what we are going to do is we are going to just print the value of X so we will know the current position if this track bar is changed so this is the callback function which will be called whenever your track bar value changes same we will do with the other track bar so we will create the three track bars in the same do with the name bee and the next track bar name will be the G and the last track bar name will be R okay so this will be capital R so now let's run this code and let's see what happens when we run this code so I'm going to right click and run this script and you can see here inside this named window with the name image we have this black image which we have created using numpy zeroes array and now we have three track bars here with BG our names so these track bar values you can change using this scroller and as you can see here let me show you in this terminal whenever you change the value of any bar the corresponding value will be shown here using this callback function and inside this callback function we have the print statement okay so as I said whenever you change this value this callback function is called and it will print the value of the current track bar okay so for this functionality what we want to do is we want to get the current position of the track bar and because we can change the value of BG are channels from 0 to 255 that's why I have given the range between 0 to 255 to the track bars also so that you can change these BGR channel values so now in order to get the current value of your track bar first of all we will just check the value of the B track bar so we will just use CV dot get track bar position which is this method get track bar POS and then we just need to give the name of our track bar so let's say we want to check the position of track bar be then we will just say we want to have this track bar position with the name B and the second argument here will be the name of your window so in which window this track bar is present so the our track bar is present inside the image window right so same we will do for the G and R values also now we have the values of B G our channels from the track bar so now we want to set these values to our image so what we can do here is we can just write for example I am G inside these square brackets you can just give this kind of notation and then give that BG our channel values I'm going to just write B comma G comma R that means we want to set the current B G R values to this image so let's run this code and let's see what happens now so I'm going to run this code and now when I change the blue channel values you can see this image becomes blue colored right let's bring it to zero once again and now let's change the value of G so you can see this image color is changing to green and then we can try changing the red color and you can see when it goes to 255 the color of the image is red you can change the values of different track bars and the corresponding color will be displayed in this window here right so you can see the color is changing you can change any track bar here one more example I want to give here is how to add a switch using our track bar so for that I'm going to use one variable called switch and then here I can add first of all the name of the switch and in the next line we will once again called CB to dot create track bar with the name switch okay so now the name of our track bar will be switch so now we have added one more track bar to our named window and now here we will get the current position of this switch track bar so I'm going to name it as s and the name of the window is switched so we will just give the first argument of this get tribe our position as switch okay and the window name is image itself so now we can add some condition here so let's say if this position of the switch which we have if this position is equal to zero because we only have zero and one in this last track bar so if this position is equal to zero what we want to do is we want to set I am G and then in the square bracket this colon and we don't want to change any value so we will say that I am G this square bracket colon is equal to zero which means that we don't want to do anything or in the other condition which is when your track bar is at position one then only we want to change the BG our channel of the image okay so let's run this code and let's see what happens so I'm going to run this code and now you can see the position of this track bar switch is zero and when I change it to one so let's change this position to one you can see the value to one and when this position is at zero you can change anything here any track bar nothing happens because this condition is matte which means that we don't want to do anything as soon as we change the switch to one that means we want to change the BG our values you can see this color is changed inside the image so the zero is just like off switch so we don't want to change any color and one is like on switch so when it's one the value of RB G channels can be changed now I want to give one more example of track bar to use so that's why I have created one more file which is PI Python OpenCV track bar example 2 and this time I'm going to use just two track bars here so that's why I'm going to delete some of the code here so using the first track bar let's say I want to just change some values inside our image and I want to print that value on that image so let's say now our range is between 10 to 400 ok so the lower range is 10 and the upper range is 400 and using this track bar I want to print the current value on our image and also I want to have a switch which I can toggle and I want to change the color of the image from the colored value or colored image to the grayscale image so now our switch is between color to the grayscale image now in here what we want to do is we want to just assign this I am show value to the image variable itself and then we want to get the current position of the track bar so we will use this method to get the current position of the track bar and I'm going to name this current position as POS variable and the name of this track bar let's change this name to something else let's say CP for current position and also here CP for the current position and the name of the named window is image itself so we are not changing it so now we have the current position so first of all we will just create the font and then we will just use the CV dot put text method you already know what this method does it just print the text on your image and then we will provide the parameters first argument is the image the second argument is the value which we get from the track bar so this is the position and because it's a number we need to convert it to the string using STR method and then the position at which you want to show this text so let's say it's 50 comma 150 and then next is the font so I'm going to just give the font and then the next value is the font scale which is 4 and the next value is 4 the color of the text so let's say the color here will be 0 comma 0 comma 255 and this should be C V dot 2 font Hershey complex let's change this font also let's say this is just the simplex font okay so this code is going to just print the color current position of the track bar on your image and then inside this condition what we want to do is we want to get the switch value so let's use this as variable and then get the current position of the switch using this switch name from the image window and then if the switch is at zero position then we want to do nothing so we will just pass the situation and in case the value of this switch is 1 then what we want to do is we want to change the image value from color to the grayscale value right so you can just write C V dot C V T color and the first argument is the image which we are loading and the second argument is CV dot color BGR to gray which is to convert this colored image to grayscale image but you can see here we are just creating a black colored image and in our project we also have this image so let's read this image so I'm going to just write a CV dot I am read and then give the name of the image which is Lenna dot jpg so this is our colored image and this way we will be able to see the change of color to greyscale image in a better way so let's run this code and let's see what happens and you can see image appears and disappears and there is an error so let's see what is the error so the error here is coming from this line so we need to read this image inside the while loop ok so this is why our error is coming and at the last we want to load this image after this if condition okay so now let's run this code once again and you can see this value is printed on our image which is 10 which is the value of CP and if we change this value it is changing on our image also right and once we change this 0 to 1 then our image is converted from colored image to the grayscale image you can also change the font size here for example let's say it's 6 here and the thickness also if you want to change you can change it using this parameter let's say it's 10 and let's run this code once again you can see the thickness and the size of the font is changed and you can see this value in a better way ok so this is how you can use track bars in OpenCV I hope you enjoyed this video and I will see you in the next video you