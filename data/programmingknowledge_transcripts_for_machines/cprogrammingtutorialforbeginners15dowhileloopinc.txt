hey what's going on guys welcome back to our YouTube channel this is John from programming knowledge and in this video guys we're going to discuss another type of loop which is the dowhile so from the previous tutorial we already have discussed the while loop okay and then we implemented a simple iteration program where we can see the value of the variable each of the iteration of our while loop now the difference between while loop and dowhile is that the while loop will try to evaluate first the condition and then if this condition is you know to return true then it will execute the statement inside this particular while loop whereas when we are trying to use the dowhile loop then the statements inside the loop will you know execute at least once before the condition is being evaluated so the syntax for that is like this we will just remove this for now on this lines of the window from the previous tutorial okay so this is the format or basic format of the dowhile statement or dowhile loop in C so basically we have the do keyword and then opening closed curly braces and then the statements or group of statements okay now after the curly braces then it will have this the yn keyword and then open and close parentheses with the condition inside it so as I've said earlier guys that this particular loop will try to execute at least once before the condition is being evaluated okay so as you can see if you wanna like execute first some statements before you can evaluate the condition so so the Doyle loop is the way to go so we will try to create another program guys showcasing how this particular dowhile statement or do I know looks like how it works so basically guess we could initialize some variables in so for example the N so int N equals 1 and then we can also declare another variable which is x so basically what we are doing here or what we are declaring here is two variables for our dowhile and the n represents the number I mean the value of the ith on or the value of the variable each iteration and then of course the x is the number of times the loop should execute okay now inside our dowhile or do statement we could add a printf statement here and then could say see dowhile loops and then the format specifier percent d backslash end and of course the end variable ok so we have this printf statement so basically what what we're trying here is we're trying to display the value of n every you know execution of this particular statements okay and in here below the spin of statement we could increment the n by you know using this statement and it was n plus 1 or you could simply use the n plus plus version of this particular statement so N equals n plus 1 so again every iteration we would try to increment the value of or n plus 1 and then inside here the while and then open close parenthesis we could add the condition so for condition you can add the end and then less than or equal to the number of times we want this wine or dowhile to be you know executed fake so I think that's all for this new wine statement so we could try to run our program and then build and run and see how this particular program works okay so basically guys I will try to explain it to you how this or how we cut this output so from the initial value of our n we have executed the do statement right here so we printed out like the value SC dowhile loops 10% t and then the value of our n is 1 okay so after this iteration we increment the value of our n by 1 so that's n equals n plus 2 okay or I mean 1 and plus 1 semicolon and then of course we will try to evaluate this in our condition so 2 is less than or equal to x which is 5 so of course 2 is less than 5 so that makes sense and then it will try to execute the statements inside the dense curly braces okay then printf see dowhile loops and then of course it will try to output the value 2 okay after this the N will be incremented again by 1 so N equals n plus 1 so the value now or the n value now becomes 3 and then evaluate it in our open and close parenthesis so 3 less than or equal to 5 so obviously 3 is less than 5 so it will try to implement or execute again the statement inside alternative basis and then display 3 this will be the line 3 and then of course it will increment again the value N and it the n becomes 4 now and then evaluated once again is 4 less than or equal to 5 so basically four is you know less than 5 so it will execute the statement printf again display the value 4 and then increment again the end it becomes 5 and then after that it will try to evaluate the statement is less or n is less than equal to 5 so we have set now the value to 5 so 5 is equal to 5 so it will try to execute the statement once again and if the 5 value now becomes or the end value now becomes 6 because we try to increment it here so 6 will be evaluated inside our while statement then 6 is less than or equal to 5 so that's basically not true because of course obviously 6 cannot be less than or can it even be equal to 5 so that's why it will try to end the loop because the condition returns false already ok so that's how the do n statement works and guys make sure that there is like if in it n of your look because there are cases that you know the condition will not be evaluated into false at some point in your program so that we may it like the infinite loop so the concept of infinite or infinite loop so be careful to place a condition here that will try to or like will be evaluated falls at some point in our program because you don't want to have the infinite loop because the program will run infinitely and you don't want that it would you know consume the memory of your computer so that's why you need to be careful with the infinite loop so make sure again to add a condition that will be evaluated as false at some point in your program so guys if you have more questions about doing dowhile please comment down below so I am happy to answer your questions and guys in the next video we're going to try to implement the for loops the another type of loop in C okay so I think that's a test for this video and see in the next video