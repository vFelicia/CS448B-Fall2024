hello guys welcome to the first video tutorial on Python programming for beginners and in this video I'm going to give you a introduction to Python and how you can download and install python on your Windows operating system so let's get started so python is widely used general purpose high level language and it's design philosophy emphasizes code readability and it's uh Tex allows programmers to express Concept in fewer lines of code than would be possible in language such as C so let me give you a little overview of python first so python is a scripting language and it includes objectoriented uh Concepts also and it's a portable and very powerful langage language and it's often called a programming language for beginners because it's really easy to Learn Python and it's really easy to implement if you have little codes or a little concept that you want to implement very fast you can use Python to implement them and it has mixed features like uh programming languages like Java and pearl screen streams and what are the uses of python uh it can be used to make system utilties that can be used to make guies guis stands for uh graphical user interface and there are some idees which you can use or which there are some platform which you can use uh to create GUI so this these are some of the um platform on which you can make GUI application for example QT uh platform or Windows platform or gtk platform you can make interactive guies using python you can also uh use Python to make internet scripting uh as a internet scripting language and you can also use python as a embedded scripting language even you can use python as a database programming language artificial intelligence and image processing so there are widely used uh you know implementations of python and you can use python in many uh you know many fields so it's very good idea to Learn Python and it's really easy to uh Learn Python that's why you can uh you know you know Learn Python uh if you are a beginner in programming okay so let's uh see how we can install python on our Windows operating system so just open your favorite uh browser and search for Python and the first link here you will find is uh www.python.org this is the official website of python just click here and in here you will be able to see uh the overview of python by browsing uh these tabs but the tab we are interested in right now is this download tab and in here there are two versions one is the very latest version and one was uh little bit slightly older version but very stable version also what we are going to do is we are going to download this latest version so I'm going to just click this download button and it'll download this python 3.4.1 at the time of making this video this is the latest version uh and once this um download is complete we will be able to install python on our system so now download is complete I will just run this and it's preparing to install and this is the first option or first wizard python set of wizard you will be able to see and for now I just want to uh use install for all users and I will click next and in here this is the default location where python will be installed and this is the name of the folder because it's three uh version 3.4 so the folder name will be python 34 okay just click next and then uh these are all the utilities which will be installed uh if you want to customize you can customize it but I will leave them as default and I will click next and this installation will start and it's saying that it will take several minutes to install python so you need to wait until it's uh process is going on and once the process completes I will uh go through the next steps so let's wait for some time and I will pause the video for now so while this process is going on I will give you brief uh uh of compilation and uh how this Python language uh interprets or compile itself okay so if you have learned any other languages like C C++ or Java uh you know that this language is a compile you know first you need to compile this uh file like Java or some other uh program and then once you compile your program it will uh produce use a executable file and then you can run this executable file and you will be able to see this kind kind of a result but python is a interpreted language that means you don't need to compile your Python program because it's a interpreted language it'll directly you or you will be able to run directly your program and it is a runtime compilation it will do so if if any error occurs you will be able to uh see them only at run time okay so there is no need to compile or there is no feature to compile uh your code in Python it will just execute your program directly so this is the little difference between the programming languages like Java C or C++ uh that in those languages you need to compile your program but in Python instead it's a interpreted language so you don't need to compile this it will be uh executed at runtime okay now our uh installation is finished so I will just click finish now once your installation is complete you will be able to go to your start menu here and you will be able to see python in these options otherwise you can go to all programs and in here you will be able to see Python and whatever version you have downloaded for python so I can see this folder called python do python space 3.4 which is a version for python I have installed and when I click this folder I can see uh few uh files here so there is something called python command line and I will click this first python command line first and this is a command line uh Tool uh which you can use to execute your python uh scripting langu or python programs right so for example I want to execute something here uh what I can do I can just print something thing so I will write print and in the brackets in the earlier version before three uh or uh before version three uh you don't need to give these uh brackets to execute your uh message but after version three you need to use these uh brackets in order to uh uh print your message like using print function so print is a builtin function to print your uh string or whatever you uh write in these brackets so I will just use double quotes and I will write hello hello world and when I press enter it will give me hello world right so there are something you will notice when I have printed hello world that first you don't need any semicolon or any ending uh uh ending um declaration in Python so if you have or if you are used to some uh languages like C C++ or Java you know uh that you need to end your line uh using semicolons right but in in your Python program you don't need to use semicolons here and the other thing I have already told you that you don't need to uh compile your program you just hit enter and it will run your program right so this is a command line tool the same functionality you can use a GUI tool also uh to write the program so if you uh want to develop your uh program using command line you can use this python command line I will just close it for now and I can even use or python even provides a GUI which is called idle to program uh python so I will just go to this folder once again and I will click this idle python GUI and it will open the same shell command but it's more interactive and you will be able to see the same uh same uh command line structure here now for starting because I think these fonts are a little bit smaller so I can make them bigger by going into the option configure idle and in here I can change the font size of uh my shell right so for example I want to increase it to 16 so that I can see better and you can also see better let's make it um 18 even so you will be able to see more better okay so once this is done uh in here also you can just write print and in the brackets you can just give your message for example hello world and whenever I have uh or when I write this you will be able to see different colors for different uh you know structure so because print is a function it will be uh highlighted in different color and hello world is a string so it will be uh highlighted in green color for example so this uh in this way you can read the program uh in a better way and this is why we generally use this python GOI or which is called idle to program okay and I press enter and it gives me once again the result hello world right hello guys welcome to the second video tutorial on Python programming for beginners in the last video I have given you new introduction to Python and I have shown you how you can install python on your Windows operating system and uh I have given you a little example how you can use this python IDE called idle for the first time okay so in this video I'm going to continue and I'm going to show you how you can use numbers and a math in Python so if uh you are are familiar with this last time I have shown you how to open this by shell right if you don't know uh how to open this shell once again I'm going to tell you you just need to go to your start menu and just go to python folder and just start this idle python guy from here and it will open uh this kind of buy shell or python shell here now let's get started and let's see how we can uh math in Python so uh like simple mathematics python can also do the Maths for you so for example you want to add 5 + 98 will give you the answer one3 you want you can even add minus values so minus 34 Plus four for example and will give you the answer 30 okay in the same way you can do the subtraction 56 minus 34 it will give you the answer and it will also uh give you the negative value to provide the value such as for example 34 minus 56 will give you the negative value okay now for division uh what you can do uh you can just write uh for example 21 divided by so this is the symbol we use for divisions which is slash for example 27 uh 21 by 7 is three which gives you the answer and if you want to divide the number and get some decimal values for example 23 divided by 7 will give you 3.28 something right so this will also give you decimal values now for example you don't want uh this these decimal values after the division you just want to uh see the whole value or the integer what you can do you can just write 23 double slash 7 and this will give you the whole number which is three okay you can even so this this number is a integer and what is an integer integer is the whole number right you can even use decimal values which are called float in programming float values are values which have some decimal points for example 57. 2345 or whatever divide by 3. 22222 okay press enter and we give you an answer so you can even divide decimal values like this okay and remember this whenever you want to get the whole number just do double slashes now for multiplication multiplication is also simple for example you want to multiply two number 56 multiply so for multiplication you use this ASX symbol or star symbol simply so this star symbol or stic symbol will be used as a multiplication symbol okay so 56 multiplied by four is 224 so you can use multiplication like this okay now for example you want to get the F exponent of some number what in what is an exponent exponent is something like for example two exponent 3 is 2 multiply by 2 * 2 okay so 2 into 2 into 2 this is the exponent so you can do it like this and it will give you the answer but if you want the exponent for example 2 to the power 15 how we can do you can do something like this two multiplied by two multi mly this by two MTI by two multip by two 15 times and this will be ly right so the simple way to find the exponent is use double asri or double stars and then the power so 2 to the^ 15 is 3 27 68 okay or 2 to the power 5 is 32 so this double star or double s you can use to get the power or exponent of your numbers okay now you may be wondering what may be the order of uh your operations which operation will take place when you have multiple multiple operation at the same time for example I want to do three multiply it by four plus 5 minus uh six and then divided by one or not one but two for example so what will be the order will three into four will happen first or 4 + 5 will happen 4 + 5 will happen first or 5 6 will happen first or what is what will be the priority okay or what will be the order of this operation so uh like simple mathematics uh if you remember when you are in school and or if you are in school still you know this uh basic formula called p m b a s okay so this is the order in which your operations will take place and this pieace time for parenthesis e stands for exponents m stands for multiplication d stands for division a stands for addition and S stands for subtraction okay and the way you remember this is you can just uh abbreviate it as please excuse my dear on sell if you want to remember this order okay and so this will be the uh priority or this will be the order of your operation so if you want to prioritize something en close that those operation in the parentheses so you want to do three plus four and then multiplication or you want to multiply by uh five then the priority of this addition is uh the most important or or this will happen first because this operation is closed in parenthesis and then this will happen Okay and then the the uh order will be like P MB a s if you can remember so for example I want to do something like this divide by um 6 2 then the parenthesis priority will be first and then the multiplication and then the division and if you have some subtraction then this will happen at the last okay hello guys welcome to the third video tutorial on Python programming for beginners and in this video I'm going to show you how to use variables in Python so I'm assuming that you don't have any prior programming knowledge so uh I'm going to uh tell you the basics of variables first so basically what is a variable variable is a container for some value this value can be an integer this value can be a string of words this value can be a float value or different kind of values so what is a variable variable is container for the values so for example how you can declare variable in Python first of all you need to give a name of the variable so for example I can declare a name of a variable like my variable is equal to and this is equal to sign you use between the value and the name of the variable okay okay so this is the name of the variable is equal to you can assign some value to the variable for example 30 now my variable has the value of 30 so my variable is a container for the value 30 right and generally it's the convention that whenever you use or declare a variable it's not necessary but it's a good programming habit that you uh separate your uh variable name if you have uh something like my variable the first word of your variable name starts from small letter and then the second word first letter starts from big or a capital case and the other letters are small and this way it will work like for example I want to give the variable name is equal my variable name it will be like this okay so it's like camel case it's called a camel case uh declaration so start with small letter and then the second letter uh second word first letter is the capital third word first letter is the capital just like this okay so just follow the convention like this it's not necessary but it's good now when I press enter now my variable has the value of 30 so once again when I uh call my variable and press enter it gives me 30 because my variable is equal to 13 now now python is a case sensitive language so if you write my with a capital m variable and press enter it will give you an error because this variable name is different from this variable name because this is case sensitive so just remember this okay so these are the two things now why we exactly use variable in any programming language so variables are generally used uh whenever you don't know what values you are going to deal with so for example you are going to deal with uh some values which are inputed by the users now first of all uh this variable you can use it as for example for adding something so I can just call my variable plus so plus 34 and it will give me the result uh yeah this is you see I haven't spelled this my variable correct so it gives me an error okay so my variable plus 34 and it gives me 64 okay so now you can perform math operation using this variable also okay now the real use of this variable you can uh you can perform every math operation on this variable because it has some value which is an integer right so you can do a variable to the power or exponent uh three it give the answer and in the same way it will give you an answer for every uh MTH operation now the real use let's see some use for variable so for example I declare a variable called uh value okay and this value is equal to whatever user inputs from uh the user uh input okay so how you can provide a user input in Python you just use a inbuilt function called input so this is a inbuilt function in uh uh python which will allow you to enter any value so you can just write enter the value but there is a problem with this that this input whatever user enters will be a string okay so let me give you an example when I press enter now it give me the prompt that enter the value and I can enter any value for example 15 and press enter and now this value which is a variable value has the value of 50 so whenever I call Value it has the value of 50 but notice this value is a string it's uh between D this single codes so whenever I want to uh perform some addition so Value Plus something 20 it'll give me an error see it give me an error why it's giving me an error because this value which is 50 is a string because whenever we use input function to input value it takes this value as a string okay and whenever you see something thing in single code that means it's a string whenever you have the single quotes around your value it's a string okay now in order to convert your uh string to an integer you can cast uh the string so I'm going to just copy this just you can just copy this and paste it here and in order to cast this value to an integer what you do just go before your or input so value is equal to just write int so this is type casting of string to the integer okay and just close it from here okay so when you do this this uh will be your string so uh input will be taken as a string and this int will convert your string to the integer okay and now when you press enter and you give some value for example 60 value is equal to 60 and now you call Value not well but value it has the value of 60 and notice that earlier this 50 is uh enclosed in single gos but this time it's not enclosed in single goes that means it's a number right now I can perform some math operation on this like like this Value Plus uh 50 * by 60 something it will not give me an error this time so always remember whenever you want an integer as a input you need to cast this into the integer and Casting means to convert your string to the integer you can cast this to the flo Val value like this for example you can just copy this once again paste it here and you can cast this like uh float so float is a decimal point value okay so you can cast your value as a float and now when you enter you can just try 50. 134 whatever and then call Value it has the value of 50 points whatever okay so variables are useful whenever you don't know what values you are going to deal with okay hello guys in this video I'm going to show you how to use builin modules and functions in Python so if you have remembered that in the previous videos I have shown you how to calculate the exponent of some values so for example I want 2 to the power three I can use two and then these two estx and then I can write three and this means two to the exponent three and it gives me the value of eight okay but there is a easier way of doing the same thing and and this is by using a builin functions which are provided by python so what uh is a function first of all if you are new to programming a function is a piece of code which execute some function or some logic okay so a function is a piece of code which executes some logic so for example you want to calculate the exponent of two like this you can do it like this or you can use a builin function which execute a exponent function right so you can use p w which is power and this uh function takes two arguments first is the value which is two and then the exponent which is three or this means 2 to the^ 3 and it also gives you the value uh8 which is same and it's more easier to use uh this and it's more easier to understand this expression rather than this because it's more descriptive right now how do you know that what are the builin function in Python okay so if you don't know what are the builtin function there is a command to know what are all builin functions in Python and what is this command this command is you just need to write D and then get these two brackets and these two brackets just write double underscore and then just write build ins and then double un underscore once again and you just need to give this command and what this command just press enter and what this command will return this command will return all the builtin function which you can use in Python okay so for example I was using p which is a power function and you can find this P function here okay this is the power function so you can see you can calculate hacks there is a function called abs to calculate absolute value so for example I want to calculate I will use Ab s and I will write uh 18. 666 and press enter it gives me the absolute value of ABS uh this should be little bit different I think it should be like this and okay so it's giv me the absolute value of U the number okay or you can uh use this print to print something or you can find this Len function to find the length of a string so I can use Ln and give some strings for example I can write hello which is uh five letter strings one 2 3 4 five right and this length will return the length of this word which gives five right so uh and there are some other useful functions like minimum maximum slice so these are all the builtin functions in uh python now once you know the function that okay this function exist here now how you can know that uh what is the functionality of this function right so to know the functionality of the function what you need to do you can use a builtin function called help this help okay so for example you want to know what this uh function called Max does okay so what you can do you can just write help and then in the brackets you can just write the name of the function for example you want to know what this function Max does we just write help and in the bracket just write Max okay and press enter and this Max you can see here so this help is that uh this Max is a function which can takes uh more than one argument multiple arguments and it gives the I think maximum value of those uh uh arguments right so you can see it with a single iterable argument returns its largest item okay so now I know that when I use a function called Max and I can give multiple argument uh 4 comma 2 comma 1 comma 5 comma eight and when I press enter it gives me the maximum value which is eight right so in this way you can use this help function to find out what these other builtin function uh does or what is the use of these builtin functions right now this is about the uh function builin function now there is something called builin modu modules okay and these builtin modules are the extra modules which contains extra functions or extra functionalities which you can use whenever you use or whenever you include these modules so for example uh you want to know uh or you want to calculate the square root of some value so there is a module called so for example you want to um know the square root of something so there is a module called math you can use it for this so to include a module you need to import this module and how you can import just write import and this is the keyword to include a module and then the name of the module which is for example math in our case and when you press enter now you have included this module now how you can use the function inside this module you can just uh you write the name of this module which is math Dot and then you can use all them you can see there are different options uh which you can use with this module called math you can see here right so whenever you right dot it will give you some options you can see and this options you can scroll it by um up and down Keys okay so this math module has this much amount of builtin functions right you can scroll up or scroll down and what function I'm you I'm want to use I want to search for square root so there is a square root yeah okay so I can use square root uh I have pressed enter so uh this give me uh some value so once again math.sqrt and then I can find the square root of any number for example I want to find the square root of nine will will give me the answer three so in this way there are some builtin module also and this these will module also have some function builin functions and you can import these builtin module using a keyword import and the name of the module and then you can use these modules like the name of the module and the functions which it contains now sometimes these uh modules uh are you know uh hard to uh you know spell or write so what you can do you can Define your own variable for these module names for example I can declare a variable called uh square root which is equal to this math.sqrt okay now whenever you use square root uh variable you can perform the same functionality for example I want to find out the square root of 9 it will give me three so you can replace these builtin functions in module by your variable using this equal to sign okay and now you have your own variable which can calculate the uh square root or any other function hello guys welcome to the fifth video tutorial on Python program programming for beginners and in this video I'm going to show you how you can save your program or how you can save your Python program to use this program in uh the future so for example U you want to save your Python program and run it uh uh whenever you need in future how you can do it I'm going to show you in this video so till now we were using this python shell and whatever code we uh write in this python shell it will execute this uh code very well but it's not able to save your program so whenever you just close this python shell your program is gone it's and it's not saved anywhere so let's try to make a new file or new python file so that we can use this python file whenever we need and we don't even need to worry about closing this shell okay so how you can do this is you just need to open this python shell you already know that you can just open this python Shell by going to your python folder and just open idle python GUI from here and this is that idle idle python guy which is a python shell so just open it and just go to file here and just click new file and this will open a new file and you can save this file as uh python file but first you need to write some code in here so I'm just giving you an example how you can make this python file and how you can run it so for example we want to calculate the maximum of three values what you can do here is uh you can calculate the maximum of three values like this so I have already shown you how you can uh take the input for by using this input function and how you can convert this input to an integer by just typ casting this uh string value which you get from the input to the integer and save it into a variable so in the same way we I have three valuable x y and Zed which are taking inputs from the user and what I'm going to do is I'm just simply calculating the maximum value of these three number which you have user has entered and I'm going to print this maximum so maximum I'm calculating this from a function called Max which I have shown you in the last video it can take any number of argument right now I have only three argument because I want to compare three numbers and calculate the maximum value so let's try to save this first so you just need to save this program in order to run it so you just need to go to file and just click save as and in here choose your path for the python file and just WR give the name of your python file or example test and make sure that this here save as type is python file here which is py file or pyw file and save your file and now once your file is saved you can just run it just go to this Run tab and you can just click this run module or F5 key okay so I'm going to run module and this will run my module like this so I'm going to give uh three numbers for example 22 second number 33 third number 44 and gives me the answer that maximum of these three values is 44 right I can uh do this uh in a better way that I can print something first that the result is or the max of three three values is and it depends upon you how you can run this is just an example okay so how you want to make your program you are free to make it and this is just an example how you can save your file but still uh it doesn't solve our purpose because it's uh running our code in the shell and we cannot you know uh always uh run our program and you we cannot open our python shell everywhere you know you want to run your python file as an executable file right you don't don't need to uh you know open this python shell every time you need to run your Python program and how you can run your program directly is you just need to go to the folder wherever you have uh saved your python file so I have saved my python file here but there is a little correction you need to make in this program and what is the correction because it's taking three inputs and it will take the three inputs and it's going to print this uh answer and just after uh you know uh giving you the answer or printing the answer it will instantly exit so what you need to do just need to give something so that it can stay so just write input and this is in put and in here you can just give a string that please press enter to exit and this will you know keep your screen on and until and unless you press enter it will not exit just save your program once again just go to file and save it and then go to the python file wherever you have saved your python file okay just go to the python file you can right click and you can open if you going to if you are going to open it it will open it in the python terminal and this will run your program directly you don't even need to use this python shell or what you can do you can just directly double click it and it will open your Python program and it will give you the option please enter first number I will enter first number 11 second number 43 third number 43 and when I press enter it'll give me the answer which is 43 the max of three values is 43 and now it will give me uh this option that press enter to exit and when I press enter or any other key I will exit from my python code okay so once again then you can save your python file by going to this uh uh file Tab and make a new file and just save your file once you have done uh writing your code you just need to save your file as a py file so you just need to go to uh file and save as and you just need to give a name to your file and make sure that it's a python uh file type okay and once your file is is uh ready you just need to or once your code is ready you just need to save it and once you have saved your file you just need to go to the file and run it if you have remembered I have shown you in the first video uh that python uh doesn't compile your program python directly runs your program so you don't need to compile your program it will run your program directly okay and if any error occurs in your program it'll give you the answer at the run time but and not at the compile time so this is why you can run your python file directly like this by double clicking okay hello guys welcome to the sixth video tutorial on Python programming for beginners and in this video I'm going to show you how you can use strings in your Python program efficiently so I think I have shown you uh in the earlier videos how to use strings uh very briefly but in this video I'm going to uh take this string in detail so I have this uh python file uh I have shown you uh in the last videos that how you can make python files and run them uh using this run Command right so I have this python file and I have have this python shell open so I'm going to write my code here and I will see the result in this shell okay so how to use strings in Python so there are three method or three ways you can use strings and I'm going to show you all three ways so consider this example we have three variables a b and c and all three of them I have assigned a string one string which is assigned to variable a uh is enclosed in single codes right the second string is enclosed in double codes right and the third string which is assigned to C is enclosed in three or triple codes and I'm going trying to print all three of them them one by one so I want to print a print B and print C and let's see what happens so first of all I'm going to save my program and then I will just run this module or press F5 to run it and when I press uh this run I will see the result here and the result will be the same so you can print the same string in three ways either you can use single quote or you can do or you can use uh double quotes or you can use triple Cotes to print the string and the result will always be same in Python now suppose you want to uh use for example this is a string enclosed in single code and you want to use some single code here so for for example I want to uh say uh I'm a single CED string and for example I want to use a word called um don't which also take a single code here this kind of single code and when I use the single code which uh with the string which is enclosed already in single code then what you your Python program will interpret is your string starts from here and your string ends here and this will be uh some alien to your python you know Python program because uh it will think that this single codes uh is start from here and ends here so this is a string and what is this it's not recognized by the python so whenever you want to use single code in the string which is already there inside the single code you can use a Escape character and what is the escape character in uh python Escape character in Python is backs slash so just use this back slash and now you can see that uh your back backs slash is hiding or it's saying python that we want to use single code inside the string okay and this is called Escape character so in the same way when you want to use double code in the string which is already there in the double quotes for example here I want to use double quote the same problem will come here your Python program will see that your string starts here and ends here and this will be not this will not be recognized by your Python program so here also you can use back slash to hide or to uh you know say python that we are using double quotes but it's the part of the string and it's not starting or ending of the string okay in a same manner you can uh you know use single code here and and you can use this back slash to uh show this backs slash or double quotes here now I will save my program I will just click control s and run it once again F5 and you can see the answer is like this so I'm a single quoted string and this single code is visible now here and uh just remember that this is just a Escape character so this will not be printed this will help your single code to print but this will not be printed in the same way you can see it's printing this uh double quote here because we are using Escape character and in the same way it will work uh in the third string like this now suppose you want to print this uh this Escape character so you have some string which uses this and you want to print here this backs slash how you can do it you just need to use wherever you need to you know print this backs slash so for example I will use backs slash here and let's see first of all what will be the result for example I want to print back slash here here and here and I will save my program and run it by pressing F or this run python module it will show me this backslash here right but better way is to just use double slash let's see what happens when we use double slash I will save it and run the program and now it shows back slash like this so it's always better to use double slash whenever you want to print this single back slash here okay now suppose you want to print the length or you want to find out the length of your string what you can do you can use a builin function called Len and I think I have already uh you know shown this function to you but once again I'm going to show you so I want to find the length of uh the string a I can just use Len and I will pass my variable a as an argument and I can save it and I I can run it I run it here once again and now it says 34 so the length of my string a is 34 okay so in the same way you can find the length of uh B and C also right now suppose I have string a for example I have string a like this hello and space and string B is like that hello world okay and how can I join these strings I can join these strings just like you just need to use a and plus and B so plus is called a concatenation operator here and what this plus does it just adds or concatenate these two string A and B I will save the program and run it once again and it gives me the answer hello worlds right so this plus concatenates your string you can see here now for example I have this um I have this I will just delete this and I have this variable a and I want to print it 10 times and I don't want to use you know a and then plus a once again a I want to print it 10 times or suppose I want to print it 100 times there is a short way to print uh this uh a 100 times or whatever number of times what you need to do is you just need to use your variable which contains your string and then give a estri symbol here so give this asri symbol and then the number of time you want to iterate for example I want to print hello 10 times I can just give 10 here and I can save the program and I can run it once again and now you can see it has printed hello 10 times this I can do uh you know I can change it to 100 and it will print hello 100 times just run it now you can see it has printed this hello 100 times right this is a short way of printing your same string again and again okay now suppose I have uh string which is a so I have this word for example hello which is assigned to a and I have the other variable B and I assign a number two to this or five to this okay and I want to print hello five in a single line how can I do this I can for example I can try to write it like this A+ B but let's see what happens when I run this I will save it and I will run this and it gives me the error because my variable a is of type string and my variable B is of type integer and I cannot add or can concatenate these two variables because they B has a different data type and a has a different data type now in order to print uh this these two uh variables together or value of the these two V variables together what I can do is I can typ cast my B which is a integer to the string and to convert my integer to string what I can do is I can just do Str Str and I can enclose this B variable in this function called Str Str and what this Str Str does is it converts your argument into a string okay and now when I save this and run this it will run fine hello file right hello guys welcome to the sth video tutorial on Python programming for beginners and in this video I'm going to show you what are lists and how to use lists in Python so as the name suggest list is a collection of values and how you can declare list in Python you just need to give the name of the list for example I want to have the list of names so I can give uh the variable name for list as names is equal to and then the square bracket and this square bracket will contain the collection of values and it's totally valid that this collection can you know initialize as Zer value zero values so the list can have zero values also and it can have maximum values for example 10 or hundreds of values so for example I initialize this list like this and this list is initialized as a blank list okay and when I call this names list once again it's a empty list because I haven't provided any value to the list okay so it's totally valid that you initialize your list empty now to initialize list with some values what you can do is you can just write the name of the list once again and then you can give the values inside your list like this so for example I want to have the collection of names comma some other name comma some other name and this can go on and on and on right so it depends upon you what uh number of values you want to have in the list and when I press enter your name variable which is a list is initialized with these values now when you call this names variable once again it has these three values now there is a term called in index in Python for list which indicates the position of the values in your list so the position of this first name in the list in as any other good language starts from zero it doesn't start from one but it starts from zero and this is called the index of your list so the index of this list or the index of this name Mark is zero index of this name John is one and index of this name Julie is two and on the basis of index you can even call these values for example I want to print out this first value called Mark I can just write name of my list names and then just give the index so the index zero is for Mark right and when I press enter it returns me the value Mark in the same way when I call index is equal to two names two it'll give me Julie because it starts from 0 1 2 right now there is a very interesting uh thing in Python is that you can even have index back backwards also right so the forward index starts from 01 2 and the backward index starts from 1 2 3 and if this has more values 4 5 and so on right because why this starts from minus one and this forward index starts from uh zero because you cannot have minus Z from backwards right so this index will be minus one this index will be minus two this index will be minus three and you can even call these values on the basis of backward index also for example I want to print this name Julie on the basis of backward index I can just do it like this I can just give the backward index which is one which starts from minus one right backward index starts from minus one and this Sprints Julie once again so always remember if you want to uh start from or you want to have the forward index just starts from 0 1 2 and if you want to you know have the values from the back backward index you can you start from minus one min2 minus 3 and so on okay for example you want to call name Mark you just need to give names and the backward index minus 3 and it will give Mark right now in order to add values more values to your list what you can do is you can just call the variable or your list name and then you just write Dot and just write append and in this print bracket you just pass the value which you want to add to your list so I want to add one more value to my name list and I press enter now this name which is a name of the list do append which is a function builtin function in Python has appended or added one more values to my names list and now when I print my names list it has four values and it has added this extra name to my list okay now for example you want to add list into a list so for example I have some other list called um age for example ages or age and I have some ages here 23 comma 12 comma 32 comma for example 11 okay so I have a list of names and I have the list of age right and I assign this list and now I want to add uh the age to my a names list how can I add I can just write names which is the name of my name list right dot extend and in the bracket you pass your second list so you can just pass this like this and press enter and it's totally valid and now when you call this name list you have extra list of age here so there is a interesting fact about uh python list is it can contain different data types so it's not necessary that you your list only uh if you initialize list by string values it only has to contain uh you know string values you your list can contain string values also or the integer values or float values or any other data type Val vales and it's totally fine in Python okay so you can Define diff uh you know different data type list also okay so just remember this now you must have or you could have done the same uh thing for example you want to add uh or first of all I will show you how you can remove items from a list okay so to remove remove a item from a list what you need to do is for example my list name is names I want to remove some items so I will just write names dot remove and in the bracket I will just give the item value for example I want to remove this name Patrick from the list okay I will just say name which is the name of my list do remove and then the value which you want to remove and press enter and once again I will call names and now the value Patrick is gone from the list right so in this way you can remove list from your you know not remove list but remove values from a from your list in Python now for example uh you want to print a list you can just call Print method so it's uh you know you can call your list using this print method also so you can just write names and press enter and will give print the list of name like this only okay now in order to uh print multiple lists for example I have the list called names and I have initialized this list called ages also right so I can just separate my list by comma and I will just add one more list and it'll print two lists from me first list is for names till here and second list of pages still here right so you can either you use single list or multiple list or print them like this okay now in order to uh get uh you know I have shown you how you can get uh the maximum value minimum value or um the length of the strings in the last video right on the list also you can call length matter Len and you can find the length of the list like you just call Al and builtin function and just pass the list name as an argument right and it will give the length of the string which is seven right 1 2 3 4 5 six 7 right so if the list contains seven values it will return seven this is the length of the list okay now you can even uh print for example max if uh it applies to your list you can even uh call this method it will give an error because my list is a mixed list right but the same method Max and I apply to the list called age it'll give me the answer 32 right because my list of age only contains the integer values and the maximum values of this is 32 okay so you can also apply builtin function on list also hello guys welcome to the eighth video tutorial on Python programming for beginners and in this video I'm going to show you how to use slicing in Python so as the name suggests slicing we can use it for you know separating a slice from a list so for example I have a a list like this and I will call it my list and contains some integer values from 0 to 9 and I press enter and it allocates this uh 0 to n values to my list and I can just see this by printing the list so it has 0 to N9 values now suppose I want uh to print only or I want only the values of from 4 to 7 how can I get this these values values from my list so what I can do is I can just use my list and then in the square bracket I will start from the value which I want to print so for example four and then I give this um colon and then I give the ending value till whatever value I want to print for example eight and I press enter and it prints from four to just before the value you want to print so you if you remember this index of the list starts from zero right so index uh is zero here 1 2 3 4 5 6 7 8 9 right so to print your values this starting value whenever you write it includes the index of the value you want to print okay so when you write four it'll includes 0 1 2 3 4 so it will print the value from four and it will go to8 four five 6 7 8 but it excludes this value and it only prints up to seven okay now suppose uh you want to print uh uh something like you want to print to the end from 5 to 9 how you can do it you can just do it like my list and you can just write five and because this will print if you write here nine this will print up to eight right because uh whenever we have written eight here it was printing up to seven value right and remember this is the index not the values the these values can be string data type or any other data type right so this these value has nothing to do with these uh index values okay these are the position which you want to print okay so in order to uh print from five to 9 you need to add one more to your slice and then it'll print from five to nine okay so remember if you want to go from some value in the middle to the end just add one to the index here okay so you want to print nine then just print 10 here now as I have already told you that uh you not only can have the list or you can not only uh can uh print the index slice the index uh for the integer array or list but any string list also so for example I have a list like this of character for example characters and and then I want to uh print or slice these uh list uh characters right so how you can do it I will just write name my uh List names and then in the square bracket I will just write 2 to uh three for example I want to print 2 to three it will just print second value because uh it skips the Third value right so 0 1 2 it includes the two and it skips the value which you give here so it will only print to uh C here right for example I want to go to the end I will just write 224 it gives list like this now for example uh there is a short way of doing doing this if you want to print from five to the end what you can do I have this my list here I will copy and paste it here and in the square bracket what you can do you can just write five and semicolon and leave the other part of this slice and when you press enter it will just print uh the values from five to 9 to the end of your list okay now for example you do the same thing but you leave the first part and just uh go up to the last part it will print from start to the end okay so for example I want to print once again uh colon or to the fifth value and it will print from the starting to the fifth value okay now this will uh be true for the negative sequence also so I have already told you in the last video that you can um in the list you can have the index negative index from the backward of from the back right so what you can do is uh you can just use this list and you can just say uh 4 to 2 and press enter it will give you the values from so this is minus1 min 2 and it will skip this value and it will print here and then we have 1 2 3 minus 4 and minus 4 is this one right so it will print this one and it will print this one but it will not print this one because it will skip this right as we have seen in this positive or forward uh forward indexing in a similar way it will uh this also works for the blank sequence for example 6 to blank and it will print from four to 9 okay and it will be same for uh if you leave the first part and uh want to print the last part okay now if you want to print the whole array you just can do it like this but you can also do it like just give a square and give this semicolon here it will also give you the whole array okay now there is one more thing you can do with your list is for example I have my list and I want to print the values for example I want to print 0o 3 six in some sequence okay so you want to skip some values and you want to print only some other values so what you can do here you can just write zero which is a starting index and to 10 so you want to print from zero to the end and there is a optional value you can give here and you can give the value here which you want to skip so for example you want to skip 0 1 2 3 here so you want to print 0 3 and six and 9 what you can do here you can skip the value by two okay and when you print here it will print zero 2 4 6 8 okay so it prints here and it skips the first value and second value it prints uh skips the third value and fourth value it prints and just like this right so for example I can once again skip two values at a time instead of two I can write three here and press enter it will give 03 69 okay and there is a very short way of doing this is you can just uh write the skip value number of index you want to skip and just leave these things or these uh Parts blank here and will print the same value okay so this is optional it's not necessary to use this but if you use this it will skip uh you know those values like this okay and you can do it with the negative index also for example you can just leave this and write two here it will print from the back word to the front right so it when you write 2 it'll start from 9 and then 2 it will print 7 and then five and three and one okay so if you want to print backwards just give this sequence in negative okay once again you want to print backward skipping third value or three values just do it like this 9 6 3 0 okay so in this way you can use sequence in Python there's more to sequence which will I will discuss in later videos hello guys welcome once again till now I have been showing you uh basic but very important concepts of python now from this video we are going to uh write some code in our python file and from this video we are going to write some useful code and uh this video I will start from uh showing you how additional statement works and in this video I'm going to specifically take if statement in Python so let's get started I have this um test. python file which I made uh if you don't know how to make the test of python file you just need to go to file in the shell and just click new file and then just save your file at your specified location by uh some name okay and you will be having this type of file so my python file name is test test. py now the conditional statement which uh I'm going to take uh let's see how if statement works so for example I want to find out the absolute value of number how can I find out by using a if statement so for example I write uh variable which takes an input so I ask the user to enter an input and I convert it to an integer and will be saved in the variable called n okay now I want to find out the absolute value of that number so what I can do is I can use if statement and how you can uh declare if statement just write if and then the condition okay so here comes the condition this is a pseudo code I'm writing so we are going to replace this condition by a real condition and then in here so always remember when you write code in Python it's uh indentation is really necessary so if you uh write any condition for example if if you give another code for example uh I want to print something what it will do is this statement uh sees the indentation and let me give you an example first and then I will illustrate the basic concept of indentation so I want to find out the absolute number right so in the condition I can write n if n is less than 0 so this is a condition I'm checking if uh user enters the value n Which is less than zero what I'm going to do is I'm going to print print uh the value absolute value so I'm going to just write uh the absolute value of and then the I can just uh use comma to give the value of N and once again I can use comma to you know separate this string and I can write is is and let me make a little bit figure is and then I can just separate it by one other comma and I can just write minus and if if the uh value is less than zero right so let's uh save this program just control s to save the program and I will run the prr run module or F5 and it says invalid syntax and why it says invalid syntax here is because in here after if condition you need to give colon here okay so this is taken as a condition and after colon it uh it indicates that this condition ends here and then the statement start from here once again save it and run it and then it will run in this shell and it's asking uh the user to enter a number I will enter negative number minus 3 and press enter and it gives me uh the absolute value of Min 3 which is three okay now for example I want I I I enter a positive number what happens then okay so I will run it once again and this time I enter last 10 and now nothing happens because this condition we are checking is less than or we are checking for the number less than zero so this uh will print this and just remember always that always provide an indentation here okay if you don't provide this uh small space or tab here and just you know write your code here with no space here and save your program and run it let's see what happens so it says EXP expected and indented block right so always provide an indentation and it it's you know show you the place where the error is coming in a red you know red highlight okay so always provide just give a tab uh before your statement after if condition okay or after any any uh logic which you write so now this is considered as a statement okay and if you uh if you write this if a statement or like this it will consider this line as a different code and it will not come as a statement of if condition okay now for example I provide the positive number and I also want to give the absolute value of this positive number so what I can do is I can just give else condition else so your statements start from you know with no space here but so if your condition is if and then we have the uh else condition so your condition start from no space but the statement inside your condition starts with the indentation or space here just give a tab and it will give you this uh space okay so once again I want to print out the absolute value of a number now I want to check whether number is positive so if the number is not negative which is this condition if number is less than zero which mean number is negative this will be printed else if the number is positive because this condition is not true that means definitely the number is positive I want to uh print out the absolute value of this positive number right so I will just print it like this absolute value of this should be value n is positive because the absolute value of positive number is positive right so now when I save the program and run it and it says invalid syntax once again why because I also need to give this colon here right now once again save it and run your program and it gives me uh this question mark with a number I give 10 once again and it says absolute value of 10 is 10 so this is the basic syntax of if statement your um you give if as a keyword for checking the comparison or uh comparison and you compare some values so right now we are comparing our value which user enters from zero and if it's less than zero we print this else anything else uh will be covered by this statement and always uh remember that your um uh if statement or L statement with will uh have no space here but your actual you know uh code which you write in if statement or else statement will be uh will'll have to have this kind of indentation here indentation means space or tab okay and it's not necessary that you can only give one line of code inside your if condition you can just give multiple lines of code inside your if condition uh I will just make it little bit prettier so it can have you know multiple line of statement your if if condition or your else condition uh this is just an example I'm giving but this will be some logical code which you have to write here and in a similar way you can just uh give this here right here right so you can have multiple statement in else condition now one one more thing to uh remember here is whenever you want to go outside so now want you want to do some other operation for example I want to do uh I want to add two numbers n or uh some I will declare a variable called sum uh sum of two for example this is my variable name and and I add 50+ 60 okay and I want to print it print and then I want uh just print this sum of these two numbers right so if I do it like this for example I do it like this what will happen let's see I save it and run my program and I give a negative number minus 9 for example and it gives me uh these values which is which it execute these values okay but I wanted to print uh uh this number also after the U my F's condition so how I can uh you know show or how I can tell python that my my else condition is now closed or my this if El condition is now over and I want to print this now so your next code should start from once again with no space okay so this is this will be considered as a different code and it will not be included in these condition uh conditional statements right and now when I save it I will save it and then I give minus 8 for example yeah I need to give minus 8 and now you see it gives me the absolute value which execute this code and then it execute my another code this code which I want to execute after my if condition okay so just if you want to end your s statement and you uh you know want to write some other code just start from no space so indentation is really very important in Python if you uh you know write or give this indentation incorrectly your python code will give any error or some error okay so this is the if else condition in Python hello guys welcome once again in the last video I have shown you how to use IFL statement in Python so I have given you a little brief introduction how to use IFL statement but there's more to IFL statement which is u l if statement and nested uh IFL statement so let's see how we can use uh those two so for example I'm going to just uh take a new example so I'm going to delete all these stuff and for example I want to compare some names this time I want to have a variable called name and I want to take a input from a user that uh he will give me a name and then I will compare the name and I'm going to show the result okay so what I can do is I want to compare the name right uh so in my if condition I will compare my name if my name and to compare equality you use double equal not this but double equal sign here okay so always remember if you want to uh compare the equality of two string or two values you just use not single uh equal to but you use double equal to if you use single equal to this means assignment so assign so this single equal to means that assign the value whatever user enters to the name but if you use double equal to it means that you want to compare the two values okay so I want to compare this value to for example name called Mark and I can say uh print the name entered is the name entered is and then comma name for example okay now I want to check some more names if the user enter some uh other names right so for example if a user enter some other name I want to check it so how I can check it just I can check it by L if condition okay so there is a condition called else if this L if means else if okay and then I can check one more condition for example this name is this time John and then I will print uh some other value so I will uh just print the name of John here so the name entered is John in a same similar way I can have multiple F Els conditions like this and just don't remember to give the intent and then for example some other name I can compare or some other name I can compare okay so if you want to uh compare different conditions you can can use l if condition and and else if the condition is false what I can do I can just print that the name entered is not valid for example not valid okay and now I've saved the program and when I run this it ask me to enter a name Al so for example I enter a name mark it says the name entered is Mark okay once again when I run the program once again and this time I enter some other name for example Tom and press enter it says name entered is Tom because it goes here so what's uh the flow of the program so we are checking or we are asking the user to enter any names when the user user enters any name this name goes in this name variable and then the program comes to this place to compare this name to the name called Mark and the if the name is Mark it'll print this okay otherwise it will go on to check uh that if the name is John and if the name is John it goes here and it print this otherwise it will check if the name is Julie and it will print this okay so in this way you if else statement works or else if or if else else if else if else if else so L if means else if and you can uh compare multiple condition using L if right now for example I want to uh you know have multiple if condition inside my if condition okay so it's called nested if condition okay and I uh tell the user to enter any name and if this name is um let's uh say name uh we assign this value this name to for example we have this name is equal to animal animal and then this I declare another variable uh animal name for example animal name and this animal name is dog okay so I have a name which is animal and then I have animal name is equal to dog so first of all I want to compare if the name is animal okay so if the name is animal then I will I want to do some some other I want to check some other condition in this uh animal condition so I will just I can just uh give one more condition to check if this animal Nam is equal to so double is equal to dog okay dog and don't forget this colon and then I will uh print here so if your if statement starts from here in the last video I've shown you that you need to give the um indentation here okay if you write so let me show you print you can just uh print valid animal valid animal okay so why this indentation here is more important is because for example I can just write print uh like this without I only give this indentation so I can say uh name enterd is animal okay so see the indentation here here indentation so this statement belongs to this if condition and this print statement belong to this condition because this comes in the line of this if statement right so whatever you write here in the line of this it will be the condition of or valid condition of this and it will print this one and if uh you know animal name is dog it'll go here and it'll print valid animal so what do you think what happens let's see what happens I will just run my program save it and it says valid animal name entered is animal right so uh and just remember that whenever you want to give uh the statement or quote for this if condition just uh make sure that this is in line with this if and whenever you want to give the code for this if condition you just give your uh statement in this uh or along this line okay so indentation just remember indentation and this is called the nested if else condition so what we have done we have checked if uh this name is equal to animal and if name is equal to animal then we say that U We compare one more condition that if animal name is do and then we print this or in the case of name any this animal name is not dog we can just say else and I can just print one more condition print animal name I can just uh print animal name in valid okay so this is my if else condition inside my another if condition so this is like a parent if and this is like a child if else condition okay so I just change this name some other name cat for example and I save it and I run it and invalid expression because here I forgot the colon save run it once again and now it will print animal name is invalid because it goes here it seees okay name is equal to animal so I go to this condition but animal name is not dog here it's cat so it's it goes in this condition and it says animal name is invalid and then it just print the name entered is animal okay so in this way you can use else if and nested LF statement in Python hello guys welcome once again in this video I'm going to show you how to use comparison operators and logical operators in python in the last few videos I've been showing you how to use if else statement in Python and this is the continuation uh you may say but uh these comparison operators and logical operators you can uh not only use with these ifs El statement but in general also you can use them so first of all comparison operators comparison operators as the name suggests we use for comparing values now there are these uh comparison operators which are available in Python which are less than and which is indicated by this symbol second is less than or equal to which is which are indicated by less than sign and equal to and greater than greater than equal to double equal to indicates that you want to check the equality and this exclamation mark equal to means that you want to check the nonequality okay now there are some logical operator operators which by which you can perform some logical uh operations between uh some values for example you want to check uh you have two uh variables and you want to check or two conditions and you want to check both the condition and you want that both the conditions has to be true you use and condition and using and condition uh it means that you are checking for all the conditions in this case we are checking this condition has to be true and this condition has to be true otherwise it will say false uh in the opposite or the opposite of and is R not exactly opposite but the logically opposite of and is or um and or means either one condition is true then it will give you true so let's see how we can use it so first of all for example you want to check the less than condition I can just uh copy this and in my shell I can run it and I can print I want to print if this is true print true okay and I will press enter two times and this true has to be enclosed in double quotes right press enter and it says true because nine is less than 10 right in a similar way I can check uh these functionality but this time I'm not going to use if condition but yeah you can use all these operators with if conditions okay so for checking uh less than or equal to we can just TR write directly write in the shell and and press enter and it gives true okay so this means less than or equal to so 9 is less than uh 10 so this condition is true so that's why it's giving true to us and always remember that you uh have to use less than first and followed by this equal to let's see what happens when you say 9 equal to less than 10 and it gives syntax error so always use less than first and then equal to sign in order to avoid any problems in a similar way you can just check uh the greater than so if 9 is greater than 10 which is false so it will give us false right 9 is greater than equal to 10 which is also false and now we are checking the equality which I have shown you in the last video which is false nine is not equal to 10 and let's check if 9 is not equal to 10 this exclamation mark and equal to uh checks for the nonequality so it will be true yes and if 9 is less than we have already checked it okay now we have end conditions right so for example I want to check whether 9 is less than 10 and 9 is not equal to 10 so I want to check whether these two conditions are true at the same time okay and I press enter and it gives me true and let's uh let's check for some other condition so this condition is true in this case which is 9 is less than uh 10 and this is also true because 9 is not equal to 10 so it gives true for example I delete this uh not equal to and uh write equal to here so one condition is false here which is 9 is not equal to 10 because we are checking for two condition to be true at the same time it'll give me false because this condition is true but this is false right so whenever you use end operator your program expects that both the conditions or what whatever conditions you are um giving are true so you can even give three conditions for example I want to check the nonequality and so it's not necessary that you only can only give two conditions you can even give three four five or whatever conditions okay and it's totally fine okay in a similar way you can use or to check whether either of the condition is true if this condition is true or this condition is true in this case both the conditions are true so it gives true but when we give this uh statement where one condition is true which is 9 is less than 10 which is true but N9 equal to equal to or equal to 10 which is not true it will still give you uh I have I must have used or here right because we are checking for or so it gives us true right so in this way you can uh use comparison operator and logical operators there is some more things uh you can check uh and these are is and in conditions or is and in operators whatever you want to say so for example I want to check I have a string string equals to equal to uh what you can say AB b c d e okay so our string equal to AB bcde e and I want to check if uh a is present in string or not so a in string and and it gives us true so what this in uh operator does is it checks whether this variable contains this uh value or character or not uh in in such way right so in a similar way you can search for B or C or any conditions okay so for example you want to check where the a b is present it gives us true but whenever you give a c it will give you false because A and C are not together present here now suppose you have two list one list is called a is equal to uh 1 comma 2 comma 3 and b equal to same list okay um B and there is operator called is so whenever you we use a is B it will give you false but for example you declared uh uh uh list C = to D = to 1 2 3 will give you true because it checks whether these two or two two values are equal exactly equal or not these are these A and B are equal by values but they are not logically equal that's why it will give you false but this we have already you know assigned or assigned c equal to D or we have assigned D to C equals this value that's why it will give us uh true so let's check C is B and it will give us true okay so in this way you can use logical operators comparison operators and is in operator in Python hello guys welcome once again in this video I'm going to show you how to use Loops in Python and I'm going to show you how you can use a while loop and for Loop in Python so these are two kinds of Loop in Python you can uh use uh to iterates some values so first of all Let's uh see what is a loop a loop is a piece of code which help you to iterate or to you know repeat a piece of code again and again without rewriting the same piece of code again again and again so loop as the name suggests is a piece of code which will help you to you know write or Implement some piece of code again and again unless and until some condition is true so let's see how a y Loop work in uh python first so for example I have a variable called a which is equal to zero and so let's let see how while uh loop declaration uh works so for declaring a while loop you just need to write while and then the condition comes uh which needs to be true if you want to go out of the loop so for example I want that if a is less than five then I want to implement this okay so once again I forgot the colon yeah my Loop has this colon okay so I want that if a is less than five I want to Loop uh the value of a okay so I want to print a okay and because this condition is U you know never be true if I don't uh increment the value of a so I'm going to increment the value of a like this so a + = to 1 this is same as writing uh for example uh a is equal to a + 1 this is same as uh this one but you can write this in short like this right and I will just execute this while loop and the result is 0 1 2 3 4 five okay so you you haven't printed this uh 0 to four uh integers uh you know you just have written this one line of code to print all these numbers so while loop or Loop help you to you know Implement a piece of code or again and again right so what happens here you we have already declared a is equal to Z and then your code goes here and it sees it's a while loop and it checks this condition a is less than five because a is zero and 0 is less than five so it will print uh this zero value here once again it goes to a while loop once again and because I was increasing it by one now value of a becomes one so a is 1 Which is less than five so it will print one here with this code and it will increment a once again and now a is two and two is less than five so once again it will print two and same as for three but as soon as uh five comes here and five is not less than five then it will not print five because this condition is false now so it will go out of the loop so this in this way this while loop works now let's see some real life example or some practical example of Y Loop so for example I have this example where I have a is equal to Z and S is equal to or a is equal to 1 and S is s is equal to zero and I'm telling the user to enter some value okay so enter number to add to the sum okay and entered zero to quit Okay so I'm uh telling user to enter some value so that I can make the sum or otherwise if you want to quit just uh enter zero and then I will I'm checking whether a is equal to zero if a is not equal to zero then I'm going to uh take this uh value of s and then I'm asking the user to enter a number and then I will add this uh number to my sum s stands for sum and a stands for a number and then I will print the sum like this okay so this is a little example which is more practical in real life uh situations and I will run this and now it will run so I'm asking enter the number to add to the sum if you enter zero you will be quit or you will quit the uh quit the program and current sum is zero so for example I enter 300 okay and now current sum becomes 300 okay and for example I enter minus uh 2 or 340 then current sum becomes 40 okay so it will go on keeping the sum or making the sum plus 80 so it'll add to this 80 once again and then for example 120 it will add 120 to the sum so this code will help us to make uh sum of numbers which user will enter but as soon as I enter zero you see here uh then the while loop is no more valid because this condition becomes false and then user will exits so when I press zero the sum is 160 which is true and while loop is ended and condition is false and I'm I'm out of loop okay so in this way you can use while Loops now there is one more kind of loop in uh python uh which are called for Loop and for example I have a list called B is equal to in the list I have 2 comma 4 five some numbers okay I'm just taking some random numbers here and for example I want to print all these numbers in the list but one by one okay so what I can do I can use a for Loop and for Loop how I can declare with just this four and then I will declare a variable which will hold the value of these elements one by one okay so for example I new M this is defined by me okay and what this does is this will hold the value of uh elements in the list one by one and then write in this in operator I have shown you how it works in the last video if you don't know and then just write B which is our list which contains these values okay and then what I'm going to do once again I forgot this colon I somehow I keep on forgetting this colum and then I will print num because this num holds the value well holds uh the list value one by one okay and I will just execute it and you see my print function prints the values in the list one by one by one right so in this way you can use for Loop and while loop and both of the loop you can use interchangeably so it's uh you know both Loop Works uh in the same way but the while loop the difference is in between while loop and for Loop is why when you are using while loop it uh you know uh it waits for the condition to to be true and it will keep on executing your code while your condition is true right and if condition is false it will go out of the loop and for Loop there is no uh you know condition it will just list out the you know values you give here okay hello guys welcome once again in this video I'm going to show you what is a function how to use a function and why we use function in Python so first of all what is a function so let's see what is a definition of function a function is a group of statement that together performs a specific task so basically we write a function to do a particular task again and again without reason writing the same code again and again and functions make your code readable and you know uh maintainable maintainable means uh if you want to uh you know change something in your code by writing functions it's easy to maintain your code okay so always remember whenever you want to write a specific uh logic or code again and again or more than once use a function instead okay so let's see how we can define a function so in Python you can define a function like this you need to use a uh keyword which is Def and then uh you give a space and give a function name and then in the brackets you give uh something called arguments okay so whatever you give in the brackets these are called arguments and there is no limits to arguments arguments uh you can Define any number of argument which you want to pass to a function and then a semicon and then comes the statements statements are the piece of code which you write inside a function now suppose I want to make a function to print uh hello to some name so either I can do print as we have been seeing that I can use print and I can say hello hello and the name for example I want to say hello Mark right so and I can print it but for example I have 25 names or 100 names which I want to say hello and I don't want to rewrite this print again and again by the way this print is also a function and we are passing the string as an argument to this print but print is a builtin function which I have shown you in the previous video what are builtin functions and how to use builtin function now let's make our function and what function we Define are called user defined function so we will Define a function for example call we will call our function Def and then name our name of our function will be hello for example okay and what we are going to do we are going to pass a variable so you can name your variable or any name you can give any name to your variable for example name or X or why or whatever you want to give an argument you can name your argument uh depend depending upon your wish so uh I will name my argument as name because it's more logical because I want to print name right and then I give this colon okay now after this colon inside the function we write statement so what we want to do we want to print hello and the name whatever we pass in a function right so we will say hello and print and then we pass this argument whatever argument will you will pass you will pass this argument to the print function and then what we want that uh we want to print hello and whatever name we will pass okay now I will just uh run this function or how we can use this function so function is defined now okay now how we can use this function we can can just call this function hello and then we can pass a name which is a string right so we want to pass uh function which takes a string okay so for example I say Mark okay and I press enter and it says hello Mark okay and once again I can just once again call hello and this time I pass a different name for example John and it says hello John and in a similar way you can pass any name it print other names also so what this for function has done for us it makes our code really you know readable because we are not R writing this uh piece of code which is print for example suppose you want to uh perform uh you know 10 or 20 line of code in one go and this these 20 line of code perform a particular logic and you don't want to you know write rewrite these 20 line of code again and again so you can use a function instead to enclose these 20 line of code and then you can use this function so that you don't have to write this 20 line of code again again again and again you can just call a function by its name if it takes an argument you can pass the argument and then it will give you the result right now it's not necessary that you always has to pass any argument you can define a function without any argument also right so always remember a function can have zero argument or any number of arguments minimum is zero or no argument and maximum is depending upon you okay now uh there is a and one more thing I want to say here is function don't uh take only strings they can take numbers so let's uh make a little bit useful function to add two numbers so I will just Define a function by DF and I will uh name my function as add function okay and this will take two argument for example X and Y so I will just separate my arguments by a comma and then I will give a give this colon here and then I want to print the result okay so what I can say is I can return and return means giving the answer okay simply giving the answer and what I want to return I want to return the addition of x + y okay and now I will press enter two times that means my function is defined now I can use this function to add two values so I will call this function add and I want to add for example 100 and 500 okay and what with will what this will do it will add 100 500 and it will return the answer so if when it Returns the answer you can save your answer in some other variables for example I can define a variable called sum and I can save this sum in this variable okay so for example I Define a variable called sum 1 is equal to add 100 comma 500 and I can press enter now my sum is in my sum one variable so I can print my sum one like this sum one and it gives 600 so what this function has done for us add function it has taken X and Y so X is assigned or 100 is assigned to X and 500 is assigned to Y and then it adds the value of X and Y which is 100 plus 500 and it gives the result return the result and when a function return any result you can save it into another variable okay so it has saved uh this result into the sum variable and it returns and same thing you can do again and again so for example you want to add some other numbers for example 234 and 333 you can do it like this and you can call sum two and give will give you the result okay hello guys in the last video I have shown you how to use and how to define a function in Python in this video also I'm going to continue with functions and I'm going to show you how to use some other features in functions like default parameter and multiple parameters in function so let's get started in the last video I've shown you how you can declare a function so you can declare a function in Python like this def for example I want to make a function to print out the score of a student so I can say student uh score for example this is the name of my function and in this uh brackets I can pass parameters right for example name and score okay and then this colon and inside this uh function we can write the definition or the code to our function for example I want to print something print the student name and score I can just write the or something like name scored this much amount of uh marks so I can just write name and then comma and then scor and then comma this should be score right not scare comma marks right and this is simple you have already understood I think the concept of uh you know defining the function and how to print these values right and if I call this function it will just give me the answer for example I pass a name as Mark and score as 70% and it says marks Cod this much amount of marks right but sometimes you want that uh there are some default value which are already initializing these parameters for example in the case of databases it's a bad idea to save blank values or null values in the database so and you cannot depend upon the user that he can Define or you cannot you know be sure that user will Define a parameter for every function so what you can do in Python is you can Define default parameter so once again I'm going to take this function but I will initialize this function with some value so that it will not be null at any point for example Tom as name and score is equal to zero for example right now I can just print the score and name and the default value will remain just the same right and my function is defined and now when I use this function and even if I don't pass any parameter generally you have to pass the parameter when you define a function and when you define a function with parameters but when you initialize a function with default value you uh even skip passing the values to your parameter and once I call this function it says Tom scored zero marks because Tom is a default value and score of Tom is zero okay so Tom is a default name and zero is default Mark and so you can ask what is the purpose of this the purpose of this is if the user will not pass any value as an argument then default value will be taken otherwise if the user enters some valid name for example Mark and 85 marks and once again you can see it's printing marks code 85 marks okay so it has overwritten this tomor as Mark the name it has overwritten as Mark and the score is overwritten by 85 right now you can choose to you know pass the first parameter and skip the second parameter for example you can just pass Mark here and it says marks Code Zero marks because this it has taken as the first parameter and it has over it in the name but we haven't passed our score so it will take the score as default which is zero so it will print like this now for for example you want to pass this score and you want the name to be default what you can do once again take the function and this time just right score is equal to 99 for example it says Tom scored 99 marks right so Tom is the default value here and 99 is uh overwritten uh or zero is overwritten by 99 which you passed okay so this is about default uh parameter passing now there is a concept of uh passing multiple parameters to a function and how you can pass these multiple parameter for example uh you I will take the same example of student and you want to pass some parameters so I want to pass uh name of the student and I want to pass multiple score of the student for example students has um scored uh you know marks in language marks in programming marks in maths or marks in some other subject and you want to pass the parameters but you don't know the number of subject uh you know student uh is uh you know taking so what you can do in this condition you can just use the name as it is but for example you want to pass multiple scores you can just use estx and this estx says python that this parameter will be passed one as one parameter also or multiple parameters also so one or more parameter so our estx says uh to the python that this score can be multiple also or even it can be uh one also okay and it's saying invalid invalid uh syntax let's see what's the error yeah I have forgotten the def keyword to define a function so I will Define a function Def and then I will call This And once again I can print uh for example I will print first of all the name print name and then I will print scores okay and I will just call this function for example student and I will pass uh name as once again Mark and scores for example he has taken uh language course so he scored 55 marks in this language course he has taken uh Math course he has scored 77 marks he has taken uh programming course he scored 90 marks he has taken other courses physics 67 marks or multiple courses okay so this is a wild card kind of Entry which says you can pass one or more parameters right and you see it has printed first of all the name of the student which is Mark and then these these marks as a tuple if you don't know what is a tuple tle is just like a list but you cannot addit a list or you cannot even delete an element from a list you can just read this element from a tle right so tle is just like a list but the only difference is you cannot modify or delete any elements from this tle so this is uh tle right so in this way you can uh even uh pass multiple values using this estx and it's not necessary that you need or to pass only two parameters you can just pass one parameter for example dep score something like this asri score it will be valid I forgot this called colon like this and what's the problem here so okay I left some indent here which it's saying unexpected indentation okay and you want to print score it will be totally valid when you uh call this function score and you can pass multiple values one comma 3 some some marks multiple marks right and it will give you a toule so in this way you can pass default parameters to a function and you can pass multiple parameters to a function in Python hello guys in this video we are going to learn about creating classes and using classes in Python now we all know that python is an objectoriented programming language and in objectoriented programming language a class is an extensible program code template for creating object providing initial values of states and implementations of Behavior now this definition of class you may think that you know what is this so let me give you example suppose you want to create a class or you want to save some data uh for a person now person has some attribute for example first name last name and uh for example you want to print uh the person's name so a class can also have member functions or member methods right so we are going to take this example of person and we are going to create a person class and we are going to uh give the attribute to this class as first name and last name and we will try to print the person's name okay so let's see how we can create a class in Python now in Python the class is created by using the word word class itself and then you give the name to the class in our case we want to give uh the name to the class is person so we will give this person name to the class and then this colon comes and inside this class you can Define member functions or member variables now how you can uh Define member functions in a class you just need to give for example I want to uh print the name first name and last name of the person I can create a I can create a method to print this so I can create a function like this print full name for example this is the function name but we all know that function whenever we want to define a function we use def in front of a function right and then we can pass some argument here now whenever we use a function inside a class the first argument we give to the member function is a keyword called self and this self is nothing but a pointer or the self points to the class itself okay so this class whenever we create an instance of a class which I'm going to show you how you can create an instance or object of a class this self point to the object of the class so just wait for a while and you will understand and then you the name of the argument so for example first name and last name okay then colon and then you can give the definition to the class so for example I want to um set the value of first name and last name so what I can do is I can use use the same keyword self to call the first name variable and last name variable of the class this should be last right and then we use a DOT separator to call them so for example we want to set the first name we just use self and first name is equal to First name and then in a similar way we can just Define the second variable or SEC setting the second variable which is last name so self. last name is equal to last name okay it's better to rename this function as set full name okay so what this function is doing it's setting the first name and last name to the variables in a class or member variables in a class which are first name and last name so whatever argument you pass here first name and last name will be passed to the member variable of the class which are also first name and last name okay now we have already created this class and now we are going to create a second member fun function to print this um first name and last name or full name okay so we will Define a second function called print full name and this will not take any argument and we are just going to return or we are just going to print uh the first name and last name okay so we are going to print here first name so to call any member function or member variable of a class you just need to use self and self just indicates that it's a member variable or member of a class okay so always use self and we are going to print uh self. first name which is the first name and then we can just give a little space here to separate them first name and last name and then you can just take the last name and print it now in order to create an instance of a class so how you can create an instance of a class this is just a definition of the class right you have done defined the definition of the class right now in order to create the instance of a class so that we can use this class we can use this class by creating the instance of the class so whenever you want to end the class and you want to execute in this class just remember that you start from the corner here right so and don't forget about indentation in uh this class declaration so when you start with no indentation here then you are in the new line and you are outside the class okay now in order to create a instance of uh the class or object of the class we can just Define the object name for example person name so this is the object name or instance name of a class we want to give and then is equal to the name of the class and then this these brackets okay and this will create the object of person class with a name person name okay so let's try to run the program and let's see if it contains any error or not save okay and it doesn't contain any error so it's running fine but we want to use the member function of the class so how we can use this member function of a class we can use the member function of a class using this instance of the class or object of the class okay so just take the object of the class and in the next line we just copy the object of the class Dot and then we can see there are two options which are member functions of the class print full name and set name so I'm going to take set name set name of the class function so this is the member function of a person class and we are accessing this member function using the instance or object of the class okay and in between we give dots separator so that now this instance can call the member functions or member variable of the class and now we can set the first name and last name for example programming is the first name and knowledge is this last name okay okay so we have set the first name and last name of the person and just remember that this is used as a default so this uh will be automatically taken by by your class and these are the two important uh you know two important argument which you need to uh pass and this will be taken automatically okay so self is by default for a member function invisible in a sense that we you just need to pass the other arguments except for the self argument so first name we passed as programming and last name we passed as knowledge so this is setting the first name and last name of a person now in order to print this name we can once again use the instance or object of a class dot we can call the second function of a class called print name which takes no argument right and now let's try to save the program and run this so run this and what it's saying it's saying that this member function which you are calling which is print full name doesn't have any argument which is zero argument right takes zero argument but one was given right so I intentionally leave the self in this function so that we can see this error so always remember you have to at least pass self whenever you define a member function in a class so if even if it doesn't take any parameter or argument you need to pass self to a member function okay now when I save the program and run it it will run fine right and it prints the name programming space knowledge which I wanted to print right so always remember few things whenever you define a member function in a class always use self as a first argument and then give your rest of the argument and even if your function or member function doesn't take any argument you just or you must pass at least one argument which is self okay on what is self self is just a pointer to the class instance so this self is pointing to this person name and this is called class instance and whenever we create the class instance it will assign this person here at the place of self and then it will be name will be set as person name which is this instance do first name Person name. last name and then whenever we call this function it will print person name do first name person name do last name so in this way you can use or you can create classes in Python there is lot more uh in defining an creating or using classes in Python this is just uh starting or create how to create a class in Python so I will uh show you how to uh use other uh functionalities in class in later videos and hopefully you understood the concept of the class hello guys in the last video I've shown you how to use classes in Python now in this video I'm going to show you how you can use Constructors and destructors with classes in Python these Constructor and Destructor are also called initialization and deletion member functions of the class so first of all let's see how we can use Constructor in Python and the last video I have given you a small little example of class and how to create a class CL and we have created a person class and we have created two member Function One member function to set the values and other member function to print the name right so first member function we named it as set full name and in this function we we were passing two arguments first name and last name and this print full name member function we were using to print the name of the person and then I have shown you how you can create an instance or object of a class uh like this and how to use these member function like this using the instance of the glass now I'm going to take the same example to show you how you can use Constructor with this same class so first of all to define a con structor you just use normal function definition with DF and then you give double underscore in it then double underscore and give the bracket and give colon here and in here as any other uh member function you can perform any task so for example I want to uh print something that uh our class is created for example so I'm just printing our class is created not like this but class is created right so first of all what is the use of this Constructor generally in programming languages Constructors are used to initialize the value okay so whenever you create the instance of a class so we are creating the instance of a class here as soon as you create the instance of a class this Constructor is called immediately so you don't need to explicitly call The Constructor of a class you may call it or you may not call it but don't forget to give the self argument as I have shown you in the last video that you need to uh use this keyword self with every member function of a class and this indicates to the instance of a class so program person name will be replaced by selfia in the last video I've shown you so as soon as I create an instance of a class this in it member function will be automatically called so you don't need to explicitly call this member function so I'm going to run this save run and you can see here it gives us the result our class is created even though we haven't called our init member function explicitly it's printing first this our class is created that means as soon as you create this instance of a class this member function is called right so always remember the Constructor definition is reserved here with double underscore in it and this also ends with double underscore so this is the reserve keyword in Python to called Constructor you cannot give any definition or any name to the Constructor it's reserved which is this one in a same way we can use Destructor to destroy the instance of a class okay so and destructors are also called whenever a instance is out of scope so let me show you how you can call Destructor first so Destructor also you can just Define it as a normal function with two underscore D and this these two underscores and then just call Self here keyword and then give colon here and then you can just uh write the functionality of the code so for example I will print uh I can print our class instance is destroyed so our class object is destroyed and this is also reserved in Python with double uncore deel and uh this also ends with double underscore and this function is also automatically called whenever your class or in class instance goes out of scope out of scope means that this uh class instance is is no longer used so in here after this code our class instance scope is completed because this is no longer used in further code because there is no code obviously right then whenever this uh class or person name goes out of scope this deletion member function will be called automatically and it uh just basically the use of this Destructor or deletion member function is to a garbage collection kind of U uh use so it just collects the garbage or all the resources and destroy all the resources which are used by this instance which is person name so I will just save my program and run it and you can see here whenever I I just created this it's not printing this deletion member message here but whenever you can you use the instance of a class dot underscore uncore deleting so underscore deletion member and then whenever you run this this is printed our class object is destroyed so whenever you use this um deletion member function it destroys all the resources which are used by your class instance okay so this is the use of this Destroyer or Destructor now it's not uh you know compulsory that you cannot pass any uh argument with this initialization you can pass argument for example I can pass uh for example I can pass any argument uh for example I want to pass ID of uh the person I'm I want I'm using or I want to print the name of so I want to initialize the ID of a person like this I can just uh pass this argument with my initialization member function and then I can just use self dot ID is equal to ID and then I can call this ID uh in my Destructor also so for example uh this Destructor can also take some arguments and we can call this self. ID for example I will print this ID here and then I can just print the message right so it's not necessary that uh our initialization or our Constructor has to uh has to initialize with no argument it can take any number of argument as an initialization but whenever you give this argument in the initialization here uh then whenever you create the instance you need to pass the that argument here so we are creating the instance here and because the initialization takes this one argument which is ID we are passing five as an ID here in the initialization okay so this is how you can initialize it and now whenever you run your program once again you can see here our class is created once again and as soon as this this class is created we are setting the ID of a person as we pass in the Constructor which is here and then self. ID is set here and whenever we call the destructor we are once again calling the ID of uh the person which is this one and then printing the message this one right so in this way you can use Constructor and Destructor or initializer or and deletion hello guys in this video I'm going to show you what is inheritance and what are are subclasses and super classes in Python so we all know that python is an object oriented programming language and inheritance is one of the most important Concepts in object oriented programming language now what is inheritance inheritance allows us to define a class in terms of another class which makes it easier to create and maintain our application so for example uh you have created a class which is generic in nature and you want to you reuse it again and again in different situations you can use inheritance to uh you know show or inherit some of the trades or all the trades from the class to your a class which you want to make so you don't need to write a class from the scratch you can inherit from the super class the class from which we are inheriting is called a super class and the class which is inheriting is called a subass so let me give you an example for example I create a class which I call this is a parent parent okay and this class has two values or two variables value one is equal to uh let's say it's a string so I say this is value one and and in the same way I will Define value two this should be value right so I will Define value two variable which is the second member variable of this class and this is value two okay now for example I want to reuse the variables which are their member variables which are there in the parent class and I want to create a second class and I want to reuse these member variables in other class how we can do it so I will Define uh second class for example class and I will name it as child and this class class wants to reuse these member variables from the parent class so what I can do is I can inherit from the parent class in the child class and to inherit the parent class in the child class we just use these two brackets and inside these two brackets we just pass the name of the class from which we want to inherit so in this case we want to inherit from this parent class so we can just pass this parent class name and in the brackets right now we can use this values from the instance of our child class so for example I don't want to do anything here I can just write Pass and Pass if you don't know what is pass pass is just a placeholder so uh you know it doesn't do anything but if suppose you don't want to implement your class and you want to uh leave your class as it is then pass will help you to avoid any errors so let's see what happens when we don't use pass here and I will save my program and run it and it says unexpected indent this indent should not be here run it once again so it shows an error and what is the error because we haven't given uh pass here it uh expect or python expect that we Define some you know definitions of member variables or member functions here so what we can use is we can use pass in order to avoid any errors now whenever we want to uh make a child class instance for example child like this is equal to and we want to make the instance of this child class we can make it like this so we just can make the instance child you can just give underscore to differentiate this instance from this class but let's uh first create an instance of the parent class and then we will create the instance of child parent and parent is equal to parent so we have created the instance of parent class and from this instance we can call parent dot value one which is this one and we just want to print this parent. value one so we can just print and inside our print we can just pass this parent. print one here and let's uh say we will Define it this child class later so I will just uh run this once again and it prints this is value one okay in a similar manner you can call second value from parent and this you already know right now suppose child instance want to use value one and value two I create the instance of child and because I'm inheriting from my parent class this value one or and value two which are member member variables of this parent class is available to use from the instance of child class also because by inheritance we are allowing the the super class which is this parent class from which we are inheriting so the class from which we are inheriting is called super class and the class which is inheriting from Super class is called subclass so from this instance we can call this member Val values or variables from the parent class so I can just once again copy this uh print value one but this time I will use the instance of child class and you can see here I haven't implemented anything in the child glass except the inheritance right so I will just run the program once again and it it prints this double times so for example I delete this to illustrate this example clearly I will once again run this and it prints this is value one and this is value two which is printed by the instance of child class right that means uh we can use the member variables or member values of parent class when we inherit from parent class to a child class right now you can inherit from multiple classes so for example you have parent class one you have parent class two and uh you want to inherit from both the classes you can inherit from parent one like this comma parent two like this okay so you can even inherit from two classes or multiple classes at the same time you just need to separate those parent class by this comma okay so just remember this so in this way you can use inheritance in Python and I hope you have enjoyed this video please wait comment and subscribe and bye for now