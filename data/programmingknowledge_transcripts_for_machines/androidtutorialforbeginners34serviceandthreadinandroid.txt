hello guys welcome to the next video tutorial on Android app development for beginners in the last video we have seen what are services in Android and how we can create a started service in Android now in this video we will talk about using services with threads so in the last video I've told you that service is a background task which will run in the background and which has nothing to do with your UI but still it's the part of your process it's not a different process so it will run inside your main process now for example if your service has some blocking action for example you wait for uh some time in a synchronized manner then it will block your user interface actions for this time because it's the part of your process and it's not running in the different thread so let's see what uh this error is which I'm talking about and then we will see how we can solve this problem using threads with services so first of all uh I will start with my uh last uh project which I've created in the last video for uh starting services and stopping surfaces so I will uh take the same project so first of all what I'm going to do is I'm going to take a text addit in my activity and I will change the layout width of this text as fill parent for example and this text edit I will use to give some input from the user side while my service is running okay now what I'm going to do is I'm going to go to my service class so this was the class which I created in in the last video which extends from the service and I have shown you how to create this on start command and on Destroy method and this I binder and on create method so first of all I will go inside my on start command and in here what I'm going to do is I'm going to create some code which takes uh some time or it will block my service for some time so I will uh take a synchronized and I will pass this context to it and inside my synchronize I will wait for some time so I will call a method called wait and it takes time in milliseconds so for example you want to give time for 10 seconds you can just give 10,000 okay so for us uh I think 20 second will be enough to wait and whenever you add this weight method you need to include a TR catch block to handle this method so just surround this by TR catch block and everything will be okay so what this uh code will do is it will uh wait for 20 second in a synchronized manner so it will block your service for 20 second and it will not uh allow your user interface to do anything so let's run uh this uh app and let's see what happens so my app is running now and for example now I can input some text here right and I can delete some text from here but observe when I click this start button I will click the start button and then my service will start and when my service will start I cannot enter anything inside this added text because uh the code is waiting for 20 second and it will give this message something like this that your app isn't responding you want to wait or you want to close the app for example I will wait for some time because I know my service will run for uh 20 second and after 20 second this uh service will be destroyed and I can once again give this input once again okay so I think you understand the problem when I click or when I start the service which is blocking I cannot perform any task in my UI this is the problem and you will get this uh message called your uh uh app is not responding do you want to close or you want to wait so now to solve this problem what we can do is we can create our service or we can start our service inside a different thread okay so when we use or when we start our service in a thread it's independent from our main process and this will solve our problem so let's see how we can solve it so I will go to my uh the service class once again and inside my the service class I will create uh class which will handle my thread so final class and this will be the thread class so the thread and uh this class will contain one variable which I will call it as start ID or service ID better okay so service ID and this we will see why I'm doing this and now I will create a Constructor so the thread this is my Constructor and I will pass one argument here and this will be same as service ID and what I want to do is whatever I pass as a Constructor argument I want to uh pass it to this variable so I will just write this dot service ID is equal to service ID okay now what I'm going to to do is because I want to create a thread out of it I will implement the runnable method okay so implements runable and when you implement runable to your class you need to implement a method called run so just click this bulb here and implement this run method okay and inside my run method what I'm going to do is I'm going to just cut this code which I have written in my onart command and paste it here inside my run method okay now there's one more thing that there can be multiple Services running in your app right and how will you know that which service you want to uh end or close so what we can do here is uh just after this try catch block inside my synchronized I can uh call a method called stop self okay and this uh will stop the service okay and it can take an an argument which is the service ID so whenever you create a service your Android uh system will create a service ID for this and using the service ID we can close uh this service okay so just add this uh code here now this service ID where can you find it you see in your on start command there is a parameter called start ID and this will be your service ID so now we have created the code for our thread now we can uh create a thread and start it and then try to run our program so I will create a thread object thread is equal to new thread and I will call my custom thread class so the thread and it takes one argument which is the service ID so I'm going to provide this start ID here okay and now I just simply need to use this uh thread object to start the thread so thread do start it will start the thread right now I'm going to run my program once again and my app is running once again now so you can observe I can enter some text without starting the service and when I start the service and still I can enter this uh text here okay so because this uh service is running in different thread I can perform actions in the UI and my service is running in the background in different threads so both action can be done at the same time and after 20 second you will see the service destroyed method which is coming from this code which is this stop self uh uh method right so you can perform your actions in UI and you can start the service and you can still perform your actions in the UI so in this way you can use threads with your ser services in Android I hope you enjoyed this video please rate comment subscribe and bye for now