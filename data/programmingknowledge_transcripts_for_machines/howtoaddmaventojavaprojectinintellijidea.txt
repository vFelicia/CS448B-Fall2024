in this video we will be talking about the tools that you have to install in your PC to get started you working with the mavic okay so first thing first you need Java uh because it's a Java based uh tool navigation so you require Java in your PC so to install Java uh you can just go here and in your browser and just write down wait download Java jdk okay so first thing uh first link will come from Oracle itself okay just open it and here you can see uh whichever operating system that you are using select according to according to that uh if you are using Windows select windows or Linux or Mac OS right now I'm using Windows 11 so I will select windows and I will again in any of these three options available you can download anyone uh so I like to install the direct installer for that Java and I will just click click here and it will start downloading the jdk file for my PC okay so I will not download it again as I have downloaded okay so wait a minute let me cancel it after uh downloading this uh wait a minute I will show you uh just in case uh it is downloading uh now okay so if you have if you guys are liking this series so do hit that like button and share with you share it with your friends who wants to learn Maven okay uh okay wait uh as I told you I have already installed jdk in my PC so you don't uh need to do anything or you just come here come at this site and click on the x 24 x 64 installer and click on this link it will start download the jdk file for for the latest version which is 19 for now at the time of recording of this lecture and that is a exe file that is executable file okay just go inside your uh I'm a file explorer and go inside uh your C drive and after C drive you can go inside your program files and inside program files you can find Java Java folder is being created okay after the installation just open the Java file you can see jdk 19 is here installed in my PC and I will just go double click on that folder and after in this folder uh as you can see bin folder is there okay so you you just double click on it and inside these all these Java files are jdk files are there so you just need to click on this address bar and click Ctrl C so to copy this path and after copying this path just go come in come in your start and write edit edit okay so after writing edit you can see edit the system environment variables is uh best match comes over here you just click on it and this window will pop up and after here here you can click on this edit environment variables and so now we have two options you can set this environment variable path for the user variables like this is my user if you have if you are using multiple users in your inside your windows so then you can choose this path so and if you are using only single user in your windows you can choose the system variable service I prefer system variables because in in some cases there are multiple users inside your PC then you have to create a that separate separate path for the each user so instead of creating that you just come over a system variables and click on the path click on edit click on new and just paste paste this okay so this path you have to paste it over here oh I will not pasting pasting as I have already done that part you just paste it over here click on OK and just to ensure come here here path as well click on edit click on new Click Cash control V to paste it and just say okay okay and okay so you have to say okay okay and you will get out of this window and after doing all these things uh you can see exe file is also downloaded just open I will show you and I will not install as I I literally installed in my PC already uh I'll just show you okay so here you can see it it's giving me message that it is already installed on the PC do you want to reinstall it I will say no you just go ahead and say yes yes or next next so the Java will be installed on your PC that's it okay so this is a about Java okay so after installing Java uh you have to check whether all everything is good or you have your path is set up and you are good to go for the first checklist of our tools so for that verification you just come on come on start and click right click and as you can see terminal is here you can click on that and the terminal will get open and you just write one command Java minus minus over select hit enter and it should show the Java version that you have installed right now in your PC okay so if everything goes fine you should see this message or else if there are again some messages where a Java is not recognized as a command in that case you want you should you have you should miss some steps you go back and check this video again and try to install again okay so this is for our first Tool uh the second tool is of course Maven you are learning Maven you have to install Maven in your PC right so click on the new tab and just type download Navin sorry in my typo just give me all right okay so first link come which is official link from Apache you will just open this and after opening this these are the six system requirements uh just pause the video and see what are the system requirements that you you require as you say first request system requirement is jdk itself that we have downloaded in our first step so we are good to go for the jdk uh so there is no memory requirement uh so as many memory you have it's fine uh this requirements is there so you approximately 10 NP is required uh to Maven a solution itself so I guess no one is is there who doesn't have 10 MB of space inside this disk okay an operating system no minimum requirement uh startup scripts are included such as shell scripts and windows batch file so operating system you can use anyone okay so here you can see they have given four options you can download any one uh I personally like binary zip archive file so I will just come here and click on this link the this will download the Apache Maven zip file uh once installed I will go and click open when done or instead I will go inside my downloads folder I will click here okay so this you can see so first of all I need to extract this extract all uh I will browse just extract on like this and click on OK so it will extract everything what is inside that zip file so here you can see uh this file is being extracted uh I will just do one thing uh I will just cut this out and after cutting this I will come inside my C drive come inside my program files and inside my Java folder itself that we have seen all right program files inside Java I will paste that here itself okay I will paste it paste that extracted folder over here and now you have to do one thing we have to do is click on it click on bin and whatever inside is click on this path Ctrl C okay wait Ctrl C you have to copy that part and again come into the start and write edit edit edit the system where environment variables environment variables and just go inside path click on edit click on new and paste that path and just place okay and come down here and come here click on new click on Ctrl V and click OK OK and again okay so this part is done we have set the environment variables now after doing this we have to check whether everything is okay so for that again we have one command uh so let me just restart my terminal so that it knows the maven is installed in your PC okay and so the command is m v n minus minus version okay uh there is no and if you need to run this program this okay so Java home is a environment variable is not defined correctly so first let me go and rectify this error and I will come back okay okay so the problem that causes that Maven dot is is the internal command error so uh we have done all this right so we come into the edit we go into this environment variables and we are going inside our path we are clicking on edit and we are adding that path over here okay so this part this thing we have done correctly okay up to that I I hope you got this so one thing uh if you come over inside the terminal and just write mvn minus minus version and wait for a second okay now inside of a what Maven does is Maven come here inside our environment variables and check for the one variable name and Java home so we have to create that Java home variable so how to create it again come inside your edit and click come here and just click on new and set the variable name as Java underscore home all caps and the value should be the folder all right so the folder is as I showed you jdk 19 so don't go inside the bin just get this much path Ctrl C and get inside your variables and Ctrl V and just click OK after clicking OK so you can see one variable will got created over here and as that same variable you have to create over here as well Java home and this is the variable and once you create click on OK click on ok just come clear this out come inside your terminal and just write mvn minus minus version and hit enter so now I hope you see Apache Maven 3.9.0 and this is the binary code and the maven home this is and the Java version is also telling us and it is also telling us where Java is installed in this PC and some default local and platform encoding to tf8 okay and the OS number OS name is also telling us okay so this many information it gives you I hope you also get this information when when you try to run this command okay so we have done installing Maven done in short Java and we now again we required git okay so why to why to use git git is a very powerful word version controls management tool okay so you just come in here itself and now right download it and hit enter so first thing uh first link you see is the official from git distributed it is the new distributed is the new center live okay so you can see it automatically detects your OS and gives you the link for your OS so once you click on the download for Windows uh click here to download the latest this click here to download and it will download the 50mb file which is like the executable file once it it got downloaded you just click on it uh let let the default installation be there click on okay okay next next this will install git in your PC successfully and once it installed it is very a powerful tool we will see when we are started using Maven and build started building some projects using Maven and Java you can see uh it is downloaded just click on it and go next next and install this tool as well okay and last last checklist is any IDE your preference you if you want vs code you can use vs code if you want Eclipse you can use Eclipse you can you can also use I guess very much powerful and very good looking ID so uh I would also suggest you to download the IntelliJ IDEA if you are following me and if you are if you want to follow this course okay so I'm assuming that you are you have already downloaded IntelliJ IDEA if not let me just quickly give you uh overview how you can download it just come here and write download IntelliJ IDEA if you hit enter first link comes from judgment itself just click on it and you will get to the IntelliJ IDEA download page uh now according to your operating system you can choose anywhere either Windows Mac OS Linux and I am currently now I am using Windows 11 that's why I will click on Windows and there are two editions of this IDE one is Ultimate one and one is Community Edition uh so I will download the Community Edition because it is the free one and open source also and but the ultimate one is the you get more features and 30day trial trial also so if you want you can download but it is paid I want you can compare all these uh features that you get in a paid one and a free one also so go ahead and click on download exe file or zip file whatever you want it will start download it is around 700 MB uh it depends upon your download speed it will get downloaded and just go ahead and click next next your IDE will get installed in your system okay I will doing cancel because I have downloaded already okay so assuming that you have downloaded this idea and if you if you want to follow along this code uh let's get let's go in our IDE and create our first Maven project okay all right let's go so I will come into my IDE first time if you are opening this you will see one window like this and there are no project here because since I work working along Java so there are some Java projects also in kotlin budgets also so ignore this one uh you just click on uh projects tab click on new project and you just have to name your project right so I will write my I'll adjust my first mapping okay so uh select the location uh wherever you want to store this project so I didn't build paper I will just go ahead into my desktop I will create one folder name as maven and inside that I will store my project okay you can choose anywhere anywhere you want uh so the language of this development is Java build system is a maven remember build system to say selected as Maven uh and because we are working with Maven itself and we need jdk so here uh whatever jdks which are installed in your system it will show all the jdk over here select whatever jdk you want I will go with the latest 119 and if if there is no jdk listed over here you can just go ahead and download the jdk and if there is any jdk downloaded install downloaded and installed in your PC already just go ahead and add jdk folder and give the path to the IntelliJ IDEA where your jdk resides okay I will just go with 19 add sample code Okay add one settings uh I don't need anything okay and I will just hit create all right it is working like let it finish it will download the plugins which are required for the maven project to run it is downloading here you can see the background task I will show you waiting for Maven import completion and Maven plugins will get downloaded Okay so but if you are running this first time it will take time some time let it be uh by the time I will give you the IDE over you if you are using first time uh so this is how the IntelliJ IDEA looks like uh here you have the project tab where all those uh directories I've listed over here in a such a beautiful manner you can switch a switch between this idea Java or and here's the main file main domain.java file where uh our Java code is written just a simple hello world which is given by IntelliJ IDEA itself just to quick start our the development process and here is a project tab you can hide and an ID so that you can get the more view of this your file and after that uh one more is one more thing is here you can see Maven Maven tab is there if you click on it it will show you all those life cycles uh and the life cycles I hope you watched the previous video where we have discussed all those like uh build life cycles clean validate compilation and I have given you the theoretical knowledge of that these all these life cycles also you can come and I will show you how to use this tab also uh but first I guess yeah it's over and plugins also here you can see clean compiler deploy install jar all this plugins are also there we will have separate plugins video okay now uh I guess the processing is done yeah our project is ready to go and what we have done uh is we have created our first project now we have to understand the dependencies okay so I hope you watched the previous video uh where I discuss about how to add these dependencies and how dependent dependencies looks like how what are the types of dependencies okay so let's go and create our first dependencies so if you recall uh I have told you that to create a dependencies how to manage the dependencies or you have one file called palm.xml okay so this is our Maven project you can see we have one pom.xml file just double click on it it will open that form.xml file so since this is a file extension is dot XML so extreme XML files contains the tags okay so these are the tags so so the parent tag is the project one so under which all these uh tags are written so our parent tag is Project under which model version is there uh this is XML scheme namespace schemas which are written on in the web itself if you go go on this site you can found all those schemas and group ID is there artifact ID for our project artifact ID is the project name itself and version is given by the Integrity itself okay and some properties of our project all right this is the file which is generated by the IntelliJ IDEA and given to us so now if I want to create some dependencies in my project how can I add dependencies over here okay so you see uh you just have to wait a second okay so now if you want to create some dependencies inside this so there are many ways to create the differential one way is straightforward you can you just go here and write dependencies so it will create the dependencies tag and uh after that and one thing we have the dependencies as our parent tag inside which all those dependencies reside is here as you can see dependency is the parent type under which dependency tag is there so we have to write the dependency type okay we write dependence okay and uh the thing because I love Italian idea is this it will automatically give me the group ID and artifact ID that you want to enter so let's enter uh let's create the stream framework uh dependency for our project I will write at a artifact ID at Spring slash spring SPI and G spring slash code okay uh Let It Be uh the version I will use this okay I am getting married when you see uh it's fine uh so you see this is the one way you can create the dependencies you you just you just need to go ahead and write start writing in this uh like if I write J unit uh that is one word uh dependencies uh wait wait let me clear this out so that interview had a get that we are writing this for the first time okay J junit dependency this is our this is over there yes so I have I have added added junit dependency in my project okay so this is the one way you can add the dependencies but here you have to uh know the name of that artifact uh article ID means the dependency name to be precise and again the rest of the things is easy it will automatically shift the cursor to the GOP ID and come to the version and it would automatically add the scope here you can see I have not written the scope tag into it has automatically added the scope telling that uh that please use this junit dependencies for my project uh when to use in the test phase because J unit is the testing uh a related Library Auto Tool okay so here you can see we have created one dependencies so now I will give you one another way how you can add the dependencies right so if you go to the uh this code if you go into generate and it will if you go to the manage a dependency template uh okay so it will give you the dependency template I don't know what the template I just need uh wait a second manage dependencies okay we have nothing to show I guess we do it okay so add dependency button is there if you click on it uh it will show you the this tab so our project name is there my first Maven and only stable and now here you can see the search button is search bar is there you can search any framework that you want in your project over here uh you just need to write spring if you want to use ping in your project and one more thing uh these all implementation are done by the ID IntelliJ IDEA you don't have to uh worry about it you just go ahead and search the dependency name and again if you want to search any dependencies uh you just need to go and go to the maven Repository repository here you can see all these dependencies you can see any dependencies that you want to search you just go here and like spring okay and hit search Spring contact spring core all the dependencies will come and these uh IntelliJ IDEA is integrated this functionality inside their IDE so that you can come here and write the spring and get that spring if you want this spring uh you can again you can select the scope of this I integride has given me the scope to compile so I will set it as compile and again you have version you if you you want to use the previous version you can go ahead and use previous version also I will go with the latest one or the IntelliJ IDEA that provided me and if I want this spring I have selected the version I am good to go and I will just click on ADD so after I click on add this dependencies you can see these two tags have been added inside my uh com.xml file okay so now uh if this is the two way by which you can add the dependencies right so if I go into inside my Maven and if I go inside my life cycle and I will just click on install okay it will run my uh maving command and you can see it it's giving me the error I guess could not find the artifact okay so J unit uh is not found I have to use that okay okay okay wait a minute so I will just remove this dependencies I guess right let it be okay so it doesn't find my dependency of that junit okay I will click on install again now you can see there is no folder right it will here you can see process finished with exit code 1 our build failure why so I'm getting the errors oh okay okay wait a minute guys okay to rerun the maven using okay okay for more information wait a minute guys I will be back okay so guys I'll figure out the error the error causing because the spring framework spring framework dependencies so that doesn't work for that let me just add one more dependencies uh so so that you can uh get what I'm trying to tell you J unit I will add the dependency of J unit itself uh let me go ahead and add okay it's getting added okay so okay fine now uh you can see uh inside my this root folder uh previously there are two two or two folders okay life cycle and plugin only but as soon as I create this J unit dependencies and and my reload and I reload my Maven project it will it has created one more folder named dependencies inside which uh junit dependency is there okay so you can see as I as I added J unit dependencies over here you can see j18 dependencies also added my memory deposit direct folder directory structure and if I uh now if I go ahead and insert my life cycle and click on install uh it should go ahead and get this dependency and install it and yes build success Target project is also created a Target folder is also created we'll see what is Target we are having separate video on this uh what are the classes and how the this actual works we'll see but for this video I hope you got some idea about this form red XML file how to add dependencies now one more thing if you want to delete the dependency if you are just going inside this dependencies tab and uh in future you want to delete this dependencies you no more required J unit inside your project you just go ahead and come here J unit you click on the junit uh you you come over three three dots and you have the remove you can remove and as soon as you click on this you just have to come here and load mapping changes it will reload your project and see all the any dependencies got added or removed if this dependency as soon as I load my project that dependencies folder is gone because no more dependencies are required for our project okay as soon as you add no dependencies no dependencies folder will get created over here so I hope you got some idea how to add or manage the dependencies inside the IntelliJ IDEA and what is form.xml file and we'll continue this project we'll create one Java project and uh I'll see you in one live demonstration of when by creating one project using Maven okay so thank you for watching this video and I will see you in the next one