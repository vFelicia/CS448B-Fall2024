hey everyone today we're gonna talk about the events and event handling in thinker we would focus on the buying function and talk a little elaborately about the main Loop so events handling is an important part of thinker module in this video we would try to understand the basic things associated with it and in the next video we would see a related example okay so we would try to make the program a little interactive by giving user inputs from the keyboard so that would be very much done by the event handlers okay so let's start writing the code for it I'll import or I'll write from thinker import Star then I'll get my window I'll write when equals TK then I'll given a title I'll write win Dot title let the title be event handling okay so I told you I'll be telling you a little more about the main Loop so whenever you create a tincter application we have always been calling the main Loop okay at the end so why do we call the main Loop what the main Loop actually does it checks whether an event has occurred or not it checks for an event occurrence of an event so if there is some event that has occurred then the written code the code that the user has given would be executed so as the main Loop has checked for an event occurrence the program written will be executed as a response okay so you need to write the code that would be executed in response to an event okay so you write these functions called event handlers for the events that you use in your application okay now I would be creating a very similar event handler for every time I press a key on the keyboard I should get that key printed on the console okay not the printer window but the console so what I'd write is I'll write def so I'll have a function for that I'll write def pressed key and in Brackets I'll write event I'll give event as an argument and I'll write print event dot care so that simply completes what I just said I want to print whatever I clicked okay so now we would move to the bind function to call an event handler whenever an event occurs on a widget or function or method we use the bind function okay the event handler is said to be bound to that event because it's called every time the event occurs okay and how do we do that we'll just write for our window when dot bind okay and the first parameter would be the sequence so it's just a string of the form event name okay I'll just write it down I'll write here the event name is key so in double quotes I'll write key and I should give this less than uncreated on sign rounded okay that's how you write the event name and this event name can be any of tincter's events so there are many events in Winter we have enter leave button one button two or key so here it is key and then we'll have the function name okay you can see for bind we have to give sequence and then the function okay so the event handler basically so I have pressed key right pressed key as the function okay so that completes my bind function and then I'll run the main Loop I'll write win dot main Loop now whenever the main Loop would run it will check for the event so I have declared my event here as a pressed key function okay I have given it as the argument and whenever this event will occur what is my event the event is the user giving an input from the keyboard while by pressing a key okay so whenever this event occurs this function would be carried out okay this part of code would be executed as a response to the event occurrence okay so that's what should happen now let's check if that really happens whenever I click on the key I should see that key printed on the console okay let's do that so I have the sphincter blank screen okay and I'd not do anything with the screen but I just start typing something and that should be typed out on the console automatically without me taking the cursor over there okay so let's do that I'll just press D and there it is you can see it on the console then you can see t and then you can see Q and let me press a numeric let it be one I'll press shift one okay and then I can press m and I can given any character okay this is semicolon and inverted comma so that's it about this program I just wanted to show you how interactive Tinker can be and we'll see a related example in the next video thank you