hello guys welcome to the next video tutorial on C programming for beginners and in this video we will see what is a union and how we can use Union in C now in the last video we have seen how to use structures in C and Union functionally work like structure but there are some key differences between structures and Union which I'm going to discuss so first of all uh let's comment this structure for now and we are going to declare a union okay so as structure unions are also declared with a keyword Union and then you can give any name to the union for example my union and then comes the these curly braces like these and then this semicolon okay and in Here Comes Your variables like you declare in the structure okay and if you know whenever we declare a variable it has some size or depending upon the data type so integer has a size of four and character has a size of one bite okay so for example if we want to declare this Union Union Let's uh Define the union type also u u and I for example and now we declare a union here U and I and then we can use un and I to give values to our my int variable and my car care variable for example my int is equal to 4 and then un I dot my care is equal to 9 okay and uh now let's compile if it works or not and you and I have the problem here so let's see what's the problem I should use something like this not here but un Union my union is equal to un and I okay now compile the program and it works fine okay so now we are going to print the value of my care and my int here so we will just write print and inside the bracket we will just write percentage i/n for next line and then we just print the value of my care first okay un do MyCare here and compile and run the program it here should be semicolon I forgot and run the program and what's a problem here the problem is warning implicit Declaration of something so problem is here in print f it should be print F and when I run the program it gives me five which is correct you uni. my care we have assigned the value of nine which is giving the answer but let's see what happens when we try to access the value of my int okay here we will try to access the value of my in instead of my care it gives us the same result which is nine which is not true so what's happening here so whenever you define a structure like this it allocates its variable or member variables to some memory space so for example you have defined uh variable Minds my int and my care in your my stru structure then it allocates four bytes of memory in some memory space in your computer for myint and it allocates uh one by of memory for this character in some other memory space so when we see in the memory uh map for example it'll look like this one 2 3 four so these fours byes are for your my int my int right my int variable or integer variable okay and this one byte is for car okay now whenever you use Union the memory mapping is little bit different so whenever you declare a union it has the size of the variable whose size is maximum so the maximum size of a variable inside this Union is four which is from integer my in because uh four is greater than one so the size of Union will be four in this case so Union allocates the size to itself from a variable whose size is maximum so the union size in this case is four so inside of a this is struct for example and for Union the memory Maps will be something like this one 2 three and four so it allocates memory this memory to the in integer and in a in the same memory it can allocate the one byte for the character okay so they share so members inside a union share this memory space or size but inside the structure they are allocated at different places okay so that's why whenever you assign four it will be assigned in these four bytes and so you have for the first time when you assign four in the integer it will be assigned here but as soon as you assign nine to this character then it will be overwritten to these four bytes okay that's why we are getting the answer nine here so this is the main difference between structure and Union structure allocates different memory location to its variable but Union allocates the me same memory location and the size of the Union is the maximum size of a variable inside it so if my int has the maximum size the size of the Union will be the same now to prove this we can uh just print the size of these structure and the union okay so let's try to to print the structure size and Union size okay so for for printing the structure size there is a function called size of and using this you can calculate the size of the structure so our structure name is record in this case so we will just calculate the size of record and in this in the union case our Union name is UN and I right so we can get the size of uni and let's uh say here the size of the SI size of struct and just below it we can say the size of Union okay and compile the program and run the program and it says the size of structure is 8 and the size of Union is four okay now you may be wondering that the size of structure should be five because the size of integer is four for integer variable and the size of character is one for the character variable where does this eight comes from as a size because whenever structure whenever you provide some variable to the structure it calculates the memory or size by adding the size of these variable plus it gives the padding plus it adds some padding so that it can become the multiple of uh four or eight or something like this that's why it the you are seeing eight here because five is not the multiple of of eight or four okay so structure provide or C provides some padding to uh the structure so that its size become eight instead of five but the size of Union is four as I have told you that the SI it's the size of the variable which has the maximum size so size of Union is four in this case and you may also wondering where we can use Union if they overwrite the stuff uh every time you you know ex try to access them the union are mainly used in embedded programming wherever you you know try to access some memory or something like this there uh it's mostly used but you need to read about this where can you Pro you know use this Union so I hope you have understood the basic concept of Union and I hope you have enjoyed this video please wait comment subscribe and bye for now