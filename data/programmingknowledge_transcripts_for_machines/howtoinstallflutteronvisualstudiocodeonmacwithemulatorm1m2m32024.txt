hey guys in this video I'm going to show you how you can install and set up flutter on your Mac operating system using visual studio code I'm also going to show you how you can run your flutter app on iOS emulator and the Android emulator so let's see how we can do it so first of all open your favorite browser and search for install flutter and the first link which will appear here will be from docs. flutter. deev for/ get started for/ install so I'm going to click on this link if you land to the homepage of docs. flutter. deev then click on get started here and you will be able to see these options we need to choose the Mac OS and as I mentioned I'm going to show you how you can set up flutter for Android as well as iOS with the Android and iOS emulators so let's see them one by one so first of all I'm going to uh click on iOS option here and then here it's going to show you the hardware and software requirements and when you scroll down a little it's going to show you what tools you will require in order to run your flut app on let's say the iOS emulator right because we have selected the iOS option as you can see here we need the X code here and then you can optionally also install this tool I'm not going to show you this tool but I'm going to show you how you can set up xcode and run your uh flutter app using the IOS app so we are going to proceed with xcode installation in few seconds but let's scroll down a little here and here you will be able to see text editor or integrated development environment so you can see Visual Studio code Android Studio and intellig idea as I mentioned we are going to uh do it on Visual Studio code so I'm expecting you already have installed Visual Studio code on your Mac operating system because this installation is really easy right when I scroll down a little here I can see uh install the flutter SDK option here you have two uh options you can install the flutter SDK using visual studio code or you can install the flutter SDK using this ZIP file option so you can choose any option from here but I recommend you to choose this option which says download and install and and we are going to proceed with the installation of flutter SDK using the direct download and install option you have two options here first one is for Intel processors and other one is for apple silicon chips for for example M1 M2 or M3 chip I have a Macbook which support apple silicon so I'm going to click on this option and once you click on this option this ZIP file is going to download so it's around 1.1 gigabyte file so just wait for few seconds until this file is downloaded and once this ZIP file is downloaded you can see it will look like this now when you uh scroll down a little in this document mentation it recommends us to create this development folder under your home directory and then it recommends us that we extract our flutter zip file in this development folder so first of all we going to open our terminal and once you open the terminal as you can see it recommends us to create this development folder under your home directory so when you open your uh terminal you are directly in your home directory and when you write PWD here the home directly uh path looks like this for/ users for slash your username right under this we need to create the development folder to create the development folder just write mkdir and then development and then press enter and then you will be able to see this development folder on under your home directory so you can see that this development folder is created so just copy this command but we need to change this command a little so I'm going to copy this command and paste it here let me just maximize this terminal and here we need to make few changes so because our uh flutter zip file is located in the downloads folder and not in the development folder folder so instead of this what we need to do is we need to just write till for slash downloads for Slash the name of your flutter file right so if you write uh flutter and then press tab on your keyboard it's going to autoc complete your file name right so the command in our case is this unzip for/ till SL downloads SL flutter Mac OS and whatever the version of uh flutter you have downloaded so this might change in your case and that's why I'm saying that you can use the autocomplete feature of your Mac terminal so I'm going to just press enter here and you can see it's unzipping this uh ZIP file once this ZIP file is unzipped in the development folder let me clear the terminal and let's CD into our development folder and here when you do LS you will be able to see this flutter folder here so when you uh just go to your uh macbook's desktop you can see this go option here just click on home folder which is going to open your home folder in your home folder you will be able to see this development folder and then under development you have this flutter folder and under flutter you have all these files and in the next step we need to add the flutter path to our environment variables so if you're using newer versions of Mech it supports zsh on your terminal so what you need to do is you just need to add this uh flutter bin path in your zsh n file or you can also do the same in your zshrc file so if you already have zshrc file then you can add this path to zshrc file also so in my case zshrc File is already uh present so let me uh just write CD here so I'm in my home folder and when I write LS space hyphen Al you will be able to see that uh I have this zshrc file right so you can add this path into the zshrc file also if you don't have the zsh EnV file if you don't have zsh EnV or zshrc file just create this zsh n file and then just paste this path there in my case I'm going to open the zshrc file so I'm going to just write open then dot zshrc here and then press enter which is going to open my zshrc which already contains some other exports I'm going to just add this new export at the bottom of this file which is export path is equal to home/ development SL flutter for/ bin colon dollar path as you might already remember remember that you can see this path here right so this is our home folder and then for/ development and our flutter directory resides in the development folder and we are going to put this path into our zshrc which is the bin path inside this bin path there is this flutter binary which we are going to use once this environment variable is set so once you have added this path just save your file by pressing command s and then close your file so once you saved your file just close your terminal so just close your terminal then open a new instance of your terminal and once the terminal is open you can run the flutter command so I'm going to just write uh flutter here and then space hyphen hyphen version and then press enter and it's going to show show me the version of flutter I have so you can see uh it has shown me this kind of uh welcome to flutter uh text here and it's going to also show me the flutter version which I have installed once you see this kind of output when you give flutter version command that means we have set the right environment variable for our flutter binary now once we have flutter installed then let's move to the next steps so I'm going to scroll up a little and we are going to uh install the X code so first of all you need to open the app store you can find the App Store icon on the doc this is the App Store icon so just click on that or you can also search for App Store in your Launchpad and then click on that and App Store will start from here just search for xcode and then press enter which is going to search for xcode and the result which we are uh looking for is this one which is called excode developer tools here I'm going to click on this uh download button so in my case it shows this warning which ISS download the older version of xcode the current version requires Mac OS 13.5 or later but you can download the last compatible version because right right now if I click on the Apple logo and then click on about uh this Mac I have the 13 version not the 13.5 so I can uh download the older version if you have the latest version of Mac OS uh you can download the latest version of uh compatible xcode here I'm going to click on download button which is going to start the download of the xcode so you can see uh this download has been started it's around 7 GB uh of download so it will take some time for the download to complete you can also go to the Launchpad and see the download process here you can see this download is going on so it's going to download around 7 7 GB of uh data so it'll take some time so just wait for the download to finish so once the download is complete it's going to start the installation process as you can see when I hover over this circle installation process is about 2% complete so now the xcode is installed on my Mac operating system once it's installed you will be able to see open button in front of xcode also in the Launchpad you will be able to see this xcode icon so I'm going to click on this xcode icon let me minimize this app store and then it's going to start the xcode so for the first time when xcode starts on your Mac operating system it's going to ask to agree with the license terms and conditions so if you want you can read these license terms and conditions and then click on agree and then give your MacBooks password which you use to log to your Mac operating system and then press okay and then you will be able to see this kind of window which says select the platforms which you would like to develop for for now I want to use it for Mac OS and iOS development later I can also install the toolkit for watch Os or TV OS but for now I don't want that so I will just uh leave it as default and then click on install which is going to start the installation of additional components and you can see the progress bar of the installation so at this point I just need to wait for this progress bar to reach to the 100% Mark and once that's done and xcode is going to launch in few seconds so you can see uh xcode has been started first of all it says what's new in xcode excode Cloud Swift UI and it's going to give you the list of all the features I can click on continue here and now xcode has been started once you have xcode let's also install Android Studio so first of all open your favorite browser and search for Android studio and the first link which will appear here will be from developer.android.com we going to click on this uh link and when this web page opens you will be able to see straight away this download button on this uh web page so we are going to click on this download button which is going to show you uh this kind of terms and conditions page you can read about these terms and conditions here and then scroll down at the very B bottom where you need to agree with these terms and conditions so if you agree just check this check box and then you will see two buttons here so if you are using the MacBook or Mac operating system with Intel chip then you can click on this button if you are using the Mac operating system with the Apple chip for example M1 M2 M3 or any other Apple chip then click on this button so so I have a MacBook with an apple chip so I'm going to click on this apple chip uh button here which is going to start the download of this DMG file so you can see uh at the time of uh making this video this file is around 1.1 gigabyte files which is going to take some time to download so just wait for the download to complete here so once this DMG file is downloaded I'm going to click on this DMG file and then I'm going to minimize this browser so as you can see on this window the installation process is really simple you just need to drag this Android Studio icon into your applications folder so if you are using your MacBook and it's trackpad you just need to press command key on your keyboard and then select Android studio and then drag and drop this uh icon on your applications folder which is going to copy Android Studio into your applications folder you can see this copying is done now once the copying is done the Android Studio is installed on our Mac operating system and then you can click on the Launchpad and then search for Android Studio here so I'm going to just uh search for Android Studio you can see this icon is available here so I'm going to click on this Android Studio icon just going to start the Android Studio on our Mac operating system so first of all you will see this kind of window which says import Android Studio settings so if you are uh starting Android Studio for the first time I will recommend you to just leave this uh radio button on do not import settings here and then click on okay and then you will see this kind of window which says help improve Android Studio I don't want to share any uh data with uh Google so I'm going to click on don't send here and you can see this kind of Android Studio Setup Wizard so at this point I'm going to click on next here and then I'm going to choose the standard installation type you can also choose the custom one but uh I will recommend you to choose the standard one for now and then click on next and then you will see all these settings so you can verify all these settings here and then if you are happy with all those settings click on next and then on this next window you will see this license agreement so if you want you can read these license terms and conditions and if you agree with those license terms and conditions click on accept here and also select the second uh item here in this list which is the SDK arm and then accept here also okay so you need to accept in both the sections one for Android SDK license and other for Android SDK armed DBT license once you see this finish button click on finish which is going to start the download of all the components which Android Studio requires for its installation so this setting up of components uh will only happen once when you start your Android Studio for the first time so at this point you just need to wait for uh few seconds until this installation of all those components uh is going on and now as you can see after a few seconds I can see this finish button here so I'm going to click on this finish button which is going to start Android Studio on my Mac operating system so once your Android Studio starts we are going to go to the plugins section here and then we are going to search for flutter here and you will see this result for flutter so I'm going to click on install and then click on accept which is going to install this flutter plugin in addition it's also going to add the support for DOT so dot will also be installed so I'm going to click on install here and then it's going to install flutter and also it's going to install the dot programming language once this is downloaded it's asking me to relaunch the Android Studio so I'm going to just click on restart IDE and then click on restart which is going to restart my Android Studio IDE once my Android Studio IDE starts I can see this new Option here for creating a new flutter project so once you have installed the flutter plugin here let's open our terminal and let's run this command command which is called flutter doctor command and then press enter and it's going to show you uh the status of all uh the tools so when I run flutter doctor command I can see under Android tool chain that the command line tools component is missing here right so let's see how we can solve this problem so for this open your Android Studio and then if you see this kind of interface then select more actions and then select SDK manager and then select Android's SDK option here and you will be able to see this SDK tools option and here you can see uh the flutter doctor command is complaining about this option which says Android SDK command line to tools which is not installed yet so we are going to just uh check this check box and then click on apply and then click on okay which is going to install the Android SDK command line tool once that's done just click on finish and now you can see this is installed and we can run the command once again so I'm going to click on okay and then once we run the flutter doctor command once again again you can see that error is gone so now I have one more warning here but I don't see this command line tools component is missing error right so now I have one more warning here which says some Android license not accepted so for this I'm going to run this command which is suggested here so for this I'm going to run this command which is flutter doctor space hyphen hyphen and Android hyphen license you can see this command I have already typed which is flutter doctor Android license press enter and then press y here and then press enter and once again press Y and then press enter and then just keep on pressing y until this license terms and conditions uh is accepted right so once you see that all SDK package license accepted I can run the flutter doctor command once again and this time I can see that Android tool chain is now fully installed so now when I run the flutter doctor command I can see uh this xcode error which says and it says xcode installation is incomplete a full installation is necessary for iOS and Mac OS development so to solve this we just need to open the xcode I'm going to just search for xcode and then open this xcode once this x code opens you will see the xcode menu at the top just click on xcode here and then select settings here if you see preferences option you can select the preferences option here once you do that just select locations tab here so select location Tab and here if you see uh this command line tool empty then select the version of xcode and it's going to ask you uh to provide your MacBooks password which you use to log to your Macbook so I'm going to just uh provide that password and now I can see that this xcode version is selected now let's run this uh flutter doctor command once again and now that error which we were seeing is gone right so now we have successfully installed the essential uh tools for Android development and also the essential tools for the iOS development earlier we were seeing this xcode related error now we are just seeing this coka pad not installed that we will uh not require for now so I'm going to leave it as it is but other tools are installed right now once flutter SDK xcode and Android Studio are installed on our Mac operating system now let's move to the visual studio code and for that just open Visual Studio code editor and before doing anything here we just need to install the extension for the flutter so here click on this extensions Tab and then search for flutter and the first extension which will appear here will be uh this one this is the official app and you can see see this has been downloaded around 7.8 million times and it's from do code.org so we are going to install this extension just click on install which is going to install this extension and once this extension is installed you can see this disable uninstall and switch to prerelease version right so now let's go to the Explorer section here and here once your flutter extension is installed you can create your uh flutter project in several different ways right you can use the terminal to create your flutter app you can also use the command pallet of Visual Studio code to create your Android project so let me show you first of all how you can use the command pallet to create your flutter app for this press command shift p on your keyboard which is going to give you this kind of uh pallet here after this Arrow just write uh flutter and then colon and you will see this option here which says new project okay so I'm going to click on new project option here now here it says select your template so you can select the application template empty applications template skeleton and other uh project options are also available so I'm going to select the first option which is the application template here and then I need to choose the location where I want to save my project so so let's say I want to save my project into my documents folder so I'm going to uh select my folder here and then click on select folder to create the project in so I'm going to click here and now you need to give your project name here I can see the default name for my project which is flutter application I'm going to uh rename it to let's say mycore flut underscore app and the thing to remember here is I have given this name all in small letters and they are separated by underscores right so if possible just name your project in small letters and if it contains multiple words separate them by underscores once you have given the name to your project just press enter as suggested here so I'm going to press enter key on my keyboard and then click on Save here then it's going to also ask you to provide the workspace option from here I'm going to choose the same folder for example so I have created this my flutter app so I'm going to choose the same um uh folder for creating this workspace and you can see this flutter app has been created and you will see in some time this flutter app will be populated with few different folders and files right so this is the template we have chosen and that's why you will see all these files here right now once our flutter app is created it all already contains the sample code so we just need to run this in uh an Android emulator or iOS emulator to test it right so for this once again you can press command shift p on your keyboard which is going to open this kind of pallet once again and then colon and then just write launch emulator okay so this time we need to write flutter colon launch emulator and you will see this option which says flutter coolon launch emulator option click on this launch emulator option and you will see uh all these options here so this iOS simulator and this other Android simulator are installed when you have installed the xcode and the Android Studio on your Mac operating system right so if you have already installed xcode and Android Studio you will see both these options right when you have installed xcode this option is included in your Mac operating system for iOS simulator and when you have installed Android Studio this option has been installed on your Mac operating system for the Android emulator so let's say first of all we want to run our app on iOS simulator so we will choose iOS simulator here which is going to start the iOS simulator here you can see the iOS simulator is starting now once your iOS simulator uh has been started let me resize this uh Visual Studio code editor and then let's move this simulator on the side let's run this app you can run this app using this uh run option on the top so just click on run option on the top and then click on run without debugging I'm going to click on run without debugging option here now I can see this app has been launched on my iOS simulator and I can test this app by pressing on this plus button and everything is working I can also see this uh option here which says D Dev tool includes additional tools for debugging I can click on open here and then you can see open widget for inspector open CPU profiler and all these options here right so you can also choose these kind of options to uh debug your application now let's launch our app on the Android emulator also for this once again press command shift p on your pallet so once uh we have tested the app on iOS simulator I'm going to just press on this stop button to stop the application on the iOS simulator and now let's run our application on the Android Simulator for this just press command shift p and then once again choose flutter colon launch emulator option now this time select the option which says Android at the end okay so for example this option says Android at the end this is the default emulator which comes with Android studio right so I'm going to select uh this option here and once I select this option it's going to launch the Android emulator you can see the Android emulator has been launched and I can move this on the side for example and then let's run our app by just uh pressing run and then click on run without debugging now our app has been launched on this Android simulator okay so once again we can just uh press on this plus button and everything is working fine right so we have tested our app on the Android simulator and the iOS simulator now let me show you one more option to create the project using command line and launch your app using command line on the Android emulator and the iOS emulator so for this I'm going to close both these emulators first so let me close this one and let me also close this uh iOS emulator and then uh just quit from here and then let me just uh close this uh project from here okay and we are going to create a new project so now I'm going to open a separate folder and I'm going to uh show you how you can create a flutter application using the flutter commands so here I'm going to click on open folder here and then once again I'm going to create a new folder and I'm going to name my folder as apps so this is the folder where your flutter app will be created right so this will be the parent folder where all your flutter apps can be created I'm going to click on create here and then click on open which is going to open this flutter app right so now let's say I want to use the terminal to uh create this uh project so I'm going to just click on Terminal New terminal here and because we have already installed the flutter uh SDK and we have set the environment variables for flutter SDK in the terminal we can write uh flutter space create and give the name of your app right say I'm going to name my app as mycore appcore 2 this will be the second app right and then press enter which is going to create your flutter app you can see this flutter app has been created and it has also uh created the sample uh template for us right then you can read this uh output here you just need to CD into your application and then run the flutter run Command right so I'm going to CD into my app to uh folder here and then I can run the flutter run run command but before this I need to launch either the Android emulator or the iOS emulator once again I can go to the flutter documentation from where we have uh installed the flutter SDK and then when I click on the Mac OS option and iOS option at the very bottom you will also see the command using which you can launch your iOS emulator and you can see this is the command so you can also use this command once you have xcode installed to launch your iOS simulator so I'm going to just copy this command then click on the spotlight option and then uh just open the terminal from here once the terminal is open I can just paste this command here and then press enter which is going to launch the iOS emulator right so you can use this command also to launch your iOS emulator and then once the emulator is open Let's uh run this flutter app here you just need to run flutter run command so I'm going to just write flutter space run and then press enter and it's going to run this flutter app on my iOS uh emulator just wait for little bit you can see the app has been launched on my iOS emulator so using this command line tool also you can create and run your app let me just uh press contrl C here close this application and now I can just close this iOS simulator now if you want to launch the Android simulator you need to open the Android studio app so go to the Launchpad and then search for Android uh studio and then launch Android Studio from here if you see this kind of interface here click on Three Dots here and then click on virtual device manager option let's say there is no project on your Android uh Studio then you will be able to find this uh device manager option in more options here so click on uh more options drop down menu and then click on virtual device manager where you will see the virtual device so just select the device here one device will be present here also create multiple virtual devices using this device manager so I'm going to launch the emulator from here which is going to launch my Android emulator as I mentioned and then I'm going to just uh minimize this and once the Android emulator has been launched I can just run the app using the same command which is flutter run and it's going to relaunch my application in the Android emulator now right I can see that the application has been launched this time on the the Android emulator right this is how you can use Visual Studio code to create your flutter applications and launch them on iOS or the Android emulators I hope you've enjoyed this video and I will see you in the next video