hey what's up guys welcome to this video tutorial and in this video guys we're going to discuss what is file handling in C and then I'm going to give you a basic example we're going to create a program on how to handle files inside our C program so basically guys C files input or output functions handle data on our secondary storage devices such as our hardest and C can handle of files as stream oriented data or system oriented data or binary files so again guys we're going to focus on this so the first one will be stream oriented data files and the second one will be system oriented data files okay so when we say stream oriented data files the data is the data is stored in the same manner as it appears on the screen ok so I hope you can see that the input/output operations like buffering data conversions take place automatically while the system oriented data files the data files are more closely associated with the operating system and data stored in memory without converting into tax format so this is gonna make sense later on when we try to implement our very simple file handling insider C program now there are five major operations that can be performed on files so this will be again I'm just gonna list it list it here just for you to see because I think it would be much clearer if you can see all the details all the things that I'm talking here so for C file operations so first one will be creation of a new file the second will be opening the third one will be reading the fourth the a fourth one will be writing data you know file and last will be closing a file so these are the five major file operations the first one is great again creation the second is opening so we could open an existing file and then we could read the contents and then write data into a file so for example in your program you want to save on information so you can write it into a file okay and then of course whenever we are opening a file we need to close it after using it inside our program okay so the steps there will be steps for us to set up the file operations so these are the steps for processing a file so number one will be declare a file pointer so this is important so we need to declare a file pointer variable and then this will be our variable that we're going to use whenever we want to work with our files and then after that one we need to open a file using F open method or function okay so after that we're going to process this will be number three process the file using the suitable function right here and number four will be closing close the file using F close function also so if we want to work with files inside our C program we want or we might want to check this steps for processing our files so we need to declare a file pointer variable and then we're going to open the file using the F open function right here and then process the file using the suitable function so for example we want to iterate through the lines inside a file if you want to save or maybe write information into the file you can do that here in step three meaning you can process the entire content of that particular file and then right after processing maybe you need to close the file or not maybe you must close the file after closing or after processing it inside our C program so basically guys there are a lot of functions that we could use when we say we're processing a file so to handle files in C file input or output functions available in the stdio library are the following so I'm just gonna list it also here for you see so we also we already discussed the the two functions the first one will be F open and the second one B the second one will we have closed there are also functions such as get C which means we read a character from a file and then we also have Bootsy so this function would see write a character into a file and then also we have get W which means we need to read an integer from a file and then we also have put W so write an integer and we're going to use this later on this particular functions okay so you need to be familiar with this again if you want to read characters from a file you need to use this get C and then if you want to write character it into a file you need to use put C and get W gets an integer and put W write an integer into a file and then we also have F print F so f print F prints formatted output into a file and we also have F scan F so reads formatted input from a file we also have F gets right here so F gets read string of characters from a file and we also have the next one will be F puts and then the last one is f e Oh F so f puts write string of characters into a file and then we also have f EO f so it will detects and a file marker in a single file okay now as a sort of example we're going to implement a simple opening and closing of a file and maybe writing a specific tax or something into our file so we're gonna do that right here so at first we need to remember the steps for processing a file we need to declare a file pointer so in order for us to do that we're going to have to follow this syntax right here I'm just going to copy and paste it here file open so as I've said we're going to use this function f open and these are the possible parameters that you could use okay so to put it simply we could use this we could declare if we pointer variable so F P and then semicolon and then we're going to use that pointer variable and then use the F open function right here and then we could say here file name that txt and then another parameter and then we're going to use here W so W means that the file is being open for writing and if the file does not exist then there will be new file created okay so let's just return 0 for now okay after that we could close our file okay if we open the file we could also close this so what we what we need is to use the F close function and then passed in the pointer variable which is FB right here okay and right after opening the file and before closing the file this is where the processing after by processing of the file happens processing of the files right here for us and processing okay so inside of processing we could just simply if you remember we have different functions so get C put C F print F so we're going to use this so for now let's just say F print F okay and then open and close and then semicolon and inside here we could specify the pointer variable which is FB and then of course % s % s where is it % s there you go and then hello world we're okay hello world there you go so after this we could save our file and then build in run okay so for now we're getting process return 0 it means that the execution of the program is successful so we're going or we're trying we're going to try to open the file that we have created and as you can see here I have my project right here from documents code blocks projects and then programming knowledge and then if we try to open this we can see the tax hello world okay so there you have it on how you can write files or write lines of strings into our file by using this simple program right here and I think that's all in this video in the next tutorial we're going to read text inside our files and then display it in our maybe console or we want to if we want to process the contents of the file inside our C program so thank you for watching guys and I hope to see you in the next video