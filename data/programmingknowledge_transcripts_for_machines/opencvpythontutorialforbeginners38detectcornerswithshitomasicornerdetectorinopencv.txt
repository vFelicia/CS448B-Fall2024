hey guys welcome to the next video on open CV tutorials for beginners using Python in the last video we have seen how we can use harris corner detector in order to find out the corners inside an image in this video I'm going to show you how you can use sheet Tomasi corner detector method to detect the corners inside an image so in late 1994 J she and C Tomasi made a small modification in the harris corner detector method in their paper which was called good features to track so this sheet Tomasi method is similar to harris corner detector apart from the way the score of r is calculated which we have seen in the last video so this sheet Tomasi method gives us better result in comparison to harris corner detector and also when you use this c Tomasi method we can find the top and corners which means we can provide the number of corners we want and this might be useful in cases where we don't want to detect all the corners inside an image so let's see in the code how we can implement this sheet Tomasi corner detector in OpenCV so here i have already written all the code so let me explain you all the lines of the code one by one so as you can see here i'm just importing the libraries in the first two line and in the next line i am just reading the image using I am read method and then I am converting this image into a grayscale image using this cbt color method so i'm converting this image from BGR to create scale image now as i said the paper which was published by she and Tomasi was named good features to track that's why in OpenCV this method is also called good features to track so here in this line we are just using this method CV dot good features to track which takes few arguments so first argument here is our input image which is a grayscale image which we are providing as the first parameter the second parameter is the maximum number of corners so here we can limit the number of corners we want to detect so for example I have given 25 here that means we just want to detect 25 corners and if there are more than 25 corners which are present in the image they will not be shown so this value means maximum number of corners to return and if there are more corners then the corners found then the strongest corners will be returned right now the third parameter here is called the quality level so this is the parameter characterizing the minimal expected quality of the image corner the next parameter here is the mean distance which is the minimum possible Euclidean distance between the returned corners so I have taken 10 here as the minimum distance and 0.01 as the quality level now once all the corners are detected using this good features to track method we convert those corners into the integer values and here in zero is a mer alias for in 64 and once all the corners are detected we iterate over all the corners and then we find out the value of x and y using this I and then it's easier to just draw the circles over these values using the CB dot circle method so this CB dot circle method takes few arguments first is the input image so the second parameter is the center the third parameter is the radius of the circle which we want to provide the fourth parameter is the color we want to provide and the fifth parameter is the thickness and if it's minus 1 that means we want to fill the color inside that circle and at last once all the circles are drawn on the corner which are detected then we are just showing this using I am show method so let's see how this works in the case of XI Tomasi method on an image so I'm going to run this code so you can see all the corners inside this image are detected and because we have just provided this number 25 here so maximum number of corners which will be detected here will be 25 and rest of them will not be shown so if we increase the value of the maximum number of corners let's increase it 200 let's say so I'm going to just increase it to the value 100 you will see more number of circles are drawn on an image now let's compare the result of the Harris corner detector and see Tomasi corner detector so on the left hand side you can see the original image and this middle image shows the Harris corner detector method and you can see all the corners are detected using Harris corner detector and using the sheet Tomasi corner detector it gives us better result and we can control the number of corners we want to detect and you can see all the important corners are detected using she Tomasi corner detector in a better way so that's how she Tomasi corner detector works I hope you've enjoyed this video and I will see you in the next video you