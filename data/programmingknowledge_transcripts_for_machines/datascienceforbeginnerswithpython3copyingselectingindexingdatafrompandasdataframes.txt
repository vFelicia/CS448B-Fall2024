hello there in the last video we had seen how to import the pandas library and input the data set into the data frame so we had created one data CSV and we had seen how to input different types of data set that is CSV then we had done with Excel and then we had done with text files so in this video series I will be showing you how to create a copy of original data that is creating a new data frame and then I will show you different attributes of that data and how to recognize that and then we will do indexing and selecting the data from a data frame so for this tutorial I will be giving you one more CSV file so this CSV file will contain let me bring that ok this yes we file will contain DEET about cars so this is called Toyota dot CSV in that we have price each kilometer fuel type HP and all those little weight etc so I will also upload this on the github repository so that you can get it easily so what we will do is let's do OS dot this now we don't need to treat the seireitei go down and we'll just from this okay we have to comment it windows you can see toward says we have put in the same directory so now we go down and so what I did after in data frame is twodimensional data structure which contains rows and columns and these are mutable that is you can change the values of these rows and columns okay now we're also in import numpy so for that just call the port number by its NP so we call NP when we need to call number okay so that is done and now we will just import the data into the toughing so cos theta is our data frame so we'll treat the CSV Toyota dot CSV okay our data frame is right we'll just see values of data frame we will get something like first six values okay so I had Sonya in now I'll let you know how to remove this one name is 0 that is index column so for that we need to question 2 X underscore col2 0 so this is a set prices index problem okay so this one and you can see some missing values out there so in Python throught two ways to create copies one is shallow copy and copy one it's another on its did it go so so what is shallow copy so shallow copy is uh like it only creates a new variable that shares the reference of the original object so we are not creating a new copy we are just erm sharing the reference to the original object and any changes made to a copy of the object will be reflected in the original object as well so if you change this new Signet offering then the original data frame will also change along with that so this is like linking so in UNIX we have something called as symbolic links so there we have hard link and soft linked so this is kind of soft link when the term contains only the reference and if you change the referenced object then it will also change the original data so deep copy is like it's copied in other object with no reference to the original so there is no reference to original and new copy is created from the original data and any changes made to a copy of that object will not be reflected in the original object so original s object is separate and the new object is separate so separate deep copies for this one so how do do shallow copy and how to do the deep copy let me show you so shallow so for shallow copy if we have that now we fix em that is simple click over to we call the data frame and then a big copy function inside that if you pass rate equal to false so we are not doing deep copy so it will be false so what this will do it will create sample and the soft copy or shallow copy if you want to make it as let's say deep copy so you can just make it a truism it will create a deep copy so now you understand what is the difference between deep copy and shallow copy now we can go to the attributes of data so data frame contains indexes so to get the index of row table true labels of the data frame we can do as cars data one okay so what will we do is we'll create a new data frame a deep copy data from so cast it off one and it will be a copy of cos theta and it will be deep copy so that will not change the original data so now what cos theta one is created and now you just pass dot index so if you press Enter you can see around 1 4 3 5 rows are there total if you it short from 0 so it is actually 1 4 3 6 and if you want to see the columns we can do cars data on dot columns so these are the columns why is H cute of your type and they type of that these object ok so just put a comment here and this one is so this chapter is about attributes of data the system and then if you want to see the data frame size so what we can do what we take over our data frame cos theta1 dot size so what this variable does if you show with the size of the data frame it is 1 4 3 6 0 so this is the total number of elements the data frame and if you want to see the dimension operator frame you can do theta1 dot shape what this will do this will show the how many rows are there and how many columns are there I'll just comment and here so this is done now we will see the different memory usage so how many bytes of memory our data frame is using so far they will call the function memory underscore this H and if you press shift enter you can get the memory usage of this column in pipes so price is having all the columns will have same number of alarm by its location so 11,000 for accurate pipes okay so if you want to see the number of exes and error dimension and if you want to see the number of X's and edit image we can do is Zeta 1 dot nd I am okay so if you press Enter so there are two number of X's very dimensions now we will see indexing and selecting data and selecting data so for this we have a slicing operator with Python so it's open and closed it is going so it's open and close square bracket and we have rather one s dot operator these are used for indexing so this is slicing what this one does is they provide you quick and easy access to pandas data structure so I've already shown you how to get starting six values or five values so you should buy a path like just data 100 score dot eight now you can pass any number of Cal n number of calories here I just pass first ten so it will give you first ten rows so by default it returns first five votes if you want to get last five value you can you scale or that so this is useful for quickly very fine D term after example after sorting or appending rows so now we'll just see how to index and selected a down so if you want to access a scalar value the fastest fastest way is to use the attend IET methods so there are two methods attend IAT okay so what it does is it provides you what's label based lookups okay and what I it does pick points integer based lookup just copy and paste type integer okay this provides integer based lookup so let's see if you want to get fourth label and data type so what we can do the kindest R theta 1.8 so you have to take the slicing operator inside that we have to pass one two three four if one type as where types you can just pass four and then if we do this you will get thistle this is like label based so we can pass a label here along with our value so if you want to do individual based so for that what we can do is cos theta 1 dot item the slicing operator and set okay so it's fourth row sixth column fourth through sixth column yeah and we had done the in table based so inside that for and favorite up fourth row fare type column so inside word very type you have to see forth so it is this value so 2 comma 2 let's see okay so second row second column we got four one seven one one yeah that's good if you want to access a group of rows and columns by labors so for that you can use icing operator so what this can be done using this is you can just pass cut it up hang it I want to cut so we have canvassing justification this is in groups of columns and columns so for that we will take all till few type teams capital okay so for all the rows for all the rows of type few type so all rows of column here type yeah so this how you do a group of rows and columns by labors so this is how you index and select all own data so for that we are hello since then we have at NIIT methods so this is how index and electing it our works on data frames