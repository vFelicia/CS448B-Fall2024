hey guys welcome to programming knowledge in this video we'll be looking at this template code which code blocks had provided us by creating a project law so we'll be learning how to perform simple output in C++ let's get started so the first line here says hash include iostream hash include' is known as a preprocessor directive so hash include' is used to load files which are already present in the compiler as compiler comes with many files which are which have predefined functions to help us could be so high esteem is one of them and by using this preprocessor title by using hash impute we are actually in looking this file from the compilers so without this file you cannot perform any input or output in C++ many other header files will be coming across in the run but for now let us explore iostream I assume contains all the functions which we need to perform console input so I Aslam Bailey really stands for input and output stream so while name itself we can say every every function we need for performing input or output is present in a stream next with this line it says using namespace STD so a steady spoon as a scope hope we can understand like a region so every function inside this iostream works only in a certain region so for now we are not going to deal with any other books other than the standard school but just for information there are just cope also that will be learning when we are critical in c++ that comes at an advanced stage but for now we can see only use the standard scope standard scope is nothing but the console so if i just remove this line you will be seeing that this all these functions god of the scope so now if i build and run this by hitting f9 so now you can see that it shows an error what does the error say it says that she owed was not declared in the school this just means that this line or this particular function cannot be executed because it is out of the scope scope is nothing but the sky the way we defined can encompass by using the scope resolution operator corporatisation is nothing but Jesus right the scope and then the function and in between the scope and the function you just specify the scope by putting two colons so this is how you specify the scope so if I now execute it yeah I am reading another because this end and this end L is also from the iostream so it does not have that scope so I need to provide the scope for this also now if I build and run this I will be getting the output so here you can see we're having knowledge so that is the importance of scope then by doing here using namespace also well you cannot do this for every statement right it is going to be lot of it is going to take a lot of time to actually do this and sometimes you can also forget to do this so suppose I am writing 10 C odd statement this is the statement here there's nothing but the output statement this one what I am printing on to the console is not his she odd statement so this statement if I write in ten times I need to specify the scope ten times so every time I use this function or not not on only dysfunctioning if I use any function from this iostream library I need to actually specify this particular standard scope that is why to avoid that c++ provides a way to globalize that by using the namespace statement so by writing using namespace STD you are actually globalizing this statement and it is going to take care of any other study so you if you don't write this standard it is automatically taken care of by the compiler because it's just encountered this line this line just means that wherever standard scope needs to be used you just use it that is what this light means the next line says int main main is actually a function every program has a main function main is like a triggering function so every program has this without main there is no program because all the execution starts only from the main function so the boss a hundred file program or even say thousand file program the content n number of function but there is only one main function and that main function cannot be replaced and without this main function this program is not going to run so if I simply just type a capital M over here C++ is case sensitive so capital M main and a small M main are different so now if I try to build and run this I will be getting an error it says undefined reference to this remain either 8 16 this is actually something which is inside the compiler it is a compiler issue that is because it did not encounter the main function so Neve the right the main function you are going to execute it so first thing any C++ program looks for is this for this function it needs to be main and with a small m and it should be empty you can actually put void over here so that also doesn't matter but just it just makes it look complex so it's best to leave it empty so if you put like this and then it has to be the reason we will be looking at it later and the meaning of this end and just return 0 we will be constraining only when we are dealing with functions so for now we can ignore them so just remember that unit implement any other main doesn't work in that's a float mean all these are not going to work only in main is going to work and for now you can actually remove this return 0 so without this also the program is going to run and it's going to there's a lot of significance for the return statement and then we'll discussing about that when were discussing functions so this as I told you is the she owed statement just stands for the console output so she owed stands for console output and whatever you write here goes to the screen and this operator is known as the stream operator Steve operators are very important we will be looking at it when we are dealing with other streams also like v stream or something but for now while we are using the IAO stream that is the console stream we need to have these two functions in a page so the user this is in function that is the CEO and this is the stream operator and this is a stream operon this is a specific 8 men but technically in computer programming this is called a stream string is nothing but a collection of type this called a string so that is a data type we'll be talking about that in the next video so for now this is what the program was and yeah I forgot to tell you this one this is actually a painting another function in the sames here so see how it actually operates on only one operand so if you want to operate on multiple operands you need to separate that with this stream operator so see this is a string and this is a function handle is actually a function so the gate works yes it is going to first do that it is going to first operate on this and then it is going to encounter this and then it is like adding another shirred statement that's it so if I just put a semicolon here and then put a co2 just that it is not to get you confused these are two separate statements if you're wanting to put multiple statements in a single statement and that is how this is how you do it you just put a operator in between and then put the next operand over here and this semicolon is very important you met on over to the semicolon over here also chemical is known as a terminator so in C++ you can write multiple commands in the same line so what it does is it is going to separate each and every command so that the compiler knows what comment executes after executing just previous command so that is why we use a terminator it is very important so if you remove this it is going to result in idle because it doesn't terminate and it is expected this semicolon before this particular token that it expected is end of a statement before this one at this way you put a semicolon and this curly braces just signify the body of the main so whatever code array you are going to write between these two bases for some time until we are saying we get familiar with functions so once you're familiar with functions will be writing multiple functions and early poking the functions within this main we'll be looking at that later but for now let us talk over the output so they all know how to put out but right this is how we put out this we just put them inside dirt to double goods well this is string we can also put numbers also so for numbers you can either put it as a string so you can put something like this right and then execute it you'll be getting Phi over there all integers are separate in programming so even if you put a file like this don't we going to see Phi in the console so here you can see and now comes the major difference if I put Phi plus Phi over here and then educator I will be getting 10 over here that is the value of Phi plus 5 but if I just enclose it within a code within a double code what will I get I will just get the same thing I'll just get Phi plus Phi because this is treated as constituting world what this double code means as that whatever you put inside this double quotes is just going to be replicated as it is on the screen and if you don't put a double quote it has to be either a memory location or some operate so memory location or variable we will be looking at the next video while we are discussing input but for now find out we need needed bother about memory location let's just talk about the integer part of it so if I just put that say let's try another one let's put something like this five plus five let us try this one these are two different strings and now you know usually plus operator between these things so what we expect is actually ten but let us know execute this and look at that it says invalid operands of types Const care and constant what this means is you cannot add two constant characters or constant string on scale and despoil bracket as well fact it is actually quantum are you if we will be looking all of these things when we are discussing data types but for now we can you and understand that you cannot add two strings you can only add two numbers so if I just put five plus five I am going to get the answers so here so this is same with real numbers also you can even put point five plus four point five but that makes it two so here you will be getting two point two over here so and you can even work with decimals also even if I put one point four five your window great answer so you will be getting one point nine five so that is a major difference between strings and numbers so if you are working with numbers you can directly add them you can multiply you can divide multiply here is the start symbol which you will be finding on that eight on number eight on your keyboard so that is a multiply symbol and then divide is the normal forward slash symbol so this is the divide and multiply and this another one also there is another operator that is called the modulo operator what this does is it gives it gives the remainder of the two numbers right so what what it means is if you just put five more dilute to what this does is it gives a remainder so if you divide five it to what is it remainder you are going to get you're going to get one because well it is said to into 2 plus 1 which makes it fine right so this is the operation so that is why you do goes two times in five and then one is a reminder that is why you are getting one so you can verify that you can do that by simply putting two in well you can thank you put five more two you're going to get one over here so if I just run this then you can see one have many other operators will be looking at them later when these are the this is how you can perform output in simply speed well there are other things also like instead of using this we have something called escape sequences let me talk about don't we it is escape sequences what is odd is basically there are some key wood hooks which we cannot perform during runtime right so suppose we wanted to perform it backspace during the runtime it is not possible I am talking about the runtime so suppose I wanted hello world over here suppose and then I wanted to perform the backspace for this extra space I have provided over here I cannot do that in the random but now I can do anything I can even put what about during the runtime for that there are some special key sucks but I actually treated as escape sequences so the way we define escape sequences are you actually put a backslash and end a special character so here there will be a special character and then this is going to actually give you a special meaning so this is going to execute that particular keystroke so this they are some of the escape sequences like a slash it's going to take your bed so you might have noticed that there will be a notification bill that will come and then there is a slash B which is for back space and then a slash t + /n we'll be using these things more often last is for a horizontal tab and then slash n is for a new length they we did see this one somewhere right this one so ndele is actually a function this is actually significant difference between using slash and edited so I'm just going to delete these things let us first try / in so first lash it I'm going to run this you might have heard that song right that bends on that is the function of slash it let us look at /t tunnels yes it's going to put it down so let me put it up between hollow and world so if I put over here and then executed here you will be saying hello and then it this space and then a world so this is what the function of porosity and then splash n is what going to do the same thing what this function does it is just going to put the contents in the mixed line so if I just agreed eat it there'll be new lines so hello and then a new line under the hood so that is the function of slashing so that is all for this output session in the next time in the next video we will be looking at input and C process right so thanks for watching this video I will be meeting you within the next video with input in C++