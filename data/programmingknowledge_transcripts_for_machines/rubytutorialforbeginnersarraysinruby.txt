hello everyone welcome to programming knowledge so again welcome here to programming knowledge so today we are going to start a new tutorial on some basic data structures in ruby so the most basic data structure and the like one of the most important also is rs so today we are going to continue with array in this tutorial and let's see how we like initialize some array in ruby so very basic method is to do nums is equal to 1 2 3 and now you can do and you can also initialize another array names is equal to joe john and jack so this is the one one is a area of nums and this is a of strings so these are like two data types you can initialize one is of integer type and one of string type and now we what we are going to do we are going to like see how we can for print this array the one way to print this do put test nums now let's run this file now here you can see i have printed the array another way is to like s names so this would like run the array like sorry print the array so this is one way of printing another way is you what you can do is you can treat this as a variable i have already told you like how we like like read the variables and print this and this is like this is also going to work and this is going to collect sorry this is going to print uh in horizontal direction so here you can see like this so same you can do with the names also okay and it looks good to go yeah so here you can do also this is the same thing now one way to also initialize the array is like you can use array dot new and this uh they're like this is like eric class which calls constructor and this is added dot new and this is joe john and jack so let's run this again and let's see it works perfectly fine and let's run this for nums also and let's see yeah so so here it also works perfectly fine so this is one way of printing the array in ruby so another way what we can opt for is like i told this new operator now what you can do you can also use the range operator as well and uh uh some i'll show you one thing you can we can comment this out now since this is not needed and i've all put this comment in comment so it's just for your reference so you can also i'll do this put test names let's put test nums so these two things are also not needed i can comment this yeah so now we can use another array let's take a variable m and let's give array dot new and i'm sending five times i want this word hello so when i do put s so hash m so it would give me hello five times inside the area so this is a trick now one thing you need to observe now i'll remove i'll remove uh like the same can also be initialized with an integer variable so like i'll do this so now it says five times i'll get the zero if you want to try some empty array with some particular value you can do this okay so i'll comment this out also sorry yeah so yeah so this looks perfect perfectly fine now what we can do is uh we can also use another range operator and for that what we are going to do at a this time we don't use the new operator we are not using this okay we will not use this and we give 20.30 if you don't want to include factory put an extra dot i already pre put in this my previous tutorial that this would include the last element last range and this would not include the last range okay now put s hash m and let's go with this and oh here you can see i've got the array so make sure you don't put the new operator this time now some basic operations you can do with the arrays is like some basic operations you can do uh so like one is now let's create uh like some uh like dummy array a is equal to array what new and i'll say 1 1 two three let me try out some with random number 10 20 30 40 50. okay now uh you can uh i'll show you one thing also you can also what i'm trying to emulate here you can also run this on ah like irb command so that is rails interactive console so you can run this irb and then you can have an interactive rails console and you can run this or there also okay so let's some uh let some like let's move to the next thing then you can type exit and you can come out of this interactive console so i'll show you also how to work with interactive rails console and now what you can do you can do first the very basic command you can do put test a dot length okay so let's run this and when i run a dot n so it gives five the same thing can be a dot size also so when i run a dot size so it gives fives as well okay another thing we can run is uh like another thing we can run is a dot first and a dot last so a dot first would return me the first element now let's run this a dot first digit this gives 10 now a dot last would give me the last element so that is 50. so a dot first returned with 10 8 50 and the size and length works perfectly fine okay so we can run these commands to like have a better overview another thing we can have is push and pop okay so i'll show you push and pau so hey everyone like this was like four operators we had seen like one was the first last uh and size and length so you can use all of them first okay you can also lose last and size and length okay so these are the four operators we can use uh one thing you could also use you can use a dot to underscore string so this would convert this to a string okay so i'll show you how this runs so here you can see so here we have got the string output of this it already looks like ruby gray ruby also does this behind the scenes like when we are using put s so it already does this behind the scene so we don't like i get intuition like this is happening okay so this is one thing we can also do so two operators like we can do use we can push 60 now we can print this and we get 60 okay now okay okay i did like okay i did one now we can do this sorry i had like then this like but it works perfectly fine not an issue but yeah this is the correct way to do it now i can do a dot pop also so the pop would remove the element i'll show you so basically pop removes the element from the last okay it uses like append so it works it has a similar behavior to the stack data structure so like it now basically it like pushes element from the back and pops the element from the back so it behaves like a stack data structure okay now we can move to like one last thing is uh there are various method in ruby like each with index and with index so the important one is a very important one is each with index because this works as a folly for each loop h with index i get two things in this one is the value and another in the index okay so i am going to type this put as a statement right the value add index okay now i'm going to put iadx is hash val okay so this is is going to print like five times or like so and this is like this is the one of the most so the value at index 0 is 10 valued index 1 is 20 value at index 2 is 30 and value of index 3 is 40 and the value at index 5 is 50. uh we could also like we could also move with some another methods so there are various methods and array you can like have a view so we can also like uh delete underscope add at zero so this would this should probably okay i forgot to print this sorry put s hash a okay now let's run this so basically delete at the index 0 okay now if you want to delete the particular element so you need to define 20 so this would delete the one at 20 so see perfect so these are all like various methods we perform in ruby for arrow operations so thank you everyone for watching this i'll catch you in the next video