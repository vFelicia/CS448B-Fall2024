hello guys in this video I'm going to show you how you can set up a very simple junit test for your Java program now what is junit junit is a unit testing framework for Java programming language and it has been important in development of test driven development process so using junit you can set up uh test for your program so that uh you know if your program is really large and you don't have the time to test each and every function manually junit can be used for this these kind of test or J unit test can be used for nightly test so that you can uh write your code in the uh in the day and you can run these uh junit in the night so that you can check uh if your program is uh you know correctly working with other you know classes or not so let's uh create a simple junit test first of all we will create a simple uh project for Java and then we will create uh junit uh test cases for this project so go to files new and Java project and first of all we will create our new jav project and I will name it as my class for example okay and make sure this option in Project layout use project folder as root for sources and class files is selected click next next and click finish so this will create a simple project for us and in here we are going to create a package first so just right click your your project and click new package and this package we will name it as for example um programming knowledge Okay click finish and inside this package we will create a class so create new class and uh this class name we will name it as my J unit class okay and click finish so this will create a class for us and in here we can uh write our program right so let's create uh some simple function inside this class for example public int add so we are going to add two numbers int a int B and it's just going to return the addition of a + b okay uh and let's create one more function and that's going to give us the concatenation of two strings so so these are very simple functions uh the purpose of uh this uh video is not uh you know not to show how to write functions or other things but how to set up a simple uh junit test on our functions okay so now we have created uh simple class and some functions inside our class and now let's uh set up some junit test on this uh these functions so what uh you can do is you can just go to your project and go to new and in here you will be able to see a section called junit test case and these cases you can Define multiple cases for multiple functions okay and these test case combined together to make a suit so you can also create a suit for your test cases so just first of all we will create this junit test case for us and uh you can you know give the name to the test case and in here you can choose uh which uh junit uh Library you want to use new junit 3 test or new junit 4 test we are going to leave it as default which is junit 4 for now and we name our test as my class test okay or Let's uh precisely name our test as ADD test because we are going to use this for this function for adding two integers okay so now what we can do here is Click finish and it's going to ask the which Library you want to uh use and it's going to prompt us that junit 4 is not on buildin part do you want want to add it yes we want to add it and now we have created a simple uh you know test case for us junit test case and this test you can change the name of this test as ADD test for example because we are going to test the add function here and in here you can call your class so we have created this class right J unit test class okay and in here uh we have two functions so we are going to test first function for now right so in this ADD test we will Define our class and we will name it as junit for example is equal to new my junit test class and then we can use this to call the add function inside our J unit class my junit class right so we are expecting int as a result result is equal to J unit dot add okay and in here let's uh pass some numbers 100 and 200 okay now this result will be the summation of these two because we are adding uh these two numbers using this function so we can uh just check for the equality using assert equal okay and the first argument of this assert equal function takes the value you are expecting for example 300 because we know that the addition of 100 and 200 is 300 and then we will pass the result of uh the function which uh which is returned by add function right so this is uh simple test uh we have written for our add function you can uh Define more test cases there are more functions to test the functionality of uh your functions and classes but this is really simple stuff uh I want to show right now now in order to run your test what you need to do is you just need to go to your uh add test. Java which is our junit test case right click on it and now then debug as junit test okay so right click and debug as junit test and what you what are the source file you want to add in it you can leave them as default click okay and now it shows the result here in green line here and it says zero error zero failure so that means our unit test has passed which we have written for the add function in my junit class right now let's uh Define some unexpected result for example we are expecting 3001 and the addition of uh this is 300 so this test should fail right so once again we are going to go to our add test. Java and right click and debug as junit okay and now your test fails because the result is 300 and we expecting 3001 so obviously the test will fail right now uh let's define uh second test for uh our second class or second function in the class so just go to your project new junit test and then conat test for example click finish and in have you can change the name of your function as concat test okay and we will delete this and for now let's uh copy the same code from the earlier test and paste it here and we are just going to change uh this result here now we are testing concatenation function which returns string and this will be junit Dot concat and we will pass two strings here for example hello world okay and as a result we are expecting hello world this is uh you know case we have defined this is the case we have defined for our concatenate function right now let's try and run our second test case I forgot to add this semicolon here once again right click your project debug as uh junit test okay and our test passes okay now uh let's create a test suit for our two test so we have written two test for our two functions and now you can define a test suit for all your tests right so right click on your project go to new and in here go to other and in here you will be able to see a category called Java and inside this Java category there is a category called junit and in here just choose this junit test suit click next and here we are uh you know choosing uh Source folder and the name of your suit is all test for example and then you can even choose your package name for example programming knowledge and in here you can choose your test so we going to add both the classes ADD test and concatenate test for uh this suit and click finish so it has created a test suit for us with uh both the test classes ADD test and concatenate test class okay now you can run this all test. Java file right click debug as junit test and it runs your Java suit uh test suit junit test suit and in here you it says both test passes and you know you can see both are green here so in this way you can create a simple junit test for your Java program I hope you have enjoyed this video please wait comment subscribe and bye for