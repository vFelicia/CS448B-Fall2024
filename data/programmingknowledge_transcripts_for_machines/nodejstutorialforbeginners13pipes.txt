hello guys welcome to the next video on node.js tutorial for beginners in the last two videos we have been seeing how to use readable streams and writable streams in no chairs and in this video we will learn an important concept called piping in node.js with readable streams and writable streams now in no chairs or any server application writing and reading streams is so important and frequently use thing that node.js has provided a back better mechanism for us to use which is called piping so if you think about a website for example what it basically does is it takes the HTML page for example and just giving a very simple example so a server takes a HTML page and it first of all reads this HTML page and create for example writable stream and send it to a browser in which we can see this HTML page content right so this operation is really basic to us over whenever you are making a website for example so first of all let's see what is piping or what are pipes so a piping is a great mechanism in which you can read data from a source and write to a destination without managing the flow yourself right so in the previous video we have seen that we had to create a readable stream first from a file and then we have created a writable stream and then we were you know listening for the data event to write it to file using the writable stream and here also we can handle the ending of the reading right now the piping makes it really easy and it manages all these things by itself so a pipe method listens for the data event by itself and it automatically you know sends this you know chunk of data which we are reading to the file we want so how we can create a pipe so we still need here are readable stream and also a writable stream so we will leave these two lines of code here now in order to use pipe you can use pipe only with readable stream so you need to have an object of readable stream and then call a method called pipe ok and this pipe takes an argument which is a writable stream so you can just give this object here and then it's going to do the stop automatically search it's going to listen for the data event and it's not going to worry about or we don't have to worry about if the you know data is read slowly or fast or or handling the chunks of data right this pipe method is going to do it by itself so let's run our code and first of all I'm going to delete this right file because it's already existing I'm just going to delete this and now I'm going to save my code and I'm going to run it so let's run it so the code has run and you can see it has created this file again which is writable stream and which has the same content as the input file which we have ok so this makes things really simple for us right now in server so in the previous videos we have created a node.js server right so let's use the server code again to send this file stream or this data of the file using stream to a web browser ok so let's use first of all this HTTP module which is an inbuilt module which we have also seen in the previous videos right so require and then you can just write HTTP okay and then we have created a server in the previous videos so I'm going to just take that code which we have written in the previous videos for creating a server and we will just use this code okay so if you don't know how we can use this code just see the previous videos where I have shown you how to use this HTTP module right now in here what we want to do basically is whatever we read from the file or input file we want to send it to a browser right so let's first remove this code first of all right and let's run this code for the first time and it's going to print hello world for us right so I'm going to run this code and I'm going to open the browser and it's going to just print hello world which is the basic functionality of this code right now in order to send the content of this file we don't need a writable stream right because we are going to directly send the you know file content to the browser okay so what we are going to do is we will just take this readable stream and we will create it inside this server okay and using this read stream object instead of using this response dot end which was sending this data to the browser we can just use this read stream dot pipe and then we can just add this argument called ref or response argument here and everything will be done by itself and we are going to just remove this code here okay so what we have basically done is we have created a readable stream and then using pipe we are sending this stream to the response okay and let's run the code and let's see if it runs or not so I'm going to just stop my server and run it once again and I'm going to refresh my browser and you can see all the content of the file is on our browser page okay so let's repeat what we have done here so in this server we have created a really small sour which relations on local host on port 3,000 you can see here and what it's going to do is it's going to just write to the you know whenever a request come it's going to write or give the response in a plain text so this content type is plain text it's not HTML because we are sending the plain text okay and if you want to send the HTML page you may you know rightly guess that we just need HTML text dot HTML here right and this we are going to see in the next video to send HTML to the browser using this code but right now we are using the plain text that's why the content type is text slash plain and then we are reading the file using the file stream and then we are just piping it to the browser using this response variable okay ooh piping makes it really easy for us to serve the you know whatever we are reading as a stream so I hope you have understood this basic concept I hope you have enjoyed this video please rate comment subscribe and bye for now