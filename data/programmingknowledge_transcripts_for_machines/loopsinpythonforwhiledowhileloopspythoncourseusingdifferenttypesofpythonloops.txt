in this video I'm going to show you how to use loops in Python and we will start with the while loop so first of all what is a loop so a loop allows us to repeat over some block of code again and again until and unless some condition is met now let's see how to use while loop in Python so let's say I'm going to declare a variable called I and I'm going to initialize it with the value 0 and to use a while loop you use this keyword and then you provide some condition so let's say I want to check whether the value inside the I variable is less than 5 or not okay and as in the case of if also we have seen we provide after the condition this colon symbol and then in the next line we write the code which we want to perform again and again until this while loop condition is true so let's say we want to just print something and we will print that the value of I is and then we will print the value of I like this also I want to change the value of I with every step so I will change the value of I using this expression which is I plus equals 1 this essentially mean that we want to just add 1 every time whenever this code is executed also we can say that we want to perform this operation I is equal to I plus 1 so this statement is similar to this statement let me provide some spaces here now in here also you will observe that I have provided some indentation here and indentation means that these two lines of code is the part of while loop ok so when I want to write something outside the while loop I will start from here with no indentation and let's I want to just print that we are finished and now let me run the code and let's see what's the result and you will see here first of all this string is executed which is the value of I is and then the value of I is printed which is 0 1 2 3 & 4 so as you can see here that we have initialized I is equal to 2 so the initial value of I is 0 now when we come to this code and when this condition is checked here the value of I is 0 which is less than 5 that means this condition is true and that means that these two lines of code which are under while loop will be executed so this line is executed where value of I is printed which is I is equal to 0 and this line of code increments the value of I by 1 so when this line of code is executed now the value of I becomes 1 because previously it was 0 and once again this program flow goes to the starting to evaluate this condition and this time the value of I is 1 which is less than 5 and the condition is true once again and again this line is of code is executed and this line of code is executed and the value of I is incremented by 1 once again and the value of I becomes 2 here and this will happen again and again until the value of I becomes 5 and when the value of I becomes 5 this condition will be false and that means this code will not be executed this code will only be executed when the while loop condition is true and then at last this line of code is printed which is finished while loop now let me give you one more example of while loop and I will start from the top once again and this time I will declare a variable called num and I will initialize this value by 0 and also I will declare a variable called sum an initial value of sum is also 0 now here first all I will ask the user to enter a number so I'm going to just write and also I will ask the user if he or she wants to exit from the loop he can enter zeros and then in the next line I will start with my while loop and I will give the condition if the number so if the number I am going to write number is not equals to zero we want to perform some operations and what operation we want to perform we want to ask the user to provide any number and we will transfer this number into the variable num so here I will first of all write input and then I will ask the user to provide the number and when the user provides the number I want to convert it to a float value so I will just type cast this input to a float value and then this number will be assigned to the variable num now here don't forget to give the Kulin and in the next line what I will do is I will just use my some variable and I will just add the number value to the sum so I can just write sum is equal to sum plus num and this means that initially the value of sum will be zero and then this number will be added to the sum and until this loop runs we will get the sum of all the numbers which is entered by the user and at last I'm going to just print the value of sum so now what do you think will happen so in this condition we are evaluating that num should not be equal to zero and then only this code will be executed and we have provided the initial value of number is equal to zero so this condition will never be met and this statement will never be executed so we need to provide the initial value of num is equal to 1 and then whenever the user provides the value this one will be overwritten by the value which is provided by the you so this time when we run the code you can see first of all the program asked us to provide a number so I will provide 100 here and then press Enter and you can see the sum is printed which is equal to hundred once again we will provide some number and then press ENTER and now you can see sum is equal to 150 once again we will provide one number and then press ENTER and now the sum is one zero five zero now let's say we provide a number is equal to zero and then press Enter you can see that our while loop is finished because zero is not equal to zero that means a false condition and then the flow of program comes out of the loop and then the other while loop will be executed which is this while loop and that's why this output is printed we can also write that sum is equal to so we know that this is the sum so sum equals and then after the comma we will print the value of sum and once again when we execute the code and once I want to exit from the code I can use zero to exit so zero and then press enter and I come out of this loop now Python also supports the else statement to be associated with the loop statement so what I mean by the else statement to be associated with the loop statement is that I can use after the end of this while loop condition I can use here else and after the Kulin I can provide some code which I want to execute once this loop is finished okay so I can write here that I want to print for example finished sum so let me run the code once again and I will quickly provide some numbers here and which will provide the sum and when I provide a zero here then we come out of the loop and you can see this finished some string is printed using this else so once your program comes out of the loop this else statement will be executed similarly we can go down and here also instead of writing this finished while loop we can also give else statement here so I'm going to just write else and after the colon here I need to provide the indentation so for space indentation one two three four and everything will be okay and once I run the code and first of all I will provide zero here to see if this is executed and you can see this else condition is called once your while loop is finished now also you can provide some condition here which is always true so for example I can write through here and this means that while loop evaluates to true every time and this means that this statement will be executed forever so this is also possible but you need to think carefully what do you want to do do you want to execute this code infinitely or do you want at some time that this condition will be false so this is how you can use while loops in Python how to use for loops in Python so first of all what are for loops so a for loop is used to iterate over a sequence and that sequence can be a list or a tuple or a dictionary or a set or a string so for that I'm going to declare some variables and the first variable is a which is a list second variable is B which is a couple third is C which is a set fourth is a string and fifth variable is e which is a dictionary now before seeing the syntax of for loop I'm going to show you how to use in operator in Python because it's used in for loop so I'm going to first of all use print and then I'm going to use 0 and then use in operator and then I'm going to use this first variable which is a which is a list right and let's see what happens when I try to run this code so it prints true so in operator will give you true or false depending upon whether this value is present in your sequence or not so for example when I write hundred here which is not present in the list it's going to return us false so this you can use with the tuple also let me just use it with tuple and let's use one here and I'm going to run the program it prints true once again also we can use in operator with strings so I can write D here but for that I need to convert this one into a string so now when I run the code it will give me true now let's see how to use a for a loop in Python so for loop as I said we can use with some sequence so let's use it with a which is a list so I can write X in E and E is a list in this case and then I can just print the value of x and let's see what happens first of all when we just write this kind of a for loop so we are going to run the program and what it does is it prints the values from 0 to 5 which is the element present inside the list so for loop is going to iterate over your list one by one and this in operator is going to check whether this value is there in your sequence or not in this case in our list or not so first of all when for loop start it will transfer the first value which is 0 into X and then it checks whether X is in this list a or not and then it's going to print the value of x which is 0 and once again programs sequence goes here and once again the next value is transferred to X which is 1 and once again this condition is validated if one is in this list a or not and then the value of x is printed which is 1 and this iteration goes on and on until 5 is reached which is the last value in the list so 5 is printed and after that there is nothing inside X and then the program flow comes out of this loop you can also use this for loop with the tupple also so let's try it with tuples and let's see what happens it's going to print the same values also with the set let's see what happens so I'm going to run the program once again and it prints 0 to 5 once again because these are the content of the set all so once again let's try to use this for loop with the string and let's see what happens and it's going to print out the content of this string which is 0 1 2 3 4 5 and it prints them one by one now with the dictionary we use this for loop in a little bit different way so for example I will write the variable name which is a dictionary and then let's say I want to just print all the keys inside this dictionary then I can write e dot keys and then we have all the keys using this function and when I run the code it's going to print all the keys inside your dictionary also when you use the function called dot values it's going to print out all the values inside your dictionary you can see max and the age 20 now let's say you want to print out all the key value pairs which are there in your dictionary you can use a function called items and this is going to give you keys and values right so I can just write key comma value here and then I can print the value of key first of all key and let's provide some space here and then let's print out the variable value here okay and when I run the code it's going to give you first of all key and then the value once again key and then the value so in order to print out the keys and values from a dictionary you can use this kind of notation now you can also use a function called range so let me show you how to use this function which is range which returns us the values starting from 0 so there is a function called range here and in here you can provide a number and this range is going to return the number starting from 0 to 5 so whatever number you write here the range array will be returned from 0 until that number except whatever number you write here ok so let me just try to print out the values which is there in the X and when I try to print this it's going to return me from 0 five and you can see here six is not printed because the range will give us the value except that value which you write here you can also provide the start value here so let's say I want to start from two and I want to go until five I can write something like this and now you can see now it start printing from two to five also you can give a third parameter here which is a step parameter so I can give three here for example and let's say I want to write thirty here and let's run the code and now what is going to return is it starts from two because we have given the start value to here and it's going to go until twenty nine because we have given 30 value here right and this is the step so every third value will be printed after two here so five will be printed then eight then 11 14 17 20 23 26 and 29 every third value right if you write here then we will increment in the step of so this is how you can use range function with your for loop also as I said in the last video you can use else statement with your loops so I can also write else here and then after the in the next line I can print something or I can execute some statement so for now I will just print finished and then I'm going to run the code and once the loop is finished you can see this else statement is executed which prints finished so else statement will be executed once your for loop is finished so in this way you can use for loops in Python how you can use break and continue keywords with your Python loops so to start with I have here two loops one is a for loop and other is a while loop now this for loop takes a list and then print every element out of this list using this print function in a similar way while loop evaluates the value of I if it's less than five then it's going to print the value of I and then increment the value of I by one now this is all normal and we have already seen this kind of code now you can use a break keyword with your loops in order to terminate the execution of loop immediately so let's see how we can use break keyword first and then we will see how to use continue keyword so here I'm going to give a condition inside my for loop and I'm going to just evaluate whether X is equal to 3 or not and if X is equal to 3 I'm going to use this break keyword in a same way I'm going to use the safe condition inside my while loop also but instead this time I'm going to evaluate I is equal to 3 and F I is equal to 3 then I'm going to use this break inside this if condition so let's run the code and let's see what happens and you can see in the for loop it has only printed 0 1 2 even though this for loop is supposed to print from 0 to 5 it has printed until 2 from 0 because as soon as this x value becomes 3 and we call break here the loop is terminated immediately and our program will come out of the loop immediately as soon as this break keyword is called in the case of this while loop also as soon as this I value becomes 3 we are calling the break keyword and as soon as this break keyword is called or loop is broken and the execution of code will come out of this loop so until 2 everything was ok but as soon as the value becomes 3 this break is called and then we come out of the loop let me just print a line here in order to separate these two loops so we know that from where 1 is starting right so I'm going to once again run the code and you can see for loop prints from 0 to 2 and also while loop prints from zero to two if you change the value here for example here you want to evaluate X is equal to two or not and here you want to evaluate if X is equal to four or not and then you break out of the loop and once again when I run the code you can see the for loop runs only two iteration four zero and one and as soon as the value of X becomes two we call the break keyword and we come out of this loop and in the case of while loop as soon as this value of I becomes four we come out of the loop so the value from zero to three is printed now let's see how we can use a continue keyword instead of this break keyword so instead of this break keyword I will use a keyword called continue here and also in the while loop also I'm going to use this keyword called continue and I'm going to run the program and let's see what happens so now when you see here so you can see here for loop starts from printing zero one and as soon as the value of x becomes two this condition is met and this continue is called and as soon as this continue keyword is called everything whatever code comes after this continue keyword will be skipped and your program execution goes once again to a for loop for the next value so you can see in case where X is equal to two and continuing is called this statement is not executed because as soon as we execute continue in our loop then that iteration is skipped and all the code after the continue will not be executed okay so we go to the next iteration so that's why two is not printed because this was kept in case of two and then directly three is printed and then four and five is printed in case of while loop also as soon as the value of I becomes four you can see for is not printed here you can also change this value to two and then I'm going to run the program once again and you can see while loop prints zero one and why it prints zero and one so because as soon as the value of I becomes to this continue keyword is called and after that this iteration is skipped and also because this iteration is skipped these two lines of code are not executed and because this line of code is not executed that's why the value of I is not incremented and the value of I always remains too and that's why this becomes infinite loop right so instead of increment the value of I at the last line we can increment the value of I just after this condition check whether I is less than five or not and then we run the code now you can see it prints one three four and five so now what's happening here is initially the value of I is equal to zero and this condition is evaluated and then we first increment the value by one and that's why it starts with the printing of one by using this print function and as soon as I is equal to two this continue is called and that's why here too is not printed because as soon as the value of I becomes two this continue is called and every code or every statement after the continue will be skipped for that iteration that's why two is not printed here so in this way you can use break and continue keywords with loop I hope you have enjoyed this video and I will see you in the next video