hey guys welcome to programming knowledge in this video we'll be looking at conditional statement toward our conditional statements what are conditions basically conditions are those set of rules which define a particular procedure to be followed so do I mean by that let's take an example suppose you want to sort out all those files which you created yesterday from the cedral or from the desktop so the way we do that is we take all the files you look at the date when it was created and then if it matches is today's date we put that inside separate folder or else you leave it or you put it in search of another folder doesn't matter though our only focus is they are putting dual spines which were created yesterday into a separate folder so when you're checking whether the date matches or not they are actually performing a conditional operation but that is SWAT and useful operators or conditional statements loop so conditional operators work like if something is there and you read follow a some procedure or else you need to follow some other procedure which may or may not be defined if it is not define you need not do anything if it is defined you need to follow that procedure so it is like if something then you do something so do procedure one suppose and then else what you need to do those do procedure two or you can leave it right this does not need to be defined so this is not important what is important is this condition this condition if that something is satisfied then only you need to do procedure one or else you need not do anything all you need to do some other set of statements which are defined so that this whole conditional statement work and the same goes that C++ also so the very different conditions it matters you put an if and then inside a pair of parenthesis you put a conditional statement and here you have a block so this cloth is different from this block Here I am writing it so this is if block so this executes only when that condition if satisfied and then if this condition fails in our example suppose some other file came up which was created one year ago so what you need to do you need not do anything or else if you want you can put it inside a another clock that is up to you should do that is else if that condition fails you have an inner clock you need to follow this particular procedure so this set of statements or this set of rules executes only when this rule is true or this conditional statements evaluate to true or else it follows this else block so the way you define conditions is by using operators called relational operator relational operators just give the relation between two operands so these are same as the mathematical relations you have a greater than you have a less than you have a greater than or equal to less than or equal to and then you haven't is equal dude this is is equal to so do not get confused with a single equal to sign we use so by declaring variables I told that int a equal to 10 means a whole star value of 10 so this single equal to operator there is known as the assignment operator and this double equal to is the is equal to operator so the differences when you tell a equal to 10 and a equal to equal to 10 this means that assign the value 10 to 8 so this is what this statement and this statement means compared a and 10 and check its equality so this is what it means so this double equal to means that you will take the value of a you will take 10 you compare it and if both are equal then you say it's true or else if we tell that it's false so this single equal to operator just means that you put this 10 inside this memory location a that's what it needs here under point loaders MD equal to a this and L so here even though it mathematically both the statements are same then equal to cannot be processed because all this wants the left hand side to be memory location whatever the right hand side is it can be memory location it can be a constant value it can be anything so whatever it is it has to go into the left hand memory location by using this operator which is the assignment operator and this double equal to operator can work either way so even if you put n equal to equal to a this is the same meaning it tastes and it takes a value of 8 compares it and if they are equal it's going to tell yes but as it's going to tell you so these are the operators and you have an engine operator this is double equal to which is equal to and then you are not equal to not is basically this exclamation mark over here this is not equal to so these are the operators you use to check the conditions so let us look at a quick program let us make some program that save or to check whether the person is eligible to let's say drive a vehicle or not so for the legal age for driving vehicle Society ninis so let's take whether a person is eligible to drive the McClure Orange Tom put an oath or not whether is an eligible voter or not we can do that so let's start by writing the input statements so first we ask the name enter the nib is going to enter the name you know name is going to be a string so string name I don't know the name that's why I'm going to leave it blank and I'm going to take in the name over here so C in name and now I'm going to take the age of that person so let's say C enter okay enter your age over here now I'm going to take the ages years so let us mention that also over here in in years something at time so I'm going to get the a genius number of years is going to be in integer so I'm just going to put an int age and then I'm going to get the age all right well now I need to check in condition so what is going to be a condition I want to tell that the user can't rise awake Lord put the Earth only face above 18 years of age so way we do our chance you put an F and then inside this pair of brackets you put the condition the condition as if his age is greater than or equal to 18 or not you are going to check that and then if his age is greater than 18 then you put a statement right let's say you are eligible to wood or drive a car something good right he said Isabelle if he is greater than or equal to 18 he sensible things you can just print fun okay sorry you are not eligible something like that what we're done we have just taken a name we have taken the age you have complete the age and we are checking whether the age is greater than or equal to 18 or not so if he is greater than or equal to 18 or if it's a major you are going to tell that he is eligible to vote or drive a car or any vehicle or else you're going to say that you are not eligible so that's how you do that let's try and execute this program so here let's say enter the name something that John and enter your age 12 so here it says sorry you're not eligible let me put in new line after this statement so that you don't get confused with the compilers output and here so let's say some other name let's say hari and enter your 8 this is going to be 21 so here you can see you are eligible to vote or drive a car right so this is a simple program you have written so here you can also do another check right so suppose the person who is using a program is and not if I think wants to check the validity of your program supposing wants to do something like he wants to put negative integers or something so age is always positive right Duprey you do that is first you check whether the ages watch it or not so the way you do that is if H is greater than 0 if it is a positive number then only check it so all these statements go inside this right if the his particular age is legal then only you can check that right if he is providing some negative number you cannot check that so here I am just going to indent this thing so that it looks nice you also try to in dental program so that you can understand what you're writing so this is this from this block to this block this is another if this is else inside this if block so all these statements are inside this statement or else you say um co2 please enter a valid age right so it is not valid why is not a valid age right so you take only positive integers as ages and you're checking whether that age is 18 or not if it is equal to or greater than eating it you're saying that you're eligible to vote or drive a car or else you're telling that you're not a believer so here now you can execute and try out this program it is better to execute after every condition you write right because when you are writing a bigger program it is it will be a good practice to actually check when you're putting a condition so that validates your program even more faster and will be able to easily debug your program so here let's say I enter the name that stick of some other name let's say Jack and enter the age let's try something naughty now let's write minus 120 and enter so here it says please enter a valid age so you can have many checks like that so you can have so Mady is going to endure something weird in the thousand years or 2,000 years you can check that also the age should be less than thousand or less than 2000 something for that we are going to need another set of operators which I'll be talking in the next video but you can do that inside this if also so I can check over here also if age is less than let's say put some maximum 800 right so let's say 1 or 5 or 1 or 2 maximum 1 or 2 so if it is less than 1 or 2 then only you need to execute this statement so ctrl X and it goes inside this and let me Indian this properly you right so if a just less amount of this audience you are again going to say the same thing so just control C and then over here inside this if you putting is this else so that is how simple conditional statements are just going to play with conditions so here I'm checking your it is a positive number and Here I am checking whether it's too big if it is too big I am Telling that please enter evaluate and if it's too small also I am Telling that please enter validate and here if it lies between the range of 1 201 because 102 is a maximum weight so I put less than hundred this goes up 101 and greater than 0 starts from 1 so from 1 201 it's going to check and if that age is greater than or equal to 18 it's a it's going to say that you are able to would arise it's going to say if you are not eligible so that is how you perform a conditional check so this statements which are written inside an F so I have written an F inside F so this F is the mainus inside this I have written this and inside this I have written this F well stated so this consular is actually known as let me write somewhere over here okay on top I read this is known as nested if to knit conditional statement so this is what this is called us now if I enter bigger Langley than 100 and 105 or 200 so that will say you are not you are not entering the validate and even if I enter some negative numbers also you are it's going to tell that you are not entering the validation so that is how you play with conditional statements you try writing a program which will segregate whether a number is odd or even or not I know this is a very simple program you will find it in the internet but just try it on own so let me give you a hint and even number then divided by 2 gives remainder 0 and that's it you knew your condition so this is the only condition I'm going to give you take a number and then you are going to determine whether it's an even number on or an odd number and this is the him so if an even number is divided by 2 it will be given for matter as 0 and then if it is an odd number it's going to be some of the remainder women is going to be one so you can try that you can try writing that program in the next video we will be talking about some other operators which we'll be using in our conditional statements so till then happy coding