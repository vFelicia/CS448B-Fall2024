hey guys welcome in the next video on open CV tutorial for beginners using Python in this video we will discuss about image pyramids in open CV so till now normally when we have used images we have used the images of constant size but sometimes we need to work with the images of different resolution so for example if I have an image and I want to search the face inside an image this face can be of different sizes so using image pyramids we just create the images of different resolutions and then we search for the object for example face in all of these images so pyramid or pyramid representation is a type of multi scale signal representation in which a signal or an image is subject to repeated smoothing and sub sampling so a normal pyramid when you create a pyramid of images it will look like this so let's say this is the original image at the bottom then when you are down scale an image using a pyramid function it's going to give you this image which have the half resolution than the original image and then when you further go up it's going to give you the onefourth of the original image and then so on so 1/8 or 1/16 of an image now there are two types of image pyramids which are available in OpenCV first is called gaussian pyramid and second is called laplacian pyramid so first we will discuss about the gaussian pyramid so gaussian pyramid is nothing but a repeat filtering and subsampling of an image now there are two functions available for the Gaussian pyramid which is called pared down and paired up so let's see them one by one so I have this sample code which is just reading an image and then showing it using the I am show method now in order to use this period down function you can just define a variable let's say L R for lower resolution and then you can use CB to dot pair down so there are two functions you can see pair down and pair up so first of all we will see pair down and then we are going to pass our image as an argument here so I'm going to just pass our image as an argument and we are already showing the original image and let's show the image after we have reduced the resolution of this image using the Piltdown method so pair down is going to reduce the resolution of an image so I'm going to just use LR here and let's say this is the pair down one image okay so let's run this code and let's see what happens so you can see this is the original image and this is about you can see onefourth of this original image right so this pair down method is going to reduce the resolution of an image when you apply the same method on the second image so let's say this is LR 1 and then we create a second variable error LR 2 and when we pass LR 1 as an argument for this method to create the LR 2 method to image then let's see what happens so this will be L R 1 and let's just say this is going to give lr2 the resolution of image will reduce further so let's see what happens so this was the original image this was the image which we got from the first period down method and then we get this image which we which is further reduced in resolution so this is the image after applying the pareddown method second time on the LR one image okay so you can see the resolution of image is reducing and it's creating a kind of pyramid and that's why it's called the image pyramid now there is a method called pair up also available in OpenCV so let's see what this pair up method do so as you can expect it's going to increase the resolution of the image so here I'm going to just say H R for higher resolution and then I'm going to just see me two dot pair up okay and it's going to increase the resolution of an image now let's say we want to increase the resolution of of this image which is the smallest image which we got using the pareddown method right so we are going to apply the pair up on the last image which we got using the pair down method and let's see what happens so when I'm going to use this hr2 here and this we got from pair up method and let's say this is the pair up one and I'm going to just run this code and you are going to see that we have converted this image which was the smallest image to a higher resolution which resulted in this image but when you see this image carefully so let me just move this to this side and this was the original image so let me just minimize this so this image we have converted to this image using the pair up method so ideally this image should look like this but you have to remember that this pair up image is not going to be equal to this image because once you decrease the resolution using the pair down method you lose the information about that image so when you use pair up to just increase the resolution of this image then you can see the result looks little bit blurred because some of the information is loosed using the pair down method so you have to keep this in mind that many you want to increase the resolution after you have reduced the resolution you're not going to get the same result as you might expect that this image should look like this but they are not equal images so this image is just a higher resolution of this image and it has nothing to do with this image so these are the two methods which are available in Gaussian pyramid now if you want to create a pyramid of multiple resolution instead of just using this pair up or pared down method repeatedly what you can do here is I'm going to just remove this and remove this code also so what I'm going to do is I'm going to copy the image into a new variable so I'm going to just say Lear is equal to I am G dot copy there is a method available for copying the image which is copy and then I'm going to create the Gaussian pyramid array okay so I'm going to just create a variable called GP for a Gaussian pyramid is equal to then in square bracket I'm going to just pass this image here as the first element of this list then what I can do is I can use a for loop instead of just rewriting this pair down method again and again and you might already know how to use for loop in Python so for I in range and here we can provide any range so let's say we want to create five image pyramid okay so five times we want to reduce the resolution so we are going to give six here because range goes the number minus one so whatever you give you minus one right so now what we are going to do is we are going to just use our layer parameter once again and then we are going to just call C v2 dot pareddown method so pair it down and then we want to just say layer okay and then we want to append to the Gaussian pyramid list okay so we are going to just say GP dot append and we are going to append the result of this pair down to our list which we have created here okay so this is going to just append this image to our list of images and then let's just show this image using cb2 dot I am show method so see v2 dot I am sure and here we can just say s ter for converting the integer to the string because the first parameter you'd give to I am sure is a string parameter and that's why I'm converting the integer to the string and the second parameter is the image so let's pass this layer here okay so you have the original image which will be shown using this line of code and then you will see multiple number of images of different resolution using this code so let's run this code and let's see what happens so I'm going to run this code and you can see there are different images resulted using that code which we have written so this was the first image which is zero and then this is the second image and then this is the third fourth fifth and sixth so sixth you can see have a very small resolution so this is how you can use pareddown method multiple times using a for loop now what our Laplace and pyramids so laplacian pyramids are formed from the gaussian pyramids there is no exclusive function for creating the laplacian pyramid so as you have seen that in gaussian pyramids there are two methods available pair up and pair down but there is no exclusive function for creating the laplacian pyramid so how we can create a laplacian pyramid if there is no function available for creating them so you can create a laplacian pyramid or a level of laplacian pyramid is formed by the difference between that level in the gaussian pyramid and the extended version of its upper level in the gaussian pyramid so this definition might be confusing to you guys so let me explain you with the code what I mean by this definition so what I'm going to do is first of all I'm going to take the top level layer of the Gaussian pyramid so top level layer of the Gaussian pyramid is the last image which is generated using this for loop so let's say we have six images or five images using this for loop so what we are going to do is because we have appended each and every image to this list right so we have all the images inside this list so we can just get the last image using the indexing so again I'm going to use the layer variable and then I'm going to just say GP for Gaussian pyramid list and then there is the index five because last image will be available at the index five of this list so we get the last image of that Gaussian pyramid and then let's show this image so I'm going to just say cb2 dot I am sure and this is the upper level or the last image so I'm going to say upper level Gaussian pyramid and then we are going to pass this layer variable here so this is going to show just the last image of this list and let's just comment this code out because we don't want to see all the images and then I'm going to create a new list for laplacian pyramid so I'm going to just say LP for laplacian pyramid and then I'm going to create a list using the layer variable itself as we have done for the Gaussian pyramid list also so the first element here is the layer variable itself and now we are going to use the for loop and then I in range and this time what we are going to do is you might already know how to use the range function and if you don't know you can see you can give the stop integer here or you can give multiple parameters here so you can see there is one more implementation of this range function so you can give the start parameter and the stop range so start is the starting point stop is the stopping point and also you can give the steps so this step means in what number you want to reduce okay so let's say we want to start from 5 and then we want to go until zero and we want to reduce in the step of minus 1 okay so 5 4 3 2 1 so let's print the value of I first of all if you might be interested in the result of this range function then let's just run this code and let's see what happens so this is the images which we get but we are not interested in these images we are interested in the print function output so you can see the output of this print function code is 5 4 3 2 1 as I said the lower limit is not reached or if you give 0 here then it's going to go until 1 and not 0 if you give 6 here then it's going to go until 5 not 6 so let me repeat the definition of laplacian pyramid once again so laplacian pyramid is formed by the difference between that level in the gaussian pyramid and the extended version of its upper level in the gaussian pyramid so let's first create the extended version of that level so we are going to just create a variable called gaussian extend or extended and then we are going to extend the level of that image which are there in the gaussian pyramid list by using si the to dot dot pair up method and here what you need to give is the Gaussian pyramid list and then we just need to get the index I from this so this line gives us the extended version of the upper level in Gaussian pyramid now let's create the laplacian prima pyramid so Laplace here is equal to c v2 dot subtract because we want to find out the difference between that level in the gaussian pyramid and the extended version of its upper level so I'm going to just say GP for Gaussian pyramid and then we are going to just say I minus one as the first parameter and the second parameter is the extended version of the Gaussian upper limit and now we can use the I am show method to show all these laplacian images so I'm going to just say see v2 dot I am sure and once again I'm going to use STR function to convert from a number to string and then in the next parameter I'm going to just pass the laplacian parameter here as an image source so what do you think will this code work so let's see what happens when we are going to run this code so you can see the laplacian pyramid looks just like the edge detection so all the edges are shown here on every image this is the first level this is the second level third level fourth fifth level so these images are called the laplacian pyramid now what is the use of creating those laplacian pyramids or the gaussian pyramids so the laplacian and gaussian pyramid helps us to blend the images and the reconstruction of the images so these are the two benefits of creating those laplacian and the gaussian pyramids so in the next video we are going to see how we can blend the images or how can we reconstruct the images using the opencv and the image pyramids so stay tuned and I will see you in the next video you