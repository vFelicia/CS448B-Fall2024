today we are going to take a look at some of the important interview questions that can be asked from the C programming language so let's take a look first question is what is dynamic memory allocation increase so the answer is dynamic memory allocation is the process of allocating memory to the program and it's variable during runtime it involves three functions for allocating the memory and one function free the used memory or the allocated so the three functions that are used to allocate the memory are malloc calloc and we allow the function that is used to reallocate the used memory is free all these functions have no parameters next question what do you mean by memory leak so memory leak can be defined as a situation where programmer allocates dynamic memory to the program but fails to free or delete the used memory after the completion of the code this is a harmful process if demons and servers are included in the program further if the memory is being allocated but is not being freed then it can cause a problem in the memory management so this is memory leak next question what is the difference between declaring a header file with angular brackets and double quotes if the header file is declared using the angular bracket then the compiler searches for the header file within the buildin part but if the header file is declared using the double hood then the compiler will search for the header file in the current working directory first and if it is not found over there then it searches for the file in the other location next question what is typecasting typecasting is a process of conversion of one data type into another it is a form of explicit conversion that is it is done after this choice and RIF of the user since that's what I casting is within thousand pieces you need to mention the target data type status the data type into which you want to convert your expression into and after that you write the expression and end the statement with a semicolon for example can pH is initialized with a so sweet is a character variable status holding the character capital it int Y is another integer variable in which we have casted this character variable so we have written int Val within parentheses int that is our target data type and then we have mentioned finish so this is explicit conversion using typecasting now one will do that type annual capital e which is nothing but 65 next question what is the hash fragment directive it is the preprocessor directive that can be used to turn on or off certain features in a C program it is a three type hash fragment start up hashtag Madrid and hash mark one hash tag must start up allows us to specify functions upon program starter that is when the program starts then what functions will be fired automatically hash fragment exit allows us to specify functions called upon the program equipped that is when the program is about to exit then what functions do we need to perform hash tag more warned tells whether to suppress any warning in the C program or not next question is what is null pointer in three nice is used to indicate that a pointer doesn't point to a valid location the pointers should be initialized as null if their value is unknown at the time of declaration or when the memory pointed by the pointer is being allocated within a program next question how will you print numbers from one to hundred without using a loop so we know that if we want to do something in a repeated fashion we use loop for that purpose but how can you print numbers from one to hundred without using a loop so one method is that you have to write the printf 1,800 times but that√≠s just a troublesome process so we have another process another method through which we can do so and that is known as recursion recursion is the repeated calling of a function by itself so here we have created a function whose return type is void the name of the function is print numbers and it accepts an integer argument n within the body of the function there is an if statement if n is greater than zero then it calls itself it calls print numbers and passes n minus 1 into it after the calling it will print the value of N so this print numbers function all itself and using that it will print the value of N and n will be supplied by the user so it is a recursive calling of prints numbers and using this we can print easily the numbers from one to hundred without using a loop so now we also know that using recursion anything that could be done through loop can be done easily next question what are local static variables and what is this use a local static variable is a variable whose lifetime doesn't end with a function call where it is declared extends for the lifetime of complete program all calls to the function share the same copy of local static variable static variables can be used to count the number of times of functional order the static variable with the default value as zero next question why preprocessor directive does not end with a semicolon so the answer is semicolons is treated by the compiler and as the name suggests the preprocessors are programs that preserves the source code before compilation even start therefore the use of semicolons in preprocessors is not needed next question what is the smallest possible executable code in a C programming language since the presence of main function is needed for a program to stop its execution for the smallest possible executable code in three it is mandatory to include a main function so the code will be void main parentheses open and close and graces open and close that means it will only contain a main function with parentheses but no arguments and no body so this code will be compiled on sue it would be executed also but it will not do anything this is a smallest possible equitable food in the C programming language so that's it thanks for watching