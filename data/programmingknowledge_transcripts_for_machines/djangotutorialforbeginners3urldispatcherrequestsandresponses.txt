hello everyone welcome to programming knowledge so this is the third tutorial of Django series so I again welcome you all to programming knowledge so like in the two previous two two two tutorial I showed you how you can sell Django on your local machine as well as how you can utilize the Django project as well as the Django app so if you have any doubt regarding that you can please refer to those two videos and in the second you the second video I showed you how you can initialize virtual environment in your project what was the importance of virtual environment as well and how you can create a requirement so tht file as well so that was very important so so like I would like to show you one thing that from now we are going to work on vs code and this is my protect structure and I would like to show you a graphical view of my project as well so this is my project with the name my first project I have an app named my first app and I have created my env and here you can see I have activated my virtual environment variable and I have created a requirement short tht file as well so if you have any doubts regarding this one if this thing seems new to you so you can do to refer to my previous two videos so what I'm going to show you so this is going to be very interesting tutorial from now we are going to be learning on a this is going to be very handson tutorial so and it's going to be very interesting also so what I'm going to show is the you is at first you would define a URL scheme and then we will generate a response to it so what we need to do is I would like to have a brief overview of my structure as well so this is I'm inside my first project folder so there are various files with the extension dot py files to one of the bonus file here is you are taught py files so like in this tutorial we are going to be working with this file so so before and the second file is setting to our py file so first thing you need to do this move to your settings your py file and inside the installed apps you have to mention the half you have created with the name like this is the app which I made so you have to mention your app name inside settings or py file my first ah okay and now what I am Telling You the second thing you need to do is yeah like there is a you are else lot people filed in this in this directory so what you need to do is create one another URL does P by file so like this as there are two right this is my first project so there is already New York's for py file inside the project directory because I told you that inside a single Django project there can be multiple hats so you need to create a URL store to your file for this app as well so what you need to do click here new file you are el URLs dot P Y so I have created this file and now what I am going to tell you that there is no to yours wrote py file one is inside my diet keep my first app and one is inside my directing my first project so I would also have a graphical view to it so I will inside my first project folder and this is you already your 4 py file inside it and now there is a URL to add 5 py file in this folder as well ok so so you can see that now there are two URLs or py file one is inside this folder and one is inside this folder so what I need to mention my Django project that you need to include you as you taught py file which is inside my folder called my first app so first you need to to include this you would type here include and second path include and you have to mention here my first app the dot URL so this is the that I mentioned that under the root directory you have to include my first app dot URLs so this will be divine now I would define the URL here so yeah from there you can use the first line you need to pack this from Django or URLs import path so I would move to here from Django dot URL import path and then you need to define the list of URL patterns okay so this looks pretty same as this also because here you I can see they have included this from Django dot URLs import path as well and URL patterns as a list so this looks pretty fine here now I would define the first path to be this but before I want to tell you then the URL will only work when there is a function call defined to that particular URL so for that what you need to do is for you what I'm going to tell you you need to add this line because this URL provides present here so you would type from dot from current directory import Muse so what is the importance of these two lines is that the you have to create your views here so what they mean by is that for this particular URL you have to mention a function call so I would do one thing that I would mention this path and called views taught my function call okay and I would name this as index so name index is used to refer the path name so I would tell you the importance of an index so if I would tell you the importance of name how why we mention names on what when they are used when you and how can we use them in oblique temper how can we use them in the templates okay so in what I am telling you that this pad path to call views toward my function code this could be any function name with the name and I have given this name that this / URL URL has a specific name for index okay so now you would move to use dot PDF file and define a function my function call and this takes at request as a parameter so this is good you have to define this because you are making a request to this function call and now to generate a response what you need to type is you need to type you need to import two there are two types of responses one is HTTP response and other is JSON response so what you need to type is from Django dot HTTP import catch the tp3 spawns as well as JSON response so I think now it should work pretty fine and I would generate a response return HTTP response of hello sorry hello world so now I would the so I would first have a quick recap of this that I have first included euros or py file the first thing I did is include a map my app inside this think I have included to my first I brought us inside the my user profile of my first project then I mentioned this part and I made a function call to this path using the views file because in the views of I used what Peter value mentioned you mentioned your function call so I meant my function call and I named this particular URL as index and inside my first function code I generated a HTTP response so I think this should this should work fine now I would say Python manage dot py run server so this should go fine okay the server has started so I would okay yeah this looks pretty good so you can see you can see because I didn't mention since I didn't mention any any word here so it mentioned as their as a root directory so when I passed on this URL it when I caught my URL this particular URL the root directory so it called my function call inside my views dot py file and I when I went to the views toward py file so it had a request as a parameter and it generated HTTP response of this hello world so so this was the first thing know what you can do what you can do you can pass parameters as well so what you need to do I wanna show you how one thing for sure another thing what you can do is you can copy this line and you can name this as about and you can call this my function about and you can give this as about okay and now I'm making a path code about and boot on my function about so it says my first AB dot views has no attribute my function about so I need to define that so I would define this as well okay for quick for quick overview I would copy this and I will generate about response okay and I would now call this function my function about it so what I did here is I made its the request to slash about from my root directory and it called my function about and I've given I give this URL particular am about and it went to huge or py file and called this particular function and I would go back to my server so right now on the root this it is generating hello world but as soon as I as I made it requests to the about page so it says about response so this is pretty good so now you can understand the theory so you can also do one thing now what you can do is copy this line as well and name this as ID my function or you can add end or you can say in this simply a little blue dot add no I am telling this route what I can mention to showed you like you can also pass parameters as well so to pass integer I would type like this so I would move back to this and type end like you have to mention the end then a colon then age so this is going to be int a then in to be okay and now I have to define the views dot add so I will go to Def and not the force parameter which is going to be request the second parameter basically to the integer which I am taking which was suppose I'm here ain't aiming as X or you can for simplicity for use a then B so what you need to do is return HTTP response of a plus B so I think it should work now you know what I am telling you to add 20 days first one is going to be one and second one is going to be two so it should work yeah now I hacked it has given me two integers of one and two and it returned initiative it responds to the output three the one thing I wanted to show you will this work if I change this a comma B to X comma Y X plus y so this is all a part of learning process so I should make sure the server is running yes the survey the first age thing is I will move to this yeah it's working now I would move to this about yes working now I would move to that part add 4 comma 5 so this doesn't work ok so why this didn't work because I had mentioned here in the US retrieve a file that I'm going to get a as a parameter then B as a parameter so what I need to mention here that inside my views are pure file I had to strictly mention this as a comma B so so make sure you be careful about this now now I will restart the server and then refresh this fade now this was because I wanted to make sure below this that inside a I mentioned here as a and ensured mentioning a script we need so input parameters to my request part would be a comma B as well so then I generated actually build upon so a plus B okay so this was look good now the first second thing you need to do any you can do you create a found URL so I would click quickly create this path intro the first matter is going to string name and the second one is going to end int with an age and I would call views taught intro with the name particular name to this URL as intro so this looks good so this would throw because I am not defined in true in my views of your file so I wouldn't move it back to my so this time I'm going to show your JSON respond define into as a function taking first parameter as a request the second has name so let me check what have defined first so I have defined name as four than age a second the name is going to be first and age is going to the second now I would define return a JSON response so to generate it as JSON a spoon I need to define a dictionary so the Sherri's efficiently key value pairs so could be my dictionary is going to be variable so with this name is going to be named here and eh sorry age is going to be it age here and I would return a JSON response oh here so I wanted to show you difference between the JSON response so search form is an error because I think it's sense because I defined used or intro now it should work particularly fine now it has started so what I am showing you I will move to intro name as Jack and a judge 25 so it will this work so yeah you here you can see that now it returned me and JSON response and I'm showing you particular here like here it shows that this is an injection responds with the name and EH and for the you can show the show the raw data as well so this is an this shows you how JSON object looks like and and in the JSON format you have just for you can hear that name is Jack and the age is 25 and this is a JSON object so like in this way you can you create a mood more URLs so basically we here I covered the HTTP response as well as the JSON response so so like so to generate any a free generator will request so why are you are L so we generate a response to pit as well so like this is a so thank you guys thank you so much so I am going to be back with another video very short and very soon thank you so much thank you so much