hello guys welcome to the next video on maven tutorial for beginners in the last three videos we have seen how we can download and install maven on our Windows operating system and how we can create our first maven project using command line or command prompt now most of the times Java developers uses some kind of ID to create maven project there are few maven IDE s propellers nowadays which are eclipse netbeans or IntelliJ now I'm going to use Eclipse IDE which already comes with integrated maven you know environment so we don't need to install any extra plugin for you know creating our maven project and it's also one of the most popular ide for java developers now if you don't know how to install eclipse i'm going to paste a link for the video in which i have shown how we can download install eclipse for developing java so if you don't know just click that link and you will be good to go now let's create our first maven project using Eclipse IDE and then we are going to see the details of pom.xml so just to open your Eclipse IDE and then go to files here for the first time whenever you you know see this Eclipse IDE it's going to show you this kind of a welcome message and you can click this left top button here to you know see the Eclipse environment and you can close it something like this now in order to create a maven project you can go to files here or file here and then go to new project don't choose Java project but just choose project and in here just search for maven or you can scroll down and you will be able to see this category called maven and this maven category we have this maven project ok so just select maven project and click Next and for now we are going to create the simple project and we are going to skip archetype that's the same thing we have done a last time we have created the simple java project without any web application right so just select this checkbox and leave this checkbox as it is okay so these checkbox must be checked and the third should not be checked okay and then click Next and in here once again it's going to ask us for the group ID artifact ID version packaging as we have already seen in the last video what is group ID and what is artifact ID right so I'm going to just give the group ID comm dot code bind and the artifact ID for example a one demo ok the version is good for us which is zero point zero point one snapshot because we are developing this project right now and it's in development phase and packaging is jar and leave everything else d fault and just click finish here now eclipse is going to create this maven project for us in few seconds you can see this maven demo project is created and inside this maven demo project we have some you know packages here so there are 4 packages you can see here the first two are for your project files for example this source / main / Java is for your source file and then you have the source / main / say sources and this will contain the resources for your Java project right resources like maybe some pictures or some other kind of resources some XML files or you know it can be anything now the other two are for the test you know whenever we create some maven project it's also creating the test you know environment for us right so the third is source slash test slash Java and it's going to contain your test source files right and the fourth is source slash test slash resources and it's going to contain the resources for your test okay and the folder structure is something like this so if you see inside our source folder we have our main directory and our test directory and we also have this pom dot XML file now let's open this pom dot XML file so just click on it or double click it and it's going to open this pom dot XML and it's going to show you this kind of overview for pom dot XML now to see this form dot XML in the XML format you can go here and select this last option which says bomb dot X center and we will see this bomb dot XML in the normal you know XML format and inside this you can see these four elements here first is the group ID which we have given second is the artefact ID which we have given already and third is the version which we have given so this pom dot XML contains the information of the project which we are working on and it uses this group ID artifact ID and version for that okay now let's create a class sample class to you know understand how this maven works better so I will just select my source slash or main slash Java package here and I will rightclick on it and then I will just go to new and I'm going to create a new class here and in here I'm going to give the package name same as I have already given so comma dot code bind and the name of the class for example I'm going to name it as app ok and everything else I am going to leave it as default and I'm going to just click finish and it's going to create this app dot Java class in my comm dot code bind package here ok now to just take the look at this project we are going to just create a very simple method inside this class so just write the public and for example it's going to return string and we can name our method as sample for example and just give these round bracket which takes no arguments and we are going to return some dummy values so just write return and let's say we are returning sample for example this sample string ok so it's not really complicated you know method we are creating here we just want to understand how maven works that's why we have just created this you know placeholder kind of method here okay now for creating the test case for this what I'm going to do is I'm going to go to source slash test slash Java this is the third package here right and I'm going to right click here and go to new and this time I'm going to go to the others category here so go to other and in the other I will be able to find this category called junit ok so this is the junit category and we will just create a J unit test case for our project so just select this J unit test case and click Next and just leave this as a default and in here we will give the package name same as we have given earlier so just calm dot code bind and then the name of our test will be for example app test okay and then click finish here and it's going to ask you this you know information it says J unit 4 is not on the build path do you want to add it so for now we don't want to add anything and why I am going to explain you in some moment right so just say not now and then click OK and now you can see our app test the java class is created with this sample test and if you can see here it's showing us a bunch of errors so why we are seeing these errors here because we don't have J unit jar file in our dependency parts or build parts you can see so in normal cases whenever we are not using maven as our build management system in normal cases what on developer will do is it's he is going to download this jar file and add it to the build path for the J unit right and then these errors can be gone right but maven allows us to add the dependency of in our pom dot XML file so that this dependency will be automatically downloaded and added to your project and let's see how we can do this so you can see these are some errors so to remove these errors what we can do is we can just go to our pom dot XML file here and in here just below this version element we are going to add our element called dependency okay so just write dependencies and then inside this dependencies element we need to add the dependencies for the J unit because our project requires this J unit jar file to compile our test now maven has this online repository from where it can download all the dependencies which we can mention here but what are the things we have to mention here so for simplicity just go to your browser and search for maven junit dependency okay so just search for maven junit dependency and click search and the first result you will see here will be from maven our MV and repository dotcom slash artifact /j unit /j unit so just click this link here and in here you can see all the you know maven you know files or jar files depending on the version of this and the top one is the latest version of this J unit release right so just click this top version which says release and in here we can see the dependency for this J unit so this is the simple way of searching the dependency for any you know jar file or any fear framework ok so simply just search for the maven and then the kind of you know dependency you are looking for for example J unit and then search for maven gunit dependency and you can search for its dependencies something like this so just copy this dependency from here and go to your pom xml file and paste it here okay and what this dependency contain it's also containing the group ID so this junit you know framework whenever it's created gunit people has given it some you know group ID artifact ID and the version we are using okay and as soon as you will hit save here just observe what is going on in here it's going to add all the jar files which is junit jar file version 14.12 for you automatically okay so i'm going to just click Save and whenever I click Save you can see it has downloaded this maven dependency for us and inside this maven dependency we have the junit 4.12 jar file inside this maven dependency and this happened due to the addition of these dependencies which we have added for gunit and now when we go to our app test a java class you will see all the errors will go related to you know J unit jar files right so once again we can do this so I'm going to remove these dependencies and when I click Save here see what happens here so I'm going to click Save and now all the maven dependencies are removed from our project and once again when we go to our app test dot Java class it's going to once again give us these errors okay so once again add these dependencies here and click Save and it's going to download all the dependencies and added in the project ok so this is how you can create your first maven project inside your Eclipse IDE and this is how these dependencies work in maven so that's it for this video we are going to see some more features in the later video so stay tuned and please rate comment subscribe and bye for now