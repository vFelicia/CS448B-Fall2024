hello and welcome back to the another video the Java tutorial Series so this is the uh continuation to our project uh banking application and this is the third video I guess of the series of the project okay so in this video we'll be discussing about the functionality which is withdraw and the get previous transaction so we will be implementing the two methods so for the one method is for the Vedra and one method is for the previous transactions okay so I hope you have watched the previous videos where you will be implemented our deposit function method and now in this video we'll be covering our withdraw and get previous transaction functionality okay so okay before we get in code think about it whenever I want to withdraw some money from my account what changes and first of all what I have required as the input to this method okay so let's think about it so for this I will be requiring one amount that is the amount of money that I want to withdraw from my account so the amount is the parameter which will be passing through the withdrawal functions and again one base condition should be there okay so think about it one what what will be the best condition again the same base condition uh like we have done for the deposit method that is amount should not be equal to the zero because deposit depositing the zero rupees or the zero dollars from an account doesn't make any sense okay so we'll be implementing that also and I guess this is a bit pretty much stuff that we have we want to do inside the withdrawal function okay so let's just get and implement this withdraw method okay since our method is doesn't returning anything that's why the return type should be avoid uh void void is the return type there are many different types such as int uh care strings are there so method is doesn't returning anything it it is just performing some basic math calculation and it will returning some value to the user okay not value it is performing some task okay so withdraw I will name this as withdraw and as we have discussed it will accept one parameter name as amount amount of money that we have to withdraw from our account okay and again one of the base condition should be base condition should be there that my amount should not be equals to the zero if it is equal to zero that doesn't make any sense okay and inside this uh I will update my balance because after withdrawing some money my when that amount that much amount of money should be deducted from a balance that for my account balance okay so balance minus amount okay and now after that I I also have to update my previous transaction as amount okay and minus amount okay so I guess this is pretty much that we have to do inside the withdrawal functionality and after that we will be performing another functionality that is get previous transaction so this I have writing the previous generation previous transaction we have to implement that method inside this class name as bank account okay and so since previous get previous transaction it doesn't uh return anything so that's why I will write void as the return type and I will write get previous transaction wait guys okay so sorry for the introduction guys okay so where we are avoid get previous transaction okay so this method uh doesn't require any parameters and it doesn't return anything okay so inside this I will write one if condition if my previous and the action value is greater than zero okay when the value will be will have the present previous election will be greater than uh zero when we have done any deposit uh in our account okay so in that case I will print deposited and I will concat it with previous interactions value okay and uh again one else if condition should be there to check else if my the value of the previous transaction is less than zero in that case when we draw uh means one withdrawal should be there for my account so in that case I will write sorry withdrawn withdrawn the amount should be there and one thing I will do here is math Dot abstract okay and I will pass it the value of the previous transaction so you'll ask me what we have done here what is this math dot apps right and we are passing uh three ways of the action value to it okay so this is the in inbuilt class inside the Java uh so here you can if you hover over the cursor over here you can see java.lang is a package inside which math class is there and one abs abs method should be there inside that math class if you right click here and here you can see public static in areas so what this uh method does it will accept one parameter okay so as you here you can see it is accepting one parameter which is integer a and it is returning something uh in in format okay so what it does is uh since the value of the application reaction is less than zero that is the negative one uh like minus something known as minus 50 or yes minus 400 so we don't want this values to be reflected in our console because negative values should not be there inside any account okay so we are doing this match dot abstract function and it will convert that negative value inside the positive to its corresponding positive value that is equal to it will convert the minus 50 x 50 and uh minus 400 as 400 okay so this is the work of the max dot abstracts abstract function okay or method oh then here I will write else if both the condition will not get satisfied in that case I will write no transaction is occurred no transaction it's occurred okay so I guess this is pretty much about the previous transaction method where we will checking if the value is greater than 0 that is a deposit deposit method is getting run inside our application and if the value is less than zero that is withdraw is done inside our bank account and if nothing none of this statement get executed then else will execute and it will show that no transaction is acquired inside our account okay so this is pretty much about the withdraw and get previous function over the method I will see you in the next video well wearing will be covering the next functionality that is the show menu for our project so thank you guys for watching this video