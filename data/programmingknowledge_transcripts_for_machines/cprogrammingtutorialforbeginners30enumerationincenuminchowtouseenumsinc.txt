hey what's up guys welcome back to our youtube channel and welcome to this video this is john again from programming knowledge and it's been a while since we have uploaded videos related to c programming but now we're back with another video and in this video we're going to be learning enumeration or enum in c so enumeration or enum is a user defined or user defined data type that we can use insider c program so it works like almost the same with strap so as you can probably remember from our previous tutorials we already discussed and used struct inside our c program so as i've said in this video we're going to be learning enumeration so that's that's where our focus should be enumeration so enumeration is mainly used to assign names to integral constants and these names make program is easy to read and maintain so i'm gonna be showing you a graphic right here on how we can declare instantiate and operate with enumeration insider c program so basically guys this is how we can um declare the enumeration right here so declaration we have this keyword enum and then the name of our enum variable so in this case days of wick okay and then we have different states we have seven different states here that starts from the value zero the second will be one and the last one will be six so um all of this states these are called enumerators so this is just the list of constants separated by commas so this will help us to make our program easy to read and maintain because all of these enumerators are already already listed here so we know what values to get what values to assign to a certain variable if we want to use this um inside our c program now after that declaration we do have this instantiation so in in sensation part we have also the name or the keyword enum right here and then of course the enum variable that we have declared on top so for example this one days of week as you can see here and then of course we need to assign an object of enum days of week so basically guys this day is just an object of our days of week in um as you can see okay and then right after that instantiation we can now use that in enumeration or enum um here in operation so for example you want to like assign a value to our object so they equals and then the value of our enum that we want to use so for example this one in this case we specify that it should be wednesday right here okay so we could assign the value just like that now we can use this insider c program as i've said because we're dealing with enumeration or enominc so we can use our ide to create our simple program implementing the enumeration or enum in c so for example we wanna um like implement the days of a week so as i've said in our declaration we can use the enum keyword right here by the way guys you can declare enum locally you can declare enum locally or inside a function right here or you can do it here before our main function globally declare our enum okay so for example we want to do this globally so our keyword enum right here and then the name of our for example in this declaration we have the enum keyword and then the name of our variable so days of week so for example in our case we're just going to use the weak variable name and then inside here we can declare inside the curly braces so make sure you use curly braces and then semicolon at the end of this particular line to to signify signify that it is the end of this particular line so inside here we can declare for example for monday tuesday wednesday thursday uh friday saturday and sunday so that's how we can declare our enum variable again you have to use the enum keyword and then the name of our enum which is in our case here weak and then open and close curly braces and you can declare the enumerators here and of course you have to specify the semicolon at the end of this particular line now in using this particular enum we can do it here inside our main function so we can again i use the enum keyword and then our name of our enum which is weak as you can see here so take note of that that we use the enum keyword and then the name of our enum and we can assign an object to this so for example they okay so that's how you can specify our enum object so enum keyword the name of our enum and then an object of our enum which is day so for example you want to assign a value to this so day equals for example wednesday so you can just use wed and just three letters if you want but anyway you can use also the full um names of your constants but in our case we're just going to use the three letters to have like a uniform constant names okay so here we can use so for example wednesday and then of course you can print this you can specify the percent d here and of course the object of our enum okay so let's try to run this and see how our uh what the output of our program so so as you can see here we're getting 2 the value of our object is 2 because as you can see our enumerators or the state of our numerator starts from zero so zero one and two so that's why we're getting the value of our object here as two but if we want to change this for example sun for sunday then run on build our program so the output will be six so by default guys um the value of our enumerators will be if we did not assign a value to our enumerators the default value of this will be zero this one will be one this will be two as you can see if we try to hover over our um mouse here in our constant so we're getting two um this is obviously three but we're not getting the um like the hover over display four this is five and this is six so that's how our state is being initialized by the compiler so it is getting like the uh getting default values zero until to the last um state minus one of our in enumerators okay so if we try to initialize our states for example we want to make this one we could do that so monday will be one tuesday is two wednesday is three um thursday is four friday will be five saturday will be six and sunday will be seven so remember earlier we are getting two coming from wednesday because that's the default state of our constant wednesday but if we try to assign the value to our enum object here into wednesday let's try to see the output okay so instead of 2 now we're getting the value 3 because we initialize already our variable and it's not assigning a default value to our states now here's an interesting facts about initialization of enum so if there are like two enum names um we can declare same value for example we want to declare value for monday tuesday we can like make this value one and one so it doesn't matter for this particular example because uh this is um allowed in c programming so we can have two enum names with the same value okay so for example we can comment this one out and we can try to display the value of our constant so percent percent d instead of day we can use monday and tuesday there you go so bill and runner program and we're getting this error right here okay we're getting that output because we have specified our printf statement like this but if we wanna have uh we want to display the correct value then we're going to use this percent the percent d and then comma in between and then we're just gonna specify the two variable monday tuesday and click and build and run our program and as you can see here we're getting values one and one so that's one of the interesting fact about declaring our inum variable we can use the same state or the same value for our constant so it doesn't matter in c that's because uh it is allowable in c okay and guys if you have clarifications if you have questions regarding enum you can ask questions down below and i am very thankful for your time thank you for watching and see you in the next video