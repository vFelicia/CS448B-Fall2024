hello and welcome back to the another video of the Java tutorial Series so today we are covering a static keyword in Java so the static keyword in Java used for the memory memory management purpose only and we can you apply the static keyword with variables methods block nested classes uh like so for example one method is there ABC I can write static ABC or one variable I have to declare integer a static int a that that is how I can do it and the static keyword belongs to the class that an instance of the class okay the static can be a variable can be static and a method can be static okay so we will see some basic syntax how the static variable is declared inside the class uh let's suppose we have class class student and inside this integer role number uh variable name roll number is there of type int string name and college string College iits this is a simple class with that we have declared an example of static variable okay we will see one example uh in our IDE and before that you have to here is the pictorial dependent representation of the how static uh gear variables are work okay so here where we have declared one two variable S1 and S2 and inside the stack memory S1 and S2 are there and hip memory is there uh as soon as to as object of that class student and here you can see we have created two object S1 and H2 inside stack memory and inside Heap memory id11 is there and name current for S1 S1 object and for S2 object uh id22 and name Aryan is there okay uh and inside okay wait a minute guys okay so where we are here we have created uh two objects S1 and S2 and we have assigned the value of our ID and name for each of the objects and here you can see uh one static variable called College of type string is declared and college name is its okay so this is the class area and this is how the static static variables are work uh College its is assigned to both of those object S1 and S2 okay and and these objects are uh separate the college name its is separate this is not inside the hip memory this is actually inside the class area this is how the static static variables work and we will see one example of the static method so that you can understand it clearly okay wait okay so let's get into our IDE and C1 example of the static method okay so here I am inside my IDE let me just click here new Java class new Java class and I will declare it as great static third okay and inside this I will write let me just increase the font size okay and now it okay so here I have declared one static method let me import my main method yes okay now silly okay let me get here inside this okay uh let me create one class name as calculate oh wait let me do all those stuffs inside this itself okay I will declare one static variable in Cube X okay not this you know what let me get another example so that you guys can understand it more clearly okay let me just create last student however this one this I will I have take I am taking this example itself okay class student example okay so that you guys you guys can understand more clearly okay and I will declare one hint roll number after that string name for holding the student name and I will declare one static variable here a static string College is equal to i t s okay I have declared it as a static so this is a this is this will be stored inside the class area not the Heap memory and all the object uh all the objects are get into the stack area okay here and after this I will write static oops sorry static void change this is one method and I'm changing my college name to something known as let's suppose bbdit it's a random string okay and here I will declare one Constructor for this class uh so I hope you guys know how to declare the Constructor how to create a Constructor and for this Constructor I am requiring one two two parameters one is r r represented as the row number of the student and the string and I represent the name of the student okay and now inside this I will assign those values to the variable that I have declared over here are and name equals to n okay so now I have declared one created one variable declared the Constructor okay now I will create one another method name void display and inside this method I will just print the my roll number and okay so I will write roll number concat it with the roll number that we have declared over there and again name and I will assign the name it as name okay this is pretty much this method is going to do and inside my main class that is this static method class where we have declared our main method I will write I will create one variable or for where not available object okay I will create the object of the class I will write student Dot first of all change okay and after that I will create a student S1 I will create first object of this class and I have to pass to uh parameters because the Constructor is accepted accepting the two parameters one one is type of string and one is type of integer so let's suppose I am writing 0 1 as my roll number of that student and name of the student is something Harry and I will similarly I will create two more object of this class and goes here one goes here I have to give name some different name to this object this one is to S3 and these students have roll numbers like this and one's name is Joey one's name is veeru okay so these are the students and I've created those where you have no objects also now I have to do I have to display the name and uh roll number of the students for that I have created a separate function or the method S1 dot display S2 Dot display S3 dot display okay all these methods will called and according to that roll number and name of the student gets printed on the console okay now if I run I'll end this code uh oops sorry I will run the previous code itself let me run this with this one oh okay so here you can see roll number one name Harry roll number two name j roll number three uh name Vero okay and now let me hide this terminal this is pretty much about the static keyword and static variable and I go I hope you guys that have got some idea about the static keyword uh so in our upcoming videos we will look into the this keyword in Java thank you for watching this video