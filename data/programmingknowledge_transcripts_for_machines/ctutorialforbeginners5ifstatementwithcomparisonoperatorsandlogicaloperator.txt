hello guys in this video I'm going to show you how to use if statement in C in addition I will also show you what is a comparison operator and what is a logical operator so let's get started what I have in my code here is I have declared two integers integer one and integer two and I'm telling or I'm asking the user to enter these two numbers as we have done in the last code so we are saying console. right enter the first number and this line will expect the user to enter the number in the same way we are telling the user to enter the second number and on the basis of those two numbers we want to show some message if the number one is greater than number two or number two is greater than number one so what can we can do is we can use if statement for that and what is a if statement if statement is nothing but a conditional statement which Tech checks the condition so let's see how we can uh use if statement in C to declare if statement you just need if here and then you need this here these brackets here and inside these brackets comes the condition but here also you need to give these two curly braces in order to give uh complete the condition so this will hold the condition and this will uh in these brackets you will write the if the condition is true whatever you want to do or whatever code you want to perform if the condition is true will come here so these conditions can be logical or these conditions can be comparison so right now we want to use comparison operators to compare number one and number two so let's see what options we have to compare the two values so we have something called comparison operator and basically we have these six basic comparison operator Which is less than greater than less than and equal to greater than and equal to and equal to and not equal to these are the sixth comparison operator we have and notice that this equal to whenever you use with this less than or greater than sign this equal to comes always after this uh this less than or greater than it doesn't come before this uh greater than or less than okay so let's uh use this greater than and less than comparison operator so if num one is less than num two we want to show the message and what message we want to show we want to show the message that num one is less than num two okay so if number one is less than number two we are going to show this message number one is less than number two and if the number one is greater than number two we can just copy this and paste it here and we can say if number one one is greater than number two then we can say greater than number two and now when we run the program and the program ask us to enter two values I will enter two values 35 and 46 for example and it says number one is less than number two which is true right number one is 35 and number two is 46 number one is less than two so what this code is doing it's checking the condition if the number one is less than number two then it prints this value but in the second case number one we have provided the condition number one is greater than two true two and this condition was not satisfied that's why this line was not printed so if and only if the condition is satisfied which is there in the bracket then only the code inside these curly braces will be executed otherwise this code will not be executed now we have seen that we have enter two numbers number one and number two and if this condition is true obviously this condition will not be true but your C program will is going to execute this also and check whether this is true or not and this is slightly in inefficient because if this condition is uh true why this code is executed if this condition is even not true so what we can do here is we can use a statement like else statement with if so when you write else statement with if then what will what it will do is first of all let's see this SSE statement okay so what this code is going to do here else by the way doesn't take any condition because it's the consequence if this is not true then what should happen this else will come here so if this is not true this is true if number one is less than number two then this condition will not be executed otherwise if number one is less than number number I'm sorry if number one is greater than number two then this condition will be executed otherwise this condition will not be executed if there is no need to perform this condition so let's see what happens let's run the program and this time we will provide number one will be number will be greater than number two 36 for example and now it says number one is greater than number two which is the else statement condition which is this condition right so in this way you can perform this if else statement there is one more condition called else if which you can use it like this so you can use else if number one equal to number two then we want to perform some or when we want to print some message for example okay so what we can do is we can here print number one is equal to number two okay so this is if else condition else if condition so what is the sequence of program will be first your program will check if this is true or not if this condition is not true then it will go to this condition and checks whether this condition is true or not else it will throw this message right so let's try and run the program and this time we will give two equal values 3 434 and this says number one is equal to number two so this sequence will be followed first this condition will be checked and if this condition is not true then only will the the program will go to this code and if this condition is not true then only this code is executed so that's the use of else if the condition is not true then it will not be executed okay now there is one more uh thing you can do in if condition which are called logical operations and there are mainly two kind two kinds of logical operator one is or operator and one is and operator so or or operator will be used by writing these two pipe symbols and and operator will be used by writing these two and the symbol okay and let's see how we can use it use them so right now we have given this condition if number one is less than number two then we want to print the value but for example we want to check whether number one is less than number two and and what number one is equal to 20 right and we will write the message and num one is 20 okay so we want to check whether number one is less than number two and we also want to check whether number one is equal to 20 then only we want to print this message so let's try and run the program first of all let's give number one is equal to 20 number two is equal to 13 and it says number one is greater than number two which is true right this condition is uh met here now in order to uh satisfy this condition let's try and run the program once again we will give 20 and we will give 36 and press enter and now it says number one is less than number two which is true and number one is 20 right so when we use and symbol your program or this condition is to be has to be true and this condition also has to be true so both conditions has to be true when we use this and symbol and if you want if we write this pipe here double pipe then your program will check either this is true or this is true either one of the condition is true then it will print this then it will print this message okay so here you can write R and run the program and once again we will write 34 45 okay and it shows the message number one is less than number two or one is number one is 20 so note that this condition is not satisfied here but only this condition is satisfied then also it's showing this message that means this symbol means either this is true or this is true okay if any one condition is true then this will be your program or your condition will be executed now there is two ways of using or and end with these two pipes and with a single pipe also you can use this if conditions but when you use this single pipe what will happen is your program will come here and check this condition and if this condition is even true it will go to this condition to check if this condition is true or not and if if this condition is not true then also it will go to this condition to check whether it's not true true or not so it's it will do its whole cycle it will check this condition this condition or and whatever condition you will give and what these two pipe when you give these two pipe this what what what this will do is your program will come here it will check this condition and if it's true it does it will not care about this this condition and it will directly come here and it will directly print this message so using these two Pi symbol is more efficient because I if one condition is true your message will will be printed and this will not be executed so it will save your time if it will save your time if your program is time critical program right so same thing you can do it with these and symbols also you can use one symbol and the concept will be same okay so in this way you can use if else conditions and logical operators and comparison operators in C I hope you have enjoyed this video please wait comment and subscribe and bye for now