hey guys in this video I'm going to show you how you can install go on your Ubuntu operating system in addition I'm also going to show you how you can configure go with Visual Studio code on your Ubuntu operating system so let's start with the installation of go so just open your favorite browser and search for install go and the page which will appear here will be from go.d so we are going to click on this link and here you can see the procedure of installing go but we are not going to use this procedure in which uh they are telling us uh that we need to download this tar.gz file and then install go using this method because let's say the latest version is 1. 21.3 and let's say after 1 year you want to upgrade the Go version it becomes really hard to uh uninstall and reinstall go so I'm going to show you a different method which makes it easier to uh change the version of go and that way you will be let's say stressfree when it comes to just changing the version of go right so as you can see the version here is 1. 21.3 this is the latest version at the time of making this video the procedure which I'm going to tell you involves snap so snap is a standard let's say package manager for installing various different tools on your open 2 operating system it's from canonical which is the creator of uh open to operating system also so just search for SNAP install go here you will see uh two links one is snapcraft doio SL install SLG go/ Ubuntu and also you will see snapcraft doio slgo click on the second link which says snapcraft doio SLO here and as you can see the latest version using snap is also 1. 21.3 and it's by canonical as I said which uh is the creator of uh the Ubuntu operating system so it's pretty up to date whatever version you will see on the official website you will also find the same version on the snapcraft website also so you can install it now how you can install a package using snap you just need to click on install button here and this is a simple command for that so just use Pudo snap install go hyphen hyen classic when you give this command it's going to install the latest stable version at the time of making this video as I said the latest version is 1. print version that's also possible for that you can give this command which is uh shown here which is Pudo snap install classic and then you just need to add this channel flag here and here you can just specify hyphen hyen channel is equal to the version you want to install right so right now as I said the latest version is 1. 121.301 20 let's say then you can just specify 1.20 stable then the version which will be installed on your obuntu operating system will be 1.20 and not the latest version so you can even specify the specific version of go if you need that version but if you are new to go uh and you don't know what to do just copy this command here which will install the latest version of go which is pseudo snap install go hyphen classic open your terminal here press control alt T which will open the terminal and then paste this command press control shift V here which is going to paste your command and then press enter and give your obun to's password which you used to log in into your open to operating system so I'm going to give my password which which is going to start the installation of this go package so at this point you just need to wait for a few seconds and you can see go is installed on my open operating system so you don't need to do any complicated stuff here once you see this message which says uh go is installed the version is this one we can even check the version of go using using this command which is Go version and then press enter and if it gives the version which you have uh uh installed then go is working fine on your Ubuntu operating system so now we have installed go on our open 2 operating system now let's create a simple go program and run it using visual studio code so for that what I'm going to do is I'm in my home folder right so let me clear the terminal and right now I'm in my home folder here I'm going to create a new folder so I'm going to just give this command which is mkdir and then give any name to the folder where you want to uh create your go projects for example right so I'm going to just name my folder as uh go hyphen projects and this uh folder is going to be created so now we are going to CD into that project right so I'm going to just write CD go projects and here I can just type code space dot which is going to open Visual Studio code and it's going to open this go project uh directory which we have just created now before writing any go code let's install the standard extension for go for your Visual Studio code so here you can see few options just click on this option which says extensions here and here just search for go extension and you can see the first result which appears here is from go and it has this star on top of it so when you click on this go option you can see there are 10 million uh downloads for this uh extension which is the most popular extension for go on Visual Studio code and it's created by go team at Google right so we can trust this click on install button which is going to install this uh go extension and once you see disable or uninstall that means this extension is uh installed right there are few other uh go extensions which we can uh install later but this is the standard go extension which uh I will recommend you to install so that you can smoothly uh work with go on your Visual Studio code now I'm going to go to this Explorer section where I I have this go projects here I'm going to create a new folder right so just create a new folder and give any name to your folder I'm going to name my folder as hello right so inside this hello folder I'm going to create a new go file and I'm going to name it as main.go and as soon as I do that you can see uh I get some recommendation to install all go PLS command is not available so I can install that so I can click on this install button which is going to start the installation of that and we can let it run in the background but let's go to the main. go uh file now when you are working with go and when you create a go file for the first time you will see this kind of uh a warning or or this kind of information uh popups on your Visual Studio code editor you can install all these uh extra tools which Visual Studio code suggests to you it will only help you to uh develop uh go on your Visual Studio code editor so here also I'm going to click on install here which is going to uh start the installation of go outline package and and let it run in the background right now let's start uh writing our uh code for go what we are going to do uh first is we are going to just add this package Main and what this line does is this line declares a package to which uh this go file belongs so in go programs are organized into packages and the main package is a special package used for creating executable programs and it must contain a main function which we are going to write in few seconds right so just write package Main and then just write import so there are few uh libraries which we can Import in go and those libraries we can import using this import keyword and then in double codes just write fmt now here we have imported this fmt package which provides the function for formatted IO so we use this uh package to print text on the console right so now we have added uh fmt uh package and now we are going to create our main uh function so how do you can declare a function in main you just type f NC and then the name of your function which is Main in our case and then I can give these parentheses and these curly brackets now every uh go program should have at least one main method and this main method will be the main entry point for your program right now for our hello world application I I'm going to use this fmt package and I want to print uh some message so I'm going to use this function which is called print Ln and here I can uh write any message right so I can just write hello from go let's say right I want to print hello from go so now our uh code is finished so I can save this code and once our code is finished you can see there is this squiggly line on top of uh this package Main and it says gol was not able to find module in your package you can fix this by opening your workspace to a folder inside a go module so to solve this problem we going to open a terminal so let me open a terminal here if you don't see this option uh for terminal you can open Terminal by clicking on the top menu and select terminal and then click on new terminal and it's going to open the terminal now here you can see it has opened the go projects uh directory which is listed here so we are working inside the go project directory but our main.go file is on in our hello directory which is inside the go project folder right so we are going to CD into hello first and here give the following command which is go Mod Space in it and the name of your module in our case we are going to name it as hello right so just write go Mod Space in it space hello and then press enter which is going to uh create this go. mod file and as soon as you do this you can see this error is also gone from here right right we can open this go. mod file and it has two lines the module name which is hello in our case and the Go version which is the version of go we are working with so I can close this file now uh this go mod in it hello also suggests us us to uh run this command so we going to run this go mod uh tidy command and then press enter and then let's clear this terminal and then I'm going to show you how you can run this main.go file so to run this main.go file as you can see I'm in the hello folder where my main.go file is there to run this uh file I can just write go run and then the name of the file which is main.go and it's going to compile my file and and give us this output which is which is Hello from go which means our program is working fine there is one more method of uh running this main.go because this main uh has this main function inside this right so there is uh this command which is go run and because we are inside this hello folder if you give this dot after the run command go is going to find the main function in uh any file in which this main function is available and it's going to run that uh file because the main is the main entry point of any go application so you can uh run uh your program using G run space dot in the main folder in which your go files are available I'm going to just uh run this command and it says hello from go also so this is just shorter this go run command runs your project but it doesn't create a binary file but we all know that we can also create a binary file in go and when we run the binary file the program execution will be much faster than you using this run command so to compile your program what you need to do is give this command which is go build and then space Dot and then press enter and when you give this command it's going to create a binary with the same name as your parent folder in our case it's hello so you can see this binary is created with the name hello and now we can run our binary also so just uh use do/ hello and then press enter and you can see that binary is executed successfully and it also prints hello from go so these were the commands which we used in our terminal to run a go program in Visual Studio code you can also run the same uh program by just clicking on this run button and you can click on run without debugging and it's going to to uh run your program but first you need to install this dlv uh package so you can uh just click on install once again and you can see uh this is installed successfully so once again when we click on run and then click on run without debugging so this time it's going to run our code in the debug console right so you can see I can see this output which is Hello from go right so what I did is is I just click on run and then I just clicked on run without debugging and it gives me this output if you want to debug your code so you can set some break points here and then click on this uh run and then start debugging so let's say for giving a better example for this debugging I'm going to stop the debugging and then I'm going to paste this kind of uh code here so in this program what I'm doing is I'm declaring two variables of type float 64 uh the name of these variables are num one and num two and then I'm assigning the value to num 1 is equal to 10 num 2 is equal to 20 and I'm just uh summing them up so I'm going to just sum uh these two numbers and then print the value of these two numbers and here I have uh given few break points here at this this point this point this point and this point and let's start the debugging now so I'm going to click on start debugging here and you can see this debugging has been started now here on top you can see few uh options first option is to continue when you click on this option uh your program execution will stop at the next break point if you click on the step over option then your program will go to the next line of your code if you uh click on step into if you're using any functions it's going to go inside that function in that line and you can dig deeper into your uh uh code you can also restart the debugging and stop the debugging using these two buttons so right now I'm on this line my breako is on this line which is line number eight if I click on uh let's say continue it's going to stop at the next break point right so here the default value of num one and num two are zero right these are the default value assigned by go now at this point on this line we are assigning 10 right so when we step over to the next line you can see the num one value is 10 when I step over to the next line the num two value now becomes 20 right now when we step over to the next line you can see the sum appears and its value is 30 here right and then we can continue and it's going to print the sum of uh these two numbers which is this line right so this is how you can uh debug your code uh using visual Studio code so I think that's it for this video in this video you have learned how to install go on your open2 operating system and how to configure go with Visual Studio code editor and run your code inside Visual Studio code editor I hope you enjoyed this video and I will see you in the next video