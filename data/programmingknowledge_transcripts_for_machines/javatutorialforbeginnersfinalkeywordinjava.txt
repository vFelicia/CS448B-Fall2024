hello and welcome back to the new video of the Java tutorial Series so today we will be discussing final keyword in Java okay so the final keyword in Java is used to restrict the user okay the final Java keyword can be used in many con context okay the final can be a variable a final can be a method and a final can be a class okay the final keyword can be applied with this variable a fine a final variable that have no value is called as blank final variable or uninitialized final variable okay and it can be initialized in a Constructor only and the blank final variable can be a static also can be initialized in the static block only and we will be detailed learning of this and let's first learn the basic final keyword okay okay so what is the use cases of the final keyword in Java to stop the value change and to stop the method overriding and to stop the inheritance okay we will we will be using final keyword for these two for these three reasons okay so we will discuss first what is Java final variable okay so let me get into my IDE and I will create one more class name as final keyword okay and let me increase the font size okay so though if you make any variable final you cannot change that value of that final variable it will be constant throughout the code okay so the example of the variable is okay so assume uh try to understand this example there is a final variable called a speed limit okay speed limit of that bike okay we are going to change the value of this variable but it can be changed because the final variable once assigned a value and cannot be changed anywhere in the code okay so let me create one class one not class inside this class let me create one final so to declare the final variable we will write final keyword before that Declaration of that variable okay so the final int so what is the way my variable name is speed limit which is equals to 90 and after that I will write void run now inside this I will set my speed limit to uh any any random number 400 okay you can set whatever you want and inside again this I will import my main I will write my main method and I will create one object of this class okay so final keyword obj1 is equals to new Final keyword okay and now if I write obj dot run now here you can see if I run this uh IntelliJ IDEA is throwing some errors we'll see what is desire here you can here you can see Java cannot assign a value to a final variable speed limit so here you can see once that variable you once you declare a variable as a final and you assign a value to it you cannot change that value again okay inside this line number four we are we are trying to change the value of the speed limit to 400 and it is giving me error saying that cannot assign a value to the final variable speed limit because it is already already over here at line number two we have declared value to it okay so we'll see next up Java final method okay what is our final method we will see I will take the same example let me comment this out and this one also okay and inside this class itself I will write one final method void run now inside this I will write simply print something random string running okay and now uh inside my main method I will create one object of this class and I will write obj1. run okay and now if I call this it is simply printing running okay now I will show what is the consequences if you write one method as a final and you are trying to call that method inside another class okay and now I will let me just I will write one more class uh any name by company let's suppose BMW and this BMW class is extending my oh okay wait wait wait wait wait to explain this I need one more class which is the parent class I will declare it over here class bike and inside this I will write final void run running okay and now this is my BMW class and which is extending my by class and set this I will write void run and inside this I will write yes sound BMW it's running okay and now if I create the object of this b m w class foreign method inside this main method you'll see when error should be there we'll see what is that error IntelliJ IDEA okay the Java run in BMW cannot override run in bike overridden method is file is final okay so here you can see Java is telling me that you are trying to override one method name as void run which is declared inside the parent class bike as a final method okay you cannot overwrite that final method inside any of the child class once you declare it as a final final method okay so go this is an example of the Java final method you'll see Java final class method also example sorry not method and now I'll make some changes over itself I will declare it as final class bike okay and I will remove this final keyword from here okay nothing okay and now if I try to run this code I should get one error yes cannot inherit from by final bike okay uh you have declared this bike class as a final and you cannot inherit this class inside any of the child class okay and and you in like line number 19 we are trying to we are trying to inherit this by class inside this BMW class and here itself IntelliJ IDEA is telling me that cannot inherit from final bike okay so this is one example of the class where we have declared class as a final okay now we'll see some popular questions which is asked in the interview rounds okay is final method inherited yes the final method eliminated but you cannot override it okay as we as we have seen here okay now one more question is there what is the wait let me take can we initialize blank final variable uh yes but only in the Constructor if you want to initialize uh here I will give you an example here we have written Final End speed limit and we have assigned it value as 90. if you want uh to initialize this variable as a blank variable you just simply uh cancel that assigned value as 90 and then again you can write it here speed limit is equal to 70 and if you are trying to print this speed limit at that time the speed limit will be get printed on the console as 400 because you have initialized over it over here but the only thing is you have to initialize the limit speed limit value inside the Constructor of that class not in the method so here we are written method if you if you write a Constructor for this final keyword class and inside that class if you write speed limit is equal to 400 the value of the speed limit is uh set to 400 itself okay so this is pretty much idea behind the final keyword in Java I hope you guys understood it thank you for watching this video