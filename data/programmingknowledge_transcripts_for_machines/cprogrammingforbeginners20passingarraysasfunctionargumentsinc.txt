hello guys welcome to the next video tutorial on C programming for beginners in the last two videos I have been showing you what are arrays and how to use arrays in C and I have also shown you in the last video how we can use multidimensional arrays in C now in this video I'm going to show you how you can pass arrays as an argument of a function so let's see how we can do it so we are going to take an example for example we want to calculate the sum of elements of uh this array we have so this array for example have six elements and we want to add each and every element and display the sum of every element each and every element so what we want to do basically is we want to just add 20 + 30 + 60 + 50 + 55 + 30 and sum them up and show the result uh of this uh summation using a function right so first of all let's see what are different ways of passing arrays as an argument of a function so I will declare a function void for example it's not returning for example example nothing and we can say array sum is the name of for my function I just need to change my keyboard settings yeah so array uh sum is the name of my function and there are three different ways basically you can pass arrays as an argument of a function one is using a pointer and just pointer you can just uh give this star or estx here and give your array name or array or you can say my array right my array okay so you can pass uh pointer uh array to your function but we haven't learned about point till now so I will skip this uh for now and in the future when I will uh teach you how to use pointer in C then we will see how we can pass uh this kind of arrays and as an a function argument so second way is to pass a definite sized array for example I want to get uh the sum of this array which has the size six I can just declare uh the array so my array ex as an argument and then I will give the size to my array as six like this but there is one uh problem with this is you can only uh pass uh array of size six to this function so this will kill the general functionality of a function and the functionality of a function should be it should be used in different uh conditions and this is this condition restrains uh the use of function to the size six of an array right so in order to uh you know get rid of this restriction we can pass uh the array as unside unsized array as an AR document like this so you just give the data type the name of the array and in the square bracket you don't pass any size and this means you want to pass uh an array of different size or unsized array which doesn't have any size okay or it can have different sizes right and plus we will uh pass the size as an argument also okay so we know the size of the array and the array name from here now we can uh pass different size array to a function like this okay now using this function I want to add all the elements of the array okay and let's return integer as a result and because we want to uh calculate the sum we will just declare a variable called sum is equal to 0 we will initialize it by zero okay now we will use a for Loop just like this and what is say it's doing is it'll iterate over this array one by one and we will add the values of the elements 1 by one to this sum right so initial values of sum is zero and it will add 20 30 60 1 by one to this sum right when we iterate over this array so this array declaration is something like this for in the condition or in the bracket we will initialize this uh variable I is equal to Zer and then we give the condition here so I should be less than the size of the array right because the size of the array starts from zero so it should be less than the size of the array right so just pass this size argument here okay I is less than this size right this size and this size are same and then we will increment the value of I by by one by like this okay so just initialize I is equal to Z I should be less than the size of the array which is this one and then we will increment the value of I and what we basically do want to do we want to just sum is equal to sum the previous value of sum plus the array name and the index at the moment which is uh I right so this I will uh change in the loop so first value of I is is z so i z of this array is 20 so the value of my array at uh 0er will be 20 when we will pass this array as an argument to this function okay we can uh simply write uh this in different way like this so just write sum plus is equal to just write this my array okay and this is basically same as this but this is more short form of uh this expression okay and then we will just uh return sum so once we have the sum of all the elements of the array we will just return the sum here as an integer okay now in order to use this function for example we have this array and we want to calculate uh the sum of all these elements we can use uh this like this so let me just make it smaller so we can see here so in here we will just call this function so I will just uh uh declare a integer called array sum right so this will contain the result of this but this and this are same so we will just change uh the variable name sum of array for example right and what its uh value is it's equal to the value which is returned by this function when we pass the array so this function takes to augment the array so our array is this one my number array and the size of the array right so the size of the array in our our case is six right now see this so it's six okay and it will calculate the sum of uh the array and then we will print the value of the array so so array sum is equal to percentage D and comma this because now this will return the sum of the array so this value is assigned to sum of array this variable and then we will pass this here okay now let's run the program and let's see what is the result and it shows it should be print F okay run the program and it shows array sum is equal to 245 right let's check whether it's uh true or false so I will just open the calculator from here and we have first element is 20 + 30 + 60 + 50 + 55 + 30 right all these are 20 30 60 50 55 30 and the sum is 245 which is shown here as a result so we know that it has successfully calculated or our function has successfully calculated the sum of uh elements of this array now suppose uh this you want to pass an array of size is seven here so I can just change the size and I will add one more element to my array for example it's 100 so our previous sum was 245 and we will just add 100 to it so it should be equal to 345 now right so and this now the size of the array is seven so you need to change this also because this function takes the size of array so now the size is seven right once again run the program and it shows 345 which is correct now if you want to pass an array of size 8 and I will add one more element of and for example I will just uh add 100 once again now 245 + 100 + 100 is equal to 445 right the array size is now 8 and once again run the program and it so shows 445 which is true right so in this way you can use array or you can use a function and pass uh uh array as an argument of the function uh using C right so I hope you have understood this concept and I hope you have enjoyed this video please R comment and subscribe subcribe and bye for