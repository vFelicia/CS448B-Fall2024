hello everyone welcome to the view js tutorial so today we are going to learn about props and components so components are like custom html elements which we can make in vue.js and we can register those components so so that would increase our reusability in our application so this is a good concept which will you find in other frontend frameworks as well so this is a custom http like for easiness the components are custom html templates and we can use them so like not html templates you can call them as custom html tags which we can use them for reusability in our application and the props is by passing data from parent component to child component so we would make our own props and component and i will show you the same so first we can create a new file that is index three dot html okay so you can create this file or i can name this as p uh p and c dot html so pnc stands for props and components and we can create a new file that is p okay i'll name this as props dot js props and components dot js okay and you can you can also like you can rename this as well and you can type props and components dot html okay now what you can do you can console.log script added so this would be like a confirmation for you script added and you can create your html page here and inside this html page you can put a like this is your html page and you can use this and like what i'll do i'll remove this like yeah this is perfectly fine i'll remove this css this script as well and i'll give this as title as props and components props and components okay now what you can do you can at the bottom of your body you can add a script tag and add a source is equal to props and components procs and components dot js components.js and then you can close this tag props and companies.js and then you can close this tag and refresh the page and you have props and companies.html and then you can right click inspect element and console you will see the script has been added so the script is added now what you can do now you can uh like the script is added now it works perfectly fine now we can create our own component for that what we can do we can move to props and components.js and you can type first you can type constant dot create app and we can close this an empty json object okay then we can app dot mount okay and we can give this a id app so we need to define an id app here so we'll give a div id is equal to app and then we can close this tag so then we can refresh this so view is not defined because we have not added the cdn yet so we can copy the cdn and paste it here so let's refresh the page okay sorry let's refresh this page and here you can see the script added and a component has been mounted but now we are going to create our own component a component and for our creating our own component what you need to do you need to type app.component because we are registering a new component and you need to type this as my card so this is your card and what it defines it will have two things so it will pass a json object and here you will have two things one is the props props is equal to title and props and is equal to title and then you will have a template for the same and you will type a tick symbol the tick symbol is brought the escape key and you will return div okay there dip and then you can return a h4 tag or h1 tag and you can render the title here title okay so the prop you will be getting from the parent company you can render the title at here using template now let's move to the html page and like everything is working till now perfectly fine no error so so what we can do we can add our own prop so let this be our prob be my card so this is a custom html template tag we are using and this is and inside this we are going to pass the title hello world okay let's close this and refresh the page here you can see i have a hello world and when i right click here inspect element so here you can see okay i'll show you so here you can see that what we rendered there like what we rendered like here you can see that i have my card html tag but this on conversion turns out to be this the div id h1 title h1 and dave and the title is the props to title the data we are passing from the parent component to the child so here we are passing the data title hello world and my card so we can also pass some more data that is likes is equal to 25 okay and let the date uh like likes is equal to 25 and let get category is equal to let this be like programming okay so what you can do so this is the data we are passing uh but so far we don't have like uh we don't have we have not mentioned the data we are getting so we need to define likes okay this likes so we have defined likes which we'll be getting and the category also category so we are also getting the category and now inside our html what we can do we can use this so h1 is a title then we can have a p tag saying liked by this much likes liked by this much likes and people and we can close this p tag okay and then what we can do we can also give a category a category and then we can say okay we can give category and type category so when we refresh the page so here you can see hello world programming liked by 25 people so this is a good concept but how we increase the is greasability yes we can increase the usability we can create own my card okay and then close the tag and then title is equal to software okay and the let the likes be 50 and the category you can add category is equal to tech so let's refresh the page and now you can see we have another card saying software tech and liked by 50 people so this is how we use props and components to increase the reusability in our application so this is an ex advanced concept and will help you in for the tutorials thank you so much