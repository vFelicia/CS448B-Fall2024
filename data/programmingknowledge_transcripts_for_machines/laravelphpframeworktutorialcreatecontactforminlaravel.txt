in this video we're going to see how to grade a form using bootstrap we're going to create a new post route and give it a name then we will call the new route from the forum we are going to see what is CS are f or crosssite request forgery we're going to add a CSRF token to our form and we are going to check the request parameters send from the form okay so the first thing to do is to create a new form so I'm going to open our project here we are and we have in resources views they have our contact page so here we have to add a new forum right so let's go to would strap and we're going to search for I'm sorry bootstrap form here we are and here you have an overview or an example so I'm going to copy this and paste it on our contact page and see how it looks like let's serve our application PHP horison serve okay let's try this out cohost and if we go to contact page here we have our form as we are using bootstrap as we saw in the last video this is using bootstrap as well so here we have an email address and a password so in the next few minutes we're going to change this let's go back to our list and now I have a form we had to add fields using bootstrap okay so for example for a contact form we can use a name from the user and of course an email a subject and a text which is going to be the increase right so let's add this I'm going to take the password way and the check as well okay so first of all we need to look for going to rearrange this okay I'm going to have a text field I'm going to use this plus form group as we are using bootstrap when you copy this and we have named name and here this is type 'text an ID of name and name this case is name too so we don't have a describe section for example here we want to keep this for the email field but not for any other field so I'm going to erase this and replace holder for example enter name so let's see if this works great we have a name field and an email address field so we have to add a subject which is going to be another text field and a text area so for example this is subject this is text as well name we're going to use subject and for the ID to and for the placeholder of course enter subject and the same for the message okay so let's see how it looks okay now we have our name email subject and message so take a look at this maybe we want a large field for the message so if you're going to bootstrap page we have an example text area so I'm going to grab this which is the code for the text area we are going to replace this code so now we have again message name message and ID message and I'm going to leave this with 3 rows let's see how it goes great now I have a bigger area to write our message and we can resize it from here okay so now we have our bootstrap form and now I have to create a new post route and name it this is because we have a form here and we to send the information in this form we need to make a post request so the action of this form would be post and we need to put a link to send this information so this VD sorry method post and the link would be action so for example we could create a new route called contact / sub it okay so now we have to create a new route I'm going to route web not PHP and I'm going to create a new post route which is going to be contact slash submit okay so let's write this out for example with an OK message this is saved I will see how this goes okay I am going to submit the form and we have an error this is a security error and as you can see here we are going to see worries CSRF and that is CSRF token to our form so now I have created a new route called the new route from the form and we're going to see what is CSRF so let's go to laravel CSRF and here you can see that Laurel makes it easy to protect your application from crosssite request forgery attacks which is Tory which are a type of malicious exploit whereby unauthorised comments are performed on behalf of an authenticated user ok you can read more of CSRF if you want so to prevent this we only have to add this directive within our form so let's do this here and if we test our form again great now it works of course we are testing this and it's working ok but it throw us a warning that this will throw an error in a future version of PHP so let's change this for for example one two three I think this would be the same thing No ok it works ok so behind the scenes we have if we inspect the source code we should see here in our form this variable input type hidden' so we are not seeing it the name is token and have a value so this is the same as at CSRF we can put an input hidden verbal here or just called this magic method from larva blade directive okay great so we saw what is CSRF and added a CSRF token to our form now for example we can name our routes okay let's see here we can give this route a name take a look at this you can search for laravel routes and here we have a section called named routes so it says named routes allow the convenient generation of URLs or redirects for specific routes and you may specify a name for route by changing the name method until the route definition so let's do that here for example name contact form submit now we don't have to remember all of our application routes so instead of putting contact / sub mint here we can call the name of the route so everything every variable that you're putting here in the blade files should be between double curly braces like this and now we can call the route function and just set contact form submit let's say this saved and if we refresh the page here and inspect the code again you see that the action is actually contact slash submit so it's pretty much the same thing it's a more clean way to do it and of course it works and it helps you to organize your code because if you change for some reason this route for example to this you don't have to search for contact / sub needs on every form you use it because you're calling for the name so this helps you in your development ok let's go back so maybe you should name all of your routes okay I'm going to do this now so this would be home this would be contact and this would be about of course ok great you can see that it is working as well so let's check this out again and now we have to see if we are getting our parameters in this instance okay so as you can see here we're sending a name email address subject and message that's why we added the name attribute here so if we go to our routes file again here we can return a request all so what is this request is a global variable that you have here in laravel that contains all of the request information that you are receiving from the page that's calling this route okay so here we are receiving a request from our contact form and I'm going to show all of its parameters let's see if this works you and now we have sha some form we have our token our name subject and message so we'd have the email here I think that's because with an R is a name yeah I didn't change this and the name attribute oh sorry we have to refresh the form and now we have our email there is a nice way to see this and it is with the TT function which stands for dump and die so this will dump the request all variable and then kill the application and now we see it as an array okay so this is a cleaner way we have a name email subject and message and if we add data to it for example John Doe John add TOCOM this is the subject hello this is a test message so let's submit this and here we have our data so indeed we are receiving our data so let's check this item out so that's it for today thank you very much for watching guys