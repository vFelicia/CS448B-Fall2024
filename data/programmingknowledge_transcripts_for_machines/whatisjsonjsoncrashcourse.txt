hey guys in this video I'm going to show you what is Jason why do we use Jason and how we can create adjacent data so let's get started so first of all what is Jason now the name Jason stands for JavaScript object notation but despite the name which contains JavaScript jason is mostly language independent and it is specified in the terms of object as name value pairs now that's okay but what really is Jason you may ask right so a jason is a way of structuring data and it's essentially a data format so jason is a data format same as some kind of text formats for example XML or any other text format jason is also a data text format right now why just jason is really popular and how it's useful now first of all let me make it clear that jason can be used in most of the programming language if you want to use Jason in C++ Java JavaScript Python or any other language most probably the support for Jason will be present or any such library will be there in order to parse JSON or in order to create Jason's right so Jason is really language independent and most of the languages you will find libraries or parcels to support it right so as we have said that the jason is a data format so how we can use jason or how jason is used so let me give you an example so for example you have a browser and you want to get some information about the temperature in some particular city right so the browser has to make this request to a server which makes this data available to the browser or a client once again now there are some ways of sending this data from the client to the server right so you can say the most simplest way is to send a string format right and the server is going to get this string and then it's going to give you the result but it's not so easy right until and unless you have some data predefined format it's hard for the server to understand in which format this data is coming and that's where the Jason comes in so this Jason is a data format so your server knows that whatever client is sending to the server is in the JSON format so on the server side for example whatever language you are using in that language you can use a JSON parser in order to get this data or interpret this data and then according to the request you can just prepare this data in the form of JSON once again and send it to the client and then whatever a client sign language you are using most probably you will be using javascript and this javascript will be able to understand that that this data is in the JSON format so it's going to parse this data and then it's going to show you this data in the form of HTML using that JavaScript right so this is very simple kind of jason right so a jason has these curly brackets and then the values are defined like this so there is a key and the value for it so key here is a city and the value of a city is Paris for example right unit is a key and C capital C which stands for centigrade is the value of unit right in the same way once your server has some data it's going to send it in this format so here low means low temperature and so low is a key and 16 here is the value right high is the key and 23 is the value right so this is the format of very simple JSON which can be sent from the client to the server and then server to the client so jason is essentially a data format now the question arises that which kind of data you can send using JSON right so let's see what are the values you can use to send data so in Jason you can send this data in the form of these data type which are there in this picture so the key which I already explained you for example city was the key and it's always in the string format right so key will be in string format and the jason value you can see the jason value can be an object it can be an array it can be a number number means it can be an integer or a decimal value and string is a string and other three formats are true/false for boolean and if you had don't have any data you can send null okay so these are the data types which can be used to send the values in Jason so it can be object array number or a string or a boolean value or if you don't have any data then you can send null also okay now let me show you a simple example of a jason now for example you want to send employee data or the data of some person from a client to a server right so for example the first name is John here so its value is a string value right last name is myth it's also a string value this value you can see now age is 25 this is a number right so there is no double quotation around it okay so number you can write directly like this now address can be a little bit complex because the address may contain a street and the city name and the state name for example and the zip code right so this data you can send in the form of object and what is an object so an object is also a combination of key value pair and you can see using this curly bracket you can define key value pairs and because it's in these curly bracket it becomes an object of address right so an object is nothing but the key value pairs itself the combination of these key value pairs and they are you know created using these curly brackets so this whole is a object the combination of Street city state and zip is an object right now let's come to the phone numbers right so a person can have multiple phone numbers okay and you can define these phone number in the form of array so you can see a square bracket here and inside the square bracket you have defined two object first object have a type home and number whatever number is right second object has type fax and the number whatever number is right so you are defining multiple object for the phone number and you can do this using this kind of arrived so you are essentially creating an array of object in this case now let's see how we can create a Jason so I have this text editor this is Visual Studio code but you can use any text editor to create a Jason file it's not you know essential that you need to use this kind of editor you can use any other editor to create a Jason file okay so to create a Jason file we just need to for example give a name to your Jason file for example sample and then you just add the extension Jason after dots here so sample dot jason is going to create a Jason file now a Jason will start with these curly brackets right now let's you know take an example of same employee data and that employee data contains for example name so we will define a key name here so this is called key name is the key and the value of this key is for example the name itself so for example mark is the name okay and this key is always a string as I already told you and you use double quotation to you know use strings in Jason now the key and the value are separated by this schoolin okay so this is a key this is a value because it's a string so we have included or we have added double quotation around it and the key and value are separated by this colon right now if you want to add more data you use this comma okay and this comma means you want to add some more data so for example I want to add surname here and then I want to just give this colon two separate key and value and then the some surname okay so for example some surname okay and then I want to add some more data and I add for example age here and this time because ages are number I can use directly a number notation here now this number can be a decimal value also so for example a person is 26 years and six months you can just give 26.5 here and it's perfectly fine it can take an integer or a decimal value here okay now for address so let's define an address here so address because address can contain multiple key value pairs so we can define this address inside an object an object is a combination of key value pair inside these curly brackets so once you give these curly braket this value becomes an object and here you can once again give these key value pairs so for example address contains street here so you can just give the street and then the value of street some some value right and then next comes for example the city name so you can just give the city name this is also a most probably string in most of the cases and then you can give the zip code right so zip and in some cases it can be a number in some other countries it can be some string format right so let's say it's a number so you can just give this number like this now keep in mind that I haven't added comma and the last element right so I have added comma here I have added comma here but because zip is my last element of this address object so the last element doesn't contain any comma so when I add comma it's an error right so I don't need to add comma to the last element of an object right so you can say this is a big object this is one object and then address contains the sub object here okay now let's add the phone numbers here so for adding the phone number you need to add comma here after this curly bracket right because you are adding one more element here so let's add phone for example here and then these phone number for example a person can have multiple phone numbers right so in order to give the phone number you can directly define an array array means multiple values for the same key okay so for example a person contain the first number and then a person contain the second phone number and a person can contain the third phone number and it can contain multiple you know element in the array so you can have multiple elements in this array and these array values are also separated by these comma and the last value does not have the comma now one special quality about this array is it doesn't have any key here right the key is the phone and because the phone have multiple values we have used the array using this square bracket and the value are multiple so they are separated by this comma so your value does not have any key here the key is phone here and there are three values in the form of array and how you recognize array you can recognize array because you have used square brackets here so these are the most basic data types here okay you cannot use also for example if the person is married or not so single here and the value I can provide for example falls here if he is a not a single and if the person is single we can just define true here okay so you can define value as a boolean value and then a person can have some skills right so I can just write skill and for example for now he don't want to add any skill so he can add this null value here so if you don't want to give any value with the key you can define null and it will be considered as no value or null okay so this is no value so this is a simple jason here as values you can use strings as we have used here name and surname and then you can use numbers it can be decimal numbers or integers you can use object so you have this object under these curly brackets you can use array in these square brackets multiple values for the same key and then you can use true or false as a boolean value for some key or you can use null if you don't have any data for that key so this is how a simple jason is defined so I hope you've enjoyed this video please rate comment subscribe and bye for now