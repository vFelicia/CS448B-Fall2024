so in the series of learning programming in c we are discussing some programs on metrics in the previous video we have discussed the theory of this program how to do matrix multiplication like how to multiply two Matrix how the logic behind multiplication the rules and the conditions everything we have discussed in the previous video in this video we will write a program first of all I'll write a program here we will Wren that program step by step and then I'll show you output on my laptop practically you will also see right so now I'm taking these two Matrix we will be reading these Matrix first and then we'll print the final Matrix so the dimension would be size would be number of rows of first Matrix number of columns of second Matrix so that would be 3 into 2 Matrix that is for sure right can we multiply this check Columns of first Matrix three should be equal to number of rows of second Matrix number of rows three yes equal yes we can multiply these so I'm just writing writing down the logic here just for multiplication for reading purpose like nested loops and scanf I guess you can do we have read Matrix multiple times so that I'll show you directly on my laptop right here I'll just discuss the code to multiply these matrixes right I'm assuming that you have written the code to read these two Matrix and to print these two Matrix on the screen right now see the logic here I is0 see second this Matrix resultant Matrix is suppose C this is a this is B so dimension for C is 3 into 2 means number of rows three two number of columns so outer loop would be for number of rows we know so that would be from 0 to three in that Loop would be for number of columns so that should run from 0 to two because here we are we will having we will be having two columns so j++ right now here what logic we have to implement see index is 012 012 012 please try to understand this one clearly first of all here if you get this logic you can directly you can easily write down the program at your own so first we will take this complete multiply with this column First Column of I mean column zero of second Matrix row zero first Matrix and we will access this and this and add this and this and add multiply this and this and add and whatever the value will get we will store here the sum we will store here right so now how you are getting C here I'm multiplying what I'm accessing and multiplying what a of I'm accessing these uh elements means index would be 0 0 0 1 02 means first index is 0o right and that is I for first iteration I would be zero for all the iterations then it would be one right so we are accessing this row so for this entire row I value is zero because row uh for handling row we are taking a variable I I this Loop is for row right so a of I now second subscript would be what I'm accessing second subscript is changing every time 0 1 and two First Time Zero then one then two right but we cannot write down here J because J would always be run from zero and one two times only once J becomes two out from the loop and I want this value 0 1 and 2 and we cannot write I here obviously we have written I here we cannot write J so now what you will write we have only two variables I and J so here we will take another variable K and that value would run from 0 1 2 right now into B of B of here in two subscript what you will write we are accessing this one right so index would be 0 1 for this 1 0 2 0 means the second index is same that is zero every time right and if you will access this one the second index would be one every time zero and one we are we are not having any other column we are having only two columns 0 and one so here we will write directly j 0 and one J would run from two uh would run 2 * 0 and 1 so here you will write J but here what you will write because it's changing 0 0 1 0 2 0 so here we will write K obviously we cannot write I here because I value is what for every iteration it's zero and this value is changing 0 1 2 we have simultaneously accessing this and this then multiply this and this multiply this and this multiply and then add also so we are going to multiply this right and also we are going to add in this one so we have to take another variable K and we will add in this we will take another variable like sum and whatever the value here we are going to store that into sum again right so before this another for Loop that is k k should be zero now upper bound of K would be what it is basically for the multiplication purpose right so K would be would run three times 1 2 3 and here also K is handling this or this three times so 0 to two it should run three times so K less than three or here what you can write upper bound uh must be either number of columns of first Matrix or number of rows of second Matrix here both are three and three so that is why it is 3 and K ++ and this you have to write down this line you will write down in this Loop okay and whatever the value in sum obviously we are going to store that value in this Matrix sum so at C of i j here we will store sum fine that's it right now for again what we will do this row but now this column right so sum you have to initialize again with zero otherwise it will take whatever the value in sum and it will add in that some value this and this so whatever you will get here that should not be correct so after this loop again we will initialize sum with zero so where we should initialize the sum zero outside of this four Loop so here we will initialize sum is equal to zero within this J Loop sum is equal to Zer we can initialize here and before initializing obviously we will declare this variable after function like where wherever we declare this igk variable there only we can declare this sum right so uh it's okay we have stored here right now we can close this for Loop and then this I Loop and now if you want to print this this i j sorry C Matrix next two Loops would be required I would be 0 to 3 J would be 0 to2 and directly you can print what print F percentage D c5j that that's it that is very simple here the main logic is this Loop the K Loop and what you will write here that is very important that's it otherwise there's nothing in this multiplication program so let me dry run this logic and then you will get it right see we have I variable we have J variable as well as we have K and also we have sum right so I is zero condition true enter J Z condition true enter now some would be initialized with zero here now here we have one for Loop k k would be initialized with zero condition true enter now see the statement Su is equal to Su plus this sum plus sum is what 0 0 plus now what we are accessing I value 0 K value zero K value 0 I value 0 so a of 0 0 means 0 B of 0 0 means 1 we are multiplying 0 into 1 that is 0 right so 0 plus here we have again the value is0 and whatever the value that would be what stored in this sum so now sum is still zero right so now we haven't uh you know got the exact output whatever we want here because obviously we want to add this and this multiplication of this and this and this and this so now rather than storing some here better to store this in this K Loop we will only write this one line sum is equal to this and after closing the SC Loop then we will store the sum into C right so now see now the working is what see we have done this sum is equal to sum is still zero now k++ now K becomes one condition true yes again enter here 0 1 1 0 so now sum is equal to sum whatever value in sum still we have 0 0 plus a of 01 we are going to access a of 01 a of 0 0 1 that is 5 so 5 into B of 1 0 B of 1 and zero that is zero so that is what 0o right 5 into 0 Z and sum is also zero so now still sum is zero again k++ K becomes 2 yes condition true again enter here now we will exess 02 and two 0 so sum is still 0 plus 02 a of 0 and two this one 2 into B of two 0 B of 2 0 that is 3 3 into 2 6 now that that would be stored in sum so sum becomes now six now K becomes three condition true no condition is not true exit from the SC Loop and now we will will store this in at C of IJ I value is zero K value is zero sum sum is six so we'll store this at 0 0 so here we will store this six so first element we have got of the resultant Matrix that is six right and I hope it's correct fine now see after after this line what now still we are in this jth Loop so now what will be done j++ now J becomes one now condition true again enter here again some would be initialized with zero right if you will not initialize the sum with zero then by default what the value in sum is six so it will take six plus it will do what multiplication of this and this and it will store here so that would not be correct so now again we have to initialize some with zero I hope you're getting my point right now again K would be zero condition true yes enter here now see I value is still zero K value zero K value Z and I sorry j value is now see J value is now one right and that's exactly you want to access now sum is 0 0 + 0 0 means 0 into 0 1 0 1 exactly now we want to access this row but this column and we are going to multiply and add so 0 into 2 but that is Zer only so that would be stored in sum sum is still zero now k ++ k becomes 1 condition true again enter here now 0 1 and we will exess 1 1 so 0 1 is 5 5 into 1 1 that is 4 this is what 20 so now 20 would be stored here right but K is what two condition true again enter here now K is 2 here K is 2 so we exess 02 02 means 2 so 20 + 2 into 2 1 2 and 1 that is five 10 that is 30 so now sum becomes 30 right now k ++ k becomes three but condition is not true exit from the K Loop and now whatever the value in sum we are going to initialize is that value we are going to store that value in CI j i is zero but J is 1 so 0 1 this index zero row and one column so here we will store what 30 so we got this value second one 30 right so now again j++ now J becomes two but condition is not true this time jth condition right so exit from this jth Loop and now now still we are in I Loop now I becomes one right condition true again enter here and again J would be initialized with zero obviously condition true and again the same process would be repeated right so now I is one now so we we will get this row and when I becomes two you will get this row and when I becomes three condition is not true exit from the loop so here we are getting three rows and two columns only right so I hope you got the working of this one right it's not confusing right so let me show you this thing practically so now let me show you practically see here I have already uh done this program matrix multiplication dot C because if I'll write the complete coding here then it would be very lengthy the video would very ly so I'll just explain the coding I'll show you the output here I'm using macro see hash Define n 50 I have just taken a size macro size 50 and here I'm declaring array like what I'm not giving any size I'm just writing n right so this is also another way to define to write to declare size of an array using macro that's exactly I want to show here right so that is fine now here I want that user should enter number of rows and columns for these matrics for first and second matrics right so that is why I'm ask I'm asking here rather than you know static declaration 3 into 3 and 3 into 2 Matrix I ask from user right so print of enter number of rows and columns for first Matrix and for number of rows and columns for storing the value I'm taking what M and N so this you need to take care M and N M number of rows for first Matrix n number of columns for first Matrix p number of rows for second Matrix Q number of columns for second Matrix this you need to take care so address of M and N I'm just taking now I'm going to enter the first Matrix C two for Loops outer loop would be for number of rows that is why I'm writing here the upper bound is less than M rather than writing any three or two or any value I'm writing m in the loop would be till n because n would be number of columns so scanf address of a of right same second Matrix enter number of rows and columns for second Matrix we are taking variable p and Q enter second Matrix the loop would be from 0 to P inner loop would be from 0 to q and address of a of IG right now I'm printing first and second Matrix so print F first Matrix is here I'm just going to print whatever you have entered in Matrix form so obviously two for Loops outer would be from 0 to M inner would be from 0 to n and print F A of i j that's it and and same we are going to print second Matrix I hope this is clear to you because we have discussed this thing many times so now here also one more thing I'm adding I'm going to check if we can multiply The Matrix or not so what is the condition I have told you for multiplication number of columns of first Matrix must be equal to number of rows of second Matrix right if not equal you cannot multiply so here if n number of columns of first Matrix n not equal to p p is what number of rows of uh second Matrix if these are not equal means you cannot multiply means it should print you cannot multiply else we can multiply so in lse part we will write down the coding of multiplication this right see so the resultant Matrix would be of size M into Q I hope you got why I'm saying M into q m number of rows of first Matrix and Q number of columns of second Matrix so the resultant size would be M into Q so that is why Loop would be outer loop would be from 0 to M inner loop would be from 0 to q and in this Loop we are initializing sum is equal to Z and one more Loop that is K that is responsible for actual you know accessing the simultaneously the values and multiplying those values and adding right so same I'm writing some Plus a of i k into B of KJ and after this K Loop I'm going to store sum is equal to c5g that's it and here I'm printing the multiplication print printing is simple two for Loops only outer loop would be M 0 to M and inner loop would be from 0 to Q right because you you know number of rows and columns and I'm just printing CG right now let me just run this program for you see it is asking enter rows and Columns of first Matrix so I'm taking 3 and 3 enter first Matrix so I'm entering the value now 0 5 2 1 1 0 uh 3 7 and 5 now enter number of rows and columns for second Matrix so I'm taking 3 into two Matrix so enter second Matrix that is 1 2 0 0 1 5 4 C this is first Matrix right this is second Matrix and this is the multiplication of these Matrix and see let me just run this again again and show you uh one more output like if you cannot multiply The Matrix that kind of thing so number of rows I'm taking three and three and Matrix and number of rows and Columns of second Matrix I'm taking uh what it is 5 into 4 so second Matrix would be see just want to show you this output cannot multiply why because here number of of columns of first Matrix is not equal to number of rows of second Matrix number of columns in first Matrix I have entered that is three but number of rows in second Matrix are I guess 1 2 3 4 5 and 3 is not equal to five so that is why it is showing we cannot multiply right so maybe this condition you can put where here after uh just know uh asking enter rows and Columns of second Matrix at that only you can check if the condition is true then only it will ask that enter second Matrix otherwise it will not ask it will just directly print uh it we cannot multiply these Matrix please enter the correct size right so I hope you got the program now so now I'll see you in the next video till then byebye take care