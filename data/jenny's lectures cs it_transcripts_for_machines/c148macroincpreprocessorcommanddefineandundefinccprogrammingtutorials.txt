so in the previous video we have discussed what is preprocessor how to use that thing what preprocessing means what is the you know meaning of that symbol hash we use in every program like hash include H hash include string Doge so what is this hash symbol what is preprocessing right the functioning of that thing and what is Hash include that preprocessor command there are many pre preprocessor command one command we have discussed in previous video that is Hash include what does that mean exactly what is the meaning of hash include command and in how many ways we can use that command in two ways to include something right the file from a standard library or you can say from a local directory so those things we have discussed everything in the previous videos with the help of proper example now next preprocessor commands are hash Define and hash under so these are to you can say Define a macro or defining constant now how we will use this thing this is to undefine that thing the macro but how you will use this thing in your program that thing discuss in this video I'll show you a program also practical also I show you and all the important points about these two uh preprocessor commands we'll discuss in this video now let's see what is this hash Define and hash UND in one of my previous video I have told you like hash Define is used to define constants using const keyword also we can Define constant and using hash Define also this uh command also we can Define constant like what you can Define the example is you can write hash Define simply you can suppose I'm writing here a constant a and the value of this is 10 please don't put any semicolon after this hash defined Line This is General mistake students do you have to remember this thing now whenever in a program I will use this a that would be replaced by this 10 now in main function suppose I'm writing here another variable int X I'm writing x equal to a if you don't Define this constant here this is not possible because the right side there should be a constant right integer constant but we already defined this constant the value would be 10 so this would be replaced by 10 before compilation in the preprocessing phase right because preprocessing comes before compilation it's a step in compilation so now whenever you will print like print F and percentage D and you will print X so it will print value 10 so this is how you can Define constant using this right or another thing what you can Define like generally whatever you will write after this hash Define this thing this is known as macro right now one more example suppose we are we are writing here like Pi 3.14 I think 15 and 8 or 9 something like this let me write down 9 here the value of pi is this here I'm defining this macro this is known as macro name and this is the value or you can say the character sequence here we can write this is macro name and this is character sequence it's not like that here you can write only the integer value you can also print a me you uh string also this also I'll show you an example now let us discuss this example first suppose we have taken this thing it has to find pi and this now whenever in a program we use this P that would be replaced with this thing during the preprocessor phase only this is to Define uh macro this is how we can use uh this hash Define to Define uh macros or you can say to Define preprocessor variables this is what preprocessor variable also you can call it right now how you can use this thing suppose we are writing in uh radius area of a circle we uh printing so we are we are going to calculate so suppose I'm taking at compile time only in R is equal to 5 and in print F I'm just writing area of circle is I'm just writing percentage F and Pi into R into R Pi R square this is the formula I guess right return zero so this at the time of preprocessing only when you will compile preprocessing would be done and this whatever the line which are beginning with hash that would be process by the preprocessor program right so if preprocessor see this thing hash defined it means we are defining a macro it means whenever in a program we are writing this Pi that would be replaced with 3.14159 now compiler will see this value not pi value right so this is what the role of hash Define one one so here suppose at many many uh know places we are using this spy in a program 5 10 15 places so rather than writing this value 10 times in your program better to use this small Name by it is better to understand readability would be more right and we don't need to write this this value 3.1415 again and again just write down Pi Pi right so this you can say this task would be more you can say efficient for us guys if we Define a macro something like this now if you don't write here this character sequence I want to print a message like hash Define I'm printing the macroon name MSG message and just printing like Jenny lectures suppose the name of my channel complete name csit net and jrf this thing so this message suppose I want to print 10 times in my program 10 times or 15 times suppose 10 times so rather than writing this complete a long message 10 times better to write down this thing better to Define this hash Define MSG now why I'm writing this MSG like in caps it as you can say a rule it would be recommended it's not like that if I write MSG in small letter that would give error no but it is you can say specific you can say it's a rule for better understanding of the program because generally when we Define variables see we take small letters and if by default suppose here also I have defined a constant and I'm using R and 10 so this would be this R would be replaced by this 10 10 is equal to 5 it will give error and if I write here capital letter then it would be fine right the compiler the preprocessor would not be confused in this thing right so better to use caps while you write macro name because generally in variables we use small letters so just to avoid the confusion we use capital letters so simply how you can print this thing you can write print F percentage s and MSG that's it it will print Jenny's lecture csit net and JR this MSG whenever we use in program this m that would be replaced with this character sequence so this can be a con you can say this constant integer value or a string value also fine so this is how you can use this hash Define just to Define a variable or these type of messages or constant now another thing is you can Al also Define function macro you can say functions macros sometimes acts like functions also now how you can do that thing see suppose here I want to define a function product or multiply m u l I'm writing for multiplication and a and b two variables I'm going to pass and just I'm defining it a into B that's it no semicolon here remember this thing now in our program we are writing something like this like uh print F percentage D or you can say multiplication is percentage D and I'm just writing here M UL L and I'm passing 2 3 so it is what now we are defining the macro but this will act as a function so whenever we use we will use this line in the program like m 2 into 3 I'm passing the value so this would be replaced by a into B A into b means now a value is 2 and 3 so this would be replaced by 2 into 3 now 2 into 3 means 6 it will print six during the preprocessing phase it will replace this thing so this is what obviously this is a function function calling we can just you know uh Define a function M and we can call that but it is faster than that thing because during preprocessing phase only this would be replaced and if we Define another function then during the compilation then it will call the function then return from that function and all these thing would happen but here no such kind of thing will happen right before compilation only it would be replaced directly 2 into three and directly compiler will give you output six so it is is faster right so this small function if you want to write down then rather than just defining function giving protype of that function calling that function use macro you can use macro also right now one thing is what you have to take care one thing like if this here I'm passing No 2 into three I'm passing here I'm passing here this 5 2 7 + 4 this also we can pass so maybe you will think if a is what 5 2 means a is 3 and b is 7 + 4 that is 11 so it will give 33 output right no this thing you need to take care see first the expansion the substitution would be done after that evaluation of the expression would be done so first thing what what I am saying let me just clear this thing first so first thing what would be done at the place of this yeah obviously a is what 5 2 this would be replaced a into B because this means we have defined it something like this a into B so at the place of this a into B would be replaced now a is 5 2 b is 7 + 4 so what would be replaced here 5 2 is a into 7 + 4 so this would be the expression first expansion or you can say the substitution after that evaluation now we are going to evaluate according to the board M Rule now this multiplication would be evaluated first so that would be 5 14 + 4 now this value becomes 9 14 that is 5 so the output would be 5 not 33 this is important Point here you need to take care right now rather than this you can also write multiple lines but you have to use that slash like suppose I'm writing here Max maximum of A and B right now here we'll check if a greater than b just a slash in another line in another line you can write print F A is maximum semicolon you can you will use semicolon obviously after the Sprint F right then slash l then slash then print f b is maximum no slash after this last line you can write down multiple line something like this right now here if I pass Max and if I pass here 5A 6 what output you will get simply it will print Max a so this would be replaced with this thing so a is five five and six so 5 greater than 6 no so else it will print B is maximum obviously B is maximum if you want to print the value also like six is maximum then what you can say see this this A and B would not be replaced one more important point about this thing this A and B would not be replaced by five and six only this A and B would be replaced with the values why so because this A and B we are writing in double quotes So if the this thing is written in double quotes that would not be replaced with these values if you want to replace it then you can write down here percentage D is maximum and after that you can print a percentage D is maximum after that you can print B now this a is out outside of this double quote so this would be replaced with five this would be replaced with six right here and this see this substitution would be done here only not here because Max A and B this is the definition you can say of this macro so macro this I'm using here so this this at this place this complete code would be substituted here don't get like confused this would be same here and this a would be replaced here first of all this code would be replaced here this is you can say would be expanded source code not I file would be created and after that compiler will compile this thing here this code would be copied here or you can say substituted here at the place of this thing right now here only this changes would be done now it will print six is maximum right so if the value is written within double quotes that would not be replaced with the this this macro fine now I think that is it about hash Define I have told you every point you can just write down these important points I have told you right now how to use this undefine if you want to undefine the macro which we have defined using hash Define then you can use hash and now I want to undefine this one after this you can write hash andf just write down the macro name m ax no semicolon here and after if this undi function you you want to write down print F percentage D and Max again you want to use 11 and six it will give undefined reference to this Max because we have undefined this macro at this point so after this point you cannot use this Max it will not be recognized if you don't undefine then it would be fine so it is just to undefine the macro you have defined right let me just uh write down the program here and show you okay so let's create a new file Define macro I'm just writing the name Define macro hash include s and first of all we'll see we'll uh Define a constant hash Define a and 10 right now in main we'll take int X is equal to a and simply print X percentage uh D and you'll simply print the value of this x right turn zero and let me save it and let me just run this and show you what output you will get it should print 10 because whenever we use in program a that will be replaced with this 10 right so X is equal to 10 and it would print 10 right so this is how you can use to Define constant or another program you can write down yourself we use here Pi the value of pi and you can calculate area of the circle P Pi R square that is for your assignment you have to do that program I'm just taking another example there I'm taking a function that we have taken M multiple function so a comma B and just I'm a into B that's it now at this point of time just I'm writing print F and iting multiplication is percentage D and just calling the function and I'm simply passing 5 comma 2 that's it right so now what output you will get this time Al you get 10 see the multiplication is 10 because this M 52 would be replaced by 5 into 2 a into B that is a is 5 b is 2 5 into 2 that is 10 now this point of Time same example we'll take here we are taking 5 2 comma 7 + 4 this time what you will get 5 see see multiplication is min 5 not 33 right now another example what we can take like we want to calculate Max Max and uh a comma B here I'm writing if a greater than b sorry simply write okay after this line we write this thing fine and after that I'm just printing print F A is maximum semicolon after print F put semicolon otherwise it will give error then next line is else same for next line if you want to move to next line the slash then print f B is maximum no slash after the last line right simply now in main end we are calling here we are not printing anything we are simply calling this one M ax sorry M ax and 3A 4 semicolon that's it let's run this and see what output you will get see B is maximum because four is B now this A and B would not be replaced right so if you want to replace if you want to print the value then you have to use here percentage D and after that we simply print a and rather than this P percentage d and we simply print B now let me just turn this and show you now this time it will print four is maximum so the main motto is just to show you like you can write down here multiple line also how to you write down just use the slash now if you want to undefine this let's write down here hash unde and Max and after this line again I'm going to call MX Max 5A 4 I don't know it is right or no let me just you know here would be comma and Max would be obviously capital m x now at this point of time we have undefined this mix at this point of time and after undefining I want to access Max I want to access this macro so just run run this and see okay it is giving error implicit Declaration of function me my Max see it would consider it as a now normal function not a macro right UND defin reference to Max fine because we have undefined this one if we remove this line and now we are using this again Max 54 then what it will print first for first Macro for this calling four is maximum for second five is maximum so both are working now see I have shown you if you want to undefine Simply write undef only the name of that macro Max that's it no semicolon nothing else so this is how we can use hash Define and hash undefine macros so that is it about hash defin and hash undefined macro now we are some we have some predefined macros also and some other preprocessor commands those commands we'll discuss in the next video so now see in the next video till then byebye take care