hey everyone I hope you are safe and doing good so in the series of learning C++ programming language in the previous video we have seen one coding exercise on recursion right so this is same one more exercise we'll discuss on Rion in this video but before that let me ask you one question I'll give you two option suppose one option is today I'm going to give you 10 CR rupees second option is today I'll give you one rupee only but that one R rupee would be doubled every day whenever you wake up it would be doubled so which option you will choose let me know in comment section So based on this I mean see let's see one coding exercise the exercise is you have to calculate the total amount of money that would be accumulated if you start with 1 rupe and double it every day for n number of days this n number of days user will enter how many number of days at first day you have one rupe and that would be doubled for n number of days so after n number of days how much money you will have this is the thing you need to you know calculate with recursion using recursion you have to solve this exercise right like at day one I have 1 rupee right then day one then at day two it would be two then at day three it would be doubled that is four at day four we have number of rupees I mean the amount is eight then fifth amount is 16 something like this and if number of days are suppose 10 so after 10 10 days how much money you will have or after 30 days how much money you will have this you need to calculate right using recursion so pause this video if you got the problem and try this out and if you didn't get this let me just give you one simple hint those who didn't get it so suppose after 10 days after 10 days you want to find out so if you have the money which is on day nine if you have that money you can simply multiply this by two right to find out what money you will have at day nine if you have if you know the money that you will have on Eighth Day after Eighth Day if you have that thing you can simply double it and you will get whatever the money at Day N right so try to think something like this so see this is obviously what reent here is one function again same function function I'm calling and into two see the function Day N the same function I'm calling and into two so this is kind ofion right and when to stop at day one at day one because I have only money is what one rupee so if if n is equal to is equal to 1 I mean n is here indicate number of days so number of days is one so n is equal toal to one simply return one this is the base condition otherwise this this is the base case this is the recursive case try this out now pause the video and try this out so I hope you have done this right int Main and U I'm just calling like or so let's take a variable in total money and we are calling a function suppose we have a function name let's take money double or double money something like this any function name you can take and here we are passing what number of days obviously we pass number of days because the money because here is at starting we have only one rupe that is why no need to pass the money if suppose I say at uh day one you have 10 Rupees and for 15 days you have to double like 10 Rupees at day two it will become 20 right in that case you have to pass in this function the money you have at one day I mean first day but here we have only one rupee so no need to pass that thing so money double here simply we are passing int n int N means number of days right so let's please uh you know ask from the user to enter number of days number of days and simply pass number of days here in money double in this return zero and whatever it will return obviously we will store that in a variable total money and we will simply print that total money and the name is money double and we will simply print whatever the total money is that's it but obviously you have to Define that function first right so what you are going to return in this function return just two into whatever the money you will have on the previous day so number of days are X so on X 1 day so let's call this function money double for X 1 that's it I hope you got this but obviously base case that is crucial if this uh xal to equal to one simply return one because one I mean Day first we have only one rupe right so it on one only okay there is an error you have to First Take This variable as well now int n before using it okay here see theor what's silly mistake I'm doing now while calling obviously you will not write down that data type of uh the argument you're are passing simply the argument will pass right so silly mistakes let's run this and see enter number of days suppose I'm entering number of days five so after five uh after fifth day I'll have 16 rupees and that's correct if I run this again suppose if I run this now see you see here after 15 days you will have this much money after 30 days see after 15 days you have only 16,000 rupees only let's see after 30 days what you think how much money you will have see this is around 5 cor I guess no it's actually 53 CR now which option you will choose first or second so I this is you know power of compounding those who are in stock market I mean uh those who knows this what is compounding and all so I I hope you got this logic right you can dry run this just write down this on a piece of paper and dry run this program right see try to dry don't just underestimate the power of dry in the program if you are beginner in the this case because this would really help you to you know build the logic to help you understand what is actually happening how this program is working not just you get the output and that's it no dry in every program if you are a beginner especially right so I guess that's it for this video if you have any more doubt you can ask me in comment section or if you want to upload more such kind of videos like on recurs and more coding exercises you can just let me know in comment section otherwise from the next video we are going to start pointers and reference and after that we will be starting oops Concept in C++ right so that's it for this video now I'll see you in the next video bye take care