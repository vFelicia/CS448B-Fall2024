hey everyone I hope you are safe and doing good so in the series of learning C++ programming language we are discussing strings in C++ uh I have told you in previous video like C++ provide two types of string representation one is C style character strings and second one is C++ strings so C style strings we have discussed in previous video right now in this video we'll see what are C++ strings in C++ you know new type of strings are introduced as like this STD this name space I mean this scope resolution operator and string because in C++ string is a class as a class they have defined they have introduced string right so if this is a class we can create object of this type of class right so we have a proper you can say as a data type in C++ because in C string is not a data type we use string as a character array right it's not a data type you you cannot write like this like St Str and just create an string type of variable in C in C this is invalid in see what we can see we can write down character array like care and like s Str there you can use the length size of the string this is valid so this is character you can see this is C style string but this is not valid but this we can use in C++ because in C++ new type of strings are introduced like this string is a class here which is defined in this header file which is string with so many functionalities and member functions are there so we can use so many functionalities with string right so strings are basically we can say objects which are represented as sequence of characters in C++ right so strings basically can are objects in C++ that represents SE of characters right so in string we can store text we can store obviously numbers also any type of data information we can store using string and one advantage is what you don't have to specify the size at compile time these are not a fixed size right this is drawback in C style string but if you use C++ style string this is valid in C++ this is how we can define a string right so here this Str Str is you can say it's an object because string is a class in C++ right and to use string and all the member function of string we use this header like hash include string you have to include this header although without including this also it will work fine if you include that iio stream header because automatically with this uh this would be included included but sometimes it will not give the proper you know result it depends it is implementation dependent so better to include whenever you are using Vector better to to include especially Vector header file when you're using string better to include separately string header file when you're using pair better to include separately utility uh header right and in C++ these strings C when in C we use to concatenate two string then we use S strc this function right but in C++ if you are going to con concatenate two string you can use this plus operator right so plus can also be used for addition as well as for concatenation of two strings in C++ right so we can use these operators like Plus or for comparison we can use double equal to for equality not equal to less than greater than less than equal to greater than greater than equal to these operators we can use with strings so this is going to make your you know our life easy and simpler so we can say we can write down this code with so much Simplicity rather than using those function St Str CMP St Str C just use plus just use these symbols right so the code would be more you know readable and easy to write right so we can say these C+ plus uh strings provide many advantages over C style string like we I told you one thing that is dynamic size you don't have to provide fixed size right and this binary operator supports in C++ they provide but you cannot use these type of operator with the c style string right as well as many member function are there which we can use on strings so all these things I'll show you practically right let's see now with this thing with the help of program so just create a new file and include those headers now how to uh Define or declare a string just use this string this keyword and the name of the string St Str that's it no need to specify the size and all and this will work fine so string is basically more precisely you say then Str Str is an object of Class Type string right or we can initialize it something like this like St Str equal to I have gen in C style string we cannot initialize this thing right if you use like character array then array name is equal to this that is invalid that we have discussed in previous video right so this is fine now if you want to print then simply St Str and let me show you see you will get Jenny right or we can use this type of bracket also this round bracket and it will work fine see Jenny would be printed right so one more thing we can do like Str Str St str1 or let's take this Str str1 this is Str str2 and here also we can specify like this St str2 kri without equal to also it will work fine or you can write down here equal to as well right now this will this is Str str1 so let's print both Str str1 and andl St Str 2 let's run this and it will print Jenny and kri two string right so without equal to or this also it will work fine now with another string like I have Str str3 and I want to initialize with Str str2 so this is also fine rather than Str str2 now if you print Str str3 then Str str3 is also initialized with Str str2 in Str str2 we have katri so katri would be there in Str str3 as well so we putting just one and three these strings not two so it will print Jen and kri okay let's run this and I'll show you see right so with another string we can initialize a string and if in a string you want to there is a string in which only one character or single thing is repeated so that is also uh that thing we can also achieve with this like 10 times which character a is repeated in this string right and I want to print C out this Str str4 in a new line so let's put here ndl let's run this and see okay it is printing only a so okay in this case there would be these type of round bracket not curly bracket let's run this and see what output you'll get see a is printting printed 10 times right so make sure you I have to take care of this thing one more thing I want to show you like Str Str 5 so we have these two things these two type of definition of the string or you can say initialization of the string string five I'm going to initialize with Str str1 and I'm just providing three here and in Str Str 6 I want to provide a proper string I'm writing here as a string literal I'm using this is a C string literal right right and here also I'm providing three so what you think what output you will get Str str5 and Str Str 6 let's run this and see okay now need to select this see first is NY and next is p r so in St str1 in string we have Jenny right and three this three means from which position the string to be copied in Str str5 right from position third 0 1 2 3 so this NY would be in this Str Str 5 in this case we are providing C string literal so here if you provide this number it means from starting from 0 to this is what uh the length of the string so 1 2 3 till a p a would be there right p a would be initialized in this St Str 6 so you need to take care these two types of initialization right now let's concatenate or let's take input from user like I want to ask uh from user the user name so in that case what you will do let's comment out all all these things and uh I have taken a R1 a string and from user I want to take input enter your name and see in in St Str one sorry Str Str 1 because this is our string the name is Str str1 and I just want to print again St str1 that's it let's run this with scene obviously we can take input from user enter your name so Jenny yeah Jenny and Jenny two times sorry one is taking input and one time it is printing right so if you remove the cndl that will work fine but the thing is again run this and I'm I'm entering my name Jenny katri in that case it is taking only Jenny this thing also we have discussed in previous video no kri because this extraction operator this extraction operator will stop taking input as soon as it will find any white space or new line so after JY I have given a space so if it sees any space then it will stop taking input so it will take input jny only and it will print jny only so what if I want to take a complete line as an input with space Also my complete full name jti katri lamba Jan's lectures hi welcome this kind of thing so for that we have a function that is g line function that we can use so uh that function how we can use with C in so rather than C in here what is the function get line the first argument of this is C in right and the next is this variable where you want to obviously the store the string the string variable string object s Str one and now let's print Str str1 so let's run this and we will take complete line as an input like this line L hi welcome right as soon as you will print any you know you will enter new line or whenever you will print enter it means we are pressing we're indicating that indicating for a new line right so as soon as it get line will find the new line then it will it is going to stop taking input right so this is how we can use this getline function and this getline function is uh defined in this string header file so let's comment out this line this also this time also it will work fine see right why so because automatically if you include this header iio stream then these string is automatically has been included in your program right but better to explicitly better to include the explicitly because maybe sometimes you will get any undesired result if you are using the member function or something with string so better to include this string header right okay now how to access element or you can say particular character from a string how to access a string using at as well as using subscript you can access let me show you this thing so if suppose in St str1 I have this and you want want to access any particular character so St str1 using subscript you can access like zero if you want to access then it will give you J C right any index you can access like if you want to access at 7 at 7 I think we have k or a h so it will give you H or with ADD function also we can access at and there I want to same seven so both will give H and H let's put here endl but main difference between this is what H and H this will not give any bound checking if I access a 17 let's comment out this let's run this I ideally it should through an error or exception but it is not printing anything and no error and ER and and all so this kind of thing is not checking any bound bound checking is not there but if you're using add then here it will do bound checking if I comment out this thing and if I access 17 using this add function then see it will give terminate called after throwing an instance of out of range exception right so this is you can see advantage of using at bound checking is there with this using four uh range Bas for Loop also we can print like if you want to use that range based for Loop then obviously we have what car data type because it's nothing but a character array right car C and from Str str1 and then see out just C and it will print the entire string Jen kri and in new line if you want want to print any every single character then then you can just put endl and after every printing of every character there would be a next will be printed in new line right but what if if I take here int what you think what it will print just pause the video and write down comment section what it should print here dat type is int C and Str str1 let's run this and I'll show you what it will print see it is printing SK Sky value of the characters because is we are taking the C as int so it will convert J in SK value and that would be printed right so now uh let's discuss those concatenation and this thing with the these strings so if you want to concatenate two string like Jenny katri this is first name this is last name and I want to con concatenate these two strings so simple we can do what see out Str str1 + Str str2 as simple as that see it will give you jatri see now no we don't you don't have to use St strc those functions and all so easily I can write down this thing we can use these binary operator with string so this is beauty of C++ strings right we cannot do this thing with C style string if I write here rather than this suppose if you want to do Jenny and let's take here K it will give C plus this expression must have integral or unscoped in means this plus is now adding as though for addition so it is expecting here integer or enum we cannot concatenate we cannot add these two string with plus like we cannot concatenate this C style string with plus right so this will give you error but this is this is fine see out if I can C like Str str1 plus I want a space in between J katri so that is fine Str str2 so this is obviously a string leral and if I want to add here plus one more thing lambar see it is printing Jenny space k there's no no space between kri and Lama and Lama because you haven't given any space here right so you can concatenate a C++ object right or C++ string with C style string literal this is fine but you cannot concatenate two c style string Lal with plus okay okay so this is your assign one assignment is for you in Str str1 just take this thing 10 and in Str Str 2 just take any integer five and you have to do S str1 Plus Str str2 what it should give let me know in comment section and if you want to find out length of a string then we have here we have a length function that we can use so if you want to find out length C out length of suppose St str1 is just use this uh length function that's it and the length is five so it should print five see it is printing five length of Str str1 is five or rather than length uh sometimes we can use size as well this will also work fine now if you want to compare two string then you can use less than or greater than this thing like see out s str1 equal to equal to St R2 I just want to print this thing so obviously you have to put this in bracket and let's see what it will print s str1 Str str2 equal to equal to no so what it should print okay let's just comment out this and this see Zero Zero means like false these are not equal and if I write here gen s str1 S2 both are gen so let's run this and see what it will print one true right false or true it is going to give you and same less than equal to those also we can use like Str str1 less than Str str2 so what does this mean Str str1 Str str2 sorry less than or greater than zero one this is true and this is false because these are equal so if I take here K let's comment out this line so you have to use this comparison operator less than greater than less than equal to greater than equal to this thing one it's true yes Str str1 is less than Str str2 these are comparing based on these SK values of the character SK value of J SK value of K SK value of J is obviously less than SK value of K the first character is first is to be compared right and yeah it will give you true yes right so use these less than greater than and all these operators this is your assignment right but same we can compare only two these string object C++ style string you cannot compare those C style string L like here here you writing those double quotes Jenny and here you writing double quotes kri that will give you error but you can comp Str str1 one this C++ St string and one liter like s str1 is Jenny and this is capital J in St one we have small Jenny and here we have capital J and and and Y so what do you think what it will print let's run this okay it is printing zero false because small J SK value is more than capital J SK value that is why it is zero means false it is not less than so try out these different different things so there are many more member function also that we can use with string object those function we'll see some of those function we'll see next video right so I hope basics of C++ strings are clear to you guys right now in the next video we'll see some more uh member functions we can use with strings or string objects right so now I'll see you in the next video byebye take care