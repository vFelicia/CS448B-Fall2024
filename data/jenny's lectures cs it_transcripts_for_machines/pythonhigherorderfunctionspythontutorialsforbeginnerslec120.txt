hey everyone I hope you all are safe and doing good so in the series of learning Python programming language we were discussing Turtle graphics and python we have discussed I guess Turtle Graphics almost many methods I have shown you there from the python documentation Turtle documentation and Basics we have discussed some coding exercises we have done now it's up to you how you explore that thing right have you work on Project based on Turtle right okay now we'll be discussing some more advanced Concept in Python that is higher order function I hope now you know what is a function in Python how to define a function how a function is going to accept arguments how a function is going to return a value and all this thing we have discussed already so now this is some Advanced Concept in functions right that is higher order function this thing we'll see in Python and this is also very helpful when we were discussing later decorators or event listeners then we will be using higher order functions right so for let's first understand this thing this is the basic one for all further Advanced concept right so a higher order function is what it is a function that either accept a function as an argument or returns a function two things are there right I'm going to show you these two things with example okay let's see first example program then after this completing of this video completion of this video you will get the definition easily of that higher order function right so let's see so let's create a uh new file first higher order function do py simple function I hope you know let's see one simple example let's uh I'm taking one example add and X and Y this is simple function right and we have discussed this this thing before so if you want to execute this ad then you have to call this ad now you have to pass to these um arguments right so it is returning x + One X+ y so you have to store that value in some variable like I'm storing this in result or directly you can print this thing and now I'm printing this result right let's run this and I'll show you c three so add is a simple function which is which is accepting two argument simple variables are there X and Y it is returning some value that is x + y right and how to execute this function you have to call this function like this right if I simply print this ad okay so rather than see rather than this result if I simply print this add the name of the function just the name of the function no calling so let's run this see it is showing function add at this some address right so it is not giving any error actually so it is at some particular address right so in Python functions are Tre as objects right so we can assign this function to a particular variable as well see let me show you this thing also if I write something like this addition equal to add if I write something like this right and after that what I'm going to do I'm just calling addition passing 2 comma 1 let's just comment out this thing okay let's run this what you will get pause the video and write down your answer in comment section so yeah we are getting three because these are considered as objects so we can can assign these to any other variable as well so addition is simple another function name I'm just assigning the value without calling without these brackets and then I'm calling addition so by addition we are calling this and if you print if you print both this add and if you print both addition like this we not calling add and addition we are simply printing the name of the function see function add at this location function add at this location so as you have seen the location was same for both add and addition right so like this functions are treated as an object and we can assign that function to another variable also right so let's see now that part of the definition it high function except a function as an argument see here we are passing X and Y simple like variables or any values so rather other than this we can pass a function also as an argument right okay let me show you that example simple example we will take so let's take a function we'll take a function like GRE and simply print uh it is going to Simply print high let's take another function maybe like any other function display and within this function as an argument I'm passing sorry as a here now we are just defining it so it will be a parameter so it is taking a function right as a parameter it is accepting as a function so other defined function this variable name I'm going to take for now so let's this is simple I'm going to print display function sorry it is right now see let's call display function and what you have to pass some other defined function yeah we have in our programmer defined function greet so let's pass greet in this greet simply greet know these round brackets simply the name of the function because whenever you pass just the it is accepting any function so just pass the name of the function if you write down these bracket means we are calling that function right so just pass the name just greet okay let's run this what you will get this is display function this is display function but I want to execute this greet also because we are just passing greet here right so you have to call that function to execute that function so just write down here other function and with these round brackets so now this line means we are executing this function whatever you will pass let's run this time see this is display function and high because this line will be printed then the name is greet so greet and now the round bracket means this line is what we are executing the function we are calling the function so now control will go to here where the definition of this G here and it is printing high so it will print high right so see this fun function is accepting other function as an argument right so this is higher order function here display is higher order function G is not higher higher order function display is higher order function right if I uh like let's take another example if I Define two function and rather than see these the name of the function only we can pass simple other argument as well like any uh integer value a b sorry 1 2 3 4 like this or any string value also like name of any other person like this we can pass any other simple argument as well rather than functions right combination of these to also we can get so see I want if I say say louder suppose I'm passing my name j and I say say louder so that would be printed in capital letter if I say like say softer means in a low voice so it will print Jenny in small letter so this thing I want to uh execute this thing I want to do so let's make two function uh greet louder and here we'll be passing any name so whatever you will pass it will print high and the name in capital letter so using F string we are printing from name it will fetch but it will convert it into Upper Keys like this something like this right and same other function I'm going to Define but that would be sorry GRE louder it's like maybe what exact term we use I'm using just software GD software and name and high and that would be in printed in lower case so I'll be printing the converting the name into lower case right and now uh sorry rather than this suppose take like maybe hello name of function I'm taking hello so some other defined function I'll pass and as well as I'll pass here any name also so I'm just taking name any other thing any other um you can say variable name also you can take parameter name it's not like that you have to take name only okay okay now this is uh the display function and it will call the other defined function and it will pass whatever the parameter you will pass so the variable name is name so that is why this and this this and this name should be same so if I'm passing here name one it should be name one so let's pass name one now we are calling no display function we have now hello we are calling hello in hello what you need to pass other defined function so here we are passing the name of the other defined function greet louder greet louder Just the name no without these brackets comma and you have to pass any name also so I'm passing like Jen right now let's run this what you will get see it will print high and name of the Gen is a capital letter right because only name I have converted into upper and again I'm calling the second function I'm going to call now read sofware and same suppose I'm passing this Jenny now in capital letter so see first time in caps because that was louder second time we are calling software so hen is now in small letter so like this we are passing see the this uh in this function as an as an argument we are passing see the name of other defined function hello is a function and GD software is also a function so as a argument we are passing another function as well as some other argument also you can pass right so this hello is here higher order function right this thing will be very useful when we you know creating Event Event listeners I'll show you that thing also later now this is one part second part is it also returns it can also returns a function right so a return of function let's see this thing Al I show you in the previous case I told you I have shown you in add fun add was a function and that was returning X Plus y mean simple the value right addition but what if return and after that we are returning a proper function right let's see that thing also okay let's take one more example here and um in hello let's it's accepting name and we're just printing here this thing and within hello we have another function suppose we have a function greet within this hello to print har Krishna and we have one more function suppose that is welcome and the there we'll just print like maybe J sham okay now we are putting one condition if the name equal to equal to suppose Jenny then then return greet just the name of the function without these brackets otherwise else return welcome right so see this hello function is returning function it is returning a function either this or this so This hello is here also a higher order function so let's call this hello and what we will suppose we are going to pass Jan okay let's see what is happening hello has been executed nothing would be printed because the expected output was it should call greet because it is returning greet so it should print har Krishna as well the hello has been executed but no har Krishna will be printed why so because see we are not calling this greet or this welcome function anywhere in the program we are just returning the function as an object return greet simple the name to execute this greet actually you have to call this GRE proper with round bracket right so what should we do now see now this hello Jenny so it will pass here Jenny this line will be printed now this Dev this Dev okay now it will go to this line if name is equal to equal to gen yes this is satisfied so control will enter into this if block and return greet return greet greet is a function proper function right and it is returning this thing so for if this is returning something so obviously you have to accept that in other variable name right so I'm taking like new function right so new function it is returning greet so now to execute this greet you have to call this new function you have to call this new function right let's run this see now hello has been executed and Har Krishna will print right and if the name is not Jenny suppose name is Jenny uh katri so definitely this time it will print J Shri Ram okay because the condition was not satisfied so it will return welcome so whatever it will return we are just storing this into new function that at first of this video I have discussed this thing addition is equal to add and to call that add you have to call addition with bracket so now you have to call this new function with bracket right so right now this simply like an object Okay so something like this you have to do if you simply print new function see Hello has been executed function hello do local welcome because a new function now it is returning because of this condition welcome so local is welcome at this just giving you the address where is this welcome but actually it is not executing the welcome so to execute welcome what you have to do just this new function and you know these brackets you have to call this right now it's been it has been executed so this hello is a higher order function in this case so this is the case first one was when the function is accepting other function as an argument and here it is returning a function right so this is H function I hope you got with this example now a high order function is either is a function which either accept a function as an argument or returns a function okay now one assignment for you is you have to do this thing you know in calculator simple calculator we have add subtract multiplication and division these are four function returning addition subtraction multiplication and division but you have to now Define this type of calculate function calculator function and then calculator function you have to pass the name of these functions with two argument and whatever name you will pass that function should be executed that function should be called from these functions and that should be executed means this is an example of passing a function as an argument right so this is your assignment you have to do this thing you can write down the logic in comment section right now that's it for this video and the next video probably we will see event listeners or we will see decorators right either event listeners or decorators so now I'll see you in the next video till then byebye take care