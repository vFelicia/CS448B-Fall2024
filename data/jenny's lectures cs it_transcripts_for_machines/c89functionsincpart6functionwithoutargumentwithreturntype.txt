so in the series of learning programming in c we are discussing functions in c in the previous video we have discussed a function with no argument and no return type with proper program with example in this video we will talk about the next category of function that is a function having no argument with return time right that will discuss here with proper program and i will show you practical also right and also some you know important points about that thing also we will discuss right whenever we see practical then i'll show you all the important point about that program right but before that i just want to tell you one thing if you are looking for a great career in software development then then you must think about the aspects like what's trending in the industry the questions being asked in the interviews how to improve your course ranking so here an academy brings to your platform where you can get access to weekly shows which you can watch like and the host of these shows are seven star coders on code ship and working in some of the top companies like linkedin google amazon and having years of experience so they'll be covering the content which will be really helpful for your career like in the live episodes you can ask the take a charge the questions being asked in the interview top questions being asked in the interviews and the industry leaders about the recruitment process in the top startups and mncs what is the eligibility criteria and how to apply for them and you can also get your resume reviewed by the experts not only this you can also participate in mock interviews and you can also learn courses on programming languages cloud computing blockchain and crypto tech aspects of digital marketing data analytics and if you want to get some idea about the questions being asked in the top product company interviews then there is a show for you in this show the host will walk through the top interval questions usually asked for the companies like like apple netflix amazon google and how to solve them and respond in a way that will help you to crack the job interviews here you will also get a chance to come live with the host and you get your security result on the spot so if you are a college student and you are looking for a job in the top product company then this show is definitely for you so you can find out the detail of the show and the badge in the link that i'll put in this in the description box of this video and don't forget to use my code jkl10 to get 10 extra discount on your subscription so now let's get back to the topic here we are going to discuss the function which is having what no argument and with return type what are the function which fall in this category suppose i am taking the general syntax is what suppose i am taking a name of the function fun no argument no argument so i don't want to pass anything here so better to write down here what void right with the return type here it should be some return type may be int care float or maybe no pointer right right but here we are not going to you know discuss the programs at that level that we will discuss one by one here we will just see the program of you know having returning the data type return type would be either into float or cap that will discuss here maybe the function would return address so the data should be pointer right so that also will discuss one by one all the complicated problems on this thing so this is what general declaration of the function which is having return type but no argument right so let's take one example same example i am taking sum right so how to declare return type sum and no argument that's it and here in main certain type of main i am taking word you can also take end so at the last of this main you have to write down simply return statement like return in main i am calling this function sum see what difference is there in calling of the function that also will see some and no argument i want to pose pass so this is what simple calling of the function but here you have to do something with this calling also why see i am not doing something within this main i am defining this function here then we will discuss so return type is in name is sum nothing i want to pass so here write down some logic see no argument it is passing so here we are going to declare our own variables like like in a b and i am taking sum and suppose from the user i want to ask now which category we are discussing with return type with return means i want this function should return something and something means what it is function of what sum i want to do sum of two numbers so what it should return sum of those numbers so rather than printing the sum here i want that this function should return the sum where it will return where you are calling this function so means it is returning so here we are not using that sum using means here we are not printing the sum simply write down what return and what you want to return sum so simply write down return sum semicolon that's it so now it is returning some here some is off i'm taking int type so if it is returning sum so definitely here also we have some variable to store that some or to you know accept that sum from this function right so here also whatever it is returning you have to store that sum in some variable suppose i am taking a variable s so first of all you have to declare this variable s right because i am using that variable so that if you don't declare that will give error so now the sum is whatever it will return the sum that has been stored in this s and now here you can print sum is equal to percentage d and what you will print here s see if you will print here sum because see sum is equal to a plus m so maybe you think that we can directly print here some it will give error why because the sum is what a variable which is local to this function only here i am declaring some within this function as soon as control will go out of this out of this scope the sum would be vanished destroyed like we cannot use a b or sum these variables out of this function so in main that is why we are taking another variable which is going to store the sum s so here you have to print s only so i think here also you can see the difference of of calling of the function in the previous case we are just calling sum and that's it we are not going to store this you know we are we haven't take any variable s is equal to some this kind of thing why because the sum was not returning anything if some will not return anything so simply here you can print some i don't want that this function will return something so here only you can print some and that's it but here this is returning something right so once control first of all control will go here in sum one variable has been assigned like in for main some memory has been assigned so here we have s here this has some garbage value so now s is equal to sum this means this is function call now control will go here right now match the declaration and definition return type same sum nothing is going to pass so we are not going to write down any parameter to receive something here right so some for some also some memory has been allocated whenever you call this function so here we have a b and sum a b and sum in sum we have 0 whatever you are suppose i am entering value 5 and 7 so sum is equal to a plus b in sum now we have 12 and now the control will reach here return sum so this 12 would be return where here this would return to l so whatever it will return i have a variable to store that value so in sum now we have 12 so simply print okay right but see this return will return the sum value as well as it is going to return the control here so after this return if you write something here suppose i am writing printf and inside some function that also i want to print so it is not going to execute this line this code is what unreachable code why because as soon as the control will see the return statement it will return some the value and the control the control will go here means now the control is here so the program is not able to execute this line so you will not get this output means this line would not be printed on your output screen you will only get the output to n so whatever you will write down after this return statement within this block before this curly brace closing of this curly braces that would be unreachable code right and here return some you can also write down this some in braces maybe in some compiler if you don't write braces it will give error right i can't i can't say so that is a good practice if you write down this in curly braces because see or or if you don't want to write down this line you want to you know get rid of this line so simply you don't have to write down this line and simply you can say return a plus b this will also return a plus b that is 2 l so we don't have now suppose sum we have only a plus b so in here we don't have sum so a plus b directly it will return 5 plus 7 is 12 so 12 it will return here once control will reach here this will be vanished right or if you write down like a return if you want to return sum like sum is equal to a plus b comma a you want that these both should return i mean return should return sum also and a also so now here comma is operator and the working of comma is what execute the first first operand discard the value and return the value of the next operand so here it will return value of a it will not return sum here value of a is over 5 so it will return 5 so 5 would be printed here this i'll show you practical practically also right here i am returning only sum so i hope you got the difference i mean this category of the function with no argument with return type and if you wrote not do not write down here what means if you will pass here some argument like here i am passing 5 and 4 then it will not give error but logically means we want obviously this this should give error because i don't want to pass any argument no argument but here you are passing argument so it should be varied but it will not give error so better to write down here no arguments so better to write down here what just to you know guarantee that if you write down now if you write down if you pass any argument now it will give error right so let me show you practical of this program so let me create a file we are discussing what no argument and with return time right here i am taking with return type i am taking int sum no arguments means i am writing here what this is just just a declaration and here in the main i want to call that function that is sum so now here whatever it will return that i want to store in a variable s so first before using this s obviously we have to declare first like int s and now we are printing we have to print what sum equal to this s also we have to print so now what define end sum no argument simply here only i am taking in t suppose here only i am taking value 5 comma b is equal to 7 right and what simply you can write down here or rather than writing this ret you are in return a plus b that's it directly it will return 12 you can also ask from the user like print f enter a b a value of a and b and scan f a and b you can do that thing also so here c sum is equal to 12 it is returning a plus b that is 12 so here now 12 would be stored in s and s i am printing right so here suppose here i am writing sum is equal to a plus b now rather than a plus b you can return sum but you cannot use sum here because you are not declaring that variable so first of all you have to declare sum is equal to suppose 0 right now let's see what happens it will also give you sum is equal to 12. so now if you write after return statement if you print if you write down something like printf i want to print hi so this printf would not get executed why because it is after return see simply it is printing sum is equal to 12 you are not getting any output like high because this code is unreachable after return statement if you write anything that would be unreachable here so we cannot write down here and here same thing if you want to do like comma a comma b so in this case what value it will return b whatever the value of v that is 7 so sum is equal to 7 you will get because the functionality of comma is what this first comma is what execute the first evaluate the first operand discard the value and return the next it will return a but here we have another comma so for this comma operator a is what left open so execute the left expression or the operand discard the value and return the right one right is b so whatever the value in b that it will return right and if b after b also if you do comma sum now it will return sum that is 12 so now you will get sum is equal to 12 because now for this comma b is left and sum is right so it will return the right so so comma operator i have discussed in detail so you can watch out the previous videos right of c programming the list and the playlist link i'll put in the description box of this video so i guess if now here if you don't write down hair void so here if you pass any argument like 4 comma 6 it will not give any error and still it will give some is equal to 12 obviously because 4 and 6 you are passing but here you do not have any parameter to accept those argument right so better to write down here what void in the declaration to get rid of the situation now now if you will run this it will give error so now here see it is giving error too many argument in function call here only you can see without running so we cannot write down here or you can you can also return a character like suppose i am writing here care or suppose i am writing here float that is also fine you can return float type i want to return the sum should be flow type so here also it should be float right and in main also we have a variable of float type because it is going to return float value sum is equal to this and sum is equal to now percentage f s and return sum so here also you can take float uh variables like float five point seven five point you know one or seven point one like this if you don't take float you don't you will take end then also it will print float because here we are writing percentage f see what it will print twelve point zero zero zero zero like six zeros it will print okay let me run this now see twelve point zero zero zero float value or if you write down here care ah right like i want to return it should return some character value so in declaration also it should be data type should be cat otherwise it is going to give some error right and here before this return return return i want to return now this a character is a so now this return statement is first so now return sum this is what unreachable code so it is not going to execute that that thing so it will return now a so here also function name is sum i am not changing the function name you can change the function name also right it just to get you understand the functioning of the or the data type like in float or care obviously sum is a function name it is not going to return care because you are going to do some of two numbers but here i am not changing the function name so this some function is returning character value so here also s should be of care time because whatever it will return we are going to store that thing in s now s you are printing so that should be percentage c you have to use percentage c and s so now what output you will get think see you will get a c sum is equal to a because here we are returning return a the character right or here also that program i have already discussed like printf enter a character scanf you can ask from the user whatever character the user will you know enter that it will return return that character right that we have discussed in one of the previous videos you can watch out that video also right and so one example one one question for you is i am going to return here comma 0 and here comma 1 i'm writing this return statement this is the program for you right so now you have to tell me what output you will get here fine in the next video we will see the next category of function that is with argument without return time so now it's in the next video till then bye