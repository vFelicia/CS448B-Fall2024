hey everyone I hope you all are safe and doing good so in the series of learning Python programming language in the previous video we have seen types of arguments in Python right positional keyword default required arbitrary or variable and arguments right now two specific types of things are also there in Python node you can see specific kind of argument like arcs and quarks these arguments here is one star here we have two stars so what are these arguments and why we use and when we use these type of arguments right so we'll see this thing in this video with the help of program I'll show you both for arcs and works we'll see programs right practically we will see okay now first is us so this is star arcs this is short form for arbitrary positional arguments see in the last video if you have watched that video I have told you in arbitrary arguments like what is the example you have taken Edition add function right maybe in advance I don't know how many number of arguments I want to pass at the runtime right or every time I call the function the number of arguments changes like it if I call this add function so I want to add only two numbers second type second time I want to add like five seven ten nine four numbers third time if I want to call then I want to add like five seven ten nine five then eleven minus one these numbers so one solution is what maybe you can Define three add functions one will accept only two argument one will accept four argument one will accept these type of arguments but why we are defining three add functions because function same ad only number of arguments are changing for this thing in Python we have a solution we can pass arbitrary arguments also right and for that we use these are what positional arguments these are not keyword argument right I have told you the difference positional versus keyword argument in previous video so we are passing arbitrary positional argument right so we can define a function simply like diff add and here one star and arms so this is what short form of arbitrary positional argument or rather than R because this is simple convention right you can use any name like numbers like Star numbers that is also fine star data star info this kind of thing right or this is convention only this is for arbitrary position for arbitrary keyword arguments right so first time it will accept only two arguments then four argument then this much type of type of either means right only one you have to specify so this is arbitrary positional argument as I'll show you this thing with the help of example and how this thing actually works basic difference I'm just going to tell you now now this is what one star will accept only arbitrary known keyworded arguments or arbitrary positional argument but I want to pass keyworded argument keyword argument like information of a person like info person we have a function and I want to pass like name like this name is equal to something like Ram then age equal to 31 then some phone number equal to 99 something like this so these are keyworded arguments but this will not accept keyworded argument right arbitrary keyword argument because maybe some person want to like I don't want to reveal my maybe phone number so I will just pass name Jenny and age that's it maybe some other person don't want to reveal age and phone number and she want to pass only name and maybe department so every time you are passing different number of arguments so to accept this thing we need arbitrary keyworded argument as the name suggests KW keyword arbitrary key worded arguments so for this we will Define a function something like this like depth and info person and a double star and works like this and here we can write down whatever you want to do with this information right or rather than quas this is simple convention in Python right we can use arcs and quarks or rather than this we can change the name rather than this I can write down info or I can write down data anyway or simple a variable name like a but better to take a meaningful name right so this thing also I'll show you with the help of example like program I hope the main difference the basic difference is clear to you what is this arcs and what is quarks so okay let's see with the help of program okay so let's create a new file here and just to give the name arbitrary positional underscore arbitrary keyword arguments Dot p y right first arbitrary positional argument so same we will take the uh you know that add function example of this like I want to pass two number at this time again I want to add like six four two three numbers it should be comma right six like five or six again maybe next time I want to add one two three four five six fifty six and eight four five six numbers right so every time I'm calling the function the number of arguments are changing for this thing we use arbitrary arguments so arbitrary positional arguments because these are positional arguments so just Define the function add and one star and arbitrary positional argument right or rather than ask if you don't want to use this convention as you can simply write down any like data numbers or anything like numbers I I'm adding I'm writing right and what you want to do like addition of these numbers so now the point is okay now see what happens suppose this I am passing four five six arguments are there here right so these six arguments should be passed here now this operator this star will take all the arbitrary positional arguments and pack them them into a Tuple this thing is you need to note down this would be packed into a tuple not a list right so now it will become Tuple here this this one so this is as a apple would be passed right so if you want to access each and each element of the Tuple what yeah we can use using index we can access but if you want to add we have four Loop 4 like any number or for I in what is the name of this Tuple numbers and we will just add this upon I'm taking a variable C okay first let's just initialize c c is equal to 0 in C I am you know putting the sum so C is equal to C plus I or C plus equal to I short form also you can write something like this C plus equal to I this is also fine right and outside of this for loop after that you can simply print sum like something like this using F string the sum is in C variable we have sum right so let's call this and see what output you will get here so first we will get sum is three second time 13 sorry 17 and next time it's 74. right for these fine so these are now why it is passed as a tuple why this this star this operator will pack these arguments as a double not a list because tuples are immutable you cannot change the value of the Tuple after assigning the value means if you have passed these arguments then here after passing we cannot change the value suppose suppose I want to print like print numbers the name of couple is numbers and at zeroth index that also I want to print so let's run this and see one then for the next we have at zeroth index we have six then again for third function call we have one so you can access this thing but you cannot change like if you want to change after printing this how to change simple whatever a zeroth index I want to rather than one it should be 4. right so suppose I just want to call this thing with the only one add function right and rather than 1 at 0 index I want to change it to four so let's run this you will get an error see the Tuple object does not support item assignment so that is why it is passed as a tuple because Tuple sorry mutable we cannot change the value because obviously whatever we are passing here we want the sum for those numbers only it's not like that someone will change here in the definition and that sum we will get so that would be incorrect right that is why it is passed as a double right so I hope you are you're getting with what are the hours arbitrary positional argument now I want to pass keyword argument so this will not accept keyword arguments right suppose suppose here I will pass something like this okay normal argument let's pass so I'm passing Jenny right and here I am taking a one more variable name name so what I am expecting one and two these would be numbers and name would be Jenny right so let's just print here rather than number this let's just print name so it should print name Jenny I think it will work fine but let's run this C this add missing one required keyword only argument name in line number nine in line number nine so this it will accept what C the functioning 1 2 Jenny all the three would be considered as a tuple and would be there in numbers now that is why it is showing one missing argument because for name we are not passing anything according to this let's just print rather than name let's just print here I'll show you numbers the Tuple entire Tuple okay let's run this okay we have like here an error so let's remove this name and then also we'll get an error because we are doing sum and we cannot add number integer with string see you will get an error okay item assignment let's just remove this line as well okay now go to edit you will get see unsupported operator operand type plus equal to 4 intent string string so okay let's just comment out these two lines also and I just want to show you what this numbers is getting see in numbers in this Tuple we have 1 2 and Jenny all the three thing all the three argument one two Jenny right but I want this Jenny should be as a separate then it should be there in name so for that you can just pass what keyworded argument name is equal to engine now let's run this what error you will get nothing we are getting error one two numbers are only now this time one two now Jenny is for name okay let's just print here name as well so let's run this see one two and gen like this fine okay let's just remove these also and now okay we are running so if you run this you will get one two three numbers in name we have Jenny and sum is 3 right something like this so while passing the mix of normal arguments and like arbitrary positional argument you need to take care this thing this is keyword argument then it's fine you can pass after this but if it's a normal argument suppose I am passing a and here I want like in one two should be in numbers and a should be 5. will you get an error yes you will get an error missing one required keyword only argument a because one to five would be numbers only so better to pass a normal argument first like in a first then arbitrary positional argument so in a Now by default 2 would be a one would be assigned and after that this 2 5 would be assigned to numbers let's run this okay name is not uh defined let's just remove this because we don't have any name here now let's run this in numbers now we have only 2 and 5. because 1 because 1 been assigned to this normal argument a and sum is 7 only so first better to write down first the normal argument then arbitrary positional arguments right what is the convention normal argument arbitrary position argument and then arbitrary keyword argument now let's just take one more example rather than that's what we will do okay now we just take an example of arbitrary keyword arguments okay let's we are passing information of a person like info person and here I am passing like name is equal to something like this like Ram and then age is suppose I am passing like maybe 30 and suppose Department equal to CSC 3 for this info for this person right and next time next time info person name is equal to suppose I am pass it's sham and we are not passing this time age because sham is not willing to reveal his age only Department department is CSE right so this time three argument this time two argument so for this and these are keyword arguments so for this you have to define a function like depth suppose the name should be what same info person right and here we it's not it it is not going to work like if I pass one star with one star only you have to pass two star sorry two star and keyword arguments rather than quarks we can use any other variable data in for anything but double star is mandatory because then only it will accept all the arbitrary keyword argument right and for this what how to access now I just want to print like Ram name Ram then age then Department then name sham then Department CSC so how to access this thing now at this point of time this this these arguments will be passed in the form of dictionary although having discussed dictionary but dictionary means it is having a key and value pair right you have a dictionary if you are writing a phone number of any person the person name Jenny then maybe Colin or Dash or anything or equal to and then for number of Journey then like phone number of any other Rahul then phone number of Rahul so dictionary is having key and value pair key is What Jenny and value of value is what the phone number right so two things we want to access now here key is What name and RAM is value key is What age and 30 is what value so both the key and value you want to access key and value pair so for how to access this thing how to access the dictionary because it is passing in the form of dictionary and in this case previous case in ark's case it was passing in the form of Tuple all the arguments so for it's not like that we simply write one argument like in and quals maybe you are thinking like this but the syntax is little bit different of dictionary in detail we will discuss in the next video because 2 key and value both you want to access so rather than one item you have to take sorry two variable name either I or J or a b or X Y anything or for better understanding we take like four key and value two thing he and Value First key then value in quotes you have to use a function we have a function here items so note items using this function we can access right and now I will simply print what key and value or if you write down here I and J so simply write down here I and J in print also simply write down I and J okay hello let's run this see first name Ram is 30 Department CSE name sham Department CSC so this is how you can pass arbitrary keyword argument and you can access those arguments right so this is the difference between RX and quarks fine but if you want to pass like some arbitrary positional argument also so here I can write down like uh start suppose I am writing a star ax okay that a r g s fine but see see the uh that error star parameter after double star parameter so this is not possible always this star parameter or arbitrary positional argument must be before arbitrary keyword argument otherwise it will give error like here I want to pass positional argument like three four that's it and here also I want to pass like seven eight nine something like this okay let's run this and I'll show you the error see this is invalid syntax this is invalid syntax and if I write something like this rather than after this first I am passing as and then double start then quarks okay so here also you have to pass first ah not after this so first we'll pass like maybe one comma two comma and here I am passing only one comma 2 comma three see you are not getting any error right so if you want to access these arcs then also you can print like if you want to print print as simply I will print as so let's run this first in this we are printing first that key value pair so Ram 30 and CSE and then one and two one and two are arbitrary positional then Shaman department and then one two three one two three because after that we are printing asks so what is the convention of passing these arguments first any normal argument then arbitrary positional argument like us then arbitrary keyword argument works right otherwise you will get some kind of error or maybe different type of output right I hope now the friends what is the X and quotes that's clear to you guys okay now one assignment for you is you have to write down a function that will take arbitrary number of arguments variable number of arguments and multiply those arguments together so you have to run that thing for these two input multiply and multiply the function name two three minus 6 8 and second for this thing right multiply so this is what your assignment you can just write down that logic only in the comment section okay so I hope now you are clear with this arcs and quarks arguments in Python now and actually we'll see one coding exercise so now I'll see in the next video till then bye take care