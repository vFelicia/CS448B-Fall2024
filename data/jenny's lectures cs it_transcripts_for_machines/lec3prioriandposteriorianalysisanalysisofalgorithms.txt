in this lecture i am going to talk about analysis of algorithm i am going to divide this topic into multiple videos to describe this topic properly with multiple examples right so in this analysis of algorithm we are going to discuss why we analyze algorithms what are the factors including here means factors required to analyze an algorithm right and types of analysis right and how to analyze an algorithm with proper examples right and in this topic we will also discuss asymptotic notations so this topic is very helpful for the placement point of view as well as for gate and ugc net point of view now before proceeding i want to update csir ugc net aspirin that for you guys uh there is a free test series going on on an academy named an academy championship for csir ugc net they conduct free live mock test on every sunday right and if you give that test then all india ranking of that test would be given but it's okay if you are not able to give that live test then you can write the test even after the test is the live test is over after that also you can take the test right and the test contains uh three sections with general aptitude as well for all the subjects fine plus one more point is what these tests have been reviewed by the most experienced educators right and after each mock test session that paper analysis is also being done by the top educators and what is the benefit of this paper analysis in this case you will easily get to know how to solve the problems as well as you will get to know your area of improvement so you can enroll for this test series freely and this test series would be uh till 15th of november i'll give you the link and all the details in the description box of this video you can check out there now back to the topic here we will discuss type of analysis two types of analysis priority analysis and posterity analysis we are going to see the difference between these two now see as the name suggests priory means you can say pre and this is post postwary means post it's before and after before something and after something right so this is analysis of an algorithm right so this type of analysis priority analysis is done prior or you can say before execution of that algorithm right and this is done after execution of that algorithm on a specific system now if you have a doubt that how to run an algorithm on a machine we generally we run programs yeah right means here analysis after running it on a system means what the selected algorithm will be implemented using any programming language and that after that we are going to run that uh implementation part of that program onto a specific system right and then we analyze that thing this is called posterior analysis and directly if we analyze the algorithm before running it then that is called prior analysis see i hope you know why do we analysis of algorithm because to solve a simple problem there can be multiple algorithms like to find out shortest path there are multiple algorithms now we want to find out the best algorithm right so obviously we have to analyze all those algorithms and we choose which is which is the best one for us right that is why we analyze the algorithm and how we analyze algorithm the factors are what based on many factors are there but most popular factors in computer science are what generally we use time and space time and space you can say memory how much memory that algorithm takes and how much time now suppose if we run a program on pentium 4 processor and one program on i3 and one on i7 then definitely the output would be or you can say the time taken by those processors by the same program would be different different on each machine like maybe for pentium 4 it takes 10 milliseconds for i3 it is taking 7 millisecond and for i7 it is taking only two milliseconds right so it depends this analysis depends on what the configuration of the system means it varies from system to system and it is also dependent on programming language like ah if you write a program in c then that would if you run that that would take ah some some time for execution and c plus plus if you write the same program and exude then that would take different time because as you know the c plus plus is a faster language right so it is dependent on many factors the analysis so it changes from system to system right so we can say it is not that much effective right the value depends it varies every time but this is hardware independent as well as programming language and processor independent right so if you write an algorithm if you do priority analysis then the result would be same whether it's on pentium 4 you have written on pentium 4 processor i3 i7 or on any system right this is programming language independent why so because obviously to write an algorithm we don't use programming language right simple natural language we use and then just by seeing that those steps we analyze though that algorithm that is called priority analysis so generally in industries this type of analysis is not done right and why so we can see if those people are developing any software for any user right so they cannot analyze that algorithm by running it why so because they are using different configuration uh systems then the user and user is obviously user is using some system that those configuration is different from those industry people they are using right so that's why in industry generally priority analysis is being done right because independent it is independent on the system specifications right here we are uh getting what exact values right like the time taken is what 10 milliseconds seven millisecond or two milliseconds so these are exact values and it will give it is not giving the actual statistics it will give approximate right in terms of time function and space function or you can say in terms of time complexity and space complexity so see here time complexity is not this one many students get confused in this topic in this point like time complexity is what the time taken to run a program no the time taken is what this is what execution time it's not time complexity time complexity is different thing that we'll discuss in next video with proper example right so we can say here we analyze approximate analysis done ah there are time function and space functions right and it is dependent on what the number of times statements in the algorithms are being executed right now how we analyze the algorithm with you know this count number of statements right how many times the number of statements have been executed right that thing will discuss with proper example but in later videos so see here we get the results actual results like 10 milliseconds so like this right but here we generally do this analysis using asymptotic notations and what are these notations that thing also will discuss in later videos this you can say it's a type of theoretical analysis of algorithm and this you can say it is empirical uh analysis of an algorithm right so these are some differences between priori and posterior analysis so that's it for this video in the next video i will discuss first of all what is time complexity and space complexity and then we discuss how to calculate or how to analyze an algorithm how to find out time complexity and space complexity of an algorithm right so now i'm going to see in the next video till then bye take