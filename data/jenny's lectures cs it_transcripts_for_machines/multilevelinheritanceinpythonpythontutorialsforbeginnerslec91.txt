hey everyone I hope you all are safe and doing good so in the series of learning path programming language we are discussing in inheritance in Python so till now we have discussed single and multiple inheritance two types of inheritance third type is multilevel inheritance so this thing will see in this video what is multilevel inheritance how this is different from multiple inheritance with the help of proper example program you know we will see practical as well right so first let's see what is multiple inheritance single inheritance is what simple we have one parent class right and from there we can inherit one class that is child class right so this is single inheritance multiple inheritance is what more than one parent class suppose I am having parent two as well so parent two this child class is deriving or inheriting from more than one parent parent one parent two up to parent n a number of parents can be there so this is multiple inheritance now what is multilevel inheritance in multilevel inheritance we are not having more than one parent see from this parent we are deriving a class child class support child one this child as well you can derive one more child class child two from this also we can drive one more child through like this up to child n this is multilevel inheritance means we can derive or we can inherit from a derived class as well so this type of inheritance is known as multilevel in evidence right see this is derived class so you can say child class or we can say subclass this is parent or base or you can say a superclass right so we can derive or we can inherit from derived class as well so this is Drive class Drive class of this parent class and from this drive class we are driving another class so this kind of inheritance is known as multilevel like this uh like grandparent and then parent and then Center Road this is multilevel candidates right now this parent is this class is parent class of child one but Grand class of child two right this child one is you can say parent class for child two right and maybe grandparent for child three if there is any child three like this so we have this kind of relationship grandparent parent then we like your papa and you like this right now let's say this thing with the help of program and see now this child class is having properties all the properties where you can solve the attributes and methods of this parent class and this child class can access all the attributes and methods of parent class as well as child one class like this right if there is child three in that case the child is three class have access to all the attributes and methods of parent class child one class and child two class right I hope this idea of multilevel inheritance is clear to you guys and now you know the difference between multiple inheritance and multilevel inheritance right let's see this practical so let's create a new file here and the name is multilevel inheritance Dot py okay same example we'll take like we are taking that class human class and just defining a function suppose Heat and now I am taking a class mail and mail is inheriting from Human class right and its own function it is having so I am defining a function like maybe sleep and now we are having one more class that is maybe boy and this boy is inheriting from male as you can see the hierarchy boy is inheriting from male May originating from Human class so if I don't write anything in this boy class and let's create maybe boy underscore one one object for from this boy class now with help of this boy don't a boy object you can access see Sleep Method and eat method eat from Human class and sleep from male class right and in it in it from object class see what is this object uh object is in pythm we are having a root class means this human classes we know it is parent class but no it's not actually true the root class or the parent class of all the classes you create is what object class so we can also write something like this object see as when you write this object see you can see here C a small C in a blue circle and built in so this is builtin class object class this is parent class of whole pairing so this is also fine you can write out this thing when you create a new class and if you don't write object that is fine right so like automatically if you don't write object then we are going to inherit all the inbuilt thing whatever in this object class in this human class right that is why you see I'm not having Clinic functioning boy in male or in human class so that is why using boy dot this we can inherit init function from object class right means we are using init function from object class like this right so object class is root for all the classes a root cluster you can say Base Class for all the builtins all the builtin builtin Smith Matlab all the classes as well as foreign functionalities of object class like C this attribute class date these are from object class right that mro is also from object class mro method so see from object we can use multiple things this is TRS method size of method and all right okay let's suppose I am not writing this object class I am simply writing this so in Python 3.x after three point x if you don't write this object it means automatically it is inheriting from object class no need to write right okay now let's for this heat function and let's run this you have to select first the current current file here and now let's run this see I can eat so using boy we can access this this class and if if supposing boy also I am having one function let's suppose we are having one one more function verb I can walk and in boy also I am having this function verb and this is having its own definition of this work function like I can code so if you want to access this work then first it will search in boy class in boy it will find this work function so it will call work from boy Class C I can code right if you want to like access the previous definition also as well as you want to add something extra so yes you can access this thing as I have told you with the help of super method or with the help of one second way is what from which class you want to access the method human class so you can just write down the name of the classroom and load which method you want to access wow right and then sell on which object obviously we are accessing this method from object of boy class so you need to pass sell here self means it is representing boy one so means you are basically passing here the object name boy one let's run this now see I can walk I can code right like this you can access previous functionality also or other than this what you can write down second base just call this super function super Dot and walk no need to pass the object name or anything noise to pass self and on right if I comment out this thing and if I run this see I can walk I can code right as well as from boy also we can inherit one more class if you want to inherit like this is multilevel capital this is our convention we follow Pascal case and in programmer I'm not passing anything or let's define depth and same function wow and here I can write like maybe I can write programs something like this now with the help of if you want to create this programmer object like maybe Pro 1 is equal to from programmer class I'm creating so with the help of probe one you can access now okay we cannot access anything except this work method from programmer because you haven't inherited anything means from boy I am going to inherit I'm going to derive this programmer class now with the help of program we can exercise sleep and work from programmer right so if you print this work from programmer then it will print I can write programs and this is from right same if you have like attributes I have a init function in human and I'm just passing maybe I like number five right so self don't suppose I'm taking eyes is equal to two for every human obviously and self load heart is equal to whatever you pass numb heart this energy now I'm not defining any attribute in any other class so if with the help of this programmer class or let us suppose just delete this programmer and we'll just take three classes only because now you got the idea how many classes or how many till how many levels you can have the scenariants multiple levels so with the help of boy one now if you want to access like number of files then what do you think let's print this you will get error or you will get number of files is equal to two so you can pause the video and you can write down the answer of this question in comment section let's run the Sensi so you are getting an error in line number 17 in line number 17 here while you are creating this object where you're recording the Constructor then human init missing one required positional argument numb heart now which init function it is falling because obviously init function if you don't have any init function in any of the class then it will call from object class that is fine but now we are having init function in word class you have no in mail class no then ultimately human class you have yes so this initial function we are calling right if you want to check out you can just write down here one init statement like you need to prom human class right and let's see this see okay it is not printing because still we have an error you have to pass one while calling you have to pass number for one parameter right now if you run this see calling in it from Human class and it's two number of eyes now you can access number of files number of fives are two number of eyes attribute of human class but you are accessing using object of boy class right if you want to print like the mro method resolution order then the class name boy Dot we have a function MRI see method resolution order for boy class is what first it will check whatever you will ask like maybe any any method or attribute in Goa class then in mail class boy because boy is inheriting from male then in human class then in human class and after that object class I have told you object class is root for all the classes right so this is built in class okay I hope you got the idea now so if if you want to overwrite like in mail also I want to Define my init function if I want to initialize human and heart and let's suppose I am writing like name because every male is having some name right and only self dot name is equal to I'm writing name okay now the problem is because this male is inheriting from Human so this every attribute and everything we are inheriting from human right so if you want to inherit this numb heart this attribute from Human class or the eyes attribute then you have to call this init function also in male class if I run something like this let's run the C now boy object has no attribute ions now it is giving error while you are calling eyes why so because boy object now this object of this boy classes in everything from male class so in main class we are having init function right so it will call init function from mail class this time if you want to check out you can just print the same line okay see calling in it from male class as you can see now this time it is calling in it from male class right select don't name means it has now it is having only one attribute if you want to print name like name then it can print but you have to pass here name boy name suppose like I'm passing Rahul that is fine it will not give any error like calling from mail class and Rahul right but now this point of time it is accessing in it from this mail class not from Human class so if you want to obviously call number of word every male every boy is having one heart number of eyes two so rather than defining again I just want to call the Senate function so just call this init function maybe you can call in this mail class on or maybe go a class in boy class if you are defining its phone init function like this that also we can say like depth in it and I'm just passing one argument here foreign taking no dancing not self underscore it's self taught right and from this parameter we are taking right so attribute name you can take different from this parameter You Can Dance right now for me boy obviously I want to access name as well as numb heart and eyes everything so rather than defining its own we can call init function from male and from Human class right because if you call from mail class only then you will you can have only access to this attribute name so for numb heart and For Eyes you have to call human class attribute as well in class in it function as well so I told you this thing human Dot in it and sell totna hard so if you are accessing everything then can dance or you can say first you can say first number of art attribute then name from male and its own it has can have so three parameter name you need to take in this in it so heart is from Human and from male class male wrote in it and self is like using this object boy object it is wrapping right now object of boy class and in it we have name and no dancing then it's fine so now at this point of time you need to pass number of art first heart then name is Rahul then comma and dance it is it should be to your poles so maybe like just pass here true now this point of time I want to print using this boy object boy one dot what is the attribute no dancing let's run this see calling in it from Human class calling it from male class then Rahul and true no dancing true and Mr also is printing boy then male then human then object right so first is calling from Human class it is printing this thing why so because whenever you create this object first it will call the Senate function right the first line in this unit function is human dot in need so the control will go to here here so first this line will be printing printed calling in it from even class then control will back to the next line here then from mail it will print so this one will be printed and that's it right so this is I hope now you got the idea of multilevel inheritance right now after boy also you can like you can create any classic programmer and that will be narrated from boys so ultimately it can hide all the properties of all the previous base classes from Human also from mail also from boy also right and suppose I am taking a variable class variable or you can say class object variable can breathe is equal to true true for human class so no need to write them self load can be because it is outside of the Senate this is class variable class object variable right so this also we can access in everything like using boy object if you want to print this variable like print boy one dot Cena can breathe this field also we can print from Human class sleep from male class heat from Human class now anything from boy class work from boy class like this no dancing field from boy class so let's success can breathe let's run this and see can breathe means that is true so we can access that class variable also right so this kind of thing also you can do it's not like that every attribute or everything you need to you know Define this in it in it Constructor a class variable also we can take can breathe or in mail also we can take in boy also you can take any class variable class object variable okay so in the next video we'll see hierarchical inheritance and Hybrid inheritance so now I'll see you in the next video take care