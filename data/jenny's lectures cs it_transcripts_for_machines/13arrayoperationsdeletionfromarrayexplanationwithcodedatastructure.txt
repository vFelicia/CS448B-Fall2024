see I have taken this example in the previous video so I'm going to take this example only for explaining the deletion operation if you get how to delete a data from a specific position then you can easily get how to delete data from beginning and how to delete data from end of theory fine so first of all we'll discuss the delete process with the help of this example then we will write down the code fine and also we'll discuss the time complexity see here we I have I have taken these lines from the previous code only from the previous video that I have declared one area of size 50 so these bits from 102 to 99 would be located 200 bytes would be allocated by the memory manager for this array one variable size fine this is the maximum size but actually suppose the user wants to insert only 10 element 5 elements then we will ask from the user how much sighs he wants for the area so he'll ask enter the size of the array and the user will enter the size so for the size also 4 bytes would be a located somewhere in the memory suppose the here I'm taking the position at the address 3 0 4 and then we'll ask from the user the for the elements of the array we are going to initialize there at runtime so into the elements of array for entering the elements loop would be started from 0 to size sizes suppose 5 here I'm taking edit the image size is 5 so Luke would be from 0 to 4 because an index would be started from 0 and we are going to populate the array like this fine I have why I have discussed this coding in the previous video in details so you can check out that video see now suppose user has entered this data in the a now you will ask the user from which position he wants to delete the data and now see suppose he said I want to delete the data from position pool right so position 2 means from this position index is 1 I'm taking index and positional different thing index is 1 but position is what 1 2 second position so from this position I want to delete the data this do I want to delete so simply if you delete this so now what you will do you cannot shift six here because this space you cannot leave it blank but one thing you can do you can shift ten this side for this side and five the side that would be fine and after shifting these elements the size will be decreased by one so after deleting this data size would become for right now size is five so we are going to shift this 10 this side this for this side and five to this location right so we are going to start a loop how you can do this see here we have two so we are going to start a loop from here suppose we are I am going to take a variable I I would be started from this one from with index position minus one I would be started from position of minus 1 because position is 2 so I value is 1 right till position minus 1 to here till 4 or you can say size minus 1 size is 5 so here till 4 or you can say till 3 white L 3 and tell you see now we are going to shift I would be stuck in from here so now we are going to shift this value here so here what you can write this value of this area of 2 would be shifted to array of 1 so you can say I plus 1 to I right so we have shifted this 10 here now again we shift this I would be implemented by 1 now I is this one now now we will shift 3 value at index 3 to 2 so 4 would be shifted to here so here we will write for fine 10 would be overwritten then is no more now again we are going to shift now I would be incremented eyes at this place now this 5 would be I plus 1 value would be shifted to I value 5 would be shifted here so here you will write 5 so now simply you can say you can delete this one or you can say now size becomes size minus one so you just reduce eyes see I am going to process the loop I am going to run the loop till three not till four because when I is equal to three then simply we write what this a of I plus 1 that is four would be shifted to a of I that is three here on so no need to increment this I here we are going to run the loop from here till here only till size minus one that is fine fine so this is now the updated area and if you want to print which data you have deleted so what you can see before shifting this these values you can write downward you can take this value and you can store this value to somewhere you can say you can take one variable that has item and you can store here too and after that you can print this if you simply want to delete then no need to store this two value here you simply start a for loop and start shifting these values start a for loop from position minus one so now we will write down code for this say here size we have taken area of size initially we have taken five after deletion it becomes four so now you want you will ask from the user at from which position you want to delete the data fine and user will enter its position so you will write so this is how we are going to ask from the user so you are going to take variable that is pose for position for storing the position fine because obviously when user will enter the data for position then that value would be stored in memory and how value would be stored in memory using variables fine so see now now you also check see now if position is minus one if user entered minus one then what happens then obviously there is no index of minus one so we will also check the position should be a valid position and if user interposition is equal to 48 so now at for to it you don't have any data fine so this is also invalid position we have data from zero to fourth index only before deletion the data was from zero to for so you can enter from zero to four the position would be valid so you are also right down if statement to check the validity of this position if position is less than equal to zero or position is greater than sense right then it becomes you will print invalid position see here I am taking position would be started from one that is why this is position 1 so that is why I am taking position should be greater than zero that as position would be started from one right and position should be less than sign size is 5 so 1 2 3 4 5 this is the very position right because if you build 6 then at 6 we don't have any data right and you will also check if there is no data in this array then obviously that is under flow condition and you cannot delete the data else you will right now for loop could be started now you are going to delete see suppose position is this one so position is 2 user has entered a value 2 for this from this position you want to delete so from this position only you are going to shift this to this then this value to this you're going to shift something like this so we are going to start a loop from I is equal to position minus 1 position is 2 so Luke would be started from 1 I is equal to 1 now and I should be less than size minus 1 minus minus I plus plus y I less than size minus 1 see size way of taken 5 at starting and we are going to run this I for loop in 3 so till 3 means size minus 1 size minus 1 is 4 so I should be less than 4 that is still 3 we are going to run you can run the sole loop till 4 that is also fine but obviously that would that is that time taken for computing for the slow loop only find so that is of no use so now in this case you will write work so now if head you write the a of I plus 1 value would be shifted to a of I when I is equal to position minus 1 that it's position minus 1 that is 1 I is equal to 1 so value of this 1 plus 1 that is 2 ay value of 2 we transfer to value at 1 that's that is exactly we have done right and now now what you will do now you have done your shifting till this till this so now you will right size because size has been decremented by 1 now right and now at last you can print the array I'm just I guess you can print there a updated arrays just write down a for loop from I is equal to 0 to size less than size now size is 4 after size this size becomes 4 right this value becomes now 4 so from 0 to 3 value would be printed eyes less than size and in for loop you can write print a percentage Dao I this is how we are going to believe the data and one more thing I have told you in the previous video also that in arrays when we are discussing arrays and see then there is no concept of bounds checking it means suppose you have declared array of size 50 and if here you will enter the size of array is 60 and if you start entering the data you can you can easily enter 60 elements but that is not possible because that should not be possible right because at starting how much space has been allocated for 50 elements only for this only from 100 to this 200 bytes so how can you store 60 elements once you are declared and as we have read that that array size is fixed once you have declared the size you cannot change the size right so this is now the you have to check the programmer programmer how to write a code to check the boundaries of theory so after this after entering the size you can write down one if statement if sy is greater than this maximum size greater than 15 then you can print out of bound and in else broke you can write further enter the elements and this for loop right and after that you can print the updated array see here no need to store this element in any anywhere because we just want to delete the data so just shifting would be enough if you want to print which data you have deleted from the array then you can store before before this for loop you can write item suppose you you'll take one variable where you store the value so you can write item is equal to a of position minus one position minus 1 that is y 1 y 2 2 would be stored in this item right and after that you can print the value deleted is and you can print you can say that print percentage d an item you can print so if you take this case here also you are going to declare a variable item fine but if you don't want to print the value you can simply ignore this one and simply write down this for loop so if you want to delete a data from the end of there a then that is very easy no shifting will be done no need to ask for the position no need to write down the so loop just sighs right now fine and if you want to print then you can store this value in item and you can print that while fine and if you want to delete from the beginning then what you will do if you want to delete this 6 then from the beginning only you are going to start the for loop for I and all the values will be shifted here left side so you are going to start this for loop from I so updated for loop from if you want to delete from the beginning then the updated for look would be for I is equal to 0 I would be started from 0 only and I should go less than size minus minus the minus 1 same and I plus plus and simply write down this thing only a off I and I plus 1 and after that size fine because we are going to start from this position only 'no we know the fixed position is you are going to believe the data from 0th index so start from the 0 only so if you talk about the time taken and complexity then here also the time complexity depends on the position from where you want to delete the data if you want to delete the data from this position then you are going to shift all the elements and theta n if you want to read from n then obviously theta one so it depends on the position and as we have discussed in insertion keys so theta n minus B you can write but simple logic is say this is unsorted array so ordering of these elements doesn't matter here so rather than shifting we can do what the very quick algorithm is what if suppose you want to delete data from this position position to so simply what you can do you can pick the last data from there and you can put this data here only right and you can do sighs my you and size will be from zero to three so this is now our array and that's deletion so it is it will take constant time that is theta one order of one you can say but if air is sorted in that case this hole during of the elements would matter in that case you cannot do this thing you can directly in that case you can't pick that really the last element in place and the position from where you want to delete the data because it will you know disturb the order of the elements in sorted array in sorted array it is must to use this process the shifting process but an unsorted air you can do this thing so the best elgu will take how much time thither one you can see order of one one but the condition is this area should be unsorted here you are here we are taking what linear array or you can say 1d area that is unsorted in that case the best algo would take constraint thank you delete data from any position from the beginning from any specific positional from the end so now I'm going to start the topic linked list from the next video so I'll see in the next video till then bye take care