hey everyone I hope you all are safe and doing good so in the series of learning path programming language in the previous video we have seen one project we have worked on a project that was a quiz game right so now in the next video in this video actually we'll see One More Concept that is modules what are modules in Python and basically why do you need this concept why modules right the benefits or advantages of using modules for modularity Concept in your program right and then types of modules and then how to use modules and how will you use the inbuilt modules how to create your own module this thing we will see with the help of program right okay now first of all uh actually why we need modules that we will see the answer of this question the need of modules or you can say what are the benefits of using modularity concept or modules right so if you have gone through the previous video the quiz game then uh there was one file and in that file only we are having the database I mean the question Bank as well as the option and then a code right let me just show you first that project okay see this was a project for our quiz game we have question bank and then we have the answer of this question here and then we have options ABCD for each question we have only five questions we have taken only five questions and the code is also in this file only in one file we have everything our database obviously this is what kind of it's a database for us right so data as well as the main coding right so if I want to add more questions if I just want the in my quiz there should be 50 question so the question question Bank it should be 50 questions there then option also there should be 50 list of having ABCD options for everything right so the program or this program would be very lengthy right and it would not be so much readable because in the same I have database and then here after that I am having the main code so the better option is what what we can do we just take this database from here we just create a new file that is quiz underscore database Dot py and this is our file this file is having a this data right so this database now if you want to use this database in our main file then what you need to do is we just have to import how to you have to import different modules so just use import keyword and the name of that module that's it quiz underscore database right quiz underscore database that's it now this database we can use in this program so I think that is more readable now more manageable right so now this separated this file is what it just a module so in Python every file acts as a module so what we can say what is the model the definition of module it's just a file having or containing some python code you can say like some statements variables or definition of functions or classes anything it can have right so that is simply a module that's it right now if two two you know uh people are working on the same project so this like me and my friends so I can give this file to my friend question Bank file this database file I can just say I want 50 question or 100 question in this database so he or she is going to update this file only and right and in main file there is no need to update anything this main file will work as it is so there should be no change in the in main file right so this is how if you are divided your project into different files multiple you know more than one people can work on that project like then right now in one file in database my friend is working and in main file I am working right if I have only one file main.py and everything is within that file so only one person at a time can work on that file right not two separate person or more than one person okay so this is what concept of modules so now first let's discuss why we need modules this concept so as you have seen after dividing our project into two separate files like one is for database and one is our main file right that was easy to manage your program or our project although we have divided our project into two files only because that was not so much big project or we are having a small program only that was not so much large right but yeah after dividing into two files that was I think more manageable right more reliable so that is what what first reason to use modularity concept or to use modules in python or we can take a real life example suppose see we have our Almira or we have a wardrobe and I'm having like maybe uh multiple you can say shelf in my cupboard so I have like tshirt tops jeans and everything so I'm putting everything I just fold my tshirt right and here is suppose I have this one this shell so I'm just putting my tshirt here there my jeans my pajamas my tops and everything in just one pie right so if I want to pick that one top which is here near the bottom then if I pull this out from here then everything will be messy again right so better idea is what just separate out like my here I'll put my only tops and this I'll put my jeans my pajamas and like this so now it would be easy to manage my clothes it would be easy to put the clothes to take the clothes from the almirah and all right I hope you are going to you know you are able to relate this example right same same thing if your program like gets bigger many lines of code then rather than putting all the lines or everything in a single file because that would be not easy to manage that program right we just split the program into separate files right and that would be very easy after that to manage those files because whenever you want to use any file then I can import that file right how we are going to import that also I will show you using import keyword that is very simple in Python right same like if I want to take my tshirt from here and I want to put here so I just take my tshirt here and I can put here it's like just importing by importing the modules or importing something from any other file right so first thing this for easy maintenance of the program right and okay now next next reason is why do you need modules let's take one more real life example I hope you are you are able to relate this example also see I personally love that roasted cumin power I put that powder in buttermilk or curd or in if I have write that then also I just sprinkle that powder on that right there and some snacks also like Chaat or anything then also mix that powder you know in that chat also right so what is one process suppose I have a buttermilk today I am going to drink buttermilk right so what I'll do to make that powder I'll just take cumin seeds I'll just roast those cumin seeds in a pan on medium flame then I'll just you know make the powder I'll just grind those seeds and that the powder and then I'll sprinkle that powder in my buttermilk on the next day I'm I'm this is good I'm going to put I just want to you know use those powder in this curd also same process I'm going to repeat take a pan cumin take cumin seeds then I'll just roast those seeds and grind and then the powder I'll use then I have next layer I'm having right now for that also I have to do same process next day suppose I am having some snacks these kind of things and there also I want to put those powder cube in roasted cumin powder so the same process I'll repeat right so this roasted cumin powder I am using frequently right so rather than repeating the process of making this powder again and again on each day what I'll do on one day only I'll take just one cup of cumin seeds and I'll make powder and I'll just put that powder in a container now this is my container so if I want to use in curd milk or anything I just take this container take some powder and use that rather than repeating the same process of making this powder right so I think that is very useful for me if I do this process you know if I you can say make the powder one day and just put that in a container that is easy for me to use that again and again right same thing so same in programming like if some functions are very handy or some functions are you know those are frequently used functions we use those functions in many programs or in many projects right so rather than writing the definition of those functions again and again in each program like for each project what we can do we just put those functions in a separate module right the definition of those functions in a separate module and in whenever you want to use like in my project I want to use those functions so I just import that module my friend also want to use those functions so my friend will also import that module only rather than writing the definition of the function again it is time saving as well right as well as it is increasing the code reusability okay so I guess now you are able to relate these real life example with the need of modules in programming I guess so if not you can just let me know in comment section I'll just try to improve my quality of examples real life examples right okay now I guess it is clear to you guys why we need modules right first it will increase the code reusability obviously if the time would be saved time saving next the program or the project would be more manageable or easily manageable or maintain you can we can easily maintain that project if that is dividing to separate files right or you can say it would be definitely more readable more understandable right so these are you can say some benefits of using module so you can say this is what in need of modules now we'll see types of modules there are two types of module built in as well as you can create your own module so builtin modules like math random and many modules I'll show you those builtin modules also and we can create an our own module also this thing we will see with the help of program right so let's do some practical okay so let's create a new file here in this project only and for example I am just going to give it my module Dot py any name you can give I've told you like every python file acts as a module so module obviously having dot extension.py okay now in this we can have many thing like maybe definition of some functions classes some simple statements some simple variable anything right so in this module right now in this module I'm not creating my own module let's let's have like uh not my module let's have a new file and I'm just naming it module underscore lecture dot py so first there are two types of module built in and obviously user defined modules so first we will see how to use builtin modules these are already defined right now if you want to check out what are the builtin modules then we have a function we have held and there's some argument you need to pass so I'm just passing modules and I just want to print the what are the different modules I have that's it and this thing you need to write down the help function and bracket in as an argument modules let's just run this and see we are having these number of builtin modules so I guess some modules are see we have I guess a random module total module and we have used math module random module these module we have used right so if you want to check out if in math module what we have on any module what we have then we can check out like um just want to check out in random module what we are having so let's run this see these functions we are we have in this these functions some function we have discussed right random brand and these functions we have okay now suppose if you want to check like in math what I'm having in math module I am having the data via value of e value of pi I mean right so how to import this module in your file you just have to use import keyword and the name of the module math that's it now this has given you the access to use whatever the data or the functions in math module you can use right but it's not like that it has incorporated or imported all the functions and data no it had just incorporated or inserted the name of the module math to use those functions and those data you have to use the name of the module first like if you want to print the value of that variable what we have seen e one variable e that variable so you have to use first the module math dot C we have e Pi INF n a n and this we can use so I just want to print value of E math dot let's run this and see this is the value now you can access everything right so this is how you can import builtin module now we are going to Creator your our own module right so I have my module dot py so here I am going to you know I'm going to take first a variable suppose a is equal to 10 and then I am having a definition of some function maybe like like area of square and just to need to pass one side so one argument like I'm taking the variable inside and it is just returning and the area of sphere is what I think the side Square so power of 2. then I am having one more function maybe suppose calculator and I'll just pass here to argument X and Y and Tool just print addition subtraction multiplication and division in this definition of this function I am having this addition subtraction multiplication and division right and only one function this I am having so that's it I'm having only two functions and one variable okay so now in my module in another file I can import this module so how to import you just have to use the import keyword and my name of my module is my module my underscore module right now I can use anything this function this function and this variable everything from this module so suppose I want to print this what we can say value of a that variable so first you have to use the module name dot a right and let's run this and see it will print 10. right this is one way to import module another way is import module Alias name suppose your module name is a big name so everywhere and here suppose you want to call that function Square so my module Dot square area of square and just pass one side and it is returning something so you have to write here print okay then again I am going to let's run this first see 10 value of a and then 16 is area of square right now if my module name is very long so every time you have to use module name then don't then whatever functional variable you need to use so a small name I want to give here so as an alias you can import that thing so the second way is import that module name as small name I can give like M1 now rather than my module now my module name in my file is M so now it will be varied if you run this see name my module is not defined in line number two here my module dot a now it is M only it's not my module because I have renamed this it's m now okay let's run this see now 10 16. so this is second way Third Way is specifically I don't want to import everything from my module suppose I have 10 or 15 functions but I just import one function here I have only two function but I just want to import or use only calculator function so rather than importing everything only one specific function I want to import so therefore for that you have to use from keyword so from the name of the module this is my underscore module and what you would need to import import only calculator so now you cannot use here a or area of square because we have just imported calculator so let's just comment out these thing and call the function calculator and just pass 3 comma 3 comma 2. these two values let's send this addition subtraction multiplication and division right so if you specifically import calculator no need to write down here the module name don't simply you can use the function name calculator or this calculator this also you can give a separate number you can say Alias name like calculator as C so now rather than calculated you need to use C because now calculator is not defined because I have renamed this as C so you just need to pass here the name function name is C like this so when you use this aliasing concept if the module name or the function name is very long so you can use aliasing concept rather than writing the same name again and again the long name right but one problem with this thing is what if you want to import a specific thing then the problem is suppose I want to and next thing next thing is what I want to input as well as the variable name a so just write down comma a so now it will work fine you have to Simply print a and C A let's run this okay name c is not defined because we are using not aliasing now we are using here what the complete name calculator right see 10 and then definitely this calculator function right if I want to import area of square as well or rather than writing here separate separate name of the function and variable name what we can do simply we can put here as asterisk so now specifically it will import everything a whatever is there a this function this function all the three things now it will not give any error if you bring to this thing also area of square over here I just want to print something like this from another module is this so let's run this value of a 16 is area of square and this is that right so this is another way of importing uh now see separately if I want to import separate like a from my module a but the problem in this case or in this way of importing specific thing is what if in this file also I am having one more variable a or suppose a comma B and equal to I am having 4 comma 5. right and then I'm having sum sum equal to a plus b and just I want to print sum see sum is 9 4 plus 5 is 9 value of a from another module is 4. but from another module value of phase 10. it is importing it is just printing this a from this module only a but I want to print I want to access this value so in this case it's compulsory to write down here specifically exclusively said this a is from another model from my module so the name of that module my module dot a like this my underscore module dot a but still it will give error because because we have used this way of importing this a see let's run this and I'll show you the error name my module is not defined here my module wrote In Line number five here my module is not defined because we have just imported this a not the complete my module so the better idea is what I suggest to use is import and the name of your model my module and whatever you want to use now any function or variable or anything exclusively you can just tell I'm using this thing from my module so my module dot a now run this see sum is 9 but value if a from another module is 10. now it is printing everything I mean everything is fine now it is printing the correct value of a right so you got now the way of importing the modules how to create your own module and what can be the problem if to if you use that from keyword that way from module name and import the specific variable or function right and I hope you got the reason or the benefits of using modules right like this I have taken this simple example so if there are many functions 10 to 15 functions so I can just write down those functions here or I can just make two or three separate files right one file is everything about square area of square parameter of square like this right then rectangle area of rectangle parameter of rectangle and like this area of circle perimeter of circle and like this right so two words we separate file for individual object and then in one mail file you can import what file you want to import according to your requirement according to your choice okay so it's not like that you can just have two files only like this you can have three four five as many files as you want and in modules we can have now only variables and definition of functions but we can have classes as well right so that thing we will see I guess uh maybe next video or maybe next to next video when we will discuss this quiz game with the help of oop approach when we will create that quiz game with the help of oop approach okay so I hope you got I guess everything about modules in Python right most probably next video we'll see packages in Python so now I'll see in the next tutorial bye bye take care