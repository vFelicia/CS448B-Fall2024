hello everyone I hope you all are safe and doing good so in the series of learning Python programming language in the previous video we have done a project that was Turtle race right okay now in this video we will see something interesting so we are going to discuss now event listeners okay using Turtle module fine so the basics we will see in this video and then the next video we'll see one coding exercise based on this video right okay now what first of all let's understand what is this event so when a user performs some action like suppose if I'm clicking this mouse right so this is this is an event it's click event so if you perform some action if you press any key if I press like space means that is also an event some event is happening right to get the desired result if I perform some action then that is known as event right everything if you press any key or if you move the M mouse or you click the mouse then that is event right and according to that according to that something would be happening there on the screen like you will get your desired results right like uh when you play game video game then there is uh like up key down key left right key or uh maybe some other Keys also for that like whenever you press that key the player will like jump or will shoot or something like this right so those events those actions are you know bound to those specific Keys like if I press this key then this would happen like if I press the right key then the player should move in right direction or forward if I press the up key then the player should should move in this direction upward Direction like turn left and upward like something like this right so this is what we need right now based on the this thing we are going to do some project right later so first understand this thing how we are going to B how we going to bind a particular function to a particular key on your keyboard right so this thing we will see in this video I hope you got the basic idea of event lessening or event listener so for that obviously if in my class if I'm am like teaching in my class and the that example if I put a dot on my keyboard that very famous example and if I ask to any student where is the do so the one who was listening or who was attentive or who who was watching can easily tell where is the dot but the one who was not attentive who was not not listening then not able to give the answer where is the dot right so if I want that everyone should listen whatever I'll say so first I'll what what I'll say listen to me so everyone in my class would be attentive at that time and whatever I would say after that then I hope everybody will listen right so this is the case so for this also we have some methods here here so I'll show you what are those methods and how to achieve this event listening okay now let's see this thing with help of example then example then you will get it better so in this Turtle project let's create a new file event listening intro. P it's the first video of this event listening okay now see what I want I have a turtle and see that this turtle module allows us to detect these events right and it will trigger the you know function accordingly whatever we want so what I want is there is a turtle first let's create a turtle so from Turtle let's import first the turtle class and let's import as well the screen class so let's create a screen the name of the object object I'm taking simple screen or you can take S1 a b c any name and there is a screen class with S capital so let's create a turtle also to and we have a turtle class right and first let's do this thing screen do exit on click to hold that screen right so now there is a turtle we have now what I want in in our you know on our keyboard we have four Keys up down left and right arrows right so what I want is if I press the up Arrow up key then the turtle should the heading of the turtle or the head of the turtle should be you know uh tilted to Upward 90° and if I press the down arrow then it should be downward I mean you can say like right 90° right if I press the right arrow then it should the heading should be in that direction only and move forward if I press the left key then it should move backward something like this and if I press up then it should move up it should move in that direction if down key then it should move in downward Direction like this so we are going to bind these keys right to the function so for that let's go to that python Turtle documentation so in Python Turtle documentation we have some methods like see the screen method Turtle screen method screen events listen on key and these so listen Okay so first of all the screen should listen to us whatever key I'm going to press like the student should listen to me first so I'll say what listen to me first then the students would be attentive so first you will say to the screen listen to me like what what key or the uh what key I want to press right listen to that and accordingly call the function right so first listen you have to call this function it will set the focus on the turtle screen focus on the turtle screen to capture or to collect the key events whatever key you will press to capture those events right so first you have to call that thing to listen you have to go like screen screen Dot listen this one right so let's define four function obviously you have to Define for function C now after listening there are two method more on key you can use this on key or you can use this on key release so this on key method there two arguments should be passed function and key function with no argument and any key like maybe space up key down key or any a b c d these letters right so it will bind see it will bind the function whatever function you will pass here to that particular key right so obviously you have to Define first functions so here we are passing function as an argument higher order function that we have discussed in the previous video so let's define for function so in function up first of all I want to set what the angle of term to 90° left 90° or you can write down like uh this Tom do left here 90° or one more method we have set heading this also you can use set heading to 90° or here you can write down something like this stor do left to 90 this is also fine right and then if you want to move this time only then Tom dot forward move by 20 pixel and right same like this let's def Define four functions for four keys so for down the down function means downward then heading should be if you want to set the heading then it should be 27090 then 180 then 270 then 360 I zero not 360 it's zero or you can write down here something like this uh term dot right 90° that is also fine right and forward 20° now left if you want to move left so left means now set heading to 180° because by default that would be in the turtle would be in facing right direction so next would be right in and set heading here zero okay now we have predefined functions so we can bind these functions so let's use that on key screen Dot on key so first passing we will pass a function then key so function I'm passing first up without these brackets just name and key I'm passing simply the up key up errow right or rather than in positional argument you can pass keyword argument that would be more understandable like fun is equal to this and key equal to up see F you want fun and key key so these two I'm using for keyword argument fun and key so like this now this key up key we have bound this up key to this function up and up function is doing what set heading to 90° and then forward 20 pixels something like this so same you can bind these to all the keys to four four keys with four functions make sure the function name should be same okay and these are keys right now we have done this thing so let me just run this and show you what will happen see let's run this there's a screen we have this is a turtle and now I'm pressing the right key right arrow so see it is moving in this direction if I press upward Ward then it is mov upward left in this direction down then this so like this you can do you can like draw any any sketch or any image or something like this whatever you want to do okay now at last if you want to clear the screen that then also we can Define if suppose I I press C right then it should clear this this screen whatever this Turtle has drawn it should clear this thing so for that also we can define a function so one more function we can Define here dep clear screen and any function name you can take right and for that obviously to clearing a screen we have a method so under Turtle method we have a function we have a method clear see clear so this thing we will use okay this is going to clear whatever the drawing has you know whatever the drawing is there drawn by that particular Turtle right so only this thing we want we want we don't want to clear the complete screen because if there is second method also clear screen see clear screen it will clear the screen anything if there is any on that screen it will clear everything the turtle and as well as has any other things also but that thing I don't want I want to clear whatever has drawn by that particular Turtle so let's use this thing it deletes the turtles drawing from the screen okay okay but it do not move the turtle okay let's see see the state and position of the turtle as well as the drawing of other Turtles are not affected right other Turtles throwing are not affected so I want to clear the drawing of the stor Turtle only if you have two three more Turtle then those drawings would not be affected so to dot clear right okay let's run this so this is my drawing and now I want to okay so first of all obviously you have to bind this to a particular key that is also important okay so screen dot on key and function name is what this clear screen without these brackets and key any key you can take I'm taking c yeah The Binding is done so this is my drawing and I want to now I'm pressing C so that there is no drawing but the position and the state of the turtle is as it is here but I want after clearing the screen the turtle should be here at home like like At first the turtle was at here at 0 location same the turtle should be at 0 coordinate right facing in this Direction only forward so for that also we have a what you can say a function home Turtle load home so the turtle would be at his home only back to 0 coordinate so in this method only just write down Turtle dot Tom do home okay so if I write something like this and if I press C but see now there's one drawing I mean the sline while moving the turtle to here to home then it is going to draw that line so you have to do first definitely here P up now that's fine so if I draw now some drawing and press C now see the turtle is at his home and there's no drawing of that Turtle everything is gone so obviously now if you want to draw again then it will not draw anything because we have done pen up so this thing is also important if you do pen up then you have to do after reaching to home you have to do Tom dot pen down right so maybe like this is my drawing and I'll clear my drawing and again I want to draw now that is fine now clear this again I want to draw now clear this and like this right so this is event listening this is how we can achieve event listening using this Turtle module I hope you got the basic idea of this thing right so you can I mean if there is one assignment for you guys now see it's like if I press up then it will move upward it will first set the heading 90° and then it will forward move forward to 20 but I just want while pressing if I press this up Arrow then it will set the heading to 90° right but if then to move the sttle you have to press any other key like maybe space right so you have to bind if you press down then only it will set the heading to 270 it will not it should not move to move the turtle you should press space key so you have to bind the space key with the desired function like move forward function so how you'll do that this is your assignment you have to modify this thing right so I hope you got this thing this idea see now one more thing I want to tell you here rather than this screen do lesson we can use Turtle do lesson because here we are we are using Turtle do lesson if I if you check this uh lesson Turtle do lesson maybe you are Turtle do Liston I want to use Turtle do listen rather than screen do listen so what is the difference that is also fine there is no difference the difference is I'll tell you this implementation of this lesson method is one only it's not like that for turtle it's different for screen it's it's different no it's one only but whenever you call this using this Turtle do listen this line right then if I call this using Turtle do listen Okay like this Turtle do listen this will also work fine or Turtle do on key Turtle do on key this will also work fine okay but if you use this Turtle do listen then this line is going to access the code the code of this method this thing this function as a global function in the turtle module because turtle is a module it's that library right but if you call this using screen objects screen do lesson then yeah it is going to access the same code but now as a method of that particular screen object as a method of that particular screen object right and now here the screen object is we have taken SC WN screen right so this is the difference only other than that this lesson implementation of this lesson is one only it's not like that for turtle it's different for screen is it's different no within Turtle module only screen is a class and we are creating an object this screen of that screen class so now as a method of this object this lesson would be called as a method but here as a global function for this Turtle module as a uh you know Global function for this Turtle module if you write on this line right so I hope you got the difference right okay now based on this we will be seeing one coding exercise in next video right so now I'll see you in the next video till then byebye take care