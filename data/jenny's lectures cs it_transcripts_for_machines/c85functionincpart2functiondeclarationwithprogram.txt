so in the stage of learning programming in severe discussing functions in c in the previous video i have discussed some basics about function like that was introduction to function what is function and why we need functions or you can say what are the advantages of using functions right and there i have you know given you one program or you can say one example there we have a discussed one function addition of two numbers so we have discussed like what is function definition and what is function called a little bit right we have left with function declaration so that will discuss in this video because basically when you you know go to this topic function in c typically three uh parts are there for a function function declaration or that is also known as function prototype function definition and function cool so all the three things will discuss detail right everything about these three uh things of functions or you can say this is what structure of a function so in this video i'll talk about function declaration or function prototype with proper example with a program and i'll show you practical also on my laptop right but before that just want to tell you one thing if you are looking for a great career in software development then you must have to think about the aspects like what's trending in the industry and the type of questions being asked in the interviews and how to improve your coshare ranking so here an academy brings you a platform where you can get access to weekly shows which you can watch live and the host of these shows are seven star coders in codeshare and they're also working some of the top companies like amazon google linkedin having years of experience and they'll be covering a lot of content which is really helpful for your career like in live episode you can ask the tech hr's the top 20 question asked in the interviews and industry leaders about the recruitment process in the startups and mncs and what is the eligibility criteria how to apply for them not only this you can also participate into mock interviews and you can also learn courses on programming languages blockchain and crypto data analytics and many more courses like that and have you ever thought about how these frontline apps like amazon flip card practo zumato were made at first place and what is the thought process behind that so here is a show to answer all these questions in this show their host anus is going to discuss the architecture breakdown of all the popular apps so learners will get to see how these apps were made and how these apps work so the details you can find out the detail of the show and the batch you will find out the link that i'll put in the description box of this video and don't forget to use my code jkl10 to get 10 percent extra discount on your subscription so now let's see what is function declaration when we use variables in a program then before using those variables we have to declare those variables first suppose here the same example i am taking sum this was a this is a function and here i am suppose i am here writing printf enter two numbers right so address of an address so we are taking name and sum is equal to a plus b right so it will give error suppose in word main you are writing this thing and here i am printing sum is equal to percentage d and some in main you are writing only this additional food number so it will give it why because you are using a b and sum and you haven't declared these variables right so when user will enter then how that value would be stored you have to tell you know these variables first of all means you have to declare these variables first so here i am declaring in a b and sum so when you declare variable what you are telling to the compiler the data type and name of the variable two things we are telling same before using function you have to declare function also otherwise it will give error or maybe it will not give error but always it's you can say it's a good practice to declare function before using it but it is not necessary in some situations you can omit you can you it's not necessary to declare function you can only define function and you can call function and you will get exact output means correct output all the things all the situations all the conditions you will discuss in program right but it is always a good practice to declare function first of all right we'll see all the situations like if you don't declare a function and then you are executing a program then what will happen maybe you will get correct output maybe you you will get error or maybe you will just get warning and you will get the output whatever you want right so now how to declare a function so this is a function this is what function definition i hope you are clear if you have seen the previous video so here because here you are defining what this function is doing the process so it is function definition right and in main we call the function so suppose before the definition here i am writing i am writing void mean and here i am calling this function sum that's it so this is what function calling this is what function definition right so now when program runs first of all control will go to the main function and first line is sum this means function calling so it will go to the definition part of the function so this is the definition part of the function so now it is going to match the function definition as well as the function declaration right but here we are not declaring function right so how to declare this function before using before this main here what you can write i am i hope you are not able to see this so i am writing here this side the data type name of function and here in brackets some arguments or some input right but here this function is not taking anything because in the function only we are declaring variables and it is not returning anything because here only i am printing some that also will discuss the type of function which takes argument and which return something these are four categories of function that later we will see so it is simple declaration of function here you can say some argument so i am not taking any argument in this function so generally if you write the declaration of function it is your data type or you can say return time no data type it should be a return type what type of value the function is returning that we will return that will return here right so this function is returning nothing so that is why i am writing void word means nothing is it taking any argument i don't want that this function will take any argument that is why this is blank so rather than leave it blank better to write here y why so that also will discuss because if if you will not write anything here and in calling if you write something like this 5 and 7 means i want to do sum of 5 and 7 but it will not do sum of 5 and 7 because it will call this function and here it will ask enter two numbers and whatever number we will return it will give some of those numbers so according to the logic it should give error but it will not give error if you leave it something like blank so this would be in dilemma if you take this then also it will not give error if you don't take any argument here in the calling then also it will not take it will not give any error right so don't leave the situation in dilemma better to write here void means at this time if you write in declaration void and here if you are passing any argument while calling this function it will give error and that's exactly we want it should give error because we don't want to pass any argument in function right so better to use here void everything will discuss practically i will show you on my laptop right so this is what function declaration what is the general syntax if i write return type function name arguments so suppose if a function is taking any argument suppose a and b i want to pass here right like i want to do sum of 5 and 7 i don't want to ask from the user directly i want to print sum is equal to the say plus b and it should print 5 plus 7 that is 12 so in declaration part what you will do two arguments i want to take like in a in b and semicolon in declaration semicolon is must here in declaration part and also now in definition also that should match declaration and definition should match so what data type is return type is void function name is some fine but argument here i'm passing two argument of integer type but here it is nothing so it will give error so better to pass your argument like in if you take like a or in b or you can take any other name also x and y and so here you can write down sum is equal to x plus y right suppose i am taking x and y and here i am writing x and y obviously you should write here x and y a and b you cannot write because a or b are here not in this one or here we are not writing this line right i am just writing here in sum is equal to zero i am not taking a and b because i am taking here two variables so you will get some right it is not necessary to write down name of the argument in declaration you can omit this but it is always necessary to write down the data type data type of the arguments you want to pass this is always necessary integer or float or character right this is the situation when function is accepting some input right but here in this case i am not passing anything so i just write down here void and semicolon i don't want to pass anything i don't want to pass anything that's it and this i want to write this i want to write this i want to write right this i want to write right and so here a plus b right so this is what function declaration so here it is types of argument means data types of argument you have to do data type right so basically the function declaration will tell compiler three things about function which type of value the function is going to return after completing of the execution right return type name of the function through which you are going to call that function that is you can say identity of that function name and a type of arguments and how many arguments you are going to pass in the function data type of the arguments in float or character and how many arguments if you want to pass two argument you have to separate those arguments with comma three argument you can pass four argument you can pass it's up to you right so three things the declaration part is going to tell the compiler right and if in declaration at the time of declaration if you don't specify the return type then by default compiler think what its data type is in so better to specify the data type here right so now let me show you practical of this whatever we have discussed here so now let me create a new file named function declaration right header file we are using here i'm using void main and the last whatever we have discussed in the previous video the add function that i'm going to you know copy that code first here right see that's it here we are defining the sum right and in main function i am calling the sum right so a good practice is here i am using the sum in main function right so before using first you have to declare sum so i'm declaring some void sum and i'm providing nothing here and semicolon so this is what function declaration this part right and this is what function calling this and this is what function definition this is what function definition right so now let me run this first of all let me run this like this only so from the main function it is going to start you know and now definition and declaration it is going to match the function definition and declaration both are matching yes return type is void name is exact and arguments type of arguments we are not passing any arguments both are matching so now it will run so it is asking enter two numbers four and five and it is giving sum is equal to nine that's it but now let's do something with this code i am not declaring this function here right so now let's see what will happen if you don't declare the function see let me run this see yeah although it's running c it is asking enter two numbers it will give output correct output but you are getting here warning and not what warning you are getting c implicit declaration of function sum sixth line sixth line here because we are calling right so it will call it this function and it will check for the declaration but there is no declaration so by default if there is no declaration the compiler assume that implicit declaration of the function right and what it is it's assuming always it will assume the return type of the function is integer right it is assuming that thing fine now it is assuming return type is integer but actually in the definition return type is void but still it is running it is not giving any error why because we are not returning anything here so it's fine it will run and here if you print 5 6 it will your sum is equal to 11 right but here the problem comes when in the definition part i want to add float number suppose i am writing data type of this function is float right so it should return like float i mean i want it should return float so here i am writing float a b and here i am printing percentage f sum and row it's okay if you take variable is integer a b intent some it is that is also fine and if you just change this type the return type of this function from word to float that also gives error see now let me run this now it will not run it will give you error see see first of all warning implicit declaration of the function implicitly it assume that the return type of the function is integer right but actually when it finds that in definition return type is float means mismatch of the return type see conflicting types of sum it is assuming it should return in but actually you are in definition you are writing flow so it's conflicting now so now it will not run and it will give error right so at this time it is you know compulsory to declare your function first before using it to get rid of the situation so here i'm writing float sorry it's flyt spelling see now it is asking enter two number i'm entering three point four four uh that point five point four and it is giving like eight point eight right so that's it so here that is why declaration is compulsory in this type of cases right and see here one more thing here we are not writing anything like word or anything so suppose here i am passing in calling i am passing 5 comma 7 i'm passing arguments so according to s us it should give maybe it should give error like i want it should give error or maybe i want to do sum of 5 and 6 so now let's see what you are getting let me say we need to run it see enter two numbers it is asking and i'm entering four five and it is giving you nine point this this because i'm printing this float i'm taking it f float right so it is not giving any error so it is in dilemma this is blank declaration is blank so it will take it can take also it doesn't take also it will not give any error so if you want that it shouldn't take any argument i want to pass i want to enter numbers whatever number i enter it should print some of those number i don't want to pass any argument that is for sure hundred percent so better to write here void now it is guaranteed that it will not take it will not accept any argument word means nothing so now if you pass in calling if you pass argument it will give you error see let me run this see error is too many arguments in function sum line number six line number six and here i am passing the column is the that fifth i hope you you know how to uh see there like six this line number and five is like that you can say column number so too many argument to function because i don't want to pass any argument right here i have written void in the function declaration because i have explicitly declared this one and i am passing argument here 5 and 7 right so that is why it will give error so in this case just this thing and it will work fine right so to get rid of the situation you explicitly write down here word that would be better if you don't write that is also fine right and see if i am not writing void hair and i am writing void in definition part i am not writing word in declaration part i am writing in definition part right and here i am passing argument 4 and 5. now what it will give c see now it is going to run so it's must to write down here in declaration part white right if you want that dish in calling it shouldn't ask it shouldn't you know take any argument if you give any argument it should be varied so in declaration only you should write down here void i hope this function declaration is clear to you right when to declare a function when it is not necessary to declare a function right suppose i am not declaring function here and here also i am taking int right or it doesn't matter here you can take float or something like this and in this case i'm not declaring anything so now it will give you warning only like implicit declaration of function it's okay implicitly also see let me run this see here you are getting warning implicit declaration of function implicitly it is assuming the return type of function is end and in definite definition also you are writing in right so it will run it will give you output right now let me take another example see here i am taking a function care name is fun and here i am taking a character type of variable and i am just going to enter a character and whatever it i am going to enter that i am going to return return c so here i am returning a value so return i am returning a value whose data type is character so that is why the return type of this function should be care so i'm writing air care right and main function whatever the function is returning that i am storing obviously that function is returning something if someone is giving you something so you have something to hold that thing maybe you you you hold that thing into your hand or maybe in some other you know port or something like that so here i am taking a character type of variable because obviously i am returning a character so character type of variable and in ch i'm storing that value and whatever i'm returning that i'm going to print in main right so now let me run this here i'm just defining this and i'm calling this function here no declaration so according to you what it should give think see it is giving you error expected sorry so now let me run this see now it is giving error conflicting types of fun why because when we are calling this function it is us it is it it is going to this definition part and now it is going to match definition and declaration because and we are not declaring anything so implicitly it is assuming that the declaring that a return type of this function is integer but actually at definition you are giving return type care so intent care both are conflicting so that is why it is giving you error so in this case it is must to declare this function and it's not like that outside main you have to declare before using you have to declare so in inside main also you can declare this function so inside main i am declaring data type return type must be character name is fun and i don't want to you know accept any argument and semicolon right that's it now let me run this see now it is asking enter a character i am returning h and ch is equal to h so whatever h you are going to enter that is going to pass here h and that h would be stored in ch and i am printing here ch that is also fine but its better to declare the function outside main because the scope of this declaration is only now within this main so if you take another function like one two and there i am calling this function fun again so the declaration scope is only this so for that function there is no declaration of function fun function right so implicitly it is it will assume that declaring that the return type of this fun function is integer and maybe it will be conflicting so better to declare function outside main right so that scope would be throughout the program not within the main block only maybe in some other functions we are calling other functions it is also possible any function can call any other function right so here i am declaring care and fun this thing is for your assignment you have to test it right you that like you are declaring a function here and in another function you are calling that function may be so it is giving any conflicting type of uh data type or not i hope you got what exercise did this right so you practice this thing so outside this fund i am declaring it so that is fine right so now i hope you got what is function declaration what kind of thing you can do with function declaration when it is necessary to declare a function when it is optional to declare a function and if you don't declare what type of warning or error you can get and in what situation right so now one exercise for you is here i'm returning just i'm changing a little bit i'm writing this c in single quote return c right and suppose when it will ask i will enter a number uh k h only right so now what output you will get you have to tell me this in command box right so that's it for this video now so in the next video we will see some more about function definition and function calling with proper program so that's in the next video till then bye