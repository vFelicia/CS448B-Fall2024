so in the series of learning programming in c we are discussing 2D arrays in C in the previous video I have discussed need of 2D array means why 2D array and Declaration of 2D array now in this video I'll talk about initialization of 2D array two types of initialization at run time and at compile time both we will see with the help of some examples right so now back to the topic initialization at runtime and at compile time first we'll discuss at compile time how to initialize a 2d array at compile time right syntax is almost similar to initialization of 1D array right a little bit different so now see at compile time means at the time of Declaration only you will give the values so how to declare a 2d array data type the name of the array size first of all row size uh suppose I'm taking two and then column size three columns in two rows I want now here only in these Braes give the values right uh suppose I'm uh giving here values what 0 0 0 1 1 1 right so see General syntax if you write then what what would be the synx data type name of array in first bracket row size second bracket column size equal to in these braces you can you will write list of values values or you can say values you want to give that is the general sentex I hope no need to write that that sentex here so now see how many elements total elements would be there the studio array how to calculate row size into column size that is 3 into 2 six six elements total element would be six here right how many bytes would be allocated 6 into for one four bytes integer will take four bytes so 24 bytes would be allocated here now I have given values something like this now how to visualize this 2D array how we see that data would be stored in memory see here like this so this is it two rows it's Row one and row sorry row 0 and one index would be started from zero column would be 0 1 2 from 0 to two three columns are there in every row so you can say it's a 2d array which is array of 1D arrays this is what one 1D aray this is 1 1D ARR right that's it so now how this data would be initialized here first of all in first row data would be initialized data would be written like first of all this one zero in this first row then again zero again zero once we have filled all the columns then one then one then one this is how data is to be initialized right so like this you can give second alternative is is what better to give something like this because we know first one is this is first row so what you can do these three you can put again in this bra right this is you can say first row and for second row again you can put one more braces and one comma 1 comma 1 and and that's it within these braces this is one row and this is second row this is I guess more understandable so you can say this is row 0 and Row one index would be 0 and one right so directly now we know that by by looking at this point we know this is one row 0 0 would be initialized here and this is second row so this is also correct you can write something like this or you can write something like this int a and 23 in a matrix form in the this 0 0 0 comma 1 1 1 and semicolon this is also correct in the next line you can write this for the row one in next line you can write for row two and here you can close this this this braces so this is also correct you can initialize it in Matrix form this also would be initialized this also would be in memory would be like how we see that would be written something like this in 2D aray this is first row this is second row right now another method is how you can initialize here what you can do here you can you know skip this one if you don't give the size the row size then also if you give value something like this in Braes like this is for first row this is for second row right you want two rows but you don't initialize here you don't give the size here that is fine it will not give any error because you are initializing here so 0 0 that would be stored here 1 one one that would be stored in row two ultimately by default what two rows would be there and obviously column size you have declared here so I guess you got that the initialization is done row by row right row by Row from here first row then second row only right so now when you can when it is not compulsory to give the size of this this row size when you have given you have initialized all the values explicitly in 2D array then it's not compulsory to give row size means here see what you want you know the size of of row would be two so two rows and three columns and you have initialized you have given all the six values here all the six values here in that case no need to give this row size if you write something like this and here also if you don't write this that is also fine it will work because you have initialized all the six values right but if you write something like this see I'm writing here int a I'm not giving any size three and uh I'm just writing here zero okay first of all let me uh you know give you another example if you write two and three and one zero only in that case what will happen all the values would be initialized with zero right or before that one more thing if I write something like this 0 0 and uh 0 and 1 or you can say 0 0 1 1 only four values I have given and sizes 2 and three so now how that would be initialized initialization would be done row by row so first value 0o second zero next one also here now first row is complete now one is there and remaining would be initialized with by default zero this is how the initialization to be initialization is to be done but if you want that 0 0 would be in first Row 1 one would be in second row then you have to specify explicitly that this is Row one uh row zero I mean first row this is second row so what you can do you can put just curly braces here and here and then in curly braces one and one now whatever you have written Within These curly braces either one value or two value that would be considered as as Row one means here this row zero row zero throw and this would be considered as one throw so now initialization would be done something like this 0 0 would be here and by default there is no nothing so one more Zero by default and this is row second so one one here and by default here would be zero right so this is how we can do different different types of initialization now what what uh I want to tell you one more thing uh see and I have told you if zero is there then all would be zero first is zero remaining would be zero right but if you will not initialize size here then what will happen now it will not give any error see it will not give any error but you know hair initialization is what because you have given only one zero how the size is to be calculated so when it will initialize like we know three columns would be there so 0 0 0 1 0 Z by default two 0 now we don't know second row is there or not right so that would be only one row there would be no second row so it's like 1D array only this this this and if you print if you write down the logic to print a 2d array like from that that we will discuss here and if you will you want to print this second row so then it will give any garbage value because you haven't initialized this thing right so better to if you not don't give the size here and if you initialize something like this this is assignment for you see if I write here like this one one one and that's it now how data is to be initialized here right in this form 2D array it would be 2D aray or 1D array right and if you write second is what if you write here 1 one one and two then these are the two uh example I mean two assignments for for you you have to tell me in comment box right how data is to be initialized in these two cases right now uh next point about initialization at compile time is what if you write here something like this size is two and if I write here like 0 0 0 you have put this this one in three values into into these curly braces so that would be considered as this Row first row so 0 0 would be assigned here now next three rows would be assigned with what I mean a next row the next row that one one of row would be assigned with 0 0 0 remaining would be 0 0 0 right so you can try this this type of Declaration all the Declaration that I have told you on your laptop and you can you know see if you are getting any error or not now second is what at runtime how you will initialize how you can initialize a 1D at run time using for Loop and scanf same here we will use for Loop and scanner function but here two for Loop but here because we are having here what like suppose I'm taking same int a 2 and three right so this is row 0 index is 0 1 0 1 2 right now how to initialize this thing so first one you have to take here two Loops nested Loop would be required and this thing I have discussed why nested Loop when we discussing printing pattern programs in C so there we have discussed I have uploaded one video like what is need of nested loops and what are nested Loops you can first of all watch that video then come to this video I'll put the link of that video in this side button you can check it out so now first Loop would be to print what rows right so rows are one and two two rows only so I would be from 0 to 1 because index is starting from 0 to one and I ++ now within this Loop the second Loop would be J and that is responsible to print these values So within every row we have we are having three values so that this Loop would be would run for three three times 0 Less Than 3 and j++ so this is for to print row like two rows are there so 0 to one 0 to uh no 0 to two sorry right and here this is for printing these columns so 0 to three size is three and within this we are going to take input so print F percentage D address of name of array is a and here you will give two subscript because this is what 0 0 right this block is what row is zero column is 1 0 2 1 0 1 1 1 2 so I and J you will have to give two values value also and column value also then only then only it is no possible to access these blocks or these cells and that's it this is what you can initialize at runtime right so at first I value is zero condition true enter here then J value is zero condition true enter here scan of percentage the address of a of I value 0 J value 0 address of a of 0 0 0 0 mean means this one so whatever you will give that would be assigned to this block like I'm giving one now first of all j++ because we are in this inner loop now j++ J becomes one condition to enter here again now a of I I is zero still but J is one so now I 0 1 this cell you can access so now whatever you will print uh you will enter that value would be stored here because we are getting address of this cell so suppose I'm entering one again so one would be stored here again we are still into in this inner loop so j++ that is two again condition true enter address of a of I is still zero but J is two 02 02 this cell so whatever you will enter that would be stored here that is suppose I'm entering two right now j++ J becomes three now condition true 3 less than three no exit from the inner loop but still we are in outer loop that is I ++ now I becomes 1 condition true again enter here again J would be initialized with zero and same J would be repeated three times for this row right and once I value becomes then two condition not exit from the loop and this is how we will initialize at run time this is how this this working of nested Loops right so now I hope you are clear with the run time and compile time initialization of 2D array so in the next video we'll discuss what uh memory representation of 2D array as well as how to access elements of 2D array and that that in that video only I'll show you all the things like on my laptop practically we'll take one example and practically I'll see I'll show you the Declaration part and initialization part as well as how to print an array and how to take this this uh how to take values or how to initialize array at frun time right so now I'll see you in the next video till then byebye take care