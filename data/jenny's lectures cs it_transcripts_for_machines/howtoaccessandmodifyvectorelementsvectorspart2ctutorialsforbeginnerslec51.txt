hey everyone I hope you all are safe and doing good so in the series of learning C++ programming language we are discussing now vectors in C++ the previous video was uh you can say like introduction to vectors how to declare a vector how to initialize a vector that thing we have discussed now in this video we'll see how to access elements of a vector right and how to modify a vector these two things right so let's start we'll just make a new file so we we have created a new file now first basically we will include IO stream header then if you are using Vector then you have to include Vector as well right and yeah before main we will be uh using that Nam space as well including that Nam space which name space STD right so let's create a vector first there are many ways this thing we have discussed in previous video right how to declare a vector how to initialize a vector right Vector in bracket that object type see Vector is whatever Vector we are creating that is a you know that is an object because Vector is a class here right so we are creating a vector number so it is acting as an object here in C++ right okay now I'm initializing with an initializer list like an array so I'm just taking some values in this Vector fine now how to access these values same in an array how you access just provide index in those subscript so that is one way here so see out the name of this Vector that is numbers and in the subscript index zero index I want to XS right I mean the first element return zero and let me just show you it should give you three see element at index Zer is three right so you are getting right out output but the problem with this method is what it will not provide you bound checking like if you want to access at index 0 1 2 3 4 final indexes four but if you want to access element add index 10 and I provide here but there is no element at index 10 so ideally it should give error or exception but it will give any garbage value C right so there is no bound checking here same with ARs if you use this formula this operator to access element right but there is another way to access the elements which is we have an member function at that member fun function provide uh bound checking right okay now let's see element at index x0 is this but there is a second way using at member function so element at index zero is and we are using that at index function sorry at function so Vector name dot here at and here in this round bracket you provide that index zero right so both will give three and three let's run this c three and three okay for a new line we can just add here endl or slash right it's fine but this method provide bound checking if I access here element at index 10 and at 10 if I write right let me just comment out this thing now it will give it will throw an exception right out of range see uh this is out of range exception is throwing C Vector this check which is 10 but it is greater than or equal to the size which is five actual size is five so it should be less than or equal to five sorry four not more so this provide bound check this is how we can access element now one more method is directly if you want to access front and back element so we have two more uh member function front and back why I'm calling this member fun function because Vector is a class and this numbers this is actually an object so whatever the function in that class we can use those function those are known as member functions and those member function we can use with the help of this object right right so let me show you see there are many functions we can use with these vectors so if you go through this side like cpv vector and there is a site C+ plus.com right here you will get everything about vectors and what whatever function member function you can use on vectors c 1 by1 you'll get everything right so these are the function we can use on vectors right see this thing we have seen in previous video size and capacity these two things right how they are going to work element access for element access using this operator you can access using at we can access right this thing we have seen now front and back X is first element this x is last element how to use if you want to check you just click on front and it will give you the complete detail X is first element it will return a reference to the first element in the vector right and how to use here we have an example so you can use this let me just show you here if I want to access the last element directly last element in this Vector numbers is how to call back function Vector name dot the function name is back and that's it right andl so let me just comment out this line and if I run this it should give four right because the last element is four so it is four so directly if you want to access front and last element we can use this thing for front same we have front function first element for first element so for first element you just have to write here front so it will give four and the this will give three right so last element is four first element is three so this is how you can access elements now how to modify if you want to modify this Vector using at we can modify yeah if I want to modify like the element at index one the second element so how you can uh update this thing modify this thing numbers the vector name dot at at at index one I want to make it 10 now we will access element at index one is at one so let me just comment out these two line and at first it was Zero but now we have modified it 10 so this line should give 10 right let me just run this so element at index one is 10 this is how you can modify any element right using at or if you want to ask from from the user that also we can do like I just want to declare a vector of size five right so enter element of vector Five Element you want to enter so just use a loop like for Loop because I don't want to repeat the same line again and again from zero to till Vector size so I should be less than vector a size how to calculate numbers dot we have a function size and that's it and then I ++ right and here just see in numbers and at I these five elements it will take right so let's run this enter Vector elements of vector 1 2 3 4 5 right and element at index one is see 10 it is showing me 10 because actually it is two but it is showing 10 because we have updated this thing modified this thing using this line right and if you want to print elements whatever elements you have entered in this Vector then also same we can use for Loop like same line it will iterate from 0o to numbers do size and yeah I less than numbers do size right and I ++ and then we can just simply print C out and uh with the help of at function I want to print at I right just format it a little bit with endl right so first it will ask numbers element of vector then it will print those vector and then after modifying this it will print the modified value at index one right okay now enter 1 2 3 4 45 or five element of vector are these but element at index first is 10 because we have modified that element right so like this here we have different different functions in this Vector right so you can just go to this side and you can check all these functions you can try out these functions right the element XS these are modifier push back we have used right and in next video we'll see some more function member function of vectors right so that's it for this video now I'll see you in the next video till then byebye take care