so in the series of learning c programming we are discussing recursion in c in the previous video we have discussed what is recursion with one example like one problem is given which is containing recursion and how to solve that problem right but that method was little bit lengthy if a recursion program is given a problem is given that is having recursion in any competitive exam like in gate exam net exam then you don't have much time to follow that approach so here we will solve this problem the recursion problem with second method with this method you will take very less time to solve the problem which is having recursion like this this problem we are going to solve right now before that is going to tell you one thing if you are preparing for gay 2022 exam will be preparing for this exam then an academy has started a rank improvement batch for gay 2022 aspirants in this past the top educators will take practice sessions on each subject followed by a subject test and analysis session of the subject test in a live session so this batch is mainly designed for the learners who are preparing for gay 2022 exam all your doubts related to the topics will be clarified during the sessions in the course and the course will be conducted in hindi and english and they are also going to conduct a test scholarship test for gate and escs parents on 24th of october so you can take this test for free and you can also win a chance to be mentored by the best faculties at an academy it is like all india live test you can compete with the learners from all over the country and get all india rank and you can perform at your best and stand a chance to win personal guidance and scholarship and after the test you can get indepth topic wise analysis of the test to help you know to improve your weak areas so just have to enroll for this the enrollment link i'll put in the description box for this video and use my code jkl10 to unlock this test you can you know pick the right test for you and just click enroll and one more four month subscription is there for gate and esc 2022 aspirants what you will get in this four month subscription you can see the detail on my screen so it's like the best pick for you guys and if you will use my code jkl10 you will get extra 10 discount on this subscription so all the relevant links and the details i'll put in the description box of this video if you are interested you can go and check out so now let's see how to solve this problem this this is like you can say a program to print sum of n natural numbers like here we are passing sum is equal to five so it will print sum of one five natural number like one two three plus four plus five if you pass a tenth it will print sum of ten natural number up to ten natural number right so now yeah here here better to write here like we will write we are using variable x so we will write here rather than a because a is local to this main so if you use here a it will give error so return x and here also we'll write rather than a we are writing x we are taking variable x right i hope that's fine now now see so we will solve this problem with the second method that will take less time so what is the process first of all the control will go to the main function right i hope whenever the program would be executed that would be you know located some memory into the main memory in three section one is four section one is stack memory one is heap memory right and you can access the program can access like whatever the variable we are going to create here the memory will be directly accessed from the stack memory you cannot directly access the memory from the heap area that memory we can access using pointers like when we dynamically locate memory using malloc and calo obviously using pointer then the memory would be located from the heap area i hope you know this basic concept right now first of all main so some memory would be allocated to this main function like one stack frame would be you know hold for this main memory so here we have a variable a there is nothing in this now a is equal to some phi we are calling this function of sum 5 so it will search for the definition here we have the definition so we are passing 5 so simply we can write here sum we are calling we are passing 5 so we are calling this now x becomes x become 5 here now here we have s is equal to zero so whatever we are going to execute that we will write here the statement we will write here right so now here s okay we have s variable and that is zero now if x is equal to equal to one this condition is not true so we are not going to enter into this if block i am not writing any curly braces if you do not write curly braces means by default only one statement written after this if would be considered as part of this if block only this return x would be part of this f right so now we are not going to enter into this if now after this we have the statement s is equal to x plus sum x minus 1 so again we are calling this function right so what statement would be executed x plus this now x value here is what 5 5. so 5 plus sum x minus 1 that is 4 again we are calling this function so whatever you are going to execute that statement we will write here again x is equal to 0 x 1 no condition is not true so we are going to execute the statement now x plus this now is this time x is what 4 we are passing 4 so x is 4 plus sum x minus 1 that is 3 4 minus 1 that is 3 now where we are again calling this so whatever we are going to execute that will right here so again this condition is not true so x x is 3 3 plus we are calling again sum but x minus 1 that is now 2 now whenever we will call whenever now this time we will pass 2 so what statement will be executed this condition not true again x plus sum 1 2 minus 1 1 so now we are passing we are calling sum 1 so now this time x is 1 so now whatever we will we are going to execute that statement we are going to write here now c check x is equal to equal to 1 yes condition 2 this time this time x value is 1 so now which statement would be executed return x so return x value is what 1 return 1 so now control will be where back to where you are calling from where you are calling this one right this time this statement would not be executed right now from where we are calling this the statement uh this someone the so this return would be where here back we are going to be no you know we are going to be in backward direction in the same process in the same flow so now return 1 so 1 would be this would be replaced with 1 so 2 plus 1 becomes 3 right now where this would be returned here because from here we are calling this one so sum 2 now this this function call becomes 3 so now here this will be replaced with 3 now 3 plus 3 is 6 and this would be back to here because from here we were calling this one so 6 this is 6 6 plus 4 is 10 now this 10 would be backward from here we were calling this some 4 so this 10 the sum 4 will be replaced with 10 10 plus 5 is equal to 15 right and now 15 would be back to here sum 5 from where we were calling the sum 5 from the main function so what value would be returned back 15 so here it is 15 so now a what value would be store 15 so it will print 15. that's it you just have to write down this thing and simply after reaching the base condition this is the base condition simply go backward in the same direction that's it it will take less time rather than you know keeping that stack and each for each function call one frame and everything that would be lengthy process right this is very easy and you know very simple process less time consuming i hope you go to the working of this program how you are getting the output right if you are not getting this one it's okay this happens with everyone it's little bit tough if you practice some programs if you practice this process with 5 or 10 programs automatically you will get it right so if you're not getting right now it's okay you can watch this video again you can practice this you can pause this video you can write down this program on your you know pen in your copy and you can just practice it at your own if you are still not getting you can watch the video again and you can again practice after practicing 5 or 10 programs you will get it right see we are we are returning this this like 3 plus sorry 2 plus 1 3 3 would be returned here now 3 plus 3 is 6 now 6 will be returned here so the 6 is what 6 10 15 this is what s sum this variable right and after this we have the statement return s so if you you know you know watch out this code also then also you will get it so return s this statement is returning this 3 then 6 then 10 then 15 and 15 would be returned here finally right because we are again we are still writing uh one more statement that is return is return this sum fine so on the next video we will see types of recursion right so i'll see you in the next video till then bye take care