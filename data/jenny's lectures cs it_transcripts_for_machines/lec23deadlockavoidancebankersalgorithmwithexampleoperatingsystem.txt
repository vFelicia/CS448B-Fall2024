right deadlock we have discussed one approach for deadlock avoidance that is using resource allocation graph algorithm that algorithm is basically used when each resources having single instance so when resources are having multiple instances then it's better to use bankers algorithm and second thing wireless is known as bankers algorithm because this algorithm could be used in banking system so that banks never run out of the resources or you can save money and always be in safe State so this algorithm is to be followed in banking system also now say to to apply this algorithm to apply this bankers algorithm what should be known what what see as we know that forwarding a deadlock some additional information is required fine now for applying this bankers algorithm what is the approach what should be known in advance three things first thing is first thing is see how many instances of each resource each process can maximum request fine so you can say that that maximum request of a process how many video sources particular process can request at its mix fine and this is denoted with this makes array it is a 2d array okay next is how many instances of each resource each process currently holds currently how many resources each processes holding or you can say allocation this is known as allocation of resources how many resources are currently allocated to each process so that is should be you know denoted with this allocation matrix or you can say it is a 2d array allocation 2d array and the third thing is how many instances of each resource is currently available in the system okay and this is denoted by this 1d array that available the name of that is that arrays you will take the name available fine this is one day array this is 2d air and this is will take 2d any when you'll write you know that code for the spanker cell good fine these three things should be known to apply Rinker's algorithm so now we'll discuss bankers algorithm with the help of this numerical in exam they generally give you consider the following snapshot they'll give you this kind of thing and they'll ask such type of question they can ask what is the need matrix and second thing is is the system in safe state and if yes then you have to find out the find out the safe sequence now what is the safe state when the system would be in safe state if by applying ink bankers algorithm you check if you are able to execute all the processes without going into unsafe State then you can say that system is in safe State and then you have to find out the safe sequence in which sequence in which order you execute these processes so that system remains in safe state that is known as say sequence fine so first of all we will find out need matrix see we have a location matrix may have maximum maximum means see we have discussed this in deadlock avoidance that this additional information would be required to avoid deadlock and that additional information is each process have to declare initially that how many number of resources it will need at mix to a completed execution so this is the maximum matrix for each of this process see here ABCD are a source type a may be you can consider CPU B printer C's Kennedy is memory something like this and these numbers are instances of these resources means this allocation CP note has been allocated 0 instance of resource type a 0 instance of resource type B one instance of resource type C and 2 instance of resource type D so these are instances fine and you are given the currently available after the a location after the allocation of resources to processes how many number of resources how many instances of each resource is available in the system this is the current availability fine sometimes they can give you total number of resources in the system they will not give you this available they will give you allocation matrix maximum and then they'll give you total number of resources available in the system and then you have to find out available number of resources find have to find out this available if total the sources are given see total resources they will give and out of these total you can sum all the allocation resources so out of these total these number of resources has been allocated so you can do total this total location and then you can find out the currently available resources right now just say how many resources are has been allocated see a resource type a how many instances has been allocated total 1 plus 1 6 plus 3 9 so you can find out total number of resources see currently available this one total allocated resources of this one so when you find out total resources then this plus this 2 plus 1 is 3 instances of resource type a 9 plus 5 is 14 instances of B 10 plus 2 to L and this one is today so total resources in the system are this one out of these resources these are allocated and these resources are currently available means these resources are free right now right now first thing is you have to find out need matrix need means how many resources how many instances of each resource type each process need see we know the maximum number of each resource type for each process and we know the allocated out of these maximum allocated resources are this one so need need would be what this maximum a location so find out need matrix maximum and allocation of this one so need matrix B 0 minus 0 0 1 minus 1 0 2 minus 2 0 for this one maximum is 1 a location 1 1 minus 1 0 7 5 0 2 minus 1 1 3 minus 3 5 5 6 2 so this is the need matrix fine the formula is obviously if you if if you apply the common sense then no need to use this formula obviously so you know the maximum resources need you know the allocated resources see in previous video I have taken that example of guest and all so see you have the maximum need is the maximum need of your s 10 glasses and currently allocated glasses or you have six glasses so need of us 10 minus 6 that is 4 so say maximum allocation that is your need matrix sometimes they can ask you find out the need vector of process p1 find out the need weapon for process p3 something like this so first question is over this is the need matrix now you have to find out is system in safe state now we apply bankers algorithm see currently available resources are this one now you have to check with these currently available resources can you satisfy the need of these matrices one by one we will check will start from p0 check out need of p 0 is 0 0 0 0 currently available are 1 5 2 0 can you satisfy this need yes obviously we can satisfy need of p 0 fine if you can take next also see need of this matrixes it needs 0 instances of a we have one yes it needs 7 instances of resource ty B but we have only 5 so we cannot satisfy a need of this matrix this matrix need one instance of a we have 1 0 0 5 2 to see this in matrix this process needs 2 instances of resource type B resource type D and we have only 0 instances of day so you cannot satisfy this need also next is zerozero see this requires only two instances of the source type see we have two instances so you can satisfy this need also system can satisfy this need also what about this one see this need six of the source type bbut we have only five so you cannot satisfy this need now if you write the safe sequence you can also execute this end system or you can also execute this one it's up to you so see if sequence can start from p0 also and from p3 also so the it's not a rule that safe sequence should be unique no you can have more than one safe sequence of a particular snapshot fine of a particular situation you can say and I'll just move by this number by the order of writing of these processes so first of all I'll execute process P not fine now if you execute this P note C it requires zero zero zero zero obviously we can satisfy this need now next thing what you have to do is you have to add in that is this currently available you have to add the location of this p0 because once all the resources has been allocated to p0 then P note in complete its execution after and after a finite amount of time it will release all its allocated resources fine and when the all the located resources will be released then those resources will be added to the available resources yes so check out the locate allocated resources to P note 0 0 1 0 so we will add these resources to our available resources right this thing you have to keep in your mind because many students usually make mistake in this thing what to add in this available resources the need or the maximum or the location we always add what a location because obviously when a process finishes its execution then it will allow it will release all its allocated resources fine so add these resources 1 plus 0 1 five two plus one is three and here we have two now currently available resources are this one and we not got completed now with the help of these resources check out which need you can satisfy now this one is done now you have to check out out of these need now P note is Len will check with P 1 P 1 require zero instances of this one p one requires seven instances of B but we have only five instances where we cannot satisfy this need move to the next one one yes we can satisfy zero zero it requires two of two instances of D we have two so basically we can satisfy this need because currently available resources are greater than this one fine either greater than or equal to then we can satisfy that need so now I will write P 2 in safe sequence fine P 2 now these resources can be allocated from these available resources to people fine now P 2 will finish finish its execution and release all its allocated resources now what you have to do is in these currently available resources you have to add a location a location they're located resources of P 2 allocated resources are 1 3 5 4 so add in this one 1 + 1 2 5 + 3 8 5 + 3 8 4 plus 2 is 6 now we are done with two processes now next this one is done now check out for this this need 0 0 it needs only two instances of C we have eight instances of C then obviously we can satisfy this need fine so next SP 3 now after these resources will be given to this process then this process will finish finish its execution and release all its allocated resources now all you have to do is now what you have to do is available + allocation 0 2 + 0 6 plus 8 is 14 3 plus 8 is 11 6 plus 2 is 8 now this one is also done remaining is only p4 and P one check out for P for you can also check out for p1 it's up to you that is why I am saying safe sequence can be more than one fine I'm just going by the order of writing zero it needs six instances we have 14 yes we can satisfy it needs four we have eleven it needs two we have eight instances yes we can satisfy this need also now you have to check what now you have to do this currently available plus a location resources because after executing its plus after execution it will release all its resources then a variable would be 214 11 plus 1 is 2 well 8 plus 4 is 12 now p4 is also done and the remaining is now even obviously you can satisfy this need out of these available resources now when the p1 finish its execution then it will release all its resources now add in these available allocation resources 2 plus 1 is 3 14 12 and 12 so these are now total number of resources fine see and this is the safe sequence you have executed all the processes that is why you can say without going to unsafe state you are with the help of these available resources you are able to fulfill the need of all the resources so you can say that system is in safe state so answer is yes and the safe sequences this one now you can tell your answer see total available resources work three four 14 12 and 12 and now after executing all the processes the resources available are three fourteen twelve and twelve so this and this one is same so you can say that you are going right so this was a safe sequence for this numerical now if you write the bankers algorithm in step step by step then how we will write this bankers algorithm where you can see the safety algorithm see first of all what is the input for this algorithm input should be number of processes should be given second thing is out of these three allocation matrix or need out these three any pour should be given see any two of out of three maximum need or allocation see in this numerical only allocation and metrics was given sometimes they can give you a location plus a location and need so you can find out maximum you just to a location plus need and you will find out maximum or they can give you maximum and need and you can find out a location how makes Emma need that we will would be allocation so any two of these three third thing is available either available even all total number of resources should be given either available or total number of resources fine now what is the first step in first step we just take when you will write a code then you will take a flag variable and that flag variable should be zero for all the processes flag of I should be zero for all the processes and I should be from 0 to n minus 1 here n is what n is number of processes so flag of all the processes should be 0 initially fine next thing you will find out need metrics or you can say if these two are given then you will find out maximum but generally they give a location and maximum so find out need metrics need of nm am is number of resources so need would be 2d array maximum would be 2d and allocation is also 2d array now how to find out need matrix maximum allocation fine next step is now after finding this new matrix what we have done next step is what find a process P I such that such that flag for that process is 0 fine when you write the code then write something like this so you can write a for loop for I is equal to 0 to n minus 1 and you will find out a matrix if flag you can write down the situation if flag is equal to 0 and and need of that process need of I is less than equal to available fine say need here we are where we are able to satisfy this need because this need was less than or you can say equal the available resources we have so flan should be zero plus second condition is need should be less than equal to available for that matrix fine next step is if such process exists or if such I exist then what you do then what we have done in this case we find out that we are able to fulfill this need so this kind of high exists right if this I exist if this true then what you will do you will do flag for that matrix 1 or you can say trim and and what you will do available plus available available plus the a location here you can write allocate what you can see a location of that process fine this 2 thing you will do and and again go to step 2 again go to step 2 find a process P I such that these conditions are true because see we have done for P 1 then we have done for pu p 0 then when P 1 that P 2 P 3 and P 4 so again will repeat these steps fine until what until what until flag of all the processes becomes 1 because if flag is 1 if flag is 1 then you can say all the processes has been executed and you you reach to a safe State and you find out a safe sequence so go to step 2 otherwise otherwise go to step 4 what is the fourth step so finally the fourth step is here I guess even write one fine if flag of I flag of I is equal is equal to 1 for all the metrics for all the processes or you can say for all I then you can say system is in safe state otherwise otherwise and say state fine so we will repeat this loop repeating means obviously when we are solving this example after execution of p 0 we have examined this P 1 then P 2 then P 3 then P 4 P 5 like this right so will repeat this loop and after executing all the processes just check if flag of all the processes is 1 it means all processes has been executed successfully then you going to system is in safe state otherwise if any of the process is having flags zero then you can say the system is in unsafe state okay so this is how you can write down bankers algorithm you can modify it according to yourself you can just take a flag in instead of flag you can write down F and something like this fine this is or you can say this is safety algorithm in Kelvin also it is given but they have taken some work and finish so you can also go for that thing now the time complexity for this this bankers algorithm is theta n square m here N and square means number of processes and M is number of resources the time complexity in complexity would be theta n square and fine so in next video I will discuss with you and more numerical and we will discuss one more algorithm that is given in your Galvin also that is a resource request algorithm we will discuss that algorithm with an example fine so I will see in the next video till then bye bye take care