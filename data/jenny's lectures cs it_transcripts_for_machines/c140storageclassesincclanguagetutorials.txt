so there is one more concept left in c language that is storage classes in c but this is different from c plus plus concept class object concept and this is different storage classes in c so in this video we'll talk about everything about storage classes what is storage class types of storage class properties how to use storage classes in your program why we use it if you use storage classes class in your program then you know how to use it and what it will tell about our program right everything all this now every single detail about this thing will discuss in this video with the help of a program also right i'll show you practical but before that i just want to tell you one thing this summer geeks4geeks is going to bring back fun to your screens with the biggest virtual event in 2022 presenting geek's summer carnival so experience fun excitement entertainment and games and also get loads of discount goodies and various other cool stuff to relish this carnival in its truest form geeks for geeks is inviting you to experience starters before the main course starting from 26th of march there are going to be various tickets that definitely you don't want to miss out with these tickets you get the best of the courses at the best prices so let me share some more details about the same one ticket is of rupees 2000 and what benefits you will get here doubt assistance for three months plus premium quarterly with this ticket and you will get dsa at the lowest price ever second is of 5000 and here you will get doubt assistance for six months plus premium plus quarterly and your ticket to get one of the best gfg score cip at a huge discount next is of 8 000 rupees and in this what benefit you will get premium plus yearly plus goodies tshirt pen mask stickers kitchen and much more so it would be easy and budget friendly entry to any of the live courses of gfg and here you will also have a chance of wall of wishes like you can wish for any course fill out the detail and you can send requests if you want to you know explore more if you have any you know a question then you can go to the faq section frequently asked question and you can see the answer of these questions maybe you'll get the you know answer of your question so this summer carnival is all about enhancing your skills so definitely you don't want to miss out an opportunity like this so all the links relevant links and details i'll put in the description box of this video you can go and check out now let's see what is stories classes and see see when we declare any variable in c how we declare like int a something like this and if you initialize this variable like this a is equal to 10 then what this line tells about this variable like name of the variable is a value what you are going to store is 10 and which type of value the type the data type this thing this is type of the value you can store in this variable three things it is going to tell right so basically a variable now next thing is see a variable is associated with basically two things one is type and one is storage class so this type means the data type this thing it will tell the you know type of the what type of value you can store at the data right obviously name this will tell right now what is this storage class now another things associated with this type of this variable is what like if i don't i'll not initialize this thing into a then first thing is what default value it will take right some other things or some other points which are associated with this variable right next is what location where this variable would be stored in ram or in register yes you heard it right we can also store variables in register no not we can store it depends on the compiler right that also i'll tell you so third thing is you can say the scope of the variable we have heard about local scope global scope right where you can access scope means where you can access this v this variable from where this variable can be accessed the scope right next thing is what you can say the lifetime lifetime means till when you it's like till when this variable is alive like within a function suppose i'm writing a function 1 1 and here i'm declaring a variable in x is equal to 10 and this is end of this function so the lifetime of this variable is till here till this line till the termination of this function after this you can say this variable is dead this variable is alive till here we can access this variable throughout this function but after this it is dead so this is you can say the life of this variable right now what thing will tell these properties of this variable because this end will tell only the type which type of value it can store right so what extra thing which is associated with this variable will tell about these things like the default value of this is what where this variable would be stored the scope and the lifetime these things would be told up by the storage classes yes and where you will write stories class here before the time now we have four type of stories classes see koto resistor extern and static right and these storage classes will tell these things about this variable right now see we have done many programs we have written many programs till now but we haven't used these kind of things right so our program were right so by default if you will not write anything here by default compiler will associate a storage class with it that is o2 this by default so if you don't write anything this is fine if you write something like this auto int b this is also fine this is also would be considered under the storage class auto this will also be considered under storage class o2 so explicitly if you write this keyword that is also fine if you don't write that would be considered in auto storage class right now now see i hope you aware about these these things default value like if you don't declare this thing if you don't initialize this thing so sometimes it will take 0 default value sometimes this will take garbage default value right when you print this so it depends on these storage classes which storage class you write here according to that it will take default value so i guess you do not have any uh confusion and default value location means where we are going to store this in register or in uh like ram main memory now scope is one where you can access this now scope is also for you can say mainly three types block block function and one is function or you can say method or one is program three type of scope a variable can have depends on the storage class you use how to use that also discuss right and which storage class is having which scope that is that also we will use but first of all you need to understand what is block scope what is function and what is program scope this is very important first of all otherwise many students get confused in this scope especially in this point right and life time also i guess you have idea like till when we can access that variable one variable like global where we are we declare a variable globally then you can access that variable till the end of the program right so this is what you can say life of variable basically scope is you need to understand now block means what something you write within these curly braces that would be considered as block function you know any function we can write like void add this and this this is function scope this is what function right you are defining this function so this is block anything which is in curly braces this would be considered as block it's not compulsive that we write this thing after the function only in programming anywhere we can define a block let me just show you one example of this these three things let me show you example one by one see i am writing a simple program here see in main first of all i am taking a variable into a is equal to ten then this then here i am taking int a again is equal to 20 and printf so this would be what i am considering inside block and i am printing this value of a and after this also i am printing value printf percentage d a so this would be considered as this is what block so this variable this a this this is not duplicate thing because this is yeah this is what functions go this is main function so main function scope is from here to here this is function scope within this functions for we have a block also so this this a is having this block scope within this block only we can use this a so what it will print inside block and this a it will print 20 the value right it will not take this one the print of this statement this would take value which is closer which is you know close to this a now close to the size they say or the same this value right so it will print 20 within this block and this printf this a will print what after this block this a the life of the says no it is dead you can see we cannot access this a this value 20 outside this block so outside this block this is this printf is within this function so in this function we have do we have declaration of a yes a is equal to 10 definition you can say this 10 value so it will print 10. so this is this is having this function scope this is having this block score right again if i write one more function like void fun so this a is having this function scope this is what function scope this is function so this is function scopes this a we can use throughout this function so this a will print 30 right now again suppose here i'm here i'm writing one more block after this block one more block and in this block i am just writing printf percentage d and a plus plus that's it and after this again printf percentage d a and after this line i am closing main function after writing return 0 right and within this function i have this thing and one more i have before this main end a is equal to 50 this i am taking after the header files so this a is outside of this function so this a is having program scope throughout the program where you can access this throughout the program you can access this right now see this time what output you will get this is one block this is second block we have now block one and block two so this will give 20 right but in this block we are not declaring any variable a but i am printing a plus plus so it will not give error what it will do now this block is within this function within this function so within this block no a can we use can this we can use value of this block no the 20 would be within this block only after that it would be dead now which a value it will print which is closer to a now this value so it will take this value though in which function this block is main function in main function do we have any definition of the say this variable a yes we have a and it will take value 10 so now it will print 10 and a plus plus means now value becomes 11 now after this block again we have a so obviously this is in in this function so it will print 11 it will print 11 now and in this function obviously this function we are going to call suppose here i am going to call this function fun that's it so we are calling this function within this function do we have a yes 30 we have so it will print 30. if we don't have this line here i am just calling function here so first a value 30 you will get 30 after that within this block yes 20 you will get after this now what value it will get there is no declaration within this block now in this function also main also we have no declaration of a now see it will check globally do we have any a value yes we have a is equal to 50 globally so it will access that value so it will print now 50 and a plus plus means this value now becomes 51 in memory and again it will print in this function we don't have any a from this function it cannot use the value so what value it can use if we have any global declaration of a that value it can use do we have yes we have that is 51 so it will print now 51 right if we have suppose in a also and b also b is equal to 10 so within this function obviously we can print percentage d b so it will print 10 but in this in this main function if i want to print like printf percentage d and b this line will give error because this b is undefined undeclared variable for this function this b is having a function scope within this function only after this function this b is dead we cannot access this b on in another function if we have any global b is equal to ah suppose hundred then it will print hundred then it is fine but this b within this function b value would be 10 and this b would be print would be taken as the global value so i hope now you understand the block scope the function scope and the program scope right so now let me show you practical of this thing see we have this program first of all i'm not going to take this global one we are taking in in main i'm taking a variable a i'm resizing it with one and i'm taking a function function one i'm calling that function here in function one the definition is a right now within this we haven't blocked this this block within this block also i have one a value is done 10 and i'm printing the just a value second block i'm just printing a plus plus no declaration of a and after this block also i'm going to print percentage d and a right and let's suppose here we write inside main this is inside block one and here i'm writing inside block 2 this is block 2 right and i'm just printing a in function 1 also i'm printing a so let me just show you the output here no global variable i'm declaring right i am just taking the blog scope and function scope variable of a fine now see okay this warning we are getting because before calling we haven't declared we haven't give the prototype of this function so let me just leave the prototype here void one one that's it right and now let me just run this again and show you that see now let's see what output you are getting here first of all inside function 1 we are calling function 1 and it is printing 23 we have 23 in function 1 then inside block 1 we will get value 10 value 10 now inside block 2 which value we don't have any declaration of a so in function yeah this block is within main function in main function we have value 1 so it will print inside block 2 1 not 21 its value is 1 2 is of block 2 right now this this a will print one now a plus plus means this value one becomes two now this printf this printer will be uh print value inside main and value two i hope now you are clear about this uh scope let me just inside block two right and now we are not taking this one we are taking a global way right now let's see what output you will get let me just run this again see first same inside function 123 inside block 1 10 inside block 2 now which value the global one we don't have any value in this function so so it will search for the global value global value you do we have yes a is equal to 50 so it will print 50 and inside main this also will access this global value because we don't have any value of a within this main function so 51 right now if in this we have in a as well as we have b is equal to 89. so i hope now all the properties of this like default and whatever properties storage class will tell default value storage uh like the location and the scope and lifetime is clear to you right basically scope is clear to you blog function and this global scope i guess you will not be confused in this type of thing now right sometimes they ask an interview also there's these type of questions within this block also they write this thing within this block they'll read this thing but they'll not declare anything here so what value it will print whether it will first of all it will search for the function scope value if you don't have any value in function scope it will search for global scope value then it will print right so this is very important so in the next video we will see the types of stories classes and i'll see you the next video until then bye take care