so in the series of learning Python programming language we are discussing sets in Python previous video we have discussed uh what is difference and symmetric difference and difference update a symmetric difference and symmetric difference update Union intersections different symmetric difference these operations we have discussed now few more are left with set like we can set we can check if two sets are disjoint sets or not subset superset right how to check these things what are the methods what are the operators to check these things right in Python and as well as we have see we have seen one method clear method right that is used to delete all the set items right but we have one more uh keyword that is not actually a method that is a keyword Del clear is a method but Del is a keyword so how Del is different from Clear method that thing also will be discussing with the help of example practically I'll show you so let me just give you a brief about disjoint set subset and superset then you will get it better with the help of program see if I am having two sets so I'm having these two set and disjoint sets are what two sets are said to be disjoint set if they have nothing in common or you can say if their intersection is an empty set right so if you want to check the set one and set two are disjoint sets or not no they are not why so because they have common here we have four here we have four so one item is common their intersection is four that is not an empty set so we cannot say that it is these two are design sets so here we have a method is designed to check set one dot is disjoint and here we can pass in argument set two so now this will give you the true or false in this case it will give false because these two sets are not disjoint sets right so this is the method to check if the two sets addition says or not now here all sorts in argument we can pass less totable that also I'll show you practically but I hope you go to what is this show and said and corresponding to this set we do not have any operator like for Union we have this operator for intersection we have and for finding difference we have minus for symmetric difference we have this right but for is this joint there is no operator so this you have to do this operation with method only right now subset if I want to check this set 1 is a subset of set 2 or not so for that also we have a method set one dot is subset and set 2. subset mean what means what we can say this set 1 is a subset of set 2 if if set 2 contains every element of set 1. that case you can say set 1 is subset of set two let me just write down this definition so this is what definition of subset if the set 1 is subset of set two if every element of set 1 is in set two mean set 2 contains every element of set one so here can we say set one is subset of set two check every element of set 1 is in set two in set when we have one is this in set two no so in this case also it will give false if I update this set something like this okay one two three and five now can we say set one is subset of set to yes because every element of set 1 is in set two so in this case it will give true so this is how you can check subset for this we have an operator set one like this less than equal to set two so this is to check this is correspond corresponding to this is subset so you can use this method also or this operator also to check if you want to check the set 2 is subset of set 1 then you can check set 2 here set 2 is subset of set one you can check it like this right so here it will give false reverse of subset is superset if I write here is super set of set two so it is reverse of subset means set 1 is known as superset of set two if set 1 contains every element of set two right or you can say if every element of set 2 is in set one but here if every element of set 1 is in set two I hope you got what is subset in superset let me just write down the definition of superset as well so now I hope you can see the difference what is subset and superset set one is super set of set two if set one contains every element of set two right so in this case if I check set one in superset of set two so we can say no it's not true it's false because set two we have many elements and in set one we don't have ten seven eight minus 10 so that is why it is not super set off if I update this something like this I have here 10 7 8 minus 10. now now we can say yeah set one is super set of set two because now set one contains every element of set two every element of set 2 is in set one yeah set one can have extra element also right so now yes this this time it will give true right and also we have an operator for this like set one and okay reverse of subset so something like this set to greater than equal to set two right so let's create a new file here so now I have taken the same set that we have discussed in previous videos and I'll be checking the set one is disjoint or not these two set so set one dot we have a method C is this joint and set two call this method on one set and another set would be passed as an argument right and let's just print what it will give it will give you the true or false right so let's run this and we'll let's see what is the output see it will give false because these are not disjoints that because we have common Jenny is common here if I remove Jenny from here see and now I'll check so this time it will give you true because yeah there is nothing common in these sets so these two sets are designed rather than this here also I can pass like a less time passing here so let's run this and see say this time also it will give true because set 1 is designed with this yes there is nothing common here but if I update this thing if I add here chin let's run this now this time it will give false because we have common Jenny and genuine so this is how you can check the distance or not now next is you are checking for subset so let's check here only is subset okay set one is subset of this set or not yeah this is a list we are providing a list in argument but first of all this method will convert it into set and then we will check the subset or not so let's run this and see it's false subset means what set 1 is a subset of this if every element of set 1 is in set 2. but in set one we have Ram sham Jenny and here we have movement Jenny only Ram sham is not there if I update this one like this and if I check like this then it will give to you yeah now every element of set one is in this set yes there can be extra element also right and rather than this you can pass here a set I'm passing like set two so this time it will obviously it will be false right and we can also check with this with the help of we have an operator less than equal to set to let's run this both will give false this will also check this subset or not so with the help of method with the help of operator we can check right and if I check something like this set 1 is subset of set one let's see now this is true the second one this okay this is now true every element is subset of itself because according to definition the set one contains every element of set one yeah that's true now we'll check for superset so is superset off set two this is a reverse of subset set one is superset of set two if every element of set 2 is in set one or you can say set one contains every element of set two so let me just update something so what output you will get here let's run this and see yeah true set one is a superset of set two see now every element of this set to set to where we have two element G and Akash is in set one G and Akash yeah in set one there can be extra element in Z1 so that is why set 1 is super set of set two but set two is super set of set one that is not true that is for false right because in this case it should be every element of set one should be in set two but that is not a case here right and same if I check set one is super set of set one itself yeah that is also true okay for this also we have an operator that is reverse of subset so that is why it is reverse greater than equal to okay foreign set two same both would be true in this case also okay so superset subset disjoint this is how you can check now we have one more uh sorry keyword is not method Del see then let me check first clear if I want to clear all the element of set 2 so what I can do on set 2 I can call Dot clear method right and if now I print set 2 clear will remove maybe new set how 50 or 100 entries and you want to clear all the entries so you can use this method so now set 2 becomes an empty set C this is what an empty set okay we have cleared everything from set to but rather than clear see if I use here Del set two okay this will also delete every element of set to but it will delete set also let's run this see you will get a name error name set to is not defined in line number seven set 2 is not defined line number seven set two is not defined because in line number six only we have deleted this set so we have deleted the set items as well as set there is no set to now but clear will delete only set element set items set is still there that is an empty set so you can and I know uh another increase in that set but here we have deleted the set as well there is nothing so you have to create another set that is the difference between Dell keyword and clear method so I guess that's it about sets in Python I know you are thinking ma'am we are learning Python and so why you are going deep down in the set theory but this is just basics we will be using sets in Python further right set server basically it will contain unique elements so when you want unique element then we'll use set list of these unique elements right now you should know these are some Basics operations on set I think you must know like how to add element in set remove how to discard any element how to you know what is clear what is pop what is tell unionhead section these are just Basics so you should have some idea about these things right so now that's it about sets in python in the next video we will see Loops we'll be starting from looms right so now it's in the next video till number bye take care