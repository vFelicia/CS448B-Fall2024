hey everyone I hope you all are safe and doing good so in the series of Learning Partner programming language today we are going to work on a project and that is we are going to make a calculator right okay it's simple one we will be implementing only four operations like plus minus into and divide but it's a little bit tricky like okay now first thing let me just show you what we are going to make what kind of output it will show you okay let's run this first okay so whenever you run that it will show like it will ask first thing enter first number so I am entering like two then you have to pick an operation plus minus into and divide any operation like uh Plus then it will ask for second number second number is suppose four so it will give 2 plus 4 is equal to 6 the addition then it will ask like enter y to continue calculation with 6. if you want to continue the calculation for the calculation with this output or you can start a new calculation so you can press n to start a new calculation or if you want to exit then you can press X right so I want to continue with though with six so I will enter y so pick an operation okay it will ask like minus so it will ask for the next number next number is suppose one so it should give 6 minus one five see it is giving you 6 minus 1 5. right same if you want to continue again with this 5 then you can press y otherwise if you want to start a new calculation then you have to enter n so enter now it will ask freshly like first number second number and the operation and all right or one more thing you can Implement like if you enter y then it will clear this previous screen right and then freshly it will last enter first number like this so enter first number suppose four and then pick an operation like into and seventh four into seven twenty eight same now I want to exit so X enter X and that's it so that is a kind of thing you have to make so we will be using functions then as well as dictionaries like this thing you can do with the switch statement as well switch and if LF and these kind of like nested if else right that is also possible so I think that is very simple when you can do that thing yourself we will use here uh another thing that is recursion although I haven't discussed the recursion yet but let me just tell you briefly what is recursion if a function calling itself then it is a recursion let me just show you this thing with the help of an exam okay let's comment this code and here only see recursion is what suppose uh I am I'm having a function display only so it will take nothing as an argument and it will just print hi and within the function I am calling this one function again so C sorry I am calling this function display so control will go here now it will search for the definition of the functional display now it will print high and again within this function we are again calling this function display so now control will again go to the definition of the function then again print hi then again display again display like this so function the display is calling itself within the function only we are calling this display again so it is water recursion it would be in a loop that would be an infinite Loop so let me just show you what output you will get see it's infinite Loop like this hi hi it is printing like this okay so now it has been stopped because see the recursion error is there the maximum recursion depth exceeded while calling a python project so this is what a recursion so this kind of concept will be using this kind of not exactly this concept will be using in this project right so in detail we were discussing about recursion in later videos but I hope you got the basic what is recording that's all you need for this project right dictionary you will be using and functions right so now you know what kind of output it should show I have told you now pause the video and try this out okay I hope you have done this let's create a new file calculator project dot py I think it's sixth project in the series till now we have discussed five projects simple one so first we'll Define for function add subtract multiply and divide like add and it will accept only two numbers so two parameters you need to give either x y a b number one number two n one into any variable name you can take right and it will just return a plus b why we are returning I think you have watched the previous video the difference between print and return and why we should return why we should use this return rather than as a Sprint in which cases when we want to further use this value and yeah in this project for this project we want to use this value for that again right because we I have told you like enter y two continue calculation with the previous output so rather than printing you have to use a return right now I think it's clear to you now more clear to you like what is the difference between print and return so now pause the video and if you haven't tried this out it's okay you are doing with me so pause the video and now let's define the Four function like this same okay so now we have the definition of these four function adds effect multiply and divide now one way is you can you switch statement enter a choice enter one for add two for subtract 3 4 multiply four for divide and you can write down the cases like case one then edit the logic for addition subtraction like this and then while loop and all this thing you can also do or you can use if else if L if like this that also you can do there are multiple ways to you know create this calculator right in Python so one way we are using that one is little bit you can say is using some Advanced concept like recursion now we are going to make a dictionary in which the key should be uh the symbol like plus minus into and multiply and the value should be name of these functions exact name of these function okay so create a dictionary you can pause the video and try this out so I'm taking a name like operations and dictionary okay the way is now key is this sorry plus and value is name of the function add so this is a dictionary right now what is the like main use of this dictionary because if we will fetch according to this key then we will fetch this name of the function add right so that function will act as addition like simply no not not passing any specific name of that function I am passing this function and suppose two number N1 and N2 so if we fetch according to this key then this function would be replaced with ADD if we fetch according to the key minus then this function would be replaced with subtract then multiply and divide according to the key okay let me just show you how we are going to do okay now first obviously let's ask for input for number one so so what was the output first of all it was asking enter first number then it was showing the list of operations plus minus into multiply and then it was asking pick an operation and after that for second number right so now we have asked for first number now you have to print out all the operations this plus minus into and divide so you can look through this dictionary using a for Loop so you want to show only the keys for that we have already discussed right how you can do that thing please pause the video and try this out if you don't remember this thing you can just revise that dictionary is concept right then come to this video okay like any variable name you can take I'm taking like four symbol in dictionary name operations indict right and then simply print the symbol it will print all the symbol it will Loop through this dictionary and it will print all the keys only not values right now we will ask we will ask for the operation okay now pick an operation so that thing will be storing in this Opa underscore symbol now we will ask for second input number two okay let's see it's working or not let's run this and see first of all it is our standard first number two then number of keys pick an operation like Plus then second number the spelling is wrong so second number is 4. that's it yeah it's working fine okay so now you have to do the main thing now according to this symbol now you have to call either add subtract multiply or divide whatever this operation the user has entered according to that you have to call the function suppose I have entered Plus so now in this op symbol I am having Plus right so according to Plus we can fetch the this value add right now how you will be fetching this value see name of the dictionary and in index will file we will pass the key so the key whatever you will enter that could be in this variable op symbol right so whatever it will fetch suppose this is plus so operation deck or P symbol it will fetch add so that thing we will store in a variable calculator function okay now the name of this function is at this point of time if you are entering plus is add now add is in this calculator function so simply now I can call this calculator function and I'll just pass number one comma number two these two number number one number two whatever you have entered right and now it will the calculator function name is ADD so add number one number two so it will call this function add now it will return a plus b so whatever it will return obviously you have to store that thing in our variable so suppose I mean storing this in output now print this output so with F string I am printing like number one and then whatever the symbol operation symbol you have entered user has entered then number two and then equal to the answer is in variable output right okay let's run this and see it's working or not first number is suppose one then symbol is plus then 4 and C it's working 1 plus 4 is equal to 5. yes now till now till this we are fine but now you have to do something because I don't I don't want to exit I want to ask some user if you want to continue calculation with this 5 then press y then n if you want to start a new calculation or X if you want to exit and if I'm pressing y then it will start calculation with this 5 so now number one becomes 5 and it will ask only operation again and the second number that's it you got it right so that logic you have to implement I hope not till now it's clear to you okay so let's ask from user like let's enter y to continue calculation with the previous output so previous output is in this variable output that will that is why I am using F string right or N2 start or simply n first of all to exit okay only two thing we will implement for now so whatever you will enter that obviously I will store in a variable and suppose variable name is should continue or any variable name you can take should continue I am taking this right so and let's convert this into lower case here only because if I press Y in capital letter then it will be confused because here I am I'll write down in if only small y so if this should continue equal to equal to small y or if you want to you know consider both the cases then you can write down like should continue equal to equal to small y or should continue equal to equal to Capital y that is also one but I am just converting in this into lowercase so I'm just considering user should enter only small y if it will enter capital Y then it will convert automatically it will convert into lower case should continue equal to equal to y means I want to continue with this previous calculation right so in that case I've told you it will ask only the second number the next number and operation the first number the first number is now equal to the previous output okay fine the number one becomes this and now it will ask only this one only pick an operation and this number two right so this would be in a loop not enter first number and calculation this would be in a loop so here just put this thing into a loop I don't know number of iterations exactly so the best Loop is while loop so why but what condition you will put to exit so let's let's take a variable and any flag like I am taking continue flag the name is continue flag not continue continue flag because continue is a keyword so continue flag I'm setting first true okay now while continue flag now while true while true means now this everything below this while loop this code should be and you can say indented right so number one becomes output then again while will be here and then it will ask an operation next number and it will continue repeating this process but what if I will not enter y I will enter n so now this is the exact condition now we can flip this continue flag continue fly equal to false right and simply maybe we can print bye so continue flag becomes false here it becomes false while false means exit from the loop and out from this blue right simply print y let's run this it's working or not first number one an operation then second number then one plus three is four why to continue calculation with this 4. okay let's enter y see it is asking pick an operation minus next number is one so it will give you 4 minus 1 is 3. now at this point of time I want to exit so n and that's it bye till now it's fine but no no no if I want to start a fresh calculation rather than this the previous one then okay let's update this now here you have to modify like n two exit not n two start a new calculation right or X2 exit y to continue calculation with this output and to start a new calculation or X to exit okay fine now you have to put something here so if y then okay it's fine now if not y then it would be n or X so simply we cannot just write down else like this no so we can write down else if this should continue equal to equal to X then continue flag becomes false and buy but what about this this option n if you want to start a new calculation right so simply I am just printing one more thing just should continue equal to equal to n then start a new calculation okay now what you do you think where this control should go means start a new calculation means from starting it should ask what is first number then it will show the operations then again the second number and all so from here now what to do you will put again a while loop here no here we will using recursion so let's put this complete thing in a function that's complete okay so here just Define a function calculator and nothing we are passing here depth calculator and everything from entering number one to the last point they should be indented so this is what in this function and here we can call but first if no then first break this while loop and then call the function again because I want I don't want to repeat this while loop so first set this continue flag to false and if you don't want to exit then again call this calculator function so this is what recurs in right and else simply if you don't put this condition so simply you can write down l l continue flag is equal to false and bye so now out of these thing out of this definition obviously if you are putting all the logic in this calculator function then call this calculator function here okay and within this function also so this is what recursion but if you are using recursion this concept then you have to be very careful right to put the exact condition because otherwise it will be an infinite Loop okay now let's run this and see first number two operation is into next number four then eight want to continue with a set yes pick an operation suppose divide a number two eight by two is four point five now I want to start a new calculation then n so again it will ask enter first number three operation plus five triple five eight then I want to exit X bye so this is working only one thing is remaining you have to clear if you want to clear the previous output when you want to start a new calculation then you have to use what that concept we have done in one of my previous video so how to do that thing see okay so this thing we have also done in the previous project when we're discussing that silent option program so for that first you have to import what OS and sorry where you want to clear the screen if user enter n then you want to start a new calculation and you want to clear the previous screen so should continue fly becomes false and before pulling this calculator again you have to clear the skin so you just have to pass like OS Dot call this system this function and you have to give command so what command you need to give CLS if you're using Windows and using Windows and CLS if Linux then clear okay OS store system CLS one more setting you need to do for this project because here I want to clear the previous screen so right click here and modify run configuration there you will if you will scroll down then you have to take this emulate terminal in output console I have already take this right but in your screen it is not Tech so you have to take emulate terminal in output console and just apply and OK right okay now let's run this and see enter first number one take an operation Plus 5 1 plus pi six okay continue with previous one so yes why take an operation minus one six minus one is five so I want to start a new calculation n C previous all the previous things are cleared now now again it will ask under first number any operation like divide and second number suppose 6 0.5 and uh suppose I want to start a new calculation again so n again clear now the problem is if I enter here float number c it is giving you an error value error invalid lead Trail for INT with base 10. if you are entering 6.7 in line number 40 36 and 18. so now what you need to do because while entering the number you are converting this into int right so better to convert this into float float and same with this because as We Know with float obviously the calculation would be more more accurate like if I am entering 5 then it would be 5.0 then obviously the calculation will be more accurate there would be no problem okay now convert this into float and Float now let's run this first number four second pick an operation Plus second number I'm entering 7.8 C now 4.0 7.8 is equal to 11.8 okay X to exit now bye so this is how you can do if you want to you know play with this code and you want to modify this add some more features you can do right but this was the basic one I hope you got the working of this thing if you're not getting this it's okay you can just take a break you can just write down this thing on a piece of paper and just uh do a dry run manually okay this line then this line with this line like this definitely will get it it's not that much stuff and there are multiple ways to do this project switch you can use which case yesterday fails rather than using this functions and all right so I hope you got this project now in the next video we will see some more few simple concepts are remaining after that we will start oops concept like namespaces Global scope and local scope and all so those things we'll be discussing in the next video then we'll start with oops Concept in Python so now let's