hey everyone I hope you are safe and doing good so in the series of learning C++ programming language we have discussed Loops in C++ four Loop five Loop doy Loop and range based for Loop right now when we discussing these Loops kind of thing then we have like two statements break and continue or you can say two keywords right these are being used in Loops break and continue so in this video we'll see what is this brake statement why we use it how to use it and everything about brake statement with help of program also I'll show you practical right so first thing we will see what is break statement right and why we need this right so see as we have discussed switch case statements in previous videos in one of my previous video in this course C++ right there we have used brake to jump out of the switch case right same to jump out of a loop we will use we also use brake right now we can say it is a control statement so you can say it is a jump statement also right why this is called a control statement because it is used to control or it is used to break or it is used to manipulate the regular flow of your program or Loops whenever a specific condition is meant now what does this mean this line whatever I have said right now see let's take a real life example when you go to any amusement park there are so many like there is a you can say joint wheel right so they'll give you a ticket like maybe 50 rupees ticket and the time is 5 minutes or maybe uh you will get a 10 rounds of that joint whe right or maybe 5 minutes ride you will get in 50 rupees fine but suppose after five round because after completing 10 round that joint Feld is going to stop and like maybe uh the the the next who are in the queue are going to get on on that wheel and you have to get off from that wheel because they have complete because you have completed 10 round of that joint wheel so the termination condition of that joint wheel is after completing 10 round but because uh see sometimes after completing suppose five rounds you you got unwell you are puking and you are just screaming like hell something like this you got you know scared so in between after completing five round only in between they are going to stop and you can get off from that joint whe right now this is what kind of break the regular flow you have broken the regular flow of that joint wheel right because you you got unwell you are puking that is why they have to they had to stop that before meeting the termination condition termination condition is what after after completing the 10 round they you know usually they're going to stop right but in between you have broken the regular flow of that thing right same kind of thing if in Loops generally we use Loops when you want to repeat something suppose I want to print high five times so rather than printing five print F statement or five time like we are discussing now C++ C out statement we simply put that thing in Loop I'm just simply using for Loop you can use y Loop do y loop as you wish so the synx is like first initialization then termination condition less than equal to 5 and then update I ++ right and within this simply we can print like C out high this is the thing right so the regular flow of this Loop is what the high would be printed five time right and then the loop is going to terminate the ter condition is I less than equal to 5 but what if in between you want to break the loop What if after printing only three times I want to stop the loop then we can use break to just exit from the loop to jump out from the loop before meeting the termination condition but when whenever when a specific condition is made so you have to put what some condition something like this if this uh I becomes three then break have to use this the proper synx I'll show you right so you have to put some proper condition after meeting that condition just break from the loop right I hope you got this so the uh you have to note this point break you can use only within loops and switch State switch case statement if simply there is a program there is no Loop there is no switch case statement and you are using breake it will give error simply within if else you are using brake it will give error yeah here see if this condition is we are using this brake after this if because yeah obviously you have to put some condition in if and this is within this Loop that is why it it will not give any so brake can Al can be used only within loops and switch case statement right and it is used to jump out of the loop right before meeting uh the termination condition fine now in three ways we can use this brake statement we can use this within simple Loop like this we can use this within nested loops and we can use this within infinite Loops so these thing will I'll show you with the help of three programs right I hope you got the basic idea of break statement why we use this right so I'm working in visual studio and let's create a new file here the extension is do CPP right so first thing obviously what we need to do see this thing we have discussed already what is this iio stream why we are using why I'm using writing this name space STD so please watch out previous videos from this list right C++ so first obviously the name space STD because C andc out are in this name name space it is just to you know avoid the name for and then main function and here we will write down our logic so simple thing I'm taking first we are going to implement this break within a simple Loop right so just I'm using a four Loop right and let's initialize a variable I is equal to0 then some termination condition suppose I want to print uh from 0 to 10 numbers right or from 1 to 10 1 to I less than equal to 10 and then I ++ this thing I want to print right so within for Loop simply we can print C out and this I don't forget semicolon because I was working in Python for so long so yeah I have to remember this it's you have to put semicolon right so let's run this run this and I'll show you what kind of thing you will get see 1 2 3 4 5 6 7 8 9 10 but it's within one line and I want to print this one then in a new line then new line so we can use here endl or we can use here slash and also that is also Fine Again run this and I'll show you what kind of out output you will get see 1 to 10 but what if when the I becomes S I want to jump up the loop right so I want to break from this Loop so what we can use simply we just uh put a condition if I equal to equal to 7 then break right otherwise print I so it will print 1 to six 1 to six and if you want to print 7 as well then this see out statement you can use before this if then it will print 1 to 7 and then break but I want to print 1 to six as soon as I become seven out of the loop I don't want to print seven so see this is the break statement we have used within a simple for Loop right to jump out of this Loop so now if you want to use this in an infinite Loop let's take one more thing one more example and uh the example is suppose I want from the user to enter numbers and then some of those numbers it's not like that I want to do sum of one to 10 number or 1 to 15 number no the program will ask from the user enter a number and I enter a number then suppose I have entered one so again you ask enter number suppose I have entered again one so the sum becomes two again if you ask enter number suppose I have entered again three so the sum becomes five something like this so how many times it will ask from the user I don't know there's no fixed number of iteration as soon as the user enter a negative number it should stop and that negative number should not be added into the sum right so in this case we don't know the exact number of iteration so we cannot use full loop so better to use if you don't know number of iteration then we use while loop right so let's implement this thing and there we will uh implement this uh break statement right right so this is the implementation of break in simple Loop now we are implementing like uh this breake statement an infinite Loop so just put a while loop while one means this is true while one means true anything except except zero whatever you will write here that would be considered as true so while true right so it will ask from the user what enter a number so obviously you have to uh use you have to take a variable you have to initialize a variable suppose in Num so C in in Num variable I'm going to take this and obviously we will also take a total for some total is equal to it starting let's initialize it with zero otherwise it will give some garbage value so in starting it will zero right here we have a red line okay there's two these operators right now you have to do total so total becomes this total plus equal to whatever the number you will enter this kind of thing but whenever you have to break if this number whatever you the number you have entered is less than zero means negative number then simply break right out of this while loop and after this y Loop let's print the total then return zero for successful completion right and let's run this but there is it's there's no error but but there's a bug in this code let me show you what is the case see it is asking me enter a number right so I'm entering here one again enter number I'm entering again one I am entering now minus one or Min 6 so the sum it should give two because two number I have entered one one as soon as you enter negative number it should out be out of the loop so the sum it should give two but it is giving total is 4 why so because the problem is whenever you will enter one okay in Num we have one so in to in total we have now one now again 1 so 1 + 1 total becomes now 2 now I'm entering Min 6 so first it will do total so total is equal to Total plus num total is 2 number is 6 so it will become Min 4 and then this condition would be checked so this condition satis now it will break but this thing I don't want so you have to put this the logic this total logic after this break statement right this time it will give it will uh you know give the correct result so let me show you enter number one then 1 then 6 so see total is 2 now it's working fine so this is something like infinite Lo because this one is always true so the while this condition is always true so if this condition is always true if you don't put any break here then definitely it will be infinite Loop it would keep asking you enter number enter number enter number so to break to stop an infinite Loop we can use breake statement this is I think the most appropriate use of this breake statement to break or to stop an infinite R right so now we will use we can also use this within nested Loop let me show you that thing also okay I'll be using this in nested Loop nested Loop means if you have gone through my previous C++ sorry c playlist and there we have used uh we have discussed what is nested Loop and the need of nested Loop so that is Loop within a loop and these nested Loops are basically used to handle uh multidimensional arrays 2D array 3D array whenever you want to print that those pattern star pattern alphabet pattern so there we have 2D like rows and columns so to handle these things we'll discuss Ned Loop so Ned Loop means Loop within a loop right so let's take we have a four Loop see n we will be discussing uh in uh you know later videos in detail this is just brief Loop within a loop so in I is equal to 1 and this I should be less than three and I ++ right within this loop again I'm using one more Loop in suppose one variable is J any variable you can take I it's not like you have to take i j a b c x y z anything you can take again I'm initializing from Z J from one and J less than 5 and suppose semicolon j++ right and within this loop I want to print I and J values right and after printing both the values either you can use slash and or E and DL for new line because okay this is the case right so after this return zero so what it will print first I is one condition true so it will enter here now J is one condition true enter here so first I will print one and one it will print I and J value now we are within this Loop right so now j++ now J becomes two so again it will print 1 2 now again j++ 1 3 1 4 1 5 sorry not 1 5 because I J is less than five so once J becomes five it will stop so till it will print 14 now as soon as J becomes five exit from this Loop now out of this inner loop now we are still in this outer loop if you're using nexted Loop then the out this Loop is known as outer loop and the within Loop is known as inner loop so now I ++ now I becomes two condition true again enter here now again J is be you know J will be repeating from one to 4 so 2 1 2 2 2 3 2 4 like this these thing would be be printed you can just dry run this right just note down this thing and you can dry run this okay we'll get an error I doesn't uh name uh type i+ okay it's okay let's run this I have selected that i+ so let's run this see i1 J should be let's decorate it a little bit J should be equal to and I equal to now let's run this see i1 J1 1 2 1 3 1 4 then 2 1 2 2 2 3 2 4 something like this but suppose here within this inner loop I want to break this if J equal equal to 3 then break right so pause the video and let me just show you let me just uh tell what will be the output here in this case in comment section let's run this now what output you will get see 1 1 1 2 then 2 1 2 2 because as soon as this J becomes three break break means now it is going to jump out from the innermost Loop only it's not like that if you are using brake you will be out from both the loops no because we are using this brake statement and nearest Loop for this brake statement is this Force this whole Loop so we'll be out from the innermost Loop when you using this in nested Loop we are not out from this outer loop I hope you got this this point is to be noted right so this is how we can implement the break statement within nested Loop in infinite Loop and simple Loop right now and you can use this within for Loop within y Loop within doy loop as well as in range based for loop as well right in doy Loop also you can you can implement this thing or you can implement this thing the some kind of thing in doy Loop and there you can use breake statement so this is for your assignment you have to implement this this program this program with do wide Loop and there you have to use breake statement right and if you want to use within range based for Loop see this is the previous uh in previous video we have discussed this this thing range based for Loop this is the synx for here like we have a variable car c you can take or where you can take Auto right and here we have a string J so if you take Auto then the type of this C becomes automatically whatever the type of this string right so it will become automatically care and we are going to print C so if you run this then it will print jatri okay there is some error I have selected this thing let's run this see it will print J but what if I want to stop if you got a space then stop break out of this range B for Loop then we can use here also if this c equal to equal to a space just a space then use breake here I'm not using those curly bracket curly braces because if there's one statement only Within These Loop or within the IFL statement you can simply avoid that Curly braet right then break otherwise print C now pause the video and let me know in comment section what would be the output let's run this it will print only Jenny because as soon as after Jenny it will get a space break out of this range bed for Loop so no cut would be printed this is how we can use this break in within this range Bas for Loop also I hope you got this now if you want to draw the flow chart then you can try this out or let me just show you what is the flow chart of this break statement so I hope you have drawn the flow chart maybe it's not exactly as I have drawn but it's okay the logic you have to draw in a flowchart like how this is working the working of breake statement so first we have the condition in any Loop if you want to enter into that Loop if that condition is true then we will enter into the loop that means the body of the loop will be executed and that condition is false me directly out of the loop means the code after Loop body will be executed right now within this body of the loop you will get a condition to break from the loop if that condition is true then break statement will be executed and will be jump off of the loop means directly the code which is written after the loop body will be executed but if this condition is false then no break statement and again the body of the loop would be executed right I hope you got this fine now in the next video we'll see continue statement right so now I'll see in the next video then byebye take care