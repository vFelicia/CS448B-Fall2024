so in the series of learning c plus plus programming language we have discussed all the built in data type in c plus plus int care float double white character boot void right now we will discuss one small topic and that is important also for beginner point of view that is for input and output in c plus plus how to take input from the user how to print output right actually i should have discussed this uh topic a long ago uh after uh discussing the structure of a c plus program but i forgot to discuss this thing right because whenever you write a program these two things are obviously will do this these two things will take some input do some processing will print something or maybe we can skip to take input but output is necessary for every program in every program we print something we need some output like simple we you write a program of printing hello world then the output is hello you are printing something right so output is you know important part or you can say compulsory in a program so now how to print we we were using like c out right but for input we use seen so these two things we will discuss in this video how to take input from the user how to print output with the help of a program i will show you right so see for input and output in c plus plus we have many standard you know builtin libraries standard libraries one of them is generally we use is io stream like we write hash include io string this is header input output stream i means input o means output and string right now this stream is what it's just a sequence of bytes or you can say sequence of characters right in 1984 actually strausstrap made the first stream input output library right so the input we take the output we generate everything would be considered as a sequence of byte or you can see sequence of characters right that's why we don't use in this uh you know that format specifiers like percentage d percentage f for flow they consider everything as a sequence of character or sequence of bytes so we generally use some operators we generally write something like this c out and this this is what operator c this is what known as operator now this operator is what everything will be discussing in this video one by one right so this would be considered as sequence of characters or bytes the input and output so stream is what sequence of bytes or characters now two types of streams are there one is input stream and one is output string input stream i stream and this is generally basically we can say class name of the class is i stream for input stream and name of the class for this is o stream for output right it means i stream input stream means uh using this we take input right so means flow characters or flow of bytes from any standard input device like for example you can say a keyboard to the main memory obviously we store the whatever we will take we store that in memory main memory right because whenever program would be executed that would be loaded into main memory so the input is going to be stored in main memory right the variables and everything we make fine and output stream means the flow of bytes or the flow of characters the flow of data would be from main memory to output screen to any output device for example we can say our console screen that is one output device right so two uh streams are there input stream output stream the class regarding to this is what i stream and oh stream right now for input or first of all let me discuss one thing basically in this standard library we have four standard input output objects four standard input output objects has been defined in this standard library right now what are those four input output object first is one is c in c out c e double r and c low so c in c out standard input c out for standard output crr standard error unbuffered right the error is not to be stored just generally you can at that no at the same point of time you can print the error message and buffer this is unbuffered and c log is what yeah actually buffer log you have heard general information we used to store right so this is for general information right so now this c in is of type i stream class or you can say the c in is what a predefined object see this thing you need to take care c in c out this c e double rc look these are what objects so sometimes they can ask you in waiver or sometimes in interview like from a fresher seen and see out or what and students got confused they don't know they sometimes call it's these are keywords or these are functions or these kind of things but cnc out these are predefined objects scene is predefined object of class i stream see out predefined object of class o stream i'll show you this thing also right on my laptop i will discuss a program so stay tuned now this is of type o stream crr this is also of type o stream and this is also of type o string and scene is of type i string right predefined objects this is what a class you can size stream is a class h stream is a class now see this c scene is linked to standard input standard input means keyboard it is linked to standard input right used to take input from keyboard c out is what it is linked to standard output standard output is what your output screen please note down these points you can make your own nodes right or actually i have also some you know handwritten nodes and i am planning to distribute these nodes but i'm not getting so much time because of some busy schedule but i'll distribute these nodes also see i guess we have discussed these things now what more about input and output in c plus plus okay one more thing is left the operators we use with the scene and generally we use these two things only for input and output right so with c out we use this op this operator with c and we use this operator right these are operators right so this operator is known as insertion operator this is known as extraction operator y insertion c whatever you will write like i am printing j k right so this c out is linked to standard output right so now this this output we need so this output would be considered as sequence of characters so this would be inserted using this operator you can say to this object and this object is linked to output device and that that is why it will give output to our output spring that is why it is known as insertion operator right or sometime they call it as output operator also right this is extraction operator now c in is linked to standard input suppose we can say a keyboard so whatever you will type that would be inserted into scene like using this object we take and using extraction operator that input would be extracted and suppose i am writing here a so that output or suppose i am entering this is integer array i am entering five so that phi could be extracted from the scene and would be put into this a in main memory so flow data is from you can say that input device to main memory flow of data is from main memory to standard output device right in cnc out so i guess these operators are also clear to you now let me show you with the help of a program see let's take a simple program just i am taking one integer a variable a want to ask the value from the user user will enter the value and whatever enter entered a value that would be printed on the screen so first is hash include obviously we we are using c n and c out these are objects right which are already defined in which header in this uh you know library i o string so that is why the library is standard library for that header is what i o stream so that's why we simply use this header i o string right hash include you know this is preprocessor hash include means preprocessor directive it will show it will direct to that you know preprocessor that you have to include the content of this file into this program right and then after that only we can use whatever the content in this file right now using namespace std why we are using this namespace as name namespace is just simply uh you can say group you can say declaration of objects classes or variables or functions etc right so whatever is defined in this io stream that is within the namespace std it is mainly used to resolve the name conflicts right and you can also create your own namespace namespace about this header file i have discussed in more detail in the video when we were discussing structure of a c christmas program you can see that video in the side button right or separately i'll also upload a video on the name space so the scene and see out these objects are all defined in this header in this file but in this file also within a namespace std right so it means we are using std or if you don't write here using namespace std simply you can write std column column means this c out we are using from this standard namespace std this c in we are using from this standard namespace std right that is also fine because the c out it is also possible you can create a variable name c out so now compiler would be confused like this c out this is a simple variable or what is the c out so you have to tell the c out and scene is from the standard name space to resolve the name conflict that is why because if you don't write this std std compiler would be confused there would be name conflict a variable also see out name this object also see out this is predefined object and this is simply a user defined variable right that's why we use mainly name space right so i'm using here's using namespace std that is why i'm not writing here this thing right now simply main is what you can say a driver for this program first of all control whenever you execute this control will go to the main function right from here it would be execution would be started so now hint a one in memory a variable name that would be created 4 byte of space now c out enter a this would be printed on the screen as it is whatever you will write in double quote as it is would be printed as an output right now c in a user suppose will enter 5 so this 5 would be stored here now again we want to print the value so c out this operator insertion operator value of a equal to this would be as it is printed on the screen and if you want to fetch the value obviously you want to fetch the value of a so simply you will write a again these operators and a why again these operators because this is what a string and this is what i want to print value like value of this a so this output has been changed from simply a string to i want to fetch the value from the memory that's why if you this output this kind of switching is done then before that you have to put again the operator insertion operator right same other in case you want to include you want to enter two value again you can put this operator and see three value again you can put this operator and see whenever change happens we write down these operators right so now let me show you this thing on my laptop okay see i have taken a simple program in which i am just i just want to print age and name of a person right so we have included this i o stream using namespace std main function we have just taken care because name would be string right and the length i have taken 50 then into h and i'm asking c out enter name right and then again this operator and e candle this is what manipulator handle means it will insert you can say new line or you can say after enter name the cursor would be next line it is just a manipulator not a string so that is why this kind of output has been changed inter name is string then we are just using a manipulator so if changed these kind of changes done then again we have used this operator right then how to input c in and the name of the variable is name then c out enter edge then handle then c and again age now i am printing the name is the name is this would be printed as a tease and whatever the value in that name variable string type of thing that that would be printed i want to fetch that thing so for that we have to use obviously the name of that variable we have taken name so name again these operators and age is that i guess i want as it is would be printed and age is and after that whatever the age whatever the value in that age variable so simply again this operator end simply route write down the name of the variable h and at last we have used ndl again then it turns 0 right now let me just first of all run this and show you what kind of output you will get see okay error name does not okay it's nothing let me just run this again see enter name and cursor is in new line because of handle we have used right so i am just entering name jenny right enter age right so a is i'm entering 30 name is jenny and age is 30 right so see the name is added as it is would be printed and jenny is in the variable name name variable name is name so rather than this at the place of this name this name has been replaced by jenny and this age variable has been replaced by 30 right now see let me just show you what is this in io stream i have told you in this io stream we have standard objects right this is the standard io stream objects in this so now let me just show you see these objects are in namespace std right and in std we have mainly four standard object c c out c double r c no right these four are for white character because here also uh this uh support white characters also we have a type w current score t so for those we use wc in w c o w uh c double r and w c low right you can also uh see the description also link to standard input c out is linked to standard output this is linked to standard error and before this is also linked to standard error this is what buffer this would be store right now see if you click on this i stream see here the cursor is there right so base class for character input streams this high stream right and this whole stream is would be what press control and click on this the source stream is what just base class for output streams right so so i hope this is clear to you like why we are including iostream and why we are using this std because this definition is in this name space std as you can see right so we are using we we have we have to tell the compiler that we are using these c and c out from this name space standard name space std right and if you want to take the input in the same line simply you can write like enter name and edge right and we just delete these two lines and in one line only we simply write name again these operator and age because one more input we want to take right and after that the name is this and this would be printed now let me just run this and show you what output you will get see enter a's name and age the name is you can say rahul okay where i'm from here rahul and age is suppose 25 see the name is rahul and age is 25 right so in one line also you can take these kind of input many input one two three four five as many as you want so i think that's it about input and output in c plus plus see one more you know input output standard library for input output is not i o manip for manipulators that also discuss in separate video right two to three input output standard libraries are there but mainly we use generally these two things for this thing we use io string right i hope this input and output is clear to you guys if you have any doubt you can ask me in comment section right or you can message me on my instagram account i'll try to answer those queries right now see you in the next video till then bye