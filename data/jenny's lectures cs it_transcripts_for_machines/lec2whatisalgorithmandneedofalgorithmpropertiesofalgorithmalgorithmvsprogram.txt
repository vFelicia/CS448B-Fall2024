so in this video i'm going to talk about what is algorithm why we need algorithms and what is difference between algorithm and program this is first lecture in that series of da subject right so see it's not like that you are using algorithms in computer science only we all are using algorithms in our daily life right how see let us take one example if you want to make tea in that case what you will do you will follow some steps first of all you will take a pen add some water in it you will put that pan onto flame then add some tea leaves and ginger or elaichi whatever you want to add then some milk sugar and you will leave that pan onto that flame for some time maybe one minute two minutes like this and your tea is ready right so this is what obviously to make tea you are following some steps this there is a proper processor so this is algorithm in computer science language if you will say then this is what algorithm means informally if you define algorithm then that is what set of steps to accomplish a task in real life in informal ways if you will define like this task is what you want to make t and for to accomplish that task you are following some set of steps and this is what algorithm fine and this is only one example there are many examples like to make sandwich also you are following some steps that is also algorithm to make a phone call you are also using in that case also you are using algorithm everywhere you are using algorithms right so in formal way if we define so what is algorithm and see those steps are finite or infinite like to make t there are some steps those steps are finite or infinite obviously those are finite right so what you can say the proper definition or you can say the formal definition of algorithm is what it is finite number of steps or you can say finite set of instructions used to solve a problem or you can say used to solve a computational problem it's better to say sequence of steps or instructions either you can write steps or instruction why rather than set of steps because in a set we can have same type of multiple values the values can be repeated but that should not be a case in algorithm like we cannot repeat same step again and again like read every day read it one step would be one time like read a fine so it's better to say sequence of instructions to solve a problem or to solve a computational problem right finite sequence of steps now why we need algorithms let us take a real life example like if you want to construct a building in that case first of all what you will do obviously you design a map and then start construction if you want some update then you update that map only and then actually construction should be started right it's not like that without map without any planning without any designing start directly construction if you don't like anything then destroy that already constructed building and again start construction if you do so then it is wasted of money wastage of time right so that map is what it's you can say relate you can say that map is algorithm and the construction actual construction is what program that thing will also discuss so for better construction map is necessary so in computer science language you can say to design a better program algorithms are required first of all algorithms are written then programs are written like if you have knowledge of sdlc software development life cycle then first design phase is there right and then development phase or you can say the implementation phase in implementation phase you code or you can say the programmers write programs and first of all the design phase in design phase actually there that they write algorithms like suppose if anyone want to develop a software it's not like they directly start writing programs and if there there is any mistake or you want to update something then again write a new program fine no first of all you can write algorithms simply if you want to update something updating that algorithm and once finalized the design phase or the algorithm then start implementation right so you can say to design better programs algorithms are required so i hope you got it why you need algorithms now if we discuss the difference between algorithm and program so first already we have discussed these are required at design phase and this is what actual implementation so these are required at implementation phase now i hope everybody have seen programs right so in which language programs are written in any programming language like c c plus plus java python or any language right so these are written in any programming language right and they are required to follow that proper syntax of that language right like if you are writing in c language then how to take input using printf and scanf in c plus plus using c out and c in like this right but here to write algorithm you require what natural language like simple english language you can use right so algorithm can be written in any natural language it's not like that like this you have to follow some proper syntax and rules and all but yeah to some extent a proper format is there to write algorithm right but there are no strict rules or some syntax and all next thing is like programmers will write programs now who will write algorithm that same example that construction of a building to design map you go to an architect that architect will give you map of that building why so because that person is having knowledge of that field right so who will write algorithm the person who is having the domain knowledge for which you want to implement a software right the person should have knowledge of that domain now next is c as the subject name design and analysis of algorithm analysis of algorithm right so we analyze algorithms right and what about programs program are at implementation phase then we are going to test these programs obviously we are going to run and compile those programs so that is what testing of programs so we are going to test programs and we are going to analyze algorithms and algorithms are these you will write in any natural language you can say english language right and you'll write simple on a paper or if you want to use computer then there you can write those programs sorry algorithms into ms word or notepad or wordpress like this right but you will write programs you need some ide to use to write programs so you can say this is what hardware and software independent algorithm and programs are basically dependent on hardware and software you are using or you can see the operating system you are using now properties of algorithm so there are basically two properties first is what c you have written here finite sequence of steps it means algorithm should contain finite steps it should not be in finite right so first is algorithm should be finite and unambiguous you can say there should there shouldn't be any ambiguity in algorithm it should be clear right and second is what correctness means algorithm should be correct let us take that same example if you want to make t and if you follow those steps then ultimately the output would be you will get t right it's not like that you are following those steps and you are getting cappuccino no means your algorithm is correct if you are getting that proper output fine so it should be correct that is second property so that's it for this video in the next video i am going to discuss how to analyze an algorithm right so now i am going to see you in the next video till then bye take care