so in the series of learning Python programming language in the previous video we have worked on a project password generator I hope you have done that project right because that was not too tough until now we have discussed uh for Loop in Python so now we'll be discussing while loop in Python there is no do while loop in Python like in other languages C C plus plus Java for while and do while but there is no doubt Loop so now the next Loop is while loop and we'll be seeing each and everything about while loop how this while loop is different from for Loop and when to use for Loop when to use while loop as well as while with else block also the working syntax with the help of program examples will be seeing this practically also I will show you right now okay while loop basically see you know why we use Loops when you want to you know execute a statement or set of statements repeatedly multiple times then we use Loop you put those statements in Loop and that's it right same while loop is also used when you want to repeat a statement or block of statements when you want to execute block of statements repeatedly until a given condition is true until a given condition is satisfied right okay let's see the syntax how you will write y then here you will write condition whatever condition you want to give or you can say expression any expression also you can you can write and that that expression would be evaluated ultimately uh you know in the form of Boolean value true or false and based on that if this thing is true then here you can say the loop body or we can write some statements a single statement or multiple statements also that's it don't forget to put a call in right so now this these statements would be executed repeatedly until this given condition is true right okay now with the help of flowchart let me just show you we are entering into the while loop so first thing is what this condition would be tested right if this condition is true two cases can be the true or false if this condition is true then these statements should be executed it may be a single statement or multiple statements and those statements should be indented right because indentation is the only way to you know denote in Python that this is a block and these statements are within this value right there is no these kind of braces right now after this statement will be executed again condition would be checked again trigger false and this would be in Loop if this is condition is false then simply exit from while loop see it's exit from while loop not exit from actually program because once this condition becomes false the whatever you will write immediately after this while loop those statements would be executed that's it so this is syntax this is simple flowchart and working of while loop now see let's take a simple example here so if you take the same example like if you want to print number from one to five or one to ten or any number then using for Loop also we can do if you do with this while loop then simply we take a variable like any variable a b c d count IE or anything we start with initialize with one and while the conditional will give while count less than equal to Phi print count but not that's it you have to increase this count also count Plus plus count plus one right so first time count is one condition would be checked condition true Count would be printed one then count becomes count becomes two then two condition true again two will be printed then it becomes three like this till 5 1 2 3 4 5 like this five would be printed and after that it becomes sixth condition is not true exit from the while loop and whatever you will write immediately this that would be executed right if nothing is there then exit from the program simple working but here see here we know like this also we can do with for Loop also this this thing then why why Loop in which cases it is beneficial to use while loop for Loop is more like a iterator in Python right now basically we use while loop in those situation when user you know in advance user or we don't know the number of times how many you know how many times these statements would be executed in this program we know how many times does these statements these two statements are part of this value would be executed how many times five times in advance we know because we have you know written this program like that till one two five I want to print but what if you don't know in advance how many times these statements whatever statement you will write those would be executed user will decide that number of times these statements would be executed right so in those situations it's better to use while loop because for Loop is obviously when we we use when we in advance we know the number of times the loop body would be executed in that cases for Loop would be used right but while loop I have told you the situation and I'll tell you this thing with the help of example and program also right we'll see the difference properly with the help of program but generally basics of while loop I'll I guess this is clear to you and in one statement also within one statement also we you can write down these things like this simply I can write here print count then semicolon then count plus equal to one this will also print one to five right or on a list or Tuple also it will work that is also fine suppose I have a list list one is equal to one two zero five six something like this and so in condition I can give y list 1. while list one means this is the list so obviously we have item in list so why list one if you want to print like print hi Jen but if this is the then how many time this program would be executed think it would be an infinite Loop because every time this condition is true so you have to give something in this to stop the execution right so suppose after printing one time hi Jenny let's remove one item from the list then again second then third and fourth and fifth then after printing five times Jenny the list would be empty and then this condition would be false that's it so we have I have told you when we were discussing uh list we have a function pop this will pop any element from this list and this will also return that element so if you want to print you can print that element also so now at this point of Time how many times Jenny would be printed hygiening five time one two three four five because there are five items right and after that one by one like first if this would be printed high Journey then list one note pop one element would be pop suppose five then only four elements are there one by one each element would be removed from the list and after printing five times this list would be empty so this is how also you can use while loop now how you can use while loop with else block same we discussed with for Loop also after this while body will have else body this and this this else body this would be executed when this condition becomes false to make this thing very clear see if the condition is false or if we are out from the while loop no matter how maybe after successful execution of this Loop or maybe you have used break statement in between right then whatever you will write immediately after this while loop those statement will be executed but but if you have written else part then this else part this else body would be executed when this condition becomes false but but this else body would not be executed if the loop has been terminated forcefully using break these are some control statements like Loop control statement break continue pass those will be discussing in next video like in detail break is just to exit from the loop break the loop if you have used break here then this else body would not be executed right I hope you got what does the use of this else block and when this else block would be executed I'll show you this thing with the help of example let's see okay let's take these two example same we are printing from one to five so in this case we have used else also while with else in L slope but in this case same will be printing from one to five but within while loop we have put one more condition if count equal to 3 in that case break break means exit from this Loop so what would be the output in this case one two three four five would be printed now once this count becomes 6 this condition becomes false and once condition becomes false this else law would be executed because here we have successfully terminated this Loop we haven't forcefully terminated terminated this like using break or any exception is not there if exception is not there then only this else law could be executed then in else block would be printed but in this case first count is one condition true it will print one count plus one it becomes two condition true again it will print 2 right now it becomes three a now again this condition would be checked if three count is 3 equal to equal to 3 yes this condition is also true now control will enter here and break means out from this while loop but this time this else block would not be executed because we have forcefully terminated this Loop so this block would not be executed if we have written any other statement like print out from Loop and here also we have written the statement print out from Loop so in this case in else block would be printed then in out from Loop would be printed but in this case this would not be printed only one then two and then out front Loop so I hope you got when this else block would be executed right significance of this else block fine so just to show like else blocky just to show that yeah successfully we have completed this Loop has completed its execution or its iteration all the iteration successfully there is no break that is indication if else block would be executed means there is no break in this Loop right now what if there is one quiz question for you if if I modify this something like this less than one and same print count and all so what would be the output in this case so this is for your assignment you have to let me know in the comment section right I have just updated this condition everything is same count less than one this is the condition this time so what would be the output in this case now let's see the difference between for Loop and while loop with the help of example right see I have told you for Loop is used when in advance we know the number of iterations of the loop right but if you don't know in advance how many times the loop would be executed the loop body would be executed then we know usually we we you we use y Nu right so how in this case you will terminate the loop if you don't know how many times the loop would be executed so what condition you will put here and when the loop would be terminated how you will terminate the loop so in this type of situation we provide a special value Sentinel value which is called Sentinel value it is a special value which is used to terminate the loop and generally if you are working on positive integer then minus 1 is this value V we give minus 1 like minus one took it enter minus one or sometimes we use like press n yes or no then press n to quit or press Q or capital Q to quit so thus these kind of values these are Sentinel values right so let's see this with the help of an example so this thing better we discuss this thing with the help of you know program practically I will show you so now I'll show you the basics of while loop with 102 example then while with else and then we'll see the difference between between four and while loop with the help of programs right so let's create a new file here while underscore Loop Dot py start with the basic one they will just print from 1 to 5 right okay so we'll simply print here this variable count but if this is the case then it would be in finite Loop because the condition would always be true so it would be you know keep running so we will increase this with plus one and that's it right okay now let's write down one more thing after this immediately after this while loop we will be cutting out from Loop let's run this see it will print one two three four five and then out from Loop right so simple one or in negative also like it's not like that you have to only increment this whatever variable you will take you can decrement also this this thing so five to one if you want to print then you can take here this five and condition would be now at this point of time count is greater than equal greater than zero right or greater than equal to one but at this point of time you have to do minus right so it will print C 5 4 3 2 1 in reverse order and out from the loop simple one or in one line also you can print this thing like print this then you put semicolon here and then this line and out from Loop let's run this see same output you will get here five four three to one out from Loop right now if we are writing the else part here how to use else okay C after this while loop we will simply print five to one right and after that one else look I'll be taking right so here simply I will print in else block that's it right and one more one more statement out from Loop that is not within this while loop or within else block that is outside of this Wireless block right let's run this and see what output you are getting here see in else block is also executed five four three two one and out front Loop because in this case we have successfully completed this iteration of the loop without any termination forceful termination or without any exception at all right so of once the condition becomes false and then the statement also but if I modify this if this variable count equal to equal to 3. then exit from the loop and how to use how to exit from the loop we use a break statement break means out from the slope right now right break the loop break the you know the execution of the loop so at this point of time see it will print only 5 4 and then out from Loop else part would not be executed because we have forcefully terminated this while loop so the the the the these iterations this this you know execution of the while loop is not completed we have forcefully terminated this execution with break so at this point of time else would not be executed right now let's see the difference between while and for Loop so there may be a case like user will enter a number and once user will enter 1 exit from the slope right so how you will do that thing first we will take input from the user a number using input function so obviously will print we will Typecast that into integer and we simply tell minus one to quit right so a number would be entered and that would be converted in integer at the same point of time right so while while this number not equal to minus 1. till then these statement whatever you you will write that would be executed right so maybe simply we will I'm going to print that number print number right nothing we will do and then obviously you have to ask again like enter a number so same line will be writing within this Loop also right enter number minus 1 to quit in else also suppose I am writing in else block and out from the loop same thing right okay we have to put here colon let's run this one enter a number 128 so I am entering 5 it will print 5 then again it will ask enter a number minus 9. it will print minus 9 again it will print entire number and this point of time if I print if I enter minus 1. then in else flow then out from the loop right at this point of time else block would also be executed because we haven't written any break or anything else once the condition becomes false successfully termination of this Loop condition becomes false and then at that point of time obviously else flow could be executed if you write right and then whatever statement you will write immediately after this while or else that would be executed right so here minus 1 is what uh you can say special value or Sentinel value to exit from this Loop right we don't know how many times we want to you know print that number how many times you want to execute whatever you will write here maybe I'll print here print genuine and do any calculation here then I'll ask uh you know 10 or 15 or 50 lines of code I can write within this while loop in this block and then again I'll ask so one time maybe I'll enter two number five and four and then I'll enter minus one so two times the statement will be executed again if a user run then it will enter 10 number my like zero one two three four or any other number ten number and after that it will enter 1 then 10 times these statement would be executed so user is controlling how many time this Loop would be executed in advance we don't know how many time the snow could be executed so in this type of situation we use y u right and better to use and here one more thing we can use those what I can say Boolean values also true and false so if I write something like this okay let's comment out this thing and if suppose I am taking account and then while I'm writing while true while true then print count we don't know how many time this count would be this statement would be executed we will do count Plus plus one this is just simple example right so to break this thing we can write down something like if count equal to equal to Once count becomes suppose 5. then break right and in else we'll be writing like same thing we'll write in else block and after that simple statement I'm writing sorry out from Loop okay so here also we have to put one column let's run this see what it will print 0 1 2 3 4 Once the value becomes 5 break so out from the loop so we have forcefully terminated this Loop that is why no else law could be executed at this point of Time Out From Loop only the statement would be executed right so like we can also use this is one of the good use of these Boolean values true and false in while loop we can set this thing so this Loop would always be true until you give something to break to terminate this Loop within this thing so that you can put any condition based on your program right it is just a simple example now I hope you would you know why when we use generally this while loop and how we can use if you don't know in advance number of iterations of the loop right okay here is one assignment for you you have to calculate the sum of positive integers only right ask a number from the user and as soon as a user enter any minus value exit or maybe as soon as a user enters 0 exit from there so whatever user will enter either positive or negative integer do some once when you have to quit once user enter 0 this is the condition so this is for your assignment pause the video and try this out okay let's do this let's take a variable total and at first Total is zero right now we'll ask from obviously we'll ask from the user number right and at that point of time only we will Typecast this into integer and I'll be just mentioning 0 to quit to quit right so we have typecasted this number now it's time to put some conditions so while this condition I am putting number not equal to zero it's very not equal to zero then just do total equal to Total Plus number right or total plus equal to number in short form also we can write and again obviously we'll ask from the user a number that would be in Loop but again and again we'll be asking from the user so that thing you have to put in Loop and after that after this Loop you can simply print total or total is if you want to print something like this so you can write there right down here like total is then comma and from this variable or F string also you can use here right so let's run this okay I am entering one simple number I'll be entering then two then sorry three then I'm entering minus 1. then I'm entering minus 2. and now zero so what it should print only three so the total is three once you enter 0 it will quit so at this time of this point of you know this situation in this situation you can use these type of situation you can use while loop right because in this case also we don't know how many time this this Loop body would be executed we don't know because the condition is once user enters zero then only you have to quit maybe before entering 0 he or she can enter 50 hundred numbers I don't know maybe 10 numbers 20 number 50 number I don't know once 0 would be entered then quit so I hope you got while loop Basics difference between four and while and all so I hope you got what is while loop in Python and how to use this how this is different from for Loop right when to use whole Loop when to use while loop now the next video we'll see uh loop control statements like break uh then continue then pass right so now I'll see you in the next video till then bye take