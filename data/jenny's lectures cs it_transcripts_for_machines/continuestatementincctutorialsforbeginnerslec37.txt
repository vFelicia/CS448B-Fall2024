hey everyone I hope you are safe and doing good so in the series of learning C++ programming language in the previous video we have seen what is break statement how to use that and why we use break statement right now the next thing is continue statement so this thing we'll see in this video what is continue statement and how to use this why we use this and with help of program I'll show you right everything how to use continuous statement practically also we'll see right first we'll see we'll discuss what is continue statement and why we use this when we use this right so same as brake statement it is also a control statement or you can say a jump statement right and used uh it is used with loops only within Loops only right now see whenever you uh in the last video I have told you whenever you get the brake statement whenever the control and counter the brake statement means the control will be exit from the loop will be jump out of the loop right but in this this case it is not the condition right I mean it is not the case actually what uh is the thing here in continue statement let me just discuss this with the help of real life example first see if you have organized a party right and there are many person standing and so you are going to greet them you're going to welcome them and you're are going to like maybe shake your hand with those person so Suppose there are many persons standing right and you come you like Shake hand with this person with this person greet with this person something like this but this person you hate this person I mean you don't like this person right so generally we do is uh we don't greet that person or just ignore that person right so you ignore that person and you shake hand with the next person right so you just skip shaking hand with this person and then the next person next person something like this so here shaking hand is like in a loop you're going to shake hand with every person so it's a loop same thing you are repeating but a particular for a particular person you hate that person you are going to skip that thing you're not going to shake hand with with him or her right you're going to skip this thing it's not like that whenever this person comes you just stop shaking hand and you just went to your room or something like this no you just ignore or you just skip that person and start shaking hand with the next person simple so this kind of phenomena also we can Implement like in you know uh in programming right so if you want to skip something if you want to skip some statements whenever a particular condition met right then we use continue statement but if you want to exit from the loop if you want to break if you want to jump jump out of the loop then we use breake statement but if you want to skip some statement within that Loop just use breake statement just put some condition and use sorry continue statement not break statement just use continue statement right so so we can say when a continuous statement is encountered within a loop then control automatically goes to the beginning of the loop for the next iteration and it skips the current iteration right or we can say it skips the execution of the statements inside the body for that current iteration right if you are not getting the theory part it's okay you will get it whenever we will do practical right so we can use this also within with all the loops for while while range W for Loop right something like this if the snx of four Loop is four we have here initialization here we have condition and and then we have update right and suppose here we have some code some statements and within this we have some condition to check and if this condition is true then we are using continue and here also after that we are having some code some statement right so whenever this condition is true then continue continue means these next statements these this code within this Loop would be skipped would not be executed right and control will directly go to for the next iteration go to update then condition would be checked and then something like this right I hope you got this same within while loop also we can use in while loop we have like we put generally condition here right and he have we have here some code some statements and then if same we have some condition and if this condition is true then continue and here also we have some code so if this condition is true then continue continue means these statements would not be executed would be skipped and directly control will go to here is to the beginning of the loop for the next iteration something like this we will not go out of the loop here also we will not go out of the loop we will go for the next iteration this is continue statement right so if you want to skip few statements for whenever some particular condition is met then use continue statement whenever you want to you know be out completely from the loop whenever a particular condition is met use break statement right so let's see this with the help of practical okay so let's create a new file continue tutorial. CPP right so first we will use those header that is iio stream which is responsible for input output and then that name space STD right and then main function so same uh example we'll take the previous video we have seen like we want to print from 1 to 10 but whenever the the number becomes seven just break just print 1 to six that's it but here something different whenever the number becomes seven just skip that seven like first print 1 to six then skip that seven and print 8 9 10 this thing you need to do like 1 2 6 then 7 should not be printed then 8 9 10 should be printed right so let's take because we know the number of iteration exactly because you want to print only uh 1 to 10 so 10 number of iterations so better to use what four Loop right and I ++ so before using this I you have to initialize you have to declare it so here also I'm going to declare entire is equal to 1 and then something like this right okay now if you say let's print first this I right and for the next line you can use andl or slash and and just if if you want to skip some statement then we use continue okay so maybe you think like this if I is equal to equal to 7 that I have told you to skip some statement sub itation just use sorry continue right so you are using continue statement here what do you think it is right or wrong just pause the video dry onun this program and then see what you are getting we want 1 2 3 4 5 6 8 9 10 this should be printed so do you think this program will print this thing I don't think so let's see let's run this and see 1 2 3 4 5 6 7 8 9 10 even if you are used continue but it is not skipping anything why so because after continue whatever you will write within this for Loop those statement would be skipped but you are printing this I before using this continue so if you want to skip this thing you have to write down this printing of this I after continue so it will print first 1 2 3 4 5 6 as soon as the become seven so this condition true Yes means continue continue means whatever statement you will write down after continue within this Loop would be skipped so no C out would be entertained and then control will directly go to i++ now I becomes 8 right so this time it will work fine okay we have a problem here let's run this and see 1 2 3 4 5 6 8 9 10 7 has been skipped right so this is the use of continu statement same in while loop if you want to uh use then also you can use like uh same example take with a little twist it will ask from the user enter number right in the previous video we have seen enter a number and it is going to add those numbers and whenever you enter negative number it will just stop adding I mean it will be out of the loop and it will just print the sum but now at this time I want to repeat like enter a number enter number 10 times right but whenever a user enter negative number it will Skip and it will ask for the next number right and this termination condition is this should be repeated 10 times right it's not like that whenever you will enter negative number just exit from the loop no this is not the you say the exit condition no you if you have entered five numbers like enter number one enter number two three and now you have entered minus one so I want 10 times it should ask from the user so 1 2 3 4 still six time it has to ask so it will skip this minus one and again it will ask like four one something like this and while doing addition of these numbers it is not going to add these negative number to the sum right so this thing you need to implement so either you can use this uh while loop here or you can use for Loop because we know the exact number of iteration 10 times I want to execute the loop so if you want to uh run this with the Y Loop then just so first let's take a variable num one I variable for Loop and one is we have total total we are going to initialize with zero right now let's put a y Loop while I less than equal to because 10 time I want to iterate this Loop 10 time I want to ask from the user right so less than equal to 10 and initialize this I is equal to first one better so that it will not take any garbage value so now 1 to 10 it will it it is going to repeat 10 times right and obviously you have to update this I variable within this while loop otherwise it will be infinite Lo right but first obviously we will ask from the user what enter a number and in Num variable we are going to store that but if this num num is less than zero means negative then we not going to exit just continue just continue and continue means whatever you will write after this continue within this while loop that would be skipped so here we are going to do total because we don't want to add that negative number to the total right that is why after continue statement we are updating our total right don't do this don't write this line before uh this continue statement right so this and as well as don't forget to update this I variable because first I is one condition true this would be executed then I ++ I becomes two next time I is to less than 10 yes and now 10 time this would be iterated right okay now after this after this let's just print whatever the total is I hope it will work fine let's run this so enter a number I'm entering one again it is asking I'm entering 2 now I'm entering minus one see it is asking enter a number I'm entering 1 now 9 enter a number one enter a number again I miss again one any number you can enter 0o 7 2 okay now see the total is you can 2 3 4 5 6 7 8 9 10 11 11 but we want that this should ask only 10 times from the user enter number but it is asking I think 13 time because 1 2 3 three times you have entered minus number so it is not incrementing that I while you are entering minus negative number because I ++ we are doing after continue so whenever you will enter a negative number these both these two statements would be skipped and directly control will go to the beginning of the loop right so what we can do we can use we can do this uh i++ before continue so that whenever you will enter the negative number it should not be skipped right this also we can do and now you can run this and now this time exactly it will ask 10 times including negative number see only 10 times it is asking including negative number and the sum is five right so I hope you got this you can I think this is assignment for you guys you just draw the flowchart of this continue statement I think it's very easy if you have understood the working of this continue you can easily draw the flowchart right so it's up to you now you have to draw this thing so I hope now the use of break and continue statement is clear to you guys now in the next video we'll see one coding exercise based on break and a new statement right so now I'll see you in the next video till byebye take care