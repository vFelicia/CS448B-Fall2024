so a small topic is left in C programming that is preprocessor see in every program we use this symbol hash so this is preprocessor directly now what is the meaning of this symbol what is this what is preprocessor the function of this thing everything we'll discuss in this video the meaning of this hash we use hash include use hash Define no hash Define like macro hash include a header file we include so what is the actual meaning of this thing right that thing every single deta detail about preprocessor we are going to discuss in this video what is this process when this preprocessing would be done at which Step of execution of C program when you execute a c program at which stage preprocessing is to be done so with the help of a program also I'll show you everything about this thing we'll discuss in this video now let's see what is a preprocessor see first thing it is a program preprocessor is a program and it is not a part of compiler right not a part of compiler but it is just a step in compilation process see first thing what we do we have a program suppose first do c then first thing what you do you compile that program maybe you think you you will compile that program but this preprocessing the function of this preprocessor program comes before this compiler before this before this compilation process but it is not a separate thing whenever you click on compile while the compilation process will going on but before that one more process will be going on that is preprocessing which would be done by the preprocessor this is a program so it is just a you can say a step in compilation process it is not a part of compiler no it is just a step in the compilation process right preprocessor is just a programmer you can say it's a text substitution tool now what does this mean what it will substitute what text what is the meaning of this thing what is the function of this preprocessor that I I'll discuss so suppose we have written a program like anything and we have saved it first dot C now in this program obviously we use some header file like hash include stdio.h maybe hash include uh you can say string do some special thing a special you know standard Library so this hash is what first of all this is known as preprocessor directive it will give direction to this preprocessor program so all the preprocessor commands begins with hash this is a preprocessor command this is a preprocessor command and the compiler is not able to understand these lines which are beginning with hash these line would be interpreted would be understood by this preprocessor right compiler is not going to understand these lines so compiler is not going to understand so before compilation process obviously the program which is preprocessor which would be done which would uh you can you can say comes in action now what this program will do whatever the lines which are beginning with this hash these are preprocessor you can say commands right this is preprocessor directive it will give direction to this preprocessor like what we it has to do hash include as one preprocessor directive hash Define is also there like hash Define this is you can say macro hash Define we generally use like we can say like we can use Pi 3.14 right so this is macro this is just a character sequence right the meaning of everything we'll discuss one by one don't worry so these are preprocessor commands so these line would be first of all understood by this preprocessor and what this preprocessor now will do see this is in some standard Library system Library what is defined in this stdi stdi do some standard functions like print F scanf and all right here also string functions are defined right that's why we are including hash include means we are including a separate file in our program right so what does this preprocessor will do this will expand the source code now expand means what it will EXP expend this line now what does this this line means now the preprocessor will do what it will get this stdi do content the file and it will include this file into our source file right so one separate file would be there like if this is our stdi stdi do here we have some content defin the Declaration or you can say definition of those standard functions so this file this content would be included here again one more line so this is again a file suppose string do H here also we have those definition of those uh string functions standard string function so that also would be included here everything of this file right hash Define now hash defined this means what in a source file suppose we have used Pi in program so it will replace the spy with 3.14 everywhere in the program suppose we have in a program we have used like uh the you are finding area of a circle so that is I think Pi R square right so this Pi we have written Pi into R into R right so this Pi would be replaced with 3.14 before compilation process this is what preprocessor is going to do this thing this is you can say macro substitution so the Spy would be replac with 3.14 and the compiler will see 3.14 not Pi here right and whatever we have written extra lines those would be added in this program so this is what you can say expanded source code expanded means this single line have been expanded with a complete file this also expanded the complete file more lines we have right so this is expanded source code or you can say intermediate source code now this file would be stored with first do I and now compiler will see this file not this file compiler will compile process this file so in this file now we don't have any line started with hash this has been resolved by the preprocessor right so just a program it is you that's why I was saying it is a text substitution tool so at the place of this line it is going to substitute the complete file whatever there in this SDI it is going to substitute this file this line with the complete file so this is just a substitution tool not a part of compiler it's just a step in compilation process right now if you want to know more about the execution of a c program what now after that compilation obj file would be created then assembler will comes into action then Linker and then know we'll get the output so that we have discussed the complete process I have discussed in one video previous video the link of that video I'll put in the this ey button so you can go and check out the complete execution the main Moto of this video is just to tell you what is this preprocessor right and what is the function of this preprocessor I hope now you got this this thing right has different different preprocessor directive are there like one is Hash include one is Hash defined one is Hash if is also there hash else is also there hash and Def is also there it is to define a macro it is to undefine that macro then hash uh LF is also there hash pragma is also there it is used to give some special directives some special commands right so these things we will discuss in a separate video now hash include I hope now you got hash include is to include a file right in this we'll talk about this hash include so see hash include also we can use in two different ways one way is this right second way is we are including a standard directory here right second way is we can also include a separate file this example I think by looking at this you will remember here you can write other file name suppose file name I'm writing support do c right has include not angular bracket just double cot and support do c so this we have discussed when we discussing external storage class so we are including a separate file so in this file also we are having this is a file support. C so in this also we have some code right this is in local directory so just use if this file you want to access if you want the content of this file if you want to reuse in another file right then just write down in that program hash include and name of that file in double codes so it will get this file from the local directory right and it will include this content in the source file suppose in first do c only I'm also writing this line so content of this file also it will include here in this source file expanded file right or here you can just find out you can just write down the complete path also where this file is spe specifically like the folder name and everything the complete path if you give this thing it will just search at a special no particular place like in the local directory only where this this first do c program is being saved in that directly only it will search for this if this file is at other place you can just provide here the complete path that is also fine but you cannot write this thing if local file you want to include not the standard file then you will use double codes so hash include just to include a file two ways we can use this hash include thing right so I hope now you got what is a preprocessor and when the functioning of this preprocessor comes like before the compilation process uh it's just a part of compilation process we will compile only but before that this hash will you know Force the compiler to do for first of all preprocess preprocessing so that preprocessor program will do that thing after that the function of compiler will come right so I guess you you are clear about this hash include also in how many ways we can use this preprocessor directive hash include so uh another important thing is how to use macros hash Define how to undefine and Define macros so that thing we'll discuss in next video with the help of a particular program example right so the assignment for you is you have to write down a program in which you are using this kind of thing this type of hash include a separate file not these file this obviously we include this also but we are including this also so you have to write down that program right you can take help from the previous video that we have discussed like external stories class so you can take help from that video right now I'll see you in the next video till then byebye take care