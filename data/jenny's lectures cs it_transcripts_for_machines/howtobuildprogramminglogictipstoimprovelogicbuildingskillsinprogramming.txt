hey everyone I hope you all are safe and doing good so almost every day I get this question ma'am how to build programming logic how to improve programming skills how to think how to approach a problem how to start solving a problem logic you're not able to think the logic we are not able to write down code we are not able to solve coding problems yeah we understand everything like some students fall in that category when whenever someone else is explaining the code they understand everything the program whole program the solution but whenever they sit and start writing code they sell they go blank not able to think the logic right how to write down the code how to approach a coding problem right so in this video I will try my best to you know figure out what would be the problems and what would be the solution of this thing generally what mistakes students do right while start solving coding problems and while practicing coding problems as we all know everyone says like practice practice practice is the key to success if you are going to learn coding or programming you have to practice that is the main thing but some other things are also important with the practice right means how you do practice what type of questions you practice how you solved the problems while practicing those questions this thing is also important theory part theoretical knowledge concept building you know that thing is also very important right these things should go parallely so how these things should go parallely when you should go for concept building when you should go for 30 part when you should go for practicing part how you should practice the questions how many questions easy medium or advanced level questions everything we are going to discuss in this video means you can say ultimately some tips to build your programming logic and to improve your programming skills I assume that you are a beginner right from that perspective I'll try to give you some tips right and not I will not give you any shortcut like just follow these five or ten tips whatever I'm going to tell you in this video and you'll be good whenever or wherever you will see any recording question you will you know find out the solution you will think you are able to think the logic and you will write down the code no there is no shortcut yeah definitely you should do some practice you should do some hard work right but in which path I'll I am going to show you the right path according to me and you have to work on that path yourself all right and if you you know definitely want to improve your programming logic then definitely if you want to go in the scoring part then ultimately you want a good developer job one right so in this video before that before you know proceeding to the topic I'm just going to tell you about a boot camp which simply learn is going to start that is full stack Java developer so this is going to be started from 30th of November the duration of this boot camp is 6 months 10 to 15 hours per week you have to devote and it would be online boot camp all the classes would be conducted online now why you should go for this full stack Java developer program or this bootcamp because if they are giving you a job guarantee within six months of your graduation if not this thing then they'll give you 100 refund as well as they will make your interview ready means first thing you will get a topnotch curriculum designed by their industry experts assignments mock test projects Theory classes plus handson experience on real world projects as well as from the day one from the starting only so they're going to teach you frontend middleware and backend Java web developer Technologies and as well as you will learn to build endtoend applications test and deploy code store your data using database mongodb and much more you are going to learn in this and as well as you will get an access to exclusive job portal just to help you to find out your dream job what would be in the course what would be the learning path as you can see here all the phases phase one you will Implement oops using Java with the DSA then phase two you'll get familiar with the backend Technologies and Page phase three then phase four you will develop a web application using frontend stack then full stack Java developer you know project and uh then testing in a devops life cycle and what would be the skills covered as IL Java spring core devops the tools which we covered here is you can see here and the projects we are going to work industry project week four projects ecommerce food delivery entertainment project and one is ready to healthcare so these are some projects and after completion of this course you'll also get a certificate also and what would be the admission process for this just have to submit your application with the required information and then a test will be conducted after qualifying the test you will get shortlisted to talk to the admission team and after that you just have to accept the offer letter and you just have to complete the payment so all the relevant links and details you'll find in the description box of this video you can go and check out now let's get back to the topic see the main problem is if you are not able to think logic right then there could be two cases first thing is your concept is not clear right if you are solving a problem on like let's take simple example arrays so your concept on arrays is not clear array is 1D array 2D array multidimensional array and all okay arrays how to use array is the syntax applications and all next case may be second case may be you haven't practiced questions okay your concepts are clear but you haven't practiced questions on that topic much questions that is why you are going to stop okay so these two cases can be there now in which case in which category you are you have to identify you have to analyze yourself okay first mistake generally students do is what whenever they are trying to start coding or they are trying to they are you know starting their coding Journey then everyone is saying actually practice practice so all questions practice problems and all so they ignore theory part but to every part the concept building is very important yeah I know without implementation without practical without solving question this is just the theory knowledge is half complete okay but don't ignore the concept building first of all if you are first suppose and go level wise if you are choosing C programming first starting from starting you have to go right if else for Loop and all then arrays strings arrays 1D array two D array multidimensional arrays string linked list stack queue it's not like that on this day one day I am solving question on arrays next day or after two days strings then link list someone is saying link list is important then start solving question on link list no just pick one topic first okay because they are linking with each other these topics okay so now concept building is very important do not ignore this thing just pick one thing like arrays read this from a genuine resource actually so here also you have to apply Active Learning like an arrays okay you have read this concept arrays like 1D arrays applications of arrays properly you have read then start solving questions okay on this thing and also from easy to Advanced you have to move like this easy questions first okay then Advanced this second mistake generally students do they skip easy questions even if to print hello world if you are absolute beginner even if the program is to print hello world you have to write down that program at your own even if the program is sum of two numbers you have to write down that program you have to write down that program then run that program okay how to practice questions how to write down that also we'll discuss but maybe for someone else if you are a beginner maybe to find your factorial of a number is in tough category for you for someone else find out factorial factorial of a number is an easy category okay so it's normal if you are a beginner maybe you are not able to think the logic of finding maximum among three numbers at first it's okay it's normally it happens with everyone you don't have to you know demoralize or demotivate yourself or you don't have to think like this coding is not for me and all this kind of thing keep patience and practice questions more and more easy problems you have to practice then medium problems and then tough problems okay now you just pick any problem and if you are not again if you're not getting that problem the solution you can go to again to the concept you have to read the concept or you can watch some YouTube tutorials so this should be active learning okay it's not like that just read all the concept array string link list and all at last I'll solve questions on these things now 50 to 60 percent read the concept you're getting try to solve easy problems maybe in advanced or a medium type of problems you are facing difficulty again go to the concept building and then go to the concept read from any book reference book or go to any YouTube tutorial then try to solve the problem so this should be active learning parallely they should go okay topic wise array is like then the strings first cover one topic then second topic like this okay now from easy to advance you have to go do not skip easy problems okay one thing at least give two hours per day and you have to maintain the regularity to solve these problems okay now main thing is how to practice problem or you can say how to solve you are given one problem it's not like that just you have seen the problem and start writing code no analyze the problem first understand the question properly the information everything what which what information is given understand every word in that question that problem statement okay so you have to understand the question then try to solve that problem with the help of pen and paper this I have told you many times okay do not directly just jump to your laptop and start writing code no if you really want to build programming logic where you really want to improve your programming skill this is very important part with the help of pen and paper understand the question what is this scenario maybe try if you can try to relate that problem with the real life problem okay how you can solve that thing try to relate if you can okay that would be really beneficial then a flowchart or in just English language like an algorithm you can think how to solve that problem then with the help of pen and paper write down the code on your paper then dry run that thing this is very important this I do in my every video whenever I write down code right on that thing you will understand the working of the code this thing is very important understand the working really important you have to brighten that thing then if you are getting the answer then some test cases like some Corner cases you can say maybe that problem is maybe if array problem is there so that solution will work on duplicate elements if in Array we are having duplicate elements if you have we are having negative elements so these kind of test cases these kind of corner cases you have to think now okay if this problem is not working like just give input this kind of thing if Aries having duplicate element or negative number you can give input and rather than that if not getting proper output see where you can you have to change that problem that solution you have to modify your solution okay and one thing do not try to find out the best solution in one shot first thing whatever solution in your mind maybe it's Brute Force we are having you know much more time complexity or space complexity it's okay but just try to think the solution first after that different one problem can be solved with the help of different different you know methods and one problem is having many solutions okay so one approach then you can modify that thing yeah in that way also we can do this thing you just modify that thing okay finally maybe you will get a better solution or optimized solution that is of you know later part like to find out optimized solution yeah definitely that is good you have to find out optimized solution okay interviewer always you know want you to give optimized solution of the problem whatever they'll ask but if you are a beginner it's okay just apply brute force and don't think about time complexity space complexity you're optimizing the problem just think the solution one solution then how you can modify how you can optimize that problem that is a way okay so this should be your approach and then for the same problem use you can see other Solutions Maybe I have told you one problem can be solved with different different methods okay maybe someone has solved that problem with using a different approach different method so you will get oh with the help of this approach also I can solve this problem okay so you have to see other solution as well that is important here you can see editorial solution fine plus if you are not getting the solution means like a problem is easy problem so you can devote some time it's not like that whole day or two to three days you are devoting for that problem and you are taking that thing on ego like I have to solve that problem I'll not see the solution no don't waste your time that much one r two R three or you can devote to find out the solution but if you are not getting the solution then just you can see the solution the editorial or other Solutions try out to find out where you have done the mistakes where you were lacking okay okay this should be the approach you can understand the solution do not just copy and paste that solution okay write down that solution understand that thing and then sorry and then Implement that thing type with your own hand or maybe you can write on a pen and paper this thing is important do not just directly copy and paste and yeah I got the answer no then again Implement that thing after getting the solution from other others okay plus one thing is which is very important try to solve someone else problem or maybe you for concept building you can say this thing teach someone else your colleagues your friends or anyone whenever you are going to teach they will ask maybe some questions and yeah you may think yeah I haven't think this way what should be the solution of this thing what should be the answer of this question so that would really be helpful in your concept building if you teach someone else if you try to solve someone else problem that is also going to build your programming logic your thinking ability okay coding is nothing you just have to apply basic maths plus your thinking your critical thinking your thinking ability that's it do not hesitate to see the hint if you are not getting the problem if you are stuck if you are devoted sometime one hour or two hour just you can see the hint yeah then try to solve the problem if you're still stuck you can see the solution it's okay understand the solution main thing is understand the solution do not just copy and paste then with your own hand write down everything each and every line and then solve that problem plus one thing generally student underestimate is you have to make notes like maybe you are no thinking while solving coding problems why we should make notes but this is important what approach you have followed while solving that question a question is tough so after that reviews and whenever you will go to the revision part see this is also very important you will unders you generally underestimate this thing generally this happens whenever you I have solved this problem today after one month if same problem you are going to solve you'll go blank or maybe it will take you again one hour two or three or two think the solution no because you haven't revised that concept so you have to do revision make notes proper notes not I'm not just saying you have to do ratification and all make notes the approaches you know what approach you have uh you know used to solve that problem if a problem is tough if you are weak in a particular like if you are weak increase or graphs especially for those you have to make notes and revise those notes okay you can say in every week or maybe after two to three days you have to do revision frequently so I think that is it mainly just read the concept concept building practice questions obviously revise revision again next concept and practice questions from easy medium to advanced level then it will be then this should be in cycle and if you think there could be some other tip also just to increase or to build programming logic you can just write down in comment section so that other students can get help from that comment so that's it for this video now I'll see in the next video till then bye take care