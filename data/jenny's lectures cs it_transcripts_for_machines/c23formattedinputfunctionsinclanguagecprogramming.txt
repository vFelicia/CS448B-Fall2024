in the series of learning programming in c in this video i'll talk about formatted input and output functions in c i'm going to divide this video into two parts so uh more specifically if i say then in this video i'll talk about formatted input function in c and what is formatted input function in c scan a function right so we will be talking about you know about the scanner function means every single detail about this kind of function and the what is the syntax and everything how to use this kind of function in your program and where this can scan a function has been declared or you can say defined in which library that thing will also discuss and what does this formatted input mean that is that also we will discuss and one more interesting factor one more interesting point i'll tell about the scanner function which generally many students don't know so now let us discuss about scanner function scanf means we want to take input this is what formatted input function in c we can take input using scanner function as well as what we can do during when we write a program at compile time only we can initialize the variables we can assign the values let me take one simple example i am going to take an example of addition of two numbers right so now here i am declaring a variable in a and at this this time only i am initializing this variable i am assigning the value like suppose i am initializing the value 5 right but in this program there is an error after main we cannot write semicolon i was just checking you are attentive or not you can tell me in comment box if you have got my error before i told you right so now i am initializing at this time only and i am taking one more suppose at this line i am taking that another variable b is equal to four this is what i am taking input but at compile time only i am assigning values right but second method is what and directly i can say what one more variable sum and sum is equal to a plus b and i can print a b and sum right but what one more thing i can do is what rather than ah doing this static assignment i want to take that values at runtime like when you run a program at that time it should ask like enter value of a and b or you can say enter value of a or enter two numbers and at that time i want to enter values maybe four or five or five or four or maybe one or two any values at that time only so at that time how can we take input from the user using scanner function how can we use this scanner function c here i am just declaring three variables right and i am taking value something like this what is that syntax of scanner function first of all what does this mean formatted input it means the input the input the inputted data has been assigned in a specific format see i am taking something like this see first of all let me discuss what is this formatted input formatted input means the inputted data has been arranged in a specific format so now the general syntax of the scanner function is what we generally like write this word scanf right and then here we write control string or that convergent string anything you can say and that would be written in this double quotes after a comma and here we will write what list of ah addresses of the variables or you can say some arguments i am saying like here argument 1 argument 2 up to zone or you can say argument up to argument n and after that semicolon or here you can say list of arguments are what simply the address of variables let me discuss this thing that the control string or you can say this convergent string it is between these quotation mark right that is what the syntax of writing scanner function and what is there in this control string first character first is what character is what percentage the conversion character right after that what you will write the type of data you are going to take here the type of data is what integer so that is why for integer i'll write d if the data is float the data type is float then this percentage this conversion character would be same but for float i'll write f if you take character for that you will write percentage c got it i'm taking here a and b integer type so that is why i'm writing percentage d why i am writing 2 times d because i want to take 2 inputs from the user that is why i am writing 2 percentage d but remember this thing there is no comma between these format specifier otherwise it will give error right in this control string there should be no comma right after that just close these quotation marks and then you have to put a comma after that what you will put address of a this is what address of operator coma address of b now see whenever compiler will come to this line when when you compile compiler will execute this line then first is what percentage d according to this according to this format specifier what compiler know yeah it has to take integer value so just after the closing of this it will check out for that address right that argument why this address of operator we are using c when first of all control will go to the main function first line of the main function and in memory suppose this is a memory randomly i am assigning what a b and sum three variables we have declared means some memory space has been assigned to these variables suppose thousand here we have 2000 here we have suppose one zero two for address so for sum but we haven't initialized anything in a b a b and c now whenever we take input from the user obviously that input that data should be stored in memory somewhere where that data should be stored you have to give address the location that is why i'm using address of operator address of in which variable you want to store i want to store in a so first whatever data you will enter whenever you will run the program that would be stored in a suppose i i will enter 5 so 5 would be stored in here suppose here i write b and here you write a at that time the data the first data you will enter that would be stored in address of where location of b variable means uh address of b so here that data would be stored at b right whatever variable name you will write according to that the data would be stored here now second again we have percentage d means it has to take one more input so it will map this thing to the second argument after this coma right first argument for this for this one second argument this this percentage d for second argument so whatever you will enter that would be stored address of b right address of b is 2 000 so that would be stored here suppose i am entering 4 right what is that actual process that is this thing whenever we call main function then in memory some uh that some memory would be assigned to main function right when we do this function call right in main memory fine in main form in main suppose we have a b and sum like this this is what main a b and sum and whenever we call scanner function then another sum memory would be assigned to the scanner function this is what our memory right main memory some memory memory would be assigned to the scanner function within this function call it would be executed right so now in this scanner function we have percentage d and in percentage d like what address of a it will return what address of address of a is what suppose thousand so here we have thousand so that is why it is what linking here reference would be passed address would be passed so whatever value you will get from the user that would be stored at this address this is what the meaning of this address of operator it will return the address of a address of a thousands here so ultimately the value would be stored here address of b means 2000 so the value would be stored here so this is what pointer it is what pointer pointing to this one this data this concept we will get when we will discuss pointers in detail right and see here just simply means to put a value obviously we need address where you want to put that data into memory and that address we will get through this address of operator address of variable a address or variable b b obviously we want address of a and b if you want to put data here right that is why we are using here address of operator that is most and between these arguments there should be a coma right so tell me in comment box here comma is acting as a separator or operator we have already discussed about coma operators right you can relate it with the real life example if you want um to send me a gift then obviously you need a address of mine so you can ask me and i'll tell you the address and then you can send me same funda you can apply here if you want to put a value then obviously you need address address of that variable and then you can put that value right so this is what ah general syntax of this scanner function right and the interesting factor the interesting fact about scanf function is what this is a function what value it will return what it will return scanner function will return the number of arguments the number of inputs it is taking from the user here how many inputs it is taking from the user 1 n2 2 inputs so it will return what 2 how you can print that value or that also will discuss later now percentage d is for integer now here you can also assign a width like if suppose i am writing here percentage d 4 it will specify it will tell the width of the number you will take from the user suppose while entering the value this i'm writing percentage 4d means the width is 4 so it will map to this one a and i'm i'm entering the data 1 2 3 4 5. this number i'm entering this is integer obviously but the width is four only so it will take one two three four these four and it will store these four this number one two three four in a right and after that this five it will take in d because here one more percentage the the is there so here 5 automatically see if you enter this if you uh enter at that time this number and if you press enter then automatically it will not ask for value of b it will take 1 2 3 4 for a and 5 for b that is why the reason that is why we are you know the specifying this width but better this is what abnormal behavior because i want number 1 2 3 4 5 for a and suppose 45 for b but it is taking one two three four four a and five for b automatically so i don't want this thing so that is why we generally we don't specify here with we specify only percentage d right now next is what this is for integer and suppose if you write here percentage f what will happen the data is what integer but i am it is expecting what the data is float so if you enter 5 then it will not take anything it will store 0 in a right and in b if you enter 5 then it will store in 5 because it is what integer and when you print value of a and b then a value would be 0 and b value would be 5 right so that is why the format specifier you have to take care of this thing for f for float you can write percentage f for character you can write percentage c and rather than these there are many more format specifier also that also will discuss in a separate video right see suppose input i am taking like this 12 here i am writing 12.53 and here i am writing a character c so now this is what this type of input we can take using scanf this is what formatted input first is what integer second is what float third is what character it's okay you can take mixed data type right in this case what you have to write in scanf function what you have to write i am declaring three type of variables integer float and character so in scan of what you can do first suppose i am taking integer right percentage d for float percentage f for character percentage c that's it this is the control string then coma and then address off for integer i am taking variable name is a address of for float it's b and for character it's ch that is fine we can take mixed error type right so this is what the formatted input right now and in case of float for float percentage f for double we write percentage lf small lf and for long double we write percentage capital l and f is small right and in float we can also take that exp value in exponential form right suppose if i am taking the value percentage f in b and when i am inputting the value then i am writing here 4 7 6 3 and e minus 1 you can also write this thing and when you will print value of b then what value will be printed 4 it is minus 1 so that is why here 0.76300 because float is taking uh after decimal 6 visits right you can check out this thing and you can tell me if i am wrong right and you have to ah see i have done i have told you the basic about scanner function but you can use what you can do what informant that with you can provide in a percentage that means float value also suppose i am providing here percentage 4f in that case what will happen and what you can do when you will enter the data then what you can do you can specify here 1 2.3456 what data it will take forward width is only four the way so one two decimal also one width three and four twelve point three zero zero zero zero zero it will take this data it will ignore this one right and suppose next is a percentage d next is integer or maybe float then it will assign this value to that one integer or float right that is why we avoid using this width right because of this abnormal behavior so you can check out you can just write down a simple program and you can check out the different different variations right maybe you can write down here percentage uh heroes also width and here also or maybe you can write down here i'm taking the address of a a is what integer but here i am writing percentage f or percentage c then what value it will take what it will print right so you have to practice yourself about the scanner function means other variations of scanner functions and we can also enter a string for string the format specifier is percentage s that will discuss in detail when will be this we will be discussing strings and c so now i am writing here something like this see i am taking one more integer variable suppose x and here i am writing x is equal to scanf and here i am taking both variable integers so percentage d and percentage d and address of nv right and when you want to print then what how you will print the data printf sum is equal to format specifier percentage d like this and just you will write down the name of the variable that is sum here also i am using that format specify percentage d because the value of samsung i am taking of integer type that is why i am taking uh the percentage d so whenever you will write percentage d here that will map with that argument some from here it will fetch the value of sum suppose here 5 and 5 so sum is 10 so it will print if this function same execution would be there when this would be called printf function then some memory would be assigned to printf function2 in this main memory in your ram right so now you have to tell me if i print this x then what value you will get here in this case right because i have told you scanf will return the number of input it is taking from the user so in this case what value would be returning means if you print x then what value you will get and here also what other variations you can try like percentage d one percentage d you can write and here you can write address of an address will be at that time what you will get right what output you will get what value in x you will get or maybe three percentage d i'm writing and here i'm taking only two variables two arguments at that time what you will get so these things you have to practice at your own it's not like that everything i'm going to discuss in this video video would be very lengthy and when you practice within or with your own hand different different various variations of this kind of function then you will get better and that would be in your memory for a longer time right and i have already told you scan a function the definition this has been defined in this library stdio dotage that is why i am including this library in your program to tell the compiler what is meaning of the scanner function because compiler don't know that meaning of scanner function is to take the input from the user we know how compiler will know compiler to compiler we have to tell the definition the meaning right we have to tell we have to give some instructions according to that compiler can process something so that definition that meaning is here in this stdio file that is why i'm including this one right so that is i guess about scanner function if you have any doubt about scanner function you can ask me in comment box right and um or you can message me on my instagram account so in this video i will be discussing about formatted output function that is printf function in c so now i'll see in the next video till then bye bye take