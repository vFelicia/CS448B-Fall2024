so in the series of learning c programming we are discussing structures in c in the previous video we have discussed how to declare variable of a structure or you can see how to declare object of a structure so now in this video we will see how to initialize the structure and how to access the members of the structure how to assign values to the structure members like we have taken roll number name marks how to assign the values to roll number like problem is equal to one how we are going to initialize those members right and now how we will access those members and how we are going to print the values whatever you have assigned compile time initialization as well as runtime initialization both we will discuss with the help of a program but before they just want to tell you one thing if you are preparing for gay 2022 examination then academy brings you the gate yoda's free test cds targeting gate 2022 this three test series consists of three rounds in round one you will get 15 question and time limit would be 45 minutes round 2 will have 30 questions to be sold in 90 minutes and final round will be having 65 questions and time limit would be 180 minutes so these tests are designed to help you to track your overall preparation for gate examination and you can take these tests for free one more thing they are also going to conduct a scholarship test for gate and esc that would be on 21st of november so here you can compete with thousands of learners and you stand a chance to win up to 100 percent scholarship you will get in the test you guys you will get 20 questions and those quest questions has been curated by their best gate and esc educators and the time limit would be 60 minutes so you can assess your gate preparation in just 60 minutes you can see how you rank against all the others from all over india on live lead reward that would be updated after every question so you can measure your progress with the help of personalized scoring and waiting that could be given to you and after every contest detailed video solutions would be given to you by their experts so you can identify your weak areas and you can improve and so that you you get it right next time and you can take this test for free you just have to enroll the enrollment link i'll put in the description box of this video just click to that link scroll down pick up the right test for you and just click enroll and use my code jkl10 uh to unlock the test and if you take the scholarship test live then you will also get a chance to win some exciting prizes so the relevant links and the details i'll put in the description box of this video you can go and check out so now let's see how to initialize that structure let us take the the example that we have taken in the previous video so how you can declare the variable of the stereotype because the structure and this is all userdefined type or you can have to declare the object just write it the name of this data type struct stored in this complete is data type struct student now the name of the variable i'm taking suppose s right so how we will initialize these members like i want to take values in these members these are structural members so can i write here roll number is equal to 1 this would be wrong because we cannot initialize here this is what just a template here memory has not been allocated so i cannot store any value so that would be wrong so how you will initialize like here what i can write while declaring this object this variable of this structure here only you can initialize this is compile time initialization same like we can take here what if you take into a if you want to initialize this at compile time directly write down and a is equal to 5 if i take like can name is equal to 20 any variable simple variable so here simply you can write down like name is equal to j this is what compile time initialization so same here you can initialize but here how many values you are supposed to initialize one is roll number then name then marks so first is what roll number so i am going to write one comma name that would be string suppose i am writing jenny coma then marks i am writing suppose marks are 90.91 and semicolon this is what simple compile time initialization of these members that's it at runtime also you can initialize using printf and scan that also will discuss right now one thing you need to take care about this some rules of this initialization is what this order would be same if first is in first should be in next one is string then string float hair float means the order should match if you write here like first time writing jenny then 1 then 90 point this this then it would be wrong maybe it will give some garbage value it will you know give some error because this is first what it is expecting integer value but you are providing j that is string so how it will store this value so the poorest this order should match this is the first point second point is what if you are not initializing like here i am writing only one this is what partial initialization so this one first this value first of all obviously should be assigned to this first variable so roll number would be one and the remaining would be what null automatically the compiler will will initialize these string to null this float to zero by default intent float would be initialized with a zero and the string and character would be initialized with null right so now next point about this is what if you don't want an initial don't want to take this variable here you can just omit this and here only i want to declare the variable so here also you can initialize like s is equal to here you can write 1 jenny and suppose 90.91 and semicolon that is also fine right now what you can do if you want to take suppose two variables two objects s1 and s2 so here how you will take like it's not like that here i am taking s1 then initialize it and after that i am writing s2 and the values that would be wrong right because we have used the semicolon after that this s2 would not be considered as object of this structure the variable of this data type this this structure right so now how you can do that thing suppose i am taking here two variables like s1 equal to here you can initialize and another is struct student s2 i'm just writing the values some values here this is also fine you can take how many you know variables how many objects you want s 1 s 2 s 3 4 5 6 it's up to you right but suppose if you want to take like 60 variables or you can say i want to store information of 60 students so it's not a good idea to take s 1 s 2 s 3 up to 60 variables no that i will take array array of this object that will discuss in next video right now one more thing about this is what if you will take something like this this is also fine right so now and if you want to take here like one variable here s here you can initialize that variable like s is equal to 3 or in like 35 and name is you like ankur suppose i am taking here sorry marks are suppose i'm taking 70. that is also fine three object we have created s s s one and s two right before you know outside this main also you can write down like i am not writing this main function and after just writing this s you can write one variable like this and after this you just write down these two statements and so three variables will be created one is s s one and s2 right so it's not compulsory that you are supposed to write down this these statements in main only outside main also you can initialize you can declare the variables of the structure that is also fine like if you take outside main like i'm declaring this structure outside this main so this is not global you can access this this structure in any function in main function or suppose you have in your program you have two three more functions there also you can use this one in every function you can declare these type of variables right and you can access these members right so i hope this is clear how to initialize these members of the structure how to initialize this structure right and some rules about initialization of the structure like order should match if you don't write down the all the values like i am writing only one so this one would be assigned to this roll number you but this is partial initialization but if you are doing partially initialization then the first these members should be initialized you can leave the end members like it's not like that here i want to initialize i want to you know initialize only marks not roll number and name so i'll write 90.91 so it will be initialized the marks would be this and this would be zero and now no by default it is the first first value that would be given to the first member hero number would be this 90 it is integer so maybe it will take 90 only not float or maybe it will take some garbage value this you need to take care right now how to access these members suppose i want to print i have initialized this thing right and i have taken only these two objects like s1 and s2 and i want to print these values so what you will write printf percentage d and see this individual name roll number you cannot write down here roll number and it will print some value like roll number value which roller it will print simple roll number it it doesn't have any meaning you cannot access these members by writing the name only the name of the variable only these are not simple variable you are supposed to link these variable name with the structure with the structure object right if i write here like s1 dot roll number yeah now this is having some meaning it is what roll number of s1 so it is a variable representing what roll number of s1 fine so this is how you can access these members object name dot operator or it is known as member operator then the member name structure member name right so if you are going to print this s1 dot roll number so it will print s1 dot roll number means one right here we have in memory for s1 and s2 s1 roll number is 1 this is what roll number this is for name and this space is for marks same for s2 row number name and marks so here we have roll number one but these two value we haven't initialized so this will take null and this will take 0. so if you will print s1 dot name it will print null it will not print anything s one dot marks it will print zero zero point zero zero zero like this because it is float right in s2 we have in roll number we have two in name we have gia and here we have mark 85 so how you will print this information simply you can write down here s2 dot roll number so it will print now 2 s2 dot name percentage s s2 dot name it will print gia s2 dot max percentage f s two root marks it will print eighty five point zero zero zero to six zeros after decimal right so this is how you can access these members using dot operator this is very important right and here you can also initialize these members suppose i will not i am not going to initialize here this thing right simply s1 s2 is this so what you can write s1 is equal to s2 this will work you can copy these values so whatever the value in s2 these value would be copied for s1 also so in s1 also now we have 2 we have here gr and here we have 85 same values we have so that's fine to you next some point is what s one dot roll number this is also fine no number is equal to one s one dot name is equal to jenny and s one dot marks is equal to ninety so individual members also you can initialize but like this not here so at this point time point of time s one roll number is equal to one here we have jenny and marks we have ninety right using printf and scanf so this is what compile time initialization now what about run time initialization using printf and scanf you can take these values like uh you can write down here printf enter information for s1 right so i am simply writing scan f scan f is equal to percentage d address of what s one dot row number not s address of roll number s1 dot roll number next scanf percentage s at address of s1 dot name and same scanf percentage f as address of s1 dot marks so this is how it run time you can initialize at the run time it will ask from the user like enter information for s1 and then you will enter and after that you can print how you can print that we already discussed and here uh like at the place of if you write down here string so you can omit this address of operator you can simply write down s1 dot name that is also fine right now uh next is what see you can write down here if you are not entering this information and if you want to copy this information in s1 so s1 is equal to s2 that is fine but this is valid only because this s1 and s2 are of same type struct student the data type is same if we have one more structure like struct employee right and struct employee we have declared a variable e and struck student s1 or structure and s2 in that case we cannot write e is equal to s2 that would be wrong these are of same type this is why this copy allowed copy of these object values are allowed see suppose i am taking here 1 and jenny and 90. see one thing you cannot compare these objects like s1 greater than s2 or s1 less than s2 this would be wrong how you can compare these objects right or you can say s1 equal to equal to s2 this equality condition we cannot check check s1 not equal to s2 this would not be allowed right yeah but you can compare individual members of these objects how see i can write here if s1 dot row number less than s2 dot roll number here simply you can write something like i just print print f hi yeah that is fine s one dot row number is what one s two dot number is what two is this condition true one less than two yes condition two so it will print high individual members you can compare marks you can compare this string you can compare using string compare function right but these objects directly you cannot compare right so now i hope this is clear to you how to initialize the structure how to access these members of the structure right so now let me show you practically this thing on my laptop let me take a simple program i will show you so now let me create a file structure one dot c okay here we'll take struct name i'm taking student and i'm taking into roll number then name marks right and in main only i am taking i'm declaring struck student s1 right and i'm initializing this here like first we have roll number then one then string so jenny then i'm taking like marks 90. struct student second is what s2 is equal to roll number i'm taking 2 then name g i and mark suppose i'm taking 85 right so now if you want to print this printf information for s1 this you want to print right so what it will be printed printf you'll write here first is what percentage d then percentage s then percentage f right and i am printing s one dot the name then s1 dot name then s1 dot marks right same for s2 you can print this thing but for s2 like you can you are supposed to write what s2 here also s2 name of the object s2 right and here i am writing printf info 4s2 i am writing right this is what compile time initialization now let me just run this and see what you are getting oh this is error struct right now okay now one error is what here we are supposed to write semicolon now let me just run this and see what you're getting c in four four s one is one jenny nineteen four four s two is two g and eighty five this is how you can access this is called compile time initialization if i'm not writing anything here like i'm not writing anything in s2 and i'm here i am writing s2 is equal to s1 right and now let me just run this and see what output are getting for every for s1 and s2 same information 1 jenny 91 jenny 90 right so this is fine here also you can write down like i am writing any name s s equal to you can initialize it something like this i am taking only row number that's it and here i am printing the information for s also like info for s3 i am taking suppose this is s3 right yes three so info for s3 is what has three dot roll number then s3 and here also has 3 right now let me just save it and run it see what output you are getting see for s1 s2 both are same for s3 only 2 you are getting then name at the place of name it's blank because it's null it is not printing anything and for marks it is float 0.000 okay because you have initialized only row number two but here if you write here suppose name like i am writing here pile and now let me just run this and see what output you get see here some garbage value then nothing then 0 because pile is what string and first is what it is supposed to be integer so it is printing any garbage value now name is what obviously null and marks would also be null sorry a 0 right so this is what some garbage value then null and then 0 right so order you are supposed to match first is roll number so one first value should be integer suppose i am writing at 3 that is fine now next next what you can write here if you don't want to declare these these values in main you can declare these outside main here that is also fine but now see what output you will get see for s1 and s2 same because we are writing s2 is equal to s1 and for s3 only 3 that's it so outside main also you can take these objects right next point was what using scanf have you can take right so for roll number for s2 i'm going to take printf enter info for s2 this i'll take using scanf so what you can write scanf percentage d and what address of s 2 dot roll number right and then in the same line i am writing percentage s and uh percentage f so address of s to dot number then comma s2 dot name then comma s2 dot max right and after that i am printing this so i am just deleting this line now let me run this and see what output you get see first it is asking enter info for s2 so first is what roll number next would be name suppose i am writing here akash next would be marks for 45 or 54 it should be address of s2 dot marks right now let me just run this and see what output you get information for s2 row number is 3 name is what suppose j k marks 56 see for s1 one gen in this for s2 roll number we have entered what three name is jk and max 561 does this n for s3 obviously we have initialized in three only so using scanf also you can take this runtime initialization of this ah you know members of this structure right so i guess this is fine all the points we have cleared so now in the next we will see how to take array of these structure objects in the next video till then bye take care