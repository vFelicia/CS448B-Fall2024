so in the series of learning programming in c we are discussing pointers in C so far we have discussed basics of pointers as well as pointer arithmetic like what kind of arithmetic operations we can perform on pointer addition subtraction and increment and decrement we are left with one operation that is comparison of two pointers that also we discuss but before that in this video I'm going to discuss a technical question this is this type of questions are very important and these are these questions are very tricky also very simple but very tricky if you get see these kind of question questions when you combine this this increment decrement operator as well as this indirection operator so this these type of questions are very tricky generally asked in interviews so these are very simple you have to just concentrate and if you know the working of this increment decrement operator and indirection operator as well as their precedency and associativity that we have discussed in the previous videos so you can check out those videos first right then you will easily get it there is nothing much in this these are not so tough right yeah but but little bit tricky questions these are so first of we'll discuss this question right we'll see what output you are getting and how you are getting that output and after that I'll give you one question for your assignment you have to try that question at your own and also you'll see practical right I'll show you this code on my laptop also on BS coordinator so now let's discuss this problem here we have one array these are the elements in this array two pointers I have p and Q in P I have initialized p is equal to a a is name of array and name of array is containing Base address of aray suppose Base address I'm taking 100 so next element would be at 104 108 like this because integer I'm taking that uh will take four bytes right so in a in P we have now 100 so now p is pointing to here the first element right so now at first if you will print print a percentage d s p s p means p is IND Direction operator here here it is not IND Direction operator because here we are declaring pointers but in declaration it is not acting as interaction pointer after that if you will use here like estri and pointer name at at that time it is acting as D referencing operator or IND Direction operator and it means it will give value at this address so in P we have 100 value at 100 is 10 so this line this line will give you 10 right so first you will get answer 10 now second line here I'm printing three times this see this is very important so now see here we are having operators like this operator plus plus increment operator as well as IND Direction operator right and these operators are having what associativity right to left so they'll be executed from they'll start executing from this this side right to left so first of all this would be executed right so now see first is estri Plus+ P now first of all this would be executed one we have s++ P so this would be executed this is preincrement preincrement mean first of all the value would be modified in P I have 100 increment means now p is pointing to here now in P we have 1 Z 4 p is not pointing to this right because it is preincrement and now estri this one now estri means whatever the value at this address 104 we have what value 11 so it will give you 11 so it will give you 11 now the this one now here we have EST p++ right so now this is what post increment so first the original value it will return the original value whatever the value in P original value in P is now 104 and now it will increment so now p is pointing to here now in P we have 108 right but EST at 104 estri operation would would be applied here means in Direction operator would be applied here so value at 104 is 11 so it will also give you 11 right now p is pointing to here now see yeah this this this thing is very important now EST p is in bracket and now we have Plus+ so now it will brackets are having higher precedence so first of all this would be executed not this increment operator this you need to take care now it will return what estri P first this would be executed now estri p p in P we have 108 whatever value at8 it will return that value 108 we have minus1 so it will return minus1 because it is post increment first of all it will return the value whatever there at p and now it will increment the value not the address this you need to take care at this now we have What minus one we have so now this Plus+ would be applied to this value not this pointer because we are putting this in bracket so now here value becomes zero this thing is very important I hope this is clear to you so now here at the place of minus1 we have zero and it will return minus1 right but now and p is still pointing to here see we haven't we haven't done anything with p with this address because Plus+ is applied to this value now not to the pointer so now if you will after this line if you will print s p so what value it will print in P we have 108 and at one8 we have now zero so it will return zero right we have no more minus one here we have at the place of minus1 we have now zero right minus one is no more here in Array right but here it will give minus one now next is Q is equal to p + 3 now Q is a pointer p + 3 p + 3 means in pointer we are adding three it means P pointer would be you know incremented we will move forward three position so 1 2 3 so in Q whatever the value one 1 0 to what what is the address 120 that would be stored right so now Q is pointing to here now we are printing estri Q minus 3 right estri Q minus 3 obviously estri is having higher precedence than this subtraction operation so first of all this would be executed whatever the value at Q 120 what is the value of 5 5 3 that is 2 so it will give you 2 now next is this one so now next s minus p + 5 now here also rather than plus these are having higher precedence but both are having same precedence so associativity would be right to left so first of all right to left means when we once we move right to left this operator will come first so pre decrement would be executed first now it is pre decrement so now P first of all would be decremented so 108 but now after decrement p is pointing to here so now in P I have 104 now whatever the value at 104 s would be this direction operator would be applied y value is 11 and plus 5 now in 11 we are going to plus 5 so it will give you what 16 so it will give you 16 right now this value SRI P plus SRI Q obviously s are having higher precedence Than This plus so you can do it right to left also or left to right because obviously you have to do plus one only so now s q q is pointing to here s q is 5 plus now p is pointing to 104 here 11 11 + 5 is 16 so it will give you 16 so this output you will get or let me show you practically whether you are getting this output or not let let me write down this code on my vs code editor but before that one assignment for you right one question so this is question for you please dry run this program first don't just jump on your laptop and just try to write down this code and see what output you are getting and after that you understand yeah how we are getting that output no that's not correct way if you want to learn if you want to know get clear with this concept A don't touch your laptop first just note down this question on your you know maybe notebook or any on anywhere any paper and dry on this one check what output you will get here right then after getting the output then run it on your laptop and see the output you are getting is same or not or if not then again check why you are not getting that output and if you not still not getting then you can ask me in comment box right so I I guess you you can take the screenshot and you can just note it down right now let me show you practical whatever we have discussed the question we have discussed here in this video right so now see this is the question we have this is the array two pointer we have p and Q in P I have of a and this is you want to print same that we have discussed on the Whiteboard right now let me show you the output let me run it whether you are getting the same output that we have discussed or not C see first print F should give 10 obviously a p we are printing in next we are getting minus1 11 11 right and that that's exactly we have discussed right next q is equal to p + 3 and and now star Q 3 that is giving you 2 5 3 that is 2 next is giving you 16 and this line is also giving you 16 I hope you are get getting because we have discussed this right and now you're getting the same output whatever we have discussed so now I have given you an assignment also you have to write at your own and then run on your laptop and see you are getting the correct output or not right and see if you have any doubt like if you're not getting see after this line suppose print three times I'm printing this right so if you are confused like after this line where the P would be pointing so after that simply you can print print F percentage D the value like s p what value you are getting in this array and you will get that pointer is pointing to at at that location right now right see here you can check this okay let me try run this sorry let me run this again again see after this line we are getting zero after this line in P we are getting zero but if now you will say that Z we don't have zero in this array so this is not correct why you are getting zero because here here after executing this thing it it is giving you minus one original value but now minus one would become zero that I have told you and now after that if you will print a p p is pointing to here minus one only but there is no minus one in Array now we have zero now at the place of minus one that is why it is printing zero so now p is pointing to at this location but here we have zero so if you have any doubt you can also you can just print the address right at starting you can print the address in uh know that unsign integer form and in anywhere between the program you can just print the address so that you will get where pointer p is you know pointing what address in P we have if you have any doubt right so I guess that's it for this video now so that's it for this video now I'll see you now in the next video till then byebye take care