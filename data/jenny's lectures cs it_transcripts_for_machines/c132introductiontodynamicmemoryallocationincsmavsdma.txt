so in the series of learning c programming we are done with file handling concepts in c but we are left with one important concept in c that is dynamic memory allocation so in this video we will see that thing right what is dynamic memory allocation how this is different from static memory allocation how memory can be allocated dynamically means use of you know which function you will use for dynamic memory allocation how to use those function in your program and everything we will see about dynamic memory allocation this video is about basics of dynamic memory allocation you can say it's like introduction to dma dynamic memory allocation right and the difference between static memory location and dynamic memory allocation will see this thing in this video right later on in the later videos we will see everything about dynamic memory allocation like the use of functions and everything with the help of programs right but before this will tell you one thing maximize your gate 2023 preparation and academy is conducting a combat on 6th of march at 11am and it is a live test and you can take this test for free it is like a scholarship test to maximize your gait and esc preparation here you will get a chance to compete with thousands of learners and you stand a chance to win up to 100 scholarship in this test you will get 20 question and time limit would be 60 minutes and this test has been cured by their best gate and esc educators and with the help of live leaderboard instantly you can see the answer you got right and you know where you stand among the other learners from all over india and personalized rating and scoring would be given to you with the help of that you can measure your progress and after every combat detail video solutions will be given to you by their experts so that you can identify your weak areas and you can improve according to that so that you get it right next time the enrollment link for this combat you will find in the description box of this video one more thing for gate 2023 and 2024 aspirants they also started few batches in these batches they are going to cover the entire slavers for gate preparation in this course you will get preparation strategy tips and tricks practice questions numericals along with the detailed explanation of all the concepts plus you can get your doubt cleared in separate doubt clearing sessions but these are paid subscriptions you can use my code jkl10 to get 10 percent off on your gate subscription so the relevant links and details you will find in the description box of this video you can go and check out now let's see what is dynamic memory allocation see generally we say dynamic memory allocation means allocation of memory at runtime and what is static memory allocation memory would be allocated at compile time and dma memory would be located at runtime but see memory would not be allocated at compile time at compile time what happens see generally suppose you have written a program i am writing a program here simple program like i am just taking two integer variables i am just asking the user to enter the value of a and b i am just printing printing the venue so this is a simple program at combined time what happens the program is in english language high level language so com you know computer cannot understand this language so at compile time this would be converted into obj file or you can say object code right so at this time more precisely if i say memory would not be allocated at compile time right because once program would be in main memory then only we can allocate memory from ram from the main memory but at compile time we are just converting this code into obj file then dot exe file then linking and loading would be done and everything this process would be done and then while executing the program would be loaded in main memory and at that time memory would be allocated to these variables then why we say that sma means memory would be located at compile time so more precisely if i say then it means at compile time it would be fixed like for a and b the data type is integer so four bytes would be allocated for a and four bytes would be allocated for b in traditional compiler it's two bytes and in some you know comparing some machine it's four bytes it depends right so in some machine integer take two bytes and some integer take four bytes but now in my machine it is taking four bytes so that is why i am taking four bytes so now at compile time it is fixed now fixed you can say its fixed memory allocation that four bytes would be located to a four bytes would be allocated to b at runtime you cannot change this thing so this is what exactly static memory allocation right memory will be allocated at runtime only right but at this point of time at compile time only it is fixed like four bytes would belong here to this four bytes will be lower to this this is what exactly means at you know by a static memory allocation right and dynamic memory location meet means memory would be located obviously at run time and it is not fixed at compile time only that this these bytes would be located only no at run time only the memory would be located and that can be modified according to your programming needs you can increase or decrease the memory space according to your programming needs but in static memory allocation its not like that at runtime you cannot increase or decrease the memory which is allocated to you suppose i have taken an array in this program in i have taken an array array 5. so it is fixed that at compile time only that how many bytes would be allocated 5 into 4 that is 20 bytes 1 2 3 4 5 right five elements you can store and twenty bytes would be allocated this is fixed now but at rent time suppose suppose you are using only you are entering only one three minus one only three values so these two space these four and four eight bytes are you can see it's wastage of memory right because i am entering only three values or maybe at runtime you want to enter seven values can you do this no in static memory allocation we cannot do this because only for five elements memory has been located so we cannot enter seven elements so this is what you can say drawback of static memory allocation you have fixed this size suppose when we are i know in a program we want to take some names of students so generally we take what like in program we take care and str so we take maximum size suppose i am taking 50. so in this you can take any name like i am one name i am taking jayanti khatri one name i am taking only jenny one is you can say pradhi one is you can say uh sonu so for this only four bytes memory we have used and remaining bytes remaining 46 bytes wastage of memory in this one two three four five five bytes only we have used remaining 45 wastage of memory like this right so this is what wastage of memory in this case because memory has been allocated this is fixed we cannot change this at runtime we cannot free this memory at runtime in static memory allocation whatever memory has been allocated you cannot free that memory at runtime after the exit from the program only memory would be freed so it's you can say in static memory allocation memory cannot be reused this memory is fixed for 50 you can say 50 bytes so whatever name you will enter like pradeep i'm entering one two three four five six seven only seven bytes i'm using remaining 43 bytes 40 how many bytes we have you know are remaining that are wastage of memory and memory is very crucial resource we are not you know we we don't care about memory because we are writing small small programs so we take enough space at the starting of the program and we don't care about wastage of memory but when we you know create you know when we are doing any you know large com you know computation or you are creating software or in industries right at that point of time you have to take care of memory right so from now only it's a good practice to take care of memory right you at least you have some idea like this is wastage of memory and i should not use this memory that's a good practice you know these small small things you can say create a difference between a good programmer and a bad programmer right so it's a good practice always to save memory because memory is very crucial resource right so at least you have some idea about dynamic memory location static memory location how memory is you are wasting how much memory you are wasting and you don't have any idea right now while writing the programs right so now see at runtime you cannot increase or decrease the size of a located memory right suppose at this point of time i want to enter 10 element in the array we cannot do this if you are entering three it is mischange of memory right so to remove these drawbacks i hope now these drawbacks are clear to you of static memory allocation right so to remove these drawbacks another concept came that is dynamic memory allocation memory can be allocated and be allocated at runtime right according to your programming needs memory would be looked at located at runtime that is that can be modified according to your programming needs in dynamic memory allocation right now how this happens we have some functions for this thing malloc gallop real lock and free these four functions we will discuss these four functions in detail one by one right but right now i think the difference between sma and dma is clear to you or let me just discuss some more points about dma then i guess you will have you know more precisely you will have idea what is dma and how this is different from sma right first of all you must have some idea about the memory layout how memory would be allocated to a program in how many segments see basically four segments are there one is for code or you can say text instructions you know from this memory section one memory section is for global variables or static variables the global variables and static variables will take memory from this memory section one is stack and one is heap right heap is it's like you can say a big free pool of memory so whenever you allocate memory using dynamically using this method always the memory would be located from heap right dynamic memory allocation would be done from heap only it's like a it's you know big pool of free memory you can use this memory you can allocate this memory you can deallocate this memory at runtime right and stack and heap always grow in opposite direction if stack is growing in this direction heat will grow in this direction right and from the whole memory stack part will take limited size let's suppose stack part is taking only 2 mb whenever you write any program and in stack in stack from this memory all the local variables and functions will you know take memory from this part stack part right now see always the program if suppose outside main we have a global variable in i this is also having two parts for initialized segment and one is uninitialized segment in detail the memory layout we can discuss in a separate video if you want me to upload this video you can write down in comment box right suppose we have a global variable in i is equal to 10 this is global outside main so that this i would take space from this memory segment right and if you have some uninitialized int a we haven't initialized this this also will take from this segment but there are two segments one is initialized one is uninitialized right now always the program would be start from main so one stack frame from this stack one stack frame would be located for main function now in main we have local variables a b so these a b would be memory would be located from this stack for this a b we are going to enter the value and then printf means again we are going to call a function that is printf so one stack frame for printf after doing this operation right then you can say scanf and then again printf and scanf and after executing this printf this can f these function would be removed from the memory and after that return 0 then main would be returned main would be you can say freed from this memory after return zero statement right so now this is how memory would be allocated you can say it's it is what we are not using dynamic memory allocation this we are only using static memory allocation right if you want to use dynamic memory allocation in this case then you will need pointer you cannot use the concept of dma without pointer this is very important or you can say this is one application of pointer right and many data structure almost every data structure stack link list tree queue every data structure use the concept of dma right now without pointer you cannot use the concept of dma now what will happen if you use dma in this case first of all you are going to create a pointer so here suppose i am creating a pointer into star p so this is what yeah in star p means this is what static memory allocation so this pointer p would be in main now we have a pointer p this is static memory allocation right but at run time i am going to tell using these functions mellow calorie yellow for free using these function i am going to 10 like i need 10 bytes of block so those 10 bytes of block would be allocated from this heap this block of 10 bytes suppose or you can say 8 bytes and this pointer would point this pointer would point to this block using this pointer only we can access this memory and the base address this pointer would contain what base address of this block right using this pointer only we can store some value we can access the value from this block and all another thing which is very important is it's your responsibility to free this memory after you are done with this memory once you have used this memory and you are done you don't need this memory anymore in your program right now you have to free this memory using this free function this is very very very important if you will not free this concept if you will not free this memory suppose at some time i have done the i have initialized this pointer after that pointer is equal to null so it is not pointing to this memory anymore but still this memory would be counted in your program use in your program's memory use and suppose you have now created another pointer and you now suppose you need 50 block 50 bytes of memory now this has been allocated to you but this is still in your use you haven't free this memory one more block you have taken more one more block you have taken right but you are not freeing these blocks the previous blocks right so at some point of time it would be exhausted maybe right so once you are done with the use of the block make sure you free that vlog of memory so simple concept the simple syntax is there just write down free and the pointer name suppose i am taking pointer name p just write down this thing that's it now it's up it's totally depends on your understanding how precisely you are getting these dynamic memory looking location concept you can use this free it's not like that you can use this free statement this free function after the end of the program like in the end of the program no in between these programs in between any program like two or three times in a program you can use free statement so it's up to you like it's up to your understanding how clearly you have understood these concept how clearly you have understood the standard memory allocation concept then only you can use this free function you know many times in your program so better if you have used this memory free this memory again you can take another block if you have used this memory you are done with this again free this block this is always a good practice so this is what you can allocate and deallocate memory at runtime so once you have freed this blog now again you can use in the same program right so this is what reusability in dynamic memory allocation memory can be reused but in static memory allocation memory cannot be reused because we cannot free the memory we have taken like int a b so we cannot free this memory during the execution of the program after exit from the program yes this memory would be freed but during execution you cannot free so memory cannot be reused this is one more you can say drawback of small you can say advantage of dynamic memory allocation i hope you can write these you know points according to yourself in your language only right so now i guess the basics of dynamic memory allocation is clear to you from the heap part memory would be located dynamically and statically from the stack part right so now using these functions we can allocate memory dynamically but use of these function we will discuss one by one in the next one we will see the use of malloc function with the help of a program right so one assignment for you is you are supposed to write down the difference between static memory location and dynamic memory allocation right you can write down that thing in common box so now i'll see in the next video till then bye take care