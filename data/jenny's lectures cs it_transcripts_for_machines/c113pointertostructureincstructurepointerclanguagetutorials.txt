so in the series of learning c programming we are discussing structures in c in the previous video we have discussed array of structure right and we have discussed about structure everything like what is structure why we need structure how to define a structure how to declare variable of that structure what are structure members how the memory would be assigned how memory would be allocated to those structure members how to access the structure members everything about structure the basic detail we have discussed so now in this video we will see what is pointer to structure or you can say structure pointer and how you can access the structure members using pointer we will see this with the help of a program simple program i'll show you first of all here then i'll show you on my laptop practical also we'll see right but before this want to tell you one thing if you guys are planning to prepare for gate 2023 examination then an academy is going to start a batch from 24th of november in this course the top educators will cover all the subjects of cs and ip and help you to prepare for gate 2023 this course will include the detailed explanation of all the concepts plus some special classes like they'll include preparation strategies some tips and tricks practice questions numericals along with detailed explanation of the concepts and the scores will be covered in english and notes will be given to you in english and a separate doubt clearing sessions would also be there in this course so all your doubts related to any topic will be clarified in those sessions and this would be paid but if you will use my code jkl 10 you will get extra 10 discount on this paid subscription plus one more thing an academy is providing you a great offer you subscribe to the 12 month of fun academy gate and esc plus and you will get extra three months on it just to help you in your gate and esc preparation so you will pay only for 12 months and you will get 12 plus 3 months so i think those who are preparing for gay 2023 the subscription would really be helpful for you so all the relevant links and the details i'll put in the description box of this video if you are interested you can go and check out so now let's see what is pointer to structure i'm going to take that example only that we have discussed in previous videos stuck student right so this is a structure we have this defined the structure you can put this curly basis here or here right so this is definition of the structure we have defined our data type because structure is our user defined data type so this complete struct student this is what our data type and there it is containing three these are structure members having different different data types right these are not variables these are structure members right now if you want to semicolon here if you want to declare a variable of this data type either you can write down here like i am taking s or you can write down in main function or outside main function anywhere if you if you take like this if you write stuff student and i am taking s here i am not taking here i am declaring s variable here so this would be what global variable this s you can use this variable global means in any function in your program in main function or if you have any other function suppose in your program you have 5 function or 10 function in every function you can use this variable but if you declare this this variable within this main it means this variable would be local to this main you can only use at that time this variable within this main function right i hope this is clear to you what is local variable and global variable right so this one is global or you can declare here now what is pointer to structure here i am taking a pointer pointer means what it's a special variable which is containing address of any other variable right let's take i am having end asterisk ptr so this pointer is a variable which will contain address of a variable whose data type is int right so if i am having a variable in a and you can write down here is equal to address of a that is fine pointer is containing address of a and the rear type of a is in so fine but if you are having float and if you contain this this would be illegal right so this data type and this data type the variable data should match i hope this is clear to you right so now i am having a variable of type struct student so in the main function i am taking a pointer ptr what should be the data type of this pointer here what we will write i hope you got this now by looking at this example because here i want to store address of this s right and s data type is struct student so definitely here we must write stuff student right so here you will write struct student same data type this is a data type right user defined type now see how you can visualize this like in memory we have a variable s what we are having in s c or for this object we are having we are having three information roll number name and marks right so separate memory allocation would be allocated to this like here we have roll number here we have name and marks suppose address of this base address is suppose thousand his address would be one zero zero four and one zero 2 4 right so now what would be there in this s the base address of this memory location where this data has been stored thousand so now this is pointing to here right this is how the memory would be located to this structure variable and structure members right now s is also having some address suppose address is 2000 we don't know the address which we would be in hexadecimal form but i am just taking 2000 right now see s is what containing address so you must say that s is a pointer variable s must have a pointer variable yeah s is a pointer variable but we are not putting any string here so here s is what it's you can say internal pointer variable like array name is also internal pointer array name contains what address base address of the array so same this is containing base address for this i hope you go to this point right now we are having a variable pointer variable ptr so in ptr i am storing address of s address of this object address of s is 2000 so now this is pointing to here because see in pointer directly we cannot store address of row number address of name or address of marks right we can link we can access these structure members you are supposed to link the these members with this object right and we can access these using this object only right so we are going to store address of this into this pointer so now how you will access these members using this pointer suppose in roll number we have i have initialized here only i have initialized like compile time initialization you can say roll number is one name is jenny that's it i'm entering only two values one and change so by default marks would be 0.000 right so now one name is jenny and marks are zero point one two three four five six six zeros so if you want to print roll number name and jenny how you will print simply in print f what you will write roll number is percentage d one method is what s dot roll number you cannot simply like write roll number because simply write roll number roll number is not having any meaning here yeah s dot roll number is means what it's a variable which is pointing roll number of student s polymer of you can say the object yes or the variable s right or if you want to access using pointer then what you will write the name of the pointer ptr arrow operator on your laptop how you can write down the set operator in your program just that minus symbol and this bracket that's it this is a operator right and just write down the name of the structure member you want to access that's it will print one now if you want to print name simply write ptr arrow name ptr arrow marks right if you want to access these members using the variable then dot operator s dot name sort marks like this if pointer then arrow see here this means pointer of this means this you can also write something like this strict ptr dot roll number this is equivalent to this see a strict ptr means ptr asterisk means address at this location sorry the value at this location so a strict ptr means asterisk ptr ptr is having 2000. so value at 2000 is what this one thousand right now thousand dot address thousand dot address thousand means what s so it means what indirectly s dot roll number same right and s2 troll number means one so i hope you go the syntax how you can access and the method like what is you know happening behind the scene how you are accessing using pointer right so now what you can say what is a structure pointer it is a pointer which points to the address of the memory block that stores the structure this is the memory block which is storing this structure right here we are storing the structure right so pointer is pointing to the address of this memory block address of this memory block is thousand the base address so it is pointing to thousand only and in thousand obviously this thousand we are storing in this s by default it you know the name of the variable is storing this s so structure pointer is what it's a pointer that which points to the address of the memory block that stores the structure that's it right or here you can just try out this program by yourself like this is compile time initialization you can also you know do runtime initialization we are not initializing this here in main function i am you know i'll ask printf like inter roll number of the student and in scanf you will write using printf and scanf you are supposed to enter right so now let me show you practically so let me create a new file structure pointer right and i'm just copying this previous one because it it's almost same right here we have taken one okay this is the definition of the structure we are taking three variables this is area of structure so here i am just taking one variable right this one s1 and i am declaring i am initializing it at compile time only and we are taking one pointer right struct student and ptr equal to i am assigning this with what address of s1 address of s1 right and now i am going to access the members using s1 i am just going to print the information for s1 for s2 i am not writing anything so i just comment these lines information for s1 see these are for s2 and s3 so just comment these lines out so now how we are going to access now we will not use s1 here we will use pointer and arrow row number and here we will use ptr arrow name and then ptr arrow marks now let me just run this and see what output you will get it should print one journey and 90. see information for s1 is one roll number is one name and 90. so we are accessing accessing this with with the help of pointer right so rather than this ptr this uh another what you can write astric ptr and dotrolomer so that was equivalent to the syntax so roll number we are accessing using this and name and marks you are accessing using arrow operator right so now let me run this and see what output you are getting see the information for s1 is 1 genny and 90. right so hi i hope you got the basics like what is structural pointer and how to access the members of the structure using pointer right now you can try out different different things like this is compile time initialization you can try out your own how to initialize at runtime and in scanf also you can use this ptr you know erroneous ptr arrow marks like this right it's not like that only in printf only you can write down this means while printing only we can use this pointer while entering the value in scanf also you can use this pointer so that is for your you know your assignment you have to try that your own fine so in the next video you'll see what are unions in c and how unions are different from structures and see so now i'll see in the next video till then bye take care