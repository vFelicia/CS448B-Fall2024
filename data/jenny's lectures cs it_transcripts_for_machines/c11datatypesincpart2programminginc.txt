so in the series of learning programming in c in the previous video we have discussed data types that was part one in that video we have discussed the primitive data types so you can see primary data types or i can say builtin data types fundamental data types right those were int float void double and character right but there we have discussed in that video all about these data types and i have also drawn a table at the last of that video that shows the type of the data memory the data type will take like the storage one byte or two byte or four byte the format specifier and uh that range of that data type we need that table in this video also because i have got some questions in comment box and on my instagram instagram account also like when you are printing that data like we are printing into data when we we initialize some value to that data and we go to answer some other value why it is so in character also we are getting some other value so that today that is why i'm making this video we'll discuss in this video that thing i'll give you some examples also proper example i'll take and then we'll discuss the output of that example that line right why you are taking different answer from that initialization from the value you have initialized in your program why you are getting different answer right that we will discuss in this video so and this video is brought to you by by an academy because an academy has launched new batches for the aspirants preparing for csir ugc net june 2021 you will get here the complete course for csir net exam for june 20 2021 exam right and these batches are like they'll teach here like all the subject like life science chemical science and mathematical science and these batches are both in hindi and english so if you are comfortable in hindi you can watch those videos if you are comfortable in english you can watch those those videos so you have the facility to choose your favorite teacher and you can watch you can attend their classes right and this is what it's a paid subscription because you will get complete structured course for your csi or net exam but if you will use code you will get 10 discount on your paid subscription right so if you are planning to appear for uh june 21 2021 exam then it's better to start your preparation early and the best faculties at any academy are going to teach you and the batch may be in hindi language like the classes would be conducted in hindi language and they'll also provide you notes but the notes they'll provide you that would be in english language only so if you are interested you can go for it you just have to download an academy app and you just have to get the subscription of the batch you want they'll show you the detail right so i'll provide you all the details and the link as well as the referral code in the description box of this video you can go and check out so now let us continue our discussion on data types in c in this video i am going to discuss about int with proper example and some diagrammatic represent representation also see i am see in the context of 16bit compiler see my system on my system if i find if i find the size of the end that gives me two bytes right maybe in your system if you find the size of it it will give you four bytes so i am discussing this uh the lecture in the context of this two bytes like the int is taking two bytes memory right and long end along is taking four bytes of memory right and short and also taking somewhere it's it will take one byte and in on some machine it will take two bytes now why the range of integer is lies between this for signed int the range is this one for unsigned it it is between uh this one see for integer suppose i am taking two bytes for storage integer will take 2 byte so 1 byte means 8 bits these are 2 bytes means 8 bits and 8 bits so the lowest number can be 0 like i am putting 0 in every bit right and the highest number can be because binary uh the the computer understand the language of zeros and ones so we store everything in form of zeros in one so highest number can be in every cell we can put one so this is the highest number so this is corresponding to zero and this number will be six five five three five you can find out this number the number system when we will discuss number system then we will discuss how to convert a decimal number or integer into uh that binary language zeros and one forms so that is why the range is from zero to this one because the size of integer is two bytes so within these those using those two bytes we cannot store a number in unsigned in less than 0 and greater than this one but if it comes to signed integers means we can store positive value as well as negative value right so if you divide this by 2 then that would be this number the round of number it would be this one so from 0 to negative we will take minus 1 minus 2 and up to minus 3 2 7 6 8 but this side the range is 3 2 7 6 7 why because we are also including 0 in positive integers that is why this side we have till 6 7 and this side we have till 6 8 that is why the range is this one because of the size i hope you got my point right now let me discuss it with the program and if i represent this range this one and this one you know circular form will represent it in a circular form then you will get a better understanding why you are getting different answer from the value you have initialized in your program right suppose i am taking this one for unsigned int for unsigned int that format specifier is percentage u this is for unsigned in i am representing it unsigned in so from 0 to 0 1 2 until 6 5 5 3 5 right 6 5 5 3 4 this one right now next one is suppose i am representing it this circle for signed end so from 0 to one value would be the positive value would be till 3 2 7 6 7 this side i am taking positive values and this anticlockwise i am taking negative value so minus 1 minus 2 minus 3 and so on and here you will get minus 3 2 7 6 8 here we will have minus 3 2 7 6 7 and so on here we will have 3 2 7 6 6. i hope you are getting the circle right now let us take one example and assign some values to integer suppose i am writing this a simple program why you are including stdi dot is because i am using printf here the definition you can say the declaration the meaning of this is where in this library right and why you are including konyo rotates console input output because of this function gate cs and clrsl this is for clear screen and always in c we use clear clear screen function after the declaration of the variables right here we are declaring a variable and initializing the variable in the same statement so after that we will write clr scr if you write before this you will get an error so now i am going to put a value see first of all the control will go when you execute this program the control will go first of all the first line within the main function always execution would be started from main function first line is in a is equal to this one it means i'm declaring a variable so in memory a space would be allocated to this one and the name of that location is a variable is named memory location suppose location is i don't know address is suppose thousand right now we have to put something here now we are initializing this one i want to put this value here right this is what integer so now see it is if i am not writing signed or unsigned int then by default it is signed integer we can store positive value as well as negative value within this box within in this memory right so now it is signed one so go for this one three two seven six seven within this circle do you have this number yes i have three two seven six seven the range so this number is within this range right so 3 2 7 6 7 it would be stored in memory and then when you will print this value printf percentage deposit is d format specifier this is going to play a very important role right you will get to know uh in this video only percentage d means you are going to print integer value integer and you can say that signed integer value because for unsigned we are taking format specifier percentage u for this one signed we are taking percentage d and for short integer also you can use this one percentage d or percentage hd both are correct right for unsigned its percentage u so it is for signed integer right now next value is what is a so from where the compiler the control will fetch that data from this memory location and at this memory location we have three two seven six seven so the output would be this one only three two seven six seven you are getting same output you are initializing this one and you are getting same output now let us take a different case if i am writing here 3 2 7 6 8 now what will happen see it is signed integer so this has been the the data has been you know memory has been initialized to a so according to signed integer see this three two seven six eight check out it is within range or not the range is up to three two seven six seven it is out of range but it will not give you error right because it will initialize here what value after this one we have what minus 32768 so if we increase one like three to seven six and this is what 3 2 7 6 8 according to our circle so this value would be assigned minus 3 2 7 6 8 would be assigned to this a so now when you will print this one what value would be printed see when you will print like percentage d means you are printing what signed int for unsigned we will use percent is u so here the value of a what would be the output this you will get output minus 32768 because in memory this has been stored right the output will not be taken from this line because the function of this line is what just to allocate memory to this variable and store whatever you have given but the stored value is this one so from memory it will go it is going to fetch so from here it is going to fetch now output would be 32768 but you have initialized this one so this is what you can say for you it's some garbage value it's not correct but it is not giving you error and suppose if you will print here percentage u and a so this is what u is for unsigned integer so check to this circle that is unsigned integer now here while printing percentage u the value would be assigned this one only because it is what signed here if we have signed integer so this value would be assigned it will check this circle now here percentage u so it is for unsigned int so now check while printing the format specifier is this one and this is very important so now we will check while printing this value right so now check here we have minus this value or not here we don't have any minus sign but you can say somewhere their value would be like 3 2 7 6 7 3 2 7 6 8 3 2 7 6 9 and up to we have this value so now check this one 3 2 7 6 seven and here we have three two seven six eight minus three to seven six eight but corresponding to minus here we have what positive value only three to seven six eight so here it will give three two seven six eight answer not minus value because format specifier is percentage u if you will not get this one let me take one another example let us suppose you want to show three to seven seven zero this is what i'm not writing anything so this is signed integer so now in a memory space has been allocated to this a now check in sign integer do you have this value 3 2 7 7 0 no this is out of range but it will not give you where it will put something in this memory but what it will store here see up to this one we have seven six seven this is seven six eight seven six nine and minus three two seven six six this is corresponding to seven seven zero so this value would be store minus three two seven six six right 67 68 69 70 70 so this minus but sign is minus in the circle because this value is not in this range so this would be stored when you will print with percentage d then percentage d means signed integer in sign integer do we have this value yes we have this value so it will fetch directly this value so output of this line would be this one but suppose if you are printing it with percentage u that is unsigned integer so now value would be stored this one but while accessing the value it is percentage u it means unsigned in it will follow the circle do we have this value in this circle what is the value corresponding to this one we don't have minus sign so corresponding to this in this circle we have only three two seven seven zero only so it would be printed for percentage u right because see this circle in this circle is almost same you can check out here up to 67 here would be the same number and after 67 68 but sign would be positive only because it is unsigned then 60 9 then 70. so corresponding to this in this one here we will have 70 only so it will print 70 right but suppose if you are taking here long end so the range of long end is what it's beyond that this range in the previous video you can check out the table so this would be within the range because we are taking long end so both in case of percentage d and percentage u it will print this only because number would be stored as it is three two seven seven zero because of that range we are having this number within the range so that would be same output suppose if here i am taking into a 655 not 655 i am taking suppose minus 10 and then i am printing with percentage d and percentage u then what should be the output what will we would be stored here in a a is minus 10 it is signed integer in signed integer do you have minus 10 yes we have minus 10 because both minus plus value we have so minus 10 would be stored when we will print with format specifier percentage d it means it is for signed integer definitely it is going to print minus 10 when we will print with percentage u this format specifier is what it is going to print unsigned value but this is signed so corresponding to this what is value in this unsigned circle in my minus 10. if we go reverse then it is corresponding to minus 1 it is corresponding to minus 2 like this the value corresponding to minus 10 that would be printed and that value is what 6 5 5 2 6 so you are initializing minus 10 but you are getting answer this one that is why the reason you are getting different answer maybe but suppose in long in time printing this number 7777 so what would be the output we are using long and this number is within the range right so the same output would be printed percentage d percentage u it will print this number only right and if you initialize suppose int is equal to 0 then both will print here and here both will print 0 and 0. here also we have 0 here also we have 0 right both in signed and unsigned so whether you will print with this format specifier or this it will give you 0 and if suppose you specify here unsigned in so now you are specifying particularly unsigned in and you are storing minus sign that is signed that and this is a signed number so now memory would be allocated to a and what number would be stored here in unsigned integer check out this one corresponding to this value what should be the value minus three two seven six seven here somewhere we have three two seven six seven then three two seven six eight right now according to that here we have minus three two seven six seven now corresponding to this value what should be the value in this uh unsigned circle it's three two seven six nine right because here seven six seven six eight six nine right and this is what exactly minus three two seven six seven this one is minus three two seven six seven so in this circle corresponding to this we will get three two seven six nine this value would be assigned right now when you will print with percentage d means percentage d signed integer now check this value is while printing it is for sign integer so while printing we are fetching from this from here from memory only so now refer it will refer signed integer circle so check this value is within this integer or not this is not so corresponding to this value what is the value here 6 7 6 8 6 9 this value so here it will print minus 3 2 7 6 7 and if you will print with percentage u it will print this value 3 2 7 6 9 because while printing with percentage u it will refer to this circle and in this circle do we have this value yes we will have this value so it will print this one right so see here you are assigning unsigned int this value but when you are printing with unsigned number then you are getting different answer from the initialization value because the range because of the range right according to that you can check out the short integer range also and according to that you can check out the long integer range also you you just have to practice this thing it's not like that just watching youtube videos and just by seeing these lectures yeah you got it no you have to practice with your own hand try to initialize different different values and try to find out what should be the answer before you're getting answer on your system briar in that program with these two circles signed in and sign it and we find out output with your own hand then check with your system then compile and run and then check with your system and tell your answer is correct or not right so maybe next video we will discuss about care everything we have discussed about it that thing we will discuss about character with some examples right so now i'll see you in the next video till then bye take