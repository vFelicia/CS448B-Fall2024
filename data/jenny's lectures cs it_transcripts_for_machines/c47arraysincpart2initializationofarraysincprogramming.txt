in the series of learning programming in c in the previous video we have discussed arrays in c means uh what is need of array what is array a definition and then Declaration of 1D array only right we are left with many points about array like initialization of array uh how arrays are stored like memory representation of array how to access elements of array types of array so we'll discuss all the points one by one in this video I'll talk about initialization of array two types compile time and run time and then I'll show you the practical also on my laptop practical part of previous lecture and for this lecture also like declaration and initialization both I'll show you on my laptop right so you also get ready with your laptop with some ID installed like I have vs code editor in my laptop right so now let us see how arrays can be initialized there are two ways at compile time and at run time both we will see first at compile time it means when you declare the array at that time only you initialize that array means what elements what numbers you want in that array at that time only you will provide the data items like you remember I guess how to declare an array first of all the data type then array name I'm taking here only a and size I'm taking only five right this is what declaration right now at the time of Declaration only we initialize the array we give the data items equal to suppose I'm initializing it 0 1 1 11 10 2 and semicolon this is what initialization of array at compile time right five values I have given fine we will see different different types also now first method is this this one we'll see all the methods this is correct second method to initialize at compile time is what you can just write data item array name and I'm I'm not providing here the size right if you declare something like this means it will give error in the previous video I have told you but if you write something like this I'm not giving the size of the array but I'm initializing it like this 0 1 2 again 0 1 6 7 that is correct this is second method now here automatically the size would be calculated the size of array would be what how many elements are there 1 2 3 4 5 6 7 so it size would be seven now see another variant is what if I write something like this int a and 5 equal to 0 1 1 that's it means size is five and I'm giving only three data items then what will happen the remaining data items like two uh we have have left we are left with more two more data items the space for two more data items so those would be initialized with zero fine like zero here suppose if I uh represented something like this then 0 1 1 and the remaining two locations would be filled with 0 0 automatically right so okay now this is fine but if you write something like this next is what if I write something like this in a 5 and that's it means now the array is having what garbage value any garbage value not zero any garbage value the data items here in these five locations any garbage value would be there if you print without initializing then garbage value would be printed I'll show you the output also right and if you uh write something like this 5 equal to and here I'm giving 1 2 3 4 5 6 7 the size is five but I'm providing seven data items so that this will give error right because we have already fixed what size is five we can only store five numbers next what we can uh do is suppose I have written only this in a 5 that's it and here you can write a of0 a of 1 a of 2 and here you can initialize these data items like 1 2 1 a of 3 and a of 4 here 11 10 this is also fine individual items you can initialize something like this but obviously we are not going to prefer this method right this is not the right way but yeah you can initialize I'm just telling you the number of ways how to access why I'm writing this a then in these brackets zero means the first index of array would be started from zero so the first element we access the element of the array something like this how to access that we'll discuss in next video right but for this video just I'm just telling you the method so we are not going to prefer this method right next what you can write if you I write something like this int five is equal to I'm writing here Zer only that is also correct all the memory locations would be filled with zero one Zer and remaining would be obviously automatically zero I'm providing only one zero next if you do something like this int a 5 and blank I'm not giving any data here this will give error this is not allowed you have to give at least one data item either you can give zero or any data item or minus one or anything that is fine but you cannot leave it leave it like blanks it will give you error it's not like that you can only write here in I can also write here float that would be a floating type array right all the data items here at that time if you write here float that would be a floating type or you can write character something like this like care array I'm taking care array name is B and here I'm not declaring the size and here I'm just writing how to write down character because it is character array in single codes suppose it's j e n n and y right so this is what a character array of size 1 2 3 4 five data items I have given right or here you can declare the size suppose I'm declaring size 10 and I'm giving the data items only five then the remaining items would be null initialized with null value right now here what we have done we have fixed the size this is what a drawback right one by one we'll discuss everything about array and then last video I'll I'll tell you all the properties of array all the points about array so this is what we have fixed the size of the array now we cannot change it and also we have fixed what value we want in Array at run time we cannot change these values but if you want that users should enter at the run time user should enter the element of the array means it will ask enter the number of enter the elements in Array and user will enter any data it means that is what runtime initialization of array this is what compile time we have fixed this data items this is compile time right now these are all variant we'll see practical also right now I'll show you how to initialize array at run time at run time we are going to use some standard functions to initialize are that is obviously for Loop any Loop four while do while and scan aun function right so just declare the array in a suppose I'm taking size is five I'm not initializing here the array now at run time I want so suppose when I'll run the program then it should print at starting enter the elements of array so for that printing we will use what function print F right here you can write enter the elements of array in double quotes and whatever you will write here in double that would be exactly printed on the screen now obviously we have to give five numbers right so what we will use Loops so I'm using here four loop I is equal to I'm going to start from0 I less than uh 5 and I ++ now before using I what you have to declare it int I now here we can take input how we we will take using scanner function I have already discussed print F and scanner function in my previous videos the functioning of these function you can check it out then format specifier for integer it is percentage D address of array is a a of I right now if you want to print then again you have to use again a for Loop and you can print this is what at run time we can initialize the are now this program when this program will be run the compiler will what first of all what compile these uh lines so in I means here in memory some space would be allocated to this I suppose address is th000 here is any garbage value and for a also array name is a and for five numbers the space would be allocated suppose The Base address of array is 2,000 2 2 for this four bytes for this one so this would be 2004 2008 12 and 16 right here also we have some garbage value we haven't initialized it it now enter the elements of would be printed for loop I is equal to 0 so I would be initialized with 0 I less than 0 yes condition true will enter here scanf means it will take you in from the user percentage D address of a of I I value is what zero first of all I Valu is zero means address of a of Zer index is zero here one here two here three here four so a of Z is this one now this address is 2,000 so here whatever number the user will enter that would be stored suppose user will is entering 10 so a 10 would be stored right so like this you can see the I guess you all know the working of for loop I have discussed many times then i++ I would be one then again condition true again this process would be repeated and this is how the array would be initialized index of array would always be started from 0o 0 1 2 3 here till size minus one size is 5 5 1 that is 4 right and if you want to print suppose I have initialized 10 11 1 0 2 if you want to print the data of the array simply again take again for loop I is equal to from 0 to 5 I Plus+ and in that for Loop rather than scanf to print for output we take what which function print F function print F right percentage D and simply a of I you can write here and there right I'll show you practical of this thing also now when to use compile time initialization and when to use runtime initialization because we have two uh types of initialization of array see if we have only small uh sizes very small like like five or 10 so we can initialize that thing at compile time it's very easy to initialize it in a equal to 5 and you can write five data numbers or you can write 10 that is fine but if the size of array is large like 100 here we have size is 100 int a 100 so obviously it's not possible to write here 100 data items we can write but it's not a proper way it's not a good thing right so there we can do what at runtime initialization and maybe suppose we want like first 50 data items or first 30 data items would be initialized with maybe zero or one or remaining data items would be initialized with uh two or five or anything so at that time it's better to use runtime initialization right how C now here suppose size I have 100 and I want if I is less than uh 30 then a of I would be initialized with one right else a of I would be initialized with remaining portion would be initialized with zero so first 30 numbers in Array would be initialized with one and remaining would be initialized with zero right so if you want something like this this situation is there that that that is also you know we want that runtime initialization is better so now that's it for this video in the next video I'll discuss uh how to access elements of array and memory representation of array and I'll see you in the next video till then byebye take care