so in the series of learning c programming we are discussing some previous year gate questions on functions we have discussed two to three questions in this video we will discuss one more question and this came in gate 2016 right this question is example of both you know combination of call by value and call by reference we will pass here they have passed two arguments one argument has call by value and one argument is called by reference so better to first of all watch out that video if you don't know call by value or call by reference i have already uploaded that video after that you will come to this video then you will get this question better right now before that just want to tell you one thing if you are preparing for gate or will be preparing for gay 2022 exam then there is a good news for you on an academy if you want to purchase any subscription for gate that is for six months or above then you will get it at a special price with 10 extra discount here you will get two types of subscription plan plus an iconic what you will get in plus it's a basic plan to get you started in this plan you will get the best educators who will cover the entire syllabus for gate and interactive live classes would be there you will get complete structured course and pdf as well as with this live test would be conducted and some quiz will also be there plus that what is there in iconic one all the features that you will get in plus as well as some extra feature so with iconic plan you just take your gate preparation to the next level with what a personal coach you will get personalized test analysis and as well as personalized doubt solving session would be there if you have any doubt you can ask into those sessions and as well as you will get some uh study material for your preparation so you can select any subscription plan which is best for you according to your requirement you can see the price detail over here on my screen the regular price of that plan as well as after 10 discount and one more thing if you use my code jkl10 you will get extra 10 percent off on the already reduced prices so the detail you will find out in the link that i'll put in the description box of this video you can go and check out so now let me first note down that question here and after that you will discuss that question right let's see we have one function that is f and first of all where where the control will go when you execute the start executing this thing to the main function right so memory would be allocated to this this main function here now in main we have i and j two variable one is i and one is j i is having five and j is having value ten you have to tell that what it will print after execution after completing the execution right we are printing i plus j now see next line is this is what this is calling a function but here arguments what you are passing in arguments address of i so this is what when you are passing address it means it is example of call by reference this is just normal variable j it is example of call by value so in one program only one argument we are passing as call by reference and one argument we are passing is called by value so you have to be very careful while solving these type of questions right so now whenever the the control will go here so now function call means it will go to the definition part of the function so now this function f memory would be allocated to this function now we are passing address of i so suppose address of i is thousand we don't know the address but i'm just supposing address of 5000 address of j is 2 000. so now we are passing address so 5 that is 1000 we are passing so to receive the address what pointer variable should be there that is why as a parameter we have we have declared one pointer variable that is p so this this piece pointer and it is accepting address of i that is thousand now j means 10 value would be pass this is called by value so now it would pass 10 so that is why and this is normal variable m this is not pointer variable so in m we have 10. so now see this this p is pointing to here because it is having address of this i right so now here we have now in this function we have m is equal to m plus five so now m becomes 10 plus five that is 15 right s with p is equal to s with p plus m now see whatever the right hand side of this equal to first of all that would be evaluated and that value would be assigned to the left hand side of this equal to so strict p plus m strict p means p is this s t p means this is a direction operator value at value at thousand so value at thousand is what because this is pointing to here value at thousand is not five so it means five plus m m value is fifteen see we are in this function so here m value is 15 right so 5 plus 15 is 20 so now this 20 would be assigned to a strict p obviously strict p means value at this that is this so this would be updated that is it becomes i becomes now 20 i hope you got this one now next line is return where it is going to return simply where you have called this function here and the function of this calling is done now next line is printf percentage d i plus j now we are in main function so we are here now so i plus j i y is 20 j value is 10 so i plus j is 30. so it will print 30. i hope you got the working of this and i hope you go the working of this call by value and call by reference this is very simple this tricky question but very simple right so let me just run this and show you what output you are getting 30 you are getting or not so this was the question we have discussed so let's run this and see what output you will get see it is printing 30 i plus j is 30. so i hope you got the working of this question right so that's it for this video now and i'll see in the next video till then bye