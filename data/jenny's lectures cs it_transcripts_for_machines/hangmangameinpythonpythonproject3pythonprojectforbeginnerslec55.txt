okay so in the series of learning Python programming language we are working on a project we are creating Hangman game right so in the previous video we have seen we have created a flowchart how we are going to proceed right flowchart of this Hangman Project I'm not saying that this is the only way whatever you will we will discuss here this is the only way to create this project there can be multiple ways this is only one way right so better to keep that flowchart with you I have mine right now first thing in flowchart was you have to now we are going to create that project we will write down the code right so first task was to generate a random word because one player is going to guess a word right so now we are human beings we have brain so we can guess any word but what computer will guess you have to tell you have to give like maybe a list of you can say a list of names from those names yeah computer can pick or can generate or you can say can guess a random word yeah that is fine so let's do this okay so let's create a new project sorry new file here Hangman game hangman underscore game Dot py right so here okay we are going to you know generate our computer will generate a random word from our list so obviously you have to import random module first just import random module right okay so we have imported random module now we will give a list to this computer like we can say word or list okay suppose we have right now only we have given only three words Apple beautiful and potato so computer can guess only or can generate any random word from these only from these three only right so our main task is how to generate a first simple task is subtask as you can say generate a random word from this list we have a we know we have a function choice so in random module we have a function random Dot choice this will pick any random item from the list right we have discussed this thing when we are discussing list and random module so here you just have to pass the name of the list word list and that word we will be storing in like a variable chosen chosen word right there we have stored this one so if you want to print that chosen word you can print like print chosen word let me just run this and I'll show you see at first it has chosen Apple maybe it will run this this time potato so first task is complete subtask generate a random word right now obviously we will not show the user this word the second player you know will not show the second player this word we will just show the blank spaces as many blank spaces as the letters in this word so now second task is you have to generate rather than potato here should be dash dash dash dash something like this how many dashes one two three four five six dashes so you have to put dashes here right what we can do now okay second task is this so let's perform the second sub task here just take a empty list like suppose display we are taking a empty list right so for each potato for each letter we have to put a dash so for each letter for p then O then T then like this so just run a for Loop four suppose letter in this chosen word potato is chosen word for each lettering chosen word we will just add in this display equal to this Dash for each letter we will add Dash so first chosen word is supposed potato so in letter we have p p in chosen word yes condition true you will enter here now display is an empty list so one dash would be added now o would be assigned to this letter again condition true again enter here now one more Dash would be assigned to this list like this one two three four five six dashes would be assigned right or second way to or okay I will discuss second way later let's just print this display right we cannot modify this chosen word because obviously we have guessed that chosen word so uh next empty list will take and that will modify that list only right so now print a display let's run this see apple and one two three four five five dashes are there yeah two sub tasks we have completed till now right okay now another way to write down this for Loop is what because we have created this letter but we are not doing anything with this letter right so rather than this what we can do we can use a range function also here rather than chosen word we can do like we can do range till length of that chosen word right so find out the length of chosen word right and any variable we can take for suppose I in range length of the chosen length of the chosen word suppose potato is the chosen word so length is what one two three four five six length is six so this range will generate 0 1 2 3 4 5 number right now first and I 0 will be assigned five times this Loop sorry sixth time this Loop would be iterated and six dashes would be added to the stress plane so using range also we can do this thing right okay two ways are there to write down this for Loop okay the next subtask is what now you have to ask from the user guess a letter okay let's obviously we will take input from the user using input function input yes letter and whatever it will user will guess you will just put that into a variable name guest letter guest letter right now after guessing the letter check if that guest letter is in that chosen word or not yes suppose this chosen word is what we have apple right and the guess we have guessed a letter um suppose here we have input R so first R would be compared with this a then P then again P then L then e to every single letter of this chosen word r would be compared right so now write down a condition if okay not if obviously you have to for every we will compare this r with every letter in the chosen word so for for that you have to again write down a for Loop four letter in chosen word this is not the final version of this project I'm going to change this one just for your better understanding one by one I am doing this for letter in chosen word right if the chosen word is suppose here a double b l e so first a would be assigned to this letter so we'll check if if this letter equal to equal to guest letter the user have guessed that letter if this is the case then suppose simply we will print match right or we will print like else no match right okay let's run this and I'll show you what output you will get here see the apple is the chosen word one two three four five spaces are there now to ask guests a letter I am guessing X C it will compare with every letter of Apple first letter Nomad second letter no match third no match no match no because else would be obviously this else would be executed here if the the the chosen word is Apple then five times because five letters are there right okay let's run this again and if I guess a then C this time what is potato so a a is at this place yes so at this place it will it will first no match no match no match then match because a is at this place then no match no match right okay you got you got it right but obviously that is not what I what we want because this is what only one time we are guessing the letter but we want to guess the letter again and again what is the stopping condition for this game all the blanks are filled or if you are out of Lights right suppose first thing okay lives that thing so lives I have told you let's consider live we have six right so let's take a variable lives is equal to 6 first right so we will we are going to put this for Loop this guess sorry this ah this this one input or guess a letter into a loop so we don't know how many how many times this Loop would be iterated how many times this we have to guess the letter maybe if there is a letter apple and we only find that correct word in five attempts only a double PL or four times only or next time if the user maybe are guessing the letter A then X then something like this and the loop would be treated 10 times or 15 times you don't know the number of iterations so for this kind of thing we use while loop is better in these situations why but what condition we will put here when this while loop will stop okay we have two condition so for that also we have to put something like we sometimes we take any Special Value right or we take some Flags right so let's take a variable end of game or let's take a variable game over game over first just because game is not over yet so before while loop we just you know initialize this game or variable to false okay it should be capital f alse right now in while loop we will take while not game over while not game over because game over variable is false so at game over is false means not false means true okay so while true right while true means obviously true so we'll enter here now oh you have to put in while loop we have to put all these things in an indented block right so okay so now this is our indented block now while not game over so we have about this condition okay now somewhere we have to flip this variable game over to True here if that is true if game over becomes true means next time next iteration game over is true no true means false and exit from the loop now when you will flip that game over to true there are two conditions those condition you have to put so first thing okay we are going to guess this letter and then obviously we will not print match here we have to rather than that dash at that specific position we have to put that letter right if apple is chosen word and we have guest p so it will show the user next time like Dash then P then P then the stash and dash something like this right because at correct position you have to insert this p and three dashes are still remaining so how you will put that guest letter or that letter in this display in this this one for that you have to be aware about the position of that letter 0 1 2 3 4 like this right so for letter in chosen word this would not work here you have to put a for Loop for position like for position in not chosen word in then we will because range will give range will give you you will give you the number zero one two three four and that's exactly one because index is 0 1 2 3 4 like this so better use range function range tell length of the chosen word right okay if chosen what is Apple then length would be 5 then 0 1 0 1 2 3 and 4 like this range will generate indexes are the 0 1 2 3 4 right now position is 0 but to compare the letters obviously we have to get the letter at that position so in position now we have 0 so at 0 which letter we have so you have to get that letter right so first of all get the letter right now at this point of time letter is equal to chosen word and just pass the index position so if position is 0 so the zero will be passed chosen word 0 chosen word 0 is a so a would be assigned to this letter now we can compare letter is a guest letter is suppose P so we can compare at this point of time right and if it is a match so rather than printing this match we have to do what we have to do in display at that particular position we have to put our guest letter right so at this because displays are that displays this list that will show to the user dash dash dash dash so obviously in display only at that particular position we are going to you know put that here may be guest letter or the letter because if both are same then it doesn't matter you are writing here the guest letter or the letter which variable you are using I hope you go till now but in else we cannot write no match because in else if you do like if letter is not matching in that case you will lose a life in flowchart you can say if no letter is not matching then lose a life so suppose if you here do loser life means lives minus one life is six so we'll do like minus 1 that is 5. but this is not correct way why so because this else would be executed if the letter is Apple if the supposed gas chosen word is Apple and now you have entered suppose uh the guess guest letter is not P it's X right so here we have Dash and dash okay if this is X so guess letter is x for position in range this chosen word position is zero at a zeroth position we have a so letter becomes a a is equal to a if letter is a then a is equal to is equal to guest letter now here we have a is our actual letter equal to equal to guest letter is x is it true no means else part would be executed so here suppose life is 5 so life becomes life was six so life becomes five right but still we are in this for Loop because next time one would be assigned to this position now chosen word position one at position word in chosen word we have P so in letter now we have P so again check P equal to equal to best letter so rather than a at this point next iteration we have p p equal to equal to X no so again else would be executed and this point at here life becomes now 4. so we have guessed only one time x and for the one guess only this Loop the cell should be executed like five times so next time becomes three then two then one and then we are out of lives we have guessed only one time and we are out of like one six lives are going no it shouldn't be like this so in else we cannot write down life minus minus lives minus minus right because for only one wrong guess we should lose only one lie not for every lettering we'll check and we are going to lose a life no right I hope you are getting my point so we cannot write down this else here so this will not work ah outside of four Loop you outside of for Loop you have to write down this line so check if if that guest letter is not in chosen word you will put this condition if our guest letter not sorry not in chosen word you know these operators in and not in membership operator we have discussed right so not in chosen word in that case we can do lives now from that live we can take one life so life is equal to live minus one that is correct now only one time this will be executed for every wrong guess right so okay how it will work I guess you know because we have discussed these operators live minus 1. okay now live we have decreased the lives now see the flowchart there after losing your life again one condition is there if you are out of life or not so say within this if only you have to put one condition if lives equal to equal to zero means you are out of lives means you have to exit means game over so here is the right point to flip this variable game over equal to true because at starting it would false Now flip it to true right and you can just print a message like print you lose okay one is this condition no need to write down any else part now second condition for game over is what if all the blank are filled if you have guessed all the right letters then obviously all the blanks are filled a double p l e now it doesn't matter you are out of lives or not game over and it will print you win that is winning condition so save with same indentation with this four with this 4 if and here you will write down one more condition if if blanks these blanks sorry blanks these dashes not in display if this the blanks blank is what obviously you will put this thing in a quotation mark it's a string you can say not in display because display is obviously the list where we have the empty list like we have the blank spaces so in display if we do not have any blank spaces if no dashes then obviously you have guessed all the correct letters so game over so here also we will flip that will change this game over uh that variable is equal to true and you can simply print here you win let's run this and see what output you are getting we know guess letter is potato so guess a letter I am guessing p okay it is not displaying like at the correct position P because we haven't displayed this thing so let's just stop this first and for this also you can print like print display because after if the if the letter is correct then just put that letter into the position and display that thing display that list okay so let's display that list and let's run this see potato so let's guess p okay P should be shown here but it is not filling our blank space with this correct letter there is something wrong let's stop this and see what is wrong here there should be something wrong here see we are checking if the letter is equal to guest letter then display position okay it should be equal to only one equal to no double equal to right here assignment is what 1 equal to only equal to guess letter one more thing we will be considering like our each word in uh small letters so better to convert if by default by chance you enter by mistake enter capital letter so convert that into lower letter so input guess a letter dot lower it will convert that letter into lowercase letter now let's run this Apple suppose I am entering capital a so see it will convert into small a and it will put that a here so now just wrong guesses one wrong guess nothing would be you know inserted in this blank Z second round guess third then four then 5 only one life is remaining e this is last last one okay e is not wrong s e is there so one last t you lose because we are having only six lives but it is not showing us it's showing us the hangman image right we are not getting like how many lives we are still remaining so let's just do this see I have I have the stages hangman stages dot py file and there I have a list and I have these figures see this is the complete hangman so at zeroth index of this list I have complete hangman so I have just corresponded this something like this if lives are remaining 0 0 means at zeroth index I have having complete hangman drone so game over if lives are remaining is one so at one index of this list I am having a hangman with only one leg so one leg is still there one life is still there like this I have done six hangman images see At Last At sixth index there is no hangman no part of no body part of that hangman means we are having six lives complete Six Lives right so I you have to show this thing to the user the this this file how to show this thing stage is this list I want to access right so if stages and I pass at index 0 means this image would be shown right if stage is one then this image would be shown right so now see if you want to you know use that choice function from random modules and then you have to import this random module so same you have to first of all import that module hangman dot stages this file this file we have to import right now I want to show the stages so at last within while loop only with the same indentation I am just going to print I'm just going to you know that access those stages that list from hangman stages so first if you use that choice function from random module you have to use first of all the name of the module random dot choice so the hair name of our module or that file is what hangman stages dot in that file I have a list stages stages and just pass a variable here for index just pass the variable lives right so if zero lives are remaining so 0 would be passed here and the complete hangman picture would be drawn if one life is remaining so one would be passed here and the one at one index of that list what is only one leg that handman would be drawn okay let's run this here see beautiful so B that is correct means we have six lives P this is also correct means no body part of the hangman is drawn we have all the six lives suppose Q so head would be drawn because one wrong guess is there suppose R second wrongest means body would be drawn okay R again r again a wrong guess again what one part P again wrong is n again wrong is one more wrong is and you are gone M again a wrong s and complete hangman would be drawn and you lose that's it game over okay now see I have this list only because this whatever list you will provide it will choose from these three words only so let's provide more words so I have a word file here Word file dot py although I'm not having many words so you just first create your database word find of having like 50 words or maybe 70 words 100 words so I'm having these words so this list I want to access in my project how to access first of all you have to import that file import what is the name of the file word file.py so Word file now this random dot choice this word list I am not providing this word list here anymore just comment this out from the word file this one I want to access that words that list words see the name of the file is Word file and here I have this list words and within this words I am having these words multiple words many words so I want to access those words right let's send this this time see this time attitude so w wrong is a t U d and E one is remaining I see now we have lost only one life but still game is over and you win because there is no blank space in this display now right two conditions we have given for game over so you win I guess now you got this now you can modify this project according to yourself maybe you want like whenever you run then the the previous output should be cleared so for that also you can write down any function so I hope you got this working of this project there's not you know it's not like that this is the only way to create this project there can be multiple ways so this is just a hint for you guys now you can modify this thing according to yourself so if you want to take a screenshot of this thing so that is all about our Hangman Project I hope you got this project if not please write down this code here you know on your paper then dry run this take that flowchart according to that one by one write down the code and understand this project right don't just skip this video although it's simple one it's for beginners one but you have to understand then only we will move to the complex ones right so that's it for this video and I will see you in the next video till then bye take care