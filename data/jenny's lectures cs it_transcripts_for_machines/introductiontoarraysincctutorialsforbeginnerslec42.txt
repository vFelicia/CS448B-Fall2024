hey everyone I hope you are safe and doing good so in the series of learning C++ programming language we have discussed Loops in C++ right break continue and coding exercise based on that in previous videos now in this video we'll discuss what are arrays in C++ so first thing we will discuss what is need of array this thing is important why we use arrays the need first we'll understand this thing then we'll see what is an array how to declare an array how to initialize arrays something like this right so okay first see what is of haing before that let me just ask you one thing if uh I ask you to store I want to store five right in a program then how you are going to store this thing in memory you just take a variable of integer type like int a is equal to 5 very simple right so in memory four bytes would be allocated to this a five would be stored and suppose address is th000 it would be some heximal form we don't know but suppose address is 1,000 I'm just supposing this thing I don't know the address and obviously five would be stored first converted into binary form then it would be stored right but just for your understanding I'm just simply storing five in this block this block is of 4 bytes and the name of this memory location is a but if I want to store six then the previous value would be erased and six would be stored if you want to store 10 then previous value would be erased and 10 would be stored right right in the same variable if you want to store right now if I want to store 1 to five like five number 1 2 3 4 5 then what is an idea what uh can be a case like int a int B we can just uh declare we can just take five variables and then we can store 1 2 3 4 five okay fine then five variables would be there and five values would be stored because under a one under one variable name single variable name we can store only single value that is for sure right what if in my class I have 60 students I want to store role numbers of 60 students then is it possible to have 60 variables and store to of 60 60 students okay suppose I can take this thing also I can declare 60 variables I can take but suppose I have 1,000 customers and the name of those customers I want to store or the customer ID of thousand customer I want to store then obviously we cannot declare thousand variables right so is there any way that under a single variable name we can store more than one value like under a single variable name I can store 1 2 3 4 5 something like this 1 2 3 4 5 but variable name would be single single only or maybe 10 values or maybe a ro number of 60 students or th000 customer name or thousand customer ID something like this yes it is possible with the help of arrays right uh when we were discussing data type then we have seen like there are three type of data type builin drived and user defined builin data types are int float Bo void double these right arrays come under derived data types or we can say compound data types or we can also say arrow is a data structure right so with help of array we can store more than one value under a single variable name right how we are going to store this is important so how you basically declare an array so I think the need is clear to you right because obviously we are going to deal in real life you know with a large amount of data and you have to store that data also right so to store that data to manage that data obviously we need array we cannot take for each value a different variable name right so I think the need is clear to you guys right now how to declare arrays simple we will write data type first suppose int just I'm taking int then array name suppose I'm taking same a and in these brackets array size so I want to store suppose R number of 60 students so just take size 60 this is data type of the array name of array and this is the maximum value this array can hold maximum number of elements sorry not maximum value maximum number of elements this array can store 60 numbers 60 values this are can store right so under a single variable name I can can store like 1 2 3 up to 60 R numbers now okay one thing is how to access these R numbers that also we'll see later but till now it is I think clear to you guys right have to declare arrays now array can be of many types like float value if you want to store like float marks of student so float marks and marks of 60 students I want to store so that is also fine character type is also fine car like maybe car name is C and five so five character we can store here but the problem is same type of elements we can store under a single name right or in an array so it's like a collection of elements which are of same data type means in this array a we can store only integer values only integer value it's not like that we can store 1 2 1.1 and character also no this would be wrong we can store 60 Inger value only here we can store only float values right character values string values are not allowed right here we can store only characters five characters here right so I hope this is clear to you guys so these are some characters characteristics of array and arrays are of fixed size once you have fixed this size in your program during run time you cannot change this right if you want to change get back to your program addit to your program change the size here then you have to recompile it and then run it right yeah Dynamic arrays are also possible that is also a concept that also we'll discuss later right and it can store same type of elements one array can store same type of element mix is not allowed like in Python in list we can store mixed data type float uh like uh you can say in a list we can store integer 1.1 float or string something like this but this is in Python list right and this is C++ and we are discussing arrays so in arrays this mixing is not allowed right and see this array size must be a positive constant right it cannot be negative or here rather than this this you know constant value we can take expression also but that expression should be should give a positive that should be a positive constant expression right what I'm saying I'll tell you this thing with help of program we will see let's see practical of this thing and while vas are also allowed variable length ARS while we declare these arrays there are several variations of this array type right how you can what you can write here here in this array size it can be a constant value it can be variable length arrays it can be like um or without giving the size also you can declare this array but how I'll show you practically okay okay so let's create a new file arrays intro. CPP right so first you have to include that um header I stream then the name space and which name space that is STD it is a standard STD means standard name space here we have those definition of C and C out these objects right now in main function sorry let's declare now array integer array so the data type array name so suppose I'm taking R number of 60 students better to take a meaningful name if you want to store R number then better to take name RO number or you can take like x y z a BC any name but better to take a meaningful name so R number of 60 students right so this is how this is just you can say this is how we can declare an ARR right it's not just declaration it's actually uh it's definition right because at this time memory has been allocated how much memory for 60 students for 60 numbers and one if you want to store one integer it will take 4 bytes so 60 into 4 240 bytes has been allocated to this array right and if you only store like 15 raw numbers then you are only using 15 into 4 60 bytes remaining Byes are a waste that is why this is what a kind of drawback because arrays are of fixed size we here generally take maximum size right okay so this is what declaration we can say now rather than this if suppose I want to take this minus value is it allowed no see a red line here the size of an array must be greater than zero right if you run this you can check out there would be an error see the size of a number is negative right it should be positive fine okay now rather than this constant while declaring this array this this size there are several variations allowed for the size first is first I have told you arrays of a know constant size so this is a known constant size 60 now something like this is also allowed if I take a variable like uh if you want to declare a constant then just write down con the key word data type int and suppose I'm taking n is equal to 5 right and there I can write down this variable n five so this also comes into that category only AR is of nonn constant size because n is what it's a constant the value cannot be changed so this is also allowed right now or rather than this you can here we can also take like I have taken 60 that also comes under this one or you can also write here like size of suppose double this is also fine the size of this is also a constant regular expression right so this is fine there would be no error let me just run this obviously no output but there would be uh okay I have selected this let me just run this now see there would be no error right so the size of is also a constant expression so constant expressions are also allowed any constant value is also allowed right now next is variable length arrays suppose I'm not taking this constant I'm just taking a variable int n is equal to 5 and here I'm writing this n this is fine there would be no error yeah this is allow obviously this is not a constant but this is allowed this n we can change this n something like this if you want to change it suppose I just uh write down this n ++ less than uh 10 and is 5 then and this is less than 10 then within this Loop I'm just declaring this are int roll number and size n so see the N is changing n++ first it was five then six then seven then 8 then 9 then less than suppose equal to 10 then 10 right so the size is changing if you want to print number of elements because this n is what array size so I simply print this n that's it e and DL for a new line right and return zero for success completion if I run this then see array size is 6 7 8 9 10 11 till 11 see in this case it is it has also printed 11 and is 11 but you think that 11 is the condition was not true and why is printing 11 but actually n value is 10 10 less than equal to 10 yes condition true after evaluating this expression after that it would be Plus+ so now it be becomes 11 so condition true as well and then n becomes 11 so it is printing 11 so this is what every time the control will go to this this you know expression then this this expression this is simply n this would be evaluated every time and a new size would be allocated to this array right now next is um array of unknown size is the allowed let's take one example if suppose I'm taking here array name is same R number and it is of unknown size I don't know but it will give error this is not allowed incomplete time is not allowed because but see one thing I'll I'll show you extern int suppose rather than R I'm taking AR a and that's it see now in first line you're not getting any error no red line but in second line you are getting a red line here it is an error why so let me just run this and I'll show you the error see error uh storage type of rle number is not known only one error it is not known but obviously a is also array and the size is not known but why this is not an error see this is declaration and this is actually definition I know I hope you have the idea of Declaration definition declaration means we just telling the type and the name of the array that's it no memory allocation so so if you don't want to allocate any memory then obviously size is not allowed right here definition definition means memory allocation means that obviously the type name of the array as well as memory allocation but how much memory to be allocated how much when you will tell the size then only it would be you know the memory manager will allocate the memory now so that is why size is important in this case that is why it is giving error when you use this extern keyword right this class it means somewhere else outside of this scope somewhere else in another file this is defined here we are just declaring just declaring means we are just telling the type of data type and the name that's it but somewhere else we have definition so while you know it is uh you know uh you can say the responsibility of linker actually to link when you compile this then it is actually the uh when you execute this then uh the comp sorry the Linker will link this thing it will see the extern keyword then it will link where is definition of this a in any other file then it will link that file and then it will be executed right it is not the responsibility of actually compiler it is a responsibility of linker right we have discussed like uh you can say this how this is to be executed the complete execution process of a program of a c program actually right so you can check out that video that is why it is not giving anyr it is just a declaration but it is definition so you have to tell the size here so this is what arrays of unknown size now see in one case this thing is allowed you can write down this thing but you have to initialize the array here here only so equal to how to initialize an array this is what declaration how to initialize array now two uh ways are there at compile time at run time so at compile time have to have to initialize let me just tell you if you don't give the size it's okay just give the list like 1 4 8 0 5 something like this right now you'll not get any error because automatically the array size will be calculated because there are 1 2 3 4 5 ments so the size is five so how much memory would be allocated 20 bytes would be allocated right so this is allowed if you are initializing at the same time then don't you don't need to give here the size right and same if I write like here I R number is equal to 10 and here I want to initialize 1 2 3 4 only five right so five elements are 1 2 3 4 5 but remaining elements would be zero 0 0 because the memory would be allocated for 10 elements that is fixed right so obviously the remaining would be waste because we have just used 5 into 4 20 bytes and there 40 bytes has been allocated 10 into 4 40 bytes has been allocated right so wastage of memory is more when we are using these arrays and if I write here something like this zero so all the elements would be allocated to zero because one is z and remaining is nothing so automatically zero but see one question for you is if I want to allocate all the R numbers all the 10 numbers in this array with a same value like one all should be one so rather than writing here one 10 Time 1 one one one one no this is not the case suppose here I have 50 or the size is 100 and all the elements I want one all the 100 element should be 1 one one one one so how you are going to do this that is your assignment you have to let me know in comment section right and if right if suppose the size is only uh five and here I'm just I'm writing six values so that would be an error right two my initializer values because size is five so only five Val it can store right although there is no bound checking in this array that is a drawback but that thing we'll discuss when I'll tell you how to access the elements of array right then you will get that thing better right so this is what initialization at compile time but at run time from the user I want to ask the RO numbers right so with the help of like obviously we can ask enter the rumos right and then because I want five number numbers right so that would be a that would be in a loop so four let's take a variable for Loop in I is equal to0 because array index always start from zero I should be less than 5 and I ++ not less than equal to 5 0 1 2 3 4 five elements so till four index would be till four right and with the help of C in we can take value from the user right so R number and I like this this is what kind of index kind of thing right and one question here is why the index always starts from zero this is one question for you guys you have to let me know in comment section the answer of this question if you're not getting the answer it's okay we'll discuss this thing the answer of uh this question also in next video why the array index always starts from zero right why not from one and this is kind of index because to access array elements we use what method index method right now how to access this is what initialization at run time so from user uh we are asking suppose I if I run this then it will ask from the user enter the R numbers 1 2 3 4 4 five obviously it is not showing us the r numers it has only stored these R numbers right because we are not writing any code to access those Ro numbers how to access array elements that thing we will see in next video right so I hope now till now it is clear to you guys like Neo and some introduction it was like introductory part of arrays and see rather than this four Loop we we can use while loop do while loop also right to initialize these arrays or range based for Loop also that is up to you which Loop you're using so I hope till now arrays are clear to you guys what is need of array what is an array how to declare an array how to initialize an array so in the next video we'll see how to you know the memory representation of arrays and uh how to access elements of arrays 1D array we are discussing discussing here right 2D arrays multidimensional arrays we will disc discuss later right so now I'll see you in the next video till then byebye take care