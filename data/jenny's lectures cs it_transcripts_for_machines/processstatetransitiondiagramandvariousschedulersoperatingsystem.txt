hey guys in this video I'm going to discuss with you process state transition diagram so mainly everywhere you will find that five state transition diagram new already running waiting and then terminated okay we'll discuss two more state here okay and we'll also discuss the different types of she jeweler so the very first state is new if a process is a new state it doesn't mean that it has been created fine we cannot say it is a process we can say it is a program which is in secondary memory will be picked by operating system and it will be put into the main memory so process here you can say a process is about to create it is it has not been created yet fine now next state is after the creation of the process it go to ready state here you can say the process has been after the creation of the process the process go to ready state it means that process is now ready to run okay now after ready state where it will go it will go to running State fine and this this phenomena is known as she do this process this this process has been scheduled and when that process goes to running state or you can say this is dispatch now after running state where it can go see if everything goes smoothly then after running if suppose running means to that process CPU has been allocated and if the process has been completed then the process will go to terminate state here the process has been completed then it will go to the stay terminated now one more state is there so if someone asks what are the minimum number of processes minimum number of states a process can go through so you can say for new already running in Turpan 8 now suppose at some point of time processes running in the processes in CPU and process want some IO devices some use process wants to perform some i/o operations then process will go to which state to waiting state or somewhere it is also written as blob State fine means i/o request here is our u request and after the completion of the i/o operation the back to ready state here you can write ru completion fine so this is the basic 5 state model of any process almost in every operating system this diagram would be there and the process would go to these five states now see this diagram is basically you know for non preemption you can say non preemption means see I have told you in multi programming that you cannot forcefully remove a process from the CPU here is the same case you cannot remove if processes running then process if process wants any i/o device then it can go to waiting our process can go to only the terminated state so this is what the known preemption you cannot forcefully remove a process from CP now we also have that multitasking of sneaky owatta we have located is some time quantum to each process and if time quantum completes then the process would began the process would be removed forcefully or you can say preempted from the CPU and again go to the ready key something like this we can show one more transition like this from running to ready so this says for preemption this is showing the preemption of the process and if you will not right not draw this one then that is known as non preemption when the process will go from running to ready state maybe some time quantum expires then our second thing maybe because of priority if any another process which is having higher priority than which is having higher priority than a process which is running then what operating system will do operating system will remove that running process from the CPU and the CPU would be allocated to that process having higher priority so this is the preemption case next two states are also there see one is suspend ready now when the process will go to this state a process from ready state will go to this state this is known as suspend and when process resumes then again go back to ready state and why the requirement of this state see all the processes this ready queue here here in this state many processes can be there and ready to P 1 P 2 P 3 P 4 like this fine now see this this all the processes which are in ready queue those processes are in main memory fine here also main memory the processes are in main memory and if processes in waiting or blogs then also process is in memory main memory sorry fine and as you all know the size of main memory is limited so we cannot put many or all the processes at the same time into main memory fine and because of some reason may be one higher priority process is there and that process has to come to ready state and but there is no more space for any other process then what operating system will do what the scheduler will do we'll discuss your duel later okay what the operating system will do operating system will pick that process that having low priority from this ready queue suspend that process and then that process will be moved or you can say swap out swapped out from main my main memory to to secondary memory and then that state is known known as suspend ready and maybe after some time when that process when there is the main of space in this ready queue in main memory then that process can be resumed back to this ready state next one more state is what that is suspend wait or suspend block you can see now when a process will go to this state see this processes in waiting state because that process is performing some i/o operations fine and if more and more processes are there more and more processes are performing ru operations see this is also the process which in which is in waiting state that is also in main memory and main memory size of main memory is limited okay if more and more processes are running more and more processes are coming from this running state to this waiting state then at one time this memory would be exhausted fine and what the operating system how to do the operating system have to pick some processes and then swapped out those processes to secondary memory and that state is known as suspend wait suspended and after resume after you know and that process may be may be there is some space available now then that process can be resumed back to this state fine it is not like that if processes in suspend wait state then that process is not performing i/o operation still that process is doing its IO operations and here here this transition is what if that process has completed its i/o operations fine then that process is ready to go to the ready state then that process will switch to suspend ready and after the suspend ready it can resume two ready state so one question may be why the process which has completed sigh operation can't go back to waiting state it is going to the suspend ready state so the answer may be if the process who has completed its i/o operation that it is ready to execute and if it is it is resumed back to this waiting state then it again go to this blog blog state fine so this is the process state transition diagram now we are going to discuss various types of euler's three types of she new lures are there one is long term scheduler one is short term scheduler and one is medium term should you learn now see from this new state fine process would be pink and put in the ready state fine so this this thing is done with the help of longterm she'd Euler so the long term scheduler pick the processes from new state and then put the processes into ready state it also decide the degree of multiprogramming now what is degree of multiprogramming it is you know you can say their maximum number of processes that can be that can reside in this ready state at one time if 50 processes can reside in ready state at one at some particular time then you can say the degree of multi programming is 50 fine so this agree of multi program will be decided by this long term she do that okay now from ready state that the process would be picked and then the CPU would be located to that process them the best task would be done with their shortterm edulearn fine and somewhere here it is also written that which processes to be picked that would be decided by shortterm scheduler and the shortterm scheduler will call the dispatcher and the dispatcher will pick the process from this ready state and CPU would be allocated to that process and they put the process into running state now third type of schedule is that as medium term she do not see this suspension from waiting block to the suspend ready and there from ready to this suspend ready this would be done with the help of mediumterm scheduler finds three types of settler are their longterm shortterm and mediumterm should do that now one more fund is there when a process is running then it takes two times when is cpu time and one is IO time when a process is running and executing on a C on the CPU then that is known as CPU time and when a processes doing some ia operations and that time is known as IO time if a process is you know spending more and more time in the processing or in the CPU then that process is known as CPU bound and if a process is spending more and more time doing I oppressions performing i/o operation then that process is known as IO bound process fine now which so you can say to kind of process CPU bound processing I you bound process now the performance of the system or the CPU also depends on the decision taken by the long term should you let see two types of processes are there CPU bound and IU bound we have already discussed and if long time she do learn head has chosen more and more processes which are IU bound and those are in now and ready state now suppose one process has been allocated to the CPU and then again that process is i/o bound that is why that process requires to do some ie operation and that process will go to waiting state next person that is running state again that requires some IU process and then internal again go to the waiting state so the processors are again and again going to waiting State so that s why CPU utilization would be no and you can say that more and more context switching would be there that is also you know some time consuming process now if if long term scheduler you has chosen more and more jobs which are more and more processors which are cpubound then although that cpu utilization would be at maximum but in that case what happens maybe some processors require some i/o operation to perform and if that process is doing I hope raishin then maybe that process would face starvation fine maybe that process would have to wait for a long time to again go back to the CPU because processors are all the processes or more and more processes are CPU bound processes ok so long term scheduler has to decide has to choose a mix of CPU bound and higher bound processes now let us discuss the frequency of these three schindler means how frequently schedulers husband called the maximum frequency is or short term should do not then medium term scheduler and then long term scheduler because short term scheduler has been called again and again see short time scheduler decide which which processes to be chosen from ready state and then is then it called the dispatcher and dispatcher is a software which pick the job and that job is going to from ready state to that running state now so that decision that which job is going that dispatcher will pick from ready state fine that decision is going to well it for a going to you know remain valid for a short time and when that process which is running either that can be terminated or that will go to this waiting state then again short term scheduler has to decide which job is to be pick from this ready state why so very frequently shortterm scheduler has been called and the decision which that that the shortterm scheduler takes that decision you know remains valid for a short time that is why it is known as shortterm scheduler now what about mediumterm scheduler see mediumterm scheduler see the role of mediumterm scheduler is picks swap out the job from main memory don't pick up of the process main memory secondary memory and vice versa okay that suspension and thus resume this also suspended resume this is done with the help of this mediumterm scheduler so the process which is in suspended wait state it is not like that that process would be in waiting state for a long time or you can say that the process would be in waiting state for a short amount of time fine so that is why it is known as mediumterm scheduler it is not called so frequently as shortterm scheduler now what is the longterm scheduler is so the longterm scheduler decides the degree of multiprogramming means how many processors can decide at ready state at maximum at particular moment of time fine and that that decision is going to last for a long time that is why it it is being called in after a long time long term scheduler is not being called very frequently so this is all about the process state transition diagram and three types of schedulers so I'll say in the next video till then bye bye take care