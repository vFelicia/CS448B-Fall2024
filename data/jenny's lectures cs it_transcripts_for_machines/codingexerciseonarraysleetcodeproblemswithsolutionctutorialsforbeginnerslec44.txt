hey everyone I hope you are safe and doing good so in the series of learning C++ programming language we have discussed arrays in C++ right so based on that arrays concept we'll see uh in this video three to four problems coding exercises right in which we'll discuss two or three lead code problems as well on arrings right so see these are the problems so first these two questions are very very very simple actually after that we'll discuss two or three lead code problems right so this is kind of warm up for you guys right so first question is you have to declare an array of 15 integers right and then you have to initialize the array so that all the array elements are zero right then you have to assign 10 to the first element of that array and 150 to the last element of that array and this you have to print that are that's it this is very simple I guess right so you pause the video and try this out I will show you the program right there for this and for this also don't worry right second question is you have to write down a program to read two arrays each of size five right and you have to store the sum of these two arrays into a third array right this is also not so much Stu just read two arrays some values add two arrays and print the sum of that those two arrays into a third array right so you can just pause the video right now and try to solve these two questions after that we will move to lead code questions right okay I hope you have done this so the first is you have to declare an array of 15 integers so simply 15 integer any array name you can take I'm taking a r r and size is 15 right and initialize the array so that all the elements are are zero so how you can initialize at the here only 0o 1 Z right and obviously remaining elements would be all zero so you don't need to write down 15 Z here 0 0 0 0 no all the elements would be zero right but here one twist is if I want you to assign all the 15 elements to one I mean initialize this are so that all the 15 elements are one maybe if you will say here just write down one and all the 15 elements would be one no that is not the case in this case only first element would be one all the remaining 14 element would be would be 0 0 0 0 right so this is also for your assignment you have to write down this also in comment section how to assign all the with one or any particular value any one value either one or two or 10 or any one value right you don't need to write 1 one one 1 1 15 time no right okay now this is what we have assigned zero right then assign 10 to the first element so how to access first element a r r first element would be at zero index why this thing we have I have told you in previous video why the index is zero so 10 and the last element would be at which index size minus one size of the is 15 so 14 at 14 14 is equal to 150 and with a for Loop you can print this are right I hope you got this we'll see program also next is the logic of this is you have to read two arrays so suppose I'm taking here two arrays right so one array is something like this here we have 0 1 10 1 15 here we have any value right and you have to take a third array and there sum 1 + 0 1 15 + 1 16 0 + 10 10 7 1 6 10 or 15 25 and you have to print this array three so this thing you need to do right I think you can do this right with a for Loop just read this array or if you don't want to read just initialize here only when you at compile time only right when you declare that array both the arrays and in third array just have to take for Loop and access the element of array one and array two and just add those right and store into a third array and print this array right so this is also not so much stuff right so first let me just show you if you haven't done let me just show you practical of these two problem statement right program for these right then we will see this two some problem this is a lead code problem right okay so let's create a new file I hope you have done those basic problems right okay so let's start writing program now now in this in main what you have to do you have to declare an array of size 15 and you have to initialize that array with all values zero so this we can do now we have to assign first element so first element is at zero index so aray of zero would be 10 this is how we can modify array elements this is what I want to tell you in this exercise and the last element last element would be at 14th index equal to it's I think 150 right now simply print this array how you will print definitely with a for Loop if you want to access all the elements either you can write down 15 C out statement see out array of zero see out aray of one C out aray of two like this all the elements right but obviously that thing we don't want the duplicacy or that repetition that thing we can do with four Loop right so just repeat these line 15 times the one line C out line so just start with I i0 till 15 because index is from 0o AR index is from 0 so 0 to 15 less than 15 so it will be 0 to 14 right and simply print C out array of I right and and right and return zero let me just run this and I'll show you what output you will get here see the first is 10 0 0 0 0 and the last is 150 right so I hope you got this this was our first exercise this is our first coding problem right here we will solve the next one you have to take two arrays so we'll just take array one and initialize okay let's suppose we will not initialize this array here we will take input from the user so array one array two is also five size right sorry here would be semicolon now you have to let me in commment section sorry it's comma what is the size of third array because you have to store addition of these two arrays in third array so obviously that would be five same right so we have three arrays right now let's ask from the user input first array input second array first right so see out this line would be printed and we can just better to take here in I at starting to zero so you don't have to write down here data type so just use I directly I equal to0 and I should be less than 5 and I ++ right and here with the help of scene we can take the values rr1 is I now same one for Loop to enter secondary and it should be ARR two right let's run run this and see if it's working or not see enter first are element 1 2 3 4 or five element enter second element yeah it is taking all the elements right okay now you have to do sum and you have to do you have to store into a third array so we are going to access first of all first zero the first element of both the arrays and do some then second element of both the arrays and sum third element of both arays and sum like this right so obviously to exess also we have to use Loop so I equal to 0 I less than 5 and I ++ right so we are not just accessing we are doing a r R1 of I plus a r R2 of I same 0 0 then 1 1 then 2 2 then 3 3 then 4 4 right we are getting red line Y so it is undefined okay we have taken only a r r so let's take it three right now in AR3 we just because index is same because whatever is there at zero index zero index that would be sum and at zero index of third array that some would be stored right so now okay this is what we have done now one for Loop we can take and you can just access the third array or here directly you can print see out sum at index I is and how to access the sum a r r of I sorry three of I right now let's run this and see what output you are getting here first a element 1 one one one 1 secondary I'm taking only 2 2 2 so Su at zero index is 3 3 3 33 so let's just decorate it a little bit after printing one sum it should the next would be printed in next line so just put a andl right first element one second element 1 2 3 4 5 sorry 45 and 5 so sum at zero indexes 2 then three then 4 then 46 and then six right so this is how we can print that third third array or rather than printing here one more for Loop and there you can print you can access this third array right that is up to you so this is our second problem now let me just show you one lead code problem that is two sum problem so let's search lead code question on arrays and here we have C many problems we have so let's take the very simple one to some problem when you click on this problem you will get the description of this problem and that is given an array of integer num C given an array of integers nums the array name is nums and an integer Target return indexes of the two number such that they add up to the Target right and you may assume that each input would have exactly one solution right and you may not use the the same element twice right you can return the answer in any order right now pause the video and let me know in comment section how many of you gotot this problem statement by just reading from this no explanation from a third person right because it is very important when you're going to solve the problem you have to first understand the problem right if you're not getting exactly then how obviously you are going to solve that problem right so read out this problem one time two times three times four time five times just take a break and read it again and try to understand what is the problem because that is also a skill right before you know improving your coding skill you have to develop that skill also you have to understand the problems right I hope you got this what you have to do if you got this you can just pause the video right now and start writing this thing right now here what it is saying if you're not getting you can just uh see the examples like input would be input is this array 2 7 11 15 the target is 9 so output should be 01 01 output should be indexes of two numbers so 0 one are index at 0 and 1 we have 2 and 7 so 2 + 7 is 9 right so one array is given one target is given you have to find out the two numbers exactly two numbers which add up to the this target but you don't have to return those number you have to return return index of those numbers right here like 0 1 next example is 3 2 4 Target is six so what is the output 1 2 1 2 because 2 + 4 is 6 next is 3 three the target is 6 so it will give 0 1 right so how you will do this okay so let's see the logic how we are going to solve this two some problem problem this is like an example this is input Target is n so output should be 0 and one the index of those two elements whose sum is the target so nine sum of 2 and 7 is N9 so index of 2 and 7 if we represent this in Array then 2 7 11 15 the name of this array is num so index would be 0 1 2 3 so it should give 0 and one if I say the target is 18 so output should be this and this because 7 + 11 is 18 right so it should be 1 and 2 something like this right now how you will do this if you have seen that coding exercise in which we have done right you have to find out the sum of product of all the pairs of AR elements right if you have done that exercise then easily you can do this thing from there you will get the idea how you are going to solve this problem right so if you want some hint then go and watch that video I'll put that link in this side button and then come to this video and pause this video and solve this problem right if still you are not getting let me just tell you a little bit see how we can do this if suppose Target is 18 so you have to find out and there's exactly one solution that we know for sure right so for take two we will check 2 plus next element is this 18 no then we will see 2 + 11 is this 18 no then 2 + 15 is this 18 no then we take next element right like seven 7 plus no need to do plus with 2 7 + 2 is 9 this and this is same 2 + 7 7 + 2 both are same so no need to do this thing so just we do 7 plus the next Element no need to check the sum with previous element I hope you're getting my point 7 + 11 is this 18 yes this is 18 so index of this and this it will give right if sum is not 18 in case Su is suppose I'm taking 26 so 7 + 11 is this 26 no then 7 + 15 is this 26 no then we check 11 plus no need to check with 11 + 7 11 + 2 because 11 7 + 11 we have done and this thing so back is not you know not necessary to check because both are same so just do with next Element 11 + 15 is this 26 yes so this index it will return so now index would be 2 and 3 so this you need to check check so this is what you have to find out the pairs that we have done in previous video and the target is if the target is some of those two pairs I mean those that pair then return the index of those thing uh those elements right so for that we need two Loop because one is we will take this 2 and for with this 2 2 2 we take 7 11 15 right then we take seven with this 7 we will take 11 and 15 then we take this 11 with this 11 obviously we have only one element 15 right so one Loop is for this this thing and second Loop is for this value change right so one Loop suppose we are taking like I I is equal to 0 I less than 4 and because the size of R is 4 and I ++ right and then we can take next Loop that is J is equal to J should be started from the next element because we want to pair if we take two then pair with next element if we take seven then pair with next element so J would be I + 1 should start from I + 1 I is zero the J would start from 1 right so J less than same 4 and j++ and there directly we check if if the this a of I plus a of J is equal to is equal to the Target value right then simply you can print I and J because in I and J we have Index right that's it this is the simple logic I hope you got this you can dry this thing right let me just dry this for you uh 102 iteration at first this is I is zero and J is I + 1 is 1 so if a of I + a of J so I is z it is 1 right so access these two elements 2 + 7 is this equal to Target Target is 27 7 + 2 9 9 equal to equal to 26 no so we are not going to enter into this if block we not print this thing and we simply do now j++ so J is 2 I is still zero because we are still in inner loop so now J is 2 so a of 0 a of 2 a of 0 a of 2 11 + 2 this condition true no again j++ J is now three now a of 0 and a of three 0 and 3 2 + 15 17 is this equal to 26 no now J becomes four but now this condition is not true right so we'll exit from this Inner Loop and now in Outer Loop now i+ plus I becomes one right so these thing we we have done we have checked right now I becomes one right again now J becomes 1 + 1 J would be initialized with now two and I will take one and two then one and three like this I hope you got this you can just try on this complete completely right so now let me just uh you know write down the program for this let's see the code for this do some problem we'll take same example same you know name and all so num is there name nums 27 11 15 Target is 9 right so simply what you can write down two for Loop one for Loop is for like okay rather than again and again writing int and int here what we can do just take in I is equal to 0 a loop variable right so here simply we can write down I is equal to 0 and then I less than size of the is 4 and I ++ right now within this one more for Loop you have to take because one two number you have to you know check out at one time 2 and 7 2 and 11 so to store or to you know uh fetch these two numbers definitely you need to access these two numbers right so you will need two pointers actually or you can say you will need two index so that is why we are taking two pointer I and J or two variable I and J just to access those two values at the same time right with obviously two for Loop nexted for Loop so here we have in J is equal to i+ one because that would be from next element it should be started from next element less than 4 and a ++ right and simply we can do if this target whatever the target is equal to is equal to a of I plus a of J sorry simple then simply print I and with one space j because obviously we want I and J okay it's not a the name of that is nums sorry this is the simple one so let's run this and see what out we are getting 0o and one index is 01 if you want to check out again suppose Target is not 9 it's uh 18 so what it should give 1 and two see 1 and 2 right but if the target is not here but that is different case because we have like exact one solution there's exactly one solution definitely so if not present then after this see out after these four Loop we can simply print if you want to add this case also or no such two number exist right so if the target is 19 and if we run this so it will show you no such two number exist right now next lead code problem is we have you have to find out unique element in the array this one we have single number or we can select given a non empty array of integer nums every element appears twice every element appears twice except for one right find that single one you must Implement a solution with a linear and time complexity or use only okay this thing if you you are not aware about time complexity and space you can ignore this thing but you just have to read out this problem statement and you have to understand what you have to do here right you can just think you can just uh you know watch out these example input is 2 to 1 so output is one here 41 2 1 2 output is 4 so every element in the array is twice two time only one element is one time here four is one time so you have to return that element if one element so obviously it will return one only right here one is one time so it is returning one only so pause the video think about this and try to solve this problem okay so let's understand the logic of this every element is two time only one element is once and so you have to find out that element which is once in that array right so one ways simply if you think then simple in simple you know simple logic is what we will say count occurrence of every element and if the occurrence is one just print that element right so occurrence of four is one occurrence of this one is two like two is two so we just print this four right you can use nested Loops right same one Loop one I will hold this value and second second Loop J will check the next value next value next value next value and if four is one more time just count just to count plus plus count becomes two count like this right then I becomes this and then check obviously for all the elements right so like this nested Loops so but the time complexity for this would be order of n square right you have to do more comparison in this case so that would be worst case that would be not efficient algorithm because if you are writing your program or algorithm that would be efficient that is also check the efficiency and that would be measured in terms of time and space complexity right so here time complexity would be more in this approach this is worst case approach it's like same if from uh another room you have to uh take three bottles so what you will do one approach is you just go and bring one bottle again you'll go to that room another bottle again go to that room another bottle so three bottles and you are going three times to that room to bring those three bottle another approach is what you just go one time to that room pick all the three bottles and at once you will you bring both the you know all the bottles at once right so that second approach is better right same here also which algorithm which program which approach is better that is also measured and uh based on complexi time complexity and space complexity right this topic also in DSA I think I I haven't discussed this topic but I'll discuss this thing also how to find out the complexities and all right so you need to find out a better solution so one thing another approach what you can do you just think and you can write down in comment section how many approaches we can I mean how many approaches are there to solve this problem second is we can just sort this array first right if you sort this array then array would be one 1 2 2 and 4 just compare the adjacent element right if one is two time then definitely the adjacent element would be one that is for sure right so just compare adjacent elements with one Loop only you'll require one Loop right if both are same you just do if this is I just compare with this I + one right and after that jump two steps not I ++ I + 2 then compare this with this like this right and if the adjacent element are not same these are same same you move here now there is no element next so this would be only one time so like this you have to do you can do this thing by sorting this are right that would take order of n l n right another very simple approach is what I hope you have heard about exor operator bitwise exore this thing what is truth table for this exore if both bits are same it will give zero if both bits are different it will give one if both bits are same it will give 0 0 0 same 0 1 1 0 if bits are different then it will give one so this is what exor operator right so this thing we can do like if we apply exore in this case so like 4 exor 1 exor 2 exor 1 exor 2 so two and two are same so it would be zero 1 and one are same it would be also zero and if you do exort Zer with four then definitely it will give four because four and zero are not same so that would be like you can say the answer right so if you do exort of zero with any number then that number would be so definitely four is the answer here right then how how you will do here see at First We Take a number the answer suppose uh the output whatever is that thing is zero right so just take one Loop that would be from here to here right we'll do exort of a of I every number of this every element of this array with this number so at first let me just iterate you for for you iterate it for you at first number is 0 so 0 0 0 0 right so Z in binary suppose I represent with four bits so 0 0 0 now this this is what num is equal to num exor AI right so num is zero exor AI at first I is zero so four so we have Z 0 exor 4 if you convert four in binary then that would be 1 2 4 8 so 1 0 0 like this so it is 0 1 0 0 so exor of these are 0 0 0 0 1 0 four only right so in Num at first we have 0er now we have four now I ++ right I was at first zero now I become comes one so number is four means 0 1 0 0 a of 1 a of 1 is because I is one now one how to represent one in binary something like this now do exor because exor this is bitwise exor and this would be done on bits actually right so number would be converted into bits first so both are different 1 0 1 0 so this becomes what five right so in number now we have five now I + plus I becomes two so number is five and now a of two a of two is two now exort with two now two is this so here we have 1 1 1 0er so this is what seven I number we have 7 right I ++ now I becomes 3 0 1 2 3 a of 3 means 1 so exor of 7 with 1 0 0 0 1 so 0 1 1 0 so this becomes six this becomes six number is six now in Num we have six now I becomes 4 A4 is 2 so 6 EXO 2 2 is what 0 0 1 0 now 0 0 and here we have 1 0 this is what number is this binary and convert into decimal that is four now so in Num we have now four now I becomes five is this condition true no exit from the loop and just print the number in Num we have four and the answer is four so this is how actually the inner working of this exor operation right it's not like we directly uh here it would be done one then two then one and then cancel out this cancel out this and the answer would be four yeah the funai is this only right but the idea is this only but the behind the scene what is the working of this code is something like this this exor would be done and at last we will get four right so now I hope you got this how to do exore with sorry how to find out unique element with this this method using EXO right and here the time complexity would be order of n only right because only one time we are just going from here to here that's it and we'll get the answer see so how many come comparisons are there basically you have to do you have to find out that thing so how many comparisons are there from 0 to 5 that is n comparison n comparison only fine and time the loop would be executed right so this is how that that is the way how you find out the time complexity right in detail also I'll I I'll you know discuss how to find out time complexities right so here it is order of in so let's now write down program for this now this is the array we are taking right so just have to Traverse this array from 0er to definitely end of the array till five and I ++ and yeah let's take a number suppose I'm taking num is equal to at first number zero or you can say answer is zero answer you can take answer is zero it's up to you right now you just have to do answer equal to answer exort a of sorry AR name is num of I so exort with every element right and at last just print the answer that's it so it should give four I have already you know try on this thing see the answer is four so I hope you are getting why this is giving this correct answer and how the working of this exor operator if suppose I write here four and four but I write here one is one time so our answer should be one see the answer is one right so now one assignment for you guys is if this is the case you have to find out every element in the array is once but one element is twice so you have to find out that element right so this is the case like every element is single once and one element is twice so here four is two time 2 1 3 it is one time only so you have to find out that thing so the answer would be here also four right I hope you got the problem statement here in this case you have found out the unique element but there you have to find out which element is twice right so I hope you got the basic idea like if the problem is given then how to approach that problem how to think right now first we will see there are many problems lead code problems we will discuss right but first we will see like what are vectors what are functions because in those problems we have to use those things also right to write down a better better program right so first we'll see those things and then we'll see more lead code problems in this course we'll discuss many lead code problems also right so now that's it for this video next video we'll see in the next we'll see multidimensional arrays particularly 2D arays so now I'll see you in the next video byebye take care