so in the series of learning programming in c we are discussing some programs on strings some predefined functions um you know that we can use on strings in this video we'll talk about a program in which we'll convert a string which is in uppercase letters to lowercase letter and the function which is used the builtin function which is St Str LW lwr this is a function which is used to convert uppercase string which is written in uppercase to lowercase letters right but see you need you need to take care of one thing this is not you can say it's a standard function right because on some compiler it is not going to run it will give you an error like undefined reference to this function right like Str Str Upper St Str upper this function uh this function also and Str Str reverse St St strr some functions are there which are you know we can use in older version of Microsoft C right these are not we can say more precisely if I say that we cannot say these are standard C functions so if it is not running on your system maybe it's because of your compiler it is not going to run is on GCC compilers right now see we'll see this function as well as we'll write down our own function we'll not use this function and we'll write down write down our own function our own logic to convert uppercase to lower case so now what I want suppose a string is j eou n y and I have written this in upper case so I want that output should be in lower case j e n y yes this thing you want but suppose I input something like this j e n and y these two are small then also obviously out output would be this J would be converted to small j e is what small e so no need to convert as it is e then n would be converted this n would be as it is and Y would be converted right and if I write something like this Jenny 1 2 3 1 2 3 these are numbers these are not uppercase letters so the output should be Jenny 1 2 3 number should be exactly same I hope you getting my point if you're using any special symbol like I'm using hash in output also you know we want hash right because that is not any uppercase letter it's special symbol or you use something like this plus you are using then here also I want plus star you are using then star should be in the output only we we want to convert uppercase letters into lowercase letters right this we need to take care while we will write our own logic right now let me write down the program we'll use that function Str Str string lower Str Str lwr now what is the prot of this function this is defined in which Library string. H header file right so now it is going to take one argument care a pointer to string this Str Str is what the string which you want to convert to lower case a pointer to that string and what would be the output of this one I mean the what it will return a pointer to the modified string like care star a pointer to modified string modified string is suppose this is I'm taking St R and in Str Str I have j e n y this is what Str Str right obviously this Str Str name is acting as a pointer to the string so now it will return what now after converting this will become small J small n and small y so modified string so it will return a pointer to this modified string so simply you can print this Str Str and you'll get this output right this prototype of this is very simple right now see how you will use this if you use predefined function it's very simple to write down this program suppose a string is I'm taking here this string I'm taking right so simply use St Str lwr pass the name of the string that is S1 this is s s 1 right and simply print S1 that's it and you will get J small case letters J would be small T would be small and other letters are already small right I guess you got it but if you are not using this Str Str LW lwr function or if you want to convert lower case to uppercase then the function is St Str UPR right but we are going to write down our own logic here so here I'm storing this something like this this is a string this is memory has been allocated the character array is from 0 to 29 like 30 bytes memory allocation in which we have J only and after the completion of the string we have null character so this is string this complete is character array S1 is name of the string which is containing Base address of this director ARR I guess that that is fine now how to convert see we cannot how you can convert see first of all think how you will convert obviously we will store this character using a character system what what is it Sky character system in computer using Sky character system right fade marker let me refill this first so now see SK value SK I value of capital letters capital A is 65 B is 66 and something like this Z is having 90 small a is having what 97 B is having 98 and something like this Z is having what 122 I guess right now see how you will convert what logic you can write it's not like that simply you can check if this is capital letter convert it into small letter you have to tell the compiler we have to write down some logic some some maybe some addition multiplication or something we have to do some modification we have to do so based on Sky numbers we can do some modification right that is one way see the relation find out the relation between capital letter and small letter first of all then obviously you will get the idea right so what is the relation in 65 if you add 32 then you will get get 97 and 97 is small a same in 66 also if you will add 32 you will get 98 in 90 you will get 32 you will add 32 you will get 122 so that's the simple logic you have to apply if the letter is any character is uh Capital just add 32 in the SK Sky value and you will get small letter right but it's not like that simply add access this character and simply add 32 access this simply add 32 no we have to check if uppercase letter then only add 32 now this a is what small letter if you will add 32 in this case then you will get some other character maybe some special symbol and that's we don't want right so you have to put some condition also before adding 32 if any special character is there like I'm having here special character um uh this one I'm having one jenty one so if you add 32 in Sky value of one then obviously you will get some other like 33 you will get and that is SK SK value of some other special character and that you will get in output then that we don't want we want output one only only uppercase letter should be converted into lower case so you have to put some condition also you got it now what condition we can put C obviously we will will Traverse one by one we will see the character from here till null I'm writing here Star right this is our string I'm modifying the string now we are going to Travers obviously from this to this so write down a for loop I would be zero till null character we are going to Traverse the string we are going to check the characters character by character we are going to check the string right so the condition should be S1 of I not equal to null till then we will enter into this for Loop and we will do some modification as soon as we reach to null exit from the for Loop and just print the modified string right so this should be the should be the condition and I ++ right maybe you can write down some condition in some other way also like find out length of the string and that you can put as a condition it's not like that that is the only way to put the condition here that is only one way right there are multiple ways to write a single uh program right now here what we have to do we have to add 32 in these characters but based on some condition what can be the condition if have to check if S1 of I S1 of I is between A to Z then only we are going to add 32 greater than equal to SK value of a is 65 and S1 of I less than equal to SK value of capital Z is 90 if the character is between this to this then only we will add s so5 + 32 and after adding store at s SOI only because we are we are going to modify this only right and that's it and after this for Loop you can simply print percentag s and S1 or if you say like we don't remember SK SK value of a to z that is also fine you can simply write a and z but you cannot write here a because a is character so write here uh single quotes a and here capital z in single quote automatically it will will check you know it will take that SK value that is also fine right now I guess that's it now see let me run this program first of all I is zero sorry I is zero now s105 S1 of0 S1 S1 is this this string S1 of Z index is this is this null no not equal to null yes condition true enter here now check S15 s of 0 greater than equal to a j yes it is greater than equal to greater than a as well as you have to check this condition also it should be less than Zed right otherwise it will give some other output so that is why I'm using logical end don't use logical or operator otherwise it will not give you correct output right so S1 I zero yes it is less than uh Z both the conditions are true then only we are going to enter Then only it is supposed to be true because it is logical end if any one of this is false it is false right now S1 of I S1 of Zer that is in J we are going to add 32 so whatever the SK value of J there we will add 32 and we are going to store in si in si I zero same hair we are going to store so it becomes small J right I ++ I becomes 1 s i of 1 it is what a small a not equal to null yes true enter now see S1 of 1 S1 of 1 is a is small a greater than equal to this a see now here it is true because small a is having SK value 97 capital A is having 6 5 yes uh 97 is greater than uh what 65 condition true yes condition true but again check and this one is now this is I now small a less than equal to Z Zed is having SK value 90 is 97 less than 90 no this condition is not true so if any this this is true this is false so ultimately this would be false so now we are going not going to enter here that is why I'm saying use logical and not logical or if here you use logical or this condition is true so it will directly enter here and it will add 302 in small a also then you will not get correct output so it is not not going to enter now now I becomes two now it will check for S2 and like this I guess you got now you can dry run this completely at your own no need to to do this and once you reach here null now the condition is not true exit from the for Loop and simply print S1 that would be modified S1 right in STO star also it is not going to add anything because star is having some know ski value that is not between a to zed between 65 to 90 right so it is not going to enter here and not going to 32 so as it is star would be printed at your you know at your output screen that's exactly you want right now let me run this program on my laptop okay now let me create a file string lower do c right include header files then we'll write what um main function and here I'm going to take string S1 and size is 30 but I'm not going to initialize here we'll be initializing it run time so I'm asking enter string right and we'll use get S S1 right and now simply St Str lwr this one name of the string is this one just pass this function and simply print now string is I'm printing percentage s and name is S1 right and that's it now let me run this program and it should ask see enter string so I'm entering string here in caps j e n n y and right and see it is converting in small letters right some are small letter and some are capital letter which I'm providing the input right so uh now see that is very simple to write down here but let me write down our own logic here we will not use use this um this function so a for loop I is equal to 0 and then S one of what I not equal to I guess null right this is the condition fine and I ++ and within this four Loop just check the condition if s S1 of I uh should be what greater than equal to I'm using a here and logical and S1 of I uh should be less than equal to capital Z right uh it's now here in in within this we are adding what S1 of I should be equal to S1 of I + 32 just add 32 and that's it and after this four Loop just print S1 and now obviously we have to take before using this I we have to declare int I right let me run this now and string I'm entering here 1 2 j e n n y and hash then k h a t r i see output you are getting same one two Jenny hash as it is and katri would be in small letters right so that's it so in the next video you'll see one more program on string now I'll see you in the next video till then byebye take care