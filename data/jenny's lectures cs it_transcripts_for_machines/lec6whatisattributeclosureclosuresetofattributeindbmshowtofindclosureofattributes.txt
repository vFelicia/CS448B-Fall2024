so in this lecture we will discuss what is attributed closer and how to find out a tribute closer fine see this is one of the important topic in DBMS because the frequently asked question is what in net or gate or sometimes in your university a university exam is will that they'll give you a relation they'll give you some functional dependencies nothing else will be given no data will be given and you are asked to find out all the candidate key present in this relation right so to find out the candidate is all the candidate keys present in this relation you need attribute closer you need to find out attribute closer right although you can find out candidate Keys using those rules some strong exams as well but that would be lengthy process and difficult process but this is very easy if you know how to find out attribute closer then you can easily find out what the number of candidate keys in a relation or they may ask they'll give you a key and they'll ask if this is a candidate key or not so using attribute closer only you can tell this the given key is candidate key or not right so this is very important topic fine and if you know if you know how to find out candidate is from a given relation then you can easily solve the problem on on that the second normal form third normal form and bcnf right so for the point of view of normalization also this is very important topic right we will discuss it with two or three examples right now see if this is a relation given having five attributes and these are the functional dependency is given which are present on this relation right now see if can I say that a a determines B and B determines C so can I say a will determine C yes because of transitivity rule that I have already discussed a determine B B determine C so we can say a determine C definitely a will determine C can I write a will determine a yes because of reflects a reflexivity property right now see a determines C and C determines D C these are the functional dependencies which are directly given these also present on this relation which are in direct functional dependencies using the rules we are finding out the functional dependencies right that is why in that video I have told you when we were discussing Armstrong exams that why we are using these rules because of using those rules we can find out all the functional dependencies on a given relation right now see definitely this is true now can I write a determine CA determine C ceded remind C C retro mind B so definitely I can write a will determine D right using transitivity rule and a can determine G as well because a determined B D determine Y so definitely a will determine II because of same transitivity property right now here can I write a determines a b c d e of course i can write using that union property see here determinant is same a is determining all the attributes a b c d e so you can apply union property and you can combine these attributes right if determinant is same you can combine the dependant in the previous video I have already told you so now a can determine all the attributes if you have only a in this relation using a you can determine all the attributes of this relation right now see can you write here C B determine C and C determine D this is given so definitely I can say B will determine B B can determine D we determine D D determine e so definitely I can say B will determine using transitivity property right and B determines B this is always valid because this is a reflexive reflexivity rule right now C can I write B can determine B we can determine C so I can write C we can determine D D and E obviously you can write this thing because of using that Union property right now but we cannot determine a right we can determine all the attributes it cept a fine now see can I write see see will let remind didi determines is so can I write see will later mine II definitely see you later my in C definitely C can determine now can I combine all these C B and E using the Union property right now see evil determine what using this can I say something know so can I say only 1 e determine e you can determine itself only if you have e you cannot determine any of that reviewed other than e this is because of reflexivity property you can determine a now see what does attribute closer and how to find out so you can say what is closer said it is determined it is an operation which is determined by plus right if I write x and in power I am writing plus or superscript I am writing plus this is the symbol of this attribute closer if I am writing this thing it means this is attribute closer of X now here X is what set of attributes this is very important point X can be one attribute X can be two three four X is set of attributes right now X close this is what attribute closer of X now how to define attribute closer how to find out it will contain all the attributes of the relation which are determined by X that is attribute closer of X I am writing the definition here it will contain set of attributes determined by X and here X's set of attributes it is not necessary that X is only one attribute it may be two three four any number of attributes right now in this relation if I ask you what is attribute closure of a then can you tell me how to write down first of all attribute closure of a just write down a and in power you write plus now here what is that fable closer of a how many and which attribute of this relation you can determine by a I have already discussed a can determine all the attributes right so attribute closure of phase a b c d e right now if I ask you attribute closer of a B I told you that this is X and this is set of attributes now what does attribute closer of a D how many attributes and which attribute you can determine using a D check see if you apply that argumentation rules after that I will tell you the simple trick first of all let's check it with argumentation rule see here a determine B so using argumentation can I write ad determines B B yes this is argumentation property you must check out previous video first in the Seibert and then come to this video right because I am NOT going to explain all the properties here now here can I write a B determine B and a be determined D this is what splitting property or decomposition property fine so now C ad can determine itself that is a and B using reflexivity property using this ad proper ad can determine B so I can write B as well ad can determine D so I have already written D as well right so I I have found this thing still you need to take care still some attributes are remaining you need to find out those attributes can be determined by ad or not now using of these rule you need to check out which property you can apply with Armstrong exhume you can apply and this is this should be very tough for lengthy process now simple trick is what simply ad is there you need to find out ad closer this concentrate on the trick write down ad because obviously that is reflexivity property ad can determine itself that is for sure this is what reveal dependency and this always holds an honor relation right now simply write down ad fine now I have ad now see the dependency is given see here a determines B it means if you have a then you can determine D right so now check do you have a checkout we have aid yes we have a so using a can I determine B definitely I can determine B so here you can write B right we have used this functional dependency now next is what we can determine C now check do you have be with you in the attributes yes I have B so using B I can determine C so here I can write C fine now this also used now using C I can determine B and I have C so here I can determine D if I have say you can determine D so definitely in attribute closer I can say that ad can determine D right now no need to write down this D again because I have already taken D so no need to write down it but we have used this right now D can determine e do you have B yes I have D so I can write E as well right now we are done and see here we have all the attributes a B C D and E so now ad closer ad if you have ad then also you can determine all the attributes of this relation right now see if I ask you what is closer of be how many attributes which attributes you can determine with B we are not going to use the rules exam rules directly we will check using B you can determine B right that is a reflexive 'ti property right now check the dependencies given now here first as a can determine B do you have a because a can determine B so you must have a to determine B do you have a no we don't have a so you cannot use this one here now B can determine C do you how B yes I have so I can determine C now C can determine B I have C so I can determine B now D can determine I have a B so I can determine e right so these I have used now again check because we are maybe we using these functional dependencies maybe we have that attribute which is used in this functional dependency right so it's not like that only one time you need to check find again check again this and this this we have used we are left with this one a determined B now check now do you have a no I don't have a right so now also I cannot determine and now C B and C this I have used this I have used this I have used so in the separation there is no change in this set of attribute now you can stop right no need to check again now this is attribute closure of B I hope now you got how to find out attribute closer let us take one more example find out attribute closure of C D definitely I can determine C and D with the help of CD that is reflexivity property that you can easily write down without looking at the functional dependency is given functional dependencies now check the functional dependencies given a determine we do you have a no I don't have B determines C do you have be no C determined B yes I have C but I have already written D so no need to write down again D determine Y do you have B yes I have D so you can write down e now again check because I have added one attribute now check a determine B no we don't have a B determine C we don't have b c d i have used and de I have used now there is no change in the situation there was no change in this set of attributes so now stop so now C D close there is C D and E means if you have C D then you can only determine C D and E you cannot determine the value of a and B now here which can be a candidate key C candidate key is what it is a super here you can say minimal superkey or you can say it is a super key whose proper subset is not a super key I have already discussed all the keys and detail with example in the previous video you can check out that between the cybertor right now obviously now first off we'll find out what is super key here can you find out which is super key super key is what I have already discussed what is super key but here now I have only functional dependencies and relation and within the context of attribute closer I'm going to tell you the definition of super key how to find out super key you have this attribute closer right because that is very simple to find out we don't have any values on the table we have just given a relation or a table having some attributes and functional dependencies no values are given like SIDS roll numbers and name and something like this right so now super key is what it is set of attributes who's closer contains all attributes of a relation so if this is the definition of super heat super key is a set of attributes it may be one attribute or set of attributes main two or three attributes never there who's closer contains all attributes of a given relation or a table right now here see a closer a closer contains all the attributes of a given relation so can I say it is a super key yes he is a super a is a super key right according to the definition fine now see ad closer also contains all the attributes of this relation ABCDE and here I have a B C D and E so a D is also a super key fine is be a super key find out be closer that I have already find it found out that is BCDE but there is no a in the closer I have only four attribute not all the attributes so B is not a super key is C D a super key no CDs also not as super key right now if I ask you the total number of super keys in this relation how to find out that thing C a is a super key fine so if I write a B is this a superkey definitely it would be a superkey if only i can determine all the attributes so definitely if you will add a with any other attribute given then it also can determine all the attributes fine so for that find out a be closer if the closer contains all the attributes of a relation then you can say a B is also a super key although no need to check if a super key then you can combine a with any other attribute that would definitely be a super key fine that is common sense now find out a B simply write down a B because using reflexivity rule you can write down a bab can determine itself a can determine B do you have a yes but I have already written B be determined C so I have B so I can write down C C determined B do you have C yes I have C so using C I can determine D did it remind you do you have B yes I can determine a now see ABCDE I have all that reviewers I have used all the functional dependencies so you can say that a B is also a superteam AC also a super key ad also a super Krete ABC also would be a super key because a is a super key so you can combine a with any other maybe with one attribute to attributed three attribute for attributes like ABCDE that would also be a super key so how many super heat can be possible here C using these four attributes how many combinations can be possible to raise to power 4 that is 60 and all the 16 combination obviously we have a right and using these we can have 16 combinations so you can say they're 16 super keys can be possible in this relation now if you will same and we are not taking a 10 B C or only CD or BCD be a super key right so you can check out the closure of each one now rather than checking the each one you can check out closer of BCC the complete all the attributes other than a find out closer of BCB BCB e obviously I can write down this thing right because all that reboots can determine itself right reflexivity property now check out you can you cannot determine a with the help of DS see a recommend B I don't have a we determine C but we have B and C both C determined be but I have B anyways D letter my knee but I have E also but I cannot write down here a because that reboots which you have using those attributes you cannot determine a right so the attribute closer is not containing all that I got of a relation so you cannot say that B C D is a super key now if the complete is not a super key then definitely only you if you take only portion of this complete then definitely that cannot be a super key right that is for sure so the super keys number of super key present are 16 in this relation right now candidate is what about candidate key C now super keys are 16 now candidate he is minimal superkey or you can say the super key whose subset or you can say whose proper subset not subset proper subset is not a super key right what is proper subset that I already discussed in that video that we have been we will discuss when we have discussed that the types of keys right now see E as a super key right so proper subset of a may be what proper subset contains less attribute than this said it has only one attribute less attribute means you cannot take a so that would be Phi and Phi cannot be a super key right so no proper subset of a is a super key so definitely a is what super he as well as candidate key right now see this is also super t10 ad be a candidate key definitely not why so because proper subset of ad is what one a1 is D and out of two proper subset K is what already a super key but candidate key is what the super key whose proper subset is not a super key so this cannot be a super clean so I guess now you got out of all the available out of all the 16 super key is only one candidate he can be there that is a because all the 16 will have a right either a D or a B or ABCD or ABC or something like this and all the proper subset of all the other super case would be would contain a definitely and this proper subset is super key so no other super key can be a candidate key only one candidate key is possible here that is a fine I hope you got how to find out can you get key super keys and all right now we will discuss it with help of one more example so now let us take this example here I have relation this and having five attributes and functional dependencies are only two functional dependencies right I am taking a simple example in next video will discuss it with complex example as well right first of all you get this thing now see how to find out attribute closer I am saying that find out attribute closure of a means a plus how to find out it directly write down a because of reckless reflexivity rule a can determine itself right now check out the functional dependencies a can determine B so now do you have a if you have a in that case only you can determine B right so do you have a yes I have a so I can determine B you so you can write down here B next is B can determine II do you have B no I don't have be fine and that's it we have only two functional dependencies we have already used in this one so now a closer is what a B now next is if I say B C find out to be C closer so directly I can write down B and C because of reflexivity property now check out the dependencies a will determine B do you have a no they will determine a do you have D so using BC I can only determine BC nothing is right so I hope now you got how to find out attribute closer right now here see what is super key now find out candidate keys in this relation now see if I write down ABCD and E find out attribute closure of this all the attributes I am taking because obviously this can be set of attributes so now this would be ABCDE because each attribute can determine itself because of reflexivity rule right and here that a good closure of this is having all the attributes of the relation so this is what a super key definitely right and we already know if you take all that we build off a table or relation that would be a super key definitely because duplication of you know there would be no duplicate records in the table right now if you check a B D and E is this a super key or not find out closer of first of all obviously this thing to find out is it a super key or not what a candidate key or not find out closer of the given key right now closer of this is what simply write down a b be because of reflexivity property now check out the dependency is even a determine B do you have a yes but I have already be do you determine e you have D but you have already e so I cannot use this for this right so now we are left with C here we don't have C so this cannot be a super key right now if you write a C D E now check this is a super key or not to check this thing first of all find out the closer of given key now closer is what you can directly write down a CBE whichever is given because of reflexivity property now check the dependencies a determine B you have a yes I have a so using a I can determine B if you have a you can determine B so I can write down here B now next says D determine Y do you have D yes but I have already written a so no need to write down it again and now see the closure of this is containing all the attributes of a relation a b c d e c order does not matter here in a set right you can write down this or you can out ABCD so this is what our super e right now if you check a CD only is this a super key or not now find out closure of this thing you can simply write down a c d right a determine B do you have a yes so I can write down here B do you determine Y do you have B yes I can write down I have used all the dependencies and here also I have all the attributes in this closer set the closer set of this a CD so this is definitely a super game fine so now C can it be the super can be candidate key no because proper subset of this is what this also this also and both are super key so this cannot be candidate he this is not super key so obviously this cannot be candidate he is this can be a candidate key this proper subset is what one is a CD and a cz a CD is still a super key so this cannot be a candidate key what about a CD proper subset of a CD is what AC you can see the CD and ad right and a C and D so any of these if a super he then definitely it would not be a candidate key now find out AC closer see here I can write down a and C now functional dependencies check a determine B I have a so I can write down here B D determine E but I don't have B so I cannot use so this cannot determine all that review so this is not a super key what about C D here I can write down CD I cannot use this one because I don't have a I have D so I can write down here E right again check a do we have a now no I don't have so this is not a super key because the set of closure set is not containing all the attributes you can check out this closure this will not be a super key this and this this would not be a super key right so now none of the proper subset of a CD is a super key so this is a right now you will see that there can be many combinations for all the combinations you need to check proper subset and other than half you can find out that it would be very tough to find out that how many candidate keys are there in a relation right if suppose I have in a relation ten attributes then definitely to find out proper subsets of each super key and to check individually that would be a tough process right so now for this you need a shortcut and that short break we will I will discuss in the next video I'll take one example one or two example and with the help of that short trick I'll discuss how to find out all the candidate keys in a given relation right within second seconds you can find out all the candidate keys right in this table in this relation for this relation only one candidate he is there that is a CT I know the answer using that trick only but that trick I'll the solution of this why I am saying that only ACD is a candidate key no other candidate he is there right that I'll discuss in the next video fine the main promote of this video was to get to know what is attribute closer and how to find out attribute closer right and what is need of attribute closer you need attribute closer to find out super is an candidate keys now we will discuss it with a simple trick in the next video so now we'll see in the next video till then bye take care