hey everyone I hope you are safe and doing good so in the series of learning C++ programming language uh we have discussed functions in C++ right so from today only we are going to start oops Concept in C++ class as object encapsulation abstraction polymorphism inheritance and many more right now before you know uh discussing those Concepts in deep let me just help you to understand first what is object ored programming what is oop and how this is different from the other approaches like Po procedure oriented programming right so this thing we will see in this video what is poop what is op advantages and drawbacks of these two approaches although I have discussed these things in a previous lecture also that also I'll link in the side button you can check out that video also right in this video I'll just give you a brief about know what is O right so now till now we uh you know we have written so many programs without functions as well as with functions after you know introduced after you know uh knowing about those functions we have uh written some programs using functions as well right so till now I guess you know I can say that we were following that procedure oriented programming approach right there are different different paradigms to solve the problems structure programming or poop or oop many things so main are Po and op so these two things we'll discuss right so C is procedure oriented programming language po now first let's understand what is this PO procedure oriented programming procedure means in this basically you know we focus on how to do the things how to do the things mainly focus on how procedure means how right so in this approach that programs is basically we can say it's a collections of functions we write so many functions and functions we call one function from another function and like this these functions are interrelated and interdependent with each other and all right so this kind of approach of solving a problem or writing a program is known as poop approach procedure oriented programming in this we uh focus on how to do we focus on the actions or we focus on the procedures or we can say we focus on the functions basically a program is having many functions right and we have some like now the data data is declared separately we have some global data as well as we have some local data which is local to function right and how these functions are going to uh you know uh call or to be called by passing arguments or I mean the data is to be passed uh using arguments sorry so if like if you visualize this thing something like this we have global data G is global data and I having suppose three functions this is function one and this function is having its own LD means local data so like this we are having three functions and every function is having its local data and some global data is there in our program right so how data is to be passed here data is pass in arguments right so it's like this is global data and this is accessible by all the functions so here we can say that in this approach there is less data security why I'm saying this because if one function is accessing this data so this function can modify this data this function can also modify this data this function can also modify this data so how this data is secure data is moving freely in the program so there is less data security right that is why when we were solving you know when we working on in that in you know on an organization level right on a large project or when we are writing you know some designing some software then we follow op approach rather than this approach for simple program it's okay but it's not like that we are just writing these simple programs addition of two numbers factorial F series and all no obviously the these programs are just to you know uh just to make you understand the simple logic or the basics of programming obviously after that you have to work on large projects you have to solve real world problems you have to make softwares so there we will be using op approach right because in this less data security is there and there are so many functions and all the functions are like interrelated like this and all these functions are interrelated with each other this function is calling this fun function this function is calling calling this function something like this right so there is so many interdependency in these functions so if you want to change in one function then you have maybe you will have to change in some other functions also or it will definitely affect the other functions as well or if you want to add some more function that also will be difficult right so for solving a large problem obviously this is not a correct approach there are so many drawbacks in this PO approach right but one thing I can say like it's easy to learn definitely but here one more problem is what when to pass the data in these functions then these functions needs to know the structure of the data what kind of data is to be passed here right and if you change in that structure of the data then you need to change maybe in many functions also right so this is also one drawback of this PO approach and because of this interdependence see in these functions it's difficult to understand the program difficult to maintain difficult to debug sometime right and for more scalable you know projects we can't use this approach because of these limitations so the next thing is we now comes to op approach object oriented programming approach now what is this approach this approach basically focus on what to do not how to do what to do right now object oriented means the more you know focus is on objects this programming approach is revolved or oriented basically around object now what is this object in real world if I say like this uh pen it's an object my laptop my camera cycle or my you know table chair these are like real world objects or entities we can see so objects are nothing but real world entities right and these real entities we can represent in programming with the help of this oop approach same we can model this real world entities in programming as an object as well right so we have concept of object classes and many you know Ops concepts are there right so basically this approach op approach is to model real world scenarios in programming but how this line is very important if you go to this line oops concepts are sorted but after you know uh discussing all these oops concept the four pillars of oops writing so many programs then you will get the meaning of this line and what is that line op concept these are you know used to model real world scenarios in programming right so if you're not getting the meaning of this line right now it's okay after you know writing so many programs and discussing all the concepts of UOP you will get L right like what are real world problems like maybe you are um uh developing any software regarding like Library management system or regarding student management system or Hospital management system or these kind of softwares right like any uh ecommerce websites we have so these are these software has to be made to solve some real world problems right so behind the scene there are so many you know there is so much code so we can't in that case we can't you know follow that poop approach because there would be lots of functions every function is interrelated and interdependency and all so that would be very difficult to code right in that approach but in op we can model easily this thing in programming with the help of classes and objects and other RS Concepts right so the main thing here is those functions and the related data I mean the data and the functions which will be performing some operations on that data would be bound in a single unit and that is like basically object so here what I want to say is here we have a function and the data this would be wrapped within a single unit right some functions we have and the data the related data I mean these functions would be performed operations on this data so that would be wrapped in a single unit so this is basically this one this complete is known as object this is known as object and they can also interact with with each other using message passing right those also and that thing also we'll see fine now now the rafting of the functions and data within a single unit is basically known as in capsulation right and objects are nothing but real world entities right and classes now classes are simply blueprint for these objects right now let's suppose uh I have one object like this Spen I have this Spen right so this object is having some property right like or maybe some attributes also like it is black in color properties are it can write right so something like this and suppose like me I'm an object right so every like everyone in my class there are 60 students these are objects each are having their own attributes and properties attributes like you know they're like maybe number of eyes one nose hair hair color and all these are attributes and properties are what they can do I mean like I can code I can sing or I can do something like I can cook so these are the functions or these are the you know uh properties that I can do these are some tasks I can do so these are like functions right and class is like a blueprint so class is like we can say like human human is a class so from this blueprint we can drive many objects like Jenny or many other objects as well these are objects right like a blueprint means um in a construction the map when you go to go to that architect then you know there would be one map and that has to finalize after that construction would be started so one map you have that is blueprint and the actual building that would be object now you got classes and objects in detail you'll see in uh next video right so I hope now the basic idea you got now what are the advantages of this object programming now here this this the data and the functions are binded with each other closely right so data will not move freely here in the program so more data security is there and to secure the data here we have specifi public private protected right if you want to make your data public means available to everyone you can make that public if you want to make make your data private you can make that private using exess specifier right you can Implement obstruction here right obstruction means in real life uh we have like um there is a switch board so once once you uh you know once you switch on that press the button press the switch to own that fan that's it fan would be own and it's like you don't know what is happening behind the scene there are so many wires how the electricity is to be passed and all so that is kind of abstraction you have the remote of AC you just switch on the AC and that's it you don't know what is happening behind the scene right behind that you know under that remote what you have you just see the interface those buttons only you just press the button and the functionality would be done according to you right so this is kind of abstraction you don't know the implementation you only know what you need to know the simple things right not the implementation or the other details so that is kind of obstruction that we can achieve here with OP approach and reusability is more here reusability of the code because of we have inheritance one concept right so you can create a like new class uh from that existing class right and you can inherit the features I mean the functions and all from that already existed class right so Reus is more here one more thing is so it's like we can use those already built in classes and some other applications right but we cannot apply this oops concept we cannot apply this oops approach to solve every problem it's not Universal thing you can't apply this everywhere there are some problems to solve them you have to use po approach only right and it's a little bit tricky to learn these concept right and sometimes uh the program would be a little bit lengthy if you follow this approach so it would be you know the performance would be uh performance would be affected a little bit and it can consume more memory and more CPU resources than po sometimes because see these objects contains both functions and data together so sometimes it it requires more time or more space to create such objects right so there are some limitations as well of this op approach as well as some advantages over po approach but definitely when you are working working on that organizational level working on large project you are creating softwares then definitely you follow this approach like op approach because of the advantages you have right and one by one each concept now we will be discussing later the next video would be about classes and objects right proper program I'll show you fine so now I guess you got the basic idea what is op and what is Po and what is the difference and all if you have any question you can just let me know in comment section right now that's it for this video now I'll see on the the next video till then byebye take care