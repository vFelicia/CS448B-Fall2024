in the series of learning programming in c we are discussing about operators in c in previous video i have discussed two types of operators arithmetic and assignment operators all the operators with in detail with some examples in this video i am going to talk about increment and decrement operators these are the most confusing operators i guess out of all operators for me these operators was the most confusing during my btec because see these operators we can use into two cases in two types prefix as well as postfix so we are going to discuss all these cases in this video with some examples also you'll see the output like when we use these operators in a program then what should be the output what is the precedence of these operator associativity of these operators all the things we are going to discuss in this video right so now let us discuss what are increment and decrement operators these are unary operators actually increment we can use these in both two cases prefix and postfix you can say pre increment operator post increment operator predecrement operator post decrement operator if you write pre means we write this this the the that operator before the operand and post means we write these operators after the operand right like this same with minus minus you can write so plus plus means it is going to increase the value by 1 the of the operand value by 1 minus minus decrement operator means it is going to decrease the operand value by 1 if i write plus plus x it means x is equal to x plus 1 if i write minus minus x or x minus minus it means x is equal to x minus 1 right and here this x is what it is operand so now let us discuss about prefix notation so you can say pre increment and pre decrement operators right in prefix notation what will happen the value is first the value is going to be incremented and then we use that value the incremented value the updated value right if we use this one that that increment operators i am discussing about increment operators right then we will discuss decrement see suppose i am taking x is equal to int x is equal to 10 and here i am writing suppose i am taking another variable y and here i am writing y is equal to i am discussing this pre means before x suppose i am writing this one so this is what preincrement operator so now if you print the value here when in program execution suppose you write a complete program let me write you can also include that clear screen and get ch and then you can include that konu dotage i am not including those here so now control will go to here the first line of this main function when you start execution then in x one variable x value would be assigned two bytes and the value is here ten i mean memory would be assigned to x and another variable is y memory would be assigned to this y also suppose memory address is thousand and here we have two thousand i don't know that this i'm just supposing the address and then why we don't have anything we are not initially initializing this y now next line is control will go to next line now y is equal to plus plus x now here we have two operators assignment and that increment operator so precedence of this increment operator is higher than ah assignment operator so first this operation this operator would going to be executed right now this is what pre prefix notation or pre increment pre means first the value would be incremented and then that value would be used in this expression right so now x value is 10 so now x value becomes 11 and now this 11 would be assigned now this operator is what it is going to assign whatever the value at right hand side to left hand side so y now becomes 11 if you will print x then output is 11 y output is 11 right and here suppose you are using now x plus plus in that case in starting x value is 10 we don't have anything in y now i am going to print x and y now what will happen control will go here here first of all that increment operator would be executed now here we have post fixed notation post increment post means first that original value of that operand would be used in this expression and then the value would be updated then the value would be incremented right so now first whatever the value of x that would be used first of all because after here if you suppose you can understand like this if it is post then after the semicolon after the completion of the statement after the semicolon now the value would be incremented before semicolon the value would be same in post in pre value would be incremented first so now x value is what 10 so x value would be used in this expression now x value that original value would be assigned to y so now y is equal to 10 and now x would be incremented now x becomes 11 so now here x is 11 and y is 10 i hope you got it next suppose i am using it same with the decrement operator if you will use minus minus here then at its starting x is this one 10 and y is nothing we don't have we haven't initialized y so now see this is what post decrement it means post means first the original value of this operand would be used in this expression and then it would be decremented then it would be modified original value is 10 so 10 would be assigned here and now the value would be decremented that is x minus minus 10 minus minus means value would be decremented by 1 so it becomes 9. now value is 9 and here output is 10 if you will use here minus minus x then what should be the output here we have 10 here we have nothing it's starting it is pre in predecrement in predecrement first of all the value of that operand would be modified would be decremented and then the modified value the updated value would be used in that expression so minus minus x first value of x is 10 first of all it would be decremented that is 9 it becomes 9 see values would be incremented and decremented or you can say modified in memory right because we have initialized some memory to this and we have stored that value in memory so now whatever operation would be performed that would be on the value which is in memory right and now this 9 9 would be assigned to y updated value so here we have 9 output would be 9 and 9. so this is what you can say that fend off this increment and decrement and prefix and postfix notation of these operators right now the this increment and decrement operator you can use with integer value as well as float value it's fine right here you can use 10.1 and then also you can use this plus plus and minus minus so you can try it out at your own right and let us take one simple example also and see if you are using this line it means you can also write this line how first the value would be decremented x is equal to x minus 1 and then the value would be assigned to y is equal to x these two statements and this line is same and if you are writing like this y is equal to x minus minus how you can write down this statement first value would be assigned to y and then value would be decremented this line is equivalent to these two lines you can also write down this line in the form of these two lines and this in the form of this same with plus plus so now let us write down a simple program and let me show you the output of that program let us take this example simple program i am taking here you can also use that clear screen and get states also i am not writing that complete program but here the control will go here to main function you can see the first statement in main function this is variable declaration so in memory a how many variables four variables would be assigned some memory right and in a we have five and in bcd we don't have anything right there are some addresses of these memory locations now next control will go to here now b is equal to plus plus a plus plus a means it is pre increment right preincrement mean means first of all the value would be incremented and then the updated value we will use in this expression so a is 5 it becomes 6. and now 6 would be assigned to b now b becomes 6 right now control will go to next statement c is equal to plus a plus plus now this is what post increment post means first the value original value would be used in this expression and then that value would be updated so now first of all a is what 6 see we are not using here 5 because the the meaning of this line is just to declare these variables now that's it now we are going to operate on the these memories memory locations whatever value is there in this memory location now updated value is here 6 because by executing this line we have already updated value of a6 now post means first of all that six would be assigned to c and now the value would be implemented that is seven next line d is equal to plus plus eight this is pre increment so first of all the value would be incremented that is it becomes eight and now eight would be assigned to d that is eight and now if you will print a then output is eight same if you will print b output is 6 c 6 and d 8 right same you can use here minus minus so there are see many types many examples we can take based on increment and decrement operators i hope you go to the basics what is the meaning of these operators right in a one expression only we can use multiple increment and decrement operators like maybe here here also i can use here like plus and plus plus a or maybe i can use plus plus a minus a plus plus like this in one expression i can use multiple other these increment decrement operators if this is the case then we will check precedence as well as associativity precedence means that these arithmetic operators are having lower precedence this increment decrementer are having a higher precedence and associativity of these increment and decrement operators are what right to left so that some more maybe four or five examples we are going to discuss in next video then you will get a better understanding of these operators but i hope you know the basics you get the basics of these operators right so now i'll see you in the next video till then bye bye take care