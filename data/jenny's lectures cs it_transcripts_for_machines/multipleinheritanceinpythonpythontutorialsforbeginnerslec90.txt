hey everyone I hope you all are safe and doing good so in the series of learning Python programming language we are discussing inheritance in Python in the previous video we have seen what does inheritance basically and why we need this concept why NATO inheritance what are you can say some benefits of using this concept right inheritance Concept in object oriented programming right that thing we have seen in the previous video with the proper example with the help of a program now we will discuss types of inheritance so there are single inheritance multiple inheritance multilevel inheritance hierarchical inheritance and Hybrid inheritance five types of inheritance right okay now whatever we have seen in the previous video that was single inheritance means one parent class and from there we derive one class which is child class so this is parent or you can say base class or you can say super class this is child class or you can say derived class or you can say subclass right so only one child class will inherit properties from one parent class so this is what single inheritance right this thing with proper example we have seen in the last video right now next is multiple inheritance now what if you want to inherit properties from two or more classes like we inherit properties from our mother and father as well so we are having two parent classes right so parent one and parent two from both the parent one child class means one child class should write class inherited properties from more than one parent classes that type of inheritance is known as multiple inheritance parent classes may be two three four five means more than one if one parent class one child class that is single inheritance if one child class but more than one parent class or base classes that is known as multiple inheritance I hope you got this property from our father and mother as well so we have two parent classes right so this is what multiple inheritance right or you can even like this is mother this is father and this is you fine now how this is different from the single inheritation why why multiple inheritance what is use of multiple inheritance right and now see if this this child class can access all the attributes and methods of all the parent classes for this from this parent class from this parent class as well right I hope now basic idea you got what is multiple linearities now let's see this with the help of one program okay so let's create a new file here and we are discussing multiple inheritance so multiple inheritance showed py right same class name we will take like in the previous video we have seen this class human and with class mail so let me just copy paste this thing and so in the previous case we were having like one human class and this made classes deriving from Human class so this is Base Class women and male is derived class or child class one Base Class and one side class then this is what single inheritance right this is the example of single inheritance right now we're assessing multiple inheritance so we will take example of where like we are having two base classes and one child class so Base Class will consider like human and male so let's remove this this male is not deriving from Human this is separate human class this is separate male class now let's define one more class okay let's delete these things and we are having one more class let's suppose we are having a class boy and boy will inherit both human and males so what is what is the syntax name of the classes separated with comma okay and make now this is deriving both the human class and Main class so now let's let's have a function in human class I am having simple function like that we have taken previous video and this is simple one I can eat in male class I am having one more function and that is flood right so one function sorry one method and one method right now this boy can inherit both this method and this method right let's see I'm not writing anything in this boy class let's write down just pass so now just create an object from this boy class like boy underscore one is equal to name of the class is boy and no need to pass anything now let's see with the help of this boy object you can access C eat method and load method eat method is from Human class and flirt is from male class right and in it obviously we are not having any in it so this is what that specifically for that object this object only so let's call this floor and let's run this so it will print I can plot like this if you are having more than one method in this more than one in this then all the methods it can inherit right okay let's see this example I am having like same method def work the same method I am having here but rather than work I'll I'll write here I can code so method name is same work and work but for women class the definition of this method is different I can work and mail class is having its own definition like I can code now the problem is I have told you it will access both the two method of human both these two methods of male means all the methods of both the classes right now work and work we are having same methods so in this case what will happen see let's see boy one don't now see flirt eat and only one work method and that is from Human class it is deriving it is not driving the work method from male class let's if you print work then it will print only I can work see I can work means this order in which order you are writing these base classes while creating your drive class that matters if I in the first order the first written class is women means if the method name is same in both the class is then it will access whatever class you have written at first from that parent class it will access that method right so it will not access it will not derive the work method of mail class if you want to now the problem is the question is if this question is biting you like if I want to print I want to call this work method then the solution is what means you you are having a creative mind good for you now the one one solution is first I can write mail and after that I can write human this class and now let's print this work method and see now it is printing I can code right from this but this is not a proper solution if you are having multiple I mean classes many methods so it's not like that every time we will change the order right so let's keep this order like this human and male now the solution is what I'll tell you first from which class you want to access that method so from mail class so just write down the name of the class then dot then name of the method work here I am having work and floor two methods so I want to access work but in bracket you need to pass on which object you want to call this method I want to call because I haven't created any object of mail class I want to call this method through object of this boy class the derived class so just in bracket pass the name of the object boy one let's run this okay let's uh comment out this thing now it will print icon code see although in the order mail is at second number but still we are accessing this work method from me from the second class so I hope you got the solution right answer this question now these are all about methods and see this boy can also have its own methods like I I am just defining a method one method I can sleep and same method same method work I am also defined here I can like test like testing Department coding department and testing department so testing is also important so I can test so now if you simply call with this boy this work method just comment out this line then what it will print see I can test so what is the order of polling the methods see which boy Dot and see walk from boy flirt from male sleep from boy eat from Human so this work from boy we can access using this this particular you can say notation using object name dot method name so okay although it is it is it can access this method in this work method also because obviously we are inheriting this these classes this is child class of these two parent classes so it can access all the methods of both the parent class but if you print something like this and Method name are same in all the three classes then what is the order first it will search for that method in its own class then the class which is at first order then the class which is at second order right so this kind of thing this ordering this is you know something known as mro here like method resolution order so mro is Method resolution order so if you want to check out this method resolution order for this boy class then we just simply write the class name boy Dot and you can see mro as you can see here mro it's a function as well as a field so either you can use this or you can use this I'm using the function right now let's run this and see okay it is a function you are calling so obviously you have to print you have to write down print statement here because whatever this function will return that obviously you need to print see I can test and the mro for this class is first class is main class that is boy so first it will search in boy class then it will search in human class then it will search in mail class so this is the Mr method resolution order for this boy class right and then if any object is created right so see this mro thing is very important in multiple inheritance so it's just a baby step so the basic just basic pair clearing so you need to know yeah there is some kind of thing mro and what is the same Arrow right I hope now you got the order right if you change your year mail and here human so the mro would be first boy class then male class and human class and then any object created so this is your quiz question you are having the work method only here in male class only I can code no work method in human no work method in boy and now if you access boy one don't work then what it will print just write down canceling this in comment section right now this is all about methods now we have attribute also okay okay let's define attributes so let's take any function and same we will take so in this I am having only two attributes and num nose and for male also I am having my own init function that Constructor sorry and here I am having self Dot suppose I am passing language or not language the same thing example the pre in producer we have taken this example suppose we are passing only name so as a parameter I am passing name right these attributes and these attributes obviously it will access all the attributes and methods of both the parent classes right let's see if you create something like this then and we are not printing this one we are just printing boy using this object dot see now you can access name numbers name from male Namaz from human and num nose from him right so if I want to print in a nose let's send this okay you need to print this see num noses one what if you want to print a name let's run this and see boy object has no attribute name here this boy object has no attribute name this is attribute tab but maybe now obviously you will say we have name attribute here in mail class and it is driving and it is you know driving all the attribute from both the parent class so why the seller you are getting the problem is now when this object would be created you know if you have the skin it function so this init function would be cold every time you create an object right now which init function would be called human init function or male indeed function I don't know if you want to check out then let's just print here calling in it from Human calling in it from male in the Senate and in this Senate let's run this and first let's just print here just number of nodes see calling in it from human and one only one init function it will call and that is from Human class obviously the same rule that in methods calling has been applied at first number we are having human so it will call it will search where is the init function in boy do you have any function no then it will search in human do you have any Constructor yes you have so it will call this Constructor it will not call from mail so only this it is calling that is why the name attribute it is giving that this error now if you want to go like both the Constructor or if you want to call the Constructor from mail then the solution is here you need to specify so first let's define the init function for cell and here you need to specify which init function you need to call I want to call from mail so see there are no many number of ways to do this kind of thing but this is the simplest one I'm telling you the name of the class mail Dot init function and here what you are passing name attribute right so you need to pass here self comma name right because here we are having only one attribute name so one parameter name name you need to pass and if you are passing here one obviously then same name you need to pass here one parameter this and this name should be same right this can be different but it it show that you it only show that you need to pass one parameter so this here in this unit function and within this unit I am calling from male unit function name right now it will call from Main but it will give error this point of time y so C line number 28 boy one you are creating this object type error boy dot in it missing one required positional argument that is name so in line number 28 here we are calling here so you need to pass name here so let's pass this name and let's pass Rahul run this now boy object has no attribute num nose see you're printing num nose but boy has no attribute num nose why so pick is this num nose in is in this Constructor from Human but we are calling Constructor from male only that is why these attribute are not this these attributes this will be better like if you using this you will call the attribute for human class and this will give time this error attribute error right so now the problem is I want these attribute as well as name attribute so it's okay you can call from both the classes I mean the Constructor from both the class is human Dot in it and self comma if you have any parameter here no parameter we are passing here so nothing you need to pass now let's run this scene calling in it from Human then calling it from male and number of nodes one now this time we are calling both the Constructor they send this so this is the simplest way you can call both the Constructor if you don't write anything then by default at first what you will write from that if you don't Define your own Constructor here you know init functioning Drive class then it will call from the first class first parent class right now one question for you is if in self I am passing same thing one parameter numb heart right and here we are just taking one more attribute numb heart right and here in this init I want it should have it you know in in this it should have its own parameter language means language means C C plus plus any language you can pass now let's update this thing let's first of all run this thing and see what error you will get and let's correct that error right why you are getting that error and what you need to write down where you need to update so just pause the video and try this code okay let's run this first and see the error in line number 27 where you are calling this creating creating the object then boy wrote in it missing one required positional argument that is language first tense type error is this in line number 27. in line number 27 so obviously rakul we are passing only one parameter but here name as well as language so let's pass language two language I'm passing suppose python okay let's run this still there is error see in line number 27 we are creating this object line number 21 when you are calling this init function the init Constructor from Human then this human unit missing one required positional argument that is numb heart yeah that is also fine because we have updated this in it now this point of time it will accept one more parameter so while calling here human init you have to pass one more parameter any name you can take I am taking only heart right maybe you think it's right but still you will get an error see now name heart is not defined name error in line number 21 here third okay maybe you think its name should be numb heart okay num heart find let's run still name num heart is not defined in the same line and why you are getting this error in line number 21 num heart is not defined because we are calling this Constructor here in boy class so in boy class also we have init functions so here also you have name as well as suppose I am taking heart heart its own language because see from this in it name it will derive from this and it hard it will dry so in its own in it obviously two parameter name should be there right to fetch the value of name and heart number of heart that is why it is giving an error and language it is having its own parameter language many parameters can have its own life right but whatever parameter in the parent classes you are having in the Senate Constructor you have to write down those parameter name also note not you know couple say that the name should be same exactly same but number of parameters should be same so I'm just calling here hard and here same name you need to pass heart right this time you will not get any error okay while calling you are getting a better while calling at line number 27 missing one required position argument which is language in line number 27 27 okay now it is it is accepting expecting name heart and language three parameter and you are passing only Rahul and python so Rahul for name python for heart and for language you don't know so Rahul then heart number of heart you should pass one if you are passing on the positional argument not keyword argument python now if you print from Human right so dot and suppose I want to print number five let's run this calling from Human class calling from mail class one one number of knows number of heart one one both are one one okay language if you want to print in that case obviously first you need to create its own attribute language is equal to language self dot language is equal to this language obviously you have to Define this attribute here in this init function right because language is attribute is its own of boy class name and heart are from parent classes right now you can access this language this attribute as well boy one dot language and see it will print 1 1 and python right so I hope you go to this thing and if in boy like if you want to Define your own method this is for your assignment let's Define a method display and here it should print hi I am the name and I work on the language you pass right and you have to call this display function right this is for your assignment now pause the video and try this out so I hope you have done this see how you can print hi I am from where you can fetch the name from name attribute right selfload name and I work I work on self Dot language whatever language you you will call so let's just call this function using this boy one boy one load display okay let's comment out these three line first let's run this and see calling from Human calling from both the constructive we are calling hi I'm Rahul and I work on python none okay you are printing this that is why it is printing none because displays display function is not returning anything it's just printing right and if you print then it will obviously every function is going to return something so if you don't write any return statement then it will return none that is why it was printing none so let's run this and say hi I'm Rahul and I work on python right so this is like the concept of multiple inheritance have you can access attributes and methods from the parent classes and if both two parent classes are having same attribute or same method name then how you can access that particular method right just give that I have told you the class name if you want to access the work method from mail then class name dot the method name and bracket just pass the Drive class object right that's it and I hope you also have some idea of mro method resolution order function that is very important because you will get this type of error many time when you deal in multiple inheritance or Hybrid inheritance or multilevel inheritance this kind of inheritance right so then you will get error regarding to that mro so you need to understand what is mro and how this works right you need to understand the order in which the derived class is calling the methods and attributes from base classes if there are more than one base classes right okay so now in the next video we'll see multilevel inheritance so now we'll see in the next video till then bye take care