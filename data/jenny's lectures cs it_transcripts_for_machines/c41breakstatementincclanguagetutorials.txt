in the series of learning programming in c we have discussed Loops in C for while and do while loop in the previous video I have talked about proper the differences among these three Loops four while and doy Loop right now we are left with two most important topics or you can say that control statements in C break and continue these are very important in C these are control statements or you can say these are break and continue these are what keywords in C and keywords we always write in small letters that is why we write break and continue in small letters if you write in capital letter then it will give you error these are also known as control statements right why we use now in this video I'll talk about break statements and see everything about break statement why we use break statement in your in our program when to use these statements right and we will see with the help of a program also like when you use break statement in your program then then what what process what how the program would be executed what output you will get right and we'll also see some important important points about this break statement so now what is break in C it is a control statement in C or you can say break is a keyword in C that is why we write in in in small letters right and if you want to exit from the loop early then we use break statement that whatever I'm saying uh that you will come to know that you will get it better when I'll write a program right now you need to take care one more thing about break you can use this break with loops and and switch statement this thing I have discussed you can watch that video in the side button how to use break in switch statement and when you use breake in switch then what is the meaning of using breake in switch statement this thing we have already discussed now we will discuss how to use this breake in Loops see we can use break within Loop or switch it means if you in any program if you use it uh suppose within if else block no Loop and no switch is there then it will give you error if in a simple program suppose addition of two numbers and there you are writing just break then then it will give you error right so you can use this within Loops either within Loops or switch that you need to take care right and small letter you have to write it in small letters now have to use it in Loops when whenever a break keyword will be encountered in that Loop then control will automatically exit from the loop right and what statement would be executed the statement you write immediately after the loop those statements would be executed right now whatever I'm saying let us discuss it with the help of a program suppose a program is uh I want to enter some integers right like it will ask you the program will ask you enter integer I'm entering one then two then five then six then seven right suppose I want to execute this program only five times means I want to know I want that user should enter only five numbers and then it will print some of all these five numbers right here it will print some of these five numbers right and I want one condition I want to put if the user enter any negative number suppose minus one2 or any negative number at that time it is going to exit from the loop means after that once you enter negative number see I want to know uh that user should enter five numbers suppose I'm entering one then two then minus 5 then it will not ask for two other entries it will exit from the loop and it will print some of these two numbers only 2 + 1 3 right so this I want to implement in a program I know how many iterations exactly five iterations I want means exactly I want user should enter five numbers so I know exactly how many iterations five iterations so here we can use four Loop right we can we'll also write up this program with Y Loop first of all write down this with four Loop see now first we will take any number any variable where we are going to take these numbers and I variable for this Loop now I'm writing a four for I is equal to 1 initialization I less than equal to 5 and I ++ five number I want now here in this I'm ask asking from the user enter a number and I'm take I'm going to take the input with scanf I hope you know percentage D what you write percentage D and address of where I want I'll store this in this variable a right now if the user enter any negative number you have to put this condition also so now what I can write here if this a is because number is going to store in this variable so now the a is negative now so a is less than zero if a is less than zero then simply write down break within this if you can use curly braces also but I'm only writing within the if I'm only writing break that is one step statement so no need to write down these curly braces just for reability purpose I'm writing curly braces break is within this if otherwise it will print sum so one more variable I'm taking sum and sum plus a right otherwise it is it is going to repeat till 5 right and after that I'll print the sum percentage D and sum that's it right and here also uh if you you will not declare the sum it will give you error and at starting I'm initializing this with the zero because sometimes it will take some garbage value at starting and after that it will add these numbers or it will give you some other output so better to initialize the sum with zero right now I hope you can write down those uh header files and void main I'm not writing the complete program now control will go the first line to the main function so in memory we have declared three variables right and in Su I have zero Within These we don't have anything now for loop I is equal to 1 so I is 1 I less than equal to 5 yes condition is true control will enter into this Loop now on output screen suppose this is your output screen what you will get the message enter a number now enter a number suppose I'm entering one right so now scan F I have entered number one it is going to check this condition is this a because in a now I have one is 1 less than zero no so it is not going to ENT enter into this four Loop so it will go to this statement sum is equal to sum plus a now sum is 0 0 + 1 is one so now in sum that value would be assigned to sum now sum becomes one right now we we are not going to exit from the loop now what I ++ now I becomes two condition is true again enter into this loop again it will ask enter a number now suppose you are entering number two or I'm entering number five is this condition true no so again sum plus a would be assigned to sum now sum is 1 now a is five now 5 + 1 is 6 so that would be assigned to sum that is sum becomes now six again I ++ right now again I ++ is now three so three is less than five so it will ask again enter a number and now suppose I'm entering number two right so two is not less than zero so program gr will run till five so five time it will ask again suppose I value is five so five times it will ask right and uh we have again I ++ 6 6 is not less than five so it will out of the loop it will go out of the loop out of the loop we have written print F sum sum it is going to print now what is sum of these numbers 18 so now it will print what 18 right now see suppose here after entering these three numbers whenever it will ask enter a number I'm entering minus 10 now see minus 10 it is going to check this condition a is less than zero in a I have now minus 10 right is this less than zero yes it is true now it is going to enter into this if statement now in if we have written break break means it will throw you out from the loop from any Loop you have you have written this in for Loop so it is going to throw you out from this for Loop so here once break is encountered directly control will go out of the loop it is not going to execute any other statement which is written after this break in this Loop so now it is going to print just sum sum is what sum of these three numbers only right and what is this8 eight is it it is going to print so now I hope you know I want that Loop should be executed till five times but this is what early exit from the loop only three times this is going to be executed after that it is going to be out of the loop that is why if you want early exit from the loop then we use break statement one uses this one second one is we don't know how many times I want to uh execute this Loop infinite times maybe uh at one time I just want to enter five numbers and print the sum maybe second time time I want to sum 10 numbers maybe third time I want to sum 15 numbers I don't want I don't uh you know know the exactly the number of iterations right so in that case we cannot use for loop it's better to use while loop right yeah we can use for Loop no need to put any condition then it would be at what infinite Loop and using break you can uh break this loop at any time but in this case we use better to use while loop so let us see that program so here I'm taking two variable because this would be an infinite Loop so I'm not taking any uh that uh variable for the loop like I or i++ I'm not doing any i+ Plus or I minus minus because it should be an infinite Loop right while one this condition is true so it will ask from the user enter a number so I'm going to enter suppose one now in a I have one is a less than zero no so it is sum plus a sum is zero this is 1 0 + 1 is 1 so it is going to assign into this sum that is sum becomes now one again again it will check the condition while one because it is always true again it will ask a number and suppose I'm entering suppose two is this condition true no so sum plus a now a is 2 2 + 1 3 so that would be a sign is in sum right in finite time it is going to ask you 10 15 uh 20 100 times until you enter a negative number suppose I'm I'm after entering two third time it will ask you enter number and there I'm entering minus 5 this condition is true a is less than zero yes now it will execute this break statement break means it will throw you out from the loop this is Body Of The Loop so the control will immediately will go where the statements which is written immediately after the loop we have written this printf sum is equal to percentage D sum so it is going to print three next time maybe you can enter 10 numbers and after that you can enter negative number if you will not enter negative number then it is not going to end right it is going to be an infinite Loop because you have done hard coding here while one this is always true so to break this one you have to enter a negative number at that time it will print the sum of the numbers you have entered 5 10 or 15 numbers right you can write down this with do while also that say that is what exercise for you you have to write down this program with do while and you can write down that program you can copy paste that program in comment box section or you can uh send me that program on my Instagram account also Instagram messages also right so now I hope you got what is this meaning of using break statement in C right in some programs when we write programs later then we will ask after executing something we will ask do you want to continue and if continue uh then press y if don't want to continue press n and and if you have pressed n or if suppose you have pressed zero then it will uh go out of the loop it will exit from the loop in that case you will we will use breake statement right so what is the meaning of using break breake statement I hope you know now it is clear to you we can only use this with loops or switch we can we cannot use with if and else here see don't say that ma'am within this if you are using breake yeah with this if I'm using brake But ultimately this breake is what within this Loop if you will not write any Loop and if you are simply writing if and there if you're writing break then it will give you error so I think that's it about break if you have any doubt in this break then you can ask me in comment section so now in next video I'll talk about continue statement in C so now I'll see you in the next video till then byebye take care