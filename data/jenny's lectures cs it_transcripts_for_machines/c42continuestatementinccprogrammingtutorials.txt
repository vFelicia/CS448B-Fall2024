in the series of learning programming in c in the previous video I have discussed break statement we are left with two important statements break or you can say control statements in see break and continue these are very important because we have discussed Loops for while and do while now we are left with continue statement because in previous video I have discussed breake statement with the proper example with a program right like what is the meaning of breake statement how how when to use and why to use break statement in your program now in this video we are going to talk about continue statements in C why we use continu statement in C right and when to use this uh statement and how to use this statement the syntax as well as we will see the working of this continuous statement with the help of flowchart of this continuous statement as well as with the help of a program we will see everything about this continue statement right let's see what is Contin statement in see see I hope you remember what does the working of that break statement if you write that break statement within Loop we can use break in within Loops or with switch statement continue we can use with loops so we write a loop for while or do y Loop here some statements are there then I'm writing break some statements are there suppose statement one statement two statement three statement four that's it now as soon as this breake would be encountered control will directly go out of the loop these statements would not be executed right that's it means it will throw you out from the loop as well as as as soon as the brake statement is encountered and generally we use breake with you know some conditions we put some condition before uh this breake statement if this condition then break otherwise continue now continue will do what continue is used to skip some statements it will not throw you out from the loop but if you want to skip some statements in the loop then you can use continue right if you want to skip suppose suppose let us discuss it with uh you know example suppose here here I'm writing continue the synx is what simply you will write continue this is a keyword in C so this would be in small letter and semicolon now as soon as within a loop I'm writing continue this statement would be executed this statement would be executed as soon as continue would be encountered what will happen control will not will skip these statements whatever statements is written after this continue within this Loop these two statements are there these statements will not get executed now control will go where in break control will go out of the loop but if you use continue then control will go to the next iteration of the loop right so it will go here beginning of the loop or you can to the next iteration of the loop right because working of four Loop is what initialization condition and here we have increment decrement right first of first step is this one second step is condition would be checked if this is true control will enter into this loop after that after executing this control will go to increment and decrement right so suppose here you write continue then control will skip these statements S3 and S4 and control will go to the next iteration of the loop means control will go to the this Plus+ update or whatever expression you write here update or you can say that increment or decrement right so if you want to skip some statements then you can use continue right suppose let us take a real life example try to relate it with this continue statement if suppose this Loop I'm writing for uh DSA classes th000 DSA suppose 100 DSA classes are there right now what I can do if a person is coming means student name right then then in the loop he is going or she is going to attend all the 100 classes next person comes he and she also going to attend 100 classes right but suppose Jenny know DSA very well she uh know she'll not attend these classes no need to attend her DSA classes for Jenny right now if Jenny comes if the name is Jenny then skip these statements maybe here some statements are there S1 and S2 after that 100 classes of DSA so what we can put if you can say that name is equal to Jenny then continue before the these 100 lectures I can WR I can write these statement if name is equal to Jenny then continue continue means Jenny is not going to attend these 100 lectures because Jenny is very good in data structure right so control will go again to the for Loop increment or decrement means yeah next student come right and if name is not Jenny then all the statements would be executed like he or she has to attend all the 100 lectures now I hope you got what what is the meaning of this Contin statement why we use continue statement in a program suppose a code is very lengthy 100 lines of code right and suppose because of some condition if that condition is satisfied I don't want to execute those suppose 50 lines I want to execute and 50 lines I don't want to execute so before those 50 lines you can put if the condition and then if the condition is true then continue continue means control is going to skip all the 50 lines of code control will directly go to the beginning of the loop means the next iteration of the loop right so I hope you are able to relate this with this real life example fine now let us discuss it with the help of proper program now see if if you draw flow flowchart of this continue statement then what will happen we write continue within this Loop right so in flowchart what you can do this is what condition or you can say that Loop condition this condition I'm taking suppose for Loop if this condition is true control will enter here if this is false then directly what exit exit from the loop right or whatever statements will be written after this for Loop suppose I'm writing here after for Loop statement X so control will directly go to statement X right here I'm writing statement X but if the control is if if this condition is true then control will enter here it is going to execute some statements and now next statement uh next condition is there because I told you we write some condition before continue and break if this condition is true then only continue right so so again uh condition condition you can say within Loop or condition for continue now if this condition for continue if this if condition is true then continue continue means control will go if true then control will go here again to the increment of increment if this is true this state this is true then what continue continue means to the next iteration of the loop suppose here I'm writing uh update increment or decrement the value would be updated and then again Loop condition would be checked right but if this condition is false then the remaining statements the remaining statements of the loop would be executed if this is condition is false then here you can write remaining statements of the loop would be executed and after remaining statements again what update obviously control will go to update and then again to the loop beginning of the loop fine I'm drawing I'm I'm just drawing it roughly I just get you familiar with the working of the continu statement I hope you got using this flowchart the working of this continu statement right now and what was that break if you write if you draw the flowchart of that break then obviously Loop condition first of all if condition is true then you can say that condition for break here condition for break here here I'm writing break if this condition is true then exit from the loop means exit from the loop control will go to the statement X if this condition is false in case of break then then obviously all all the update after that update and then Loop condition right normal Loop uh return process would be there right so now let us discuss it with the help of a program so now let us discuss it with the same program that we have discussed in previous video uh in in that break statement right user suppose I want toate the loop five times exactly I know how many times five times so I will use four Loop we'll use four while and do while three Loops all the three Loops so now user will enter five integers suppose 1 2 1 1 1 five and then it will print some of these integers right and if any negative number comes if user enter any negative number at that time control will exit from the loop right it will not ask further enter a number suppose I'm entering one then two third time suppose it is asking I'm entering minus one if negative number comes the control will go out of the loop so now sum would be printed for these two numbers only that is three right the loop would be it is what early exit from the loop right it is not going to be trade for five times it is going to trade for only three times right but now here I want five iterations five times same program if user enter any negative number then it should show like you have entered a negative number please enter a positive number right and again it will ask enter a number enter a number five iterations should be there it is not going to exit whenever you enter negative number right but yeah whenever you enter negative number it is not going to count this it is not going to use this in that sum suppose I'm entering 1 2 then minus one then one and one the sum would be 3 4 5 it is not going to consider this minus one the negative number right so if you enter negative number sum should not be you know that that some uh whenever you write that Su is equal to Su plus a that statement should not be executed whatever I'm saying let us write it down in the form of a program then you will get it better this is the program I'm writing whenever control will first first control will go to First statement of this main so we have three variables I a and we have sum sum is initialized with the zero now I is equal to 1 okay I less than equal to 5 yes condition is true control here it will ask you enter an integer on the output screen it this message message should be will be printed right and you are entering suppose one right so and that would be stored in a because I I'm I'm giving address of a right now condition check if a less than zero no so control will not enter into this here I'm only writing continue so if you can if you want to skip you can skip these curly Braes so now what would happen sum is equal to sum plus a sum plus a that is one and it would be assigned to sum right again next iteration now control will go to I ++ now I becomes two condition true yes again it will ask enter an integer and here suppose I'm entering two is this condition true no so it will not enter here Su is equal to Su plus a now a value is 2 I'm entering two now some plus a is 1 + 2 3 that would be a sign to here right and again I ++ now suppose here I'm writing again it will ask enter an integer and now I'm entering negative number 10 now check if a less than zero yes now a value is 10 it is less than zero yes it is true so now it will enter here control will enter into this if statement now here what is there continue see this is what small letters it is a keyword if continue come comes then the remaining statements would be skipped remaining statements of this Loop is what only one statement within this Loop here I'm writing closing this Loop Su is equal to Su plus a so it is not going to execute this statement the statement will not be executed so now sum plus a would not be performed means we are not considering minus 10 in sum right so the statement remaining statement would be skipped and now control will go to the here next iteration of the loop I ++ now I become three sorry I was three at that time right now I becomes four because I have entered three numbers now I becomes four now it will ask you condition is true yes I is less than 5 enter an integer now suppose you are entering again Min 2 condition is again true it will again enter here means continue continue means it is going to skip the remaining statement within the loop remaining is this one it is not going the statement would not be executed right and control will go to I ++ now I becomes 5 5 less than equal to 5 yes condition is true again it will ask enter an integer and here suppose I'm entering what zero now check the condition is is a less than Z no 0 is not less than Z because now here I have Z right this condition is not pro now control will go to the statement now the statement will be executed it is not going to be skipped sum plus a now in a I have zero some I have three 3 + 0 is three only so three would be in that some variable again I ++ now I become six is this condition true now no now control will exit from the loop whatever statement you write immediately after this Loop that would be executed now here I'm printing sum now sum is three so three would be printed as you can see sum is sum is for this one this one and this one these are not considered to be in sum right and if you write here break as soon as it find it will find first negative number it is going to exit then also it will print one and 2 three but it is not going to ask you this and this it will directly print uh three the sum now I hope you got the working of this continue right so now that's it for this video now I'll see you in the next video till then byebye take care