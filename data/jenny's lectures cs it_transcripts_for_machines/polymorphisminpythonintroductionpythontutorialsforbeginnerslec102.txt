hey everyone I hope you are safe and doing good so in the series of learning Python programming language till now we have discussed I think out of four oop features main features we have discussed three three features so three pillars we can say that is inheritance abstraction and encapsulation so the next one is polymorphism that thing we'll discuss in this video what is polymorphism right with the help of real life example I'll tell you and then different ways or you can say how you can Implement polymorphism in your program that we also will see one by one in later videos right right many more means phones you will get this type of definition everywhere like many forms now what does this mean many forms or multiple forms see let's take a real life example as a person if suppose uh consider me I'm a person so when I go to class in front of my students I behave as a teacher I teach them whatever subject I teach right in front of my family when I come back at home then I behave differently when I am with my friends I am going for a party I am with my friends then I behave differently right can you relate this so as a person I am only one Jenny but according to the situation I behave differently my behavior is Gonna Change in front of my students I am something I'm a different person with my family I'm different person with my friend maybe I have different person I behave differently hey so where I am what the situation is what the conditions are according to that I change is my behavior right so same like I am having multiple forms same you can relate this with you also maybe you with your friends are the friend you with your family are different you in office if you're working then you are different you in college as a student a different so you're also having multiple forms write many forms so this is nothing but polymorphism we are polymorphic or we can say simple some words in English like watch simply watch means that wristwatch also right watch means like uh in different way we can use like you are watching me right now through this video in this video right watching means bacon as well as so this word same word but having two different meaning these kind of we are having many words in English like so this is kind of polymorphic things for polymorphism okay now in programming obviously using oop objectoriented programming Paradigm we can model The Real World objects right easily so that is why in programming if you want to you know implement this polymorphic Behavior this polymorphism in your program through your program then how we are going to achieve this Behavior have we are going to implement this thing and what is polymorphism in that case okay so we can achieve we can implement polymorphism uh with IPS you can four ways first is the typing so these are four ways to implement polymorphism in programming like duct typing method overloading operator overloading and Method overriding so what are these techniques and how we are going to achieve this thing with these things that we will see one by one right now let me just show you some practical of this polymorphic Behavior or polymorphism Okay so let's create a new project here and I'm naming this project polymorphism underscore damn okay I'm just going to create and I'm going to attach this so this is we got the polymorphic demo polymorphism demo now let's create a new file in this project and polymorphism into node py okay let me just show you the simplest or the basic example of polymorphism or having multiple forms you have plus operator what it will do simply will do addition so if you think sorry if you print like print one plus two what do you think what output you will get that's very simple you will get three C you'll get three but if same operator plus and I'm using this operator with the one and two r integer with string suppose I am writing one something like this Plus do something like this now these are double quotes or you can use single quotes as well means these are strings now okay sorry it would be with Within These codes now what output you will get for this line let's run this C for first line it's three for second line it's one two means on Integer it will work as addition and on string it will work as concatenation operator concatenation so it's going to concatenate these two strings so see this even the operator is same symbol is same but having different output in these two lines having multiple forms or you can this is what inbuilt operator so it's kind of operator overloading you can say or you can Define your own also like what this plus will do you can Define that thing at your own but how you will do that thing I'll show in operator overloading okay maybe the operator or the symbol is Plus and you can Define your own thing here the process and it will do subtract actually it will do minus but it will do something else it will do addition of maybe two objects you have created two classes two objects and addition of those objects something different so that behavior you can Define yourself that is operator overloading right but that we'll see later so this is how you can say that this plus is having polymorphism polymorphic Behavior this is polymorphism right so what thing you are going to pass to this plus because plus is an operator then operand one operand two so what operand you are going to pass the behavior of this plus depends on those operands what you are passing whether it's a string whether it's floor whether it's integer okay same if you take example of a function you have many ah inbuilt functions suppose we have function you know we have a function length so if I use this length function something like this I'm using this on Jenny like Jen is a string length Jenny so what it will do it will print the length of this string so what should be the output that is 5 means it is going to count the number of characters right if I have a list suppose I have a list L1 and in this list I have one item is Jenny second is seven this is the list Jenny 7 or anything you can have because list View and every kind of multiple mix of mixture type string and maybe Boolean or something else right and if I print now if you apply this length function on this list L1 see what is going to happen now the output of first line is 5 output of second line is 2. for this line it is going to print 2 means it is going to print number of item in the list one two okay so I have this dictionary and I'm going to apply this Len function on this dictionary deck to one let's just comment out these lines so what it is going to print now the same function see the output is three it is going to count the number of key value pair 1 2 and 3. so this length function the name is same function name is same length but the output and the behavior of the working offline function is different in first it is going to if this is a string if you are passing a string here then it will count the number of character if you are passing list it will count number of item if you are passing a dictionary it will count number of K and value pair okay so the behavior depends on the type of argument you pass so this is what obviously this this is enabled function and this is polymorphism same function having multiple forms okay behaving differently under different conditions according to the argument number of type of argument you pass okay and polymorphism this thing especially we use in inheritance actually when parent class child class both are having same function okay and if you this thing we have done already in previous videos like in parent class we have a functional display and in child class we also have a function display but that display is having its own definition different definition so that is kind of concept of method overriding that also we'll see right method overloading means same same name function but number of arguments are different type of arguments are different according to that it will behave differently today so I'll show you one by one which kind of thing out of these four python supports which uh type of thing which type of way python doesn't support that also I'll show you okay so that's it about polymorphism for this video so I hope you heard the basic idea of polymorphism right now in the next video we'll see what is take care