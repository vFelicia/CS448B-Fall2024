in the series of learning programming in c in this video we'll discuss about 2D arrays we have discussed everything about 1D array right same about 2D AR we discuss everything like first of all what is need of 2D array declaration initialization memor representation accessing of elements of 2D are then we'll see some programs on 2D everything right but uh in Parts not in one video because video would be very lengthy so in this video what I'll talk about I'll talk about first of all need of 2D obviously before you know going for any concept that that question should be in your mind why you are why you are studying this concept what is need of this concept so what is need of 2D first of we discuss the need then we will discuss what what is 2D array and then we'll see the Declaration of 2D array I hope you are clear with 1D array what is need of 1D array I have told you if in in my class I want to store uh marks of 60 students then rather than declaring 60 variables what just declare a 1D array how like this int name is I'm taking marks and size is 60 it means no need to declare 60 variables it will store this 1D will store marks for 60 students right 1D means like this only one row and multiple columns one row and multiple multiple columns how many columns for this 0 1 2 60 columns because 60 or you can say blocks because you want to store marks of 60 students so till 0 to 59 size minus one this would be the index right and name of the this is marks this is going to store address of the first element The Base address of the array now second situation is what if I want to store marks like students are 60 but in five subjects right right I want to store marks of 60 students and in five subjects so what you can say either you declare five 1D arrays something like this suppose I'm saying subject one 60 students then subject two again for subject two also there are 60 students then for subject 3 also 60 students like this five 1D subject 4 60 and subject five 60 five declaration you need right but rather than this can we do something like this under one name only under one variable name only we can store uh marks of 60 students in five subjects right yes we can do using 2D so now how you can declare that thing int and I'm declaring only the name is marks and subjects are five and students are 60 that's it right so there we can store under one declaration only under one variable name only we have done this thing so like this if you want to reduce the number of Declaration the number of declaring the variables then you'll use 1D array or 2D aray it depends according to the situation right like I have told you two situations 60 student marks total marks only no need to deare there 2D array just 1D array and that's it but marks of in five subjects and students are 60 then 2D and if you can say uh in a university we have five Department like CS EC and mechanical civil like this Electronics so you want to store there are five departments in each department we have 60 students and marks of 60 students in five subjects then we declare three dimensional array right we can see in marks first in first index we can write if five uh sorry departments then five second index would be again for five subjects and again next is for 60 students like this it depends upon your requirement how type of you know which type of data you want to store according to that you can declare multidimensional array so I hope the need is clear why we are using 2D arrays in C in C or in any language right so the general Syntax for declaring declaring 2D array is what first same you will write data type then name of array and here size size into subscript right here the number of rows and here number of columns here you can write row size and uh second we declare column size we give column size right so this is General Declaration of food so now one question is what if I want to store marks of five students in 10 different subjects then how to declare declare yourself see how to declare in name of array I'm taking marks right students are five and subjects are seven or 10 this is how you can declare right five students and 10 subjects fine see if you don't give any size here if this or this at the time of this declaration then it will give error but if you initialize this thing here only at compile time declaration if you initialize sorry compile time initialization here only if you initialize the array 2D AR then you can skip this one if you not give the size of row size then it will not give err that thing we will discuss in the next video and you see initialization of 2D array with example also and I'll show you that thing on my laptop but for this video you have to give row size also and column size also because I'm just declaring here I'm not initializing at this time so it it is not able to calculate the size right now see 2D array means data is going to be stored in two Dimension like this see if I mathematically if I say this is X and this is y two Dimension are there so we can store data in this and in this Dimension right in 1D array we can store data in one dimension only so how we can store data something like this see this is what row size means number of rows how many number of rows should be there five and for Simplicity purpose I am taking uh small amount of three rows only and and five columns only right so have to visualize how to see how we see that 2D array how data is to be stored in 2D array how we see in memory but actually it's not like that we will see that thing also so this is row zero and Row one and row two because index would be always started from zero in arrays right and columns are five in each row in each row there are five columns so that would be also 0 1 2 3 and 4 something like this so see here we can say there are three 1D arrays right so you can say what a 2d array is what an array of several 1D arrays right you would say array of 1D arrays if we combine these three 1D arrays then how it will look like something like this if we have combined this thing so this is what a table form or you can say this is what a Matrix Matrix of what 3 into 5 right so 2D arrays basically what these are you know used to solve problems related to Matrix basically right so now what we think data is stored in 2D array when we use 2D data is stored in this Matrix form or tabular form having rows and columns right so it means for this data row number is 0 and column number is 0 right for this it's 0 1 0 2 0 3 0 4 something like this right this is you can say a general picture of the STD array here the row is what one and column is zero 1 1 1 2 1 3 1 4 here 2 0 2 1 22 2 3 and 2 4 so if you want to access any data then for accessing we use what index plus array name so array name is marks and index now there are two index one is for Row one is for column so if you want to access suppose this data so first you will you have to specify the row index that is row is what one and column is what second two this is how you can access the data if you want to access this data then marks then first of all row that is two and in second subscript you will write four and how address is to be calculated that we will discuss in a separate video right memory representation we will discuss accessing we will discuss everything we'll discuss but this is what just a general picture I'm telling you now see it's not like that actually the data is to be stored in memory something like this no because memory is like this in memory we cannot stay store data in Matrix form or tabular form we can we can only store data in a sequence like something like this memory is what it's a long tape of bytes only so we cannot store data something like this so data is always to be stored in a in this form only right so first of all the first row would be stored then the complete second row would be stored then complete third row would be stored right in detail we will discuss in later videos right but this is what general picture or you can say this is how you visualize a 2d array right this is how you think that data is to be stored that memory in memory 2D array would be represented something like this but no this is just to make you understand like it's a 2d array but actually this is how the data is to be stored in memory right and here we have only declared this declared this 2D array it means means only space memory allocations have been allocated here right and the values here are garbage value we haven't initialized yet right so garbage value now if the array is something like this how many elements you can store in this array how to calculate the size of the array row size into column size means 3 into 5 that is you can store 15 elements right next thing is how much bytes would be located here total number of elements 15 we can store into size of one element we are taking in size of in I'm taking four in four bytes into four that is 60 bytes so in memory for this 2D array 60 bytes would be allocated and you can store 15 elements here right so the question for you is what if the array is something like this float a and I'm taking here two and seven so you have to tell me how many elements we can store in this array plus size how many bytes would be allocated to this array this is for you question for you so you have to tell me in comment box right or maybe it will give you error like you cannot uh declare a 2d Arrow uh type float maybe you have to tell me this thing you have to try it at your own and if I declare rather than float if I declare int a 2 and 7 then same how many elements uh not two it's four how many elements and how much bites have been de have been you know specified to this 2D AR so now I hope you are clear with the reason why 2D array we use and means what is 2D array and how to declare a 2d array it's very simple thing in the next video we'll see initialization of 2D array right that is very important so now I'll see you in the next video till then byebye take care