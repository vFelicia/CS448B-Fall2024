hey everyone I hope you are safe and doing good so in the series of learning C++ programming language we are discussing oops Concept in C++ in the previous video we have seen what is a class what is an object how to define a class how to create objects right with the help of examples and real life examples as well so in this video we'll see like practically those things we'll be uh you know creating a class defining a class and we'll be creating some objects of that class and then we will be accessing whatever the you know attributes and those uh you know functions or the methods in that class with the help of those objects right practically so I'll show you this thing with the help of a program so we'll take this example this is a class suppose account class and here we have these are two attributes string name and balance and these two are methods of this class right so we will create objects with the help of new keyword as well as without new keyword right these two methods I have discussed in previous video how to create object type one is like uh with the help of new keyword it's like creating pointer to object so both ways we will discuss here and using both ways how to access these attributes and methods with the help of those objects we will see so this video would be a little bit lengthy right in detail we'll see this thing practically and I I'll show you how to debug that program step by step then you will get it clearly right how this program is actually running behind how these values is to be assigned with the help of object and when this values is to be assigned something like this right right so we'll debug this program step by step fine so let's start okay so now we are going to create a class so first where to create that class inside the uh inside this uh main yes you can create this class inside main but this is not recommended because if you create a class inside this main function then the scope of this classes within this main only you can use that class not outside of this Main and when you'll be working on projects then we will be using you know we will be declaring classes in some other file and we'll be using those classes in some other file like in one file what suppose another file I have one another file we have so in a you know project we'll be having different different files So within you know entire application I'll be using those classes maybe so always you don't declare these classes outside main function so that we can use these classes within you know that entire application of the entire project wherever you want to use so how to define a class class keyword and name of the class class I'm taking what is the class account I mean Pascal naming convention we use so first word first letter of every word would be Capital right now here let's take these two things these two attributes and if you're using string here so better better to include here which file I have told you already when we were discussing string string header if you not include include that also by by default using that iio stream also these features would be added but always explicitly include string header if you're using string explicitly you know include Vector header if you using vectors that would be good for you that would be recommended always right so okay these two are attributes we are having and now we will have some methods so like this and there you should have a semicolon after this class so that's it we have like taken two attributes and methods within this class account right now how to create like we will be obviously creating objects in this main so we'll be accessing uh these names this spell attributes and methods with help of object only right so let's create object what is the formula what is the way to create object class name one ways just class name and object name so suppose I'm writing Jenny account right account and object name is Jore account or any object name you can take a BC x y z anything right one object I have created now this thing we have seen in previous video if you run this you will not get any output but you will not get any error as well right that's it compiled successfully now if you debug this if you debug this so let's put that break point here here account Jen I mean when we are creating that object so here you see that run and debug that option or you can just press control plus shift plus d so just enter and here see already I have chosen this compiler C C++ g++ do exe if you are working in C++ use this g++ exe right uh select this one otherwise if you're working in C language use GCC so this compiler this D I have already Chosen and run so see here you see variable and watch and call stack see stack I have shown you I mean we have discussed that stack memory right so see in locals I hope you are able to say this we have one object one variable J account in name we have nothing like see let me just show you here in name in data plus we have just nothing right no name and balance is any garbage value right now let me show you see it now it's debugging our code so once you click here step over the next step is the cursor is here now here means that's it after next that's it means there is nothing right okay fine now we will see what we will be assigning values here let's delete this break point here now have to exess these attributes and methods by default all these attributes method whatever is in class is private by default so we cannot access directly two methods are there with the dot operator with ar operator we'll discuss both these things how to access just the object name dot operator with the help of dot operator one ways with the help of dot operator Dot and name I want to access so just write down the that name of that variable or name of that attribute name is name only and equal to I'm assigning name here jti katri account name is jti Kat and next is J account object name do balance suppose balance is equal to I have like maybe some balance I have or let's take like 5,000 rupees Z because we taking double value right now see here the error this St line member account name is inaccessible why so because these everything is private so to make it public here within this class you use a specifier public and call it we will discuss these ex specifier public private protected in later videos right in detail for now first make everything public and then use for this video okay now we can accept there is no error fine now if I debug this if I debug this and show you so see okay first stop the stagging now add the break point here I'm adding that break point like account gen account the object I'm creating here so let's debug this again and see in the variable here just see see in call stack we have main main function because obviously that activation record for main would be pushed in that stack so here I have main fine now in locals variables local variable I have J account there we have name and balance balance is some garbage value we don't know so now see here now control is here now now step next step over the next line control would be next line so now this jti katri this account this in name this jti katri would be assigned so in name here you will see data plus see there's nothing here just the address once you CL click step over now this line has been executed and see here can you see here Janti katri see this is jtia 3 right the name and the length is 14 character and this is the address balance still some garbage value because cursor is on this line now it's not been executed so once you click on this line now see balance is 5,000 so this is the beauty of like you know debugger step by step what is happening you can see okay fine if you again this click the step over that's it out see posed on here now in call stack there is nothing Main and something like this right okay now let's delete everything and now this we know this is how you can access these things right now let's call these functions with the help of this have to call these functions same name of the object dot name of the function I want to call deposit suppose deposit and double amount what amount you want to deposit suppose 1000.0 this but the thing here is there will be no error but the thing is here we are it's not getting any definition of this function so what will happen nothing it will compile that's it nothing will happen if I show you if I run this and I'll show you see nothing you will get here the output but there is one error like obviously there undefined reference to this deposit because there is no we can say like definition of this function so we can Define the methods so not function call it methods so we can Define these methods there are many ways but one way the simplest one for this video here only within that class only I'm defining it right so after this rather than the semicolon I'm just defining this and I'm just updating the balance because after deposit the balance would be plus would be added whatever the amount you deposit right that would be added and let's just here write see out and updated balance is balance that's it so I have defined this here only it will show me updated balance right and withdraw for this also let's define this here only if you want to withdraw then it would be minus from that balance right that's it so here I'm not writing any say out and all right if you want to write you can write also you can update now deposit is this so after depositing it will show some amount what amount it will show just calculate and just run this and I'll see I'll show you what output you will be getting 6,000 got it now if you debug this break point I have already added here just buug this again and let's see see right now control is here so in local in variable we have J account in name some we don't have anything in Balance we have some garbage Valu so step over and I'll show you in name in this data plus they see the length is zero and see this is empty there's nothing run this and seats updated jti kri length is 14 now balance would be updated see you got it 5,000 rupes and okay now obviously you have to you know 5,000 but now the cursor is here so after depositing 1,000 rupees let me just click this step over again see the balance is 6,000 right and that's exactly you get the output and now after returning from this the variables are out I mean deleted and there is no main in that step right the memories feed so let's just stop this and now call Jenny account do withdraw 500 rupees or 500 Point like maybe 50 if you run this or you debug this let's debug this and I'll show you the output you run this and see what output you getting so here we are having some variable just check the balance run this let me show you the name also here run this and you see the what changes you are getting here see 5,000 after deposit 6,000 6,000 now the cursor is here now again step over see 54 99.5 has been already updated right so like this this is how you can debug your code right now this is one way to create object and accessing these things now second way is pointer to object okay let's create that also rather than this let's just comment out everything and we'll be creating here account with the help of pointer pointer to object so here I'm writing jny account equal to new and account and this this is second way basically here we are calling the Constructor Constructor this is default Constructor this Constructor would be called here also but it is by default but here you need to write down that Constructor I'll discuss Constructor default Constructor parameterize structor everything in detail but for this video you just you know remember this is the second way to create object but this is not object here we are creating what pointer to object we are not creating object actually pointer to object this will return a pointer to object so we are having now pointer actually not an object here this is an object J account but here we have pointer to object so how to access using pointer to object one ways you have to De reference that pointer right if you remember with the help of s Str uh this op this is referencing operator estri and J account this because this is pointer so D reference it then Dot and then you can access these things like name equal to like this one way is this right this will also work right second way is if you want to check out okay you can check out this also just move this break point and just add a break point here okay let's here do one more thing access this balance as well and 5,000. right and same to access the deposite and withdraw we use this only like so this is how if you create a pointer to object this is how you can access these things right and we are I'm just using these you know brackets for this because this do operator is having higher precedence than this s string but you want to be reference this object first then do operator you want to apply so that is why I'm just putting these brackets here to increase this this precedence of this estri operator right now let me run this first and show you the you know output directly so balance is this 6.5 now what we see let's debug this break point is here when creating this pointer to object let's debug this and step by step we will see okay now in stack we have this Main and in locals we have J account see in J account now we have some you know it's not object it's pointer to object right so here we have see here you should out of bound this address is out of bound rather than your name it will store the address right but ra right now some garbage value is there length is some garbage value and balance is also some garbage value okay now let's run this control is here so step over the next line is see now J account do name after creating this pointer to object we have here some address because pointer in pointer we have obviously address of some other variable so it is having the address see the address right now let's run this again we are not having any particular name now let's run this again see this is J account is having address so it is not object it is pointed to object step over see here now we have jti kri 14 because this line has been executed now cursor is in next line see th now the balance 5,000 let's R this 60.5 after withdraw let's run this 55.5 right and if I again now the cursor is here means if I again run step over means out of this program means means variables and all gone out of the me I mean sorry variables and all destroyed in call stack also we don't have any Main and all right so this is the second way now okay rather than this we can use an arrow operator as well so rather than this let's just comment out everything and object is same pointer to object we are creating but how you can access simple J account and this arrow and see you can access any name is equal to G this also we can do right so rather than this if you're finding it difficult you can use Arrow this only means this means first D reference then apply do operator this Arrow this operator means right so if you are creating pointer to object use either this convention to access the methods and members for AR operator if you're creating object something like this simply use dot operator to access attributes and methods right so I hope you got this the class how to create objects how to access attributes and methods with the help of uh dot operator and AR operator right and I hope you got how to debug and all you got what is happening behind the scene right so I hope you got this concept in the next video we'll see one coding exercise based on this and after that we'll see next two concept right so now that's it for this video now I'll see you in the next video till then byebye take care