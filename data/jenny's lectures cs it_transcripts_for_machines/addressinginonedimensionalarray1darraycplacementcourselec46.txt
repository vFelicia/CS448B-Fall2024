hey everyone I hope you are safe and doing good so in the series of learning C++ programming language we have discussed arrays and C 1D array but there's a small topic left in 1D array so before discussing 2D array Let's uh finish this topic as well that is the addressing of array elements how to calculate address of the elements of 1D array right okay if you're not getting anything have patience you'll get everything right what is when 1 D if I take one example like I'm just taking an integer as AR of name a and just only five integer right and suppose here I have like some values five values in this array right this is I have initialized this array with some initializer list so how in memory this is to be stored in continuous memory location right so if the Base address suppose I don't know the address suppose because that is in hexadecimal form suppose the address is 100 simple address I'm taking right so integer is going to take obviously four bytes right actually depends on it depends on compiler also but in my case in my laptop it is taking four bytes right so you can check out in your laptop right size of int and you can just print that thing 100 now the next element would be at 104 because this is going to take four byes one element 104 108 112 and 11 6 right index always starts from zero 0 1 2 3 4 Arrow Index right this is what array name a and in Array here what is to be stored The Base address of the array Base address is 100 or you can say the address of first element of array right so 100 is to be stored and so this is pointing to here AR name a so I have told you like internally implicitly it is AR name is acting as a pointer except few cases right see we have discussed this thing why this is start from zero and all these things the index start from zero when we're discussing the very first video of array I guess the introdu introductory part introduction to 1D aray right you can go and check out that video so see now this is what if you want to access the array elements then directly we can access AR any array element randomly right so if I want to access this this element so the index is a what you have to write a of 1 and it will give you zero if I write a of three it will give you one right it's not like that the third element 1 2 3 no this index is actually the offset mean the distance from the first element how many step you need to take to reach to this this this offset third offset so 1 2 3 so this is the output one right but how the address is to be calculated obviously when we are writing something then there is some inner working right the address is like 112 and at 112 there is one so one is to be fast suppose if you have five friends and your five friends are you know their houses are in a line something like this so if I say and and this house is of your friend like maybe uh Rahul so if I say go and call Rahul so you will directly go to rahul's house because you know the address right so how to calculate this address what is the formula how this addressing addressing is to be done of every element so there is a simple formula what is that see now here this B is Base address so if I take example of a of three Base address of the Base address of this array is what 100 so let's take 100 plus this s is what size of a single element of that array in bites so in this array size of a single element because this is of integer type right and obviously all the element would be integer because array is collection of homogeneous stereotypes right so one element will take four bytes so sizes 4 into this I is what the index right index is three because for this I want to calculate the address so index is three minus this lb is what lower bound lower bound is what you can say that array of the address of the first element or the index of the sorry index of the first element of the if no lower bound is given then you have to assume it zero so lower bound is in this case zero right because no lower bound is given now 100 + 4 into 3 so it is 1 1 2 and we know array of this third this element is what at address 112 right so this is the simple formula you can take any suppose I'm taking a of0 right so Base address 100 plus size 4 bytes into I is what index 0 minus lower bound is also zero so this would be 100 only and we know a of0 is the address of a of0 this element is what 100 only right so this formula you need to you know remember right if you want to calculate the address of any array element 1D array right for 2D array it's little bit different so that thing we'll discuss in next video like from next video we'll see about multidimensional arrays especially 2D arrays right so now that's it for this video now I'll see you in the next Tut then bye take care