so in this video we'll discuss an important concept in c that is memory leak in c right this is interval question generally it's being asked in many interviews like what is memory leak in c and c plus plus also we have this this this problem in c and c plus plus not in java or c sharp right and so what does this problem why we use why we have this problem in c and c plus plus how to remove this problem right what exactly happens what exactly memory leak is and how this happens i'll show you practically with the help of my laptop like what is memory leak we will see a program also right so all the things about this memory leak this thing will discuss in this video right so this is also an important video for you guys because generally they ask this type of question in interviews right so you should have idea about this thing like what is memory but before they just want to tell you one thing see an academy is offering you a great offer unlock 20 in which if you use my code jkl10 on any of your plus subscription you will get 20 off before you will you you are getting 10 percent off now you will get 20 off but the software is valid between 14th march to 16th march now on academy is also going to start new batches for gate and you know for gay 2023 and 2024 aspirants in this batch they are going to cover all the subjects of csit and in this course you will get preparation strategy tips and tricks practice questions numericals along with a detailed explanation of all the concepts and your doubts separate doubt clearing session would also be conducted so you can get all your doubts cleared on those doubt clearing sessions so here if you use my code jkl10 on this this would be paid subscription but you can use my code jkl10 and you will get now 20 off if you purchase it between 14 march to 16 march plus an academy is also conducting a scholarship test all india scholarship test for all the gate 2023 and 2024 aspirants and the date of this test is 20 march it is a live test and you can take this test for free so you will also get all india live ranking and slaves for this test is general aptitude and engineering mathematics you will get a chance to compete with thousands of learners from all over india and you stand a chance to win up to 100 scholarship here so all the relevant links and detail i'll put in the description box of this video you can go and check out now let's see what is memory leak in c see it's a problem in c and c plus which occurs due to improper use of your dynamic memory or you can say due to improper use of heap section right see as we know when we run a program then generally for our application the memory layout is what four segments one is for code or you can say for text next segment is what in this memory section we can you can know that global and this is for global and static variable global variables means outside of any function you when you declare any variable or function those would be you know assign the memory from this section one section is stack and one is heap right so whenever you dynamically allocate memory that would be located from heap section right and static memory location is from stack section right some instructions are coders having some space in a space in this section and in stack we have no local variables and functions for those have space in stack memory and from so see this these portions stack global this section and this section are fixed some memory would be allocated while your application would be running like 2 mb 4 stack something like this right and this would be fixed but heap section this section is not fixed heap can grow according to your needs right if your system is having memory then heat can grow it can take memory from the system memory it's not like that for your application for your program the heap section is also fixed and dynamically you can allocate memory from this section and this memory is also fixed no this heap section can grow according to your needs but stack section whenever for your application for your program if 2mb stack memory has been allocated then this would be fixed for your application when you run your application the stack memory would be 2mb only it cannot be you can say increased or something like this right now see let's see a program first see it's a simple example i'm taking to explain this memory leak suppose i'm i'm having a function sum i'm taking two variable in a b then a plus b and some i'm just printing and in main i'm calling this function sum but while loop i'm taking a variable choice while ch i'm calling sum now i'm asking printf 1 to continue continuing 0 or 1 you can enter 0 1 0 means don't want to continue 1 means continue so in choice variable i am entering suppose i am entering 1 so 1 means again while is true again function would be called some function would be called and again it will ask so this type of program i have a simple program right so this function this is what there is no dynamic memory allocation so one main frame first of all mainframe so from stack here one stack frame is for main from this memory from stack right in main i have ch here i have one right so now i'm calling sum so this main progress this execution domain would be posed and i'm calling sum so again we have a frame stack frame for sum here i have a b and some three variable a b and sum here we have 10 11 and zero so some a plus b and just print sum and after that after this the control would be back to here means finish it it has finished its execution so so now from the stack control is again to main and this would be released automatically these variables these variables are now out of scope so the memory would be released right now again continue if i press 1 again i'm calling i'm calling sum again frame for sum so again a b and sum these variables would be allocated from the stack frame again some would be created and once control is out of this some function these memory this memory would be freed and we are back to main so this is how we are using this static memory allocation or this memory foam step but suppose here i am i am taking i am taking rather than static memory allocation here i am taking what dynamic memory allocation something like this end ptr is equal to int asterisk malloc and 2 into size of int right this kind of thing i am taking so we cannot do sum is equal to a plus b obviously we have to use pointer and something like like sum is equal to s trig ptr plus 0 plus s trick ptr plus 1 i am accessing the value something like this and just print here sum right and after this obviously you will enter the values and you can enter the value i guess you can enter the values we have discussed many type of programs you know this type of program before also in malok and calum so here what what happens now now the memory would be allocated from main function obviously this is stack frame for main the memory would be located from this this one from main from the stack section because this is what static memory location right ch is equal to one while one we are calling sum now in sum we have dynamic memory allocation so now from heap section memory would be allocated from heap section how much how much 2 into size of it means 8 bytes and once you will enter some data those data would be stored here suppose i have entered one and two so one plus two three and some three would be printed right three would be printed suppose some i am taking here and sum so one for sum also we have sum is a function stack frame and here we have a variable sum this will allocate this will take memory from the stack this is static memory allocation but this is dynamic memory allocation right we are printing some and we are not going to free this pointer suppose end of this thing now back to here right but okay if you are going to back to here then this memory would be erased i mean this would be freed but this is still there one pointer is pointing to this ptr suppose memory address is thousand base address so here we have thousand again want to continue again i am printing one like yes so again it is going to call some and at this time again memory would be allocated for two integer dynamically again if you will call again memory would be allocated from heap section photo integer but this previous memory is also in the use we haven't deallocated this memory so this is what now this value and this memory is something like garbage for us we have allocated this memory but we forgot to free right we haven't free this before again calling mallow so this type of thing again you will call malloc again for two integer memory would be located so this is what you can say its type of garbage so this is memory leak you are using this memory from the heap section improperly you are using you are allocating memory but once you have used once your task is done but you are not freeing this memory you forgot to free that memory and that memory is still in the count of your program use right and this memory cannot be reused now so like this if here i am just allocating memory for two integer suppose for one lakh and d000 integers i am allocating memory so again again again you are just allocating memory you are not deallocating this memory you are not releasing this memory space so this is what at some time obviously memory would be exhausted at some point of time and it may your application will maybe fail or your system may shut down these kind of things may happen and memory is see memory is what crucial resource so in this case you are just wasting the memory right so this situation is memory leak improper use of heat is what memory leak you are allocating memory dynamically but you are not releasing that memory that is memory leak will show up i'll show you a program also so this memory is what now for garbage for us it's like a garbage but see in java and c sharp there is automatic garbage collector so automatically this memory would be freed automatically automatically that garbage collector will identify will detect that yeah this memory is garbage so let's just free this memory but in c and c plus plus there is no such funda of automatic rbs collection so you have to manually free that memory and how you can free using free function so here after this after this better before exiting this one better to use free ptr this line now once you will back here this memory would be freed means now this memory can be reused so again if you use mallow maybe and again also the same block would be allocated to you because now you can reuse this memory you have freed this ptr right so now there is no memory leak there is no wastage of memory right i'll show you practically also you know with the help of a program of memory like i hope the theory of this memory leak is clear to you and why memory leak happens in your program right and see this memory leak this will reduce your performance of your system by reducing the memory so let's create a new file memory leak dot c right and we should include stdlib dot h because those functions are declared in this one right and simple program i am taking into main suppose i am taking here in a variable choice is equal to 1 right and we have a variable ptr also right and what a while loop while choice is less than less than suppose what 50. so i am just doing what printf and memory leak demo and just printing this thing and after that after that obviously memory leak means dynamic memory allocation we have to use so here i am using ptr is equal to dynamic memory allocation int asterisk and i'm using malloc you can use callow also right for how many integer let's see for 40 000 in teaser into size of in why i'm taking like you know 40 000 because i'm going to show you actually the memory consumption that's why i'm taking this a long number a large number so 40 000 integer i am going to allocate memory dynamically and then just ask printf continue if you want to continue or you can like press one for for continue right and in scan a function just use this and we have variable ch address of ch and i am not going to free this memory right let's just save it and i hope everything will work fine and i'll show you in the task manager right how much memory this program is consuming right so let me just run this better to run this with the help of this like i'm uh doing what gcc memory leak dot c manually i'm writing this thing and then executable file has been made so we just write down what slash a dot e x e right so it is bring see memory leak demo now it is asking press one to continue so let me just first open the task manager so in this task manager in processes we have a process of this c visual studio code here we have memory leak memory leak and we have okay sorry we have this thing a dot out right a dot exe sorry a dot exe this this i'm running a dot x is this i am running so let me just show you see the memory consumption memory consumption for this is 0.4 mb 0.4 mb right let me just run this program and i will show you if it increases or not see it's 0.4 mb it is for a dot exe file right that is vrna so i'm going to continue one enter again see 0.5 mb now it has increased 0.6 mb 0.7 mb it is increasing the memory consumption for this 0.8 mb right because in every loop iteration 40 000 for 40 000 integer dynamically we are allocating memory and we are not freeing that memory so we are just consuming that memory now see at this point of time now i have opened this again i have used free ptr in every iteration after every iteration i am using free ptr i am going to release the memory right so now let me just show you i have just run this program and let me just see the memory for a dot exe in this 0.4 mb right and i'm going to continue press 1 for continue i have just run this program right using the same method and one continue one continue one continue i am just continuing but memory is still 0.4 mb i am continuing i am just pressing one and continue so for after every iteration memory four dynamically memory for forty thousand student forty thousand in teaser has been allocated but after every iteration we are we are freeing that memory so obviously we are allocating after that we are freeing we are allocating our after that we are free so memory usage will be same 0.4 mb only it is not going to increase see let just continue again 0.4 mb 0.4 mb but before when we were pressing 1 and continue after continuation after pressing i guess four seven or eight time one memory would be 0.5 mb then 0.6 0.7 0.8 this type of thing happens because we were not using free ptr we were not freeing the memory right we were just allocating the memory and we are not releasing the memory so that is what memory leak basically i hope now the practically also i have shown you so you can do this thing you can open your task manager you can run this program and you can see memory is increasing or not so that's it for memory leak video now so i guess this concept of memory leak is clear to you if you are left with any other important concept in c you can tell me in comment box i will explain that thing also before moving to the new subject so now so the next video tells me bye bye take care