so in the series of learning c programming we are discussing dynamic memory allocation in c the previous video we have talked about catalog function in c this video will discuss real log function right how to use it what is this function how the memory would be reallocated with the help of a program we will see practical also i will show you and we'll also see the mechanism the behind the scene process how the memory would actually be reallocated right these are some you can say important points or hidden facts about real low function that rarely you will find at any other place so all the important points about this function we are going to discuss in this video this is going to be very very interesting video for you guys right now before that just want to tell you about an opportunity that you don't want to miss that geeks4geeks has brought for you yes geeks4geeks has come up with an opportunity for you guys to become leader among your peers with their campus mantri program yes you can be a mantri at your campus and it is as prestigious as it sounds so i guess nobody wants to miss this opportunity because it just adds some values to your professional route so as a campus mantra you are responsible to spread awareness about geeks four weeks at your college campus their events their courses and you would be leading various awareness programs workshops seminars and other events at your college campus on the behalf of geeksforgeeks and being being a campus mantri you are a part of giant geeks four weeks parliament also which is having 20 lakhs loser from all over the world so the last date for registration for this campus ambassador program is march 31st and being a campus monthly what you will get you will get career counselling certificates exciting goodies and much more every month top performer will be recognized as campus monthly of the month which would be published on their website and their social handles the top performer will get a chance to go live on instagram and their testimonial will be shared on their website winners will receive gfg coupons up to rupees 8000 amazon houses test series courses goodies bags and internship opportunities and depending on the task is given so you can register yourself directly from the campus monthly program which is reachable for college first year and second year students the link the registration link you will find in the description box of this video so you can go and check out see it means reallocation of memory means previously you have dynamically allocated the memory but now you want to resize that memory resize resize means you can increase the size or decrease the size right suppose previously you have allocated memory using the function malloc or callo if you have a located memory dynamically previously then only you can use real lock function to reload them and real okay that will relocate the memory but suppose you haven't allocated memory dynamically and now we are using real lock function then it will show undefined behavior so this point you need to take care it is responsible to resize the previously allocated memory using calo or mellow right you can increase the memory size the memory block size you can decrease the allocated memory block size right i hope this is clear to you this is built in function which is declared in stdlib.h fine now how to use this function what is the syntax just you have to write down yellow it will accept two argument right the previously allocated memory pointer right so this pointer you will write here a strict ptr or you can say pointer next is what new size new size may be increased size or decreased size you want to allocate new size you want to reallocate the memory that size so this is one previously allocated pointer fine suppose previously i have allocated some memory using mellow and 100 bytes i am using mellow 100 simple syntax i am using i am not using size of and everything right mallow 100 so it will allocate from the heap section what it will do from the heap section it will allocate a block of 100 bytes and it will return the address of base address of this the address of the first byte and that suppose i am storing in a pointer base address is thousand so that i am storing thousand now i want 400 bytes so i want to reallocate i want to increase this size of this memory block so what you need to pass this pointer the previous pointer that is pointing to the previously located memory that ptr and this would be void star word you know generic pointer so generally this pointer is suppose we i have used this block to store integer values right so you will say that we have type casted this and this is end pointer so this pointer would automatically be converted to generic pointer to void pointer right by real look and the new size here you will give new size suppose 100 here and i want 400 bytes so you can write here 400. now realloc will return void pointer so according to your need you need to typecast it right here whatever you will write you can typecast it and you will store that address into this pointer only the new address so the return type of this is void pointer reallock the previously i know located pointer and the new size so this is general syntax of using yellow now one plus point four really function is what it will resize the previously allocated memory block and very important thing is without without losing the previous content let's take an example i have allocated a memory using mellow or calloc also you can take right for five into four five integer right size of in and i am storing this in ptr and here i have taken int star ptr so from heap section suppose i have stored one two three four five five individual right thousand is the base address so it will return thousand in ptr we are going to store thousand and this for five integer we have elongated memory using malloc now i want to relock this memory this memory block i want to store now seven integer so you can relock this how you can use this just use real low pointer ptr previous pointer is previously allocated memory block is pointed by this ptr so just provide this pointer and now new size new size suppose i want to store two more integer so two more means seven integer so this block would be four seven into size of into new sizes seven into size of it five previous two new then seven so it will extend it will expand this block only if possible see these points are very important if possible it will expand these blocks only this memory block only so it will expand this like this one and two in this heap section only so the previous content would be as it is and the base address of this block would be as it is whatever it will return suppose you are suppose you are storing that in ptr on the new pointer or you can take the same pointer also it's okay but i want to store in new ptr fine and now the previous content would be as it is now you want to add extra two values suppose i want to add six and seven that is fine so this is the feature of you can say very important point about this ptr without losing the previous content if possible it will expend the same lock if not possible suppose the situation is something like this suppose in heap this is the case like 1 1 2 3 4 5. this is i i have stored and it is not possible to expand this block so what realop will do now it will allocate a new memory block somewhere else suppose here it is possible so one two three four five one two three four five six and seven it will allocate a new block listen carefully copy the previous content copy the content from this memory block here delocate this thing you can say free this memory right and now it will return this address suppose this previous address was thousand and this address is over suppose three thousand so now it will return three thousand so now this three thousand suppose i am storing in ptr one in ptr one i am storing this address so it will return three thousand here previous was in ptr 1000 but this has been deallocated right the main point is whether it will expand the same block or whether it will allocate a new block content would be as it is it will it will if it will allocate a new block if not able to expand that block because of the memory constraint it will copy the previous content first then deallocate this previously located memory and then return the new address right we will also see practical also i'll show you right and if the same block it will expand so you can just print the address you can just print the address for ptr and ptr one the value of beta and ptr one if expend the same log then ptr also thousand it will return and this also thousand it will return right so these are very important point this is behind the scene process how actually it will reallocate the memory right i hope you got this and if it is not able to relocate the memory successfully then it will return null same malocan catalog also return null on failure on success it will return the pointer right so see we are not sure that it will expand the same block or it will allocate memory it will allocate a new memory block we are not sure it depends on the situation it will face right but what we can show sorry what we can be sure about that the data the original content your data would be safe this is for sure and that i'll show you practical so that your data would be safe you will see a program right but if you reduce the size suppose size i am reducing for three integer then obviously data would be lost two integer you are going to lose two integer previously for five integer now you are reducing the size for three integers so obviously you are going to lose two integer that is understood right in that case you will lose your original data fine so let me just write down a program here so see here we have taken one pointer we are going to enter the value same we are going to enter some integer i want to store integer value you can take float or character up to you right it's not like that always i'm taking into value so we cannot take float or care no you can take here type of pointer character you can store or float value or any other type of values you can store right enter value of n then dynamically locate memory using calor num right the syntax i hope you know now it will accept two argument and that's it now we are going to enter the values scanf ptr plus i now update i want to update the size of n i want to resize this memory block right so just enter updated value of n scanf address of n now reallocate the memory according to the updated value so just use real low the previous pointer pass and and into sizeofint whatever the new value you will enter here that value it will take right now you can print you can check whether the same block it will it is going to expand the same logo it is going to change the address right so previous address you can print a new address you can print previous pointer was ptr and the new pointer i am taking what ptr1 right industry ptr1 and now i am printing the values from 0 to n the loop and i am just printing the values now the updated pointer is ptr1 so just use ptr1 here right ptr1 plus i and just free the pointer at last fine so now let me just show you practical of this thing and see if you rather than this ptr if you write down here null means previous pointer null and then and into size of n then this really will act as mellow you can see it will be equivalent as malloc function just allocate this memory one block of this memory size the previous is null right and if you pass here null here we are passing ptr and here you are passing null or zero the new size then it will be equivalent as free pointer means you are going to free this this ptr the new size of this pti the new memory uh block size is zero that is null means nothing so just free the previously located memory that's it fine so let me just show you practical on my laptop so let me just create a new file real log dot c file right and we are going to copy the same what we have discussed about in so we are taking a pointer enter total number of values like n and using malloc we are what we are doing we are just allocating the memory right and now we are going to enter the values using printf and now you are not going to print before printing just ask suppose you want to reallocate you want to update the size of end right updated size of n right just this using scanf and now reallocate memory so what you will do i am taking a ptr1 new pointer right sorry this trick and then we will type cast this and reallock and previously pointer we will pass and then new size new size means n into size of end that's it now if you wanna see that the address then you can previous address or you can say previous block address you can print right and after that you can print what new block address and how to print address we are having in ptr previous and new address in ptr1 that's it and now just print the entered values 0 to n and we are just printing i here we are using ptr 1 because the newly eloped pointer is ptr1 right and after that you can free this ptr ptr and ptr1 right both are if both are pointing to same location then it's okay you have to free ptr1 the newly updated pointer fine now let me just run this and show you what output you will get see it is asking total number of values three entering the values one two three updated value suppose now i want to add two more integers then five so it is the previous address it is printing this one and new address is also same so same block it is expanding right both pointer are having same address so see the previous content is as it is one two three and the new content is zero zero or maybe any garbage value it can take right because we haven't initialized these two values but previous content would be as it is one two three right now what you will do suppose i want to reduce the size let me just run this again and enter total number values 5 1 2 3 4 5 and now updated values three i want to reduce the size in that case previous address and the new address is same right and the values are only one two three because now you have reduced the memory block so two obviously two values you are going to use for three three values you will get here right so i hope this yellow function is clear to you guys all the important points about yellow function now what points i have discussed this is assignment for you just write down those important points in comment box right and the best comment i'm going to pin that comment so now in the next video we'll see about free functions so i'll show you the next video bye take care