so in the series of learning Python programming language in the previous year we have seen basics of sets like what I said how to define that how sets are different from tuples and list some properties offsets and some methods like add remotes card here pop on set right the next is we will discuss some operations on set like Union intersection different symmetric difference right I hope you are aware about these operations right if you have read this in mathematics these are same let me just tell you in brief what is Union and intersection and then with the help of one example program like then I'll show you practically on my laptop right so if we have two set we have set one and set two and here we have like one two three four five and in this set I am having values like 4 5 6 10 11 something like this any values can be there it's not like that these should be in ascending or in this kind of order no so Union is what if you have heard about wine diagram then this is what set one and this is what set to this circle this is for set one so we have one two three four five three and let's suppose write down four and five here because 4 and 5 these are common in set two also we have 4 5 6 10 11. right these four and five these are common that is why I have written this thing here using main diagram so if I found if I I find the set one Union set two this is what I guess we use the symbol in mathematics for Union for intersection we use this thing right but here we will use something different while we you know do in in brokerable we write program right so Union would be something like this it would be set of all the elements like one two three four five six ten eleven so this would be Union of set one and set two four and five these are two times in set one set two but we'll write here only one time duplicates are not allowed in the set so this is what union if you want to find out in this intersection set one intersection set two then intersection means what elements are common in both set one and set two so common is four and five so it will give four and five in the section will give those it will set of all the elements which are which are present in both set 1 and set two so this is our intersection like same difference is what like if I write set 1 minus set to so this is what a difference so it will give whatever element in set one that are not present in set two so one two and three four and five these are present in set two so it will not give this so there's no difference symmetric difference is what present set of all the elements which are present in either set one or set two but not in both or we can write down something like this symmetric difference is what set 1 Union set two minus set 1 intersection set two in another way we can write out this is symmetric difference of this set one and set two right so it will give if you you want to find out symmetric difference of set 1 and set two then what set you will get here one two three four and five no four and five is intersection these elements are present in both so it will not include four and five six ten eleven this would be symmetric difference of set 1 and set two right so I guess mathematically you have some idea about Union in the section difference so let's see with the help of an example practically we'll see this thing okay so let's create a new file here and we'll be talking about operations underscore on underscore set dot p y right we will take first two sets set one and set two okay so this time I am taking ah string value in set so we have taken two set set one and set two Ram sham Jenny and set two we have Jenny Jia and Akash right so first thing will perform Union so we can do this perform this operation with the help of two methods we we can we have a method dot update in sorry dot Union in Python to perform Union Plus one operator also we have so two ways are there I'll show you both the ways first thing set one dot I am c as you can see the method Union so I'm using this here dot Union and in this bracket I'll pass set to so this method would be invoked on one of the set and second set will be passed as an argument rather than this we can also write something like this set to Dot Union and in bracket we can pass set one both are fine in any of the set we can invoke this method and second set we can pass an argument okay first is this thing so let's suppose I am invoking this on set one only set one dot Union set two fine now after Union what you will get let's print this here only print okay now let me show you what union will print see it's Akash Jenny Ram sham JIA C Jenny is two times so it will give Jenny only one time okay all the elements but only one time no no duplicates are allowed so this is what union what you can do set to wrote Union set one that is also fine now second is what with the help of an operator also we can perform like this set one and we have this this operator right and here we can write down set two this is also perform Union so let's just comment this out and let's print this thing let's run this and I'll show you see this also give you the union of these set but Jenny would be only one time only all the elements in both in set one set two but Jenny is only one time it will give so this also can perform Union right now for multiple set also we can perform these operation like I have one more set set three so we can also perform Union of all the set like we can write set three this is also fine set four set five set six something like this multiple set also we can do this thing on multiple sets right okay let's run this and I'll show you what output you will get here let's run this and see Union of all the three set you are getting right pradeep is also like pradeep and uncle is also there same if you want to do this I want to apply this Union on multiple set so you can invoke the union method on one set and all the other set we can pass in argument like two I'm passing set two set three so let's comment this out and run this and see what output you will get here see it will give you Union of these three set so multiple set also we can invoke these methods and operators but see behavior is same both the this method and this operator but there is a subtle difference in this for this operator both the operand should be set and for this dot Union method you can invoke this on set but in argument you can pass any I travel that like you can pass a tuple you can pass the list and this will convert into first set and then perform Union on that I travel you get it no let me just show you see if I do set one dot Union rather than these set I'll pass here suppose a tuple so I'm passing double here in there I'm passing name Mohan and I'm passing like Jenny two names only I am passing so it will convert this Tuple first into set and then apply Union method on this let's run this and see what output we are getting Jenny sham RAM and Mohan because in set one we have Ram sham Jenny and here we have Mohan and Jenny so Jenny in both the set so it will take only one time Jenny and Mohan it will take care so this is what union but in this case this is not allowed see set one and here I want to pass a tuple the same Tuple okay let's comment this out and remove this now let's run this and I'll show you what output you will get see the error unsupported operand type for this operator set and Tuple because this is set resistable so for this operator both the operand should be set but for this this is not a case you can invoke this on set but in argument you can pass any activate but like list or double or dictionary something like this right now we have update also like if you want to update these sets because set items we cannot change but we can change the com set we can update the set so we have a method Union update using that we can update any set so if I you know call that method so this that if you want to update like set one so set one dot update and here you can pass like if I want to pass set 2 suppose pass set two so it will update set one it will add the element of set 2 to set one but note those Elements which are already present in set one no duplicacy right okay let's print this set one now let's run this and see set one it has updated set one Whatever set in set two it has added Jenny Gia and Akash so G and Akash has been added because Jenny is already in set one so this is now set when it has updated set one if you want to update set two so here you can call this update on set two so here set two and in bracket you can pass whatever you want to update rather than set if I pass here like I'm passing a list of names and I want to update with like the I have Jenny I have like Mohan here and now we'll check what is set one so see okay see now you must be thinking Jenny is two times but no here we have J is capital and here we have J small so this Jenny and this 10 is different okay sensitive if I write here capital j then this time it will add genuin only one time engine so like this we can update any set set one or set or whatever set you want to update just pass values here or set also you can pass right so this is Union update of any set right okay now you got what is Union what is Union update how you can do this thing or with the help of operator also we can do update like set one if you want to update set one set one this operator equal to set 2. it also will update set one it will add value of set 2 to set one and after that we can print set one so this is also allowed or don't update method is also allowed you can try out this thing also right now we'll see what is intersection okay we are having three set now same that method will also be invoked on one of the set like set one we have dot intersection method intersection and in this I am passing set 2. so in bracket you can pass any other set right or you can write on set two load in the in the section set one okay and let's print this what intersection what output it will give just think and then run if you are getting the same answer or not see it will be only Jenny because intersection will give which is common in both so Jenny is common so it will give Jenny only right okay we can pass this on multiple set also comma set three so at this time what you will get C an empty set because set one in in three set what is common nothing is common in all the three set so that would be an empty set if we have Jenny in this set three also then it will give Jenny okay common in three sets so in multiple set also we can call this intersection method now we have an operator also which with help of operator also we can do intersection and that operator is set one and set two this is also intersection with the help of operator also you can perform intersection right but the same thing the operand of this operator would be both set and set but here you can pass any iterable also right let me just run this and it will give you gen same output right and if I pass here like intersection rather than set in intersection I am passing a list okay I am passing only Mohan and Shiva let's run this and see it is an empty set because set one ram sham Jenny and I want intersection with these values so this list would be converted first of all set so this is set having Mohan and Shiva nothing is common in these set so it will give an empty set right so here we can pass any High treble like list dictionary eatable but in this Opera if you are using this operator to perform intersection then this is not allowed both operands should be set and so multiple same you can do legs and set three this is also allowed here right okay you get what is an intersection now let's uh talk about intersection update that would update any set so if you want to update any set using intersection we have a method intersection update so let's do that thing also what will do if you want to update set one so set one dot we have a method intersection of data as you can see here so you can choose this method and You Break It We can pass another set say two okay fine so let's print now set one because set one has been updated so this will not return anything that is why we are not printing here only it will not print here so you have to print set one separately let's run this and since set when we have genuine so it will update set one having only those item which are common in set 1 and set two so in set one set two which we have common Jenny so it will update set one with Jenny so in set one we have now only gen right but in set to we have Jenny G and Akash right so this is what intersection update if you want to update set two so here on set two we can call intersection update right and here we can write set one so now set one would be as it is but if you print here set two that would have been updated so let's run this and see this is set one Ram Journey and Akash and set two is now genuine so it will update set to retaining those values only which are common in set one and set two right rather than this set here you can pass any other value if you want to intersection with a list or you know like this Mohan and Shiva so let's suppose pass this thing here and now let's run this now first set one is this but set two is empty set because set 2 is having Jenny gr cast but we are intersection we are doing intersection update with Mohan and Shiva so there is nothing common in these two so set two would be an empty set now right so this is intersection update so I hope you got these operations on set in the next we will see something more about sex so now I'll see you in the next video till then bye take care